{"version":3,"file":"webmolkit.js","mappings":"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A,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEM,KAAAC,UACP,CACC,GAAI,CAAC,IAAI,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,IAAI,IAAI,KAAM,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KACvF,CAAC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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK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","sources":["webpack://WebMolKit/webpack/bootstrap","webpack://WebMolKit/webpack/runtime/define property getters","webpack://WebMolKit/webpack/runtime/hasOwnProperty shorthand","webpack://WebMolKit/webpack/runtime/make namespace object","webpack://WebMolKit/./src/util/Vec.ts","webpack://WebMolKit/./src/util/Matrix.ts","webpack://WebMolKit/./src/util/Triangulation2D.ts","webpack://WebMolKit/./src/util/Geom.ts","webpack://WebMolKit/./src/util/XML.ts","webpack://WebMolKit/./src/util/dom.ts","webpack://WebMolKit/./src/util/util.ts","webpack://WebMolKit/./src/mol/Chemistry.ts","webpack://WebMolKit/./src/mol/Graph.ts","webpack://WebMolKit/./src/calc/ResonanceRemover.ts","webpack://WebMolKit/./src/mol/BondArtifact.ts","webpack://WebMolKit/./src/mol/PolymerBlock.ts","webpack://WebMolKit/./src/mol/SketchUtil.ts","webpack://WebMolKit/./src/mol/ForeignMolecule.ts","webpack://WebMolKit/./src/mol/QueryUtil.ts","webpack://WebMolKit/./src/mol/MolUtil.ts","webpack://WebMolKit/./src/mol/CoordUtil.ts","webpack://WebMolKit/./src/mol/StereoGroup.ts","webpack://WebMolKit/./src/io/MDLReader.ts","webpack://WebMolKit/./src/io/MDLWriter.ts","webpack://WebMolKit/./src/io/MoleculeStream.ts","webpack://WebMolKit/./src/mol/Molecule.ts","webpack://WebMolKit/./src/ds/DataSheet.ts","webpack://WebMolKit/./src/aspect/Aspect.ts","webpack://WebMolKit/./src/aspect/AspectList.ts","webpack://WebMolKit/./src/aspect/AssayProvenance.ts","webpack://WebMolKit/./src/aspect/BayesianSource.ts","webpack://WebMolKit/./src/aspect/BayesianPrediction.ts","webpack://WebMolKit/./src/aspect/MeasurementData.ts","webpack://WebMolKit/./src/aspect/BinaryData.ts","webpack://WebMolKit/./src/rxn/ExperimentMeta.ts","webpack://WebMolKit/./src/rxn/QuantityCalc.ts","webpack://WebMolKit/./src/gfx/Rendering.ts","webpack://WebMolKit/./src/gfx/ArrangeMolecule.ts","webpack://WebMolKit/./src/gfx/ArrangeExperiment.ts","webpack://WebMolKit/./src/gfx/MetaVector.ts","webpack://WebMolKit/./src/aspect/Experiment.ts","webpack://WebMolKit/./src/aspect/Mixture.ts","webpack://WebMolKit/./src/mol/DotPath.ts","webpack://WebMolKit/./src/mol/PseudoEmbedding.ts","webpack://WebMolKit/./src/util/FitRotatedEllipse.ts","webpack://WebMolKit/./src/gfx/FontData.ts","webpack://WebMolKit/./src/gfx/ArrangeMeasurement.ts","webpack://WebMolKit/./src/gfx/DrawMolecule.ts","webpack://WebMolKit/./src/gfx/DrawExperiment.ts","webpack://WebMolKit/./src/aspect/SARTable.ts","webpack://WebMolKit/./src/mol/Stereochemistry.ts","webpack://WebMolKit/./src/mol/MetaMolecule.ts","webpack://WebMolKit/./src/calc/CircularFingerprints.ts","webpack://WebMolKit/./src/calc/BayesianModel.ts","webpack://WebMolKit/./src/calc/BuildSMILES.ts","webpack://WebMolKit/./src/io/DataSheetStream.ts","webpack://WebMolKit/./src/data/AbbrevContainer.ts","webpack://WebMolKit/./res/data/templates/rings.ds","webpack://WebMolKit/./res/data/templates/termgrp.ds","webpack://WebMolKit/./res/data/templates/funcgrp.ds","webpack://WebMolKit/./res/data/templates/protgrp.ds","webpack://WebMolKit/./res/data/templates/nonplrings.ds","webpack://WebMolKit/./res/data/templates/largerings.ds","webpack://WebMolKit/./res/data/templates/crownethers.ds","webpack://WebMolKit/./res/data/templates/ligmonodent.ds","webpack://WebMolKit/./res/data/templates/ligbident.ds","webpack://WebMolKit/./res/data/templates/ligtrident.ds","webpack://WebMolKit/./res/data/templates/ligmultident.ds","webpack://WebMolKit/./res/data/templates/cagecmplx.ds","webpack://WebMolKit/./res/data/templates/aminoacids.ds","webpack://WebMolKit/./res/data/templates/biomolecules.ds","webpack://WebMolKit/./res/data/templates/saccharides.ds","webpack://WebMolKit/./src/data/FormatList.ts","webpack://WebMolKit/./src/data/OntologyTree.ts","webpack://WebMolKit/./res/data/ontology/units.onto","webpack://WebMolKit/./src/util/Theme.ts","webpack://WebMolKit/./src/ui/Tooltip.ts","webpack://WebMolKit/./src/dialog/Dialog.ts","webpack://WebMolKit/./src/ui/Widget.ts","webpack://WebMolKit/./src/ui/ButtonView.ts","webpack://WebMolKit/./src/sketcher/MoleculeActivity.ts","webpack://WebMolKit/./src/ui/ButtonBank.ts","webpack://WebMolKit/./src/sketcher/MetalLigate.ts","webpack://WebMolKit/./src/sketcher/TemplateFusion.ts","webpack://WebMolKit/./res/img/actions/MainUndo.svg","webpack://WebMolKit/./res/img/actions/AtomPlus.svg","webpack://WebMolKit/./res/img/actions/AtomMinus.svg","webpack://WebMolKit/./res/img/actions/BondOne.svg","webpack://WebMolKit/./res/img/actions/BondTwo.svg","webpack://WebMolKit/./res/img/actions/BondThree.svg","webpack://WebMolKit/./res/img/actions/BondZero.svg","webpack://WebMolKit/./res/img/actions/BondUp.svg","webpack://WebMolKit/./res/img/actions/BondDown.svg","webpack://WebMolKit/./res/img/actions/BondSquig.svg","webpack://WebMolKit/./src/sketcher/CommandBank.ts","webpack://WebMolKit/./res/img/actions/MainRedo.svg","webpack://WebMolKit/./res/img/actions/MainZoomIn.svg","webpack://WebMolKit/./res/img/actions/MainZoomOut.svg","webpack://WebMolKit/./res/img/actions/MainZoomFit.svg","webpack://WebMolKit/./res/img/actions/MainSelSide.svg","webpack://WebMolKit/./res/img/actions/MainSelAll.svg","webpack://WebMolKit/./res/img/actions/MainSelNone.svg","webpack://WebMolKit/./res/img/actions/MainDelete.svg","webpack://WebMolKit/./res/img/actions/MainCut.svg","webpack://WebMolKit/./res/img/actions/MainCopy.svg","webpack://WebMolKit/./res/img/actions/MainPaste.svg","webpack://WebMolKit/./res/img/actions/MainAtom.svg","webpack://WebMolKit/./res/img/actions/MainBond.svg","webpack://WebMolKit/./res/img/actions/MainSelect.svg","webpack://WebMolKit/./res/img/actions/MainMove.svg","webpack://WebMolKit/./res/img/actions/AtomAbbrev.svg","webpack://WebMolKit/./res/img/actions/AtomSBlock.svg","webpack://WebMolKit/./res/img/actions/AtomPBlock.svg","webpack://WebMolKit/./res/img/actions/AtomDBlock.svg","webpack://WebMolKit/./res/img/actions/AtomFBlock.svg","webpack://WebMolKit/./res/img/actions/AtomNoble.svg","webpack://WebMolKit/./res/img/actions/BondFour.svg","webpack://WebMolKit/./res/img/actions/BondQAny.svg","webpack://WebMolKit/./res/img/actions/BondAddTwo.svg","webpack://WebMolKit/./res/img/actions/BondInsert.svg","webpack://WebMolKit/./res/img/actions/BondSwitch.svg","webpack://WebMolKit/./res/img/actions/BondRotate.svg","webpack://WebMolKit/./res/img/actions/BondLinear.svg","webpack://WebMolKit/./res/img/actions/BondTrigonal.svg","webpack://WebMolKit/./res/img/actions/BondTetra1.svg","webpack://WebMolKit/./res/img/actions/BondTetra2.svg","webpack://WebMolKit/./res/img/actions/BondSqPlan.svg","webpack://WebMolKit/./res/img/actions/BondOcta1.svg","webpack://WebMolKit/./res/img/actions/BondOcta2.svg","webpack://WebMolKit/./res/img/actions/BondMetalLigate.svg","webpack://WebMolKit/./res/img/actions/BondArtifactPath.svg","webpack://WebMolKit/./res/img/actions/BondArtifactRing.svg","webpack://WebMolKit/./res/img/actions/BondArtifactArene.svg","webpack://WebMolKit/./res/img/actions/BondArtifactClear.svg","webpack://WebMolKit/./res/img/actions/BondPolymer.svg","webpack://WebMolKit/./res/img/actions/SelectionGrow.svg","webpack://WebMolKit/./res/img/actions/SelectionShrink.svg","webpack://WebMolKit/./res/img/actions/SelectionChain.svg","webpack://WebMolKit/./res/img/actions/SelectionSmRing.svg","webpack://WebMolKit/./res/img/actions/SelectionRingBlk.svg","webpack://WebMolKit/./res/img/actions/SelectionCurElement.svg","webpack://WebMolKit/./res/img/actions/MainSelPrev.svg","webpack://WebMolKit/./res/img/actions/MainSelNext.svg","webpack://WebMolKit/./res/img/actions/SelectionToggle.svg","webpack://WebMolKit/./res/img/actions/SelectionUncurrent.svg","webpack://WebMolKit/./res/img/actions/MoveJoin.svg","webpack://WebMolKit/./res/img/actions/MainNew.svg","webpack://WebMolKit/./res/img/actions/AtomInline.svg","webpack://WebMolKit/./res/img/actions/AtomFormula.svg","webpack://WebMolKit/./res/img/actions/AtomExpandAbbrev.svg","webpack://WebMolKit/./res/img/actions/AtomClearAbbrev.svg","webpack://WebMolKit/./res/img/actions/MoveUp.svg","webpack://WebMolKit/./res/img/actions/MoveDown.svg","webpack://WebMolKit/./res/img/actions/MoveLeft.svg","webpack://WebMolKit/./res/img/actions/MoveRight.svg","webpack://WebMolKit/./res/img/actions/MoveUpLots.svg","webpack://WebMolKit/./res/img/actions/MoveDownLots.svg","webpack://WebMolKit/./res/img/actions/MoveLeftLots.svg","webpack://WebMolKit/./res/img/actions/MoveRightLots.svg","webpack://WebMolKit/./res/img/actions/MoveUpFar.svg","webpack://WebMolKit/./res/img/actions/MoveDownFar.svg","webpack://WebMolKit/./res/img/actions/MoveLeftFar.svg","webpack://WebMolKit/./res/img/actions/MoveRightFar.svg","webpack://WebMolKit/./res/img/actions/MoveRotP01.svg","webpack://WebMolKit/./res/img/actions/MoveRotM01.svg","webpack://WebMolKit/./res/img/actions/MoveRotP05.svg","webpack://WebMolKit/./res/img/actions/MoveRotM05.svg","webpack://WebMolKit/./res/img/actions/MoveRotP15.svg","webpack://WebMolKit/./res/img/actions/MoveRotM15.svg","webpack://WebMolKit/./res/img/actions/MoveRotP30.svg","webpack://WebMolKit/./res/img/actions/MoveRotM30.svg","webpack://WebMolKit/./res/img/actions/MoveHFlip.svg","webpack://WebMolKit/./res/img/actions/MoveVFlip.svg","webpack://WebMolKit/./res/img/actions/MoveShrink.svg","webpack://WebMolKit/./res/img/actions/MoveGrow.svg","webpack://WebMolKit/./src/sketcher/ContextSketch.ts","webpack://WebMolKit/./src/sketcher/DrawCanvas.ts","webpack://WebMolKit/./src/sketcher/GeomWidget.ts","webpack://WebMolKit/./src/ui/ClipboardProxy.ts","webpack://WebMolKit/./src/ui/OptionList.ts","webpack://WebMolKit/./src/ui/TabBar.ts","webpack://WebMolKit/./src/sketcher/ExtraFieldsWidget.ts","webpack://WebMolKit/./src/sketcher/PeriodicTableWidget.ts","webpack://WebMolKit/./src/sketcher/QueryFieldsWidget.ts","webpack://WebMolKit/./src/sketcher/EditAtom.ts","webpack://WebMolKit/./src/sketcher/EditBond.ts","webpack://WebMolKit/./src/sketcher/EditPolymer.ts","webpack://WebMolKit/./src/sketcher/TemplateBank.ts","webpack://WebMolKit/./res/img/actions/GenericAccept.svg","webpack://WebMolKit/./res/img/actions/TemplatePrev.svg","webpack://WebMolKit/./res/img/actions/TemplateNext.svg","webpack://WebMolKit/./src/sketcher/ToolBank.ts","webpack://WebMolKit/./res/img/actions/ToolSelect.svg","webpack://WebMolKit/./res/img/actions/ToolRotate.svg","webpack://WebMolKit/./res/img/actions/ToolPan.svg","webpack://WebMolKit/./res/img/actions/ToolDrag.svg","webpack://WebMolKit/./res/img/actions/ToolErasor.svg","webpack://WebMolKit/./res/img/actions/ToolRing.svg","webpack://WebMolKit/./res/img/actions/ToolArom.svg","webpack://WebMolKit/./src/ui/EmbedReaction.ts","webpack://WebMolKit/./src/sketcher/Sketcher.ts","webpack://WebMolKit/./src/dialog/EditCompound.ts","webpack://WebMolKit/./src/gfx/AxisLabeller.ts","webpack://WebMolKit/./src/ui/EmbedChemistry.ts","webpack://WebMolKit/./src/ui/EmbedCollection.ts","webpack://WebMolKit/./src/ui/EmbedMolecule.ts","webpack://WebMolKit/./src/ui/Popup.ts","webpack://WebMolKit/./src/ui/MenuProxy.ts","webpack://WebMolKit/./src/util/Random.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n    WebMolKit\n\n    (c) 2010-2017 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing */\n\n/*\n\tFunctions that operate on arrays, for performing routine tasks.\n*/\n\nexport class Vec\n{\n\tpublic static isBlank(arr:any[]):boolean {return arr == null || arr.length == 0;}\n\tpublic static notBlank(arr:any[]):boolean {return arr != null && arr.length > 0;}\n\tpublic static safeArray<T>(arr:T[]):T[] {return arr == null ? [] : arr;}\n\tpublic static len(arr:any[]):number {return arr == null ? 0 : arr.length;} // (can't use \"length\" because it's reserved)\n\tpublic static arrayLength(arr:any[]):number {return arr == null ? 0 : arr.length;} // (unwieldy)\n\n\tpublic static anyTrue(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return false;\n\t\tfor (let v of arr) if (v) return true;\n\t\treturn false;\n\t}\n\tpublic static allTrue(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return true;\n\t\tfor (let v of arr) if (!v) return false;\n\t\treturn true;\n\t}\n\n\tpublic static anyFalse(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return false;\n\t\tfor (let v of arr) if (!v) return true;\n\t\treturn false;\n\t}\n\tpublic static allFalse(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return true;\n\t\tfor (let v of arr) if (v) return false;\n\t\treturn true;\n\t}\n\n\t// lambda versions of array scanning\n\tpublic static iterAnyTrue<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (callback(v)) return true;\n\t\treturn false;\n\t}\n\tpublic static iterAllTrue<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (!callback(v)) return false;\n\t\treturn true;\n\t}\n\tpublic static iterAnyFalse<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (!callback(v)) return true;\n\t\treturn false;\n\t}\n\tpublic static iterAllFalse<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (callback(v)) return false;\n\t\treturn true;\n\t}\n\n\t// convenience index swapping\n\tpublic static swap(arr:any[], idx1:number, idx2:number):void\n\t{\n\t\tlet v = arr[idx1];\n\t\tarr[idx1] = arr[idx2];\n\t\tarr[idx2] = v;\n\t}\n\n\t// make a shallow copy of the array, or turn it into a blank array if null\n\tpublic static duplicate<T>(arr:T[]):T[]\n\t{\n\t\treturn arr == null ? [] : arr.slice(0);\n\t}\n\n\t// null-tolerant array concatenation; always returns an array, always at least a shallow copy\n\tpublic static append<T>(arr:T[], item:T):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [item];\n\t\tarr = arr.slice(0);\n\t\tarr.push(item);\n\t\treturn arr;\n\t}\n\tpublic static prepend<T>(arr:T[], item:T):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [item];\n\t\tarr = arr.slice(0);\n\t\tarr.unshift(item);\n\t\treturn arr;\n\t}\n\tpublic static concat<T>(arr1:T[], arr2:T[]):T[]\n\t{\n\t\tif (arr1 == null && arr2 == null) return [];\n\t\tif (arr1 == null) return arr2.slice(0);\n\t\tif (arr2 == null) return arr1.slice(0);\n\t\treturn arr1.concat(arr2);\n\t}\n\n\t// array removal, with shallow-copy duplication\n\tpublic static remove<T>(arr:T[], idx:number):T[]\n\t{\n\t\tarr = arr.slice(0);\n\t\tarr.splice(idx, 1);\n\t\treturn arr;\n\t}\n\n\t// squishes a 2D array down to a single consecutive flattened vector\n\tpublic static flatten<T>(mtx:T[][]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let vec of mtx) ret.push(...vec);\n\t\treturn ret;\n\t}\n\n\t// assuming the input is matrix-like, swaps the first two axes, i.e. {m,n} => {n,m}\n\tpublic static transpose<T>(mtx:T[][]):T[][]\n\t{\n\t\tlet sz1 = mtx.length, sz2 = mtx[0].length;\n\t\tlet ret:T[][] = Vec.anyArray(null, sz2);\n\t\tfor (let j = 0; j < sz2; j++)\n\t\t{\n\t\t\tret[j] = Vec.anyArray(null, sz1);\n\t\t\tfor (let i = 0; i < sz1; i++) ret[j][i] = mtx[i][j];\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// null-tolerant comparison\n\tpublic static equals(arr1:any[], arr2:any[]):boolean\n\t{\n\t\tif (arr1 == null && arr2 == null) return true;\n\t\tif (arr1 == null || arr2 == null) return false;\n\t\tif (arr1.length != arr2.length) return false;\n\t\tfor (let n = 0; n < arr1.length; n++) if (arr1[n] != arr2[n]) return false;\n\t\treturn true;\n\t}\n\tpublic static equivalent(arr1:any[], arr2:any[]):boolean\n\t{\n\t\tconst len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n\t\tif (len1 != len2) return false;\n\t\tfor (let n = 0; n < len1; n++) if (arr1[n] != arr2[n]) return false;\n\t\treturn true;\n\t}\n\n\t// comparison that can be used for sorting; -1 if arr1<arr2, +1 if arr1>arr2, 0 if equal\n\tpublic static compareTo<T>(arr1:T[], arr2:T[]):number\n\t{\n\t\tconst sz = Math.max(arr1.length, arr2.length);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (arr1[n] < arr2[n]) return -1;\n\t\t\tif (arr1[n] > arr2[n]) return 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic static booleanArray(val:boolean, sz:number):boolean[]\n\t{\n\t\tlet arr:boolean[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static numberArray(val:number, sz:number):number[]\n\t{\n\t\tlet arr:number[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static stringArray(val:string, sz:number):string[]\n\t{\n\t\tlet arr:string[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static anyArray(val:any, sz:number):any[]\n\t{\n\t\tlet arr:any[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static genericArray<T>(val:T, sz:number):T[]\n\t{\n\t\tlet arr:T[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\n\t// returns an array of blank arrays\n\tpublic static genericBlankArrays<T>(sz:number):T[][]\n\t{\n\t\tlet arr:T[][] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) arr[n] = [];\n\t\treturn arr;\n\t}\n\n\tpublic static numberMatrix(val:number, dim1:number, dim2:number):number[][]\n\t{\n\t\tlet mtx:number[][] = new Array(dim1);\n\t\tfor (let n = 0; n < dim1; n++) mtx[n] = Vec.numberArray(val, dim2);\n\t\treturn mtx;\n\t}\n\n\t// creates an array of given size, using a lambda\n\tpublic static funcArray<T>(sz:number, func:(idx?:number) => T):T[]\n\t{\n\t\tlet arr:T[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) arr[n] = func(n);\n\t\treturn arr;\n\t}\n\n\tpublic static first<T>(arr:T[]) {return arr == null || arr.length == 0 ? null : arr[0];}\n\tpublic static last<T>(arr:T[]) {return arr == null || arr.length == 0 ? null : arr[arr.length - 1];}\n\n\tpublic static min(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return Number.MAX_VALUE;\n\t\tlet v = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) v = Math.min(v, arr[n]);\n\t\treturn v;\n\t}\n\tpublic static max(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return Number.MIN_VALUE;\n\t\tlet v = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) v = Math.max(v, arr[n]);\n\t\treturn v;\n\t}\n\tpublic static idxMin(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return -1;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < arr.length; n++) if (arr[n] < arr[idx]) idx = n;\n\t\treturn idx;\n\t}\n\tpublic static idxMax(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return -1;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < arr.length; n++) if (arr[n] > arr[idx]) idx = n;\n\t\treturn idx;\n\t}\n\n\tpublic static range(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return 0;\n\t\tlet lo = arr[0], hi = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++)\n\t\t{\n\t\t\tif (arr[n] < lo) lo = arr[n];\n\t\t\tif (arr[n] > hi) hi = arr[n];\n\t\t}\n\t\treturn hi - lo;\n\t}\n\n\tpublic static reverse<T>(arr:T[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = arr.length - 1; n >= 0; n--) ret.push(arr[n]);\n\t\treturn ret;\n\t}\n\n\tpublic static identity0(sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n;\n\t\treturn ret;\n\t}\n\n\tpublic static identity1(sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n + 1;\n\t\treturn ret;\n\t}\n\n\tpublic static identityN(start:number, sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n + start;\n\t\treturn ret;\n\t}\n\n\tpublic static notMask(mask:boolean[]):boolean[]\n\t{\n\t\tlet ret:boolean[] = new Array(mask.length);\n\t\tfor (let n = mask.length - 1; n >= 0; n--) ret[n] = !mask[n];\n\t\treturn ret;\n\t}\n\n\tpublic static idxGet<T>(arr:T[], idx:number[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = 0; n < idx.length; n++) ret.push(arr[idx[n]]);\n\t\treturn ret;\n\t}\n\n\tpublic static maskCount(mask:boolean[]):number\n\t{\n\t\tif (!mask) return 0;\n\t\tlet c = 0;\n\t\tfor (let n = mask.length - 1; n >= 0; n--) if (mask[n]) c++;\n\t\treturn c;\n\t}\n\n\t// converts the mask into indices (0-based)\n\tpublic static maskIdx(mask:boolean[]):number[]\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n = 0; n < mask.length; n++) if (mask[n]) idx.push(n);\n\t\treturn idx;\n\t}\n\n\t// converts the index into a mask (0-based index)\n\tpublic static idxMask(idx:number[], sz:number):boolean[]\n\t{\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n of idx) mask[n] = true;\n\t\treturn mask;\n\t}\n\n\t// converts a mask into an index map: if mask[n] is true, then idx[n] is a 0-based index into an equivalent array composed only\n\t// of entries for which mask is true; for the rest, the value is -1\n\tpublic static maskMap(mask:boolean[]):number[]\n\t{\n\t\tlet ret:number[] = [];\n\t\tfor (let n = 0, pos = 0; n < mask.length; n++) ret.push(mask[n] ? pos++ : -1);\n\t\treturn ret;\n\t}\n\n\t// returns members of an array for which the value of mask is true\n\tpublic static maskGet<T>(arr:T[], mask:boolean[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = 0, p = 0; n < arr.length; n++) if (mask[n]) ret.push(arr[n]);\n\t\treturn ret;\n\t}\n\n\t// return a mask of elements which are equal on both sides (with unit extension on the right)\n\tpublic static maskEqual(arr1:any[], val:any):boolean[]\n\t{\n\t\tlet ret:boolean[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] == arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] == val);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static sum(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return 0;\n\t\tlet t = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) t += arr[n];\n\t\treturn t;\n\t}\n\n\tpublic static add(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] + arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] + (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static sub(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] - arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] - (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static mul(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] * arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] * (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static neg(arr:number[]):number[]\n\t{\n\t\tlet ret = arr.slice(0);\n\t\tfor (let n = ret.length - 1; n >= 0; n--) ret[n] *= -1;\n\t\treturn ret;\n\t}\n\n\t// bulk direct operations\n\tpublic static setTo<T>(arr:T[], val:T):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] = val;}\n\tpublic static addTo(arr:number[], val:number):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] += val;}\n\tpublic static mulBy(arr:number[], val:number):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] *= val;}\n\n\tpublic static setToArray<T>(arr:T[], val:T[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] = val[n];}\n\tpublic static addToArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] += val[n];}\n\tpublic static subFromArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] -= val[n];}\n\tpublic static mulByArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] *= val[n];}\n\tpublic static divByArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] /= val[n];}\n\n\tpublic static idxSort(arr:any[]):number[]\n\t{\n\t\tlet idx:number[] = new Array(arr.length);\n\t\tfor (let n = 0; n < arr.length; n++) idx[n] = n;\n\t\tidx.sort((a:number, b:number):number => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n\t\treturn idx;\n\t}\n\n\t// for some reason the default sorter has a dubious habit of doing a string comparison; this function is numeric\n\tpublic static sort(arr:number[]):void\n\t{\n\t\tarr.sort((v1:number, v2:number):number => v1 - v2);\n\t}\n\tpublic static sorted(arr:number[]):number[]\n\t{\n\t\tarr = arr.slice(0);\n\t\tthis.sort(arr);\n\t\treturn arr;\n\t}\n\n\t// returns only the unique entries, sorted\n\tpublic static sortedUnique<T>(arr:T[]):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [];\n\t\tlet unique = Vec.uniqueUnstable(arr);\n\t\tif (typeof arr[0] == 'number') this.sort((unique as any) as number[]); else unique.sort();\n\t\treturn unique;\n\t}\n\n\t// uniqueness, in its various permutations\n\tpublic static uniqueUnstable<T>(arr:T[]):T[]\n\t{\n\t\treturn Array.from(new Set(arr)); // order is basically random\n\t}\n\tpublic static uniqueStable<T>(arr:T[]):T[]\n\t{\n\t\tlet set = new Set<T>(arr), ret:T[] = [];\n\t\tfor (let v of arr) if (set.has(v)) {ret.push(v); set.delete(v);}\n\t\treturn ret; // original order is preserved, with non-first entries removed*/\n\t}\n\tpublic static maskUnique(arr:any[]):boolean[]\n\t{\n\t\tlet set = new Set<any>(arr), ret = this.booleanArray(false, arr.length);\n\t\tfor (let n = 0; n < arr.length; n++) if (set.has(arr[n])) {ret[n] = true; set.delete(arr[n]);}\n\t\treturn ret;\n\t}\n\tpublic static idxUnique(arr:any[]):number[]\n\t{\n\t\tlet set = new Set<any>(arr), ret:number[] = [];\n\t\tfor (let n = 0; n < arr.length; n++) if (set.has(arr[n])) {ret.push(n); set.delete(arr[n]);}\n\t\treturn ret; // index of first occurence in original array\n\t}\n\n\t// for a given array, ensures that certain value are not present, and will eliminate them when discovered; original order preserved;\n\t// null-tolerant, and may return the original array if unchanged\n\t// note: O(N^2); may improve this at a later date\n\tpublic static exclude<T>(arr:T[], excl:T[]):T[]\n\t{\n\t\tconst sz = Vec.len(arr);\n\t\tif (sz == 0) return [];\n\t\tlet mask:boolean[] = new Array(sz);\n\t\tlet count = 0;\n\t\tfor (let n = 0; n < arr.length; n++)\n\t\t{\n\t\t\tmask[n] = excl.indexOf(arr[n]) < 0;\n\t\t\tif (mask[n]) count++;\n\t\t}\n\t\tif (count == sz) return arr;\n\t\treturn Vec.maskGet(arr, mask);\n\t}\n}\n\n/*\n\tPermutation functions, operating explicitly on arrays of consecutive integers.\n*/\n\nexport class Permutation\n{\n\t// for a set of indices that are assumed to be unique and in the range {0 .. N-1}, returns their parity, i.e.\n\t// the number of swaps used to permute it from the identity; if the list is sorted, the result is 0\n\t// NOTE: parityPerms(..) returns the total number of swaps, whereas parityIdentity(..) returns either 0 or 1\n\tpublic static parityPerms(idx:number[]):number\n\t{\n\t\tlet v = Vec.booleanArray(false, idx.length);\n\t\tlet p = 0;\n\t\tfor (let i = idx.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (v[i]) p++;\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet j = i;\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tj = idx[j];\n\t\t\t\t\tv[j] = true;\n\t\t\t\t}\n\t\t\t\twhile (j != i);\n\t\t\t}\n\t\t}\n\t\treturn p;\n\t}\n\tpublic static parityIdentity(idx:number[]):number\n\t{\n\t\treturn this.parityPerms(idx) & 1;\n\t}\n\n\t// parity methods that operate on arbitrary integers; returns 0 for an even number of swaps, 1 for odd\n\t// NOTE: this is rather inefficient for non-tiny arrays; could at least code up some more special cases\n\tpublic static parityOrder(src:number[]):number\n\t{\n\t\tif (src.length <= 1) return 0;\n\t\telse if (src.length == 2) return src[0] < src[1] ? 0 : 1;\n\t\telse if (src.length == 3)\n\t\t{\n\t\t\tlet p = 1;\n\t\t\tif (src[0] < src[1]) p++;\n\t\t\tif (src[0] < src[2]) p++;\n\t\t\tif (src[1] < src[2]) p++;\n\t\t\treturn p & 1;\n\t\t}\n\t\telse if (src.length == 4)\n\t\t{\n\t\t\tlet p = 0;\n\t\t\tif (src[0] < src[1]) p++;\n\t\t\tif (src[0] < src[2]) p++;\n\t\t\tif (src[0] < src[3]) p++;\n\t\t\tif (src[1] < src[2]) p++;\n\t\t\tif (src[1] < src[3]) p++;\n\t\t\tif (src[2] < src[3]) p++;\n\t\t\treturn p & 1;\n\t\t}\n\n\t\tlet idx:number[] = [], sorted = src.slice(0);\n\t\tsorted.sort();\n\t\tfor (let n = 0; n < src.length; n++) idx.push(sorted.indexOf(src[n]));\n\t\treturn this.parityIdentity(idx);\n\t}\n\n\t/*\n\t\tSmall permutations: up to a certain size, it makes sense to just hardcode them.\n\n\t\tNote that in each case, the identity permutation is guaranteed to be first. The remaining permutations\n\t\tare not guaranteed to be in any particular order.\n\t*/\n\n\tprivate static PERM1 = [[0]];\n\tprivate static PERM2 = [[0, 1], [1, 0]];\n\tprivate static PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\n\tprivate static PERM4 =\n\t[\n\t\t[0,1,2,3], [0,1,3,2], [0,2,1,3], [0,2,3,1], [0,3,1,2], [0,3,2,1],\n\t\t[1,0,2,3], [1,0,3,2], [1,2,0,3], [1,2,3,0], [1,3,0,2], [1,3,2,0],\n\t\t[2,0,1,3], [2,0,3,1], [2,1,0,3], [2,1,3,0], [2,3,0,1], [2,3,1,0],\n\t\t[3,0,1,2], [3,0,2,1], [3,1,0,2], [3,1,2,0], [3,2,0,1], [3,2,1,0]\n\t];\n\n\tpublic static SMALL_PERMS = 4;\n\n\tpublic static smallPermutation(sz:number):number[][]\n\t{\n\t\tif (sz == 1) return this.PERM1;\n\t\telse if (sz == 2) return this.PERM2;\n\t\telse if (sz == 3) return this.PERM3;\n\t\telse if (sz == 4) return this.PERM4;\n\t\telse return null;\n\t}\n\n\t// cache: intermediate permutation sizes are cached; note that anything significantly big really should not be used\n\tprivate static MAX_CACHE = 8;\n\tprivate static PERM_CACHE:number[][][] = [];\n\n\t// returns all of the permutations up to a certain size; note that this is slow and scales exponentially: use sparingly\n\tpublic static allPermutations(sz:number):number[][]\n\t{\n\t\tif (sz <= this.SMALL_PERMS) return this.smallPermutation(sz);\n\t\twhile (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS) this.PERM_CACHE.push(null);\n\t\tif (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null) return this.PERM_CACHE[sz - this.SMALL_PERMS];\n\n\t\tlet nperms = 1;\n\t\tfor (let n = 2; n <= sz; n++) nperms *= n;\n\t\tlet perms:number[][] = [];\n\n\t\t// NOTE: for sure not the fastest way to do it, but it gets the job done; the total number of iterations is actually\n\t\t// exponential, rather than factorial\n\n\t\tlet idx = Vec.identity0(sz);\n\t\tperms.push(idx.slice(0));\n\t\tlet mask = Vec.booleanArray(false, sz);\n\n\t\tfor (let n = 1; n < nperms; n++)\n\t\t{\n\t\t\tnonunique: while (idx[0] < sz)\n\t\t\t{\n\t\t\t\t// increment the \"digits\"\n\t\t\t\tidx[sz - 1]++;\n\t\t\t\tfor (let i = sz - 1; i > 0; i --)\n\t\t\t\t{\n\t\t\t\t\tif (idx[i] < sz) break;\n\t\t\t\t\tidx[i] = 0;\n\t\t\t\t\tidx[i - 1]++;\n\t\t\t\t}\n\n\t\t\t\t// skip the loop if digits have any degeneracy\n\t\t\t\tVec.setTo(mask, false);\n\t\t\t\tfor (let i of idx)\n\t\t\t\t{\n\t\t\t\t\tif (mask[i]) continue nonunique;\n\t\t\t\t\tmask[i] = true;\n\t\t\t\t}\n\n\t\t\t\t// this is a new unique combo, so poke it in\n\t\t\t\tperms[n] = idx.slice(0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (sz < this.MAX_CACHE) this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n\t\treturn perms;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from './Vec';\n\n/*\n\tUseful matrix functionality.\n*/\n\nexport class Matrix\n{\n\tpublic A:number[][];\n\n\t// create a blank matrix with given dimensions; m = height, n = width\n\tconstructor(public m:number, public n:number, s:number = 0)\n\t{\n\t\tif (m == 0) return;\n\t\tthis.A = new Array(m);\n\t\tfor (let i = 0; i < m; i++) this.A[i] = Vec.numberArray(s, n);\n\t}\n\n\tpublic static fromArray(A:number[][]):Matrix\n\t{\n\t\tlet mtx = new Matrix(0, 0);\n\t\tmtx.A = A;\n\t\tmtx.m = A.length;\n\t\tmtx.n = A[0].length;\n\t\treturn mtx;\n\t}\n\n\tpublic clone():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet mtx = new Matrix(m, n);\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) mtx.A[i][j] = A[i][j];\n\t\treturn mtx;\n\t}\n\n\tpublic get numRows():number {return this.m;}\n\tpublic get numCols():number {return this.n;}\n\tpublic get(i:number, j:number):number {return this.A[i][j];}\n\tpublic set(i:number, j:number, v:number):void {this.A[i][j] = v;}\n\n\tpublic transpose():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(n, m);\n\t\tconst C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[j][i] = A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic norm1():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet f = 0;\n\t\tfor (let j = 0; j < n; j++)\n\t\t{\n\t\t\tlet s = 0;\n\t\t\tfor (let i = 0; i < m; i++) s += Math.abs(A[i][j]);\n\t\t\tf = Math.max(f, s);\n\t\t}\n\t\treturn f;\n\t}\n\n/*\n\tpublic double norm2()\n\t{\n\t\treturn (new SingularValueDecomposition(this).norm2());\n\t}\n*/\n\n\tpublic normInf():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet f = 0;\n\t\tfor (let i = 0; i < m; i++)\n\t\t{\n\t\t\tlet s = 0;\n\t\t\tfor (let j = 0; j < n; j++) s += Math.abs(A[i][j]);\n\t\t\tf = Math.max(f, s);\n\t\t}\n\t\treturn f;\n\t}\n\n/*\n\tpublic double normF()\n\t{\n\t\tdouble f = 0;\n\t\tfor (let i = 0; i < m; i++)\n\t\t{\n\t\t\tfor (let j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tf = Maths.hypot(f, A[i][j]);\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n*/\n\n\tpublic uminus():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = -A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic plus(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] + B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic plusEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] + B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic minus(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] - B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic minusEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] - B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayTimes(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] * B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayTimesEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] * B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayRightDivide(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] / B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayRightDivideEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] / B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayLeftDivide(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = B.A[i][j] / A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayLeftDivideEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = B.A[i][j] / A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic scalarTimes(s:number):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = s * A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic scalarTimesEquals(s:number):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = s * A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic times(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, B.n);\n\t\tlet C = X.A, Bcolj:number[] = new Array(n);\n\t\tfor (let j = 0; j < B.n; j++)\n\t\t{\n\t\t\tfor (let k = 0; k < n; k++) Bcolj[k] = B.A[k][j];\n\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t{\n\t\t\t\tlet Arowi = A[i];\n\t\t\t\tlet s = 0;\n\t\t\t\tfor (let k = 0; k < n; k++) s += Arowi[k] * Bcolj[k];\n\t\t\t\tC[i][j] = s;\n\t\t\t}\n\t\t}\n\t\treturn X;\n\t}\n\n\t/*public LUDecomposition lu()\n\t{\n\t\treturn new LUDecomposition(this);\n\t}\n\n\tpublic QRDecomposition qr()\n\t{\n\t\treturn new QRDecomposition(this);\n\t}\n\n\tpublic CholeskyDecomposition chol()\n\t{\n\t\treturn new CholeskyDecomposition(this);\n\t}\n\n\tpublic SingularValueDecomposition svd()\n\t{\n\t\treturn new SingularValueDecomposition(this);\n\t}\n\n\tpublic EigenvalueDecomposition eig()\n\t{\n\t\treturn new EigenvalueDecomposition(this);\n\t}\n\n\tpublic Matrix solve(Matrix B)\n\t{\n\t\treturn (m == n ? (new LUDecomposition(this)).solve(B) : (new QRDecomposition(this)).solve(B));\n\t}\n\n\tpublic Matrix solveTranspose(Matrix B)\n\t{\n\t\treturn transpose().solve(B.transpose());\n\t}\n\n\tpublic Matrix inverse()\n\t{\n\t\treturn solve(identity(m, m));\n\t}\n\n\tpublic double det()\n\t{\n\t\treturn new LUDecomposition(this).det();\n\t}*/\n\n\tpublic rank():number\n\t{\n\t\treturn new SingularValueDecomposition(this).rank();\n\t}\n\n\tpublic cond():number\n\t{\n\t\treturn new SingularValueDecomposition(this).cond();\n\t}\n\n\tpublic trace():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet t = 0;\n\t\tfor (let i = 0; i < Math.min(m, n); i++)\n\t\t{\n\t\t\tt += A[i][i];\n\t\t}\n\t\treturn t;\n\t}\n\n\tpublic static identity(m:number, n:number):Matrix\n\t{\n\t\tlet mtx = new Matrix(m, n);\n\t\tlet A = mtx.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = (i == j ? 1.0 : 0.0);\n\t\treturn mtx;\n\t}\n\n\tpublic toString():string\n\t{\n\t\tlet lines:string[] = ['['];\n\t\tfor (let row of this.A) lines.push(JSON.stringify(row));\n\t\tlines.push(']');\n\t\treturn lines.join('\\n');\n\t}\n}\n\nexport class SingularValueDecomposition\n{\n\tprivate U:number[][];\n\tprivate V:number[][];\n\tprivate s:number[];\n\tprivate m:number;\n\tprivate n:number;\n\n\tconstructor(mtx:Matrix)\n\t{\n\t\tlet A = mtx.A;\n\t\tlet m = this.m = mtx.m;\n\t\tlet n = this.n = mtx.n;\n\n\t\tlet nu = Math.min(m, n);\n\t\tlet s = this.s = new Array(Math.min(m + 1, n));\n\t\tlet U = this.U = new Array(m);\n\t\tlet V = this.V = new Array(n);\n\t\tfor (let i = 0; i < m; i++) U[i] = Vec.numberArray(0, nu);\n\t\tfor (let j = 0; j < n; j++) V[j] = Vec.numberArray(0, n);\n\t\tlet e:number[] = new Array(n);\n\t\tlet work:number[] = new Array(m);\n\t\tlet wantu = true, wantv = true;\n\n\t\tlet nct = Math.min(m - 1, n);\n\t\tlet nrt = Math.max(0, Math.min(n - 2, m));\n\t\tfor (let k = 0; k < Math.max(nct, nrt); k++)\n\t\t{\n\t\t\tif (k < nct)\n\t\t\t{\n\t\t\t\ts[k] = 0;\n\t\t\t\tfor (let i = k; i < m; i++) s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n\t\t\t\tif (s[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tif (A[k][k] < 0.0) s[k] = -s[k];\n\t\t\t\t\tfor (let i = k; i < m; i++) A[i][k] /= s[k];\n\t\t\t\t\tA[k][k] += 1.0;\n\t\t\t\t}\n\t\t\t\ts[k] = -s[k];\n\t\t\t}\n\t\t\tfor (let j = k + 1; j < n; j++)\n\t\t\t{\n\t\t\t\tif ((k < nct) && (s[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tlet t = 0;\n\t\t\t\t\tfor (let i = k; i < m; i++) t += A[i][k] * A[i][j];\n\t\t\t\t\tt = -t / A[k][k];\n\t\t\t\t\tfor (let i = k; i < m; i++) A[i][j] += t * A[i][k];\n\t\t\t\t}\n\t\t\t\te[j] = A[k][j];\n\t\t\t}\n\t\t\tif (wantu && (k < nct))\n\t\t\t{\n\t\t\t\tfor (let i = k; i < m; i++) U[i][k] = A[i][k];\n\t\t\t}\n\t\t\tif (k < nrt)\n\t\t\t{\n\t\t\t\te[k] = 0;\n\t\t\t\tfor (let i = k + 1; i < n; i++) e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n\t\t\t\tif (e[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tif (e[k + 1] < 0.0) e[k] = -e[k];\n\t\t\t\t\tfor (let i = k + 1; i < n; i++) e[i] /= e[k];\n\t\t\t\t\te[k + 1] += 1.0;\n\t\t\t\t}\n\t\t\t\te[k] = -e[k];\n\t\t\t\tif ((k + 1 < m) && (e[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = k + 1; i < m; i++) work[i] = 0.0;\n\t\t\t\t\tfor (let j = k + 1; j < n; j++) for (let i = k + 1; i < m; i++) work[i] += e[j] * A[i][j];\n\t\t\t\t\tfor (let j = k + 1; j < n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = -e[j] / e[k + 1];\n\t\t\t\t\t\tfor (let i = k + 1; i < m; i++) A[i][j] += t * work[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (wantv)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = k + 1; i < n; i++) V[i][k] = e[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet p = Math.min(n, m + 1);\n\t\tif (nct < n) s[nct] = A[nct][nct];\n\t\tif (m < p) s[p - 1] = 0.0;\n\t\tif (nrt + 1 < p) e[nrt] = A[nrt][p - 1];\n\t\te[p - 1] = 0.0;\n\n\t\tif (wantu)\n\t\t{\n\t\t\tfor (let j = nct; j < nu; j++)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < m; i++) U[i][j] = 0.0;\n\t\t\t\tU[j][j] = 1.0;\n\t\t\t}\n\t\t\tfor (let k = nct - 1; k >= 0; k--)\n\t\t\t{\n\t\t\t\tif (s[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tfor (let j = k + 1; j < nu; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = 0;\n\t\t\t\t\t\tfor (let i = k; i < m; i++) t += U[i][k] * U[i][j];\n\t\t\t\t\t\tt = -t / U[k][k];\n\t\t\t\t\t\tfor (let i = k; i < m; i++) U[i][j] += t * U[i][k];\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = k; i < m; i++) U[i][k] = -U[i][k];\n\t\t\t\t\tU[k][k] = 1.0 + U[k][k];\n\t\t\t\t\tfor (let i = 0; i < k - 1; i++) U[i][k] = 0.0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < m; i++) U[i][k] = 0.0;\n\t\t\t\t\tU[k][k] = 1.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wantv)\n\t\t{\n\t\t\tfor (let k = n - 1; k >= 0; k--)\n\t\t\t{\n\t\t\t\tif ((k < nrt) && (e[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tfor (let j = k + 1; j < nu; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = 0;\n\t\t\t\t\t\tfor (let i = k + 1; i < n; i++) t += V[i][k] * V[i][j];\n\t\t\t\t\t\tt = -t / V[k + 1][k];\n\t\t\t\t\t\tfor (let i = k + 1; i < n; i++) V[i][j] += t * V[i][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < n; i++) V[i][k] = 0.0;\n\t\t\t\tV[k][k] = 1.0;\n\t\t\t}\n\t\t}\n\n\t\tlet pp = p - 1;\n\t\tlet iter = 0;\n\t\tlet eps = Math.pow(2.0, -52.0);\n\t\tlet tiny = Math.pow(2.0, -966.0);\n\t\twhile (p > 0)\n\t\t{\n\t\t\tlet k:number, kase:number;\n\t\t\tfor (k = p - 2; k >= -1; k--)\n\t\t\t{\n\t\t\t\tif (k == -1) break;\n\t\t\t\tif (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1])))\n\t\t\t\t{\n\t\t\t\t\te[k] = 0.0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (k == p - 2)\n\t\t\t{\n\t\t\t\tkase = 4;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet ks:number;\n\t\t\t\tfor (ks = p - 1; ks >= k; ks--)\n\t\t\t\t{\n\t\t\t\t\tif (ks == k) break;\n\t\t\t\t\tlet t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n\t\t\t\t\tif (Math.abs(s[ks]) <= tiny + eps * t)\n\t\t\t\t\t{\n\t\t\t\t\t\ts[ks] = 0.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ks == k) kase = 3;\n\t\t\t\telse if (ks == p - 1) kase = 1;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tkase = 2;\n\t\t\t\t\tk = ks;\n\t\t\t\t}\n\t\t\t}\n\t\t\tk++;\n\n\t\t\tif (kase == 1)\n\t\t\t{\n\t\t\t\tlet f = e[p - 2];\n\t\t\t\te[p - 2] = 0.0;\n\t\t\t\tfor (let j = p - 2; j >= k; j--)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(s[j], f);\n\t\t\t\t\tlet cs = s[j] / t;\n\t\t\t\t\tlet sn = f / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tif (j != k)\n\t\t\t\t\t{\n\t\t\t\t\t\tf = -sn * e[j - 1];\n\t\t\t\t\t\te[j - 1] = cs * e[j - 1];\n\t\t\t\t\t}\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * V[i][j] + sn * V[i][p - 1];\n\t\t\t\t\t\t\tV[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n\t\t\t\t\t\t\tV[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (kase == 2)\n\t\t\t{\n\t\t\t\tlet f = e[k - 1];\n\t\t\t\te[k - 1] = 0.0;\n\t\t\t\tfor (let j = k; j < p; j++)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(s[j], f);\n\t\t\t\t\tlet cs = s[j] / t;\n\t\t\t\t\tlet sn = f / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tf = -sn * e[j];\n\t\t\t\t\te[j] = cs * e[j];\n\t\t\t\t\tif (wantu)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * U[i][j] + sn * U[i][k - 1];\n\t\t\t\t\t\t\tU[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n\t\t\t\t\t\t\tU[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (kase == 3)\n\t\t\t{\n\t\t\t\tlet scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n\t\t\t\tlet sp = s[p - 1] / scale;\n\t\t\t\tlet spm1 = s[p - 2] / scale;\n\t\t\t\tlet epm1 = e[p - 2] / scale;\n\t\t\t\tlet sk = s[k] / scale;\n\t\t\t\tlet ek = e[k] / scale;\n\t\t\t\tlet b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n\t\t\t\tlet c = (sp * epm1) * (sp * epm1);\n\t\t\t\tlet shift = 0.0;\n\t\t\t\tif ((b != 0.0) || (c != 0.0))\n\t\t\t\t{\n\t\t\t\t\tshift = Math.sqrt(b * b + c);\n\t\t\t\t\tif (b < 0.0) shift = -shift;\n\t\t\t\t\tshift = c / (b + shift);\n\t\t\t\t}\n\t\t\t\tlet f = (sk + sp) * (sk - sp) + shift;\n\t\t\t\tlet g = sk * ek;\n\n\t\t\t\tfor (let j = k; j < p - 1; j++)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(f, g);\n\t\t\t\t\tlet cs = f / t;\n\t\t\t\t\tlet sn = g / t;\n\t\t\t\t\tif (j != k) e[j - 1] = t;\n\t\t\t\t\tf = cs * s[j] + sn * e[j];\n\t\t\t\t\te[j] = cs * e[j] - sn * s[j];\n\t\t\t\t\tg = sn * s[j + 1];\n\t\t\t\t\ts[j + 1] = cs * s[j + 1];\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * V[i][j] + sn * V[i][j + 1];\n\t\t\t\t\t\t\tV[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n\t\t\t\t\t\t\tV[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tt = SingularValueDecomposition.hypot(f, g);\n\t\t\t\t\tcs = f / t;\n\t\t\t\t\tsn = g / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tf = cs * e[j] + sn * s[j + 1];\n\t\t\t\t\ts[j + 1] = -sn * e[j] + cs * s[j + 1];\n\t\t\t\t\tg = sn * e[j + 1];\n\t\t\t\t\te[j + 1] = cs * e[j + 1];\n\t\t\t\t\tif (wantu && (j < m - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * U[i][j] + sn * U[i][j + 1];\n\t\t\t\t\t\t\tU[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n\t\t\t\t\t\t\tU[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te[p - 2] = f;\n\t\t\t\titer = iter + 1;\n\t\t\t}\n\t\t\telse if (kase == 4)\n\t\t\t{\n\t\t\t\tif (s[k] <= 0.0)\n\t\t\t\t{\n\t\t\t\t\ts[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i <= pp; i++) V[i][k] = -V[i][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (k < pp)\n\t\t\t\t{\n\t\t\t\t\tif (s[k] >= s[k + 1]) break;\n\t\t\t\t\tlet t = s[k];\n\t\t\t\t\ts[k] = s[k + 1];\n\t\t\t\t\ts[k + 1] = t;\n\t\t\t\t\tif (wantv && (k < n - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = V[i][k + 1];\n\t\t\t\t\t\t\tV[i][k + 1] = V[i][k];\n\t\t\t\t\t\t\tV[i][k] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wantu && (k < m - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = U[i][k + 1];\n\t\t\t\t\t\t\tU[i][k + 1] = U[i][k];\n\t\t\t\t\t\t\tU[i][k] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\titer = 0;\n\t\t\t\tp--;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getU():Matrix\n\t{\n\t\treturn Matrix.fromArray(this.U);\n\t}\n\tpublic getV():Matrix\n\t{\n\t\treturn Matrix.fromArray(this.V);\n\t}\n\tpublic getSingularValues():number[]\n\t{\n\t\treturn this.s;\n\t}\n\n\tpublic getS():Matrix\n\t{\n\t\tconst {n} = this;\n\t\tlet X = new Matrix(n, n, 0);\n\t\tlet S = X.A;\n\t\tfor (let i = 0; i < n; i++) S[i][i] = this.s[i];\n\t\treturn X;\n\t}\n\n\tpublic norm2():number\n\t{\n\t\treturn this.s[0];\n\t}\n\n\tpublic cond():number\n\t{\n\t\tconst {m, n, s} = this;\n\t\treturn s[0] / s[Math.min(m, n) - 1];\n\t}\n\n\tpublic rank():number\n\t{\n\t\tconst {m, n, s} = this;\n\t\tlet eps = Math.pow(2.0, -52.0);\n\t\tlet tol = Math.max(m, n) * s[0] * eps;\n\t\tlet r = 0;\n\t\tfor (let i = 0; i < s.length; i++) if (s[i] > tol) r++;\n\t\treturn r;\n\t}\n\n\tpublic static hypot(a:number, b:number):number\n\t{\n\t\tlet r;\n\t\tif (Math.abs(a) > Math.abs(b))\n\t\t{\n\t\t\tr = b / a;\n\t\t\tr = Math.abs(a) * Math.sqrt(1 + r * r);\n\t\t}\n\t\telse if (b != 0)\n\t\t{\n\t\t\tr = a / b;\n\t\t\tr = Math.abs(b) * Math.sqrt(1 + r * r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = 0.0;\n\t\t}\n\t\treturn r;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {norm2_xy, norm_xy, sqr} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tDelaunay triangulator: takes a jumble of 2D points and converts them into a collection of triangles. This initially generates a collection of\n\ttriangles that adds up to the convex hull, but it is fairly straightforward to delete triangles in order to get to some kind of concave subset\n\tbased on a given threshold. From there, tracing the outline is routine.\n\n\tOriginal algorithm adapted from JavaScript implementation of \"Delaunator\" (https://github.com/mapbox/delaunator), which bears the following license:\n\n\t\tISC License\n\n\t\tCopyright (c) 2017, Mapbox\n\n\t\tPermission to use, copy, modify, and/or distribute this software for any purpose\n\t\twith or without fee is hereby granted, provided that the above copyright notice\n\t\tand this permission notice appear in all copies.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\t\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n\t\tFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\t\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n\t\tOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n\t\tTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n\t\tTHIS SOFTWARE.\n*/\n\nconst EPSILON = Math.pow(2, -52);\n\nexport class Triangulation2D\n{\n\tpublic sz:number;\n\tpublic numTriangles = 0;\n\tpublic triangles:number[];\n\tpublic halfedges:number[];\n\n\tprivate edgeStack = Vec.numberArray(0, 512);\n\tprivate hashSize:number;\n\tprivate hullPrev:number[];\n\tprivate hullNext:number[];\n\tprivate hullTri:number[];\n\tprivate hullHash:number[];\n\tprivate ids:number[];\n\tprivate dists:number[];\n\tprivate centreX:number;\n\tprivate centreY:number;\n\tprivate hullStart:number;\n\tprivate hull:number[] = null;\n\n\t// ------------ public methods ------------\n\n\t// starts up with an empty container\n\tconstructor(public px:number[], public py:number[])\n\t{\n\t\tthis.px = px;\n\t\tthis.py = py;\n\n\t\t// arrays that will store the triangulation graph\n\t\tthis.sz = px.length;\n\t\tlet maxTriangles = Math.max(2 * this.sz - 5, 0);\n\t\tthis.triangles = new Array(maxTriangles * 3);\n\t\tthis.halfedges = new Array(maxTriangles * 3);\n\n\t\t// temporary arrays for tracking the edges of the advancing convex hull\n\t\tthis.hashSize = Math.ceil(Math.sqrt(this.sz));\n\t\tthis.hullPrev = new Array(this.sz);\n\t\tthis.hullNext = new Array(this.sz);\n\t\tthis.hullTri = new Array(this.sz);\n\t\tthis.hullHash = Vec.numberArray(-1, this.hashSize);\n\n\t\t// temporary arrays for sorting points\n\t\tthis.ids = new Array(this.sz);\n\t\tthis.dists = new Array(this.sz);\n\n\t\tthis.update();\n\t}\n\n\t// iteratively goes through triangles and removes outer edges that are longer than the given threshold, which is a way of making it concave\n\tpublic trimConcave(threshold:number):number[]\n\t{\n\t\tconst threshSq = sqr(threshold);\n\n\t\tconst {sz, px, py} = this;\n\t\tlet tri = this.triangles.slice(0);\n\t\t\n\t\t// setup an edgelist, which we need for rapid tabulation\n\t\tlet edge:number[] = [];\n\t\tfor (let n = 0, i = 0; i < tri.length; n++, i += 3)\n\t\t{\n\t\t\tedge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n\t\t\tedge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n\t\t\tedge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n\t\t}\n\t\tlet uniqueEdges = Vec.uniqueUnstable(edge);\n\t\tfor (let n = 0; n < edge.length; n++) edge[n] = uniqueEdges.indexOf(edge[n]);\n\t\t\n\t\tlet edgeCount:number[] = new Array(edge.length);\n\n\t\twhile (true)\n\t\t{\n\t\t\tconst ntri = tri.length / 3;\n\n\t\t\t// count the # of instances per edge\n\t\t\tedgeCount.fill(0);\n\t\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t\t{\n\t\t\t\tedgeCount[edge[i + 0]]++;\n\t\t\t\tedgeCount[edge[i + 1]]++;\n\t\t\t\tedgeCount[edge[i + 2]]++;\n\t\t\t}\n\n\t\t\t// any triangle that has one long unique (outer) edge gets the chop\n\t\t\tlet mask = Vec.booleanArray(true, ntri);\n\t\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t\t{\n\t\t\t\tconst c1 = edgeCount[edge[i + 0]];\n\t\t\t\tconst c2 = edgeCount[edge[i + 1]];\n\t\t\t\tconst c3 = edgeCount[edge[i + 2]];\n\t\t\t\tconst i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n\n\t\t\t\tif (c1 == 1 && c2 != 1 && c3 != 1) mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n\t\t\t\telse if (c1 != 1 && c2 == 1 && c3 != 1) mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n\t\t\t\telse if (c1 != 1 && c2 != 1 && c3 == 1) mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n\t\t\t}\n\n\t\t\tif (Vec.allTrue(mask)) break;\n\n\t\t\t// create a smaller version\n\t\t\tlet repTri:number[] = new Array(Vec.maskCount(mask) * 3);\n\t\t\tlet repEdge:number[] = new Array(Vec.maskCount(mask) * 3);\n\t\t\tfor (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3) if (mask[n])\n\t\t\t{\n\t\t\t\trepTri[j++] = tri[i];\n\t\t\t\trepTri[j++] = tri[i + 1];\n\t\t\t\trepTri[j++] = tri[i + 2];\n\t\t\t\trepEdge[k++] = edge[i];\n\t\t\t\trepEdge[k++] = edge[i + 1];\n\t\t\t\trepEdge[k++] = edge[i + 2];\n\t\t\t}\n\t\t\ttri = repTri;\n\t\t\tedge = repEdge;\n\t\t}\n\n\t\treturn tri;\n\t}\n\n\t// finds the set of points that traces the outline; the triangles can either be the original set (convex) or the trimmed set (concave)\n\tpublic traceOutline(tri:number[]):number[]\n\t{\n\t\tconst npt = tri.length, ntri = npt / 3;\n\t\tconst {sz} = this;\n\n\t\tlet edgeCount = new Map<number, number>();\n\n\t\t// count the # of instances per edge\n\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t{\n\t\t\tconst e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n\t\t\tconst e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n\t\t\tconst e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n\t\t\tedgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n\t\t\tedgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n\t\t\tedgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n\t\t}\n\n\t\t// collect the unique (outer) edges\n\t\tlet edgePairs:number[] = [];\n\t\tfor (let entry of edgeCount.entries()) if (entry[1] == 1)\n\t\t{\n\t\t\tconst e = entry[0];\n\t\t\tconst i1 = Math.floor(e / sz), i2 = e % sz;\n\t\t\tedgePairs.push(i1);\n\t\t\tedgePairs.push(i2);\n\t\t}\n\n\t\t// list the constituent indices, and make a divalent graph\n\t\tconst idx = Vec.uniqueUnstable(edgePairs);\n\t\tconst isz = idx.length;\n\t\tconst idxMap = new Map<number, number>();\n\t\tfor (let n = 0; n < isz; n++) idxMap.set(idx[n], n);\n\t\tlet g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n\t\tfor (let n = 0; n < edgePairs.length; n += 2)\n\t\t{\n\t\t\t//int i1 = Arrays.binarySearch(idx, edges.get(n)), i2 = Arrays.binarySearch(idx, edges.get(n + 1));\n\t\t\tconst i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n\t\t\tif (g1[i1] < 0) g1[i1] = i2; else g2[i1] = i2;\n\t\t\tif (g1[i2] < 0) g1[i2] = i1; else g2[i2] = i1;\n\t\t}\n\n\t\t// pick a starting point and walk around the divalent graph\n\t\tlet mask = Vec.booleanArray(false, isz);\n\t\tlet sequence = new Array(isz);\n\t\tsequence[0] = 0;\n\t\tmask[0] = true;\n\t\tfor (let n = 1; n < isz; n++)\n\t\t{\n\t\t\tconst i = sequence[n - 1];\n\t\t\tif (!mask[g1[i]]) sequence[n] = g1[i]; else sequence[n] = g2[i];\n\t\t\tmask[sequence[n]] = true;\n\t\t}\n\t\treturn Vec.idxGet(idx, sequence);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate update():void\n\t{\n\t\tconst sz = this.sz;\n\t\tlet {px, py, ids, dists, triangles, halfedges} = this;\n\n\t\tconst minX = Vec.min(px), minY = Vec.min(py);\n\t\tconst maxX = Vec.max(px), maxY = Vec.max(py);\n\t\tfor (let n = 0; n < sz; n++) ids[n] = n;\n\n\t\tthis.centreX = 0.5 * (minX + maxX);\n\t\tthis.centreY = 0.5 * (minY + maxY);\n\t\tlet i0 = 0, i1 = 0, i2 = 0;\n\n\t\t// pick a seed point close to the center\n\t\tlet minDist = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tconst d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n\t\t\tif (d < minDist)\n\t\t\t{\n\t\t\t\ti0 = n;\n\t\t\t\tminDist = d;\n\t\t\t}\n\t\t}\n\t\tconst i0x = px[i0], i0y = py[i0];\n\n\t\tminDist = Number.POSITIVE_INFINITY;\n\n\t\t// find the point closest to the seed\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == i0) continue;\n\t\t\tconst d = norm_xy(i0x - px[n], i0y - py[n]);\n\t\t\tif (d < minDist && d > 0)\n\t\t\t{\n\t\t\t\ti1 = n;\n\t\t\t\tminDist = d;\n\t\t\t}\n\t\t}\n\t\tlet i1x = px[i1], i1y = py[i1];\n\n\t\t// find the third point which forms the smallest circumcircle with the first two\n\t\tlet minRadius = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == i0 || n == i1) continue;\n\t\t\tlet r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n\t\t\tif (r < minRadius)\n\t\t\t{\n\t\t\t\ti2 = n;\n\t\t\t\tminRadius = r;\n\t\t\t}\n\t\t}\n\t\tlet i2x = px[i2], i2y = py[i2];\n\n\t\tif (!Number.isFinite(minRadius))\n\t\t{\n\t\t\t// order co-linear points by dx (or dy if all x are identical) and return the list as a hull\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tdists[n] = px[n] - px[0];\n\t\t\t\tif (dists[n] == 0) dists[n] = py[n] - py[0];\n\t\t\t}\n\t\t\tthis.quicksort(0, sz - 1);\n\t\t\tlet hull = new Array(sz);\n\t\t\tlet j = 0;\n\t\t\tlet d0 = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tlet id = ids[n];\n\t\t\t\tif (dists[id] > d0)\n\t\t\t\t{\n\t\t\t\t\thull[j++] = id;\n\t\t\t\t\td0 = dists[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.hull = hull.slice(0, j);\n\t\t\ttriangles = [];\n\t\t\thalfedges = [];\n\t\t\treturn;\n\t\t}\n\n\t\t// swap the order of the seed points for counter-clockwise orientation\n\t\tif (this.orient(i0x, i0y, i1x, i1y, i2x, i2y))\n\t\t{\n\t\t\tlet i = i1;\n\t\t\tlet x = i1x, y = i1y;\n\t\t\ti1 = i2;\n\t\t\ti1x = i2x;\n\t\t\ti1y = i2y;\n\t\t\ti2 = i;\n\t\t\ti2x = x;\n\t\t\ti2y = y;\n\t\t}\n\n\t\tthis.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n\n\t\tfor (let n = 0; n < sz; n++) dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n\n\t\t// sort the points by distance from the seed triangle circumcenter\n\t\tthis.quicksort(0, sz - 1);\n\n\t\t// set up the seed triangle as the starting hull\n\t\tthis.hullStart = i0;\n\t\tlet hullSize = 3;\n\n\t\tconst {hullNext, hullPrev, hullTri, hullHash, hashSize} = this;\n\n\t\thullNext[i0] = hullPrev[i2] = i1;\n\t\thullNext[i1] = hullPrev[i0] = i2;\n\t\thullNext[i2] = hullPrev[i1] = i0;\n\n\t\thullTri[i0] = 0;\n\t\thullTri[i1] = 1;\n\t\thullTri[i2] = 2;\n\n\t\thullHash.fill(-1);\n\t\thullHash[this.hashKey(i0x, i0y)] = i0;\n\t\thullHash[this.hashKey(i1x, i1y)] = i1;\n\t\thullHash[this.hashKey(i2x, i2y)] = i2;\n\n\t\tthis.numTriangles = 0;\n\t\tthis.addTriangle(i0, i1, i2, -1, -1, -1);\n\n\t\tlet xp = 0, yp = 0;\n\t\tfor (let k = 0; k < ids.length; k++)\n\t\t{\n\t\t\tlet i = ids[k];\n\t\t\tlet x = px[i], y = py[i];\n\n\t\t\t// skip near-duplicate points\n\t\t\tif (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n\t\t\txp = x;\n\t\t\typ = y;\n\n\t\t\t// skip seed triangle points\n\t\t\tif (i == i0 || i == i1 || i == i2) continue;\n\n\t\t\t// find a visible edge on the convex hull using edge hash\n\t\t\tlet start = 0;\n\t\t\tfor (let j = 0, key = this.hashKey(x, y); j < hashSize; j++)\n\t\t\t{\n\t\t\t\tstart = hullHash[(key + j) % hashSize];\n\t\t\t\tif (start >= 0 && start != hullNext[start]) break;\n\t\t\t}\n\n\t\t\tstart = hullPrev[start];\n\t\t\tlet e = start, q = hullNext[e];\n\t\t\twhile (!this.orient(x, y, px[e], py[e], px[q], py[q]))\n\t\t\t{\n\t\t\t\te = q;\n\t\t\t\tif (e == start)\n\t\t\t\t{\n\t\t\t\t\te = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tq = hullNext[e];\n\t\t\t}\n\t\t\tif (e < 0) continue; // likely a near-duplicate point; skip it\n\n\t\t\t// add the first triangle from the point\n\t\t\tlet t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n\t\t\t// recursively flip triangles from the point until they satisfy the Delaunay condition\n\t\t\thullTri[i] = this.legalise(t + 2);\n\t\t\thullTri[e] = t; // keep track of boundary triangles on the hull\n\t\t\thullSize++;\n\n\t\t\t// walk forward through the hull, adding more triangles and flipping recursively\n\t\t\tlet n = hullNext[e];\n\t\t\tq = hullNext[n];\n\t\t\twhile (this.orient(x, y, px[n], py[n], px[q], py[q]))\n\t\t\t{\n\t\t\t\tt = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n\t\t\t\thullTri[i] = this.legalise(t + 2);\n\t\t\t\thullNext[n] = n; // mark as removed\n\t\t\t\thullSize--;\n\t\t\t\tn = q;\n\t\t\t\tq = hullNext[n];\n\t\t\t}\n\n\t\t\t// walk backward from the other side, adding more triangles and flipping\n\t\t\tif (e == start)\n\t\t\t{\n\t\t\t\tq = hullPrev[e];\n\t\t\t\twhile (this.orient(x, y, px[q], py[q], px[e], py[e]))\n\t\t\t\t{\n\t\t\t\t\tt = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n\t\t\t\t\tthis.legalise(t + 2);\n\t\t\t\t\thullTri[q] = t;\n\t\t\t\t\thullNext[e] = e; // mark as removed\n\t\t\t\t\thullSize--;\n\t\t\t\t\te = q;\n\t\t\t\t\tq = hullPrev[e];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update the hull indices\n\t\t\tthis.hullStart = hullPrev[i] = e;\n\t\t\thullNext[e] = hullPrev[n] = i;\n\t\t\thullNext[i] = n;\n\n\t\t\t// save the two new edges in the hash table\n\t\t\thullHash[this.hashKey(x, y)] = i;\n\t\t\thullHash[this.hashKey(px[e], py[e])] = e;\n\t\t}\n\n\t\tthis.hull = new Array(hullSize);\n\t\tfor (let n = 0, e = this.hullStart; n < hullSize; n++)\n\t\t{\n\t\t\tthis.hull[n] = e;\n\t\t\te = hullNext[e];\n\t\t}\n\n\t\t// trim typed triangle mesh arrays\n\t\tthis.triangles = triangles.slice(0, this.numTriangles);\n\t\tthis.halfedges = halfedges.slice(0, this.numTriangles);\n\t}\n\n\tprivate hashKey(x:number, y:number):number\n\t{\n\t\treturn Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n\t}\n\n\tprivate legalise(a:number):number\n\t{\n\t\tlet i = 0;\n\t\tlet ar = 0;\n\n\t\t// recursion eliminated with a fixed-size stack\n\t\twhile (true)\n\t\t{\n\t\t\tlet b = this.halfedges[a];\n\n\t\t\t/* if the pair of triangles doesn't satisfy the Delaunay condition\n\t\t\t * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n\t\t\t * then do the same check/flip recursively for the new pair of triangles\n\t\t\t *\n\t\t\t *           pl                    pl\n\t\t\t *          /||\\                  /  \\\n\t\t\t *       al/ || \\bl            al/    \\a\n\t\t\t *        /  ||  \\              /      \\\n\t\t\t *       /  a||b  \\    flip    /___ar___\\\n\t\t\t *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n\t\t\t *        \\  ||  /              \\      /\n\t\t\t *       ar\\ || /br             b\\    /br\n\t\t\t *          \\||/                  \\  /\n\t\t\t *           pr                    pr\n\t\t\t */\n\t\t\tlet a0 = a - a % 3;\n\t\t\tar = a0 + (a + 2) % 3;\n\n\t\t\tif (b < 0) // convex hull edge\n\t\t\t{\n\t\t\t\tif (i == 0) break;\n\t\t\t\ta = this.edgeStack[--i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst b0 = b - b % 3;\n\t\t\tconst al = a0 + (a + 1) % 3;\n\t\t\tconst bl = b0 + (b + 2) % 3;\n\n\t\t\tconst {px, py, triangles, halfedges} = this;\n\t\t\tconst p0 = triangles[ar];\n\t\t\tconst pr = triangles[a];\n\t\t\tconst pl = triangles[al];\n\t\t\tconst p1 = triangles[bl];\n\n\t\t\tlet illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n\n\t\t\tif (illegal)\n\t\t\t{\n\t\t\t\tthis.triangles[a] = p1;\n\t\t\t\tthis.triangles[b] = p0;\n\n\t\t\t\tconst hbl = halfedges[bl];\n\n\t\t\t\t// edge swapped on the other side of the hull (rare); fix the halfedge reference\n\t\t\t\tif (hbl < 0)\n\t\t\t\t{\n\t\t\t\t\tlet e = this.hullStart;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.hullTri[e] == bl)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.hullTri[e] = a;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te = this.hullPrev[e];\n\t\t\t\t\t}\n\t\t\t\t\twhile (e != this.hullStart);\n\t\t\t\t}\n\t\t\t\tthis.link(a, hbl);\n\t\t\t\tthis.link(b, halfedges[ar]);\n\t\t\t\tthis.link(ar, bl);\n\n\t\t\t\tconst br = b0 + (b + 1) % 3;\n\n\t\t\t\t// don't worry about hitting the cap: it can only happen on extremely degenerate input\n\t\t\t\tif (i < this.edgeStack.length) this.edgeStack[i++] = br;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (i == 0) break;\n\t\t\t\ta = this.edgeStack[--i];\n\t\t\t}\n\t\t}\n\n\t\treturn ar;\n\t}\n\n\tprivate link(a:number, b:number):void\n\t{\n\t\tthis.halfedges[a] = b;\n\t\tif (b >= 0) this.halfedges[b] = a;\n\t}\n\n\t // add a new triangle given vertex indices and adjacent half-edge ids\n\tprivate addTriangle(i0:number, i1:number, i2:number, a:number, b:number, c:number):number\n\t{\n\t\tconst t = this.numTriangles;\n\t\tthis.triangles[t] = i0;\n\t\tthis.triangles[t + 1] = i1;\n\t\tthis.triangles[t + 2] = i2;\n\t\tthis.link(t, a);\n\t\tthis.link(t + 1, b);\n\t\tthis.link(t + 2, c);\n\t\tthis.numTriangles += 3;\n\t\treturn t;\n\t}\n\n\t// monotonically increases with real angle, but doesn't need expensive trigonometry\n\tprivate pseudoAngle(dx:number, dy:number):number\n\t{\n\t\tconst p = dx / (Math.abs(dx) + Math.abs(dy));\n\t\treturn (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n\t}\n\n\t// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\n\tprivate orientIfSure(px:number, py:number, rx:number, ry:number, qx:number, qy:number):number\n\t{\n\t\tconst l = (ry - py) * (qx - px);\n\t\tconst r = (rx - px) * (qy - py);\n\t\treturn Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n\t}\n\n\t// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\n\tprivate orient(rx:number, ry:number, qx:number, qy:number, px:number, py:number):boolean\n\t{\n\t\tlet o = this.orientIfSure(px, py, rx, ry, qx, qy);\n\t\tif (o != 0) return o < 0;\n\t\to = this.orientIfSure(rx, ry, qx, qy, px, py);\n\t\tif (o != 0) return o < 0;\n\t\to = this.orientIfSure(qx, qy, px, py, rx, ry);\n\t\treturn o < 0;\n\t}\n\n\tprivate inCircle(ax:number, ay:number, bx:number, by:number, cx:number, cy:number, px:number, py:number):boolean\n\t{\n\t\tconst dx = ax - px;\n\t\tconst dy = ay - py;\n\t\tconst ex = bx - px;\n\t\tconst ey = by - py;\n\t\tconst fx = cx - px;\n\t\tconst fy = cy - py;\n\n\t\tconst ap = dx * dx + dy * dy;\n\t\tconst bp = ex * ex + ey * ey;\n\t\tconst cp = fx * fx + fy * fy;\n\n\t\treturn dx * (ey * cp - bp * fy) -\n\t\t\t   dy * (ex * cp - bp * fx) +\n\t\t\t   ap * (ex * fy - ey * fx) < 0;\n\t}\n\n\tprivate circumRadius(ax:number, ay:number, bx:number, by:number, cx:number, cy:number):number\n\t{\n\t\tconst dx = bx - ax;\n\t\tconst dy = by - ay;\n\t\tconst ex = cx - ax;\n\t\tconst ey = cy - ay;\n\n\t\tconst bl = dx * dx + dy * dy;\n\t\tconst cl = ex * ex + ey * ey;\n\t\tconst d = 0.5 / (dx * ey - dy * ex);\n\n\t\tconst x = (ey * bl - dy * cl) * d;\n\t\tconst y = (dx * cl - ex * bl) * d;\n\n\t\treturn x * x + y * y;\n\t}\n\n\tprivate pickCircumCentre(ax:number, ay:number, bx:number, by:number, cx:number, cy:number):void\n\t{\n\t\tconst dx = bx - ax;\n\t\tconst dy = by - ay;\n\t\tconst ex = cx - ax;\n\t\tconst ey = cy - ay;\n\n\t\tconst bl = dx * dx + dy * dy;\n\t\tconst cl = ex * ex + ey * ey;\n\t\tconst d = 0.5 / (dx * ey - dy * ex);\n\n\t\tthis.centreX = ax + (ey * bl - dy * cl) * d;\n\t\tthis.centreY = ay + (dx * cl - ex * bl) * d;\n\t}\n\n\tprivate quicksort(left:number, right:number):void\n\t{\n\t\tconst {ids, dists} = this;\n\t\tif (right - left <= 20)\n\t\t{\n\t\t\tfor (let i = left + 1; i <= right; i++)\n\t\t\t{\n\t\t\t\tconst temp = ids[i];\n\t\t\t\tconst tempDist = dists[temp];\n\t\t\t\tlet j = i - 1;\n\t\t\t\twhile (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n\t\t\t\tids[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet median = (left + right) >> 1;\n\t\t\tlet i = left + 1;\n\t\t\tlet j = right;\n\t\t\tVec.swap(ids, median, i);\n\t\t\tif (dists[ids[left]] > dists[ids[right]]) Vec.swap(ids, left, right);\n\t\t\tif (dists[ids[i]] > dists[ids[right]]) Vec.swap(ids, i, right);\n\t\t\tif (dists[ids[left]] > dists[ids[i]]) Vec.swap(ids, left, i);\n\n\t\t\tlet temp = ids[i];\n\t\t\tconst tempDist = dists[temp];\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tdo i++; while (dists[ids[i]] < tempDist);\n\t\t\t\tdo j--; while (dists[ids[j]] > tempDist);\n\t\t\t\tif (j < i) break;\n\t\t\t\tVec.swap(ids, i, j);\n\t\t\t}\n\t\t\tids[left + 1] = ids[j];\n\t\t\tids[j] = temp;\n\n\t\t\tif (right - i + 1 >= j - left)\n\t\t\t{\n\t\t\t\tthis.quicksort(i, right);\n\t\t\t\tthis.quicksort(left, j - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.quicksort(left, j - 1);\n\t\t\t\tthis.quicksort(i, right);\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Matrix, SingularValueDecomposition} from './Matrix';\nimport {Triangulation2D} from './Triangulation2D';\nimport {angleDiff, angleDiffPos, angleNorm, fltEqual, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tGeometry utilities, which are typically graphics related.\n*/\n\nexport interface Spline\n{\n\tpx:number[];\n\tpy:number[];\n\tctrl:boolean[];\n}\n\nexport class GeomUtil\n{\n\t// static: returns true if the point (x,y) is inside the given polygon (px,py)\n\tpublic static pointInPolygon(x:number, y:number, px:number[], py:number[]):boolean\n\t{\n\t\tif (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py)) return false;\n\t\tlet sz = px.length;\n\t\tfor (let n = 0; n < sz; n++) if (px[n] == x && py[n] == y) return true; // point is on a vertex\n\n\t\tlet phase = false;\n\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n\t\t\tif (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2)\n\t\t\t{\n\t\t\t\tlet intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n\t\t\t\tif (x1 == x2 || x <= intr) phase = !phase;\n\t\t\t}\n\t\t}\n\n\t\treturn phase;\n\t}\n\n\t// returns true if the lines L1-->L2 and L3-->L4 are parallel or anti-parallel, i.e. they can never intersect; note that\n\t// this still returns true if the lines are actually on top of each other; note that this is for lines, not line segments\n\tpublic static areLinesParallel(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):boolean\n\t{\n\t\tlet dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n\t\tlet xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n\t\tif (xmajorA != xmajorB) return false;\n\t\tconst EPS = 1E-6;\n\t\tif (xmajorA)\n\t\t\treturn Math.abs(dya / dxa - dyb / dxb) < EPS;\n\t\telse\n\t\t\treturn Math.abs(dxa / dya - dxb / dyb) < EPS;\n\t}\n\n\t// for the lines L1-->L2 and L3-->L4, calculate and return the intersection; note that this for lines, not line segments;\n\t// the return value is an array of {x,y}; note that the answer will be garbage if the lines are parallel\n\tpublic static lineIntersect(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):number[]\n\t{\n\t\tlet u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\t\treturn [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n\t}\n\n\t// returns true if the point is on the line segment, within numerical precision\n\tpublic static isPointOnLineSeg(px:number, py:number, x1:number, y1:number, x2:number, y2:number):boolean\n\t{\n\t\tif (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2)) return false;\n\t\tif ((px == x1 && py == y1) || (px == x2 && py == y2)) return true;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tif (Math.abs(dx) > Math.abs(dy)) return realEqual(py, (dy / dx) * (px - x1) + y1);\n\t\telse return realEqual(px, (dx / dy) * (py - y1) + x1);\n\t}\n\n\t// returns the distance from the point to the closest location on the indicated line\n\tpublic static pointLineDistance(px:number, py:number, x1:number, y1:number, x2:number, y2:number):number\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\treturn Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n\t}\n\n\t// returns the shortest distance from the point to the line segment\n\tpublic static pointLineSegDistance(px:number, py:number, x1:number, y1:number, x2:number, y2:number):number\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy); // t=position along the line to which the point is orthogonal\n\t\tt = Math.max(0, Math.min(1, t));\n\t\tlet tx = x1 + t * dx, ty = y1 + t * dy;\n\t\treturn norm_xy(px - tx, py - ty);\n\t}\n\n\t// tests the two line segments L1-->L2 and L3-->L4 for intersection, and returns true if they do\n\t// !! methinks this is almost correct, but there might be a boundary flaw\n\tpublic static doLineSegsIntersect(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):boolean\n\t{\n\t\tif (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4)) return false;\n\t\tif (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4)) return false;\n\n\t\tlet ax = x2 - x1, ay = y2 - y1, bx = x4 - x3, by = y4 - y3;\n\t\tif (fltEqual(norm2_xy(ax, ay), 0) || fltEqual(norm2_xy(bx, by), 0)) return false;\n\n\t\tif (Math.abs(ay) > Math.abs(ax) && Math.abs(by) > Math.abs(bx))\n\t\t{\n\t\t\tif (fltEqual(ax / ay - bx / by, 0)) return false;\n\t\t}\n\t\telse if (Math.abs(ax) > Math.abs(ay) && Math.abs(bx) > Math.abs(by))\n\t\t{\n\t\t\tif (fltEqual(ay / ax - by / bx, 0)) return false;\n\t\t}\n\n\t\tif ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4)) return true;\n\t\tif ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4)) return true;\n\t\tif ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4)) return true;\n\n\t\tlet x4_x3 = bx, y4_y3 = by, x2_x1 = ax, y2_y1 = ay, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n\n\t\tlet nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n\t\tlet ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n\t\tlet dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n\n\t\tif (dn == 0) return false;\n\t\tif (dn < 0)\n\t\t{\n\t\t\tdn = -dn;\n\t\t\tnx = -nx;\n\t\t\tny = -ny;\n\t\t}\n\n\t\treturn nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n\t}\n\n\t// true if the two rectangles share any intersection\n\tpublic static rectsIntersect(x1:number, y1:number, w1:number, h1:number, x2:number, y2:number, w2:number, h2:number):boolean\n\t{\n\t\tif (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2) return true;\n\t\tif (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1) return true;\n\t\tif (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1) return false;\n\t\treturn true;\n\t}\n\n\t// for an array of angles (in radians), sorts them in order; then, rotates the array around as many times as is necessary\n\t// so that the difference between the first & last angles is >= than the difference between the first & second\n\tpublic static sortAngles(theta:number[]):number[]\n\t{\n\t\tif (theta == null || theta.length < 2) return theta;\n\t\ttheta = theta.slice(0);\n\t\tfor (let n = 0; n < theta.length; n++) theta[n] = angleNorm(theta[n]);\n\n\t\tif (theta.length == 2)\n\t\t{\n\t\t\tif (angleDiffPos(theta[1], theta[0]) > Math.PI) return [theta[1], theta[0]];\n\t\t\treturn theta;\n\t\t}\n\n\t\tVec.sort(theta);\n\t\twhile (true)\n\t\t{\n\t\t\tlet a = theta[theta.length - 1], b = theta[0], c = theta[1];\n\t\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\t\tfor (let n = theta.length - 1; n > 0; n--) theta[n] = theta[n - 1];\n\t\t\ttheta[0] = a;\n\t\t}\n\t\treturn theta;\n\t}\n\n\t// sorts angles as above, except returns indices rather than values\n\tpublic static idxSortAngles(theta:number[]):number[]\n\t{\n\t\tconst sz = Vec.len(theta);\n\t\tif (theta == null || sz < 2) return Vec.identity0(sz);\n\n\t\tif (sz == 2)\n\t\t{\n\t\t\tif (angleDiffPos(theta[1], theta[0]) > Math.PI) return [1, 0]; else return [0, 1];\n\t\t}\n\n\t\ttheta = Vec.duplicate(theta);\n\t\tfor (let n = 0; n < sz; n++) theta[n] = angleNorm(theta[n]);\n\t\tlet idx = Vec.idxSort(theta);\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n\t\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\t\tlet last = idx.pop();\n\t\t\tidx.unshift(last);\n\t\t}\n\t\treturn idx;\n\t}\n\n\t// calculates a list of unique angles (based on the threshold parameter, in radians), and returns it; the returned list of\n\t// angles will be sorted in order, as described by sortAngles(..); note that there is no fancy clustering, so a sequence of\n\t// angles which are a bit below the threshold is not guaranteed to be stable; there is also a boundary case which bumps the\n\t// sort rotation status slightly out of whack\n\tpublic static uniqueAngles(theta:number[], threshold:number):number[]\n\t{\n\t\tlet ang = GeomUtil.sortAngles(theta), ret:number[] = [];\n\t\tret.push(ang[0]);\n\t\tfor (let n = 1; n < ang.length; n++)\n\t\t{\n\t\t\tif (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold) ret.push(ang[n]);\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// returns the angle maximally equidistant from Th1 and Th2\n\tpublic static thetaObtuse(th1:number, th2:number):number\n\t{\n\t\tlet dth = th2 - th1;\n\t\twhile (dth < -Math.PI) dth += 2 * Math.PI;\n\t\twhile (dth > Math.PI) dth -= 2 * Math.PI;\n\t\treturn dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n\t}\n\n\t// for a group of angles, returns a single dominant angle that represents the \"average\" of all of them; this takes into account boundary\n\t// issues for multiple cases, e.g. +/- 180; note that the array may be modified\n\tpublic static emergentAngle(theta:number[]):number\n\t{\n\t\tlet len = theta.length;\n\t\tif (len == 1) return theta[0];\n\t\tif (len == 2) return 0.5 * (theta[0] + theta[1]);\n\n\t\tVec.sort(theta);\n\n\t\tlet bottom = 0;\n\t\tlet behind = angleDiffPos(theta[0], theta[len - 1]);\n\t\tfor (let n = 1; n < len; n++)\n\t\t{\n\t\t\tlet delta = angleDiffPos(theta[n], theta[n - 1]);\n\t\t\tif (delta > behind)\n\t\t\t{\n\t\t\t\tbottom = n;\n\t\t\t\tbehind = delta;\n\t\t\t}\n\t\t}\n\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < len; n++)\n\t\t{\n\t\t\tlet delta = theta[n] - theta[bottom];\n\t\t\tif (delta < 0) delta += TWOPI;\n\t\t\tsum += delta;\n\t\t}\n\n\t\treturn sum / len + theta[bottom];\n\t}\n\n\t// core 3D vector calculations; observe that even though the parameters are vectors, these functions do assume that they are of size 3\n\n\tpublic static dotProduct(v1:number[], v2:number[]):number\n\t{\n\t\treturn v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n\t}\n\n\tpublic static crossProduct(v1:number[], v2:number[]):number[]\n\t{\n\t\tconst x = v1[1] * v2[2] - v1[2] * v2[1];\n\t\tconst y = v1[2] * v2[0] - v1[0] * v2[2];\n\t\tconst z = v1[0] * v2[1] - v1[1] * v2[0];\n\t\treturn [x, y, z];\n\t}\n\n\t// generate 2D affine transforms\n\tpublic static affineIdentity():number[][]\n\t{\n\t\treturn [[1, 0, 0], [0, 1, 0], [0, 0, 1]];\n\t}\n\tpublic static affineTranslate(dx:number, dy:number):number[][]\n\t{\n\t\treturn [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n\t}\n\tpublic static affineMirror(xaxis:boolean, yaxis:boolean):number[][]\n\t{\n\t\treturn [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n\t}\n\tpublic static affineScale(sx:number, sy:number):number[][]\n\t{\n\t\treturn [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n\t}\n\tpublic static affineRotate(theta:number):number[][]\n\t{\n\t\tlet cos = Math.cos(theta), sin = Math.sin(theta);\n\t\treturn [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n\t}\n\n\t// compose two affine transforms and returns a new one that is equivalent to doing both of them in order (A then B)\n\tpublic static affineCompose(A:number[][], B:number[][]):number[][]\n\t{\n\t\tlet tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\t\tlet Acol = [0, 0, 0];\n\t\tfor (let j = 0; j < 3; j++)\n\t\t{\n\t\t\tfor (let k = 0; k < 3; k++) Acol[k] = A[k][j];\n\t\t\tfor (let i = 0; i < 3; i++)\n\t\t\t{\n\t\t\t\tlet Brow = B[i];\n\t\t\t\tlet s = 0;\n\t\t\t\tfor (let k = 0; k < 3; k++) s += Acol[k] * Brow[k];\n\t\t\t\ttfm[i][j] = s;\n\t\t\t}\n\t\t}\n\t\treturn tfm;\n\t}\n\n\t// applies a 3x3 affine transform to two coordinates; returns [x,y] position\n\tpublic static applyAffine(x:number, y:number, tfm:number[][]):[number, number]\n\t{\n\t\treturn [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n\t}\n\n\t// applies the affine transform to a vector, modifying the parameter array\n\tpublic static applyAffineArray(x:number[], y:number[], tfm:number[][]):void\n\t{\n\t\tfor (let n = 0; n < x.length; n++) [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n\t}\n\n\t// returns true if the 2D affine transform contains a mirror reflection\n\tpublic static isAffineMirror(tfm:number[][]):boolean\n\t{\n\t\tlet a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n\t\tlet d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n\t\tlet g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n\t\treturn a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n\t}\n\n\tpublic static magnitude2(v:number[]):number\n\t{\n\t\treturn v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\t}\n\n\tpublic static magnitude(v:number[]):number\n\t{\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n\t}\n\n\tpublic static dist2(v1:number[], v2:number[]):number\n\t{\n\t\tlet dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n\t\treturn dx * dx + dy * dy + dz * dz;\n\t}\n\n\tpublic static dist(v1:number[], v2:number[]):number\n\t{\n\t\tlet dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n\n\tpublic static normalise(v:number[]):void\n\t{\n\t\tconst dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\t\tif (dsq == 0) return;\n\t\tconst inv = 1.0 / Math.sqrt(dsq);\n\t\tv[0] *= inv;\n\t\tv[1] *= inv;\n\t\tv[2] *= inv;\n\t}\n\n\tpublic static normalised(v:number[]):number[]\n\t{\n\t\tlet ret = v.slice(0);\n\t\tthis.normalise(ret);\n\t\treturn ret;\n\t}\n\n\t// returns the unsigned angle between two vectors\n\tpublic static acuteAngle(v1:number[], v2:number[]):number\n\t{\n\t\tlet mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n\t\tif (mag1 == 0 || mag2 == 0) return 0;\n\t\tlet dot = this.dotProduct(v1, v2);\n\t\tlet cosTheta = dot / (mag1 * mag2);\n\t\tcosTheta = Math.max(-1, Math.min(1, cosTheta)); // numeric error can bump it slightly out of -1 .. +1\n\t\treturn Math.acos(cosTheta);\n\t}\n\n\t// given a circle (at origin) of a given radius, and two points at the perimeter, calculates two control points that can be used to draw a\n\t// bezier spline of the curved part of the arc; the given points are presumed to be in angular order; if the angle is more than 180 degrees\n\t// this won't work (i.e. the caller must split into more than one curve)\n\tpublic static arcControlPoints(rad:number, x1:number, y1:number, x2:number, y2:number):[number, number, number, number]\n\t{\n\t\tlet t1x = -y1, t1y = x1;\n\t\tlet t2x = y2, t2y = -x2;\n\t\tlet dx = 0.5 * (x1 + x2);\n\t\tlet dy = 0.5 * (y1 + y2);\n\t\tlet tx = 3 / 8 * (t1x + t2x);\n\t\tlet ty = 3 / 8 * (t1y + t2y);\n\t\tlet a = tx * tx + ty * ty;\n\t\tlet b = dx * tx + dy * ty;\n\t\tlet c = dx * dx + dy * dy - rad * rad;\n\t\tlet D = b * b - a * c;\n\t\tlet k = (Math.sqrt(D) - b) / a;\n\n\t\treturn [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n\t}\n\n\t// creates a bezier-type curve that renders a whole ellipse; the parameters (w,h) are the dimensions of the ellipse, where w is parallel to theta and\n\t// h is perpendicular to it (i.e. if theta is 0, it's an ordinary ellipse that is aligned with the axes); the result is imprecise: it emits a series of\n\t// points corresponding to angular increments and throws in some quadratic smoothing - it should be visually indistinguishable from the real thing\n\tpublic static createBezierEllipse(cx:number, cy:number, rw:number, rh:number, theta:number):Spline\n\t{\n\t\t/*\n\t\t\tFrom https://math.stackexchange.com/questions/2645689/what-is-the-parametric-equation-of-a-rotated-ellipse-given-the-angle-of-rotatio\n\t\t\tx(α)=Rx.cos(α).cos(θ) − Ry.sin(α).sin(θ) + Cx\n\t\t\ty(α)=Rx.cos(α).sin(θ) + Ry.sin(α).cos(θ) + Cy\n\t\t*/\n\n\t\tlet nseg = 24, npt = 2 * nseg + 1;\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tlet incrAlpha = TWOPI / nseg;\n\n\t\tlet px:number[] = new Array(npt), py:number[] = new Array(npt);\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet alpha = n * incrAlpha;\n\t\t\tlet cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n\n\t\t\tpx[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n\t\t\tpy[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n\t\t}\n\n\t\tpx[npt - 1] = px[0];\n\t\tpy[npt - 1] = py[0];\n\n\t\tlet smooth = 0.3;\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet n1 = (n - 1 + nseg) % nseg;\n\t\t\tlet n2 = n;\n\t\t\tlet n3 = (n + 1) % nseg;\n\t\t\tlet n4 = (n + 2) % nseg;\n\t\t\tlet x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n\t\t\tlet y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n\t\t\tpx[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n\t\t\tpy[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n\t\t}\n\n\t\tlet ctrl:boolean[] = new Array(npt);\n\t\tfor (let n = 0; n < npt; n++) ctrl[n] = (n & 1) == 1;\n\n\t\treturn {px, py, ctrl};\n\t}\n\n\t// for a set of points that are presumed to be normalised about the origin, determines the radius of the closest approach\n\tpublic static fitCircle(x:number[], y:number[]):number\n\t{\n\t\tlet dsq = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < x.length; n++) dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n\t\treturn Math.sqrt(dsq);\n\t}\n\n\t// for a set of points that are presumed to be normalised about the origin, comes up with an ellipse [w,h] that is optimised to be as large as possible\n\t// without expanding beyond any of the closing points; note that the solution is an approximation, but it is at least one that can be carried out in a\n\t// small number of iterations\n\t// NOTE: the min/max X/Y parameters are treated as blockers for the axes; this is because the algorithm uses intersection of ellipse-with-points to determine\n\t// boundaries, which unfortunately means that sometimes the ellipse can do on a runaway distortion by going *through* one of the axes; these parameters will\n\t// prevent this, but they must be precalculated; ideally the algorithm would calculate an \"internal convex hull\" to derive these points automatically\n\tpublic static fitEllipse(px:number[], py:number[], minX:number, minY:number, maxX:number, maxY:number):number[]\n\t{\n\t\t// start with a circle-of-fit, which is the worst case scenario\n\t\tlet bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n\n\t\tlet x = Vec.concat(px, [minX, maxX, 0, 0]);\n\t\tlet y = Vec.concat(py, [0, 0, minY, maxY]);\n\t\tconst sz = x.length;\n\n\t\tlet shrinkToFit = (whs:number[]):void =>\n\t\t{\n\t\t\tlet dmin = Number.POSITIVE_INFINITY;\n\t\t\tlet invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n\t\t\tfor (let n = 0; n < sz; n++) dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n\t\t\tif (dmin < 1)\n\t\t\t{\n\t\t\t\twhs[0] *= dmin;\n\t\t\t\twhs[1] *= dmin;\n\t\t\t}\n\t\t\twhs[2] = whs[0] * whs[1];\n\t\t};\n\n\t\t// keep trying to expand on one axis/shrink on both, until subsequent efforts are futile\n\t\tlet mul = 1;\n\t\tlet whsX = [0, 0, 0], whsY = [0, 0, 0];\n\t\twhile (mul > 0.001)\n\t\t{\n\t\t\twhsX[0] = bestW * (1 + mul);\n\t\t\twhsX[1] = bestH;\n\t\t\tshrinkToFit(whsX);\n\n\t\t\twhsY[0] = bestW;\n\t\t\twhsY[1] = bestH * (1 + mul);\n\t\t\tshrinkToFit(whsY);\n\n\t\t\tlet anything = false;\n\t\t\tif (whsX[2] > bestScore) {bestW = whsX[0]; bestH = whsX[1]; bestScore = whsX[2]; anything = true;}\n\t\t\tif (whsY[2] > bestScore) {bestW = whsY[0]; bestH = whsY[1]; bestScore = whsY[2]; anything = true;}\n\t\t\tif (!anything) mul *= 0.6;\n\t\t}\n\n\t\treturn [bestW, bestH];\n\t}\n\n\t// given two collections of 2D points (A and B), returns the rotate+transform matrix that best maps A onto B\n\tpublic static superimpose(ax:number[], ay:number[], bx:number[], by:number[]):number[][]\n\t{\n\t\t// special deal for size 1: just a translation; the caller must find some other way to discover the preferred rotation\n\t\tlet sz = ax.length;\n\t\tif (sz == 1)\n\t\t{\n\t\t\tlet dx = bx[0] - ax[0], dy = by[0] - ay[0];\n\t\t\treturn [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n\t\t}\n\n\t\t// special deal for size 2: rotation matrix can be derived from a single angle, rather than doing an optimisation\n\t\tif (sz == 2)\n\t\t{\n\t\t\tlet thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n\t\t\tlet delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n\t\t\tlet rot00 = cos, rot01 = -sin;\n\t\t\tlet rot10 = sin, rot11 = cos;\n\n\t\t\tlet acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n\t\t\tlet bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n\t\t\tlet rax = rot00 * acx + rot01 * acy;\n\t\t\tlet ray = rot10 * acx + rot11 * acy;\n\n\t\t\treturn [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n\t\t}\n\n\t\t// proceed with a relatively heavy-handed eigenvalue optimisation\n\t\t// adapted from: https://github.com/oleg-alexandrov/projects/blob/master/eigen/Kabsch.cpp\n\n\t\tlet invsz = 1.0 / sz;\n\t\tlet acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n\t\tlet bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n\n\t\tlet mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tmtxA.set(0, n, ax[n] - acx);\n\t\t\tmtxA.set(1, n, ay[n] - acy);\n\t\t\tmtxA.set(2, n, 0);\n\t\t\tmtxB.set(0, n, bx[n] - bcx);\n\t\t\tmtxB.set(1, n, by[n] - bcy);\n\t\t\tmtxB.set(2, n, 0);\n\t\t}\n\n\t\tlet cov = mtxA.times(mtxB.transpose());\n\t\tlet svd = new SingularValueDecomposition(cov);\n\n\t\t/* ... this doesn't seem to be necessary for 2D\n\t\tdouble d = svd.getV().times(svd.getU().transpose()).det();\n\t\tif (d > 0) d = 1; else d = -1;\n\t\tlet ident = Matrix.identity(3, 3);\n\t\tident.set(2, 2, d); // NOTE: not sure if this is necessary for 2D\n\t\tlet rotate = (svd.getV().times(ident)).times(svd.getU().transpose());*/\n\n\t\tlet rotate = svd.getV().times(svd.getU().transpose());\n\n\t\tlet rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n\t\tlet rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n\t\tlet rax = rot00 * acx + rot01 * acy;\n\t\tlet ray = rot10 * acx + rot11 * acy;\n\n\t\t// return the subset of the matrix that performs the 2D rotation & translation\n\t\treturn [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n\t}\n\n\t// takes a set of points and calculates the convex hull, in the form of an enclosing polygon\n\tpublic static convexHull(x:number[], y:number[], flatness:number):[number[], number[]]\n\t{\n\t\tlet algo = new QuickHull(x, y, sqr(flatness * 0.1));\n\t\treturn [algo.hullX, algo.hullY];\n\t}\n\n\t// takes a set of points and calculates the outline, in the form of an enclosing polygon, using the \"rolling ball\" algorithm\n\tpublic static outlinePolygon(x:number[], y:number[], diameter:number):[number[], number[]]\n\t{\n\t\t/* ... rolling ball algorithm isn't that great; the Delaunay-based method is much better\n\t\tlet algo = new RollingBall(x, y, diameter);\n\t\treturn algo.sequenceXY();*/\n\t\tlet del = new Triangulation2D(x, y);\n\t\tlet concave = del.trimConcave(diameter);\n\t\tlet idx = del.traceOutline(concave);\n\t\treturn [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n\t}\n}\n\n// implementation of the \"Quick Hull\" algorithm which calculates the convex hull that surrounds a cluster of points\nexport class QuickHull\n{\n\tprivate hsz = 0;\n\n\t// read these out for the answer\n\tpublic hullX:number[] = [];\n\tpublic hullY:number[] = [];\n\n\tconstructor(private x:number[], private y:number[], private threshSq:number)\n\t{\n\t\tconst sz = x.length;\n\n\t\tlet l = 0, r = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n])) r = n;\n\t\t\tif (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n])) l = n;\n\t\t}\n\n\t\tlet al1:number[] = [], al2:number[] = [];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n != l && n != r)\n\t\t\t{\n\t\t\t\tif (this.right(r, l, n) > 0) al1.push(n);\n\t\t\t\telse al2.push(n);\n\t\t\t}\n\t\t}\n\n\t\t// recursively build part 1\n\t\tthis.hullX.push(x[r]);\n\t\tthis.hullY.push(y[r]);\n\t\tthis.quickHull(r, l, al1);\n\n\t\t// recursively build part 2\n\t\tthis.hullX.push(x[l]);\n\t\tthis.hullY.push(y[l]);\n\t\tthis.quickHull(l, r, al2);\n\n\t\t// build a polygon\n\t\tfor (let n = 0; n < this.hullX.length - 1;)\n\t\t{\n\t\t\tif (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq)\n\t\t\t{\n\t\t\t\tthis.hullX.splice(n + 1, 1);\n\t\t\t\tthis.hullY.splice(n + 1, 1);\n\t\t\t}\n\t\t\telse n++;\n\t\t}\n\t}\n\n\t// processes a segment, in a given direction\n\tprivate quickHull(a:number, b:number, al:number[]):void\n\t{\n\t\tif (al.length == 0) return;\n\n\t\tlet c = this.furthestPoint(a, b, al);\n\t\tlet al1:number[] = [], al2:number[] = [];\n\t\tfor (let n = 0; n < al.length; n++)\n\t\t{\n\t\t\tlet p = al[n];\n\t\t\tif (p == a || p == b) continue;\n\t\t\tif (this.right(a, c, p) > 0) al1.push(p);\n\t\t\telse if (this.right(c, b, p) > 0) al2.push(p);\n\t\t}\n\n\t\tthis.quickHull(a, c, al1);\n\n\t\tthis.hullX.push(this.x[c]);\n\t\tthis.hullY.push(this.y[c]);\n\n\t\tthis.quickHull(c, b, al2);\n\t}\n\n\t// returns >0 if p is to the right of a-b, or <0 if to the left\n\tprivate right(a:number, b:number, p:number):number\n\t{\n\t\tconst x = this.x, y = this.y;\n\t\treturn (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n\t}\n\n\t// square distance point p to line a-b\n\tprivate distance(a:number, b:number, p:number):number\n\t{\n\t\tconst x = this.x, y = this.y;\n\t\tlet u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n\t\tlet ux = x[a] + u * (x[b] - x[a]);\n\t\tlet uy = y[a] + u * (y[b] - y[a]);\n\t\treturn ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n\t}\n\n\t// finds the furthest-away point from within the sub-list\n\tprivate furthestPoint(a:number, b:number, al:number[]):number\n\t{\n\t\tlet maxDist = -1;\n\t\tlet maxPos = -1;\n\t\tfor (let n = 0; n < al.length; n++)\n\t\t{\n\t\t\tlet p = al[n];\n\t\t\tif (p == a || p == b) continue;\n\t\t\tlet dist = this.distance(a, b, p);\n\t\t\tif (dist > maxDist)\n\t\t\t{\n\t\t\t\tmaxDist = dist;\n\t\t\t\tmaxPos = p;\n\t\t\t}\n\t\t}\n\t\treturn maxPos;\n\t}\n}\n\n// implementation of the \"Rolling Ball\" algorithm which traces the outline of a group of points using a granularity threshold (the \"ball diameter\"); note that the points must\n// be dense enough so that the \"ball\" can be rolled around the outside without \"falling in\", in which case the result will be null\nexport class RollingBall\n{\n\tpublic sequence:number[] = []; // the indices tracing the outline; set to null if it failed\n\n\tconstructor(public x:number[], public y:number[], diameter:number)\n\t{\n\t\tconst sz = x.length;\n\t\tconst threshSq = diameter * diameter;\n\n\t\tlet first = Vec.idxMax(x), latest = first;\n\t\tlet direction = 0.0; // radians (pointing to the right)\n\t\tlet visited = Vec.booleanArray(false, sz);\n\t\tthis.sequence.push(first);\n\n\t\tlet roll = ():number =>\n\t\t{\n\t\t\tlet bestIdx = -1;\n\t\t\tlet bestDelta = 0, bestTheta = 0;\n\t\t\tfor (let n = 0; n < sz; n++) if (n != latest && !visited[n])\n\t\t\t{\n\t\t\t\tlet dx = x[n] - x[latest], dy = y[n] - y[latest];\n\t\t\t\tlet dsq = norm2_xy(dx, dy);\n\t\t\t\tif (dsq == 0 || dsq > threshSq) continue;\n\t\t\t\tlet theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n\t\t\t\tif (bestIdx < 0 || delta < bestDelta)\n\t\t\t\t{\n\t\t\t\t\tbestIdx = n;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestTheta = theta;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestIdx < 0) return -1;\n\n\t\t\tdirection = angleNorm(bestTheta - 0.5 * Math.PI);\n\t\t\tvisited[bestIdx] = true;\n\t\t\treturn bestIdx;\n\t\t};\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet next = roll();\n\t\t\tif (next < 0) {this.sequence = null; return;} // failure\n\t\t\tif (next == first) break;\n\t\t\tthis.sequence.push(next);\n\t\t\tlatest = next;\n\t\t}\n\t}\n\n\t// formulate the results in terms of coordinates, as an alternative to just looking at the sequence indices\n\tpublic sequencePos():Pos[]\n\t{\n\t\tif (!this.sequence) return null;\n\t\tlet posList:Pos[] = [];\n\t\tfor (let n of this.sequence) posList.push(new Pos(this.x[n], this.y[n]));\n\t\treturn posList;\n\t}\n\tpublic sequenceXY():[number[], number[]]\n\t{\n\t\tif (!this.sequence) return [null, null];\n\t\tlet px:number[] = [], py:number[] = [];\n\t\tfor (let n of this.sequence) {px.push(this.x[n]); py.push(this.y[n]);}\n\t\treturn [px, py];\n\t}\n}\n\n/*\n\tPos, Size, Box, Oval, Line: convenient trivial classes which save repetition\n*/\n\nexport class Pos\n{\n\tpublic x:number;\n\tpublic y:number;\n\n\tpublic static zero():Pos {return new Pos();}\n\tpublic static fromArray(src:number[]):Pos {return new Pos(src[0], src[1]);}\n\tconstructor(x?:number, y?:number)\n\t{\n\t\tthis.x = x == null ? 0 : x;\n\t\tthis.y = y == null ? 0 : y;\n\t}\n\n\tpublic clone():Pos {return new Pos(this.x, this.y);}\n\tpublic equals(other:Pos):boolean {return this.x == other.x && this.y == other.y;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic withScaleBy(mag:number):Pos\n\t{\n\t\treturn new Pos(this.x * mag, this.y * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Pos\n\t{\n\t\treturn new Pos(this.x + dx, this.y + dy);\n\t}\n\n\tpublic toString():string {return '[' + this.x + ',' + this.y + ']';}\n}\n\nexport class Size\n{\n\tpublic w:number;\n\tpublic h:number;\n\n\tpublic static zero():Size {return new Size();}\n\tpublic static fromArray(src:number[]):Size {return new Size(src[0], src[1]);}\n\tconstructor(w?:number, h?:number)\n\t{\n\t\tthis.w = w == null ? 0 : w;\n\t\tthis.h = h == null ? 0 : h;\n\t}\n\n\tpublic clone():Size {return new Size(this.w, this.h);}\n\tpublic equals(other:Size):boolean {return this.w == other.w && this.h == other.h;}\n\n\tpublic isZero():boolean {return this.w == 0 && this.h == 0;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.w *= mag;\n\t\tthis.h *= mag;\n\t}\n\tpublic fitInto(maxW:number, maxH:number):void\n\t{\n\t\tlet scale = 1;\n\t\tif (this.w > maxW) scale = maxW / this.w;\n\t\tif (this.h > maxH) scale = Math.min(scale, maxH / this.h);\n\t\tif (scale < 1) this.scaleBy(scale);\n\t}\n\n\tpublic withScaleBy(mag:number):Size\n\t{\n\t\treturn new Size(this.w * mag, this.h * mag);\n\t}\n\n\tpublic toString():string {return '[' + this.w + ',' + this.h + ']';}\n}\n\nexport class Box\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic w:number;\n\tpublic h:number;\n\n\tpublic static zero():Box {return new Box();}\n\tpublic static fromBounds(x1:number, y1:number, x2:number, y2:number) {return new Box(x1, y1, x2 - x1, y2 - y1);}\n\tpublic static fromSize(sz:Size):Box {return new Box(0, 0, sz.w, sz.h);}\n\tpublic static fromOval(oval:Oval):Box {return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh);}\n\tpublic static fromArray(src:number[]):Box {return new Box(src[0], src[1], src[2], src[3]);}\n\tconstructor(x?:number, y?:number, w?:number, h?:number)\n\t{\n\t\tthis.x = x == null ? 0 : x;\n\t\tthis.y = y == null ? 0 : y;\n\t\tthis.w = w == null ? 0 : w;\n\t\tthis.h = h == null ? 0 : h;\n\t}\n\n\tpublic clone():Box {return new Box(this.x, this.y, this.w, this.h);}\n\tpublic equals(other:Box):boolean {return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h;}\n\n\tpublic getPos():Pos {return new Pos(this.x, this.y);}\n\tpublic setPos(pos:Pos):void\n\t{\n\t\tthis.x = pos.x;\n\t\tthis.y = pos.y;\n\t}\n\tpublic getSize():Size {return new Size(this.w, this.h);}\n\tpublic setSize(sz:Size):void\n\t{\n\t\tthis.w = sz.w;\n\t\tthis.h = sz.h;\n\t}\n\n\tpublic minX():number {return this.x;}\n\tpublic minY():number {return this.y;}\n\tpublic midX():number {return this.x + 0.5 * this.w;}\n\tpublic midY():number {return this.y + 0.5 * this.h;}\n\tpublic maxX():number {return this.x + this.w;}\n\tpublic maxY():number {return this.y + this.h;}\n\tpublic area():number {return this.w * this.h;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.w *= mag;\n\t\tthis.h *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\tpublic grow(bx:number, by:number):void\n\t{\n\t\tthis.x -= bx;\n\t\tthis.y -= by;\n\t\tthis.w += 2 * bx;\n\t\tthis.h += 2 * by;\n\t}\n\n\tpublic withScaleBy(mag:number):Box\n\t{\n\t\treturn new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Box\n\t{\n\t\treturn new Box(this.x + dx, this.y + dy, this.w, this.h);\n\t}\n\tpublic withGrow(bx:number, by:number):Box\n\t{\n\t\treturn new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n\t}\n\n\tpublic intersects(other:Box):boolean\n\t{\n\t\treturn GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n\t}\n\n\t// returns the actual intersection box; note that if they don't intersect at all, things get weird\n\tpublic intersection(other:Box):Box\n\t{\n\t\tlet x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n\t\tlet x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n\t\tlet x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n\t\treturn new Box(x5, y5, x6 - x5, y6 - y5);\n\t}\n\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n\t}\n\n\tpublic union(other:Box):Box\n\t{\n\t\tlet x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n\t\tlet y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\tpublic isZero():boolean {return this.w == 0 && this.h == 0;} // deprecated\n\tpublic isEmpty():boolean {return this.w == 0 && this.h == 0;}\n\tpublic notEmpty():boolean {return this.w > 0 || this.h > 0;}\n\n\tpublic toString():string {return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']';}\n}\n\nexport class Oval\n{\n\tpublic cx:number;\n\tpublic cy:number;\n\tpublic rw:number;\n\tpublic rh:number;\n\n\tpublic static zero():Oval {return new Oval();}\n\tpublic static fromBox(box:Box):Oval {return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h);}\n\tpublic static fromArray(src:number[]):Oval {return new Oval(src[0], src[1], src[2], src[3]);}\n\tconstructor(cx?:number, cy?:number, rw?:number, rh?:number)\n\t{\n\t\tthis.cx = cx == null ? 0 : cx;\n\t\tthis.cy = cy == null ? 0 : cy;\n\t\tthis.rw = rw == null ? 0 : rw;\n\t\tthis.rh = rh == null ? 0 : rh;\n\t}\n\n\tpublic clone():Oval {return new Oval(this.cx, this.cy, this.rw, this.rh);}\n\n\tpublic setCentre(pos:Pos):void\n\t{\n\t\tthis.cx = pos.x;\n\t\tthis.cy = pos.y;\n\t}\n\tpublic setRadius(sz:Size):void\n\t{\n\t\tthis.rw = sz.w;\n\t\tthis.rh = sz.h;\n\t}\n\n\tpublic minX():number {return this.cx - this.rw;}\n\tpublic minY():number {return this.cy - this.rh;}\n\tpublic maxX():number {return this.cx + this.rw;}\n\tpublic maxY():number {return this.cy + this.rh;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.cx *= mag;\n\t\tthis.cy *= mag;\n\t\tthis.rw *= mag;\n\t\tthis.rh *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.cx += dx;\n\t\tthis.cy += dy;\n\t}\n\n\tpublic withScaleBy(mag:number):Oval\n\t{\n\t\treturn new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Oval\n\t{\n\t\treturn new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n\t}\n\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\tlet dx = x - this.cx, dy = y - this.cy;\n\t\tlet a = dx / this.rw, b = dy / this.rh;\n\t\treturn a * a + b * b <= 1;\n\t}\n\n\tpublic toString():string {return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']';}\n}\n\nexport class Line\n{\n\tpublic x1:number;\n\tpublic y1:number;\n\tpublic x2:number;\n\tpublic y2:number;\n\n\tpublic static zero():Line {return new Line();}\n\tpublic static fromPos(pos1:Pos, pos2:Pos):Line {return new Line(pos1.x, pos1.y, pos2.x, pos2.y);}\n\tconstructor(x1?:number, y1?:number, x2?:number, y2?:number)\n\t{\n\t\tthis.x1 = x1 == null ? 0 : x1;\n\t\tthis.y1 = y1 == null ? 0 : y1;\n\t\tthis.x2 = x2 == null ? 0 : x2;\n\t\tthis.y2 = y2 == null ? 0 : y2;\n\t}\n\n\tpublic clone():Line {return new Line(this.x1, this.y1, this.x2, this.y2);}\n\n\tpublic setPos1(pos:Pos):void\n\t{\n\t\tthis.x1 = pos.x;\n\t\tthis.y1 = pos.y;\n\t}\n\tpublic setPos2(pos:Pos):void\n\t{\n\t\tthis.x2 = pos.x;\n\t\tthis.y2 = pos.y;\n\t}\n\n\tpublic minX():number {return Math.min(this.x1, this.x2);}\n\tpublic minY():number {return Math.min(this.y1, this.y2);}\n\tpublic maxX():number {return Math.max(this.x1, this.x2);}\n\tpublic maxY():number {return Math.max(this.y1, this.y2);}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x1 *= mag;\n\t\tthis.y1 *= mag;\n\t\tthis.x2 *= mag;\n\t\tthis.y2 *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x1 += dx;\n\t\tthis.y1 += dy;\n\t\tthis.x2 += dx;\n\t\tthis.y2 += dy;\n\t}\n\n\tpublic toString():string {return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']';}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2017 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/*\n\tUtilities to supplement the rather rudimentary DOM, adding readability and convenience.\n\n\tNote that the baseline implementation assumes that the JavaScript engine has a DOM, which is the case when running on web browsers or\n\tthe Electron desktop. When running under command line NodeJS or web-worker environments this is missing. If it is not possible to avoid\n\tusing XML (e.g. serialisation of DataSheets) then the workaround is to set the static custom methods to call the replacement\n\timplementations as a plugin (e.g. from an NPM library that has to be explicitly installed).\n*/\n\n// these are defined locally, in case DOM has to be used as a plugin (in NodeJS mode)\n\nconst ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\n\nexport class XML\n{\n\t// these need to be defined when running under a raw NodeJS or worker thread environment, which has the XML parsing functionality stripped out of\n\t// the API; not necessary when running in regular web browser mode or Electron main task\n\tpublic static customParser:any = null;\n\tpublic static customSerial:any = null;\n\n\t// DOM <--> String\n\tpublic static parseXML(strXML:string):Document\n\t{\n\t\tlet xmlDoc:Document;\n\t\tif (this.customParser)\n\t\t\txmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n\t\telse\n\t\t\txmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n\t\tif (xmlDoc == null) return null;\n\t\treturn xmlDoc;\n\t}\n\tpublic static toString(doc:Document):string\n\t{\n\t\tif (this.customSerial)\n\t\t\treturn new this.customSerial().serializeToString(doc.documentElement);\n\t\telse\n\t\t\treturn new XMLSerializer().serializeToString(doc.documentElement);\n\t}\n\tpublic static toPrettyString(doc:Document):string\n\t{\n\t\tlet xslt =\n\t\t[\n\t\t\t'<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n\t\t\t'  <xsl:strip-space elements=\"*\"/>',\n\t\t\t'  <xsl:template match=\"para[content-style][not(text())]\">',\n\t\t\t'    <xsl:value-of select=\"normalize-space(.)\"/>',\n\t\t\t'  </xsl:template>',\n\t\t\t'  <xsl:template match=\"node()|@*\">',\n\t\t\t'    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n\t\t\t'  </xsl:template>',\n\t\t\t'  <xsl:output indent=\"yes\"/>',\n\t\t\t'</xsl:stylesheet>',\n\t\t].join('\\n');\n\t\tlet xsltDoc = this.parseXML(xslt);\n\t\tlet xsltProc = new XSLTProcessor();\n\t\txsltProc.importStylesheet(xsltDoc);\n\t\tlet resultDoc = xsltProc.transformToDocument(doc);\n\t\treturn new XMLSerializer().serializeToString(resultDoc);\n\t}\n\n\t// composes all of the text nodes and returns them\n\tpublic static nodeText(el:Node):string\n\t{\n\t\tlet text = '';\n\t\tfor (let child of Array.from(el.childNodes))\n\t\t{\n\t\t\tif (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE) text += child.nodeValue;\n\t\t}\n\t\treturn text;\n\t}\n\n\t// convenient method for finding a child element and returning its text content; note that if the parent is null or the child cannot be found,\n\t// returns null, but if the child exists and has no text, returns a blank string\n\tpublic static childText(parent:Element, tagName:string):string\n\t{\n\t\tif (parent == null) return null;\n\t\tlet el = this.findElement(parent, tagName);\n\t\tif (el == null) return null;\n\t\treturn this.nodeText(el);\n\t}\n\n\t// creates and appends an element\n\tpublic static appendElement(parent:Node, name:string):Element\n\t{\n\t\tlet el = parent.ownerDocument.createElement(name);\n\t\tparent.appendChild(el);\n\t\treturn el;\n\t}\n\n\t// creates and appends an element and makes sure that it occurs immediately after the 'presib' node\n\tpublic static appendElementAfter(presib:Node, name:string):Element\n\t{\n\t\tlet el = presib.ownerDocument.createElement(name);\n\t\tlet postsib = presib.nextSibling;\n\t\tif (postsib == null)\n\t\t\tpresib.parentNode.appendChild(el);\n\t\telse\n\t\t\tpresib.parentNode.insertBefore(el, postsib);\n\t\treturn el;\n\t}\n\n\t// creates and appends text, maybe in a CDATA section\n\t//public static appendText(Node parent, String text):void {appendText(parent, text, false);}\n\tpublic static appendText(parent:Node, text:string, isCDATA:boolean = false):void\n\t{\n\t\tif (text == null || text.length == 0) return;\n\t\tif (!isCDATA)\n\t\t\tparent.appendChild(parent.ownerDocument.createTextNode(text));\n\t\telse\n\t\t\tparent.appendChild(parent.ownerDocument.createCDATASection(text));\n\t}\n\n\t// appends an XML entity (e.g. \"&nbsp;\")\n\t/*public static appendEntity(parent:Node, entity:string):void\n\t{\n\t\tif (entity.startsWith('&')) entity = entity.substring(1);\n\t\tif (entity.endsWith(';')) entity = entity.substring(0, entity.length - 1);\n\t\tparent.appendChild(parent.ownerDocument.createEntityReference(entity));\n\t}*/\n\n\t// creates an element child with a particular name and populates it with text\n\tpublic static createTextChild(parent:Node, name:string, text:string, isCDATA:boolean = false):void\n\t{\n\t\tlet el = parent.ownerDocument.createElement(name) as Element;\n\t\tparent.appendChild(el);\n\t\tif (!isCDATA) el.textContent = text; else el.appendChild(parent.ownerDocument.createCDATASection(text));\n\t}\n\n\t// defines the current notes contents as being only the provided text\n\tpublic static setText(parent:Node, text:string, isCDATA:boolean = false):void\n\t{\n\t\twhile (parent.firstChild != null) parent.removeChild(parent.firstChild);\n\t\tthis.appendText(parent, text, isCDATA);\n\t}\n\n\t// returns the first element with the given tag name, or null if none\n\tpublic static findElement(parent:Element, tagName:string):Element\n\t{\n\t\tif (parent == null) return null;\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE && node.nodeName == tagName) return node as Element;\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// find child elements with the given tag name, or an empty array if invalid\n\tpublic static findChildElements(parent:Element, tagName:string):Element[]\n\t{\n\t\tif (parent == null) return [];\n\t\tlet list:Element[] = [];\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE && node.nodeName === tagName) list.push(node as Element);\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns a list of all child elements, or an empty array if none\n\tpublic static childElements(parent:Element):Element[]\n\t{\n\t\tif (parent == null) return [];\n\t\tlet list:Element[] = [];\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE) list.push(node as Element);\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn list;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box, Pos, Size} from './Geom';\nimport {XML} from './XML';\n\n/*\n\tDOM: lightweight domain object wrapper that's intended to provide a subset of the functionality of JQuery. Most\n\tof what it does is for convenience rather than the historical need to workaround compatibility issues.\n*/\n\n// generic creator: converts a compatible object into a DOM\nexport function dom(obj:Element | DOM | string):DOM\n{\n\tif (typeof obj == 'string') return DOM.parse(obj);\n\tif (obj instanceof DOM) return obj;\n\treturn new DOM(obj);\n}\n\n// a more permissive version of the above, which also looks for JQuery inputs, for compatibility purposes; type checking is\n// limited, so buyer-beware\nexport function domLegacy(obj:any):DOM\n{\n\tif (obj == null) return null;\n\tif (obj.jquery) return dom(obj[0]);\n\treturn dom(obj);\n}\n\nexport type CSSDictionary = Record<string, string | number | boolean> |\n{\n\t'display': 'none' | 'block' | 'inline-block' | 'flex' | 'inline-flex' | 'grid' | 'inline-grid';\n};\n\nexport class DOM\n{\n\tconstructor(public el:Element)\n\t{\n\t}\n\n\tpublic get elHTML():HTMLElement {return this.el as HTMLElement;}\n\tpublic get elInput():HTMLInputElement {return this.el as HTMLInputElement;}\n\tpublic get elCanvas():HTMLCanvasElement {return this.el as HTMLCanvasElement;}\n\n\tpublic static parse(xhtml:string):DOM\n\t{\n\t\tlet xml = XML.parseXML(xhtml);\n\t\tif (xml == null) throw 'Invalid XHTML string: ' + xhtml;\n\t\tlet html = xml.documentElement.outerHTML;\n\n\t\tlet template = document.createElement('template');\n\t\ttemplate.innerHTML = html;\n\t\treturn new DOM(template.content.firstChild as Element);\n\t}\n\n\t// ------------ discovery ------------\n\n\t// finds just one qualifying element based on the selector string; returns null if nothing\n\tpublic static find(selector:string):DOM\n\t{\n\t\tlet el = document.querySelector(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// finds all instances matching the selector string, or empty array if nothing\n\tpublic static findAll(selector:string):DOM[]\n\t{\n\t\tlet nodeList = document.querySelectorAll(selector);\n\t\tlet domList:DOM[] = [];\n\t\tfor (let n = 0; n < nodeList.length; n++) domList.push(new DOM(nodeList.item(n)));\n\t\treturn domList;\n\t}\n\n\t// returns object for parent, or null if this is the root\n\tpublic parent():DOM\n\t{\n\t\tlet parent = this.el.parentElement;\n\t\treturn parent ? new DOM(parent) : null;\n\t}\n\n\t// returns the first object in the parent's ancestry that matches the selector\n\tpublic ancestor(selector:string):DOM\n\t{\n\t\tlet el = this.el.closest(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// return all the node's element children\n\tpublic children(tag?:string):DOM[]\n\t{\n\t\tlet domList:DOM[] = [];\n\t\tfor (let child = this.el.firstElementChild; child; child = child.nextElementSibling)\n\t\t{\n\t\t\tif (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase()) continue;\n\t\t\tdomList.push(new DOM(child));\n\t\t}\n\t\treturn domList;\n\t}\n\n\t// finds just one qualifying in the child herarchy based on the selector string; returns null if nothing\n\tpublic find(selector:string):DOM\n\t{\n\t\tlet el = this.el.querySelector(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// finds all instances matching the selector string in the child hierarchy, or empty array if nothing\n\tpublic findAll(selector:string):DOM[]\n\t{\n\t\tlet nodeList = this.el.querySelectorAll(selector);\n\t\tlet domList:DOM[] = [];\n\t\tfor (let n = 0; n < nodeList.length; n++) domList.push(new DOM(nodeList.item(n)));\n\t\treturn domList;\n\t}\n\n\t// returns true if this element still exists in the overall HTML DOM, i.e. hasn't been removed and left dangling\n\tpublic exists():boolean\n\t{\n\t\treturn document.documentElement.contains(this.el);\n\t}\n\n\t// returns true if the element is currently being shown onscreen\n\tpublic isVisible():boolean\n\t{\n\t\treturn this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n\t}\n\n\t// ------------ hierarchy ------------\n\n\t// append the given node to this one's child list\n\tpublic append(child:DOM):void\n\t{\n\t\tthis.el.append(child.el);\n\t}\n\n\t// append this element to the given parent, and then return itself (for convenient chaining)\n\tpublic appendTo(parent:DOM | Element):DOM\n\t{\n\t\tif (parent instanceof DOM)\n\t\t\t(parent as DOM).el.append(this.el);\n\t\telse\n\t\t\t(parent as Element).appendChild(this.el);\n\t\treturn this;\n\t}\n\n\t// insert the given node at the beginning of this one's child list\n\tpublic prepend(child:DOM):void\n\t{\n\t\tthis.el.prepend(child.el);\n\t}\n\n\t// prepend this element to the given parent, and then return itself (for convenient chaining)\n\tpublic prependTo(parent:DOM | Element):DOM\n\t{\n\t\tif (parent instanceof DOM)\n\t\t\t(parent as DOM).el.prepend(this.el);\n\t\telse\n\t\t\t(parent as Element).append(this.el);\n\t\treturn this;\n\t}\n\n\t// inserts this object right before the reference DOM, in the reference DOM's parent list\n\tpublic insertBefore(ref:DOM):DOM\n\t{\n\t\tref.el.parentElement.insertBefore(this.el, ref.el);\n\t\treturn this;\n\t}\n\n\t// inserts this object right after the reference DOM, in the reference DOM's parent list\n\tpublic insertAfter(ref:DOM):DOM\n\t{\n\t\tlet before = ref.el.nextElementSibling;\n\t\tif (before)\n\t\t\tref.el.parentElement.insertBefore(this.el, before);\n\t\telse\n\t\t\tref.el.parentElement.append(this.el);\n\t\treturn this;\n\t}\n\n\t// take this node out of the DOM\n\tpublic remove():void\n\t{\n\t\tthis.el.remove();\n\t}\n\n\t// ------------ properties ------------\n\n\tpublic empty():void\n\t{\n\t\tthis.el.innerHTML = '';\n\t}\n\n\t// getting & setting HTML content\n\tpublic getHTML():string\n\t{\n\t\treturn this.el.innerHTML;\n\t}\n\tpublic setHTML(html:string):void\n\t{\n\t\tthis.el.innerHTML = html;\n\t}\n\tpublic appendHTML(xhtml:string):void\n\t{\n\t\tlet xml = XML.parseXML('<z>' + xhtml + '</z>');\n\t\tif (xml == null) throw 'Invalid XHTML string: ' + xhtml;\n\t\tlet html = xml.documentElement.innerHTML;\n\t\tthis.el.insertAdjacentHTML('beforeend', html);\n\t}\n\n\t// getting & setting unmarkedup text\n\tpublic getText():string\n\t{\n\t\treturn this.el.textContent;\n\t}\n\tpublic setText(text:string):void\n\t{\n\t\tthis.el.textContent = text;\n\t}\n\tpublic appendText(text:string):void\n\t{\n\t\t//this.el.innerHTML += escapeHTML(text);\n\t\tlet content = document.createTextNode(text);\n\t\tthis.el.appendChild(content);\n\t}\n\n\t// getting & setting values of interactive widgets, like <input>\n\tpublic getValue():string\n\t{\n\t\treturn (this.el as HTMLInputElement).value;\n\t}\n\tpublic setValue(str:string):void\n\t{\n\t\t(this.el as HTMLInputElement).value = str || '';\n\t}\n\n\t// getting & setting CSS values\n\tpublic getCSS(key:string):string\n\t{\n\t\treturn this.elHTML.style.getPropertyValue(key);\n\t}\n\tpublic setCSS(key:string, value:string | number):void\n\t{\n\t\tthis.elHTML.style.setProperty(key, value?.toString());\n\t}\n\tpublic css(dict:CSSDictionary):DOM\n\t{\n\t\tfor (let key in dict) this.setCSS(key, (dict as Record<string, any>)[key].toString());\n\t\treturn this;\n\t}\n\n\t// getting & setting attributes\n\tpublic getAttr(key:string):string\n\t{\n\t\tif (!this.el.hasAttribute(key)) return null;\n\t\treturn this.el.getAttribute(key);\n\t}\n\tpublic setAttr(key:string, value:string):void\n\t{\n\t\tthis.el.setAttribute(key, value);\n\t}\n\tpublic attr(dict:Record<string, string | number | boolean>):DOM\n\t{\n\t\tfor (let key in dict) this.setAttr(key, dict[key].toString());\n\t\treturn this;\n\t}\n\n\t// getting & setting CSS classes\n\tpublic addClass(clsnames:string):void\n\t{\n\t\tfor (let cls of clsnames.split(' ')) if (cls) this.elHTML.classList.add(cls);\n\t}\n\tpublic removeClass(clsnames:string):void\n\t{\n\t\tfor (let cls of clsnames.split(' ')) if (cls) this.elHTML.classList.remove(cls);\n\t}\n\tpublic hasClass(clsname:string):boolean\n\t{\n\t\treturn this.elHTML.classList.contains(clsname);\n\t}\n\tpublic setClass(clsname:string, flag:boolean):void\n\t{\n\t\tif (flag) this.addClass(clsname); else this.removeClass(clsname);\n\t}\n\tpublic class(clsnames:string | string[]):DOM\n\t{\n\t\tif (Array.isArray(clsnames))\n\t\t{\n\t\t\tfor (let cls of clsnames) this.addClass(cls);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let cls of clsnames.split(' ')) this.addClass(cls);\n\t\t}\n\t\treturn this;\n\t}\n\tpublic toggleClass(dict:Record<string, boolean>):void\n\t{\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tif (dict[key]) this.elHTML.classList.add(key); else this.elHTML.classList.remove(key);\n\t\t}\n\t}\n\n\t// position & size\n\tpublic width():number\n\t{\n\t\treturn this.elHTML.offsetWidth;\n\t}\n\tpublic height():number\n\t{\n\t\treturn this.elHTML.offsetHeight;\n\t}\n\tpublic offset():Pos\n\t{\n\t\tlet rect = this.el.getBoundingClientRect();\n\t\tlet win = this.el.ownerDocument.defaultView;\n\t\treturn new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n\t}\n\tpublic size():Size\n\t{\n\t\treturn new Size(this.width(), this.height());\n\t}\n\tpublic area():Box\n\t{\n\t\tlet pos = this.offset();\n\t\treturn new Box(pos.x, pos.y, this.width(), this.height());\n\t}\n\n\t// shorthand for defining the precise rectangle in pixels\n\tpublic setBoundaryPixels(x:number, y:number, w:number, h:number):void\n\t{\n\t\tthis.css({'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px`});\n\t}\n\n\t// similar convenience for size in hard pixels\n\tpublic setSizePixels(w:number, h:number):void\n\t{\n\t\tthis.css({'width': `${w}px`, 'height': `${h}px`});\n\t}\n\n\t// focus: testing and taking focus; note that focus grabbing often works better with a short delay, hence the convenient option\n\tpublic hasFocus():boolean\n\t{\n\t\treturn this.el === document.activeElement;\n\t}\n\tpublic grabFocus(delay = false):void\n\t{\n\t\tif (delay)\n\t\t\tsetTimeout(() => this.grabFocus(), 10);\n\t\telse\n\t\t\tthis.elHTML.focus();\n\t}\n\n\t// ------------ events ------------\n\n\tpublic removeEvent(id:string, callback:any):void\n\t{\n\t\tthis.el.removeEventListener(id, callback);\n\t}\n\tpublic onKeyDown(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keydown', callback);\n\t}\n\tpublic onKeyUp(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keyup', callback);\n\t}\n\tpublic onKeyPress(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keypress', callback);\n\t}\n\tpublic onScroll(callback:(event?:Event) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('scroll', callback);\n\t}\n\tpublic onWheel(callback:(event?:WheelEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('wheel', callback);\n\t}\n\tpublic onClick(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('click', callback);\n\t}\n\tpublic onContextMenu(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('contextmenu', callback);\n\t}\n\tpublic onDblClick(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('dblclick', callback);\n\t}\n\tpublic onMouseDown(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mousedown', callback);\n\t}\n\tpublic onMouseUp(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseup', callback);\n\t}\n\tpublic onMouseEnter(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseenter', callback);\n\t}\n\tpublic onMouseLeave(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseleave', callback);\n\t}\n\tpublic onMouseMove(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mousemove', callback);\n\t}\n\tpublic onMouseOver(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseover', callback);\n\t}\n\tpublic onChange(callback:(event?:Event) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('change', callback);\n\t}\n\tpublic onInput(callback:(event?:InputEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('input', callback);\n\t}\n\tpublic onTouchStart(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchstart', callback);\n\t}\n\tpublic onTouchMove(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchmove', callback);\n\t}\n\tpublic onTouchCancel(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchcancel', callback);\n\t}\n\tpublic onTouchEnd(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchend', callback);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DOM, dom, domLegacy} from './dom';\nimport {Size} from './Geom';\nimport {Vec} from './Vec';\n\n/*\n\tGeneral purpose functions. Note that these are not in the WebMolKit namespace.\n*/\n\n//export declare var $:JQueryStatic;\n\n// string-to-number: control the behaviour when invalid\nexport function safeInt(str:string, def:number = 0):number\n{\n\tif (str == null || str.length == 0) return def;\n\tlet val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n\t\t\tstr.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n\treturn isNaN(val) ? def : val;\n}\nexport function safeFloat(str:string, def:number = 0):number\n{\n\tif (str == null || str.length == 0) return def;\n\tlet val = parseFloat(str);\n\treturn isNaN(val) ? def : val;\n}\n\n// creates a new element, with a specific parent (raw or jQuery); returns the child node - the raw DOM element, not the\n// jQuery wrapper\nexport function newElement(parent:any, tag:string, attr?:Record<string, any>):Element\n{\n\t/*let el = $(`<${tag}>`);\n\tif (attr) el.attr(attr);\n\t$(parent).append(el);\n\treturn el[0];*/\n\n\tlet domNew = dom(`<${tag}/>`);\n\tif (attr) domNew.attr(attr);\n\tdomLegacy(parent).append(domNew);\n\treturn domNew.el;\n}\n\n// appends child text to the node\nexport function addText(parent:any, text:string)\n{\n\tlet el = dom(parent).el;\n\tel.appendChild(document.createTextNode(text));\n}\n\n// convenience function for adding the plural modifier, i.e. \"1 thing\" vs \"N things\"\nexport function plural(count:number):string\n{\n\treturn count == 1 ? '' : 's';\n}\n\n// turns a number into a floating point representation with a maximum number of significant figures\nexport function formatDouble(value:number, sigfig:number):string\n{\n\tif (value == null) return '';\n\tlet str = value.toPrecision(sigfig);\n\tif (str.indexOf('.') > 0)\n\t{\n\t\twhile (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\tif (str.endsWith('.')) str = str.substring(0, str.length - 1);\n\t}\n\treturn str;\n}\n\n// turns an HTML-style colour (#RRGGBB) into its numeric equivalent (0xRRGGBB), or null if invalid\nexport function htmlToRGB(col:string):number\n{\n\tif (col == null || col.charAt(0) != '#' || col.length != 7) return null;\n\treturn parseInt(col.substring(1), 16);\n}\n\n// converts an integer colour (0xTTRRGGBB) to the HTML style; transparency info is stripped out\nexport function colourCode(col:number):string\n{\n\tlet hex = (col & 0xFFFFFF).toString(16);\n\twhile (hex.length < 6) hex = '0' + hex;\n\treturn '#' + hex;\n}\n// returns the alpha value for a colour, assuming that it is an integer of the 0xTTRRGGBB format\nexport function colourAlpha(col:number):number\n{\n\tlet transp = (col >>> 24) & 0xFF;\n\treturn transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\n// turns a TRGB integer into the style used by the canvas node\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col:number):string\n{\n\t// simple cases first\n\tif (col == 0xFFFFFF) return 'white';\n\tif (col == 0x000000) return 'black';\n\tif (col == -1) return null; //return 'rgba(0,0,0,0)';\n\tif (col >= 0 && col <= 0xFFFFFF) return colourCode(col);\n\n\t// if there's transparency, use the long-winded syntax\n\tconst t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n\tconst r = ((col >> 16) & 0xFF);// * ONE_OVER_255;\n\tconst g = ((col >> 8) & 0xFF);// * ONE_OVER_255;\n\tconst b = (col & 0xFF);// * ONE_OVER_255;\n\treturn 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\n\n// RGB manipulation: very convenient functions for \"smearing\" between fractional values\nexport function blendRGB(fract:number, rgb1:number, rgb2:number, rgb3?:number):number\n{\n\tfract = Math.max(0, Math.min(1, fract));\n\n\tlet r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n\tlet r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n\tlet R:number, G:number, B:number;\n\n\tif (rgb3 == null)\n\t{\n\t\tlet f1 = 1 - fract, f2 = fract;\n\t\tR = Math.round(0xFF * (f1 * r1 + f2 * r2));\n\t\tG = Math.round(0xFF * (f1 * g1 + f2 * g2));\n\t\tB = Math.round(0xFF * (f1 * b1 + f2 * b2));\n\t}\n\telse\n\t{\n\t\tlet r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n\n\t\tif (fract < 0.5)\n\t\t{\n\t\t\tlet f2 = fract * 2, f1 = 1 - f2;\n\t\t\tR = Math.round(0xFF * (f1 * r1 + f2 * r2));\n\t\t\tG = Math.round(0xFF * (f1 * g1 + f2 * g2));\n\t\t\tB = Math.round(0xFF * (f1 * b1 + f2 * b2));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n\t\t\tR = Math.round(0xFF * (f1 * r2 + f2 * r3));\n\t\t\tG = Math.round(0xFF * (f1 * g2 + f2 * g3));\n\t\t\tB = Math.round(0xFF * (f1 * b2 + f2 * b3));\n\t\t}\n\t}\n\n\treturn (R << 16) | (G << 8) | B;\n}\n\n// formats date nicely, as dd-mon-yyyy\nexport function formatDate(date:Date):string\n{\n\tconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tlet day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n\treturn day + '-' + MONTHS[mon] + '-' + year;\n}\n\n// goes through all text-node children and splices them together\nexport function nodeText(node:Node):string\n{\n\tlet ret = '';\n\tif (!node) return '';\n\tnode = node.firstChild;\n\twhile (node)\n\t{\n\t\tif (node.nodeType == 3 || node.nodeType == 4) ret += node.nodeValue;\n\t\tnode = node.nextSibling;\n\t}\n\treturn ret;\n}\n\n// convenience functions to abstract the unreasonably longwinded closures function\nexport function isDef(v:any):boolean\n{\n\treturn !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v:any):boolean\n{\n\treturn v === null || typeof v === 'undefined';\n}\n\n// given a particular event, picks out the (x,y) coordinates, and offsets them until they are in the space of the given\n// node container, which must be a parent\nexport function eventCoords(event:MouseEvent | Touch, container:any):number[]\n{\n\tlet pos = domLegacy(container).offset();\n\tlet relX = event.pageX - pos.x;\n\tlet relY = event.pageY - pos.y;\n\treturn [relX, relY];\n}\n\n// sets an object's position by pixel: convenience function otherwise rather ugly code; assumes that the positioning style already configured as needed\nexport function setBoundaryPixels(dom:DOM, x:number, y:number, w:number, h:number):void\n{\n\tdom.css({'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px'});\n}\n\n// return the object's screen position as [x, y, w, h]\nexport function getBoundaryPixelsDOM(dom:DOM):[number, number, number, number]\n{\n\tlet offset = dom.offset();\n\treturn [offset.x, offset.y, dom.width(), dom.height()];\n}\n\n// return the object's position and size relative to its parent\nexport function getOffsetPixelsDOM(dom:DOM):[number, number, number, number]\n{\n\treturn [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\n\n// convenient access to the total available document size\nexport function getViewportSize():[number, number]\n{\n\tif (window.innerWidth != null) return [window.innerWidth, window.innerHeight];\n\treturn [window.document.body.clientWidth, window.document.body.clientHeight];\n}\n\n// geometry functions\nexport function norm_xy(dx:number, dy:number):number\n{\n\t//return Math.sqrt(dx * dx + dy * dy);\n\treturn Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx:number, dy:number, dz:number):number\n{\n\t//return Math.sqrt(dx * dx + dy * dy + dz * dz);\n\treturn Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx:number, dy:number):number\n{\n\treturn dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx:number, dy:number, dz:number):number\n{\n\treturn dx * dx + dy * dy + dz * dz;\n}\n\n// converts a floating point number fo -1,0,1 depending on sign or lack thereof\nexport function signum(v:number):number\n{\n\treturn v < 0 ? -1 : v > 0 ? 1 : 0;\n}\n\n// miscellaneous math\nexport function sqr(v:number):number\n{\n\treturn v * v;\n}\nexport function invZ(v:number):number {return v == 0 ? 0 : 1.0 / v;}\n\n// returns true if the numbers are effectively equal, assuming float/double precision\nexport function fltEqual(v1:number, v2:number) {return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2);}\nexport function realEqual(v1:number, v2:number) {return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2);}\n\n// returns a random integer between 0 and size-1\nexport function randomInt(size:number):number\n{\n\tif (size <= 1) return 0;\n\treturn Math.floor(Math.random() * size);\n}\n\n// angle helpers\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\n\n// normalised angle, guaranteed to be -PI <= th < PI\nexport function angleNorm(th:number):number\n{\n\tif (th == -Math.PI) return Math.PI;\n\tif (th < -Math.PI) {let mod = Math.ceil((-th - Math.PI) * INV_TWOPI); return th + mod * TWOPI;}\n\tif (th > Math.PI) {let mod = Math.ceil((th - Math.PI) * INV_TWOPI); return th - mod * TWOPI;}\n\treturn th;\n}\n\n// angular difference, guaranteed to be normalised (-PI <= th < PI); think of it as {th1 - th2}\nexport function angleDiff(th1:number, th2:number):number\n{\n\tlet theta = angleNorm(th1) - angleNorm(th2);\n\treturn theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\n\n// angular difference, which is normalised from 0 <= th < 2 * PI\nexport function angleDiffPos(th1:number, th2:number):number\n{\n\tlet theta = angleNorm(th1) - angleNorm(th2);\n\treturn theta + (theta < 0 ? TWOPI : 0);\n}\n\n// for an array of angles (in radians), sorts them in order; then, rotates the array around as many times as is necessary\n// so that the difference between the first & last angles is >= than the difference between the first & second\nexport function sortAngles(theta:number[]):number[]\n{\n\tif (theta == null || theta.length < 2) return theta;\n\ttheta = theta.slice(0);\n\tfor (let n = 0; n < theta.length; n++) theta[n] = angleNorm(theta[n]);\n\tVec.sort(theta);\n\twhile (true)\n\t{\n\t\tlet a = theta[theta.length - 1], b = theta[0], c = theta[1];\n\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\tfor (let n = theta.length - 1; n > 0; n--) theta[n] = theta[n - 1];\n\t\ttheta[0] = a;\n\t}\n\treturn theta;\n}\n\n// calculates a list of unique angles (based on the threshold parameter, in radians), and returns it; the returned list of\n// angles will be sorted in order, as described by sortAngles(..); note that there is no fancy clustering, so a sequence of\n// angles which are a bit below the threshold is not guaranteed to be stable; there is also a boundary case which bumps the\n// sort rotation status slightly out of whack\nexport function uniqueAngles(theta:number[], threshold:number):number[]\n{\n\ttheta = sortAngles(theta);\n\tfor (let n = 1; n < theta.length; n++)\n\t{\n\t\tif (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {theta.splice(n, 1); n--;}\n\t}\n\treturn theta;\n}\n\n// array bounds\nexport function minArray(a:number[]):number\n{\n\tif (a == null || a.length == 0) return 0;\n\tlet v = a[0];\n\tfor (let n = 1; n < a.length; n++) v = Math.min(v, a[n]);\n\treturn v;\n}\nexport function maxArray(a:number[]):number\n{\n\tif (a == null || a.length == 0) return 0;\n\tlet v = a[0];\n\tfor (let n = 1; n < a.length; n++) v = Math.max(v, a[n]);\n\treturn v;\n}\n\n// convenience function: finds a child node by name\nexport function findNode(parent:Node, name:string):Element\n{\n\tif (parent == null) return null;\n\tlet node = parent.firstChild;\n\twhile (node)\n\t{\n\t\tif (/*node.nodeType == Node.ELEMENT_NODE &&*/ node.nodeName == name) return node as Element;\n\t\tnode = node.nextSibling as any;\n\t}\n\treturn null;\n}\n\n// as above, but returns a list; may be empty\nexport function findNodes(parent:Node, name:string):Element[]\n{\n\tif (parent == null) return null;\n\tlet node = parent.firstChild;\n\tlet list:Element[] = [];\n\twhile (node)\n\t{\n\t\tif (/*node.nodeType == Node.ELEMENT_NODE &&*/ node.nodeName == name) list.push(node as Element);\n\t\tnode = node.nextSibling as any;\n\t}\n\treturn list;\n}\n\n// creates a rounded rectangle path using splines\nexport function pathRoundedRect(x1:number, y1:number, x2:number, y2:number, rad:number):Path2D\n{\n\tlet path = new Path2D();\n\tpath.moveTo(x2 - rad, y1);\n\tpath.quadraticCurveTo(x2, y1, x2, y1 + rad);\n\tpath.lineTo(x2, y2 - rad);\n\tpath.quadraticCurveTo(x2, y2, x2 - rad, y2);\n\tpath.lineTo(x1 + rad, y2);\n\tpath.quadraticCurveTo(x1, y2, x1, y2 - rad);\n\tpath.lineTo(x1, y1 + rad);\n\tpath.quadraticCurveTo(x1, y1, x1 + rad, y1);\n\tpath.closePath();\n\treturn path;\n}\n\n// returns a rounded rect definition w. control points\nexport function coordsRoundedRect(x1:number, y1:number, x2:number, y2:number, rad:number):[number[], number[], boolean[]]\n{\n\tlet px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n\tlet py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n\tlet ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n\treturn [px, py, ctrl];\n}\n\n// convenience functions\nexport function drawLine(ctx:CanvasRenderingContext2D, x1:number, y1:number, x2:number, y2:number)\n{\n\tctx.beginPath();\n\tctx.moveTo(x1, y1);\n\tctx.lineTo(x2, y2);\n\tctx.stroke();\n}\n\n// for HTML canvas, approximates the conversion of height to ascent ratio (i.e. pass in ascent * ASCENT_FUDGE to the font height)\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent:number) {return `${ascent * ASCENT_FUDGE}px sans-serif`;}\n\n// returns the density of pixels, i.e. 1 for a regular screen, 2 for retina, etc.\nexport function pixelDensity():number\n{\n\tif ('devicePixelRatio' in window && window.devicePixelRatio > 1) return window.devicePixelRatio;\n\treturn 1;\n}\n\n// performs a shallow copy of the object: the top level guarantees new objects, while anything below that may contain\n// duplicate references with potential mutability issues\nexport function clone<T>(data:T):T\n{\n\tif (data == null) return null;\n\tif (Array.isArray(data)) return (data as any).slice(0) as T;\n\tif (typeof data != 'object') return data;\n\tlet result:any = {};\n\tfor (let key in data) result[key] = data[key];\n\treturn result as T;\n}\n\n// performs a deep clone of any kind of object: goes as deep as it has to to make sure everything is immutable; the parameter\n// should not contain functions or host objects\nexport function deepClone<T>(data:T):T\n{\n\tif (data == null) return null;\n\tif (typeof data == 'function') return null;\n\tif (typeof data != 'object') return data;\n\n\tlet result:any = Array.isArray(data) ? [] : {};\n\tfor (let key in data)\n\t{\n\t\tlet val = data[key];\n\t\tresult[key] = typeof val === 'object' ? deepClone(val) : val;\n\t}\n\treturn result as T;\n}\n\n// HTML-to-escape; gets most of the basics\nexport function escapeHTML(text:string):string\n{\n\tif (!text) return '';\n\tconst map:Record<string, string> = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n\treturn text.replace(/[&<>\"']/g, (m) => map[m]);\n}\n\n// convenience: make sure a string isn't null\nexport function orBlank(str:string):string {return str == null ? '' : str;}\n\n// abstracts values into an array; this will be obsolete once Object.values() makes it into the typescript mappings\nexport function dictValues<T>(dict:{[id:string] : T}):T[]\n{\n\tlet list:T[] = [];\n\tfor (let key in dict) list.push(dict[key]);\n\treturn list;\n}\n\n// iterate over two arrays at the same time\nexport function zip<U, V>(u:U[], v:V[]):[U, V][]\n{\n\treturn u.map((a, i) => [a, v[i]]);\n}\n\n// converts a string (which is stored by JavaScript as UCS2) to UTF8, where each character is guaranteed to be 1 byte\nexport function toUTF8(str:string):string\n{\n\tlet data:string[] = [], stripe = '';\n\tconst sz = str.length;\n\tfor (let n = 0; n < sz; n++)\n\t{\n\t\tlet charcode = str.charCodeAt(n);\n\t\tif (charcode < 0x80) stripe += str.charAt(n);\n\t\telse if (charcode < 0x800)\n\t\t{\n\t\t\tstripe += String.fromCharCode(0xc0 | (charcode >> 6));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000)\n\t\t{\n\t\t\tstripe += String.fromCharCode(0xe0 | (charcode >> 12));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\telse // surrogate pair\n\t\t{\n\t\t\tn++;\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n\t\t\tstripe += String.fromCharCode(0xf0 | (charcode >> 18));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\tif (stripe.length > 100)\n\t\t{\n\t\t\tdata.push(stripe);\n\t\t\tstripe = '';\n\t\t}\n\t}\n\tdata.push(stripe);\n\treturn data.join('');\n}\n\n// converts a UTF8 string to a regular JavaScript string (which is UCS2-encoded)\nexport function fromUTF8(str:string):string\n{\n\tlet data:string[] = [], stripe = '';\n\tconst sz = str.length;\n\tfor (let n = 0; n < sz; n++)\n\t{\n\t\tlet value = str.charCodeAt(n);\n\t\tif (value < 0x80) stripe += str.charAt(n);\n\t\telse if (value > 0xBF && value < 0xE0)\n\t\t{\n\t\t\tstripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n\t\t\tn++;\n\t\t}\n\t\telse if (value > 0xDF && value < 0xF0)\n\t\t{\n\t\t\tstr += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n\t\t\tn += 2;\n\t\t}\n\t\telse // surrogate pair\n\t\t{\n\t\t\tlet charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n\t\t\tstripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n\t\t\tn += 3;\n\t\t}\n\t\tif (stripe.length > 100)\n\t\t{\n\t\t\tdata.push(stripe);\n\t\t\tstripe = '';\n\t\t}\n\t}\n\tdata.push(stripe);\n\treturn data.join('');\n}\n\n// returns a pretty-printed JSON representation with tabs and aligned braces (Allman/ANSI-style) rather than the kack-braced default\nexport function jsonPrettyPrint(json:any):string\n{\n\tlet lines = JSON.stringify(json, null, 1).split(/\\n/);\n\tfor (let n = 0; n < lines.length; n++)\n\t{\n\t\tlines[n] = lines[n].trim();\n\t\tif (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('[')))\n\t\t{\n\t\t\tlet ch = lines[n].charAt(lines[n].length - 1);\n\t\t\tlines[n] = lines[n].substring(0, lines[n].length - 1);\n\t\t\tlines.splice(n + 1, 0, ch);\n\t\t\tn--;\n\t\t}\n\t}\n\tlet indent = 0;\n\tfor (let n = 0; n < lines.length; n++)\n\t{\n\t\tlet orig = lines[n];\n\t\tif (orig == ']' || orig == '}' || orig == '],' || orig == '},') indent--;\n\t\tlines[n] = '\\t'.repeat(indent) + orig;\n\t\tif (orig == '[' || orig == '{') indent++;\n\t}\n\treturn lines.join('\\n');\n}\n\n// special keycodes, which correspond to KeyboardEvent.key: for the most part anything that is written on the keyboard as a single character can\n// be used literally (e.g. things like 1 , < [ {); these named constants are not all self-explanatory\nexport const enum KeyCode\n{\n\tBackspace = 'Backspace',\n\tTab = 'Tab',\n\tEnter = 'Enter',\n\tEscape = 'Escape',\n\tSpace = ' ',\n\tPageUp = 'PageUp',\n\tPageDown = 'PageDown',\n\tEnd = 'End',\n\tHome = 'Home',\n\tLeft = 'ArrowLeft',\n\tRight = 'ArrowRight',\n\tUp = 'ArrowUp',\n\tDown = 'ArrowDown',\n\tDelete = 'Delete',\n\tInsert = 'Insert',\n}\n\n// fetches the contents of a file, referenced via URL, and presumed to be text formatted; conveniently wrapped in an async promise; note that a failure\n// of any kind returns null\nexport async function readTextURL(url:string | URL):Promise<string>\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tlet request = new XMLHttpRequest();\n\t\trequest.open('GET', url.toString(), true);\n\t\trequest.responseType = 'text';\n\t\trequest.onload = () => resolve(request.response.toString());\n\t\trequest.onerror = () => /*reject('Failed to request URL: ' + url)*/ resolve(null);\n\t\trequest.send();\n\t});\n}\n\n// calls a service with the POST method, sending a JSON object, and expects a JSON object in return; will throw an exception on failure\nexport async function postJSONURL(url:string | URL, params:Record<string, any>):Promise<Record<string, any>>\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tlet request = new XMLHttpRequest();\n\t\trequest.open('POST', url.toString(), true);\n\t\trequest.responseType = 'text';\n\t\trequest.onload = () =>\n\t\t{\n\t\t\tlet txt = request.response.toString();\n\t\t\ttry {resolve(JSON.parse(txt));}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\tlet snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n\t\t\t\treject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n\t\t\t}\n\t\t};\n\t\trequest.onerror = () => reject('Failed to request URL: ' + url);\n\t\trequest.send(JSON.stringify(params));\n\t});\n}\n\n// convenience function that yields the execution state, providing the DOM with a chance to update the screen; this is\n// not necessarily sufficient to provide a responsive UI for grinding calculation, but it can at least be useful to\n// refresh status\nexport async function yieldDOM():Promise<void>\n{\n\treturn new Promise<void>((resolve) => setTimeout(() => resolve()));\n}\n\n// pauses for some number of seconds, within an async block\nexport async function pause(seconds:number):Promise<void>\n{\n\treturn new Promise<void>((resolve) => setTimeout(() => resolve(), seconds * 1000));\n}\n\n// practical workaround for figuring out how much space the scrollers will used when realised; on Mac-like or mobile platforms this will generally be zero,\n// whereas for Windows/Linux-like platforms it's usually around 20 pixels or so; it will finagle the DOM invisibly the first time it is called\nlet staticScrollerSize:Size = null;\nexport function empiricalScrollerSize():Size\n{\n\tif (staticScrollerSize) return staticScrollerSize;\n\n\tlet outer = dom('<div/>').css({'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll'}).appendTo(dom(document.body));\n\tlet inner = dom('<div/>').css({'width': '100%', 'height': '100%'}).appendTo(outer);\n\tstaticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n\touter.remove();\n\treturn staticScrollerSize;\n}\n\n// returns # of permutations between the two strings, where 0 means that the two strings are identical; strings are case sensitive;\n// performance isn't linear, so be careful with rate limiting steps\nexport function stringSimilarityPermutations(str1:string, str2:string):number\n{\n\tif (!str1 || !str2) return 0;\n\tconst ch1 = Array.from(str1), len1 = ch1.length;\n\tconst ch2 = Array.from(str2), len2 = ch2.length;\n\n\tlet levenshteinDistance = (sz1:number, sz2:number):number =>\n\t{\n\t\tlet dist:number[][] = [];\n\t\tfor (let i = 0; i <= sz1; i++)\n\t\t{\n\t\t\tdist.push(Vec.numberArray(0, sz2 + 1));\n\t\t\tdist[i][0] = i;\n\t\t}\n\t\tfor (let j = 1; j <= sz2; j++) dist[0][j] = j;\n\n\t\tfor (let j = 1; j <= sz2; j++) for (let i = 1; i <= sz1; i++)\n\t\t{\n\t\t\tlet cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n\t\t\tdist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n\t\t}\n\t\treturn dist[sz1][sz2];\n\t};\n\n\tlet cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n\tlet lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n\tlet lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n\tlet lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n\treturn Math.min(Math.min(lev1, lev2), lev3);\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing, no-multi-spaces */\n/* eslint-disable @typescript-eslint/naming-convention */\n\nexport class Chemistry\n{\n\t// NOTE: the value of ELEMENTS.length is the number of elements supported by MMTk; all atom number indices should be between\n\t// 1 and this range, or 0 to represent an entity which is not a single specific element\n\n\tpublic static ELEMENTS =\n\t[\n\t\tnull,\n\t\t'H',                                                                                 'He',\n\t\t'Li','Be',                                                  'B', 'C', 'N', 'O', 'F', 'Ne',\n\t\t'Na','Mg',                                                  'Al','Si','P', 'S', 'Cl','Ar',\n\t\t'K', 'Ca','Sc','Ti','V' ,'Cr','Mn','Fe','Co','Ni','Cu','Zn','Ga','Ge','As','Se','Br','Kr',\n\t\t'Rb','Sr','Y', 'Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd','In','Sn','Sb','Te','I', 'Xe',\n\t\t'Cs','Ba',\n\t\t\t\t'La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb',\n\t\t\t\t\t 'Lu','Hf','Ta','W', 'Re','Os','Ir','Pt','Au','Hg','Tl','Pb','Bi','Po','At','Rn',\n\t\t'Fr','Ra',\n\t\t\t\t'Ac','Th','Pa','U', 'Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No',\n\t\t\t\t\t 'Lr','Rf','Db','Sg','Bh','Hs','Mt','Ds','Rg','Cn'\n\t];\n\n\t// which group of the periodic table each element belongs to, where the lanthanoids & actanoids are group III\n\tpublic static ELEMENT_GROUPS =\n\t[\n\t\t0,\n\t\t1,                                        18,\n\t\t1,2,                       13,14,15,16,17,18,\n\t\t1,2,                       13,14,15,16,17,18,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,\n\t\t\t\t\t\t3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n\t\t\t3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,\n\t\t\t\t\t\t3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// which row of the periodic table each element belongs to, where lanthanoids & actanoids take their parent row\n\tpublic static ELEMENT_ROWS =\n\t[\n\t\t0,\n\t\t1,                                1,\n\t\t2,2,                    2,2,2,2,2,2,\n\t\t3,3,                    3,3,3,3,3,3,\n\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\t\t6,6,\n\t\t\t\t\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t\t7,7,\n\t\t\t\t\t\t7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n\t\t\t7,7,7,7,7,7,7,7,7,7\n\t];\n\n\t// which block of the periodic table each element belongs to, where 1=s-block, 2=p-block, 3=d-block, 4=f-block\n\tpublic static ELEMENT_BLOCKS =\n\t[\n\t\t0,\n\t\t1,                                2,\n\t\t1,1,                    2,2,2,2,2,2,\n\t\t1,1,                    2,2,2,2,2,2,\n\t\t1,1,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,3,3,3,3,3,3,3,3,3\n\t];\n\n\t// the number of 'valence' electrons possessed by an individual uncharged atom\n\tpublic static ELEMENT_VALENCE =\n\t[\n\t\t0,\n\t\t1,                                   2,\n\t\t1,2,                       3,4,5,6,7,8,\n\t\t1,2,                       3,4,5,6,7,8,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,2,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// the number of valence electrons typically involved in bonding, i.e. ELEMENT_VALENCE minus\n\t// the electrons dedicated to lone pairs; the concept is only really valid for main blocks\n\tpublic static ELEMENT_BONDING =\n\t[\n\t\t0,\n\t\t1,                                   0,\n\t\t1,2,                       3,4,3,2,1,0,\n\t\t1,2,                       3,4,3,2,1,0,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,2,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// the total number of 'valence' electrons required to make up a full 'valence shell'\n\tpublic static ELEMENT_SHELL =\n\t[\n\t\t0,\n\t\t2,                                          2,\n\t\t8,8,                              8,8,8,8,8,8,\n\t\t8,8,                              8,8,8,8,8,8,\n\t\t8,8,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,\n\t\t8,8,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,\n\t\t8,8,\n\t\t\t\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t8,8,\n\t\t\t\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t\t18,18,18,18,18,18,18,18,18,18\n\t];\n\n\tpublic static NATURAL_ATOMIC_WEIGHTS =\n\t[\n\t\t0,1.00794,4.002602,6.941,9.012182,10.811,12.0107,14.0067,15.9994,18.9984032,20.1797,\n\t\t22.989770,24.3050,26.981538,28.0855,30.973761,32.065,35.453,39.948,39.0983,40.078,\n\t\t44.955910,47.867,50.9415,51.9961,54.938049,55.845,58.933200,58.6934,63.546,65.409,\n\t\t69.723,72.64,74.92160,78.96,79.904,83.798,85.4678,87.62,88.90585,91.224,92.90638,\n\t\t95.94,98,101.07,102.90550,106.42,107.8682,112.411,114.818,118.710,121.760,127.60,\n\t\t126.90447,131.293,132.90545,137.327,138.9055,140.116,140.90765,144.24,145,150.36,\n\t\t151.964,157.25,158.92534,162.500,164.93032,167.259,168.93421,173.04,174.967,178.49,\n\t\t180.9479,183.84,186.207,190.23,192.217,195.078,196.96655,200.59,204.3833,207.2,208.98038,\n\t\t209,210,222,223,226,227,230.0331266,231.03588,233.039628,237,244,243,247,247,251,252,257,\n\t\t258,259,262,261,262,266,264,277,268,271,272,285\n\t];\n\n\t// readable constants for elements\n\tpublic static ELEMENT_H = 1;\n\tpublic static ELEMENT_He = 2;\n\tpublic static ELEMENT_Li = 3;\n\tpublic static ELEMENT_Be = 4;\n\tpublic static ELEMENT_B = 5;\n\tpublic static ELEMENT_C = 6;\n\tpublic static ELEMENT_N = 7;\n\tpublic static ELEMENT_O = 8;\n\tpublic static ELEMENT_F = 9;\n\tpublic static ELEMENT_Ne = 10;\n\tpublic static ELEMENT_Na = 11;\n\tpublic static ELEMENT_Mg = 12;\n\tpublic static ELEMENT_Al = 13;\n\tpublic static ELEMENT_Si = 14;\n\tpublic static ELEMENT_P = 15;\n\tpublic static ELEMENT_S = 16;\n\tpublic static ELEMENT_Cl = 17;\n\tpublic static ELEMENT_Ar = 18;\n\tpublic static ELEMENT_K = 19;\n\tpublic static ELEMENT_Ca = 20;\n\tpublic static ELEMENT_Sc = 21;\n\tpublic static ELEMENT_Ti = 22;\n\tpublic static ELEMENT_V = 23;\n\tpublic static ELEMENT_Cr = 24;\n\tpublic static ELEMENT_Mn = 25;\n\tpublic static ELEMENT_Fe = 26;\n\tpublic static ELEMENT_Co = 27;\n\tpublic static ELEMENT_Ni = 28;\n\tpublic static ELEMENT_Cu = 29;\n\tpublic static ELEMENT_Zn = 30;\n\tpublic static ELEMENT_Ga = 31;\n\tpublic static ELEMENT_Ge = 32;\n\tpublic static ELEMENT_As = 33;\n\tpublic static ELEMENT_Se = 34;\n\tpublic static ELEMENT_Br = 35;\n\tpublic static ELEMENT_Kr = 36;\n\tpublic static ELEMENT_Rb = 37;\n\tpublic static ELEMENT_Sr = 38;\n\tpublic static ELEMENT_Y = 39;\n\tpublic static ELEMENT_Zr = 40;\n\tpublic static ELEMENT_Nb = 41;\n\tpublic static ELEMENT_Mo = 42;\n\tpublic static ELEMENT_Tc = 43;\n\tpublic static ELEMENT_Ru = 44;\n\tpublic static ELEMENT_Rh = 45;\n\tpublic static ELEMENT_Pd = 46;\n\tpublic static ELEMENT_Ag = 47;\n\tpublic static ELEMENT_Cd = 48;\n\tpublic static ELEMENT_In = 49;\n\tpublic static ELEMENT_Sn = 50;\n\tpublic static ELEMENT_Sb = 51;\n\tpublic static ELEMENT_Te = 52;\n\tpublic static ELEMENT_I = 53;\n\tpublic static ELEMENT_Xe = 54;\n\tpublic static ELEMENT_Cs = 55;\n\tpublic static ELEMENT_Ba = 56;\n\tpublic static ELEMENT_La = 57;\n\tpublic static ELEMENT_Ce = 58;\n\tpublic static ELEMENT_Pr = 59;\n\tpublic static ELEMENT_Nd = 60;\n\tpublic static ELEMENT_Pm = 61;\n\tpublic static ELEMENT_Sm = 62;\n\tpublic static ELEMENT_Eu = 63;\n\tpublic static ELEMENT_Gd = 64;\n\tpublic static ELEMENT_Tb = 65;\n\tpublic static ELEMENT_Dy = 66;\n\tpublic static ELEMENT_Ho = 67;\n\tpublic static ELEMENT_Er = 68;\n\tpublic static ELEMENT_Tm = 69;\n\tpublic static ELEMENT_Yb = 70;\n\tpublic static ELEMENT_Lu = 71;\n\tpublic static ELEMENT_Hf = 72;\n\tpublic static ELEMENT_Ta = 73;\n\tpublic static ELEMENT_W = 74;\n\tpublic static ELEMENT_Re = 75;\n\tpublic static ELEMENT_Os = 76;\n\tpublic static ELEMENT_Ir = 77;\n\tpublic static ELEMENT_Pt = 78;\n\tpublic static ELEMENT_Au = 79;\n\tpublic static ELEMENT_Hg = 80;\n\tpublic static ELEMENT_Tl = 81;\n\tpublic static ELEMENT_Pb = 82;\n\tpublic static ELEMENT_Bi = 83;\n\tpublic static ELEMENT_Po = 84;\n\tpublic static ELEMENT_At = 85;\n\tpublic static ELEMENT_Rn = 86;\n\tpublic static ELEMENT_Fr = 87;\n\tpublic static ELEMENT_Ra = 88;\n\tpublic static ELEMENT_Ac = 89;\n\tpublic static ELEMENT_Th = 90;\n\tpublic static ELEMENT_Pa = 91;\n\tpublic static ELEMENT_U = 92;\n\tpublic static ELEMENT_Np = 93;\n\tpublic static ELEMENT_Pu = 94;\n\tpublic static ELEMENT_Am = 95;\n\tpublic static ELEMENT_Cm = 96;\n\tpublic static ELEMENT_Bk = 97;\n\tpublic static ELEMENT_Cf = 98;\n\tpublic static ELEMENT_Es = 99;\n\tpublic static ELEMENT_Fm = 100;\n\tpublic static ELEMENT_Md = 101;\n\tpublic static ELEMENT_No = 102;\n\tpublic static ELEMENT_Lr = 103;\n\tpublic static ELEMENT_Rf = 104;\n\tpublic static ELEMENT_Db = 105;\n\tpublic static ELEMENT_Sg = 106;\n\tpublic static ELEMENT_Bh = 107;\n\tpublic static ELEMENT_Hs = 108;\n\tpublic static ELEMENT_Mt = 109;\n\tpublic static ELEMENT_Ds = 110;\n\tpublic static ELEMENT_Rg = 111;\n\tpublic static ELEMENT_Cn = 112;\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {deepClone} from '@wmk/util/util';\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tRepresentation of a unidirectional graph which has simple node labels, and no edge labels. Connections are stored in neighbour\n\tlist form. Construction of the graph is faster if the number of nodes are known ahead of time. Cloning a graph instance, or\n\tbuilding it from some other graph datastructure, has minimal overhead.\n\n\tNote that all indices are 0-based.\n\n\tPractical note: the Molecule class has much analogous functionality. The Graph class is intended to be a cleaner and more\n\tlightweight implementation of algorithms which are not necessarily related to a molecular datastructure.\n\tThe Molecule class has a lot of features such as caching calculated values, which is very useful for general purpose work;\n\tthe algorithms in the Graph class have more intuitive and predictable performance characteristics, and do not have shortcuts\n\tsuch as caching.\n*/\n\nexport class Graph\n{\n\tprivate nbrs:number[][] = []; // neighbour-list, one per node\n\tprivate indices:number[] = null; // optional integer value for each node\n\tprivate labels:string[] = null; // optional string value for each node\n\tprivate props:any[] = null; // optional object for each node; is always a shallow copy\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(sz?:number, edge1?:number[], edge2?:number[])\n\t{\n\t\tif (sz != null) for (let n = 0; n < sz; n++) this.nbrs.push([]);\n\t\tif (edge1 != null && edge2 != null)\n\t\t{\n\t\t\tfor (let n = 0; n < edge1.length; n++)\n\t\t\t{\n\t\t\t\tthis.nbrs[edge1[n]].push(edge2[n]);\n\t\t\t\tthis.nbrs[edge2[n]].push(edge1[n]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clone():Graph\n\t{\n\t\tlet g = new Graph();\n\t\tfor (let nbr of this.nbrs) g.nbrs.push(nbr.slice(0));\n\t\tg.indices = this.indices == null ? null : this.indices.slice(0);\n\t\tg.labels = this.labels == null ? null : this.labels.slice(0);\n\t\tg.props = this.props == null ? null : this.props.slice(0);\n\t\treturn g;\n\t}\n\n\t// builds a graph with the same shape as the given molecule\n\tpublic static fromMolecule(mol:Molecule):Graph\n\t{\n\t\tlet g = new Graph();\n\t\tg.indices = [];\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tg.nbrs.push([]);\n\t\t\tg.indices.push(n + 1);\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tg.nbrs[bfr].push(bto);\n\t\t\tg.nbrs[bto].push(bfr);\n\t\t}\n\t\treturn g;\n\t}\n\n\t// builds a graph with a molecule subset\n\tpublic static fromMoleculeMask(mol:Molecule, mask:boolean[]):Graph\n\t{\n\t\tlet count = Vec.maskCount(mask);\n\t\tlet map = Vec.maskMap(mask);\n\n\t\tlet g = new Graph(count);\n\t\tg.indices = Vec.maskIdx(mask);\n\t\tVec.addTo(g.indices, 1); // make it 1-based\n\n\t\tfor (let n = 0; n < count; n++)\n\t\t{\n\t\t\tlet adj = mol.atomAdjList(g.indices[n]);\n\t\t\tg.nbrs[n] = [];\n\t\t\tfor (let i = 0; i < adj.length; i++) if (mask[adj[i] - 1]) g.nbrs[n].push(map[adj[i] - 1]);\n\t\t}\n\n\t\treturn g;\n\t}\n\n\t// when a neighbour list is already available, construction is essentially immediate; note that the neighbour list is not cloned at all,\n\t// and it may be corrupted if graph modification methods are called\n\tpublic static fromNeighbours(nbrs:number[][]):Graph\n\t{\n\t\tlet g = new Graph();\n\t\tg.nbrs = nbrs;\n\t\treturn g;\n\t}\n\n\tpublic toString():string\n\t{\n\t\tlet buff = '#nodes=' + this.nbrs.length;\n\t\tfor (let n = 0; n < this.nbrs.length; n++)\n\t\t{\n\t\t\tbuff += ' ' + n + ':{' + this.nbrs[n] + '}';\n\t\t\tif (n < Vec.len(this.indices)) buff += '[i=' + this.indices[n] + ']';\n\t\t\tif (n < Vec.len(this.labels)) buff += '[l=' + this.labels[n] + ']';\n\t\t}\n\t\treturn buff;\n\t}\n\n\tpublic get numNodes():number {return this.nbrs.length;}\n\tpublic numEdges(node:number):number {return this.nbrs[node].length;}\n\tpublic getEdge(node:number, edge:number):number {return this.nbrs[node][edge];}\n\tpublic getEdges(node:number):number[] {return this.nbrs[node];}\n\n\tpublic getIndex(node:number):number {return this.indices == null ? 0 : this.indices[node];}\n\tpublic setIndex(node:number, idx:number):void\n\t{\n\t\tif (this.indices == null) this.indices = Vec.numberArray(0, this.nbrs.length);\n\t\tthis.indices[node] = idx;\n\t}\n\n\tpublic getLabel(node:number):string {return this.labels == null ? null : this.labels[node];}\n\tpublic setLabel(node:number, lbl:string):void\n\t{\n\t\tif (this.labels == null) this.labels = Vec.stringArray('', this.nbrs.length);\n\t\tthis.labels[node] = lbl;\n\t}\n\n\tpublic getProperty(node:number):any {return this.props == null ? null : this.props[node];}\n\tpublic setProperty(node:number, prp:any):void\n\t{\n\t\tif (this.props == null) this.props = new Array(this.nbrs.length);\n\t\tthis.props[node] = prp;\n\t}\n\n\tpublic addNode():number\n\t{\n\t\tthis.nbrs.push([]);\n\t\tif (this.indices != null) this.indices.push(0);\n\t\tif (this.labels != null) this.labels.push('');\n\t\tif (this.props != null) this.props.push(null);\n\t\treturn this.nbrs.length - 1;\n\t}\n\n\tpublic hasEdge(node1:number, node2:number):boolean\n\t{\n\t\tif (this.nbrs[node1].length <= this.nbrs[node2].length)\n\t\t\treturn this.nbrs[node1].indexOf(node2) >= 0;\n\t\telse\n\t\t\treturn this.nbrs[node2].indexOf(node1) >= 0;\n\t}\n\n\tpublic addEdge(node1:number, node2:number):void\n\t{\n\t\tthis.nbrs[node1].push(node2);\n\t\tthis.nbrs[node2].push(node1);\n\t}\n\n\tpublic removeEdge(node1:number, node2:number):void\n\t{\n\t\tlet i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n\t\tif (i1 >= 0) this.nbrs[node1].splice(i1, 1);\n\t\tif (i2 >= 0) this.nbrs[node2].splice(i2, 1);\n\t}\n\n\tpublic isolateNode(node:number):void\n\t{\n\t\tfor (let o of this.nbrs[node])\n\t\t{\n\t\t\tlet i = this.nbrs[o].indexOf(node);\n\t\t\tif (i >= 0) this.nbrs[o].splice(i, 1);\n\t\t}\n\t\tthis.nbrs[node] = [];\n\t}\n\n\t// keep/remove: modify graph in place by taking out some nodes\n\tpublic keepNodesMask(mask:boolean[]):void\n\t{\n\t\tconst oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n\t\tif (newsz == oldsz) return;\n\t\tif (newsz == 0)\n\t\t{\n\t\t\tthis.nbrs = [];\n\t\t\tthis.indices = null;\n\t\t\tthis.labels = null;\n\t\t\tthis.props = null;\n\t\t\treturn;\n\t\t}\n\n\t\tlet newmap = Vec.maskMap(mask);\n\t\tlet newnbrs:number[][] = [];\n\t\tfor (let n = 0; n < newsz; n++) newnbrs.push([]);\n\t\tfor (let n = 0, pos = 0; n < oldsz; n++) if (mask[n])\n\t\t{\n\t\t\tfor (let i of this.nbrs[n]) if (mask[i]) newnbrs[pos].push(newmap[i]);\n\t\t\tpos++;\n\t\t}\n\t\tthis.nbrs = newnbrs;\n\n\t\tif (this.indices != null) this.indices = Vec.maskGet(this.indices, mask);\n\t\tif (this.labels != null) this.labels = Vec.maskGet(this.labels, mask);\n\t\tif (this.props != null) this.props = Vec.maskGet(this.props, mask);\n\t}\n\tpublic keepNodesIndex(idx:number[]) {this.keepNodesMask(Vec.idxMask(idx, this.numNodes));}\n\tpublic removeNodesMask(mask:boolean[]) {this.keepNodesMask(Vec.notMask(mask));}\n\tpublic removeNodesIndex(idx:number[]) {this.removeNodesMask(Vec.idxMask(idx, this.numNodes));}\n\n\t// subgraph: creates a new graph, typically smaller; note that the index version honours the new atom order\n\tpublic subgraphIndex(idx:number[]):Graph\n\t{\n\t\tconst nsz = idx.length;\n\t\tlet g = new Graph(nsz);\n\t\tif (this.indices != null || this.labels != null || this.props != null) for (let n = 0; n < nsz; n++)\n\t\t{\n\t\t\tif (this.indices != null) g.setIndex(n, this.indices[idx[n]]);\n\t\t\tif (this.labels != null) g.setLabel(n, this.labels[idx[n]]);\n\t\t\tif (this.props != null) g.setProperty(n, this.props[idx[n]]);\n\t\t}\n\t\tfor (let i = 0; i < nsz; i++)\n\t\t{\n\t\t\tfor (let n of this.nbrs[idx[i]])\n\t\t\t{\n\t\t\t\tlet j = idx.indexOf(n);\n\t\t\t\tif (j > i) g.addEdge(i, j);\n\t\t\t}\n\t\t}\n\t\treturn g;\n\t}\n\tpublic subgraphMask(mask:boolean[]):Graph\n\t{\n\t\tlet g = this.clone();\n\t\tg.keepNodesMask(mask);\n\t\treturn g;\n\t}\n\n\t// returns a list of connected component indices, one per node; the numbering system is based on node ordering\n\tpublic calculateComponents():number[]\n\t{\n\t\tconst sz = this.nbrs.length;\n\t\tif (sz == 0) return [];\n\n\t\tlet cc = Vec.numberArray(0, sz);\n\t\tcc[0] = 1;\n\t\tlet first = 1, high = 1;\n\t\twhile (true)\n\t\t{\n\t\t\twhile (first < sz && cc[first] > 0) {first++;}\n\t\t\tif (first >= sz) break;\n\n\t\t\tlet anything = false;\n\t\t\tfor (let i = first; i < sz; i++) if (cc[i] == 0)\n\t\t\t{\n\t\t\t\tfor (let j = 0; j < this.nbrs[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (cc[this.nbrs[i][j]] != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcc[i] = cc[this.nbrs[i][j]];\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!anything) cc[first] = ++high;\n\t\t}\n\n\t\treturn cc;\n\t}\n\n\t// returns an array of one group for each connected component\n\tpublic calculateComponentGroups():number[][]\n\t{\n\t\tif (this.nbrs.length == 0) return [];\n\t\tlet cc = this.calculateComponents();\n\t\tlet sz = Vec.max(cc);\n\n\t\tlet grp:number[][] = [];\n\t\tfor (let n = 0; n < sz; n++) grp.push([]);\n\t\tfor (let n = 0; n < cc.length; n++) grp[cc[n] - 1].push(n);\n\t\treturn grp;\n\t}\n\n\t// determine an array which has ring block IDs (0=no ring, >0=block index); also returns the count, i.e. number of ring blocks\n\tpublic calculateRingBlocks():[number[], number] // (rblk[], count)\n\t{\n\t\tlet sz = this.numNodes, nbrs = this.nbrs;\n\t\tif (sz == 0) return [[], 0];\n\n\t\tlet rblk:number[] = new Array(this.numNodes);\n\n\t\tlet visited = Vec.booleanArray(false, sz);\n\t\tVec.setTo(rblk, 0);\n\t\tlet path:number[] = new Array(sz + 1);\n\t\tlet plen = 0, numVisited = 0;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet last:number, current:number;\n\n\t\t\tif (plen == 0)\n\t\t\t{\n\t\t\t\tlast = -1;\n\t\t\t\tfor (current = 0; visited[current]; current++) {}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlast = path[plen - 1];\n\t\t\t\tcurrent = -1;\n\t\t\t\tfor (let n = 0; n < nbrs[last].length; n++) if (!visited[nbrs[last][n]]) {current = nbrs[last][n]; break;}\n\t\t\t}\n\n\t\t\tif (current >= 0 && plen >= 2) // path is at least 2 items long, so look for any not-previous visited neighbours\n\t\t\t{\n\t\t\t\tlet back = path[plen - 1];\n\t\t\t\tfor (let n = 0; n < nbrs[current].length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet join = nbrs[current][n];\n\t\t\t\t\tif (join != back && visited[join])\n\t\t\t\t\t{\n\t\t\t\t\t\tpath[plen] = current;\n\t\t\t\t\t\tfor (let i = plen; i == plen || path[i + 1] != join; i--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet id = rblk[path[i]];\n\t\t\t\t\t\t\tif (id == 0) rblk[path[i]] = last;\n\t\t\t\t\t\t\telse if (id != last)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor (let j = 0; j < sz; j++) if (rblk[j] == id) rblk[j] = last;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (current >= 0) // can mark the new one as visited\n\t\t\t{\n\t\t\t\tvisited[current] = true;\n\t\t\t\tpath[plen++] = current;\n\t\t\t\tnumVisited++;\n\t\t\t}\n\t\t\telse // otherwise, found nothing and must rewind the path\n\t\t\t{\n\t\t\t\tplen--;\n\t\t\t}\n\n\t\t\tif (numVisited == sz) break;\n\t\t}\n\n\t\t// the ring ID's are not necessarily consecutive, so reassign them to 0=none, 1..NBlocks\n\t\tlet nextID = 0;\n\t\tfor (let i = 0; i < sz; i++) if (rblk[i] > 0)\n\t\t{\n\t\t\tnextID--;\n\t\t\tfor (let j = sz - 1; j >= i; j--) if (rblk[j] == rblk[i]) rblk[j] = nextID;\n\t\t}\n\t\tfor (let i = 0; i < sz; i++) rblk[i] = -rblk[i];\n\n\t\treturn [rblk, -nextID];\n\t}\n\n\t// calculate ring blocks and return an array of indices, one for each\n\tpublic calculateRingBlockGroups():number[][]\n\t{\n\t\tlet [rblk, sz] = this.calculateRingBlocks();\n\t\tif (sz == 0) return [];\n\n\t\tlet cap = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < rblk.length; n++) if (rblk[n] > 0) cap[rblk[n] - 1]++;\n\n\t\tlet grp:number[][] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tgrp[n] = new Array(cap[n]);\n\t\t\tcap[n] = 0;\n\t\t}\n\t\tfor (let n = 0; n < rblk.length; n++)\n\t\t{\n\t\t\tlet i = rblk[n] - 1;\n\t\t\tif (i < 0) continue;\n\t\t\tgrp[i][cap[i]++] = n;\n\t\t}\n\t\treturn grp;\n\t}\n\n\t// returns a list of rings with just the given size; the enumeration is exhaustive, so this is only appropriate for small rings; any ring that can be composed from\n\t// smaller rings is excluded from the list\n\tpublic findRingsOfSize(size:number):number[][]\n\t{\n\t\tlet [rblk, num] = this.calculateRingBlocks();\n\t\tif (num == 0) return [];\n\n\t\tlet rings:number[][] = [];\n\t\tlet mask:boolean[] = new Array(this.numNodes);\n\n\t\tfor (let r = 1; r <= num; r++)\n\t\t{\n\t\t\tfor (let n = 0; n < this.numNodes; n++) mask[n] = rblk[n] == r;\n\t\t\tlet newRings = this.findRingsOfSizeMask(size, mask);\n\t\t\tfor (let n = 0; n < newRings.length; n++) rings.push(newRings[n]);\n\t\t}\n\t\treturn rings;\n\t}\n\n\tpublic findRingsOfSizeMask(size:number, mask:boolean[]):number[][]\n\t{\n\t\tlet rings:number[][] = [];\n\n\t\tfor (let n = 0; n < this.numNodes; n++) if (mask[n])\n\t\t{\n\t\t\tlet path:number[] = new Array(size);\n\t\t\tpath[0] = n;\n\t\t\tthis.recursiveRingFind(path, 1, size, mask, rings);\n\t\t}\n\n\t\treturn rings;\n\t}\n\n\t// returns breadth-first-search order\n\tpublic calculateBFS(idx:number):number[]\n\t{\n\t\tlet ret = Vec.numberArray(-1, this.numNodes);\n\t\tret[idx] = 0;\n\n\t\tlet curnum = 0, lsz = 1, watermark = 0;\n\t\tlet list = Vec.numberArray(0, this.numNodes);\n\t\tlist[0] = idx;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet newsz = lsz;\n\t\t\tfor (let n = watermark; n < lsz; n++)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.nbrs[list[n]].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet j = this.nbrs[list[n]][i];\n\t\t\t\t\tif (ret[j] < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tret[j] = curnum + 1;\n\t\t\t\t\t\tlist[newsz++] = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newsz == lsz) break;\n\t\t\twatermark = lsz;\n\t\t\tlsz = newsz;\n\t\t\tcurnum++;\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// calculates the gravity of each node in the graph: isolated nodes have a gravity of 1, while deeply connected\n\t// nodes have higher values than terminal nodes; these values are reordered and reindexed at each step to avoid\n\t// integer overflow\n\tpublic calculateGravity():number[]\n\t{\n\t\tconst sz = this.numNodes;\n\t\tconst {nbrs} = this;\n\t\tlet wght = Vec.numberArray(1, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet wmod = Vec.numberArray(0, sz);\n\t\t\tfor (let i = 0; i < sz; i++) for (let j = nbrs[i].length - 1; j >= 0; j--) wmod[i] += wght[nbrs[i][j]];\n\t\t\twght = wmod;\n\t\t}\n\t\treturn wght;\n\t}\n\n\t// computes the shortest path between two nodes, or null if there is none; the result will be arbitrary if there is more\n\t// than one equally good option\n\tpublic calculateShortestPath(node1:number, node2:number):number[]\n\t{\n\t\tconst sz = this.numNodes;\n\t\tlet q = new Set<number>();\n\t\tfor (let n = 0; n < sz; n++) q.add(n);\n\n\t\tlet dist = Vec.numberArray(Number.MAX_SAFE_INTEGER, sz);\n\t\tlet prev = Vec.numberArray(-1, sz);\n\t\tdist[node1] = 0;\n\n\t\twhile (q.size > 0)\n\t\t{\n\t\t\tlet u = -1;\n\t\t\tfor (let i of q) if (u < 0 || dist[i] < dist[u]) u = i;\n\t\t\tq.delete(u);\n\n\t\t\tif (u == node2) break;\n\n\t\t\tfor (let v of this.nbrs[u])\n\t\t\t{\n\t\t\t\tlet alt = dist[u] + 1;\n\t\t\t\tif (alt < dist[v])\n\t\t\t\t{\n\t\t\t\t\tdist[v] = alt;\n\t\t\t\t\tprev[v] = u;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet path:number[] = [];\n\t\tfor (let u = node2; prev[u] >= 0; u = prev[u]) path.unshift(u);\n\t\tif (path.length > 0) path.unshift(node1);\n\t\treturn path.length > 0 ? path : null;\n\t}\n\n\t// constructs the adjacency matrix, whereby [i][j] is true if i and j are bonded\n\tpublic adjacencyMatrix():number[][]\n\t{\n\t\tconst sz = this.numNodes;\n\t\tlet mtx:number[][] = [];\n\t\tfor (let n = 0; n < sz; n++) mtx.push(Vec.numberArray(0, sz));\n\t\tfor (let i = 0; i < sz; i++) for (let j of this.nbrs[i]) mtx[i][j] = mtx[j][i] = 1;\n\t\treturn mtx;\n\t}\n\n\t// constructs the distance matrix, whereby [i][j] is the shortest number of connections between i and j; unconnected nodes have\n\t// a distance of infinity; uses the Floyd Warshall algorithm, with O(N^3) scaling\n\tpublic distanceMatrix():number[][]\n\t{\n\t\tconst sz = this.numNodes;\n\t\tlet mtx:number[][] = [];\n\t\tfor (let n = 0; n < sz; n++) mtx.push(Vec.numberArray(Number.POSITIVE_INFINITY, sz));\n\t\tfor (let i = 0; i < sz; i++)\n\t\t{\n\t\t\tmtx[i][i] = 0;\n\t\t\tfor (let j of this.nbrs[i]) mtx[i][j] = mtx[j][i] = 1;\n\t\t}\n\n\t\tfor (let k = 0; k < sz; k++)\n\t\t{\n\t\t\tfor (let i = 0; i < sz; i++) for (let j = 0; j < sz; j++)\n\t\t\t{\n\t\t\t\tif (!Number.isFinite(mtx[k][j]) || !Number.isFinite(mtx[i][k])) continue;\n\t\t\t\tmtx[i][j] = Math.min(mtx[i][j], mtx[i][k] + mtx[k][j]);\n\t\t\t}\n\t\t}\n\n\t\treturn mtx;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// ring hunter: recursive step; finds, compares and collects\n\tprivate recursiveRingFind(path:number[], psize:number, capacity:number, mask:boolean[], rings:number[][]):void\n\t{\n\t\t// not enough atoms yet, so look for new possibilities\n\t\tif (psize < capacity)\n\t\t{\n\t\t\tlet last = path[psize - 1];\n\t\t\tfor (let n = 0; n < this.nbrs[last].length; n++)\n\t\t\t{\n\t\t\t\tlet adj = this.nbrs[last][n];\n\t\t\t\tif (!mask[adj]) continue;\n\t\t\t\tlet fnd = false;\n\t\t\t\tfor (let i = 0; i < psize; i++) if (path[i] == adj)\n\t\t\t\t{\n\t\t\t\t\tfnd = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!fnd)\n\t\t\t\t{\n\t\t\t\t\tlet newPath = Vec.duplicate(path);\n\t\t\t\t\tnewPath[psize] = adj;\n\t\t\t\t\tthis.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// path is full, so make sure it eats its tail\n\t\tlet last = path[psize - 1];\n\t\tlet fnd = false;\n\t\tfor (let n = 0; n < this.nbrs[last].length; n++) if (this.nbrs[last][n] == path[0]) {fnd = true; break;}\n\t\tif (!fnd) return;\n\n\t\t// make sure every element in the path has exactly 2 neighbours within the path; otherwise it is spanning a bridge, which\n\t\t// is an undesirable ring definition\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet count = 0, p = path[n];\n\t\t\tfor (let i = 0; i < this.nbrs[p].length; i++) if (path.indexOf(this.nbrs[p][i]) >= 0) count++;\n\t\t\tif (count != 2) return; // invalid\n\t\t}\n\n\t\t// reorder the array then look for duplicates\n\t\tlet first = 0;\n\t\tfor (let n = 1; n < psize; n++) if (path[n] < path[first]) first = n;\n\t\tlet fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n\t\tlet flip = path[fm] < path[fp];\n\t\tif (first != 0 || flip)\n\t\t{\n\t\t\tlet newPath:number[] = new Array(psize);\n\t\t\tfor (let n = 0; n < psize; n++) newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n\t\t\tpath = newPath;\n\t\t}\n\n\t\tfor (let n = 0; n < rings.length; n++)\n\t\t{\n\t\t\tlet look = rings[n];\n\t\t\tlet same = true;\n\t\t\tfor (let i = 0; i < psize; i++) if (look[i] != path[i])\n\t\t\t{\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (same) return;\n\t\t}\n\n\t\trings.push(path);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {Vec} from '../util/Vec';\n\n/*\n\tResonance bond removal: certain algorithms/file formats store alternating single/double bonds in resonance\n\tform, most commonly the bonds of aromatic rings. The native molecule format does not support resonance style\n\tbonds, so these must be localised (\"Kekule form\"). This algorithm can be used to post-process a molecule,\n\twith the help of a support array that indicates the bonds which were described as resonance (order=1.5).\n\n\tThe algorithm corrects for some SMILES-esque weirdness, e.g. \"aromatic\" rings with outgoing carbonyls, and\n\talso artifacts like hydrogen-specification used explicitly to correct for heteroatoms in not-really-aromatics.\n\n\tNOTE: the algorithm will probably barf on some boundary cases, e.g. fullerenes; the max iteration limit is\n\tthe primary method of protection against this.\n*/\n\nexport class ResonanceRemover\n{\n\tpublic maxIter = 1000;\n\tpublic bondOrders:number[] = []; // this is the deliverable output\n\tpublic tolerant = false; // if set to true, will fail silently\n\n\t// ------------------ public methods --------------------\n\n\t// setup: mol & resBonds have to be defined, but atomHyd can be null\n\tconstructor(private mol:Molecule, private resBonds:boolean[], private atomHyd:number[] = [])\n\t{\n\t\tthis.mol = mol;\n\t\tthis.resBonds = resBonds;\n\t\tthis.atomHyd = atomHyd;\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++) this.bondOrders.push(mol.bondOrder(n));\n\t}\n\n\t// runs the algorithm, and updates the replacement bond orders; critical failures throws a GraphFaultException, and\n\t// this includes running over max # of iterations as well as invalid/unsolvable resonance regions, so it should always\n\t// be explicitly checked by the caller\n\tpublic perform():void\n\t{\n\t\tconst {mol} = this;\n\n\t\tif (this.atomHyd == null)\n\t\t{\n\t\t\tthis.atomHyd = [];\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) this.atomHyd.push(mol.atomHExplicit(n));\n\t\t}\n\n\t\tthis.correctInputMask();\n\n\t\tlet g = new Graph(mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.resBonds[n - 1]) g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n\t\tlet cc = g.calculateComponentGroups();\n\n\t\tfor (let n = 0; n < cc.length; n++) if (cc[n].length >= 2) this.processComponent(cc[n]);\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// sometimes the incoming mask can include things like aromatic rings with emerging =O and valence-saturated heteroatoms\n\t// (you know who you are, SMILES): remove these from consideration\n\tprivate correctInputMask():void\n\t{\n\t\tconst {mol, atomHyd} = this;\n\t\tconst na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet exclude = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(n);\n\t\t\tlet val = atno == Chemistry.ELEMENT_C ? 4 :\n\t\t\t\tatno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n\t\t\t\tatno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n\t\t\tif (val < 0) {exclude[n - 1] = true; continue;}\n\n\t\t\tval += mol.atomCharge(n);\n\t\t\tif (atomHyd[n - 1] > 0) val -= atomHyd[n - 1];\n\t\t\tif (mol.atomAdjCount(n) >= val) exclude[n - 1] = true;\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++) if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1)\n\t\t{\n\t\t\texclude[mol.bondFrom(n) - 1] = true;\n\t\t\texclude[mol.bondTo(n) - 1] = true;\n\t\t}\n\n\t\tthis.resBonds = this.resBonds.slice(0);\n\t\tfor (let n = 0; n < nb; n++) if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1]))\n\t\t{\n\t\t\tthis.bondOrders[n] = 1;\n\t\t\tthis.resBonds[n] = false;\n\t\t}\n\t}\n\n\t// handle a subset; nodes are 0-based; returns true if any bonds were assigned\n\tprivate processComponent(nodes:number[]):void\n\t{\n\t\tconst {mol, resBonds, bondOrders, atomHyd} = this;\n\n\t\tlet sz = nodes.length;\n\t\tif (sz == 2)\n\t\t{\n\t\t\tlet b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n\t\t\tbondOrders[b - 1] = 2;\n\t\t\treturn;\n\t\t}\n\n\t\t// optional hydrogens: in cases where H-counts were not provided, need to consider divalent nitrogens as valid for either X2NH of X=N-X\n\t\tlet optionalH = Vec.booleanArray(false, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet i = nodes[n], a = i + 1;\n\t\t\toptionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n\t\t}\n\n\t\t// prepare graph metrics to assist the search\n\t\tlet g = new Graph(sz);\n\t\tlet gravity = g.calculateGravity();\n\t\tlet mask = Vec.idxMask(nodes, mol.numAtoms);\n\t\tlet bsz = 0;\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) bsz++;\n\t\tlet bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n\t\tbsz = 0;\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n\t\t{\n\t\t\tlet f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n\t\t\tbfr[bsz] = f;\n\t\t\tbto[bsz] = t;\n\t\t\tbgrav[bsz] = gravity[f] + gravity[t];\n\t\t\tbidx[bsz] = n;\n\t\t\tg.addEdge(f, t);\n\t\t\tbsz++;\n\t\t}\n\n\t\t// select the first bond\n\t\tlet seq = Vec.numberArray(0, bsz);\n\t\tseq[0] = Vec.idxMax(bgrav);\n\t\tlet visited = Vec.booleanArray(false, bsz);\n\t\tvisited[seq[0]] = true;\n\t\tfor (let i = 1; i < bsz; i++)\n\t\t{\n\t\t\tlet b = -1;\n\t\t\tfor (let j = i - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < bsz; n++)\n\t\t\t\t{\n\t\t\t\t\tif (!visited[n]) if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (b < 0 || bgrav[n] > bgrav[b]) b = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (b >= 0) break;\n\t\t\t}\n\t\t\tif (b < 0) throw 'Graph walk failed';\n\n\t\t\tseq[i] = b;\n\t\t\tvisited[b] = true;\n\t\t}\n\n\t\t// grow path candidates until something works\n\t\tlet paths:boolean[][] = [];\n\t\tpaths.push([true]);\n\t\tpaths.push([false]);\n\t\tlet result:boolean[] = null;\n\t\tlet resultCount = 0;\n\t\tlet definiteMatch = Math.ceil(0.5 * bsz); // once # double bonds >= ceil(#bonds/2), definitely locked on\n\n\t\tlet iter = 0;\n\t\twhile (paths.length > 0)\n\t\t{\n\t\t\tlet p = paths[0];\n\t\t\tlet p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n\t\t\tif (!this.validPath(p1, seq, bfr, bto, g, optionalH)) p1 = null;\n\t\t\tif (!this.validPath(p2, seq, bfr, bto, g, optionalH)) p2 = null;\n\n\t\t\tif (Vec.len(p1) == bsz)\n\t\t\t{\n\t\t\t\tlet c = Vec.maskCount(p1);\n\t\t\t\tif (c > resultCount)\n\t\t\t\t{\n\t\t\t\t\tresult = p1;\n\t\t\t\t\tresultCount = c;\n\t\t\t\t}\n\t\t\t\tp1 = null;\n\t\t\t}\n\t\t\tif (Vec.len(p2) == bsz)\n\t\t\t{\n\t\t\t\tlet c = Vec.maskCount(p2);\n\t\t\t\tif (c > resultCount)\n\t\t\t\t{\n\t\t\t\t\tresult = p2;\n\t\t\t\t\tresultCount = c;\n\t\t\t\t}\n\t\t\t\tp2 = null;\n\t\t\t}\n\t\t\tif (resultCount >= definiteMatch) break;\n\n\t\t\tif (p1 == null && p2 == null) paths.shift();\n\t\t\telse if (p1 != null && p2 != null)\n\t\t\t{\n\t\t\t\t// the {..,true} one goes in first\n\t\t\t\tpaths[0] = p1;\n\t\t\t\tpaths.splice(1, 0, p2);\n\t\t\t}\n\t\t\telse if (p1 != null) paths[0] = p1;\n\t\t\telse /* p2!=null */paths[0] = p2;\n\n\t\t\titer++;\n\t\t\tif (iter > this.maxIter)\n\t\t\t{\n\t\t\t\tif (result != null) break; // run with it\n\t\t\t\tif (this.tolerant) return;\n\t\t\t\tthrow 'Resonance localisation exceeded maximum iteration count';\n\t\t\t}\n\t\t}\n\n\t\tif (result == null)\n\t\t{\n\t\t\tif (this.tolerant) return;\n\t\t\tthrow 'Unable to find a solution to the resonance block.';\n\t\t}\n\t\tfor (let n = 0; n < bsz; n++) bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n\t}\n\n\t// for a path sequence (usually incomplete), determine whether it has any chance of success\n\tprivate validPath(path:boolean[], seq:number[], bfr:number[], bto:number[], g:Graph, optionalH:boolean[]):boolean\n\t{\n\t\tlet sz = g.numNodes;\n\t\tlet count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet a1 = bfr[seq[n]], a2 = bto[seq[n]];\n\t\t\tif (path[n])\n\t\t\t{\n\t\t\t\tcount2[a1]++;\n\t\t\t\tcount2[a2]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount1[a1]++;\n\t\t\t\tcount1[a2]++;\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (count2[n] > 1) return false; // can't have 2 double bonds on the same atom: fail\n\t\t\tif (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n)) return false; // no double bonds & no room for one: fail\n\t\t}\n\t\treturn true;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {safeInt} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\n\n/*\n\tBond artifacts: looks for metadata instructions that indicate that certain core bond types should be drawn in some way other than\n\tthe minimalistic bond primitives that are available in the core datastructure.\n\n\tTypes:\n\t\tResPath: a linear resonance pathway, where the bond order and total charge are depicted as a continuous average\n\t\tResRing: a ring pathway, where the bond order and total charge are circularly delocalised\n\t\tArene: an atom having a bond that protrudes into the centre of a group of resonance-delocalised atoms (usually a ring)\n\n\tThe atom orderings are guaranteed to be in a sensible order, i.e. path/ring traversal.\n*/\n\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\n\nexport interface BondArtifactResPath\n{\n\tatoms:number[]; // line of resonance-style bonding\n}\nexport interface BondArtifactResRing\n{\n\tatoms:number[]; // single ring of resonating bonds (ring can be any size)\n}\nexport interface BondArtifactArene\n{\n\tcentre:number; // atom to which the arene is bonded\n\tatoms:number[]; // ring (or partial ring) that is side-bonded\n}\n\nexport class BondArtifact\n{\n\tprivate resPaths = new Map<number, BondArtifactResPath>();\n\tprivate resRings = new Map<number, BondArtifactResRing>();\n\tprivate arenes = new Map<number, BondArtifactArene>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tfor (let str of this.mol.atomExtra(n))\n\t\t\t{\n\t\t\t\tif (str.startsWith(BONDARTIFACT_EXTRA_RESPATH)) this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_RESRING)) this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_ARENE)) this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n\t\t\t}\n\t\t}\n\n\t\t// clean each one up, or remove if invalid\n\t\tfor (let [blk, res] of this.resPaths.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (!this.pathify(res.atoms, false)) this.resPaths.delete(blk);\n\t\t}\n\t\tfor (let [blk, res] of this.resRings.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (!this.pathify(res.atoms, true)) this.resRings.delete(blk);\n\t\t}\n\t\tfor (let [blk, res] of this.arenes.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (res.atoms.length > 1) res.centre = res.atoms.shift();\n\t\t\tif (!this.pathify(res.atoms, false)) this.arenes.delete(blk);\n\t\t}\n\t}\t\n\n\t// quick scan to see if it looks like there's anything there\n\tpublic static hasAnyArtifacts(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tfor (let str of mol.atomExtra(n))\n\t\t\t{\n\t\t\t\tif (str.startsWith(BONDARTIFACT_EXTRA_RESPATH)) return true;\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_RESRING)) return true;\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_ARENE)) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// access to resulting content\n\tpublic hasAny():boolean {return this.resPaths.size > 0 || this.resRings.size > 0 || this.arenes.size > 0;}\n\tpublic getPathBlocks():number[] {return Array.from(this.resPaths.keys());}\n\tpublic getRingBlocks():number[] {return Array.from(this.resRings.keys());}\n\tpublic getAreneBlocks():number[] {return Array.from(this.arenes.keys());}\n\tpublic getResPaths():BondArtifactResPath[]\n\t{\n\t\tlet list:BondArtifactResPath[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.resPaths.keys()))) list.push(this.resPaths.get(key));\n\t\treturn list;\n\t}\n\tpublic getResRings():BondArtifactResRing[]\n\t{\n\t\tlet list:BondArtifactResRing[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.resRings.keys()))) list.push(this.resRings.get(key));\n\t\treturn list;\n\t}\n\tpublic getArenes():BondArtifactArene[]\n\t{\n\t\tlet list:BondArtifactArene[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.arenes.keys()))) list.push(this.arenes.get(key));\n\t\treturn list;\n\t}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\t// delete everything\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n), modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n\t\t\t\t{\n\t\t\t\t\textra.splice(i);\n\t\t\t\t\tmodified = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\n\t\t// write back our datastructures\n\t\tfor (let [blk, path] of this.resPaths.entries())\n\t\t{\n\t\t\tfor (let n = 0; n < path.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet extra = mol.atomExtra(path.atoms[n]);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n\t\t\t\tmol.setAtomExtra(path.atoms[n], extra);\n\t\t\t}\n\t\t}\n\t\tfor (let [blk, ring] of this.resRings.entries())\n\t\t{\n\t\t\tfor (let n = 0; n < ring.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet extra = mol.atomExtra(ring.atoms[n]);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n\t\t\t\tmol.setAtomExtra(ring.atoms[n], extra);\n\t\t\t}\n\t\t}\n\t\tfor (let [blk, arene] of this.arenes.entries())\n\t\t{\n\t\t\tfor (let n = -1; n < arene.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet atom = n < 0 ? arene.centre : arene.atoms[n];\n\t\t\t\tlet extra = mol.atomExtra(atom);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n\t\t\t\tmol.setAtomExtra(atom, extra);\n\t\t\t}\n\t\t}\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:BondArtifact):void\n\t{\n\t\tlet blocks = other.getPathBlocks();\n\t\tlet stashPaths = this.getResPaths();\n\t\tthis.resPaths.clear();\n\t\tfor (let path of stashPaths)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.resPaths.set(blk, path);\n\t\t\tblocks.push(blk);\n\t\t}\n\n\t\tblocks = other.getRingBlocks();\n\t\tlet stashRings = this.getResRings();\n\t\tthis.resRings.clear();\n\t\tfor (let ring of stashRings)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.resRings.set(blk, ring);\n\t\t\tblocks.push(blk);\n\t\t}\n\n\t\tblocks = other.getAreneBlocks();\n\t\tlet stashArenes = this.getArenes();\n\t\tthis.arenes.clear();\n\t\tfor (let arene of stashArenes)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.arenes.set(blk, arene);\n\t\t\tblocks.push(blk);\n\t\t}\n\t}\n\n\t// creates a new path using the given atoms, or returns false if invalid\n\tpublic createPath(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet path = this.atomsAsPath(atoms);\n\t\tif (path)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n\t\t\tthis.resPaths.set(id, path);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// creates a new ring using the given atoms, or returns false if invalid\n\tpublic createRing(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet ring = this.atomsAsRing(atoms);\n\t\tif (ring)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.resRings.keys()));\n\t\t\tthis.resRings.set(id, ring);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// creates a new arene using the given atoms, or returns false if invalid\n\tpublic createArene(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet arene = this.atomsAsArene(atoms);\n\t\tif (arene)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.arenes.keys()));\n\t\t\tthis.arenes.set(id, arene);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// removes one artifact as affected by the given atoms (selected by best overlap), or returns false if nothing removed\n\tpublic removeArtifact(atoms:number[]):boolean\n\t{\n\t\tlet type = 0, pick = 0, overlap = 0;\n\t\tfor (let [blk, path] of this.resPaths.entries())\n\t\t{\n\t\t\tlet count = 0;\n\t\t\tfor (let a of path.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 1; pick = blk; overlap = count;}\n\t\t}\n\t\tfor (let [blk, ring] of this.resRings.entries())\n\t\t{\n\t\t\tlet count = 0;\n\t\t\tfor (let a of ring.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 2; pick = blk; overlap = count;}\n\t\t}\n\t\tfor (let [blk, arene] of this.arenes.entries())\n\t\t{\n\t\t\tlet count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n\t\t\tfor (let a of arene.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 3; pick = blk; overlap = count;}\n\t\t}\n\n\t\tif (type == 0) return false;\n\t\telse if (type == 1) this.resPaths.delete(pick);\n\t\telse if (type == 2) this.resRings.delete(pick);\n\t\telse if (type == 3) this.arenes.delete(pick);\n\t\treturn true;\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic static removeAll(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n\t\t\t\t\t!extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) continue;\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// handle a single atom being concatenated onto a putative instance\n\tprivate appendResPath(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.resPaths.get(blk);\n\t\tif (res == null) this.resPaths.set(blk, res = {atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\tprivate appendResRing(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.resRings.get(blk);\n\t\tif (res == null) this.resRings.set(blk, res = {atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\tprivate appendArene(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.arenes.get(blk);\n\t\tif (res == null) this.arenes.set(blk, res = {centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\n\t// condense an array by removing zero's\n\tprivate pack(arr:number[]):number[]\n\t{\n\t\tlet ret:number[] = [];\n\t\tfor (let v of arr) if (v != 0) ret.push(v);\n\t\treturn ret;\n\t}\n\n\t// takes an array of atom indices and makes sure it's a path of some sort; this may involve reordering the atoms; it must be possible to start at\n\t// some atom and walk along the path; the first atom has the lowest adjacency; the given order of the atoms will inform tiebreakers; if the method\n\t// returns true, then the atoms may be have been reordered\n\tprivate pathify(atoms:number[], requireRing:boolean):boolean\n\t{\n\t\tlet sz = atoms.length;\n\t\tif (sz < 2) return false;\n\n\t\tlet g = Graph.fromMolecule(this.mol);\n\t\tfor (let n = 0; n < this.mol.numAtoms; n++) g.setIndex(n, n + 1);\n\t\tg = g.subgraphIndex(Vec.add(atoms, -1));\n\t\tlet pos = 0;\n\t\tfor (let n = 1; n < sz; n++) if (g.numEdges(n) < g.numEdges(pos)) pos = n;\n\n\t\tVec.setTo(atoms, -1); // filling this with subgraph indices\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tatoms[n] = pos;\n\t\t\tif (n == sz - 1)\n\t\t\t{\n\t\t\t\tif (requireRing) if (g.getEdges(pos).indexOf(atoms[0]) < 0) return false; // must be joined\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet next = sz;\n\t\t\t\tfor (let i of g.getEdges(pos)) if (atoms.indexOf(i) < 0 && i < next) next = i;\n\t\t\t\tif (next == sz) return false; // bad\n\t\t\t\tpos = next;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < sz; n++) atoms[n] = g.getIndex(atoms[n]);\n\t\treturn true;\n\t}\n\n\t// check to see if a set of atoms exists already as an artifact\n\tprivate alreadyExists(atoms:number[]):boolean\n\t{\n\t\tatoms = Vec.sorted(atoms);\n\t\tfor (let path of this.resPaths.values())\n\t\t{\n\t\t\tif (Vec.equals(atoms, Vec.sorted(path.atoms))) return true;\n\t\t}\n\t\tfor (let ring of this.resRings.values())\n\t\t{\n\t\t\tif (Vec.equals(atoms, Vec.sorted(ring.atoms))) return true;\n\t\t}\n\t\tfor (let arene of this.arenes.values())\n\t\t{\n\t\t\tlet areneAtoms = Vec.append(arene.atoms, arene.centre);\n\t\t\tif (Vec.equals(atoms, Vec.sorted(areneAtoms))) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// make a list of atoms (arbitrary order) into an artifact of the given type\n\tprivate atomsAsPath(atoms:number[]):BondArtifactResPath\n\t{\n\t\tif (atoms.length < 2) return null;\n\t\tlet path:BondArtifactResPath = {atoms: atoms};\n\t\tif (!this.pathify(path.atoms, false)) return null;\n\t\treturn path;\n\t}\n\tprivate atomsAsRing(atoms:number[]):BondArtifactResRing\n\t{\n\t\tif (atoms.length < 3) return null;\n\t\tlet ring:BondArtifactResRing = {atoms: atoms};\n\t\tif (!this.pathify(ring.atoms, true)) return null;\n\t\treturn ring;\n\t}\n\tprivate atomsAsArene(atoms:number[]):BondArtifactArene\n\t{\n\t\tconst sz = atoms.length;\n\t\tif (sz < 3) return null;\n\n\t\tlet g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n\t\tlet best = 0;\n\t\tif (sz == 3)\n\t\t{\n\t\t\t// if just 3 atoms, it must be a ring, and we pick the one with the lowest bond order sum\n\t\t\tlet bsum = [0, 0, 0];\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tif (g.numEdges(n) != 2) return null;\n\t\t\t\tfor (let e of g.getEdges(n)) bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n\t\t\t\tbest = Vec.idxMin(bsum);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// the \"centre\" (aka metal) is the one with the highest adjacency within the subgraph\n\t\t\tfor (let n = 1; n < sz; n++) if (g.numEdges(n) > g.numEdges(best)) best = n;\n\t\t}\n\n\t\tlet arene:BondArtifactArene = {centre: atoms[best], atoms: Vec.remove(atoms, best)};\n\t\tif (!this.pathify(arene.atoms, false)) return null;\n\t\treturn arene;\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(inkeys:number[]):number\n\t{\n\t\tif (inkeys.length == 0) return 1;\n\t\tlet keys = Vec.sorted(inkeys);\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tPolymer blocks: handles metadata instructions that mark up sections of the molecule as being blocks that are assembled in a\n\trepeating pattern to build macromolecules.\n\n\tThe information contained in is relatively simplistic and abstract: properties such as complex repeating sequences, splicing of\n\tcross linkers, molecular weight distribution etc. need to be encoded external to the molecule, but they can reference the encoded\n\tblocks.\n\n\tEach block consists of 1-or-more atoms. The information is repeated identically for each atom, which makes the encoding largely\n\tinvariant to atom deletion by code that does not respect the extensions. Some initial post-correction may also be able to fix\n\tmodifications such as atom insertion, or to delete invalid block IDs.\n\n\tBlock IDs are stable, i.e. deleting block N does not cause block N+1 to be renumbered. New blocks pick the next available ID, or\n\tan available empty slot.\n\n\tProperties:\n\t\tid (starts at 1)\n\t\t#connecting bonds (mainly used as a checksum)\n\t\tflags: head-to-tail, head-to-head, random\n\t\tbond connectivity groups: useful sometimes when more than 2 bonds out of the block: can define how they get reconnected as bulk units\n*/\n\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*'; // atom name for \"something goes here\"\n\nexport enum PolymerBlockConnectivity\n{\n\tHeadToTail = 'ht', // the most orderly linear arrangement\n\tHeadToHead = 'hh', // alternating linear arrangement\n\tRandom = 'rnd', // explicitly random\n}\n\nexport class PolymerBlockUnit\n{\n\tpublic connect:PolymerBlockConnectivity = null; // null if not applicable\n\tpublic bondConn:number[] = null; // interbond connection groups; pairwise ordering: [b1a, b1b, b2a, b2b, ...]\n\tpublic atomName = new Map<number, number[]>(); // for atoms: list of name codes that an atom belongs to, if any; applies only to atoms on the boundary\n\tpublic bondIncl = new Map<number, number[]>(); // for bonds: list of name codes that the outgoing bond may be connected to (none = no restriction)\n\tpublic bondExcl = new Map<number, number[]>(); // for bonds: list of name codes that the outgoing bond may not be connected to (redundant when there are include atoms)\n\n\tconstructor(public atoms:number[]) {}\n\tpublic clone():PolymerBlockUnit\n\t{\n\t\tlet dup = new PolymerBlockUnit(this.atoms.slice(0));\n\t\tdup.connect = this.connect;\n\t\tif (this.bondConn) dup.bondConn = this.bondConn.slice(0);\n\t\tfor (let [k, v] of this.atomName.entries()) dup.atomName.set(k, v.slice(0));\n\t\tfor (let [k, v] of this.bondIncl.entries()) dup.bondIncl.set(k, v.slice(0));\n\t\tfor (let [k, v] of this.bondExcl.entries()) dup.bondExcl.set(k, v.slice(0));\n\t\treturn dup;\n\t}\n}\n\nexport class PolymerBlock\n{\n\tprivate units = new Map<number, PolymerBlockUnit>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tlet blockAtoms = new Map<number, number[]>();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tfor (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\tlet bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\t\tlet id = parseInt(bits[0]);\n\t\t\t\tif (id > 0)\n\t\t\t\t{\n\t\t\t\t\tlet atoms = blockAtoms.get(id);\n\t\t\t\t\tif (atoms) atoms.push(n); else atoms = [n];\n\t\t\t\t\tblockAtoms.set(id, atoms);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key of Vec.sorted(Array.from(blockAtoms.keys()))) this.appendBlock(key, blockAtoms.get(key));\n\t}\n\n\t// access to resulting content\n\tpublic getIDList():number[] {return Vec.sorted(Array.from(this.units.keys()));}\n\tpublic getUnit(id:number):PolymerBlockUnit {return this.units.get(id);}\n\tpublic getUnits():PolymerBlockUnit[] {return Array.from(this.units.values());}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\tthis.purgeExtraFields();\n\t\tfor (let key of Vec.sorted(Array.from(this.units.keys()))) this.writeUnit(key, this.units.get(key));\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:PolymerBlock):void\n\t{\n\t\tlet allKeys = other.getIDList();\n\t\tfor (let key of this.getIDList()) if (allKeys.includes(key))\n\t\t{\n\t\t\tlet unit = this.units.get(key);\n\t\t\tthis.units.delete(key);\n\t\t\tkey = this.nextIdentifier(allKeys);\n\t\t\tthis.units.set(key, unit);\n\t\t\tallKeys.push(key);\n\t\t}\n\t}\n\n\t// removes one artifact as affected by the given atoms (selected by best overlap), or returns false if nothing removed\n\tpublic removeUnit(id:number):void\n\t{\n\t\tlet unit = this.units.get(id);\n\t\tif (unit == null) return;\n\t\tthis.units.delete(id);\n\t\tlet pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(a);\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(pfx)) extra = Vec.remove(extra, i);\n\t\t\tthis.mol.setAtomExtra(a, extra);\n\t\t}\n\t\tfor (let b = 1; b <= this.mol.numBonds; b++)\n\t\t{\n\t\t\tlet extra = this.mol.bondExtra(b);\n\t\t\tif (Vec.isBlank(extra)) continue;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(pfx)) extra = Vec.remove(extra, i);\n\t\t\tthis.mol.setBondExtra(b, extra);\n\t\t}\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic removeAll():void\n\t{\n\t\tthis.units.clear();\n\t\tthis.purgeExtraFields();\n\t}\n\n\t// creates the block, writes content into the molecule, and returns the ID\n\tpublic createUnit(unit:PolymerBlockUnit):number\n\t{\n\t\tlet id = this.nextIdentifier();\n\t\tthis.units.set(id, unit.clone());\n\t\tthis.writeUnit(id, unit);\n\t\treturn id;\n\t}\n\n\tpublic static hasPolymerExtensions(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// for a given atom, return all of the polymer designations, or null if none\n\tpublic static getPolymerExtensions(mol:Molecule, atom:number):string[]\n\t{\n\t\tlet extra = mol.atomExtra(atom), polext:string[] = null;\n\t\tif (extra == null) return null;\n\t\tfor (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) polext = Vec.append(polext, str);\n\t\treturn polext;\n\t}\n\n\t// remove all polymer extensions from a given atom\n\tpublic static removePolymerExtensions(mol:Molecule, atom:number):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tif (extra == null) return;\n\t\tlet modified = false;\n\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t{\n\t\t\textra = Vec.remove(extra, i);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setAtomExtra(atom, extra);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// given an ID and some atoms that correspond to it, see if it checks out: and if so, add it to the processed list\n\tprivate appendBlock(id:number, atoms:number[]):void\n\t{\n\t\tconst {mol} = this;\n\n\t\tlet nattach = 0;\n\t\tlet unit = new PolymerBlockUnit(atoms);\n\n\t\t// process the first atom in the list, and extract its properties that apply to the whole block (assuming degeneracy)\n\t\t// look for atom-encoded properties; note that tags (like connectivity) are degenerate, and are assumed to be the same for all atoms\n\t\tfor (let atom of atoms) for (let extra of mol.atomExtra(atom)) if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t{\n\t\t\tlet bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\tif (bits.length < 2 || parseInt(bits[0]) != id) continue;\n\t\t\tnattach = parseInt(bits[1]);\n\t\t\tfor (let n = 2; n < bits.length; n++)\n\t\t\t{\n\t\t\t\tif (bits[n] == PolymerBlockConnectivity.HeadToTail) unit.connect = PolymerBlockConnectivity.HeadToTail;\n\t\t\t\telse if (bits[n] == PolymerBlockConnectivity.HeadToHead) unit.connect = PolymerBlockConnectivity.HeadToHead;\n\t\t\t\telse if (bits[n] == PolymerBlockConnectivity.Random) unit.connect = PolymerBlockConnectivity.Random;\n\t\t\t\telse if (bits[n].startsWith('n'))\n\t\t\t\t{\n\t\t\t\t\tlet hasOuter = false;\n\t\t\t\t\tfor (let adj of mol.atomAdjList(atom)) if (!atoms.includes(adj)) {hasOuter = true; break;}\n\n\t\t\t\t\tif (hasOuter)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[n].substring(1).split(',');\n\t\t\t\t\t\tunit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sanity check: make sure attachment count matches # bonds crossing the block\n\t\tif (nattach < 0) return;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n\t\t\tif ((in1 && !in2) || (!in1 && in2)) nattach--;\n\t\t}\n\t\tif (nattach != 0) return;\n\n\t\t// pull out labelled bonds (if any) to derive the reconnection order\n\t\tlet bonds:number[] = null, order:number[] = null;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tfor (let extra of mol.bondExtra(n)) if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\tlet bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\t\tif (bits.length < 2 || parseInt(bits[0]) != id) continue;\n\t\t\t\tfor (let i = 1; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('i'))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[i].substring(1).split(',');\n\t\t\t\t\t\tunit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t\telse if (bits[i].startsWith('e'))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[i].substring(1).split(',');\n\t\t\t\t\t\tunit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet o = parseInt(bits[i]);\n\t\t\t\t\t\tif (o > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbonds = Vec.append(bonds, n);\n\t\t\t\t\t\t\torder = Vec.append(order, o);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bonds != null)\n\t\t{\n\t\t\tif (bonds.length % 2 == 1) return; // has to be an even number\n\t\t\tunit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n\t\t}\n\n\t\tthis.units.set(id, unit);\n\t}\n\n\tprivate formatBlockAtom(id:number, unit:PolymerBlockUnit, atom:number):string\n\t{\n\t\tlet nbonds = 0;\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\tif ((in1 && !in2) || (!in1 && in2)) nbonds++;\n\t\t}\n\n\t\tlet str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n\t\tif (unit.connect != null) str += ':' + unit.connect;\n\n\t\tlet names = unit.atomName.get(atom);\n\t\tif (Vec.notBlank(names)) str += ':n' + names.join(',');\n\n\t\treturn str;\n\t}\n\n\tprivate formatBlockBond(id:number, unit:PolymerBlockUnit, bond:number):string\n\t{\n\t\tlet in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n\t\tlet isBoundary = (in1 && !in2) || (in2 && !in1);\n\t\tif (!isBoundary) return null;\n\n\t\tlet idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n\t\tlet incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n\t\tif (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl)) return null;\n\n\t\tlet str = POLYMERBLOCK_EXTRA_POLYMER + id;\n\t\tif (idxConn >= 0) str += ':' + (idxConn + 1);\n\t\tif (Vec.notBlank(incl)) str += ':i' + incl.join(',');\n\t\tif (Vec.notBlank(excl)) str += ':e' + excl.join(',');\n\t\treturn str;\n\t}\n\n\tprivate purgeExtraFields():void\n\t{\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) this.mol.setAtomExtra(n, extra);\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet extra = this.mol.bondExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) this.mol.setBondExtra(n, extra);\n\t\t}\n\t}\n\n\tprivate writeUnit(id:number, unit:PolymerBlockUnit):void\n\t{\n\t\tconst {mol} = this;\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet codeAtom = this.formatBlockAtom(id, unit, a);\n\t\t\tmol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n\t\t}\n\t\tfor (let b = 1; b <= mol.numBonds; b++)\n\t\t{\n\t\t\tlet codeBond = this.formatBlockBond(id, unit, b);\n\t\t\tif (codeBond) mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n\t\t}\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(keys?:number[]):number\n\t{\n\t\tif (!keys) keys = this.getIDList();\n\t\tif (keys.length == 0) return 1;\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {CoordUtil} from './CoordUtil';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tSketchUtil: static methods for calculating properties of molecules, typically of the geometric variety.\n*/\n\nexport interface GuidelineSprout\n{\n\tatom:number; // source atom (0 if free-drawing)\n\torders:number[]; // applicable bond orders\n\tx:number[]; // destination in molecular coordinates\n\ty:number[]; // \"\n\tsourceX?:number; // source position in screen coordinates\n\tsourceY?:number; // \"\n\tdestX?:number[]; // destination positions in screen coordinates\n\tdestY?:number[];\n}\n\nexport enum Geometry\n{\n\tLinear = 0,\n\tBent,\n\tTrigonal,\n\tTetra1,\n\tTetra2,\n\tSqPlan,\n\tBasePyram,\n\tTrigBip,\n\tOcta1,\n\tOcta2\n}\n\nexport class SketchUtil\n{\n\tpublic static GEOM_ANGLES =\n\t[ // (these match the Geometry* constants)\n\t\t[0, 180 * DEGRAD],\n\t\t[0, 120 * DEGRAD],\n\t\t[0, 120 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n\t\t[0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n\t\t[0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n\t\t[0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n\t];\n\n\t// adds a new atom to the molecule, and returns its index; the new atom is placed in a reasonable position\n\tpublic static placeNewAtom(mol:Molecule, el:string):number\n\t{\n\t\tlet box = mol.boundary();\n\t\tlet x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n\t\t// MAYBE: see if the highest-indexed atom is a loner, and maybe line the new one up with it?\n\t\treturn mol.addAtom(el, x, y);\n\t}\n\n\t// finds a nice place to put the new fragment which does not overlap existing content, then appends the atoms & bonds to\n\t// the mol parameter\n\tpublic static placeNewFragment(mol:Molecule, frag:Molecule):void\n\t{\n\t\tif (frag.numAtoms == 0) return;\n\n\t\tlet dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n\t\tlet dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n\t\tlet mbox = mol.boundary(), fbox = frag.boundary();\n\n\t\tfor (let n = 0; n < 8; n++)\n\t\t{\n\t\t\tlet vx = dirX[n], vy = dirY[n];\n\n\t\t\tif (n == 0 || n == 3 || n == 5) dx[n] = mbox.minX() - fbox.maxX();\n\t\t\telse if (n == 2 || n == 4 || n == 7) dx[n] = mbox.maxX() - fbox.minX();\n\t\t\telse dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n\n\t\t\tif (n == 5 || n == 6 || n == 7) dy[n] = mbox.minY() - fbox.maxY();\n\t\t\telse if (n == 0 || n == 1 || n == 2) dy[n] = mbox.maxY() - fbox.minY();\n\t\t\telse dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n\n\t\t\tdx[n] -= vx;\n\t\t\tdy[n] -= vy;\n\t\t\tscore[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n\n\t\t\tvx *= 0.25;\n\t\t\tvy *= 0.25;\n\t\t\tfor (let iter = 100; iter > 0; iter--)\n\t\t\t{\n\t\t\t\tlet iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n\t\t\t\tif (iscore <= score[n]) break;\n\t\t\t\tscore[n] = iscore;\n\t\t\t\tdx[n] += vx;\n\t\t\t\tdy[n] += vy;\n\t\t\t}\n\t\t\tfor (let iter = 100; iter > 0; iter--) for (let d = 0; d < 8; d++)\n\t\t\t{\n\t\t\t\tvx = dirX[d] * 0.1;\n\t\t\t\tvy = dirY[d] * 0.1;\n\t\t\t\tlet iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n\t\t\t\tif (iscore <= score[n]) break;\n\t\t\t\tscore[n] = iscore;\n\t\t\t\tdx[n] += vx;\n\t\t\t\tdy[n] += vy;\n\t\t\t}\n\t\t}\n\n\t\tlet best = 0;\n\t\tfor (let n = 1; n < 8; n++) if (score[n] > score[best]) best = n;\n\n\t\tfrag = frag.clone();\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n\n\t\tmol.append(frag);\n\t}\n\n\t// scoring function for above: more congested is better, but any two atoms < 1A = zero; post-biased to favour square\n\t// aspect ratio\n\tprivate static fragPosScore(mol:Molecule, frag:Molecule, dx:number, dy:number):number\n\t{\n\t\tlet score = 0;\n\t\tfor (let i = 1; i <= mol.numAtoms; i++) for (let j = 1; j <= frag.numAtoms; j++)\n\t\t{\n\t\t\tlet ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n\t\t\tlet dist2 = ox * ox + oy * oy;\n\t\t\tif (dist2 < 1) return 0;\n\t\t\tscore += 1 / dist2;\n\t\t}\n\n\t\tlet mbox = mol.boundary(), fbox = frag.boundary();\n\t\tlet minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n\t\tlet minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n\n\t\tlet rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n\t\tlet ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n\t\treturn score / ratio;\n\t}\n\n\t// reduces the number of atoms until there are none that are really close together\n\tpublic static mergeOverlappingAtoms(mol:Molecule):number[]\n\t{\n\t\treturn SketchUtil.mergeFragmentsDiv(mol, 0);\n\t}\n\n\t// for a molecule which has been put together from two fragments, looks for atoms which overlap; the molecule is divided up\n\t// into {1 .. div} and {div+1 .. #atoms}, and which are matched against each other; whenever two atoms are found to overlap,\n\t// they are merged together; non-carbon atoms are more likely to be retained\n\t// the return value is a re-mapping index, i.e. ret[old_atom_number-1]=new_atom_number; whenever two atoms are merged, they both\n\t// end up with the same new-atom-number.\n\t// NOTE: special case where div==0, which makes all atoms fair game, i.e. there is no partition\n\tpublic static mergeFragmentsDiv(mol:Molecule, div:number):number[]\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet omask = CoordUtil.overlappingAtomMask(mol);\n\n\t\tlet chopmask = Vec.booleanArray(false, na);\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tlet remap:number[] = [];\n\t\tfor (let n = 0; n < na; n++) remap.push(n + 1);\n\n\t\tlet div1 = div, div2 = div + 1;\n\t\tif (div == 0) div1 = na;\n\n\t\t// any atoms which overlap each other in space are made into the same\n\t\tfor (let i = 1; i <= div1; i++) if (omask[i - 1] && !chopmask[i - 1])\n\t\t{\n\t\t\tif (div == 0) div2 = i + 1;\n\n\t\t\tfor (let j = div2; j <= na; j++) if (omask[j - 1] && !chopmask[j - 1])\n\t\t\t{\n\t\t\t\tif (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\t\tlet oldN = j, newN = i; // remove the later one, by default\n\n\t\t\t\t// want to keep the more exotic of the two\n\t\t\t\tlet exotic = [0, 0];\n\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tlet a = k == 0 ? i : j;\n\t\t\t\t\texotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n\t\t\t\t\t\t\t+ (mol.atomElement(a) == 'X' ? -100 : 0)\n\t\t\t\t\t\t\t+ (mol.atomCharge(a) != 0 ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomUnpaired(a) != 0 ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n\t\t\t\t\t\t\t+ (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n\t\t\t\t}\n\n\t\t\t\tif (exotic[1] > exotic[0]) {oldN = i; newN = j;}\n\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t\t\t}\n\t\t\t\tchopmask[oldN - 1] = true;\n\t\t\t\tremap[oldN - 1] = newN;\n\t\t\t}\n\t\t}\n\n\t\t// do the actual surgery\n\t\tfor (let n = na; n >= 1; n--) if (chopmask[n - 1])\n\t\t{\n\t\t\tif (n <= div) div--;\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tfor (let i = 0; i < na; i++) if (remap[i] > n) remap[i]--;\n\t\t}\n\t\tfor (let n = mol.numAtoms; n > div; n--) if (mol.atomElement(n) == 'X')\n\t\t{\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tfor (let i = 0; i < na; i++) if (remap[i] > n) remap[i]--;\n\t\t}\n\n\t\tMolUtil.removeDuplicateBonds(mol);\n\n\t\treturn remap;\n\t}\n\n\t// another variation on the merge theme: the atoms indicated by 'mask' are fair-game for joining to the atoms in the rest\n\t// of the molecule\n\tpublic static mergeFragmentsMask(mol:Molecule, mask:boolean[]):void\n\t{\n\t\tlet chopmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tlet na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tfor (let i = 1; i <= na; i++) if (mask[i - 1]) for (let j = 1; j <= na; j++)\n\t\t\tif (!mask[j - 1] && !chopmask[j - 1]) if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ)\n\t\t{\n\t\t\tlet oldN = j, newN = i; // remove the later one, by default\n\t\t\tif (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X') [oldN, newN] = [i, j];\n\t\t\t\n\t\t\tif (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n\t\t\tmol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n\t\t\tmol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n\t\t\tmol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t\t}\n\n\t\t\tchopmask[oldN - 1] = true;\n\t\t}\n\t\tfor (let n = chopmask.length; n >= 1; n--) if (chopmask[n - 1]) mol.deleteAtomAndBonds(n);\n\t\tMolUtil.removeDuplicateBonds(mol);\n\t}\n\n\t// returns whether or not there is any way in which the given values of theta can match the indicated geometry\n\tpublic static matchAngleGeometry(geom:Geometry, theta:number[]):boolean\n\t{\n\t\tif (theta.length <= 1) return true; // always possible\n\n\t\tlet match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n\t\tlet hit = Vec.booleanArray(false, match.length);\n\t\tfor (let n = 0; n < theta.length; n++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tfor (let i = 0; i < theta.length; i++) mtheta[i] = (theta[i] - theta[0]) * s;\n\t\t\tVec.setTo(hit, false);\n\t\t\tlet gotall = true;\n\t\t\tfor (let i = 0; i < mtheta.length; i++)\n\t\t\t{\n\t\t\t\tlet got = false;\n\t\t\t\tfor (let j = 0; j < match.length; j++) if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\thit[j] = true;\n\t\t\t\t\tgot = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!got) {gotall = false; break;}\n\t\t\t}\n\t\t\tif (gotall) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// for a particular atom, figures out the outgoing angles that are most likely to be good for placing a new atom+bond; these\n\t// are found by postulating where a single bond might be drawn based on common geometries for the hybridisation, and using\n\t// simple geometric median-cut angles; the results are not ordered with any kind of preference\n\tpublic static primeDirections(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n\t\tlet exits = SketchUtil.exitVectors(mol, atom);\n\t\treturn GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n\t}\n\n\t// for a given atom, calculates a set of angles that protude outward based on positions between existing bond angles; this\n\t// is primarily used for proposing new bond positions when the hybridisation does not match one of the common sketch geometries\n\tpublic static exitVectors(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom), sz = adj.length;\n\n\t\t// if it's a singleton, return 4 points of the compass\n\t\tif (sz == 0) return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n\n\t\t// if it's terminal, offer nothing\n\t\tif (sz == 1) return [];\n\n\t\t// there is enough content, so build the angles\n\t\tlet ret:number[] = [];\n\t\tlet ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet nn = n < sz - 1 ? n + 1 : 0;\n\t\t\tret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t// for a given atom, considers adding a new bond/atom of the specified bond order, and returns a list of angles\n\t// that are appropriate given the atom's hybridisation and current geometry; if the current geometry does not match\n\t// any of the common sketch patterns, an empty list will be returned\n\t// (note: recommend using exitVectors(..) if this method returns nothing)\n\tpublic static calculateNewBondAngles(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tconst sz = adj.length;\n\n\t\t// terminal atoms\n\t\tif (sz == 0)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n\t\t\tif (atblk <= 2)\n\t\t\t\treturn [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n\t\t\telse\n\t\t\t\treturn [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n\t\t}\n\n\t\t// obtain the \"guessed\" geometry options based on hybridisation, and try to map each of them onto the current\n\t\t// geometry; if any of them works, that becomes the answer\n\t\tlet geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tfor (let n = 0; n < geom.length; n++)\n\t\t{\n\t\t\tlet ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n\t\t\tif (ret != null) return ret;\n\t\t}\n\n\t\t// none of them match, get an empty list back\n\t\treturn [];\n\t}\n\n\t// considers the hybridisation state of the atom, and the order of a new bond that is about to be added, and returns\n\t// a list of common geometry codes that apply to the situation; returns 0-size if none are appropriate\n\tpublic static guessAtomGeometry(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet sz = adj.length, atno = mol.atomicNumber(atom);\n\t\tlet atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n\t\tlet el = mol.atomElement(atom);\n\n\t\t// sort the neighbours by priority\n\t\tlet adjBO:number[] = [], adjAN:number[] = [], pri:number[] = [];\n\t\tlet allSingle = true;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tadjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n\t\t\tadjAN.push(mol.atomicNumber(adj[n]));\n\t\t\tpri.push(adjBO[n] * 200 + adjAN[n]);\n\t\t\tif (adjBO[n] != 1) allSingle = true;\n\t\t}\n\t\tfor (let p = 0; p < sz - 1;)\n\t\t{\n\t\t\tif (pri[p] > pri[p + 1])\n\t\t\t{\n\t\t\t\tVec.swap(adj, p, p + 1);\n\t\t\t\tVec.swap(adjBO, p, p + 1);\n\t\t\t\tVec.swap(adjAN, p, p + 1);\n\t\t\t\tVec.swap(pri, p, p + 1);\n\t\t\t\tif (p > 0) p--;\n\t\t\t}\n\t\t\telse p++;\n\t\t}\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\n\t\t// if atom is terminal...\n\t\tif (sz == 1)\n\t\t{\n\t\t\tif (el == 'C' || el == 'N')\n\t\t\t{\n\t\t\t\t// allene-like\n\t\t\t\tif (adjBO[0] == 2 && order == 2) return [Geometry.Linear];\n\n\t\t\t\t// alkyne-like\n\t\t\t\tif ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3)) return [Geometry.Linear];\n\t\t\t}\n\n\t\t\t// octahedral option for d-blocks\n\t\t\tif (atblk > 2) return [Geometry.Octa1, Geometry.Octa2];\n\n\t\t\t// row 2 organics: trigonal only\n\t\t\tif (order != 0 && (el == 'C' || el == 'N' || el == 'O')) return [Geometry.Trigonal];\n\n\t\t\t// otherwise, linear and trigonal are the best options to run with\n\t\t\treturn [Geometry.Trigonal, Geometry.Linear];\n\t\t}\n\n\t\t// atom is linear: orthogonal angles are implied\n\t\tif (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD)\n\t\t{\n\t\t\tif (atblk <= 2)\n\t\t\t\treturn [Geometry.SqPlan];\n\t\t\telse\n\t\t\t\treturn [Geometry.Octa1, Geometry.Octa2];\n\t\t}\n\n\t\t// done with special cases: include all geometries sensible for the topology\n\t\tlet geom:Geometry[] = [];\n\t\tif (atblk == 0) geom = [Geometry.Trigonal, Geometry.SqPlan];\n\t\telse if (atblk == 1) geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n\t\telse if (atblk == 2)\n\t\t{\n\t\t\tgeom.push(Geometry.Trigonal);\n\t\t\tif (el == 'C' && allSingle)\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t}\n\t\t\telse if (el == 'C' && !allSingle)\n\t\t\t{\n\t\t\t\t// nop\n\t\t\t}\n\t\t\telse if (elrow <= 3)\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t\tgeom.push(Geometry.Octa1);\n\t\t\t\tgeom.push(Geometry.Octa2);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeom.push(Geometry.Octa1);\n\t\t\tgeom.push(Geometry.Octa2);\n\t\t}\n\n\t\t// remove the ones that don't fit\n\t\tfor (let n = geom.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (!SketchUtil.matchAngleGeometry(geom[n], ang)) geom.splice(n, 1);\n\t\t}\n\n\t\treturn geom;\n\t}\n\n\t// for a given geometry code, looks for ways to map the current set of angles onto the predefined set; when a lock is\n\t// found, the unoccupied positions are summarised and returned; if there is no way to perform the map, null is returned\n\tpublic static mapAngleSubstituent(geom:Geometry, ang:number[]):number[]\n\t{\n\t\tlet gtheta = SketchUtil.GEOM_ANGLES[geom];\n\t\tconst asz = ang.length, gsz = gtheta.length;\n\n\t\t// if there are no vacancies, stop now\n\t\tif (asz >= gsz) return null;\n\n\t\t// if the atom is isolated, no need to rotate or lock anything\n\t\tif (asz == 0) return gtheta.slice(0);\n\n\t\t// collect all the angles implied by the geometry, in all its degeneracy\n\t\tlet vac:number[] = [];\n\t\tfor (let n = 0; n < asz; n++) for (let k = 0; k < gsz; k++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tlet gang:number[] = [];\n\t\t\tfor (let i = 0; i < gsz; i++) gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n\t\t\tlet mask = Vec.booleanArray(false, gsz);\n\t\t\tlet mcount = 0;\n\t\t\tfor (let i = 0; i < gsz; i++) if (!mask[i]) for (let j = 0; j < asz; j++)\n\t\t\t\tif (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD)\n\t\t\t{\n\t\t\t\tmask[i] = true;\n\t\t\t\tmcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (mcount != asz) continue;\n\t\t\tfor (let i = 0; i < gsz; i++) if (!mask[i]) vac.push(gang[i]);\n\t\t}\n\t\tif (vac.length == 0) return null;\n\n\t\t// sort and remove degenerates\n\t\tvac = GeomUtil.sortAngles(vac);\n\t\tfor (let n = 0; n < vac.length - 1; n++)\n\t\t{\n\t\t\tlet th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n\t\t\tif (Math.abs(dth) < 5 * DEGRAD)\n\t\t\t{\n\t\t\t\tvac[n] = th1 + 0.5 * dth;\n\t\t\t\tvac.splice(n + 1, 1);\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\n\t\treturn vac;\n\t}\n\n\t// for a given molecule, ensures that a specific atom fits a given geometry template; if so, returns null; if not, looks for\n\t// a way to fit the bonds into the geometry template with minimum perturbation, and applies the result by rotating the\n\t// bonds as necessary; bonds that occur in rings constrain the options significantly\n\tpublic static refitAtomGeometry(mol:Molecule, atom:number, geom:Geometry):Molecule\n\t{\n\t\tlet gtheta = SketchUtil.GEOM_ANGLES[geom];\n\t\tlet gsz = gtheta.length;\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet asz = adj.length;\n\n\t\t// must be nore than one atom, and cannot exceed the geometry extent\n\t\tif (asz <= 1 || asz > gsz) return null;\n\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tlet inRing = Vec.booleanArray(false, asz);\n\t\tlet allInRing = true;\n\t\tfor (let n = 0; n < asz; n++)\n\t\t{\n\t\t\tinRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n\t\t\tif (!inRing[n]) allInRing = false;\n\t\t}\n\t\tif (allInRing) return null; // can't work with this\n\n\t\t// start looking for the best set-of-angles for the new geometry\n\t\tlet bestAng:number[] = null;\n\t\tlet bestScore = 0;\n\t\tlet ww = MolUtil.calculateWalkWeight(mol, atom);\n\n\t\tfor (let i = 0; i < gsz; i++) for (let j = 0; j < asz; j++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tlet newAng = Vec.numberArray(0, asz);\n\t\t\tlet mask = Vec.booleanArray(false, gsz);\n\n\t\t\tfor (let n1 = 0; n1 < asz; n1++)\n\t\t\t{\n\t\t\t\tlet best = -1;\n\t\t\t\tlet bdiff = 0;\n\t\t\t\tfor (let n2 = 0; n2 < gsz; n2++) if (!mask[n2])\n\t\t\t\t{\n\t\t\t\t\tlet th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n\t\t\t\t\tlet diff = Math.abs(angleDiff(th, ang[n1]));\n\t\t\t\t\tif (best < 0 || diff < bdiff)\n\t\t\t\t\t{\n\t\t\t\t\t\tbest = n2;\n\t\t\t\t\t\tbdiff = diff;\n\t\t\t\t\t\tnewAng[n1] = th;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmask[best] = true;\n\t\t\t}\n\n\t\t\tlet ringClash = false;\n\t\t\tfor (let n = 0; n < asz; n++) if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD)\n\t\t\t{\n\t\t\t\tringClash = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ringClash) continue;\n\n\t\t\tlet score = 0;\n\t\t\tfor (let n = 0; n < asz; n++) score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n\t\t\tif (bestAng == null || score < bestScore)\n\t\t\t{\n\t\t\t\tbestAng = newAng;\n\t\t\t\tbestScore = score;\n\t\t\t}\n\t\t}\n\n\t\tif (bestAng == null) return null;\n\n\t\t// if the best one is basically what we already have, then fail\n\t\tlet same = true;\n\t\tfor (let n = 0; n < asz; n++) if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {same = false; break;}\n\t\tif (same) return null;\n\n\t\t// apply the changes\n\t\tmol = mol.clone();\n\t\tfor (let n = 0; n < asz; n++) if (!inRing[n]) CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n\t\treturn mol;\n\t}\n\n\t// for a given source atom, and one-or-more adjacent atoms, and a list of possible geometries, propose\n\t// a molecule in which one of the adjacent atoms has been rotated around to lock into the next geometry-valid\n\t// position; return value of null means that no new options were discovered\n\t// note: it is assumed that the adjacent atoms are terminal\n\tpublic static switchAtomGeometry(mol:Molecule, src:number, dst:number[], geoms:number[]):Molecule\n\t{\n\t\tlet bestAtom = 0;\n\t\tlet bestAng = 0, bestX = 0, bestY = 0;\n\t\tlet adj = mol.atomAdjList(src);\n\t\tlet ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n\t\tlet cx = mol.atomX(src), cy = mol.atomY(src);\n\n\t\tfor (let i = 0; i < dst.length; i++)\n\t\t{\n\t\t\tlet a = adj.indexOf(dst[i]);\n\t\t\tlet curth = ang[a];\n\t\t\tfor (let n = 0, p = 0; n < adj.length; n++) if (n != a) theta[p++] = ang[n];\n\t\t\tlet r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n\n\t\t\tfor (let j = 0; j < geoms.length; j++)\n\t\t\t{\n\t\t\t\tif (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length) continue;\n\n\t\t\t\tlet newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n\t\t\t\tif (newAng != null) for (let n = 0; n < newAng.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet dth = angleDiff(newAng[n], curth);\n\t\t\t\t\tif (Math.abs(dth) < 3 * DEGRAD) continue;\n\t\t\t\t\tif (dth < 0) dth += TWOPI;\n\n\t\t\t\t\tif (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet x = cx + r * Math.cos(newAng[n]);\n\t\t\t\t\t\tlet y = cy + r * Math.sin(newAng[n]);\n\t\t\t\t\t\tif (CoordUtil.atomAtPoint(mol, x, y) != 0) continue;\n\n\t\t\t\t\t\tbestAtom = dst[i];\n\t\t\t\t\t\tbestAng = dth;\n\t\t\t\t\t\tbestX = x;\n\t\t\t\t\t\tbestY = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// note: this means only the first geometry is used; seems to work best this way\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (bestAtom == 0) return null;\n\n\t\t// apply the changes\n\t\tmol = mol.clone();\n\t\tmol.setAtomPos(bestAtom, bestX, bestY);\n\t\treturn mol;\n\t}\n\n\t// for a list of atoms, consider all pairwise combinations for potentially connecting up; the basic idea is that atoms which are not\n\t// bonded, but are very near the ideal bond distance, always get connected; if there are none of these, it picks the two atoms which\n\t// are closest together; the return value if an array of pairs, i.e. {from1,to1,from2,to2,...}\n\t// NOTE: it will not add bonds between any two atoms which are in the same ring block; this makes it too easy to accidently create\n\t// systems which are too interconnected\n\tpublic static pickAtomsToConnect(mol:Molecule, aidx:number[]):number[]\n\t{\n\t\tif (aidx.length < 2) return null;\n\t\tif (aidx.length == 2)\n\t\t{\n\t\t\tif (mol.findBond(aidx[0], aidx[1]) > 0) return null;\n\t\t\treturn aidx;\n\t\t}\n\n\t\t// multiple atoms, so pass down the list looking for inspiration\n\t\tconst AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n\t\tlet bestDSQ = Number.MAX_VALUE;\n\t\tlet bestA1 = 0, bestA2 = 0;\n\n\t\tlet conn:number[] = [];\n\n\t\tfor (let i = 0; i < aidx.length - 1; i++) for (let j = i + 1; j < aidx.length; j++)\n\t\t{\n\t\t\tif (mol.findBond(aidx[i], aidx[j]) > 0) continue;\n\t\t\tlet dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n\t\t\tif (dsq < AUTO_DSQ) {conn.push(aidx[i]); conn.push(aidx[j]);}\n\t\t\telse if (dsq < bestDSQ) {bestDSQ = dsq; bestA1 = aidx[i]; bestA2 = aidx[j];}\n\t\t}\n\t\tif (conn.length == 0 && bestA1 != 0) {conn.push(bestA1); conn.push(bestA2);}\n\n\t\treturn conn.length == 0 ? null : conn;\n\t}\n\n\t// for a given atom and a list of directions in which a new atom+bond might be created, return which is preferable\n\tpublic static pickNewAtomDirection(mol:Molecule, atom:number, theta:number[]):number\n\t{\n\t\tif (theta.length == 1) return theta[0];\n\n\t\tlet bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n\t\tfor (let n = 0; n < theta.length; n++)\n\t\t{\n\t\t\tlet px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n\t\t\tlet py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n\n\t\t\tlet score = CoordUtil.congestionPoint(mol, px, py);\n\t\t\tif (score > bestScore) continue;\n\t\t\tif (CoordUtil.overlapsAtom(mol, px, py, 0.2)) score += 1E5;\n\t\t\tif (score < bestScore) {bestTheta = theta[n]; bestScore = score;}\n\t\t}\n\t\treturn bestTheta;\n\t}\n\n\t// for atoms qualifying with the given mask, any group of more than one atom that overlap, merges them together\n\tpublic static joinOverlappingAtoms(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tmol = mol.clone();\n\t\tmask = mask.slice(0);\n\n\t\tconst na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tlet groups:number[][] = [];\n\t\tlet groupX:number[] = [], groupY:number[] = [];\n\n\t\t// find all the groups\n\t\tfor (let i = 0; i < na - 1; i++) if (mask[i])\n\t\t{\n\t\t\tlet g:number[] = [i + 1];\n\t\t\tlet x = mx[i], y = my[i];\n\t\t\tfor (let j = i + 1; j < na; j++) if (mask[j])\n\t\t\t{\n\t\t\t\tif (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\t\tg.push(j + 1);\n\t\t\t\tx += mx[j];\n\t\t\t\ty += my[j];\n\n\t\t\t\t// repurpose all bonds from j -> i\n\t\t\t\tlet adjb = mol.atomAdjBonds(j + 1);\n\t\t\t\tfor (let n = 0; n < adjb.length; n++)\n\t\t\t\t{\n\t\t\t\t\tif (mol.bondFrom(adjb[n]) == j + 1) mol.setBondFrom(adjb[n], i + 1);\n\t\t\t\t\telse if (mol.bondTo(adjb[n]) == j + 1) mol.setBondTo(adjb[n], i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (g.length == 1) continue;\n\n\t\t\tgroups.push(g);\n\t\t\tgroupX.push(x / g.length);\n\t\t\tgroupY.push(y / g.length);\n\t\t}\n\n\t\tif (groups.length == 0) return null;\n\n\t\t// now perform the surgery\n\t\tlet keepmask = Vec.booleanArray(true, na);\n\t\tfor (let n = 0; n < groups.length; n++)\n\t\t{\n\t\t\tlet g = groups[n];\n\t\t\tmol.setAtomPos(g[0], groupX[n], groupY[n]);\n\t\t\tfor (let i = 1; i < g.length; i++) keepmask[g[i] - 1] = false;\n\t\t}\n\t\tmol = MolUtil.subgraphMask(mol, keepmask);\n\t\tMolUtil.removeDuplicateBonds(mol);\n\t\treturn mol;\n\t}\n\n\t// for the group of atoms defined by the mask, moves them all out to the far edge, as defined by dx/dy (should be 0/1/-1);\n\t// returns null if the operation is invalid for any reason, e.g. the atoms are already along the specified edge\n\tpublic static moveToEdge(mol:Molecule, mask:boolean[], dx:number, dy:number):Molecule\n\t{\n\t\tlet gotS = false, gotN = false;\n\t\tlet sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n\t\tlet nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tif (mask[n - 1])\n\t\t\t{\n\t\t\t\tif (!gotS || x < sx1) sx1 = x;\n\t\t\t\tif (!gotS || y < sy1) sy1 = y;\n\t\t\t\tif (!gotS || x > sx2) sx2 = x;\n\t\t\t\tif (!gotS || y > sy2) sy2 = y;\n\t\t\t\tgotS = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!gotN || x < nx1) nx1 = x;\n\t\t\t\tif (!gotN || y < ny1) ny1 = y;\n\t\t\t\tif (!gotN || x > nx2) nx2 = x;\n\t\t\t\tif (!gotN || y > ny2) ny2 = y;\n\t\t\t\tgotN = true;\n\t\t\t}\n\t\t}\n\n\t\t// check to see if it's already at the farthest extent\n\t\tconst SEPARATE = 1.0, SEPTEST = 0.9;\n\t\tif ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n\t\t\t(dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n\t\t\t(dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n\t\t\t(dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\t// apply the move\n\t\tmol = mol.clone();\n\t\tlet ox = 0, oy = 0;\n\t\tif (dx < 0) ox = nx1 - sx2 - SEPARATE;\n\t\tif (dx > 0) ox = nx2 - sx1 + SEPARATE;\n\t\tif (dy < 0) oy = ny1 - sy2 - SEPARATE;\n\t\tif (dy > 0) oy = ny2 - sy1 + SEPARATE;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1]) mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n\n\t\treturn mol;\n\t}\n\n\t// adds some number of additional hydrogen atoms to a parent atom, and selects reasonable position coordinates for them\n\tpublic static placeAdditionalHydrogens(mol:Molecule, atom:number, numH:number):void\n\t{\n\t\tlet base = mol.numAtoms;\n\t\tconst x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n\n\t\tlet adj = mol.atomAdjList(atom);\n\n\t\t// special deal: adding 2 hydrogens to a divalent atom in bent form\n\t\tif (adj.length == 2 && numH == 2)\n\t\t{\n\t\t\tconst th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n\t\t\tconst th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n\t\t\tif (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD)\n\t\t\t{\n\t\t\t\t//float theta=GeomUtil.emergentAngle(new float[]{th1,th2})+Util.PI_F;\n\t\t\t\tlet theta = 0.5 * (th1 + th2) + Math.PI;\n\t\t\t\tlet th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n\t\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n\t\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n\t\t\t\tmol.addBond(atom, base + 1, 1);\n\t\t\t\tmol.addBond(atom, base + 2, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// special deal: adding 3 hydrogens to a terminal atom\n\t\tif (adj.length == 1 && numH == 3)\n\t\t{\n\t\t\tlet th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n\t\t\tlet th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n\t\t\tmol.addBond(atom, base + 1, 1);\n\t\t\tmol.addBond(atom, base + 2, 1);\n\t\t\tmol.addBond(atom, base + 3, 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise: add one, then recurse\n\t\tlet theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n\t\tmol.addBond(atom, base + 1, 1);\n\t\tif (numH > 1) SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n\t}\n\n\t// returns a list of outgoing angles; unlike primeDirections, which tries to narrow the list as much as possible, this function\n\t// tries to be generous and include anything remotely plausible: the intent is for helping out an interactive session where a precise\n\t// pointing device is available\n\tpublic static allViableDirections(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tif (mol.atomAdjCount(atom) == 0)\n\t\t{\n\t\t\tlet angles:number[] = [];\n\t\t\tfor (let n = 0; n < 12; n++) angles.push(30 * DEGRAD);\n\t\t\treturn angles;\n\t\t}\n\n\t\t// all that applies\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet angles = SketchUtil.exitVectors(mol, atom);\n\n\t\tlet geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n\t\tif (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0) geom.push(Geometry.Linear);\n\t\tlet bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tfor (let g of geom)\n\t\t{\n\t\t\tlet map = SketchUtil.mapAngleSubstituent(g, bndang);\n\t\t\tif (map != null) for (let th of map) angles.push(th);\n\t\t}\n\n\t\treturn GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n\t}\n\n\t// simple new rings grafted onto existing components, or not\n\tpublic static proposeNewRing(mol:Molecule, rsz:number, x:number, y:number, dx:number, dy:number, snap:boolean):[number[], number[]]\n\t{\n\t\tlet theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n\t\tif (snap)\n\t\t{\n\t\t\tconst chunk = 30 * DEGRAD;\n\t\t\ttheta = Math.round(theta / chunk) * chunk;\n\t\t}\n\t\treturn SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n\t}\n\tpublic static proposeAtomRing(mol:Molecule, rsz:number, atom:number, dx:number, dy:number):[number[], number[]]\n\t{\n\t\t/*\n\t\tvar thsnap:number[] = SketchUtil.allViableDirections(mol, atom, 1);\n\t\tif (mol.atomAdjCount(atom) == 1)\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(atom)[0];\n\t\t\tlet theta = Math.atan2(mol.atomY(nbr) - mol.atomY(atom), mol.atomX(nbr) - mol.atomX(atom));\n\t\t\tthsnap.push(theta);\n\t\t\tthsnap = uniqueAngles(thsnap, 2.0 * DEGRAD);\n\t\t}\n\t\t// (tempting to have it snap to sidebonds, but the correct way to do that is to drag from the bond rather than the atom)\n\t\t*/\n\n\t\tlet thsnap:number[] = [];\n\t\tlet cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tif (mol.atomAdjCount(atom) == 0)\n\t\t{\n\t\t\tfor (let n = 0; n < 12; n++) thsnap.push(TWOPI * n / 12);\n\t\t}\n\t\telse if (mol.atomAdjCount(atom) == 1)\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(atom)[0];\n\t\t\tthsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet angs:number[] = [];\n\t\t\tfor (let nbr of mol.atomAdjList(atom)) angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n\t\t\tangs = sortAngles(angs);\n\t\t\tfor (let n = 0; n < angs.length; n++)\n\t\t\t{\n\t\t\t\tlet th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n\t\t\t\tthsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n\t\t\t}\n\t\t}\n\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tlet bestTheta = 0, bestDelta = Number.MAX_VALUE;\n\t\tfor (let th of thsnap)\n\t\t{\n\t\t\tlet delta = Math.abs(angleDiff(th, theta));\n\t\t\tif (delta < bestDelta) {bestTheta = th; bestDelta = delta;}\n\t\t}\n\n\t\treturn SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n\t}\n\tpublic static proposeBondRing(mol:Molecule, rsz:number, bond:number, dx:number, dy:number):[number[], number[]]\n\t{\n\t\tlet bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tlet bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n\t\tlet sign = dx * by - dy * bx;\n\n\t\tlet delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n\t\tlet theta = Math.atan2(by, bx) + delta;\n\n\t\tlet dth = TWOPI / rsz;\n\t\tlet rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n\t\tlet cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n\t\tlet cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n\n\t\tlet rx:number[] = [], ry:number[] = [];\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet th = theta - Math.PI + (n - 0.5) * dth;\n\t\t\trx.push(cx + Math.cos(th) * rad);\n\t\t\try.push(cy + Math.sin(th) * rad);\n\t\t}\n\n\t\tlet [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n\t\trx[0] = mol.atomX(i1);\n\t\try[0] = mol.atomY(i1);\n\t\trx[1] = mol.atomX(i2);\n\t\try[1] = mol.atomY(i2);\n\n\t\treturn [rx, ry];\n\t}\n\n\t// simple ring attachments, to an atom/bond/point, with a guide vector to collapse the options for direction; returns arrays for X and Y\n\t// points for the ring that ought to be created from these parameters; note\n\tpublic static positionSimpleRing(mol:Molecule, rsz:number, x:number, y:number, theta:number):[number[], number[]]\n\t{\n\t\tlet dth = TWOPI / rsz;\n\t\tlet rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n\t\tlet cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n\n\t\tlet rx:number[] = [], ry:number[] = [];\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet th = theta - Math.PI + n * dth;\n\t\t\trx.push(cx + Math.cos(th) * rad);\n\t\t\try.push(cy + Math.sin(th) * rad);\n\t\t}\n\n\t\treturn [rx, ry];\n\t}\n\n\t// determines a list of \"sprouts\" for a given atom, namely exterior guides that are suitable for skething new bonds to\n\tpublic static guidelineSprouts(mol:Molecule, atom:number):GuidelineSprout[]\n\t{\n\t\tlet sprouts:GuidelineSprout[] = [];\n\n\t\t// do calculations for orders 1..3, and merge any that are duplicates (1 & 2 are typically the same, while 3 is frequently different)\n\t\tlet angs:number[][] = [], ords:number[][] = [];\n\t\tfor (let n = 0; n < 3; n++)\n\t\t{\n\t\t\tangs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n\t\t\tords.push([n + 1]);\n\t\t\tfor (let i = 0; i < n; i++) if (angs[i] != null && Vec.equals(angs[n], angs[i]))\n\t\t\t{\n\t\t\t\tangs[n] = null;\n\t\t\t\tords[i].push(n + 1);\n\t\t\t}\n\t\t}\n\n\t\t// add sprouts, using Cartesian coordinates\n\t\tconst cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tfor (let n = 0; n < 3; n++) if (angs[n] != null)\n\t\t{\n\t\t\tlet sprout:GuidelineSprout =\n\t\t\t{\n\t\t\t\tatom: atom,\n\t\t\t\torders: ords[n],\n\t\t\t\tx: [],\n\t\t\t\ty: [],\n\t\t\t};\n\t\t\tfor (let i = 0; i < angs[n].length; i++)\n\t\t\t{\n\t\t\t\tsprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n\t\t\t\tsprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n\t\t\t}\n\t\t\tsprouts.push(sprout);\n\t\t}\n\t\treturn sprouts;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2019 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tHandles some of the custom extensions that are brought in for molecules when imported from other\n\tsources, such as MDL Molfiles, which support a number of features that are not part of the core\n\trepresentation of a molecule.\n\n\tThese additional properties are included in the transient extension collection for atoms and\n\tbonds, i.e. they get cleared out as soon as the structure is modified in any way, because their\n\teffects are not localised to a single atom/bond.\n\n\tA molecule that contains foreign annotations is expected to either import them to a more well\n\tspecified definition, or to have a brief lifetime and only need to survive a round trip, rather than\n\tbeing used or modified.\n*/\n\nexport enum ForeignMoleculeTransient\n{\n\t// generic flags for remarking that an atom/bond is aromatic; commonly used by SMILES, for MDL Molfile queries (and illegal structures)\n\t// and a number of other formats which use this concept\n\tAtomAromatic = 'yAROMATIC',\n\tBondAromatic = 'yAROMATIC',\n\n\t// specialisations of zero-order bonds: the MDL world supports \"dative\" and \"hydrogen\" which are both 0-order but have particular meaning\n\tBondZeroDative = 'yZERO_DATIVE',\n\tBondZeroHydrogen = 'yZERO_HYDROGEN',\n\n\t// the atom-centred chirality settings, used explicitly by MDL Molfiles to denote chirality, or mixtures\n\tAtomChiralMDLOdd = 'yCHIRAL_MDL_ODD',\n\tAtomChiralMDLEven= 'yCHIRAL_MDL_EVEN',\n\tAtomChiralMDLRacemic = 'yCHIRAL_MDL_RACEMIC',\n\n\t// annotations that carry over from supplementary MDL parsing\n\tAtomExplicitValence = 'yMDL_EXPLICIT_VALENCE',\n\tAtomSgroupMultiAttach = 'yMDL_SGROUP_MULTIATTACH',\n\tAtomSgroupMultiRepeat = 'yMDL_SGROUP_MULTIREPEAT',\n\tAtomSgroupData = 'yMDL_SGROUP_DATA',\n\n\t// references to SCSR templates\n\tAtomSCSRClass = 'yMDL_SCSR_CLASS',\n\tAtomSCSRSeqID = 'yMDL_SCSR_SEQID',\n\tAtomSCSRAttchOrd = 'yMDL_SCSR_ATTCHORD',\n}\n\nexport interface ForeignMoleculeSgroupMultiAttach\n{\n\tname:string;\n\tatoms:number[];\n\tkeyval:Record<string, string>;\n}\n\nexport interface ForeignMoleculeSgroupMultiRepeat\n{\n\tmult:number;\n\tunit:number;\n\tatoms:number[];\n}\n\nexport interface ForeignMoleculeSgroupData\n{\n\tname:string;\n\tvalue:string;\n\tunit:string;\n\tquery:string;\n\tatoms:number[];\n}\n\nexport interface ForeignMoleculeTemplateDefn\n{\n\tname:string;\n\tnatReplace:string;\n\tmol:Molecule;\n}\n\nexport class ForeignMolecule\n{\n\t// ----------------- public methods -----------------\n\n\t// returns a mask for any atoms that have been explicitly marked as aromatic; note that this does not look at the\n\t// marking of aromatic bonds, which is separate\n\tpublic static noteAromaticAtoms(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numAtoms;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n\t\treturn mask;\n\t}\n\n\t// returns a mask for any bonds that have been explicitly marked as aromatic\n\tpublic static noteAromaticBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n\t\treturn mask;\n\t}\n\n\t// returns a mask for zero-order bonds that are marked as dative/hydrogen respectively\n\tpublic static noteZeroDativeBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n\t\treturn mask;\n\t}\n\tpublic static noteZeroHydrogenBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n\t\treturn mask;\n\t}\n\n\t// TODO: convert MDL chirality to/from rubric\n\n\t// explicit valence: 0=no information; -1=zero; >0=explicit\n\tpublic static markExplicitValence(mol:Molecule, atom:number, valence:number):void\n\t{\n\t\tlet trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n\t\ttrans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n\t\tmol.setAtomTransient(atom, trans);\n\t}\n\tpublic static noteExplicitValence(mol:Molecule, atom:number):number\n\t{\n\t\tlet trans = mol.atomTransient(atom);\n\t\tfor (let tr of trans) if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':')) return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n\t\treturn null;\n\t}\n\n\t// S-groups with either no attachments or multiple attachments; only single-attachment S-groups are handled naturally\n\tpublic static markSgroupMultiAttach(mol:Molecule, name:string, atoms:number[], keyval:Record<string, string> = {}):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tlet bits = payload.split(',');\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tif (!(idx > 0)) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name ?? ''}`;\n\t\tfor (let [key, val] of Object.entries(keyval)) tag += ',' + key + '=' + val;\n\t\tfor (let a of atoms) mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n\t}\n\tpublic static hasAnySgroupMultiAttach(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupMultiAttach(mol:Molecule):ForeignMoleculeSgroupMultiAttach[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupMultiAttach> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 2) continue;\n\t\t\tlet idx = parseInt(bits[0]), name = bits[1];\n\t\t\tif (!(idx > 0)) continue;\n\n\t\t\tlet keyval:Record<string, string> = {};\n\t\t\tfor (let i = 2; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tkeyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n\t\t\t}\n\n\t\t\tlet sgm = map[idx];\n\t\t\tif (sgm) sgm.atoms.push(n); else map[idx] = {name, atoms: [n], keyval};\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// S-groups that mark repeating units, where the \"parent\" set is rendered with a bracket+suffix \"[]n\"; the molecule is fully expanded out, so that the\n\t// graph connectivity is that of the real molecule, with the non-parent atoms being hidden & finagled for rendering purposes\n\tpublic static markSgroupMultiRepeat(mol:Molecule, mult:number, atoms:number[]):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tif (comma <= 0) continue;\n\t\t\tlet idx = parseInt(payload.substring(0, comma));\n\t\t\tif (idx <= 0) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet unit = atoms.length / mult;\n\t\tlet tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n\t\tfor (let n = 0; n < atoms.length; n++) mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n\t}\n\tpublic static hasAnySgroupMultiRepeat(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupMultiRepeat(mol:Molecule):ForeignMoleculeSgroupMultiRepeat[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupMultiRepeat> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 4) continue;\n\t\t\tlet idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n\t\t\tif (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit) continue;\n\n\t\t\tlet mr = map[idx];\n\t\t\tif (mr == null) map[idx] = mr = {mult, unit, atoms: Vec.numberArray(0, mult * unit)};\n\t\t\telse if (mr.mult != mult || mr.unit != unit) continue;\n\n\t\t\tmr.atoms[pos - 1] = n;\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// data S-groups can attach arbitrary data concepts to a group of atoms\n\tpublic static markSgroupData(mol:Molecule, name:string, value:string, unit:string, query:string, atoms:number[]):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tif (comma <= 0) continue;\n\t\t\tlet idx = parseInt(payload.substring(0, comma));\n\t\t\tif (idx <= 0) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet bits = [(idxHigh + 1).toString(), name, value, unit, query];\n\t\tfor (let n = 1; n < bits.length; n++) bits[n] = (bits[n] ?? '').replace(/\\,/g, '@@');\n\t\tlet tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n\t\tfor (let n = 0; n < atoms.length; n++) mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n\t}\n\tpublic static hasAnySgroupData(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupData(mol:Molecule):ForeignMoleculeSgroupData[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupData> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 5) continue;\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tfor (let i = 1; i < 5; i++) bits[i] = bits[i].replace(/\\@\\@/g, ',');\n\t\t\tif (!(idx > 0)) continue;\n\n\t\t\tlet sd = map[idx];\n\t\t\tif (sd)\n\t\t\t\tsd.atoms.push(n);\n\t\t\telse\n\t\t\t\tmap[idx] = {name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n]};\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// ----------------- private methods -----------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2022 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tUtilities for getting & setting query features, for atoms and bonds. These are all stored within the reserved \"q\"\n\textension prefix.\n*/\n\nexport enum QueryTypeAtom\n{\n\tCharges = 'qC:',\t\t// allowed charges\n\tAromatic = 'qA:',\t\t// yes/no; must/not have an aromatic bond\n\tUnsaturated = 'qU:',\t// qU: yes/no; must/must not have a multiple bond (2 or higher)\n\tElements = 'qE:',\t\t// allowed elements (in addition to atom's label, if not '*')\n\tElementsNot = 'qE!',\t// disallowed elements (only relevant if label is '*')\n\tRingSizes = 'qR:',\t\t// list of small ring sizes that the atom must participate in\n\tRingSizesNot = 'qR!',\t// list of small ring sizes that the atom must not participate in\n\tRingBlock = 'qB:',\t\t// yes/no; whether the atom must be in a ring block\n\tNumRings = 'qN:',\t\t// list of allowed numbers of small rings (3..7) the atom may occur in\n\tRingBonds = 'qG:',\t\t// qG: list of allowed # of bonds that are in a ring\n\tAdjacency = 'qJ:',\t\t// list of allowed adjacency counts\n\tBondSums = 'qO:',\t\t// list of allowed sums of adjacent bond orders\n\tValences = 'qV:',\t\t// list of allowed valences (sum:BO - chg + unp + hyd)\n\tHydrogens = 'qH:',\t\t// list of allowed hydrogen counts (virtual and actual)\n\tIsotopes = 'qI:',\t\t// list of allowed isotopes\n\tSubFrags = 'qX:',\t\t// list of allowed sub-fragments (inline encoding, like abbreviations)\n\tSubFragsNot = 'qX!',\t// list of disallowed sub-fragments\n}\n\nexport enum QueryTypeBond\n{\n\tRingSizes = 'qR:',\t\t// list of small ring sizes that the bond must participate in\n\tRingSizesNot = 'qR!',\t// list of small ring sizes that the bond must not participate in\n\tRingBlock = 'qB:',\t\t// yes/no; whether the atom must be in a ring block\n\tNumRings = 'qN:',\t\t// list of allowed numbers of small rings (3..7) the bond may occur in\n\tOrders = 'qO:',\t\t\t// list of allowed bond orders; allowed: (0,1,2,3,4,-1) (-1==aromatic)\n}\n\nexport class QueryUtil\n{\n\t// ------------------ public methods --------------------\n\n\t// determine whether there's any kind of query info associated with the atom or bond\n\tpublic static hasAnyQueryAtom(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith('q')) return true;\n\t\treturn false;\n\t}\n\tpublic static hasAnyQueryBond(mol:Molecule, bond:number):boolean\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith('q')) return true;\n\t\treturn false;\n\t}\n\n\t// return whether a specific kind of query is present\n\tpublic static hasQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return true;\n\t\treturn false;\n\t}\n\n\tpublic static hasQueryBond(mol:Molecule, bond:number, type:QueryTypeBond):boolean\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return true;\n\t\treturn false;\n\t}\n\n\t// removes any instances of a specific kind of query\n\tpublic static deleteQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tlet modified = false;\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setAtomExtra(atom, extra);\n\t}\n\tpublic static deleteQueryBond(mol:Molecule, bond:number, type:QueryTypeBond):void\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tlet modified = false;\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setBondExtra(bond, extra);\n\t}\n\n\t// remove all query features from atom/bond\n\tpublic static deleteQueryAtomAll(mol:Molecule, atom:number)\n\t{\n\t\tmol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n\t}\n\tpublic static deleteQueryBondAll(mol:Molecule, bond:number)\n\t{\n\t\tmol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n\t}\n\n\t// fetch the payload content for a particular type, or null if not found\n\tpublic static queryAtomString(mol:Molecule, atom:number, type:QueryTypeAtom):string\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return extra[n].substring(type.length);\n\t\treturn null;\n\t}\n\tpublic static queryAtomStringList(mol:Molecule, atom:number, type:QueryTypeAtom):string[]\n\t{\n\t\tlet extra = mol.atomExtra(atom), list = null;\n\t\tif (extra != null) for (let str of extra) if (str.startsWith(type)) list = Vec.append(list, str.substring(type.length));\n\t\treturn list;\n\t}\n\tpublic static queryBondString(mol:Molecule, bond:number, type:QueryTypeBond):string\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return extra[n].substring(type.length);\n\t\treturn null;\n\t}\n\n\t// set the query payload for a particular type; null or empty string will cause it to be deleted instead\n\tpublic static setQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom, str:string):void\n\t{\n\t\tif (!str)\n\t\t{\n\t\t\tthis.deleteQueryAtom(mol, atom, type);\n\t\t\treturn;\n\t\t}\n\t\tlet value = type + str;\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (extra[n].startsWith(type))\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\textra[n] = value;\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\telse extra.splice(n, 1);\n\t\t\t}\n\t\t}\n\t\tif (value != null) extra.push(value);\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\tpublic static setQueryAtomList(mol:Molecule, atom:number, type:QueryTypeAtom, list:string[]):void\n\t{\n\t\tif (Vec.isBlank(list))\n\t\t{\n\t\t\tthis.deleteQueryAtom(mol, atom, type);\n\t\t\treturn;\n\t\t}\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) extra.splice(n, 1);\n\t\tfor (let str of list) extra.push(type + str);\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\tpublic static setQueryBond(mol:Molecule, bond:number, type:QueryTypeBond, str:string):void\n\t{\n\t\tif (!str)\n\t\t{\n\t\t\tthis.deleteQueryBond(mol, bond, type);\n\t\t\treturn;\n\t\t}\n\t\tlet value = type + str;\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (extra[n].startsWith(type))\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\textra[n] = value;\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\telse extra.splice(n, 1);\n\t\t\t}\n\t\t}\n\t\tif (value != null) extra.push(value);\n\t\tmol.setBondExtra(bond, extra);\n\t}\n\n\t// fetching of specific query types from atoms, parsed out into the right datastructure\n\tpublic static queryAtomCharges(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges));}\n\tpublic static queryAtomAromatic(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic));}\n\tpublic static queryAtomUnsaturated(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated));}\n\tpublic static queryAtomElements(mol:Molecule, atom:number):string[]\n\t\t{return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements));}\n\tpublic static queryAtomElementsNot(mol:Molecule, atom:number):string[]\n\t\t{return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot));}\n\tpublic static queryAtomRingSizes(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes));}\n\tpublic static queryAtomRingSizesNot(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot));}\n\tpublic static queryAtomRingBlock(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock));}\n\tpublic static queryAtomNumRings(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings));}\n\tpublic static queryAtomRingBonds(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds));}\n\tpublic static queryAtomAdjacency(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency));}\n\tpublic static queryAtomBondSums(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums));}\n\tpublic static queryAtomValences(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences));}\n\tpublic static queryAtomHydrogens(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens));}\n\tpublic static queryAtomIsotope(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes));}\n\tpublic static queryAtomSubFrags(mol:Molecule, atom:number):Molecule[]\n\t\t{return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags));}\n\tpublic static queryAtomSubFragsNot(mol:Molecule, atom:number):Molecule[]\n\t\t{return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot));}\n\n\t// fetching of specific query types from bonds, parsed out into the right datastructure\n\tpublic static queryBondRingSizes(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes));}\n\tpublic static queryBondRingSizesNot(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot));}\n\tpublic static queryBondRingBlock(mol:Molecule, bond:number):boolean\n\t\t{return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock));}\n\tpublic static queryBondNumRings(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings));}\n\tpublic static queryBondOrders(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders));}\n\n\t// setting of specific query types for atoms\n\tpublic static setQueryAtomCharges(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value));}\n\tpublic static setQueryAtomAromatic(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value));}\n\tpublic static setQueryAtomUnsaturated(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value));}\n\tpublic static setQueryAtomElements(mol:Molecule, atom:number, value:string[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value));}\n\tpublic static setQueryAtomElementsNot(mol:Molecule, atom:number, value:string[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value));}\n\tpublic static setQueryAtomRingSizes(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingSizesNot(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingBlock(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value));}\n\tpublic static setQueryAtomNumRings(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingBonds(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value));}\n\tpublic static setQueryAtomAdjacency(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value));}\n\tpublic static setQueryAtomBondSums(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value));}\n\tpublic static setQueryAtomValences(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value));}\n\tpublic static setQueryAtomHydrogens(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value));}\n\tpublic static setQueryAtomIsotope(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value));}\n\tpublic static setQueryAtomSubFrags(mol:Molecule, atom:number, value:Molecule[]):void\n\t\t{this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value));}\n\tpublic static setQueryAtomSubFragsNot(mol:Molecule, atom:number, value:Molecule[]):void\n\t\t{this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value));}\n\n\t// setting of specific query types for bonds\n\tpublic static setQueryBondRingSizes(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value));}\n\tpublic static setQueryBondRingSizesNot(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value));}\n\tpublic static setQueryBondRingBlock(mol:Molecule, bond:number, value:boolean):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value));}\n\tpublic static setQueryBondNumRings(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value));}\n\tpublic static setQueryBondOrders(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value));}\n\n\t// ------------------ private methods --------------------\n\n\t// conversion of molecule-encoded strings into appropriate datatypes\n\tprivate static parseIntegers(str:string):number[]\n\t{\n\t\tif (!str) return null;\n\t\tlet strlist = str.split(',');\n\t\tlet intlist:number[] = new Array(strlist.length);\n\t\tfor (let n = 0; n < strlist.length; n++) intlist[n] = parseInt(strlist[n]);\n\t\treturn intlist;\n\t}\n\tprivate static parseStrings(str:string):string[]\n\t{\n\t\tif (!str) return null;\n\t\treturn str.split(',');\n\t}\n\tprivate static parseBoolean(str:string):boolean\n\t{\n\t\treturn !str ? null : str == 'yes';\n\t}\n\tpublic static parseMolecules(list:string[]):Molecule[]\n\t{\n\t\tif (!list) return null;\n\t\tlet mols:Molecule[] = [];\n\t\tfor (let molstr of list)\n\t\t{\n\t\t\tlet mol = Molecule.fromString(molstr);\n\t\t\tif (MolUtil.notBlank(mol)) mols.push(mol);\n\t\t}\n\t\treturn mols;\n\t}\n\n\t// conversion of appropriate datatypes into molecule-encoded strings\n\tprivate static formatIntegers(list:number[]):string\n\t{\n\t\tif (Vec.isBlank(list)) return null;\n\t\tlet str = '';\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ',';\n\t\t\tstr += list[n];\n\t\t}\n\t\treturn str;\n\t}\n\tprivate static formatStrings(list:string[]):string\n\t{\n\t\tif (Vec.isBlank(list)) return null;\n\t\tlet str = '';\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ',';\n\t\t\tstr += list[n];\n\t\t}\n\t\treturn str;\n\t}\n\tprivate static formatBoolean(value:boolean):string\n\t{\n\t\treturn value ? 'yes' : 'no';\n\t}\n\tprivate static formatMolecules(mols:Molecule[]):string[]\n\t{\n\t\tif (Vec.isBlank(mols)) return null;\n\t\tlet list:string[] = [];\n\t\tfor (let mol of mols) if (MolUtil.notBlank(mol)) list.push(mol.toString());\n\t\treturn list;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {CoordUtil} from './CoordUtil';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {SketchUtil} from './SketchUtil';\nimport {BondArtifact} from './BondArtifact';\n\n/*\n\tMolUtil: static methods for calculating molecule properties.\n*/\n\nexport class MolUtil\n{\n\tpublic static isBlank(mol:Molecule):boolean\n\t{\n\t\t//return mol == null || mol.numAtoms == 0;\n\t\tif (mol == null) return true;\n\t\treturn mol.numAtoms == 0;\n\t}\n\tpublic static notBlank(mol:Molecule):boolean\n\t{\n\t\t//return mol != null || mol.numAtoms > 0;\n\t\tif (mol == null) return false;\n\t\treturn mol.numAtoms > 0;\n\t}\n\n\t// substitutes an empty molecule for null\n\tpublic static orBlank(mol:Molecule):Molecule {return mol == null ? new Molecule() : mol;}\n\n\t// conventions for special-atoms\n\tpublic static TEMPLATE_ATTACHMENT = 'X'; // use the label 'X' to denote attachments when defining templates\n\tpublic static ABBREV_ATTACHMENT = '*'; // within abbreviations, use '*' to denote the placeholder superimposition\n\n\t// returns true if there are any abbreviations\n\tpublic static hasAnyAbbrev(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n)) return true;\n\t\treturn false;\n\t}\n\n\t// returns true if the atom index is an inline abbreviation\n\tpublic static hasAbbrev(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra == null ? 0 : extra.length); n++) if (extra[n].startsWith('a')) return true;\n\t\treturn false;\n\t}\n\n\t// if the molecule has a template abbreviation encoded at the given atom, it will be parsed into a fragment instance and\n\t// returned; for the embedded fragment, atom#1 is considered to be the site of attachment\n\tpublic static getAbbrev(mol:Molecule, atom:number):Molecule\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a'))\n\t\t{\n\t\t\treturn Molecule.fromString(extra[n].substring(1));\n\t\t}\n\t\treturn null;\n\t}\n\n\t// sets the abbreviation-template for the given atom number, eliminating any existing template at that point\n\tpublic static setAbbrev(mol:Molecule, atom:number, frag:Molecule):void\n\t{\n\t\tlet attidx = 0;\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT)\n\t\t{\n\t\t\t//if (attidx > 0) throw 'Multiple attachment points indicated: invalid.';\n\t\t\tattidx = n;\n\t\t\tbreak;\n\t\t}\n\t\tif (attidx == 0) throw 'No attachment points indicated.';\n\t\tif (attidx >= 2)\n\t\t{\n\t\t\tfrag = frag.clone();\n\t\t\tfrag.swapAtoms(attidx, 1);\n\t\t}\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tif (adj.length > 1) throw 'Setting abbreviation for non-terminal atom.';\n\t\tif (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0)\n\t\t{\n\t\t\tlet b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n\t\t\tlet b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n\t\t\tmol.setBondOrder(b1, frag.bondOrder(b2));\n\t\t}\n\n\t\t// finally we're allowed to set it\n\t\tlet extra = mol.atomExtra(atom);\n\t\tlet idx = -1;\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a')) {idx = n; break;}\n\t\tif (idx < 0) idx = extra.push(null) - 1;\n\n\t\textra[idx] = 'a' + frag.toString();\n\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\n\t// any invalid abbreviations will be cleared out\n\tpublic static validateAbbrevs(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tif (mol.atomAdjCount(n) > 1) MolUtil.clearAbbrev(mol, n);\n\t\t\tif (mol.atomCharge(n) != 0) mol.setAtomCharge(n, 0);\n\t\t\tif (mol.atomUnpaired(n) != 0) mol.setAtomUnpaired(n, 0);\n\t\t\tif (mol.atomIsotope(n) != 0) mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n\t\t}\n\t}\n\n\t// converts a partitioned molecule into a molecule with a subsumed abbreviation; srcmask defines all the atoms which are NOT part\n\t// of the abbreviation; the resulting molecule will contain all of these, plus a new one that has been created to hold the\n\t// abbreviation; the molecule  must be partitioned so that there is exactly 1 source atom attached to all of the abbreviations\n\t// NOTE: returns null if the template creation is invalid\n\tpublic static convertToAbbrev(mol:Molecule, srcmask:boolean[], abbrevName:string):Molecule\n\t{\n\t\tlet molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n\t\treturn molidx ? molidx[0] : null;\n\t}\n\tpublic static convertToAbbrevIndex(mol:Molecule, srcmask:boolean[], abbrevName:string):[Molecule, number]\n\t{\n\t\tlet junction = 0;\n\t\tlet polymerExtra:string[] = null; // just in case the abbreviation has polymer information\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n\t\t\tif (srcmask[b1 - 1] && !srcmask[b2 - 1])\n\t\t\t{\n\t\t\t\tatom = b1;\n\t\t\t\tpolymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n\t\t\t}\n\t\t\telse if (!srcmask[b1 - 1] && srcmask[b2 - 1])\n\t\t\t{\n\t\t\t\tatom = b2;\n\t\t\t\tpolymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n\t\t\t}\n\n\t\t\tif (atom == 0) continue;\n\n\t\t\tif (junction > 0 && atom != junction) return [null, null];\n\t\t\tjunction = atom;\n\t\t}\n\t\tif (junction == 0) return [null, null];\n\n\t\t// refine the partition based on the junction, and derive reference indices\n\t\tlet na = mol.numAtoms, molidx = 0, fragidx = 0;\n\t\tlet maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tmaskmol[n] = srcmask[n];\n\t\t\tmaskfrag[n] = !srcmask[n] || n + 1 == junction;\n\t\t\tif (maskmol[n] && n + 1 <= junction) molidx++;\n\t\t\tif (maskfrag[n] && n + 1 <= junction) fragidx++;\n\t\t}\n\n\t\t// sometimes stereo info is preserved\n\t\tlet bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n\t\tfor (let a of mol.atomAdjList(junction)) if (!srcmask[a - 1])\n\t\t{\n\t\t\tif (nadj != 0) {bondType = Molecule.BONDTYPE_NORMAL; break;}\n\t\t\tlet b = mol.findBond(junction, a);\n\t\t\tif (mol.bondFrom(b) == junction) bondType = mol.bondType(b);\n\t\t\tnadj++;\n\t\t}\n\n\t\t// create and analyse the fragment\n\t\tlet frag = MolUtil.subgraphMask(mol, maskfrag);\n\t\tfrag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n\t\tfrag.setAtomCharge(fragidx, 0);\n\t\tfrag.setAtomUnpaired(fragidx, 0);\n\t\tfrag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomMapNum(n, 0);\n\t\tfrag.setAtomExtra(fragidx, []);\n\t\tfrag.setAtomTransient(fragidx, []);\n\t\tlet adj = frag.atomAdjList(fragidx);\n\t\tlet x = 0, y = 0, inv = 1.0 / adj.length;\n\t\tlet bondOrder = 1;\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tx += frag.atomX(adj[n]);\n\t\t\ty += frag.atomY(adj[n]);\n\t\t\tlet b = frag.findBond(fragidx, adj[n]);\n\t\t\tif (n == 0) bondOrder = frag.bondOrder(b);\n\t\t\telse if (bondOrder != frag.bondOrder(b)) bondOrder = 1;\n\t\t}\n\t\tx *= inv; y *= inv;\n\t\tif (fragidx > 1) frag.swapAtoms(fragidx, 1);\n\n\t\t// create the excised molecule, and add in the fragment\n\t\tlet newmol = MolUtil.subgraphMask(mol, maskmol);\n\t\tlet\tnewatom = newmol.addAtom(abbrevName, x, y);\n\t\tnewmol.addBond(molidx, newatom, bondOrder, bondType);\n\t\tMolUtil.setAbbrev(newmol, newatom, frag);\n\t\tif (polymerExtra != null) newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n\n\t\treturn [newmol, newatom];\n\t}\n\n\t// hunts through any abbreviations, and expands them out to form actual atoms; the resulting representation is fair game for things\n\t// like MF/MW calculations, or any other pure-atom property calculation; if alignCoords is true, it will line up the positions of\n\t// the new atoms; if false, the algorithm will burn up less cycles; note that abbreviations-within-abbreviations are handled by\n\t// repeated iteration until there are none left\n\tpublic static expandAbbrevs(mol:Molecule, alignCoords:boolean):void\n\t{\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t\t{\n\t\t\t\tif (MolUtil.expandOneAbbrev(mol, n, alignCoords)) anything = true;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// very common convenience function: if has abbreviations, clone and expand; otherwise return self\n\tpublic static expandedAbbrevs(mol:Molecule):Molecule\n\t{\n\t\tif (!this.hasAnyAbbrev(mol)) return mol;\n\t\tmol = mol.clone();\n\t\tthis.expandAbbrevs(mol, true);\n\t\treturn mol;\n\t}\n\n\t// expands the abbreviation for a single atom; the atom itself is deleted, and the expanded content is added to the end of the molecule; if for some\n\t// reason the abbreviation is invalid, will clear the abbreviation instead\n\t// return value: if something happened, mask of true = part of the expansion (including the new placeholder atom); if nothing happened, returns null\n\tpublic static expandOneAbbrev(mol:Molecule, atom:number, alignCoords:boolean):boolean[]\n\t{\n\t\tlet frag = MolUtil.getAbbrev(mol, atom);\n\t\tif (frag == null) return null;\n\t\tif (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0)\n\t\t{\n\t\t\tMolUtil.clearAbbrev(mol, atom);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet m = mol.atomMapNum(atom);\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomMapNum(n, 0);\n\t\tif (m > 0) for (let n of frag.atomAdjList(1)) frag.setAtomMapNum(n, m);\n\n\t\treturn MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n\t}\n\tpublic static expandOneAbbrevFrag(mol:Molecule, atom:number, frag:Molecule, alignCoords:boolean):boolean[]\n\t{\n\t\tlet polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n\n\t\tlet nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n\t\tlet connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n\t\tif (connBond > 0)\n\t\t{\n\t\t\tconnType = mol.bondType(connBond);\n\t\t\tif (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED)) connType = Molecule.BONDTYPE_NORMAL;\n\t\t}\n\n\t\tif (alignCoords)\n\t\t{\n\t\t\tlet vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n\t\t\tlet adj = frag.atomAdjList(1);\n\t\t\tlet vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tvx2 += frag.atomX(adj[n]) - frag.atomX(1);\n\t\t\t\tvy2 += frag.atomY(adj[n]) - frag.atomY(1);\n\t\t\t}\n\t\t\tvx2 *= inv;\n\t\t\tvy2 *= inv;\n\t\t\tlet th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n\t\t\tCoordUtil.rotateMolecule(frag, th1 - th2);\n\t\t\tCoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n\t\t}\n\n\t\tif (polymerExtra != null)\n\t\t{\n\t\t\tfor (let n = 1; n <= frag.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet extra = frag.atomExtra(n);\n\t\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (polymerExtra.indexOf(extra[i]) >= 0) extra.splice(i, 1);\n\t\t\t\tfrag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n\t\t\t}\n\t\t}\n\n\t\tlet join = mol.numAtoms + 1;\n\t\tmol.append(frag);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondFrom(n) == join)\n\t\t\t{\n\t\t\t\tmol.setBondFrom(n, nbr);\n\t\t\t\tmol.setBondType(n, connType);\n\t\t\t}\n\t\t\telse if (mol.bondTo(n) == join)\n\t\t\t{\n\t\t\t\tmol.setBondFromTo(n, nbr, mol.bondFrom(n));\n\t\t\t\tmol.setBondType(n, connType);\n\t\t\t}\n\t\t}\n\n\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let n = mask.length - frag.numAtoms; n < mask.length; n++) mask[n] = true;\n\t\tmol.deleteAtomAndBonds(join);\n\t\tmol.deleteAtomAndBonds(atom);\n\t\tmask.splice(join - 1, 1);\n\t\tmask.splice(atom - 1, 1);\n\t\treturn mask;\n\t}\n\n\t// removes the abbreviation from a molecule, if there is one; also, the element symbol will be set to \"C\" when there is\n\t// any clearing to be done\n\tpublic static clearAbbrev(mol:Molecule, atom:number):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a'))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmol.setAtomExtra(atom, extra);\n\t\t\tmol.setAtomElement(atom, 'C');\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// equivalent to the Molecule method of same name, except trashes the abbreviation of the \"element\" symbol has changed\n\tpublic static setAtomElement(mol:Molecule, atom:number, el:string):void\n\t{\n\t\tif (mol.atomElement(atom) == el) return;\n\t\tthis.clearAbbrev(mol, atom);\n\t\tmol.setAtomElement(atom, el);\n\t}\n\n\t// equivalent to the Molecule method of same name, except that if either of the atoms are about to exceed divalence, its\n\t// abbreviation gets zapped; also, if the bond was already there, zaps the old one\n\tpublic static addBond(mol:Molecule, bfr:number, bto:number, order:number, type?:number):number\n\t{\n\t\tif (type == null) type = Molecule.BONDTYPE_NORMAL;\n\t\tif (mol.atomAdjCount(bfr) >= 1) this.clearAbbrev(mol, bfr);\n\t\tif (mol.atomAdjCount(bto) >= 1) this.clearAbbrev(mol, bto);\n\t\tlet b = mol.findBond(bfr, bto);\n\t\tif (b > 0) mol.deleteBond(b);\n\t\treturn mol.addBond(bfr, bto, order, type);\n\t}\n\n\t// returns a molecule which is smaller than the current one, according to the mask (which must be of size #atoms); boundary cases\n\t// are a null molecule or cloned copy\n\tpublic static subgraphMask(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tlet invidx:number[] = [];\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tif (mask[n]) invidx.push(++sum); else invidx.push(0);\n\t\t}\n\t\tif (sum == 0) return new Molecule();\n\t\tif (sum == mol.numAtoms) return mol.clone();\n\n\t\tlet frag = new Molecule();\n\t\tfrag.keepTransient = true;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n\t\t\tfrag.setAtomIsotope(num, mol.atomIsotope(n));\n\t\t\tfrag.setAtomHExplicit(num, mol.atomHExplicit(n));\n\t\t\tfrag.setAtomMapNum(num, mol.atomMapNum(n));\n\t\t\tfrag.setAtomExtra(num, mol.atomExtra(n));\n\t\t\tfrag.setAtomTransient(num, mol.atomTransient(n));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n\t\t\tif (bfr > 0 && bto > 0)\n\t\t\t{\n\t\t\t\tlet num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n\t\t\t\tfrag.setBondExtra(num, mol.bondExtra(n));\n\t\t\t\tfrag.setBondTransient(num, mol.bondTransient(n));\n\t\t\t}\n\t\t}\n\n\t\tfrag.keepTransient = mol.keepTransient;\n\t\treturn frag;\n\t}\n\n\t// given a list of indices, constructs a new molecule which has the atoms in that order; the construction of idx[n] is such\n\t// that the new atom at position {n+1} will be the atom previously located at idx[n]; for example, a molecule containing the\n\t// atoms [C,O,N,H], reordered by indices of [3,2,4,1], will produce a new molecule with atoms [N,O,H,C]; the bonds will also\n\t// be correctly remapped; idx.length must be equal to or less than the number of atoms; each index must be unique and\n\t// in the range {1..#atoms}, otherwise the result is undefined\n\tpublic static subgraphIndex(mol:Molecule, idx:number[]):Molecule\n\t{\n\t\tlet invidx = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = 0; n < invidx.length; n++) invidx[n] = 0;\n\t\tfor (let n = 0; n < idx.length; n++) invidx[idx[n] - 1] = n + 1;\n\n\t\tlet frag = new Molecule();\n\t\tfrag.keepTransient = true;\n\n\t\tfor (let n = 0; n < idx.length; n++)\n\t\t{\n\t\t\tlet num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n\t\t\tfrag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n\t\t\tfrag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n\t\t\tfrag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n\t\t\tfrag.setAtomExtra(num, mol.atomExtra(idx[n]));\n\t\t\tfrag.setAtomTransient(num, mol.atomTransient(idx[n]));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n\t\t\tif (bfr > 0 && bto > 0)\n\t\t\t{\n\t\t\t\tlet num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n\t\t\t\tfrag.setBondExtra(num, mol.bondExtra(n));\n\t\t\t\tfrag.setBondTransient(num, mol.bondTransient(n));\n\t\t\t}\n\t\t}\n\n\t\tfrag.keepTransient = mol.keepTransient;\n\t\treturn frag;\n\t}\n\n\t// a specialised version of mask subgraph: any atoms which are not in the mask, but are bonded to atoms which are in the\n\t// mask, are converted to the element \"X\" and included in the result; this makes them potentially more useful as template fragments\n\tpublic static subgraphWithAttachments(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tlet xmask = mask.slice(0);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (mask[bfr] && !mask[bto]) xmask[bto] = true;\n\t\t\telse if (mask[bto] && !mask[bfr]) xmask[bfr] = true;\n\t\t}\n\t\tlet xmol = mol.clone();\n\t\tfor (let n = 1; n <= xmol.numAtoms; n++) if (xmask[n - 1] && !mask[n - 1])\n\t\t{\n\t\t\txmol.setAtomElement(n, 'X');\n\t\t\txmol.setAtomCharge(n, 0);\n\t\t\txmol.setAtomUnpaired(n, 0);\n\t\t\txmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n\t\t\txmol.setAtomExtra(n, []);\n\t\t}\n\t\treturn MolUtil.subgraphMask(xmol, xmask);\n\t}\n\n\t// appends the fragment to the molecule, and makes a token effort to arrange the atom positions so they are along the X-axis\n\tpublic static append(mol:Molecule, frag:Molecule):void\n\t{\n\t\tif (BondArtifact.hasAnyArtifacts(mol) && BondArtifact.hasAnyArtifacts(frag))\n\t\t{\n\t\t\tfrag = frag.clone();\n\t\t\tlet afact1 = new BondArtifact(mol), afact2 = new BondArtifact(frag);\n\t\t\tafact2.harmoniseNumbering(afact1);\n\t\t\tafact2.rewriteMolecule();\n\t\t}\n\n\t\tlet boxm = mol.boundary(), boxf = frag.boundary();\n\t\tlet dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n\t\tlet dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n\t\tlet top = mol.numAtoms;\n\t\tmol.append(frag);\n\t\tfor (let n = top + 1; n <= mol.numAtoms; n++) mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n\t}\n\n\t/*\n\t// works similarly to reorderAtoms(..) above, except operates on the order of the bond list; the atoms are unaffected\n\tpublic Molecule reorderedBonds(Molecule mol, int[] idx)\n\t{\n\t\tMolecule newmol = new Molecule();\n\t\tfor (int n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tint num = newmol.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n\t\t\tnewmol.setAtomHExplicit(num, mol.atomHExplicit(n));\n\t\t\tnewmol.setAtomMapNum(num, mol.atomMapNum(n));\n\t\t\tnewmol.setAtomExtra(num, mol.atomExtra(n));\n\t\t}\n\t\tfor (int n = 0; n < idx.length; n++)\n\t\t{\n\t\t\tint num = newmol.addBond(mol.bondFrom(idx[n]), mol.bondTo(idx[n]), mol.bondOrder(idx[n]), mol.bondType(idx[n]));\n\t\t\tnewmol.setBondExtra(num, mol.bondExtra(idx[n]));\n\t\t}\n\n\t\treturn newmol;\n\t}*/\n\n\t// returns a new molecule which has the indicated atom indices removed; note that the index list does not need to be ordered, and\n\t// duplicates are OK\n\tpublic static deleteAtoms(mol:Molecule, idx:number[]):Molecule\n\t{\n\t\tlet mask = Vec.booleanArray(true, mol.numAtoms);\n\t\tfor (let n = 0; n < idx.length; n++) mask[idx[n] - 1] = false;\n\t\treturn MolUtil.subgraphMask(mol, mask);\n\t}\n\n\t// produces a list of connected components for the molecule; the immediate size of the return value is the number of components;\n\t// each of the sub arrays is a list of indices for that component; the return value has 1-based indices\n\tpublic static componentList(mol:Molecule):number[][]\n\t{\n\t\tlet sz = mol.numAtoms;\n\t\tif (sz == 0) return null;\n\t\tlet g = Graph.fromMolecule(mol);\n\n\t\tlet groups = g.calculateComponentGroups();\n\t\tfor (let grp of groups) Vec.addTo(grp, 1); // 1-based rather than zero\n\t\treturn groups;\n\t}\n\n\t// obtain groups of atom indices, each of which represents a \"side\" of atoms which are hanging \"off\" a central atom; if the central\n\t// atom has N neighbors and is not in a ring, then there will be N groups of atoms returned; if the atom is part of a ring block,\n\t// then the number of sides will be less than the number of neighbours; the returned arrays are 1-based\n\tpublic static getAtomSides(mol:Molecule, atom:number):number[][]\n\t{\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tlet cc = g.calculateComponents();\n\t\tlet mask:boolean[] = [];\n\t\tfor (let n = 0; n < cc.length; n++) mask.push(cc[n] == cc[atom - 1]);\n\t\tmask[atom - 1] = false;\n\n\t\tlet oldmap = Vec.maskIdx(mask);\n\t\tg.keepNodesMask(mask);\n\t\tcc = g.calculateComponents();\n\t\tlet ccmax = Vec.max(cc);\n\n\t\tlet grps:number[][] = [];\n\t\tfor (let n = 0; n < ccmax; n++) grps.push([atom]);\n\t\tfor (let n = 0; n < cc.length; n++) grps[cc[n] - 1].push(oldmap[n] + 1);\n\n\t\treturn grps;\n\t}\n\n\t// returns the groups of atoms which are on the \"bond from\" and \"bond to\" sides of the indicated bond, if bond is not a ring:\n\t//   A   B\n\t//    \\_/\t\t\t2 groups returned: (A,A) and (B,B)\n\t//    / \\\t\t\tthe number of groups returned is guaranteed to be 0, 1 or 2\n\t//   A   B\n\t// if the bond is in a ring, then the groups are composed by disconnecting the bond and returning each remaining component, chopped\n\t// up according to ring block membership\n\tpublic static getBondSides(mol:Molecule, bond:number):number[][]\n\t{\n\t\tlet bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n\t\tlet inRing = mol.bondInRing(bond); // !! mol.atomRingBlock(bf)>0 && mol.atomRingBlock(bf)==mol.atomRingBlock(bt);\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tlet cc = g.calculateComponents();\n\t\tlet mask:boolean[] = [];\n\t\tfor (let n = 0; n < cc.length; n++) mask.push(cc[n] == cc[bf - 1]);\n\t\tif (!inRing) g.removeEdge(bf - 1, bt - 1);\n\t\telse {mask[bf - 1] = false; mask[bt - 1] = false;}\n\n\t\tlet oldmap = Vec.maskIdx(mask);\n\t\tg.keepNodesMask(mask);\n\t\tcc = g.calculateComponents();\n\t\tlet ccmax = Vec.max(cc);\n\n\t\tlet grps:number[][] = [];\n\t\tfor (let n = 0; n < ccmax; n++)\n\t\t{\n\t\t\tgrps[n] = [];\n\t\t\tif (inRing) {grps[n].push(bf); grps[n].push(bt);}\n\t\t}\n\t\tfor (let n = 0; n < cc.length; n++) grps[cc[n] - 1].push(oldmap[n] + 1);\n\n\t\treturn grps;\n\t}\n\n\t// returning flat arrays of atom properties: doing this before a geometry operation can boost performance considerably\n\tpublic static arrayAtomX(mol:Molecule):number[]\n\t{\n\t\tlet x = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = x.length - 1; n >= 0; n--) x[n] = mol.atomX(n + 1);\n\t\treturn x;\n\t}\n\tpublic static arrayAtomY(mol:Molecule):number[]\n\t{\n\t\tlet y = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = y.length - 1; n >= 0; n--) y[n] = mol.atomY(n + 1);\n\t\treturn y;\n\t}\n\tpublic static arrayAtomMapNum(mol:Molecule):number[]\n\t{\n\t\tlet mapnum = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = mapnum.length - 1; n >= 0; n--) mapnum[n] = mol.atomMapNum(n + 1);\n\t\treturn mapnum;\n\t}\n\n\t// convenience, remove all mappings numbers\n\tpublic static removeMappings(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) mol.setAtomMapNum(n, 0);\n\t}\n\tpublic static withoutMappings(mol:Molecule):Molecule\n\t{\n\t\tlet dupped = false;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) != 0)\n\t\t{\n\t\t\tif (!dupped) {mol = mol.clone(); dupped = true;}\n\t\t\tmol.setAtomMapNum(n, 0);\n\t\t}\n\t\treturn mol;\n\t}\n\n\t// calculates the molecular formula\n\tpublic static molecularFormula(mol:Molecule, punctuation?:boolean | string[]):string\n\t{\n\t\tlet puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n\t\tif (punctuation == true) [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n\t\telse if (punctuation instanceof Array)\n\t\t{\n\t\t\tpuncEnter = punctuation[0];\n\t\t\tpuncExit = punctuation[1];\n\t\t\tpuncEnterSuper = punctuation[2];\n\t\t\tpuncExitSuper = punctuation[3];\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tMolUtil.expandAbbrevs(mol, false);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet countC = 0, countH = 0;\n\t\tlet elements = Vec.stringArray('', mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tcountH += mol.atomHydrogens(n);\n\t\t\tlet el = mol.atomElement(n);\n\n\t\t\t// this is hacky, but at least isotopes are separated out; they should ideally be sorted just after their non-isotopes, in\n\t\t\t// numerical order\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n\n\t\t\tif (el == 'C') countC++;\n\t\t\telse if (el == 'H') countH++;\n\t\t\telse elements[n - 1] = el;\n\t\t}\n\n\t\telements.sort();\n\n\t\tlet formula = '';\n\n\t\tif (countC > 0) formula += 'C';\n\t\tif (countC > 1)\n\t\t{\n\t\t\tif (punctuation) formula += puncEnter;\n\t\t\tformula += countC;\n\t\t\tif (punctuation) formula += puncExit;\n\t\t}\n\t\tif (countH > 0) formula += 'H';\n\t\tif (countH > 1)\n\t\t{\n\t\t\tif (punctuation) formula += puncEnter;\n\t\t\tformula += countH;\n\t\t\tif (punctuation) formula += puncExit;\n\t\t}\n\t\tfor (let n = 0; n < elements.length; n++) if (elements[n].length > 0)\n\t\t{\n\t\t\tlet count = 1;\n\t\t\tfor (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++) count++;\n\t\t\tformula += elements[n];\n\t\t\tif (count > 1)\n\t\t\t{\n\t\t\t\tif (punctuation) formula += puncEnter;\n\t\t\t\tformula += count;\n\t\t\t\tif (punctuation) formula += puncExit;\n\t\t\t}\n\t\t}\n\n\t\treturn formula.toString();\n\t}\n\n\t// calculates the molecular weight, using natural abundance as the default, or specific isotope otherwise\n\tpublic static molecularWeight(mol:Molecule):number\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tMolUtil.expandAbbrevs(mol, false);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet mw = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tmw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n\n\t\t\tlet iso = mol.atomIsotope(n);\n\t\t\tif (iso != Molecule.ISOTOPE_NATURAL) {mw += iso; continue;}\n\n\t\t\tlet an = Molecule.elementAtomicNumber(mol.atomElement(n));\n\t\t\tif (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length) mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n\t\t}\n\n\t\treturn mw;\n\t}\n\n\t// looks for all cases where a bond {a1,a2} has duplicate(s), either of the {a1,a2} or {a2,a1} flavours; when this happens,\n\t// the duplicates are removed; if one of the bond violates maximum Lewis octet rule for (C/N/O), it gets zapped;\n\t// otherwise, keeps the bond with the highest order (second priority); or the most exotic type (third priority); or\n\t// failing that, first in first served\n\tpublic static removeDuplicateBonds(mol:Molecule):void\n\t{\n\t\tlet bpri:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n\t\t\tbpri.push(p);\n\t\t}\n\t\tlet bidx = Vec.idxSort(bpri);\n\n\t\tlet keepmask = Vec.booleanArray(false, bidx.length);\n\t\tlet p = 0;\n\t\twhile (p < bidx.length)\n\t\t{\n\t\t\tlet sz = 1;\n\t\t\twhile (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]]) sz++;\n\n\t\t\tlet best = p;\n\t\t\tfor (let n = p + 1; n < p + sz; n++) // (does nothing if not degenerate)\n\t\t\t{\n\t\t\t\tlet b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n\n\t\t\t\t// see if just one of the bonds assures Lewis violation on C/N/O\n\t\t\t\tlet a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n\t\t\t\tlet el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n\t\t\t\tlet limit1 = 0, limit2 = 0;\n\t\t\t\tif (el1 == 'C' || el1 == 'N') limit1 = 4;\n\t\t\t\telse if (el1 == 'O') limit1 = 3;\n\t\t\t\tif (el2 == 'C' || el2 == 'N') limit2 = 4;\n\t\t\t\telse if (el2 == 'O') limit2 = 3;\n\n\t\t\t\tif (limit1 > 0 || limit2 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n\t\t\t\t\tfor (let i = 1; i <= mol.numBonds; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1)) boB1A1 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2)) boB1A2 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1)) boB2A1 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2)) boB2A2 += mol.bondOrder(i);\n\t\t\t\t\t}\n\t\t\t\t\tlet bad1 = 0, bad2 = 0;\n\t\t\t\t\tif (limit1 > 0 && boB1A1 > limit1) bad1++;\n\t\t\t\t\tif (limit2 > 0 && boB1A2 > limit2) bad1++;\n\t\t\t\t\tif (limit1 > 0 && boB2A1 > limit1) bad2++;\n\t\t\t\t\tif (limit2 > 0 && boB2A2 > limit2) bad2++;\n\n\t\t\t\t\tif (bad1 < bad2) continue; // stick with current best\n\t\t\t\t\tif (bad1 > bad2) {best = n; continue;} // switch to new best\n\t\t\t\t}\n\n\t\t\t\t// otherwise pick the most interesting\n\t\t\t\tlet exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n\t\t\t\texotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n\t\t\t\texotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n\n\t\t\t\tif (exotic2 > exotic1) best = n;\n\t\t\t}\n\t\t\tkeepmask[bidx[best]] = true;\n\n\t\t\tp += sz;\n\t\t}\n\t\tfor (let n = mol.numBonds; n >= 1; n--)\n\t\t\tif (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n)) mol.deleteBond(n);\n\t}\n\n\t// calculates a weight for each atom relative to a starting atom, N; this is useful when deciding which atoms to move around,\n\t// i.e. those with higher weight should probably stay where they are; the algorithm is Morgan-like, in that atom values are\n\t// sequentially added to their neighbours, with the exception of atom N, which is a separating point\n\tpublic static calculateWalkWeight(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n\t\tfor (let n = 0; n < cc.length; n++) if (cc[n] == cc[atom - 1]) ccsz++;\n\n\t\tlet w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n\t\tw[atom - 1] = 0;\n\t\tfor (; ccsz > 0; ccsz--)\n\t\t{\n\t\t\tfor (let n = 0; n < mol.numAtoms; n++) wn[n] = w[n];\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n\t\t\t\tw[a1] += wn[a2] * 0.1;\n\t\t\t\tw[a2] += wn[a1] * 0.1;\n\t\t\t}\n\t\t\tw[atom - 1] = 0;\n\t\t}\n\t\treturn w;\n\t}\n\n/*\n\t// returns the electron count of an atom: this is the sum of natural electron count, neighbouring bonds,\n\t// explicit hydrogens, unpaired electrons and -charge; hydrogens inferred by the valence are included\n\t// only if the countImplicit parameter is true;\n\t// the return value can be used to calculate the number of remaining slots for adding new substituents\n\tpublic static int atomElectronCount(Molecule mol, int N, boolean countImplicit)\n\t{\n\t\tint atno = mol.atomicNumber(N), blk = Chemistry.ELEMENT_BLOCKS[atno], grp = Chemistry.ELEMENT_GROUPS[atno];\n\t\tint val = blk == 0 ? 0 : blk == 1 ? grp : blk == 2 ? grp - 10 : grp;\n\t\tif (countImplicit) val += mol.atomHydrogens(N);\n\t\telse if (mol.atomHExplicit(N) != Molecule.HEXPLICIT_UNKNOWN) val += mol.atomHExplicit(N);\n\t\tval += mol.atomUnpaired(N) - mol.atomCharge(N);\n\t\tint[] adjb = mol.atomAdjBonds(N);\n\t\tfor (int n = 0; n < adjb.length; n++) val += mol.bondOrder(adjb[n]);\n\t\treturn val;\n\t}\n\n\t// for a given atomic number, returns the valence limit, considering S/P/D electrons, i.e. cuts out\n\t// at 18 electrons, even for f-block metals\n\tpublic static int atomMaxValenceSPD(int atno)\n\t{\n\t\tint blk = Chemistry.ELEMENT_BLOCKS[atno];\n\t\t//                             ?, s, p,  d, f\n\t\tfinal int[] BLKVAL = new int[]{2, 2, 8, 18, 18};\n\t\treturn BLKVAL[blk];\n\t}\n\n\t// if the molecule has any bonds that are not of order 1, 2 or 3 then a new molecule will be constructed\n\t// which has only these bond types; if no interesting bonds, returns null; a returned molecule is\n\t// more suitable to writing to a format such as MDL MOL; zero bonds are typically converted into\n\t// double bonds or charge-separated single bonds\n\tpublic static Molecule reduceBondTypes(Molecule mol)\n\t{\n\t\tfinal int nb = mol.numBonds;\n\t\tboolean any = false;\n\t\tfor (int n = 1; n <= nb; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) {any = true; break;}\n\t\tif (!any) return null;\n\n\t\tmol = mol.clone();\n\n\t\tfor (int n = 1; n <= nb; n++)\n\t\t{\n\t\t\tint bo = mol.bondOrder(n);\n\t\t\tif (bo == 0)\n\t\t\t{\n\t\t\t\tint bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\n\t\t\t\t// non-elements do not get to charge separate\n\t\t\t\tint atno1 = mol.atomicNumber(bfr), atno2 = mol.atomicNumber(bto);\n\t\t\t\tif (atno1 == 0 || atno2 == 0)\n\t\t\t\t{\n\t\t\t\t\tmol.setBondOrder(n, 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tint val1 = atomElectronCount(mol, bfr, true), val2 = atomElectronCount(mol, bto, true);\n\t\t\t\tint max1 = atomMaxValenceSPD(atno1), max2 = atomMaxValenceSPD(atno2);\n\t\t\t\tboolean spc1 = val1 <= max1 - 2, spc2 = val2 <= max2 - 2;\n\t\t\t\tif (spc1 && spc2)\n\t\t\t\t{\n\t\t\t\t\t// sufficient valence exists, so call it a double bond\n\t\t\t\t\tmol.setBondOrder(n, 2);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// charge separate, as long as the atom receiving the negative charge has room for it\n\t\t\t\tif (spc1)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomCharge(bfr, mol.atomCharge(bfr) - 1);\n\t\t\t\t\tmol.setAtomCharge(bto, mol.atomCharge(bto) + 1);\n\t\t\t\t}\n\t\t\t\tif (spc2)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomCharge(bfr, mol.atomCharge(bfr) + 1);\n\t\t\t\t\tmol.setAtomCharge(bto, mol.atomCharge(bto) - 1);\n\t\t\t\t}\n\n\t\t\t\tmol.setBondOrder(n, 1);\n\t\t\t}\n\t\t\telse if (bo > 3) mol.setBondOrder(n, 3);\n\t\t\telse mol.setBondOrder(n, 1);\n\t\t}\n\n\t\treturn mol;\n\t}*/\n\n\t// return the total number of attached hydrogens: implicit/explicit + any actual atoms connected to it\n\tpublic static totalHydrogens(mol:Molecule, atom:number):number\n\t{\n\t\tlet hc = mol.atomHydrogens(atom);\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tfor (let n = 0; n < adj.length; n++) if (mol.atomElement(adj[n]) == 'H') hc++;\n\t\treturn hc;\n\t}\n\n\t// operates on the provided molecule, by removing any \"boring\" hydrogen atoms; boring is defined as:\n\t//\t\t- bonded to an atom that auto-calculates hydrogens and is set to do so\n\t//\t\t- one single non-stereo bond to a non-hydrogen atom\n\t//      - no charge or unpaired electrons or isotope information\n\t//\t\t- no extension fields\n\t// the adjacent heavy atom has its explicit hydrogen count incremented, unless it is set to auto _and_ after removing\n\t// the hydrogen atom, the calculated value is 1\n\t// note: the 'force' parameter can be used to make it just chop everything\n\tpublic static stripHydrogens(mol:Molecule, force:boolean = false):void\n\t{\n\t\tfor (let n = mol.numAtoms; n >= 1; n--)\n\t\t\tif ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n)) mol.deleteAtomAndBonds(n);\n\t}\n\n\t// returns true if a given atom is a hydrogen atom with nothing unusual going on, i.e. fair game for deletion\n\tpublic static boringHydrogen(mol:Molecule, atom:number):boolean\n\t{\n\t\tif (mol.atomElement(atom) != 'H') return false;\n\n\t\tif (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0) return false;\n\t\tif (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL) return false;\n\t\tif (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom))) return false;\n\t\tif (mol.atomAdjCount(atom) != 1) return false;\n\n\t\tlet other = mol.atomAdjList(atom)[0];\n\t\tif (mol.atomElement(other) == 'H') return false;\n\t\tlet bond = mol.atomAdjBonds(atom)[0];\n\t\tif (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL) return false;\n\t\tif (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN) return false;\n\t\tif (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0) return false;\n\n\t\treturn true;\n\t}\n\n\t// looks through each atom's hydrogen count, and converts the number into actual hydrogen atoms, which are added\n\t// to the end of the atom list in the order encountered; returns the number of new atoms appended\n\t//\n\t// if the 'position' parameter is false, then hydrogens are simply added at their parents position (computationally\n\t// cheap); if true, a reasonable sketch layout method is used\n\tpublic static createHydrogens(mol:Molecule, position?:boolean):number\n\t{\n\t\tif (position == null) position = false;\n\n\t\tlet na = mol.numAtoms;\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet hc = mol.atomHydrogens(n);\n\t\t\tif (hc == 0) continue;\n\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(n, 0);\n\n\t\t\tif (!position)\n\t\t\t{\n\t\t\t\tfor (; hc > 0; hc--)\n\t\t\t\t{\n\t\t\t\t\tlet a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n\t\t\t\t\tmol.addBond(n, a, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n\t\t}\n\t\treturn mol.numAtoms - na;\n\t}\n\n\t// returns atom position as a 3D vector\n\tpublic static atomVec3(mol:Molecule, atom:number):number[]\n\t{\n\t\tif (mol.is3D())\n\t\t\treturn [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n\t\telse\n\t\t\treturn [mol.atomX(atom), mol.atomY(atom), 0];\n\t}\n\n\t// works out the oxidation state of a given atom; if it's a common main group with an ordinary valence, returns null to denote\n\t// that it's not worth mentioning; oxidation state is subject/has a grey area, e.g. double bonds from metals to most atoms are\n\t// counted as zero, but not for electronegative chalcogens\n\tpublic static atomOxidationState(mol:Molecule, atom:number):number\n\t{\n\t\tif (mol.atomAdjCount(atom) == 0) return null; // just not interesting if it's isolated\n\t\tif (this.hasAbbrev(mol, atom)) return null;\n\n\t\tlet atno = mol.atomicNumber(atom);\n\t\tif (atno == 0) return null;\n\t\tlet nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n\t\tlet oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t{\n\t\t\tlet bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n\t\t\tlet chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n\t\t\tif (nonMetal || chalco) oxstate += bo; else oxstate += bo % 2;\n\t\t}\n\n\t\tif (atno == Chemistry.ELEMENT_H && oxstate == 1) return null;\n\t\tif (atno == Chemistry.ELEMENT_B && oxstate == 3) return null;\n\t\tif (atno == Chemistry.ELEMENT_C && oxstate == 4) return null;\n\t\tif (atno == Chemistry.ELEMENT_N && oxstate == 3) return null;\n\t\tif (atno == Chemistry.ELEMENT_O && oxstate == 2) return null;\n\t\tif (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6)) return null;\n\t\tif (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5)) return null;\n\t\tif ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n\t\t\tatno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1) return null;\n\n\t\treturn oxstate;\n\t}\n\tpublic static oxidationStateText(oxstate:number):string\n\t{\n\t\tif (oxstate == 0) return '0';\n\t\tlet str = oxstate < 0 ? '-' : '';\n\t\tlet absox = Math.abs(oxstate);\n\t\tif (absox == 1) str += 'I';\n\t\telse if (absox == 2) str += 'II';\n\t\telse if (absox == 3) str += 'III';\n\t\telse if (absox == 4) str += 'IV';\n\t\telse if (absox == 5) str += 'V';\n\t\telse if (absox == 6) str += 'VI';\n\t\telse if (absox == 7) str += 'VII';\n\t\telse if (absox == 8) str += 'VIII';\n\t\telse if (absox == 9) str += 'IX';\n\t\telse if (absox == 10) str += 'X';\n\t\telse if (absox == 11) str += 'XI';\n\t\telse if (absox == 12) str += 'XII';\n\t\telse str = (oxstate > 0 ? '+' : '') + oxstate;\n\t\treturn str;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tLow level utility functions for the manipulation of molecular coordinates. These functions are fairly\n\tutilitarian, and don't have a lot of chemical logic encoded within them.\n\n\tDistinguished from SketchUtil in that these methods do not make chemistry-based \"value judgments\", they just\n\tstick to the numbers and do what they're told.\n*/\n\nexport class CoordUtil\n{\n\tpublic static OVERLAP_THRESHOLD = 0.2;// atoms closer than this are \"overlapping\" (i.e. this is bad)\n\tpublic static OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\n\n\t// goes hunting for an atom close to the specified position; returns 0 if none\n\tpublic static atomAtPoint(mol:Molecule, x:number, y:number, tolerance?:number):number\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.OVERLAP_THRESHOLD;\n\t\tconst tolsq = tolerance * tolerance;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq) return n;\n\t\treturn 0;\n\t}\n\n\t// returns true of the two molecules are \"the same sketch\"; this means that for every atom in mol1, there is an atom in\n\t// mol2 at the same absolute (x,y) coordinate, with the exact same properties, and an equivalent bonding scheme; so basically\n\t// the atom and bond ordering can be different, but not much else\n\n\tprivate static DEFAULT_EQUIV_TOLERANCE = 0.2;\n\n\tpublic static sketchEquivalent(mol1:Molecule, mol2:Molecule, tolerance?:number):boolean\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n\n\t\tconst na = mol1.numAtoms, nb = mol1.numBonds;\n\t\tif (na != mol2.numAtoms || nb != mol2.numBonds) return false;\n\n\t\tconst tolsq = tolerance * tolerance;\n\n\t\t// an early-out scheme: if the min/max positions are different, we can bug out straight away; doesn't help when they've been\n\t\t// modified in the middle of the drawing, but it's a big gain\n\t\tlet box1 = mol1.boundary(), box2 = mol2.boundary();\n\t\tif (Math.abs(box1.minX() - box2.minX()) > tolerance) return false;\n\t\tif (Math.abs(box1.minY() - box2.minY()) > tolerance) return false;\n\t\tif (Math.abs(box1.maxX() - box2.maxX()) > tolerance) return false;\n\t\tif (Math.abs(box1.maxY() - box2.maxY()) > tolerance) return false;\n\n\t\tlet mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n\t\tlet mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n\n\t\t// find an atom mapping scheme based on proximity; any mapping failure results in early termination\n\t\t// NOTE: this is O(N^2); could be linearised by sorting by major/minor axis\n\t\tlet map = Vec.numberArray(0, na);\n\t\tlet mask = Vec.booleanArray(false, na);\n\n\t\tfor (let i = 0; i < na; i++)\n\t\t{\n\t\t\t// find the closest matching atom; start with a special trick: frequently the corresponding atom is at exactly the\n\t\t\t// same index (because of the types of operations which precede this method call); if it is real close, then just go with it\n\t\t\tlet j = -1;\n\t\t\tif (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq) j = i;\n\n\t\t\t// if that didn't work, then scan through the unmatched possibilities\n\t\t\tif (j < 0)\n\t\t\t{\n\t\t\t\tlet bestdsq = Number.MAX_VALUE;\n\t\t\t\tfor (let n = 0; n < na; n++) if (!mask[n])\n\t\t\t\t{\n\t\t\t\t\tlet dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n\t\t\t\t\tif (dsq < bestdsq) {bestdsq = dsq; j = n;}\n\t\t\t\t}\n\t\t\t\tif (j < 0 || bestdsq > tolsq) return false;\n\t\t\t}\n\n\t\t\tmap[i] = j + 1;\n\t\t\tmask[j] = true;\n\n\t\t\t// while we're here, make sure the atoms have the same properties\n\t\t\tif (mol1.atomElement(i + 1) != mol2.atomElement(j + 1)) return false;\n\t\t\tif (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1)) return false;\n\t\t\tif (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1)) return false;\n\t\t\tif (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n\t\t\t\tmol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n\t\t\t\tmol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN) return false;\n\t\t}\n\n\t\t// now that we have the mapping, make sure the bonds are also equivalent\n\t\t// NOTE: this is O(N), because Molecule.findBond(..) is O(1)\n\t\tfor (let i = 1; i <= nb; i++)\n\t\t{\n\t\t\tlet i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n\t\t\tlet j = mol2.findBond(j1, j2);\n\n\t\t\tif (j == 0) return false;\n\n\t\t\tif (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j)) return false;\n\n\t\t\tif (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) {} // same\n\t\t\telse if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n\t\t\t\t\tmol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n\t\t\t\t\tmol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) {} // reversed is OK\n\t\t\telse return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// similar to sketchEquivalent(..) above, except this version will translate the coordinates so that they overlay on top of\n\t// each other\n\t// NOTE: the overlay method is trivial; if the coordinates are collectively different enough to blow the tolerance unless\n\t// the overlay is jiggled around a bit, this method can return a false negative\n\tpublic static sketchMappable(mol1:Molecule, mol2:Molecule, tolerance?:number):boolean\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n\n\t\tlet box1 = mol1.boundary(), box2 = mol2.boundary();\n\t\tlet dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n\t\tif (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1)\n\t\t{\n\t\t\tmol2 = mol2.clone();\n\t\t\tfor (let n = 1; n <= mol2.numAtoms; n++) mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n\t\t}\n\n\t\treturn CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n\t}\n\n\t// returns a list of the angles of the bonds emanating from the given atom; the order of the angles returned is guaranteed to\n\t// correspond to the order found in mol.atomAdjList(N)\n\tpublic static atomBondAngles(mol:Molecule, atom:number, adj?:number[]):number[]\n\t{\n\t\tif (adj == null) adj = mol.atomAdjList(atom);\n\t\tlet bndang:number[] = [];\n\t\tlet cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tfor (let a of adj) bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n\t\treturn bndang;\n\t}\n\n\t// returns true if the indicated position happens to be on top of an atom, within the given radial tolerance\n\tpublic static overlapsAtom(mol:Molecule, x:number, y:number, tol:number):boolean\n\t{\n\t\tconst tolsq = tol * tol;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq) return true;\n\t\treturn false;\n\t}\n\n\t// returns a list of all the atoms which are considered to be \"overlapping\"; because this is O(N^2) and typically called during\n\t// screen updates, it is somewhat optimised\n\tpublic static overlappingAtomMask(mol:Molecule, thresh?:number):boolean[]\n\t{\n\t\tif (thresh == null) thresh = CoordUtil.OVERLAP_THRESHOLD;\n\n\t\tconst sz = mol.numAtoms;\n\t\tlet box = mol.boundary();\n\t\tlet p1:number[], p2:number[];\n\t\tif (box.w > box.h)\n\t\t{\n\t\t\tp1 = MolUtil.arrayAtomX(mol);\n\t\t\tp2 = MolUtil.arrayAtomY(mol);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp1 = MolUtil.arrayAtomY(mol);\n\t\t\tp2 = MolUtil.arrayAtomX(mol);\n\t\t}\n\n\t\tlet omask = Vec.booleanArray(false, sz);\n\t\tlet idx = Vec.idxSort(p1);\n\t\tconst threshSQ = thresh * thresh;\n\t\tfor (let i = 1; i < sz - 1; i++)\n\t\t{\n\t\t\tfor (let j = i - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tlet d1 = p1[idx[i]] - p1[idx[j]];\n\t\t\t\tif (d1 > thresh) break;\n\t\t\t\tif (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {omask[idx[i]] = true; omask[idx[j]] = true;}\n\t\t\t}\n\t\t\tfor (let j = i + 1; j < sz; j++)\n\t\t\t{\n\t\t\t\tlet d1 = p1[idx[j]] - p1[idx[i]];\n\t\t\t\tif (d1 > thresh) break;\n\t\t\t\tif (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {omask[idx[i]] = true; omask[idx[j]] = true;}\n\t\t\t}\n\t\t}\n\n\t\treturn omask;\n\t}\n\tpublic static overlappingAtomList(mol:Molecule, thresh?:number):number[]\n\t{\n\t\tif (thresh == null) thresh = CoordUtil.OVERLAP_THRESHOLD;\n\t\treturn Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n\t}\n\n\t// for the given position, returns a measure of how congested it is, based on the sum of the reciprocal square of distances\n\t// to each of the atoms; the 'approach' parameter is the minimum distance, so 1/approach is hence the maximum score;\n\t// higher values mean more congested; approach should always be >0; lower numbers mean less congested\n\tpublic static congestionPoint(mol:Molecule, x:number, y:number, approach?:number):number\n\t{\n\t\tif (approach == null) approach = 1E-5;\n\t\tlet score = 0;\n\t\tlet na = mol.numAtoms;\n\t\tfor (let n = 1; n <= na; n++)\n\t\t\tscore += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n\t\treturn score;\n\t}\n\n\t// returns congestion calculated for the whole molecule (or rather, sum(i,j) where i<j); 'approach' works like above;\n\t// higher values mean more congested\n\tpublic static congestionMolecule(mol:Molecule, approach?:number):number\n\t{\n\t\tif (approach == null) approach = 1E-5;\n\t\tlet score = 0;\n\t\tconst na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\t\tfor (let i = 0; i < na - 1; i++) for (let j = i + 1; j < na; j++)\n\t\t\tscore += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n\t\treturn score;\n\t}\n\n\t// translates all atoms in the molecule by the indicated amount\n\tpublic static translateMolecule(mol:Molecule, ox:number, oy:number):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n\t}\n\n\t// rotates the molecule about geographic centre\n\tpublic static rotateMolecule(mol:Molecule, theta:number, cx?:number, cy?:number):void\n\t{\n\t\tif (cx == null || cy == null)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = box.midX();\n\t\t\tcy = box.midY();\n\t\t}\n\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// with atom C as the central point, rotates the substituent\n\tpublic static rotateBond(mol:Molecule, centre:number, atom:number, theta:number):void\n\t{\n\t\ttheta = angleNorm(theta);\n\t\tif (Math.abs(theta) < 0.1 * DEGRAD) return;\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.isolateNode(centre - 1);\n\t\tlet cc = g.calculateComponents();\n\n\t\tlet cx = mol.atomX(centre), cy = mol.atomY(centre);\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (cc[n - 1] == cc[atom - 1])\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// rotates only the atoms specified by the mask, by theta about the central point (cx,cy)\n\tpublic static rotateAtoms(mol:Molecule, mask:boolean[], cx:number, cy:number, theta:number):void\n\t{\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// considers the adjacency list for an atom, and returns a form of the list in a sequence suitable for representing interior\n\t// angles; null means no angles; for those with two neighbours, returns them ordered such that ang(1)..ang(2) is the\n\t// interior angle; if 3 or more neighbours, orders them so that ang(N)..ang(N+1) has no other angles _between_ them\n\tpublic static angleNeighbours(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tif (adj.length <= 1) return null;\n\t\tlet th:number[] = [];\n\t\tfor (let n = 0; n < adj.length; n++) th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n\n\t\tif (adj.length == 2)\n\t\t{\n\t\t\tif (angleDiff(th[1], th[0]) > 0) return adj;\n\t\t\treturn [adj[1], adj[0]];\n\t\t}\n\n\t\tlet idx = Vec.idxSort(th);\n\t\treturn Vec.idxGet(adj, idx);\n\t}\n\n\t// assimilates two atoms together; the \"old\" atom has its bonds reassigned to the \"new\" atom, then gets deleted\n\tpublic static mergeAtoms(mol:Molecule, oldN:number, newN:number):void\n\t{\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t}\n\t\tmol.deleteAtomAndBonds(oldN);\n\t}\n\n\t// runs through the molecule to see if the median bond distance is reasonably close to the ideal bond length, and if so, leaves\n\t// it alone; if not, everything gets rescaled; this is particularly useful when importing, because not all formats use quasi-\n\t// realistic Angstrom-like units\n\tpublic static normaliseBondDistances(mol:Molecule):void\n\t{\n\t\tconst nb = mol.numBonds;\n\t\tif (nb == 0) return;\n\n\t\tlet dsq:number[] = [];\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tdsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n\t\t}\n\t\tVec.sort(dsq);\n\t\tlet median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n\t\tif (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1)) return;\n\n\t\tlet box = mol.boundary();\n\t\tlet cx = box.midX(), cy = box.midY();\n\t\tlet scale = Molecule.IDEALBOND / median;\n\t\tfor (let n = mol.numAtoms; n >= 1; n--)\n\t\t{\n\t\t\tlet x = (mol.atomX(n) - cx) * scale + cx;\n\t\t\tlet y = (mol.atomY(n) - cy) * scale + cy;\n\t\t\tmol.setAtomPos(n, x, y);\n\t\t}\n\t}\n\n\t// recalibrates the molecule so that the coordinates are somewhere near the origin\n\tpublic static centreMolecule(mol:Molecule):void\n\t{\n\t\tif (MolUtil.isBlank(mol)) return;\n\t\t\n\t\tlet x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n\t\tlet sz = x.length;\n\t\tlet invsz = 1.0 / sz;\n\t\tlet meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n\t\tlet closest = Number.POSITIVE_INFINITY;\n\t\tlet deltaX = 0, deltaY = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n\t\t\tif (dsq < closest)\n\t\t\t{\n\t\t\t\tdeltaX = -x[n];\n\t\t\t\tdeltaY = -y[n];\n\t\t\t\tclosest = dsq;\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sz; n++) mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n\t}\n\n\t// returns an inverted version of the molecule, by switching one axis (X); if there are any inclined/declined bonds, they are\n\t// also inverted\n\tpublic static mirrorImage(mol:Molecule):Molecule\n\t{\n\t\tmol = mol.clone();\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) mol.setAtomX(n, -mol.atomX(n));\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_DECLINED) mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\telse if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED) mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t}\n\n\t\treturn mol;\n\t}\n\n\t// given two molecules (mol1,mol2), and a mapping between them, performs a specialised superimposition: the first\n\t// index:index mapping is the translation reference point, so mol2 is moved; then a rotation/flip operation is determined,\n\t// based on the directional orientation of the remaining mapping substituents; if the molecule is flipped, the wedge bonds\n\t// will all be inverted\n\t// NOTE: the mol2 parameter is modified, and contains the results of the operation\n\tpublic static alignOrientFlip(mol1:Molecule, idx1:number[], mol2:Molecule, idx2:number[]):void\n\t{\n\t\tif (idx1.length < 2 || idx1.length != idx2.length) throw 'Invalid mapping indices.';\n\n\t\tlet x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n\n\t\tCoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n\t\tconst sz = idx1.length - 1;\n\n\t\tlet th1:number[] = [], th2:number[] = [];\n\t\tlet deltaA = 0, deltaB = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tth1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n\t\t\tth2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n\t\t\tlet dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n\n\t\t\t// correction to avoid cancellation, e.g. (180-180) === (180+180)\n\t\t\tif (dthA < -175 * DEGRAD && deltaA > 0) dthA += TWOPI;\n\t\t\telse if (dthA > 175 * DEGRAD && deltaA < 0) dthA -= TWOPI;\n\t\t\tif (dthB < -175 * DEGRAD && deltaB > 0) dthB += TWOPI;\n\t\t\telse if (dthB > 175 * DEGRAD && deltaB < 0) dthB -= TWOPI;\n\n\t\t\tdeltaA += dthA;\n\t\t\tdeltaB += dthB;\n\t\t}\n\t\tif (sz > 1) {let inv = 1.0 / sz; deltaA *= inv; deltaB *= inv;}\n\t\tlet scoreA = 0, scoreB = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tscoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n\t\t\tscoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n\t\t}\n\t\tif (scoreB < scoreA)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol2.numAtoms; n++) mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n\t\t\tfor (let n = 1; n <= mol2.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED) mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\telse if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED) mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t}\n\t\t\tCoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n\t\t}\n\t\telse CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n\t}\n\n\t// returns true if the atom has two neighbours at almost 180 degree separation, such that it is a bit on the unusual side, and\n\t// should have its carbon atoms drawn explicitly\n\tpublic static atomIsWeirdLinear(mol:Molecule, idx:number):boolean\n\t{\n\t\tlet bonds = mol.atomAdjBonds(idx);\n\t\tif (bonds.length != 2) return false;\n\t\tfor (let n = 0; n < bonds.length; n++) if (mol.bondOrder(bonds[n]) == 3) return false; // triple bonds don't trigger this\n\n\t\tlet adj = mol.atomAdjList(idx);\n\t\tlet th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n\t\tlet th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n\t\treturn Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2022 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tEncodes some number of stereochemistry groups into the molecule.\n\n\tTypes:\n\t\tRacemic (\"AND\"): for chiral centres in the group, the configuration indicated by the wedges is present _and_ its\n\t\t\t\t\t\t inverted racemic opposite is inverted as well (e.g. [R,R,S] & [S,S,R], but not any of the other\n\t\t\t\t\t\t six combinations)\n\t\tRelative (\"OR\"): for chiral centres in the group, there is just one configuration present, and it is either the\n\t\t\t\t\t\t configuration indicated _or_ its inversion (e.g. just one of [R,R,S] or [S,S,R])\n\n\tAny tools that ignore this stereo group metadata will just see that there's a particular configuration indicated and\n\tinterpret that as what it is.\n*/\n\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:'; // racemic (often rendered as \"and\")\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:'; // relative (often rendered as \"or\")\n\nexport class StereoGroup\n{\n\tprivate chiRac = new Map<number, number[]>();\n\tprivate chiRel = new Map<number, number[]>();\n\n\t// ------------ public methods ------------\n\n\t// useful pre-check to see if a molecule has any stereogroup metadata\n\tpublic static hasStereoGroups(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra) if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic constructor(private mol:Molecule)\n\t{\n\t\tthis.mol = mol;\n\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra)\n\t\t\t{\n\t\t\t\tif (str.startsWith(STEREOGROUP_EXTRA_RACEMIC))\n\t\t\t\t{\n\t\t\t\t\tlet grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n\t\t\t\t\tif (grp > 0) this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n\t\t\t\t}\n\t\t\t\telse if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n\t\t\t\t{\n\t\t\t\t\tlet grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n\t\t\t\t\tif (grp > 0) this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// clean each one up, or remove if invalid\n\t\tfor (let [grp, atoms] of this.chiRac.entries())\n\t\t{\n\t\t\tfor (let n = atoms.length - 1; n >= 0; n--) if (!this.atomHasWedge(atoms[n])) atoms.splice(n, 1);\n\t\t\tif (atoms.length > 0) this.chiRac.set(grp, atoms); else this.chiRac.delete(grp);\n\t\t}\n\t\tfor (let [grp, atoms] of this.chiRel.entries())\n\t\t{\n\t\t\tfor (let n = atoms.length - 1; n >= 0; n--) if (!this.atomHasWedge(atoms[n])) atoms.splice(n, 1);\n\t\t\tif (atoms.length > 0) this.chiRel.set(grp, atoms); else this.chiRel.delete(grp);\n\t\t}\n\t}\n\n\t// access to resulting content\n\tpublic getRacemicGroups():number[] {return Array.from(this.chiRac.keys());}\n\tpublic getRelativeGroups():number[] {return Array.from(this.chiRel.keys());}\n\tpublic getRacemicAtoms():number[][] {return Array.from(this.chiRac.values());}\n\tpublic getRelativeAtoms():number[][] {return Array.from(this.chiRel.values());}\n\tpublic getRacemicGroupAtoms(grp:number):number[] {return this.chiRac.get(grp);}\n\tpublic getRelativeGroupAtoms(grp:number):number[] {return this.chiRel.get(grp);}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\t// delete everything\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n\t\t\t\t{\n\t\t\t\t\textra.splice(i, 1);\n\t\t\t\t\tmodified = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modified) this.mol.setAtomExtra(n, extra);\n\t\t}\n\n\t\t// write back our datastructures\n\t\tfor (let [grp, atoms] of this.chiRac.entries())\n\t\t{\n\t\t\tfor (let a of atoms) this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n\t\t}\n\t\tfor (let [grp, atoms] of this.chiRel.entries())\n\t\t{\n\t\t\tfor (let a of atoms) this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n\t\t}\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:StereoGroup):void\n\t{\n\t\tlet groups = other.getRacemicGroups();\n\t\tlet stash = this.getRacemicAtoms();\n\t\tthis.chiRac.clear();\n\t\tfor (let atoms of stash)\n\t\t{\n\t\t\tlet grp = this.nextIdentifier(groups);\n\t\t\tthis.chiRac.set(grp, atoms);\n\t\t\tgroups.push(grp);\n\t\t}\n\n\t\tgroups = other.getRelativeGroups();\n\t\tstash = this.getRelativeAtoms();\n\t\tthis.chiRel.clear();\n\t\tfor (let atoms of stash)\n\t\t{\n\t\t\tlet grp = this.nextIdentifier(groups);\n\t\t\tthis.chiRel.set(grp, atoms);\n\t\t\tgroups.push(grp);\n\t\t}\n\t}\n\n\t// creates a racemic group, returns the new identifier\n\tpublic createRacemic(atoms:number[]):number\n\t{\n\t\tlet grp = this.nextIdentifier(this.getRacemicGroups());\n\t\tthis.chiRac.set(grp, atoms);\n\t\treturn grp;\n\t}\n\n\t// creates a relative group, returns the new identifier\n\tpublic createRelative(atoms:number[]):number\n\t{\n\t\tlet grp = this.nextIdentifier(this.getRelativeGroups());\n\t\tthis.chiRel.set(grp, atoms);\n\t\treturn grp;\n\t}\n\n\tpublic removeRacemic(grp:number):void\n\t{\n\t\tthis.chiRac.delete(grp);\n\t}\n\tpublic removeRelative(grp:number):void\n\t{\n\t\tthis.chiRel.delete(grp);\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic static removeAll(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) continue;\n\t\t\t\textra.splice(i, 1);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if false, the atom definitely can't be an R/S tetrahedral chiral centre\n\tprivate atomHasWedge(atom:number):boolean\n\t{\n\t\tif (this.mol.is3D()) return true;\n\n\t\t// must have at least one wedge originating from the atom, and no squigglies\n\t\tlet hasWedge = false;\n\t\tfor (let b of this.mol.atomAdjBonds(atom))\n\t\t{\n\t\t\tlet bt = this.mol.bondType(b);\n\t\t\tif (bt == Molecule.BONDTYPE_UNKNOWN) return false; // squiggly\n\t\t\tif (this.mol.bondFrom(b) != atom) continue;\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) hasWedge = true;\n\t\t}\n\t\treturn hasWedge;\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(inkeys:number[]):number\n\t{\n\t\tif (inkeys.length == 0) return 1;\n\t\tlet keys = Vec.sorted(inkeys);\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2024 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ResonanceRemover} from '../calc/ResonanceRemover';\nimport {Vec} from '../util/Vec';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {ForeignMolecule, ForeignMoleculeTemplateDefn, ForeignMoleculeTransient} from '../mol/ForeignMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {StereoGroup} from '../mol/StereoGroup';\n\n/* eslint-disable key-spacing */\n\n/*\n\tMDL Molfile reader: a somewhat flexible input parser that can turn V2000 and V3000 Molfiles into the internal molecule\n\trepresentation. The molfile format has several official variants, and a much larger number of mutant strains that\n\texist in the wild: mileage may vary. If the structure is unreadable, an exception will be thrown. For information on\n\tanything interesting that happened during the parsing process, consult the \"openmol\" member.\n\n\tMDL SDfile reader: doing the best it can to pull out the auxiliary fields in SDfiles, which can be abused in endless ways,\n\tbut one does one's best to deal with it.\n*/\n\n// valence options used by MDL/CTAB, which is much more promiscuous than the internal format\nexport const MDLMOL_VALENCE:Record<string, number[]> =\n{\n\t'H':  [1],\n\t'B':  [3],\n\t'C':  [4],\n\t'Si': [4],\n\t'N':  [3],\n\t'P':  [3, 5],\n\t'As': [3, 5],\n\t'O':  [2],\n\t'S':  [2, 4, 6],\n\t'Se': [2, 4, 6],\n\t'Te': [2, 4, 6],\n\t'F':  [1],\n\t'Cl': [1, 3, 5, 7],\n\t'Br': [1],\n\t'I':  [1, 3, 5, 7],\n\t'At': [1, 3, 5, 7],\n};\n\nexport interface MDLReaderLinkNode\n{\n\tatom:number;\n\tnbrs:number[];\n\tminRep:number;\n\tmaxRep:number;\n}\n\nexport interface MDLReaderGroupMixture\n{\n\tindex:number;\n\tparent:number;\n\ttype:string;\n\tatoms:number[];\n}\n\nexport interface MDLReaderSuperAtom\n{\n\tatoms:number[];\n\tname:string;\n\n\t// for polymers\n\tbracketType?:string;\n\tconnectType?:string;\n\tbonds?:number[];\n\tbondConn?:number[];\n\n\t// data groups\n\tvalue?:string;\n\tunit?:string;\n\tquery?:string;\n\n\t// for SCSR templates\n\ttemplateClass?:string;\n\tnatReplace?:string;\n\tattachPoints?:string[];\n}\n\nexport class MDLMOLReader\n{\n\t// options\n\tpublic parseHeader = true; // if on, the first 3 lines are the pre-ctab header\n\tpublic parseExtended = true; // if on, extended fields are parsed; otherwise legacy MDL\n\tpublic allowV3000 = true; // if on, will diverge to a separate track for V3000\n\tpublic considerRescale = true; // if on, bond lengths will be rescaled if they are funky\n\tpublic keepAromatic = false; // set this to retain \"type 4\" bonds and other queries, instead of de-rezzing\n\tpublic keepParity = false; // set this to bring in the \"parity\" labels for atoms\n\tpublic keepQuery = true; // set this to translate query-type properties into the native equivalent\n\n\t// deliverables\n\tpublic mol:Molecule = null; // the result (or partial result, if not successful)\n\tpublic molName = ''; // molecule name from the header, if any\n\tpublic overallStereoAbsolute = true; // from the counts block, overall true=interpret stereo as absolute; false=interpret as relative\n\n\t// hydrogen count & resonance bonds supposed to be query-only, but some software abuses them to get around the structural limitations\n\tpublic resBonds:boolean[] = null;\n\n\t// \"modern\" features of CTAB which are not part of the lowest common denominator\n\tpublic groupAttachAny = new Map<number, number[]>(); // bond -> list of atom indices\n\tpublic groupAttachAll = new Map<number, number[]>(); // ditto\n\tpublic groupStereoAbsolute:number[] = []; // atom centres that have absolute stereochemistry\n\tpublic groupStereoRacemic:number[][] = []; // blocks of atoms which are racemic\n\tpublic groupStereoRelative:number[][] = []; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tpublic groupLinkNodes:MDLReaderLinkNode[] = []; // so-called link nodes, aka repeating atom\n\tpublic groupMixtures:MDLReaderGroupMixture[] = []; // mixture collections, which may overlap\n\tpublic scsrTemplates:ForeignMoleculeTemplateDefn[] = null; // templates (SCSR = self-contained sequence representation)\n\n\tprivate pos = 0;\n\tprivate lines:string[];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(strData:string)\n\t{\n\t\tthis.lines = strData.split(/\\r?\\n/);\n\t}\n\n\t// perform the parsing operation, and populate the result fields\n\tpublic parse():Molecule\n\t{\n\t\tif (this.parseHeader)\n\t\t{\n\t\t\tthis.molName = this.lines[0];\n\t\t\tthis.pos = 3;\n\t\t}\n\t\tthis.parseCTAB();\n\t\treturn this.mol;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\tprivate nextLine():string\n\t{\n\t\tif (this.pos >= this.lines.length) throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n\t\treturn this.lines[this.pos++];\n\t}\n\n\t// pull out the main CTAB block: this is where the real action is\n\tprivate parseCTAB():void\n\t{\n\t\tthis.mol = new Molecule();\n\t\tthis.mol.keepTransient = true;\n\n\t\t// check out the counts line\n\t\tlet line = this.nextLine();\n\t\tlet version = line.length >= 39 ? line.substring(34, 39) : '';\n\t\tif (this.allowV3000 && version == 'V3000')\n\t\t{\n\t\t\tthis.parseV3000();\n\t\t\tthis.mol.keepTransient = false;\n\t\t\treturn;\n\t\t}\n\t\tif (version != 'V2000') throw 'Invalid MDL MOL: no Vx000 tag.';\n\n\t\tlet numAtoms = parseInt(line.substring(0, 3).trim());\n\t\tlet numBonds = parseInt(line.substring(3, 6).trim());\n\t\tif (line.length >= 15) this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n\n\t\t// read out each atom\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.length < 34) throw 'Invalid MDL MOL: atom line' + (n + 1);\n\n\t\t\tlet x = parseFloat(line.substring(0, 10).trim());\n\t\t\tlet y = parseFloat(line.substring(10, 20).trim());\n\t\t\tlet z = parseFloat(line.substring(20, 30).trim());\n\t\t\tlet el = line.substring(31, 34).trim();\n\t\t\tlet chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n\t\t\tlet stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n\t\t\tlet hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n\t\t\tlet val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n\t\t\tlet mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n\n\t\t\tif (chg >= 1 && chg <= 3) chg = 4 - chg;\n\t\t\telse if (chg == 4) {chg = 0; rad = 2;}\n\t\t\telse if (chg >= 5 && chg <= 7) chg = 4 - chg;\n\t\t\telse chg = 0;\n\n\t\t\tlet a = this.mol.addAtom(el, x, y, chg, rad);\n\t\t\tif (z != 0)\n\t\t\t{\n\t\t\t\tthis.mol.setAtomZ(a, z);\n\t\t\t\tthis.mol.setIs3D(true);\n\t\t\t}\n\t\t\tthis.mol.setAtomMapNum(a, mapnum);\n\n\t\t\tif (hyd > 0) QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n\n\t\t\tif (stereo > 0 && this.keepParity)\n\t\t\t{\n\t\t\t\tlet trans = this.mol.atomTransient(a);\n\t\t\t\tif (stereo == 1) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n\t\t\t\telse if (stereo == 2) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n\t\t\t\telse if (stereo == 3) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n\t\t\t}\n\n\t\t\tif (val != 0) ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n\t\t}\n\n\t\t// read out each bond\n\t\tfor (let n = 0; n < numBonds; n++)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.length >= 9 && line.length < 12) line = line.substring(0, 9) + '  0';\n\t\t\tif (line.length < 12) throw 'Invalid MDL MOL: bond line' + (n + 1);\n\n\t\t\tlet bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n\t\t\tlet type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n\n\t\t\tif (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms) throw 'Invalid MDL MOL: bond line' + (n + 1);\n\n\t\t\tlet order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n\t\t\tlet style = Molecule.BONDTYPE_NORMAL;\n\t\t\tif (stereo == 1) style = Molecule.BONDTYPE_INCLINED;\n\t\t\telse if (stereo == 6) style = Molecule.BONDTYPE_DECLINED;\n\t\t\telse if (stereo == 3 || stereo == 4) style = Molecule.BONDTYPE_UNKNOWN;\n\n\t\t\tlet b = this.mol.addBond(bfr, bto, order, style);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n\n\t\t\tif (this.keepQuery)\n\t\t\t{\n\t\t\t\tif (type == 4) QueryUtil.setQueryBondOrders(this.mol, b, [-1]); // aromatic query type\n\t\t\t\telse if (type == 5) QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]); // single-or-double query type\n\t\t\t\telse if (type == 6) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]); // single-or-aromatic query type\n\t\t\t\telse if (type == 7) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]); // double-or-aromatic query type\n\t\t\t\telse if (type == 8) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]); // any\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// type \"4\" is special: it is defined to be a special query type to match aromatic bonds, but it is sometimes used\n\t\t\t\t// to store actual molecules; in this case, it is necessary to either \"deresonate\" the rings, or to stash the property\n\t\t\t\tif (type == 4)\n\t\t\t\t{\n\t\t\t\t\tif (this.keepAromatic) this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.resBonds == null) this.resBonds = Vec.booleanArray(false, numBonds);\n\t\t\t\t\t\tthis.resBonds[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// examine anything in the M-block\n\t\tconst MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7,\n\t\t\t  MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n\t\tlet resPaths = new Map<number, number[]>(), resRings = new Map<number, number[]>(), arenes = new Map<number, number[]>();\n\t\tlet superatoms = new Map<number, MDLReaderSuperAtom>(), mixtures = new Map<number, MDLReaderGroupMixture>();\n\n\t\twhile (true)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.startsWith('M  END')) break;\n\n\t\t\tlet type = 0;\n\t\t\tif (line.startsWith('M  CHG')) type = MBLK_CHG;\n\t\t\telse if (line.startsWith('M  RAD')) type = MBLK_RAD;\n\t\t\telse if (line.startsWith('M  ISO')) type = MBLK_ISO;\n\t\t\telse if (line.startsWith('M  RGP')) type = MBLK_RGP;\n\t\t\telse if (this.parseExtended && line.startsWith('M  HYD')) type = MBLK_HYD;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZCH')) type = MBLK_ZCH;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZBO')) type = MBLK_ZBO;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZPA')) type = MBLK_ZPA;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZRI')) type = MBLK_ZRI;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZAR')) type = MBLK_ZAR;\n\t\t\telse if (this.parseExtended && line.startsWith('M  RBC')) type = MBLK_RBC;\n\t\t\telse if (this.parseExtended && line.startsWith('M  SUB')) type = MBLK_SUB;\n\t\t\telse if (this.parseExtended && line.startsWith('M  UNS')) type = MBLK_UNS;\n\t\t\telse if (line.startsWith('A  ') && line.length >= 6)\n\t\t\t{\n\t\t\t\tlet anum = parseInt(line.substring(3, 6).trim());\n\t\t\t\tif (anum >= 1 && anum <= this.mol.numAtoms)\n\t\t\t\t{\n\t\t\t\t\tline = this.nextLine();\n\t\t\t\t\tif (line == null) break;\n\t\t\t\t\tthis.mol.setAtomElement(anum, line);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  STY'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet stype = line.substring(14 + 8 * n, 17 + 8 * n);\n\t\t\t\t\tif (stype == 'SUP') superatoms.set(idx, {atoms: [], name: null});\n\t\t\t\t\telse if (stype == 'MIX' || stype == 'FOR') mixtures.set(idx, {index: idx, parent: 0, atoms: [], type: stype});\n\t\t\t\t\telse if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT') superatoms.set(idx, {atoms: [], name: null, bracketType: stype});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SPL'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n\t\t\t\t\tlet mix = mixtures.get(child);\n\t\t\t\t\tif (mix != null) mix.parent = parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SAL'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet atoms = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tsup.atoms = Vec.concat(sup.atoms, atoms);\n\t\t\t\t}\n\t\t\t\tlet mix = mixtures.get(idx);\n\t\t\t\tif (mix != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet atoms = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tmix.atoms = Vec.concat(mix.atoms, atoms);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SBL'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet bonds = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tsup.bonds = Vec.concat(sup.bonds, bonds);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SMT'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null) sup.name = line.substring(11).trim();\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SCL'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null) sup.templateClass = line.substring(11).trim();\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SDT'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup)\n\t\t\t\t{\n\t\t\t\t\tsup.name = line.substring(11, 41).trim();\n\t\t\t\t\tsup.unit = line.substring(43, 63).trim();\n\t\t\t\t\tsup.query = line.substring(63).trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SED'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup) sup.value = line.substring(11).trim();\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SCN'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet stype = line.substring(14 + 8 * n, 17 + 8 * n);\n\t\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\t\tif (sup != null) sup.connectType = stype.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  CRS'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tsup.bondConn = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  LIN'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet node:MDLReaderLinkNode =\n\t\t\t\t\t{\n\t\t\t\t\t\tatom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n\t\t\t\t\t\tnbrs: [],\n\t\t\t\t\t\tminRep: 1,\n\t\t\t\t\t\tmaxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n\t\t\t\t\t};\n\n\t\t\t\t\tlet nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n\t\t\t\t\tlet nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n\t\t\t\t\tif (nbr1 > 0) node.nbrs.push(nbr1);\n\t\t\t\t\tif (nbr2 > 0) node.nbrs.push(nbr2);\n\n\t\t\t\t\tthis.groupLinkNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  ALS'))\n\t\t\t{\n\t\t\t\tlet atom = parseInt(line.substring(7, 10).trim());\n\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\tlet logic = line.charAt(14);\n\t\t\t\tlet elements:string[] = [];\n\t\t\t\tfor (let n = 0; n < len; n++) elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n\n\t\t\t\tthis.mol.setAtomElement(atom, '*');\n\t\t\t\tif (logic == 'F') QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n\t\t\t\telse if (logic == 'T') QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n\t\t\t}\n\n\t\t\tif (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR)\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n\t\t\t\tlet map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : /* type == MBLK_ZAR */ arenes;\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tif (val < 1 || val > numAtoms) throw 'Invalid MDL MOL: M-block';\n\t\t\t\t\tlet atoms = map.get(blk);\n\t\t\t\t\tif (!atoms) map.set(blk, atoms = []);\n\t\t\t\t\tatoms.push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type > 0)\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n\t\t\t\t\tif (pos < 1) throw 'Invalid MDL MOL: M-block';\n\n\t\t\t\t\tif (type == MBLK_CHG) this.mol.setAtomCharge(pos, val);\n\t\t\t\t\telse if (type == MBLK_RAD)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == 1 || val == 3) this.mol.setAtomUnpaired(pos, 2);\n\t\t\t\t\t\telse if (val == 2) this.mol.setAtomUnpaired(pos, 1);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_ISO) this.mol.setAtomIsotope(pos, val);\n\t\t\t\t\telse if (type == MBLK_RGP) this.mol.setAtomElement(pos, 'R' + val);\n\t\t\t\t\telse if (type == MBLK_HYD) this.mol.setAtomHExplicit(pos, val);\n\t\t\t\t\telse if (type == MBLK_ZCH) this.mol.setAtomCharge(pos, val);\n\t\t\t\t\telse if (type == MBLK_ZBO) this.mol.setBondOrder(pos, val);\n\t\t\t\t\telse if (type == MBLK_RBC && val != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == -2) val = this.countRingBonds(pos);\n\t\t\t\t\t\telse if (val == -1) val = 0;\n\t\t\t\t\t\tQueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_SUB && val != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == -2) val = this.countSubstitutions(pos);\n\t\t\t\t\t\telse if (val == -1) val = 0;\n\t\t\t\t\t\tQueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_UNS)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == 1) QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.postFix();\n\n\t\tif (this.parseExtended)\n\t\t{\n\t\t\tlet artifacts = new BondArtifact(this.mol);\n\t\t\tfor (let atoms of resPaths.values()) artifacts.createPath(atoms);\n\t\t\tfor (let atoms of resRings.values()) artifacts.createRing(atoms);\n\t\t\tfor (let atoms of arenes.values()) artifacts.createArene(atoms);\n\t\t\tartifacts.rewriteMolecule();\n\t\t}\n\n\t\t// process polymer superblocks first\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tif (value.bracketType)\n\t\t\t{\n\t\t\t\tsuperatoms.delete(key);\n\t\t\t\tthis.applyPolymerBlock(value);\n\t\t\t}\n\t\t}\n\n\t\t// process non-polymer superblocks\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tsuperatoms.delete(key);\n\t\t\tthis.applySuperAtom(value, Array.from(superatoms.values()));\n\t\t}\n\n\t\tfor (let key of Vec.sorted(Array.from(mixtures.keys()))) this.groupMixtures.push(mixtures.get(key));\n\n\t\tthis.mol.keepTransient = false;\n\t}\n\n\t// performs some intrinsic post-parse fixing\n\tprivate postFix():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\t// post-fixing\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tif (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass))) continue;\n\n\t\t\tlet el = mol.atomElement(n);\n\n\t\t\t// shortcuts for isotope \"elements\"\n\t\t\tif (el == 'D') {mol.setAtomElement(n, 'H'); mol.setAtomIsotope(n, 2);}\n\t\t\telse if (el == 'T') {mol.setAtomElement(n, 'H'); mol.setAtomIsotope(n, 3);}\n\n\t\t\tif (mol.is3D && mol.atomZ(n) === undefined) mol.setAtomZ(n, 0);\n\n\t\t\t// valence, two correction scenarios\n\t\t\tlet valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n\t\t\tlet options = MDLMOL_VALENCE[el];\n\t\t\tif (valence != null)\n\t\t\t{\n\t\t\t\tlet hcount = valence < 0 || valence > 14 ? 0 : valence;\n\t\t\t\tfor (let b of mol.atomAdjBonds(n)) hcount -= mol.bondOrder(b);\n\t\t\t\tif (hcount != mol.atomHydrogens(n)) mol.setAtomHExplicit(n, Math.max(0, hcount));\n\t\t\t}\n\t\t\telse if (options)\n\t\t\t{\n\t\t\t\tlet chg = mol.atomCharge(n);\n\t\t\t\tlet chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n\t\t\t\tlet usedValence = chgmod;\n\t\t\t\tlet unp = mol.atomUnpaired(n);\n\t\t\t\tif (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')) usedValence += unp;\n\t\t\t\tfor (let b of mol.atomAdjBonds(n)) usedValence += mol.bondOrder(b);\n\t\t\t\tfor (let v of options) if (usedValence <= v)\n\t\t\t\t{\n\t\t\t\t\tlet hcount = v - usedValence;\n\t\t\t\t\tif (hcount != mol.atomHydrogens(n)) mol.setAtomHExplicit(n, Math.max(0, hcount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.considerRescale && Vec.isBlank(this.scsrTemplates)) CoordUtil.normaliseBondDistances(mol);\n\n\t\tif (this.resBonds != null)\n\t\t{\n\t\t\tlet derez = new ResonanceRemover(mol, this.resBonds, null);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tderez.perform();\n\t\t\t\tfor (let n = 0; n < mol.numBonds; n++) mol.setBondOrder(n + 1, derez.bondOrders[n]);\n\t\t\t}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\t// silent failure: de-resonance Kekulisation failed; the aromatic bonds will be left as single\n\t\t\t}\n\t\t}\n\t}\n\n\t// alternate track: only look at the specially marked V3000 tags\n\tprivate parseV3000():void\n\t{\n\t\tenum Section {Atom, Bond, Coll, SGroup, Template}\n\t\tlet inCTAB = false, inTemplate = false;\n\t\tlet section:Section = null;\n\n\t\tlet lineCounts:string = null;\n\t\tlet lineAtom:string[] = [], lineBond:string[] = [], lineColl:string[] = [], lineSgroup:string[] = [];\n\t\tlet asdrawnRBC:number[] = [], asdrawnSUB:number[] = [];\n\n\t\tlet templateBlocks:string[][] = [];\n\n\t\tconst ERRPFX = 'Invalid MDL MOL V3000: ';\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet fullLine = this.nextLine();\n\t\t\tif (fullLine == 'M  END') break; // graceful end\n\n\t\t\tif (!fullLine.startsWith('M  V30 ')) continue;\n\t\t\tlet line = fullLine.substring(7);\n\n\t\t\tif (line.startsWith('BEGIN TEMPLATE')) inTemplate = true;\n\t\t\telse if (line.startsWith('END TEMPLATE')) inTemplate = false;\n\t\t\telse if (line.startsWith('TEMPLATE ') && inTemplate) templateBlocks.push([fullLine]);\n\t\t\telse if (inTemplate && templateBlocks != null) Vec.last(templateBlocks).push(fullLine);\n\t\t\telse if (line.startsWith('COUNTS ')) lineCounts = line.substring(7);\n\t\t\telse if (line.startsWith('BEGIN CTAB')) inCTAB = true;\n\t\t\telse if (line.startsWith('BEGIN ATOM')) section = Section.Atom;\n\t\t\telse if (line.startsWith('BEGIN BOND')) section = Section.Bond;\n\t\t\telse if (line.startsWith('BEGIN COLLECTION')) section = Section.Coll;\n\t\t\telse if (line.startsWith('BEGIN SGROUP')) section = Section.SGroup;\n\t\t\telse if (line.startsWith('END ')) section = null;\n\t\t\t// TO DO: make sure these are nested properly, bug out if not\n\t\t\telse if (inCTAB && section == Section.Atom) lineAtom.push(line);\n\t\t\telse if (inCTAB && section == Section.Bond) lineBond.push(line);\n\t\t\telse if (inCTAB && section == Section.Coll) lineColl.push(line);\n\t\t\telse if (inCTAB && section == Section.SGroup) lineSgroup.push(line);\n\t\t\telse if (inCTAB && section == null)\n\t\t\t{\n\t\t\t\tif (line.startsWith('LINKNODE '))\n\t\t\t\t{\n\t\t\t\t\tlet bits = this.splitWithQuotes(line.substring(9));\n\n\t\t\t\t\tlet node:MDLReaderLinkNode =\n\t\t\t\t\t{\n\t\t\t\t\t\tatom: 0,\n\t\t\t\t\t\tnbrs: [],\n\t\t\t\t\t\tminRep: parseInt(bits[0]),\n\t\t\t\t\t\tmaxRep: parseInt(bits[1])\n\t\t\t\t\t};\n\n\t\t\t\t\t// convert the list of bond {a1,a2} into central atom / neighbours\n\t\t\t\t\tlet nb = parseInt(bits[2]);\n\t\t\t\t\tlet atoms:number[] = [];\n\t\t\t\t\tfor (let n = 0; n < nb * 2; n++) atoms.push(parseInt(bits[3 + n]));\n\t\t\t\t\tVec.sort(atoms);\n\t\t\t\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n\t\t\t\t\t\t\tnode.atom = atoms[n++];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode.nbrs.push(atoms[n]);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.groupLinkNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// (silently ignore other stuff; don't care)\n\t\t}\n\n\t\tlet counts = lineCounts.trim().split(/\\s+/);\n\t\tif (counts.length < 2) throw ERRPFX + 'counts line malformatted';\n\t\tlet numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n\t\tif (numAtoms < 0 || numAtoms > lineAtom.length) throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n\t\tif (numBonds < 0 || numBonds > lineBond.length) throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n\n\t\tlet atomBits:string[][] = [], bondBits:string[][] = [];\n\n\t\t// extract atom & bond content\n\t\tfor (let n = 0; n < lineAtom.length; n++)\n\t\t{\n\t\t\tlet line = lineAtom[n];\n\t\t\twhile (n < lineAtom.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineAtom[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits.length < 6) throw ERRPFX + 'atom line has too few components: ' + line;\n\t\t\tlet idx = parseInt(bits[0], 0);\n\t\t\tif (idx < 1 || idx > numAtoms) throw ERRPFX + 'invalid atom index: ' + bits[0];\n\t\t\tif (atomBits[idx - 1] != null) throw ERRPFX + 'duplicate atom index: ' + idx;\n\t\t\tatomBits[idx - 1] = bits;\n\t\t}\n\t\tfor (let n = 0; n < lineBond.length; n++)\n\t\t{\n\t\t\tlet line = lineBond[n];\n\t\t\twhile (n < lineBond.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineBond[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits.length < 4) throw ERRPFX + 'bond line has too few components: ' + line;\n\t\t\tlet idx = parseInt(bits[0], 0);\n\t\t\tif (idx < 1 || idx > numBonds) throw ERRPFX + 'invalid bond index: ' + bits[0];\n\t\t\tif (bondBits[idx - 1] != null) throw ERRPFX + 'duplicate bond index: ' + idx;\n\t\t\tbondBits[idx - 1] = bits;\n\t\t}\n\n\t\t// process each atom\n\t\tfor (let a = 1; a <= numAtoms; a++)\n\t\t{\n\t\t\tlet bits = atomBits[a - 1];\n\t\t\tif (bits == null) throw ERRPFX + 'atom definition missing for #' + a;\n\n\t\t\tlet type = bits[1];\n\t\t\tif (type.length > 2 && type.startsWith('\"') && type.endsWith('\"')) type = type.substring(1, type.length - 1);\n\n\t\t\tlet x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n\t\t\tlet map = parseInt(bits[5]);\n\t\t\tthis.mol.addAtom(type, x, y);\n\t\t\tif (z != 0)\n\t\t\t{\n\t\t\t\tthis.mol.setAtomZ(a, z);\n\t\t\t\tthis.mol.setIs3D(true);\n\t\t\t}\n\t\t\tthis.mol.setAtomMapNum(a, map);\n\n\t\t\tthis.parseQueryAtomList(this.mol, a);\n\n\t\t\tfor (let i = 6; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tlet key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n\t\t\t\tif (key == 'CHG') this.mol.setAtomCharge(a, parseInt(val));\n\t\t\t\telse if (key == 'RAD')\n\t\t\t\t{\n\t\t\t\t\tlet spin = parseInt(val);\n\t\t\t\t\tif (spin == 1 || spin == 3) this.mol.setAtomUnpaired(a, 2);\n\t\t\t\t\telse if (spin == 2) this.mol.setAtomUnpaired(a, 1);\n\t\t\t\t}\n\t\t\t\telse if (key == 'MASS') this.mol.setAtomIsotope(a, parseInt(val));\n\t\t\t\telse if (key == 'CFG')\n\t\t\t\t{\n\t\t\t\t\tlet stereo = parseInt(val);\n\t\t\t\t\tif (stereo > 0 && this.keepParity)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* todo: record incoming parity\n\t\t\t\t\t\tlet trans = this.mol.atomTransient(n);\n\t\t\t\t\t\tif (stereo == 1) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_ODD));\n\t\t\t\t\t\telse if (stereo == 2) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_EVEN));\n\t\t\t\t\t\telse if (stereo == 3) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_RACEMIC));*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (key == 'VAL') ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n\t\t\t\telse if (key == 'RGROUPS')\n\t\t\t\t{\n\t\t\t\t\tvar rglist = this.unpackList(val);\n\t\t\t\t\tif (rglist?.length == 1) this.mol.setAtomElement(a, `R${rglist[0]}`);\n\t\t\t\t}\n\t\t\t\telse if (key == 'CLASS')\n\t\t\t\t{\n\t\t\t\t\tthis.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n\t\t\t\t}\n\t\t\t\telse if (key == 'SEQID')\n\t\t\t\t{\n\t\t\t\t\tthis.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n\t\t\t\t}\n\t\t\t\telse if (key == 'ATTCHORD')\n\t\t\t\t{\n\t\t\t\t\tlet attch = this.unpackStrings(val);\n\t\t\t\t\tif (attch != null) this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n\t\t\t\t}\n\t\t\t\telse if (key == 'HCOUNT')\n\t\t\t\t{\n\t\t\t\t\tlet hyd = parseInt(val);\n\t\t\t\t\tif (hyd != 0) QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'RBCNT')\n\t\t\t\t{\n\t\t\t\t\tlet rbc = parseInt(val);\n\t\t\t\t\tif (rbc == -2) asdrawnRBC.push(a);\n\t\t\t\t\telse if (rbc != 0) QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'SUBST')\n\t\t\t\t{\n\t\t\t\t\tlet sub = parseInt(val);\n\t\t\t\t\tif (sub == -2) asdrawnSUB.push(a);\n\t\t\t\t\telse if (sub != 0) QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'UNSAT')\n\t\t\t\t{\n\t\t\t\t\tlet uns = parseInt(val);\n\t\t\t\t\tif (uns == 1) QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// process each bond\n\t\tfor (let b = 1; b <= numBonds; b++)\n\t\t{\n\t\t\tlet bits = bondBits[b - 1];\n\t\t\tif (bits == null) throw ERRPFX + 'bond definition missing for #' + b;\n\n\t\t\tlet type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n\t\t\tlet order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n\t\t\tthis.mol.addBond(bfr, bto, order);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n\t\t\tif (type == 10) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n\n\t\t\tif (this.keepQuery)\n\t\t\t{\n\t\t\t\tif (type == 4) QueryUtil.setQueryBondOrders(this.mol, b, [-1]); // aromatic query type\n\t\t\t\telse if (type == 5) QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]); // single-or-double query type\n\t\t\t\telse if (type == 6) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]); // single-or-aromatic query type\n\t\t\t\telse if (type == 7) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]); // double-or-aromatic query type\n\t\t\t\telse if (type == 8) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]); // anything\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// type \"4\" is special: it is defined to be a special query type to match aromatic bonds, but it is sometimes used\n\t\t\t\t// to store actual molecules; in this case, it is necessary to either \"deresonate\" the rings, or to stash the property\n\t\t\t\tif (type == 4)\n\t\t\t\t{\n\t\t\t\t\tif (this.keepAromatic) this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.resBonds == null) this.resBonds = Vec.booleanArray(false, numBonds);\n\t\t\t\t\t\tthis.resBonds[b - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet endpts:number[] = null;\n\t\t\tlet attach:string = null;\n\n\t\t\tfor (let i = 4; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tlet key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n\t\t\t\tif (key == 'CFG')\n\t\t\t\t{\n\t\t\t\t\tlet dir = parseInt(val);\n\t\t\t\t\tthis.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n\t\t\t\t\t\t\t\t\t\t\tdir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n\t\t\t\t\t\t\t\t\t\t\tdir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n\t\t\t\t}\n\t\t\t\telse if (key == 'DISP')\n\t\t\t\t{\n\t\t\t\t\tif (val == 'COORD') this.mol.setBondOrder(b, 0);\n\t\t\t\t}\n\t\t\t\telse if (key == 'ENDPTS') endpts = this.unpackList(val);\n\t\t\t\telse if (key == 'ATTACH') attach = val;\n\t\t\t}\n\n\t\t\tif (attach != null && endpts != null)\n\t\t\t{\n\t\t\t\tif (attach == 'ALL') this.groupAttachAll.set(b, endpts);\n\t\t\t\telse if (attach == 'ANY') this.groupAttachAny.set(b, endpts);\n\t\t\t}\n\t\t}\n\n\t\tfor (let atom of asdrawnRBC) QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n\t\tfor (let atom of asdrawnSUB) QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n\n\t\tthis.postFix();\n\n\t\t// extract collection info\n\t\tfor (let n = 0; n < lineColl.length; n++)\n\t\t{\n\t\t\tlet line = lineColl[n];\n\t\t\twhile (n < lineColl.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineColl[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits[0].startsWith('MDLV30/STEABS'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n\t\t\t}\n\t\t\telse if (bits[0].startsWith('MDLV30/STERAC'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n\t\t\t}\n\t\t\telse if (bits[0].startsWith('MDLV30/STEREL'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n\t\t\t}\n\t\t}\n\n\t\tlet stereoGroup = new StereoGroup(this.mol);\n\t\tfor (let atoms of this.groupStereoRacemic) stereoGroup.createRacemic(atoms);\n\t\tfor (let atoms of this.groupStereoRelative) stereoGroup.createRelative(atoms);\n\t\tstereoGroup.rewriteMolecule();\n\n\t\t// extract S-groups\n\t\tlet superatoms = new Map<number, MDLReaderSuperAtom>();\n\t\tfor (let n = 0; n < lineSgroup.length; n++)\n\t\t{\n\t\t\tlet line = lineSgroup[n];\n\t\t\twhile (n < lineSgroup.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineSgroup[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tif (bits.length > 3 && idx > 0 && bits[1] == 'SUP')\n\t\t\t{\n\t\t\t\tlet sup:MDLReaderSuperAtom = {atoms: [], name: null};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) sup.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('LABEL=')) sup.name = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('XBONDS=')) sup.bonds = this.unpackList(bits[i].substring(7));\n\t\t\t\t\telse if (bits[i].startsWith('CLASS=')) sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('NATREPLACE=')) sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n\t\t\t\t\telse if (bits[i].startsWith('SAP='))\n\t\t\t\t\t{\n\t\t\t\t\t\tconst pts = this.unpackStrings(bits[i].substring(4));\n\t\t\t\t\t\tsup.attachPoints = [...(sup.attachPoints ?? []), ...pts];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsuperatoms.set(idx, sup);\n\t\t\t}\n\t\t\telse if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx)\n\t\t\t{\n\t\t\t\tlet mix:MDLReaderGroupMixture = {index: idx, parent: 0, atoms: null, type: bits[1]};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) mix.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('PARENT=')) mix.parent = parseInt(bits[i].substring(7));\n\t\t\t\t}\n\t\t\t\tthis.groupMixtures.push(mix);\n\t\t\t}\n\t\t\telse if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT'))\n\t\t\t{\n\t\t\t\tlet sup:MDLReaderSuperAtom = {atoms: [], name: null, bracketType: bits[1]};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) sup.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('BONDS=')) sup.bonds = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('LABEL=')) sup.name = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('CONNECT=')) sup.connectType = bits[i].substring(8);\n\t\t\t\t\telse if (bits[i].startsWith('XBCORR=')) sup.bondConn = this.unpackList(bits[i].substring(7));\n\t\t\t\t\telse if (bits[i].startsWith('MULT=')) sup.name = this.withoutQuotes(bits[i].substring(5));\n\t\t\t\t\telse if (bits[i].startsWith('FIELDNAME=')) sup.name = this.withoutQuotes(bits[i].substring(10));\n\t\t\t\t\telse if (bits[i].startsWith('FIELDDATA=')) sup.value = this.withoutQuotes(bits[i].substring(10));\n\t\t\t\t}\n\t\t\t\tsuperatoms.set(idx, sup);\n\t\t\t}\n\t\t}\n\n\t\t// process polymer superblocks first\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tif (value.bracketType)\n\t\t\t{\n\t\t\t\tsuperatoms.delete(key);\n\t\t\t\tthis.applyPolymerBlock(value);\n\t\t\t}\n\t\t}\n\n\t\t// process non-polymer superblocks\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tsuperatoms.delete(key);\n\t\t\tthis.applySuperAtom(value, Array.from(superatoms.values()));\n\t\t}\n\n\t\tif (templateBlocks.length > 0)\n\t\t{\n\t\t\tthis.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n\t\t}\n\t}\n\n\t// if it's a V3000-style atom list, mark it up\n\tprivate parseQueryAtomList(mol:Molecule, atom:number):void\n\t{\n\t\tlet label = mol.atomElement(atom);\n\t\tlet not = false;\n\t\tif (label.startsWith('NOT ')) {label = label.substring(4); not = true;}\n\t\tif (label.length < 2 || !label.startsWith('[') || !label.endsWith(']')) return;\n\t\tlabel = label.substring(1, label.length - 1);\n\t\tlet elements = label.split(',');\n\n\t\tmol.setAtomElement(atom, '*');\n\t\tif (!not)\n\t\t\tQueryUtil.setQueryAtomElements(mol, atom, elements);\n\t\telse\n\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n\t}\n\n\t// applies a superatom block: turns the definition itself into an abbreviation if possible; also modifies any remaining superatoms so that their indexes\n\t// are still current\n\tprivate applySuperAtom(sup:MDLReaderSuperAtom, residual:MDLReaderSuperAtom[]):void\n\t{\n\t\tif ((sup.name == null && sup.templateClass == null) || Vec.isBlank(sup.atoms)) return;\n\t\tlet mask = Vec.booleanArray(true, this.mol.numAtoms);\n\t\tfor (let a of sup.atoms) mask[a - 1] = false;\n\n\t\tlet name = sup.name;\n\t\tif (name != null)\n\t\t{\n\t\t\tlet i:number;\n\t\t\twhile ((i = name.indexOf('\\\\S')) >= 0) name = name.substring(0, i) + '{^' + name.substring(i + 2);\n\t\t\twhile ((i = name.indexOf('\\\\s')) >= 0) name = name.substring(0, i) + '{' + name.substring(i + 2);\n\t\t\twhile ((i = name.indexOf('\\\\n')) >= 0) name = name.substring(0, i) + '}' + name.substring(i + 2);\n\t\t}\n\n\t\tlet [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n\t\tif (mod == null)\n\t\t{\n\t\t\tlet keyval:Record<string, string> = {};\n\t\t\tif (sup.bonds) keyval['bonds'] = sup.bonds.join(' ');\n\t\t\tif (sup.templateClass) keyval['templateClass'] = sup.templateClass;\n\t\t\tif (sup.natReplace) keyval['natReplace'] = sup.natReplace;\n\t\t\tif (sup.attachPoints) keyval['attachPoints'] = sup.attachPoints.join(' ');\n\n\t\t\tForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n\t\t\treturn;\n\t\t}\n\t\tthis.mol = mod;\n\n\t\t// correct atom indices for ensuing superatom blocks\n\t\tlet map = Vec.maskMap(mask);\n\t\tfor (let res of residual)\n\t\t{\n\t\t\tlet subsumed = false;\n\t\t\tfor (let n = res.atoms.length - 1; n >= 0; n--)\n\t\t\t{\n\t\t\t\tlet atom = map[res.atoms[n] - 1] + 1;\n\t\t\t\tif (atom == 0)\n\t\t\t\t{\n\t\t\t\t\tres.atoms = Vec.remove(res.atoms, n);\n\t\t\t\t\tsubsumed = true;\n\t\t\t\t}\n\t\t\t\telse res.atoms[n] = atom;\n\t\t\t}\n\t\t\tif (subsumed) res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n\t\t}\n\t}\n\n\t// deals with a superatom block that is marked as\n\tprivate applyPolymerBlock(sup:MDLReaderSuperAtom):void\n\t{\n\t\tif (sup.bracketType == 'MUL')\n\t\t{\n\t\t\tlet mult = parseInt(sup.name);\n\t\t\tForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n\t\t\treturn;\n\t\t}\n\t\tif (sup.bracketType == 'DAT')\n\t\t{\n\t\t\tif (sup.atoms != null) ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n\t\t\treturn;\n\t\t}\n\n\t\tlet poly = new PolymerBlock(this.mol);\n\t\tlet connect:PolymerBlockConnectivity = null;\n\t\tif (sup.connectType == null) {}\n\t\telse if (sup.connectType == 'HT') connect = PolymerBlockConnectivity.HeadToTail;\n\t\telse if (sup.connectType == 'HH') connect = PolymerBlockConnectivity.HeadToHead;\n\t\telse if (sup.connectType == 'EU') connect = PolymerBlockConnectivity.Random;\n\t\telse return;\n\n\t\tlet bondConn:number[] = null;\n\t\tif (Vec.len(sup.bondConn) == 3)\n\t\t{\n\t\t\t// the V2000 style of specifying 2x2 connectivity (by leaving one out...)\n\t\t\tlet b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n\t\t\tfor (let n = 1; n <= this.mol.numBonds; n++) if (n != b1 && n != b2 && n != b3)\n\t\t\t{\n\t\t\t\tlet in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\t\tif ((in1 && !in2) || (!in1 && in2))\n\t\t\t\t{\n\t\t\t\t\tif (b4 > 0) {b4 = 0; break;}\n\t\t\t\t\tb4 = n;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbondConn = [b1, b2, b3, b4];\n\t\t}\n\t\telse if (Vec.len(sup.bondConn) == 4)\n\t\t{\n\t\t\t// the V3000 style of specifying 2x2 connectivity, which is the same as what we're using\n\t\t\tbondConn = sup.bondConn;\n\t\t}\n\n\t\tlet unit = new PolymerBlockUnit(sup.atoms);\n\t\tunit.connect = connect;\n\t\tunit.bondConn = bondConn;\n\t\tpoly.createUnit(unit);\n\t}\n\n\t// parse out the sub-molecule SCSR template from V3000\n\tprivate parseV3000Template(lines:string[]):ForeignMoleculeTemplateDefn\n\t{\n\t\tlet header = lines[0];\n\t\tlet bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n\t\tlet name = bits[1], natReplace:string = null;\n\t\tfor (let n = 2; n < bits.length; n++)\n\t\t{\n\t\t\tif (bits[n].startsWith('NATREPLACE=')) natReplace = bits[n].substring(11);\n\t\t}\n\n\t\tlines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n\t\tlines.push('M  END');\n\n\t\tlet mdl = new MDLMOLReader(lines.join('\\n'));\n\t\tmdl.parseHeader = false;\n\t\tmdl.parse();\n\n\t\treturn {name, natReplace, mol: mdl.mol};\n\t}\n\n\t// removes surrounding quotes, if any\n\tprivate withoutQuotes(str:string):string\n\t{\n\t\tif (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"')) return str.substring(1, str.length - 1);\n\t\treturn str;\n\t}\n\n\t// takes a line of whitespace-separated stuff and breaks it into pieces\n\tprivate splitWithQuotes(line:string):string[]\n\t{\n\t\tlet segments:string[] = [];\n\n\t\tlet seg = '';\n\t\tlet depth = 0, quote = false;\n\t\tfor (let n = 0; n < line.length; n++)\n\t\t{\n\t\t\tlet ch = line.charAt(n);\n\t\t\tif (ch == ' ' && depth == 0 && !quote)\n\t\t\t{\n\t\t\t\tif (seg.length > 0) segments.push(seg);\n\t\t\t\tseg = '';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tseg += ch;\n\t\t\t\tif (ch == '\"') quote = !quote;\n\t\t\t\telse if (ch == '(' || ch == '[') depth++;\n\t\t\t\telse if (ch == ')' || ch == ']') depth--;\n\t\t\t}\n\t\t}\n\t\tif (seg.length > 0) segments.push(seg);\n\n\t\treturn segments;\n\t}\n\n\t// converts a string of the form \"(sz v1 v2 ...)\" into an array of just the values\n\tprivate unpackList(str:string):number[]\n\t{\n\t\tif (!str.startsWith('(') || !str.endsWith(')')) return null;\n\n\t\tstr = str.substring(1, str.length - 1);\n\t\tlet values:number[] = [];\n\t\tfor (let bit of str.split(' ')) values.push(parseInt(bit));\n\t\tif (values[0] != values.length - 1) return null;\n\t\treturn Vec.remove(values, 0);\n\t}\n\tprivate unpackStrings(str:string):string[]\n\t{\n\t\tif (!str.startsWith('(') || !str.endsWith(')')) return null;\n\n\t\tstr = str.substring(1, str.length - 1);\n\t\tlet values = str.split(' ');\n\t\tif (parseInt(values[0]) != values.length - 1) return null;\n\t\treturn Vec.remove(values, 0);\n\t}\n\n\t// used when an incoming property is designated \"as drawn\"\n\tprivate countRingBonds(atom:number):number\n\t{\n\t\tlet count = 0;\n\t\tfor (let b of this.mol.atomAdjBonds(atom)) if (this.mol.bondInRing(b)) count++;\n\t\treturn count;\n\t}\n\tprivate countSubstitutions(atom:number):number\n\t{\n\t\tlet count = 0;\n\t\tfor (let adj of this.mol.atomAdjList(atom)) if (this.mol.atomElement(adj) != 'H') count++;\n\t\treturn count;\n\t}\n}\n\nexport class MDLSDFReader\n{\n\tpublic ds = new DataSheet();\n\tpublic upcastColumns = true; // if on, tries to decide on column types based on their data values; otherwise leaves as strings\n\n\tprivate pos = 0;\n\tprivate lines:string[];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(strData:string)\n\t{\n\t\tthis.lines = strData.split(/\\r?\\n/);\n\t}\n\n\t// perform the parsing operation, and populate the result fields\n\tpublic parse():DataSheet\n\t{\n\t\tthis.parseStream();\n\t\tif (this.upcastColumns) this.upcastStringColumns();\n\t\treturn this.ds;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\tprivate parseStream():void\n\t{\n\t\tlet ds = this.ds;\n\t\tds.appendColumn('Molecule', DataSheetColumn.Molecule, 'Molecular structure');\n\t\tlet colName = -1;\n\t\tlet entry:string[] = [];\n\n\t\t// read the lines from the SD file, and every time a field is encountered, add it as type \"string\"\n\t\twhile (this.pos < this.lines.length)\n\t\t{\n\t\t\tlet line = this.lines[this.pos++];\n\t\t\tif (!line.startsWith('$$$$')) {entry.push(line); continue;}\n\n\t\t\tlet rn = ds.appendRow();\n\n\t\t\tlet molstr = '';\n\t\t\tlet pos = 0;\n\t\t\twhile (pos < entry.length)\n\t\t\t{\n\t\t\t\tline = entry[pos];\n\t\t\t\tif (line.startsWith('> ')) break;\n\t\t\t\tmolstr += line + '\\n';\n\t\t\t\tpos++;\n\t\t\t\tif (line.startsWith('M\tEND')) break;\n\t\t\t}\n\n\t\t\tlet mol:Molecule = null, name:string = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (molstr.length > 0)\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\t\tmdl.parse();\n\t\t\t\t\tmol = mdl.mol;\n\t\t\t\t\tname = mdl.molName;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\t/*let msg = \"Failed to parse CTAB, row#\" + (rn + 1) + \":\\n\" + molstr;\n\t\t\t\tif (fatalMolFailures) throw new IOException(msg,ex);\n\t\t\t\telse if (reportMolFailures) Util.errmsg(msg, ex);*/\n\t\t\t\t// (leave the molecule null\n\t\t\t}\n\t\t\tif (mol != null) ds.setMolecule(rn, 0, mol);\n\t\t\tif (name)\n\t\t\t{\n\t\t\t\tif (colName < 0) colName = ds.appendColumn('Name', DataSheetColumn.String, 'Molecule name');\n\t\t\t\tds.setString(rn, colName, name);\n\t\t\t}\n\n\t\t\tif (rn == 0 && mol != null)\n\t\t\t{\n\t\t\t\tlet str1 = entry[0], str3 = entry[2];\n\t\t\t\tif (str1.length >= 7 && str1.startsWith('$name='))\n\t\t\t\t{\n\t\t\t\t\tds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n\t\t\t\t}\n\t\t\t\tif (str3.length >= 8 && str3.startsWith('$title='))\n\t\t\t\t{\n\t\t\t\t\tds.title = str3.substring(7);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (; pos + 1 < entry.length; pos += 3)\n\t\t\t{\n\t\t\t\tlet key = entry[pos], val = entry[pos + 1];\n\t\t\t\tif (!key.startsWith('>')) continue;\n\t\t\t\tlet z = key.indexOf('<');\n\t\t\t\tif (z < 0) continue;\n\t\t\t\tkey = key.substring(z + 1);\n\t\t\t\tz = key.indexOf('>');\n\t\t\t\tif (z < 0) continue;\n\t\t\t\tkey = key.substring(0, z);\n\t\t\t\tif (key.length == 0) continue;\n\n\t\t\t\twhile (pos + 2 < entry.length && entry[pos + 2].length > 0)\n\t\t\t\t{\n\t\t\t\t\tval += '\\n' + entry[pos + 2];\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\n\t\t\t\tlet cn = ds.findColByName(key);\n\t\t\t\tif (cn < 0) cn = ds.appendColumn(key, DataSheetColumn.String, '');\n\n\t\t\t\tif (val.length == 0) ds.setToNull(rn, cn);\n\t\t\t\telse ds.setString(rn, cn, val);\n\t\t\t}\n\n\t\t\tentry = [];\n\t\t}\n\n\t\tif (ds.numRows == 0) this.ds = null;\n\t}\n\n\tprivate upcastStringColumns():void\n\t{\n\t\tlet ds = this.ds;\n\t\tfor (let i = 0; i < ds.numCols; i++) if (ds.colType(i) == DataSheetColumn.String)\n\t\t{\n\t\t\tlet allnull = true, allreal = true, allint = true, allbool = true;\n\t\t\tfor (let j = 0; j < ds.numRows; j++)\n\t\t\t{\n\t\t\t\tif (!allreal && !allint && !allbool) break;\n\t\t\t\tif (ds.isNull(j, i)) continue;\n\n\t\t\t\tallnull = false;\n\n\t\t\t\tlet val = ds.getString(j, i);\n\t\t\t\tif (allbool)\n\t\t\t\t{\n\t\t\t\t\tlet lc = val.toLowerCase();\n\t\t\t\t\tif (lc != 'true' && lc != 'false') allbool = false;\n\t\t\t\t}\n\t\t\t\tif (allint)\n\t\t\t\t{\n\t\t\t\t\tlet int = parseInt(val);\n\t\t\t\t\tif (!isFinite(int) || int != parseFloat(val)) allint = false;\n\t\t\t\t}\n\t\t\t\tif (allreal)\n\t\t\t\t{\n\t\t\t\t\tif (!isFinite(parseFloat(val))) allreal = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (allnull) {} // do nothing\n\t\t\telse if (allint) ds.changeColumnType(i, DataSheetColumn.Integer);\n\t\t\telse if (allreal) ds.changeColumnType(i, DataSheetColumn.Real);\n\t\t\telse if (allbool) ds.changeColumnType(i, DataSheetColumn.Boolean);\n\t\t}\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2022 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {ForeignMolecule, ForeignMoleculeTemplateDefn, ForeignMoleculeTransient} from '../mol/ForeignMolecule';\nimport {MDLMOL_VALENCE} from './MDLReader';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {StereoGroup} from '../mol/StereoGroup';\n\n/*\n\tMDL Molfile writer: convert the native structure format to MDL Molfile. Both the older (V2000) and newer (V3000) formats are\n\tsupported. The older V2000 format is recommended as the default, since every toolkit ever created supports a common subset of\n\tits feature set. While the newer V3000 format is well supported, it is not as ubiquitous, and its feature improvements are not\n\tused by most molecules.\n\n\tMDL SDfile writer: including non-molecule fields in collections. The SDfile format is problematic for as many reasons as the\n\tmolecules; the best strategy is to avoid using it whenever possible, but it is so often not.\n*/\n\ninterface Sgroup\n{\n\ttype:string;\n\tname:string;\n\tatoms:number[];\n\n\t// DAT only\n\tvalue?:string;\n\tunit?:string;\n\tquery?:string;\n\n\t// MUL only\n\tparent?:number;\n\n\t// for SCSR templates\n\tbonds?:number[];\n\ttemplateClass?:string;\n\tnatReplace?:string;\n\tattachPoints?:string[];\n}\n\nconst VPFX = 'M  V30 ';\n\nexport class MDLMOLWriter\n{\n\t// options\n\tpublic includeHeader = true; // if on, the 3 line header will be included\n\tpublic includeCounts = true; // if on, the subsequent 1 line of counts will be included (V3000 only, ignored in V2000 mode)\n\tpublic includeEnd = true; // if on, the final M__END will be included\n\tpublic overallStereoAbsolute = true; // from the counts block, overall true=interpret stereo as absolute; false=interpret as relative\n\tpublic enhancedFields = false; // if on, non-standard MDL fields may be added\n\tpublic chargeSeparate = false; // if on, zero bonds will be split out\n\tpublic abbrevSgroups = true; // if on, abbreviations will be written as Sgroups when possible\n\tpublic polymerBlocks = true; // write polymer blocks, if any\n\tpublic molName = ''; // optional name to include in the header (if any)\n\n\t// provide these template definitions if they need to be written out with the molecule\n\tpublic scsrTemplates:ForeignMoleculeTemplateDefn[] = null;\n\n\t// some number of superatom abbreviation groups, there being several types\n\tprivate sgroups:Sgroup[] = [];\n\n\t// content in progress\n\tprivate lines:string[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t}\n\n\t// write out the MDL content (using V2000 format)\n\tpublic write():string\n\t{\n\t\tif (this.includeHeader)\n\t\t{\n\t\t\tthis.lines.push(this.molName);\n\t\t\tthis.lines.push('Generated by WebMolKit');\n\t\t\tthis.lines.push('');\n\t\t}\n\t\tthis.writeCTAB();\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// writes the content using the newer V3000 format\n\tpublic writeV3000():string\n\t{\n\t\tif (this.includeHeader)\n\t\t{\n\t\t\tthis.lines.push(this.molName);\n\t\t\tthis.lines.push('Generated by WebMolKit');\n\t\t\tthis.lines.push('');\n\t\t}\n\t\tthis.writeCTAB3000();\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// writes out V3000 if there is metadata that cannot be represented in the older format, V2000 otherwise\n\tpublic writeEither():string\n\t{\n\t\tlet triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n\t\tif (!triggered) for (let n = 1; n <= this.mol.numBonds; n++)\n\t\t\tif (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {triggered = true; break;}\n\t\tif (triggered) return this.writeV3000(); else return this.write();\n\t}\n\n\tpublic getResult():string\n\t{\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// writes the main block\n   \tprivate writeCTAB():void\n   \t{\n\t\tlet mol = this.mol = this.mol.clone();\n\t\tmol.keepTransient = true;\n\n\t\t// if allowed to write Sgroups, some abbreviations may be retained for the subsequent steps\n\t\tif (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol))\n\t\t{\n\t\t\tif (this.abbrevSgroups)\n\t\t\t\tthis.partialAbbrevExpansion();\n\t\t\telse\n\t\t\t\tMolUtil.expandAbbrevs(mol, true);\n\t\t\tthis.prepareSgroups();\n\t\t}\n\n\t\t// pre-encode atom lists\n\t\tlet atomList1:string[] = [], atomList2:string[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet elements:string[] = null;\n\t\t\tlet logic = 'F';\n\t\t\telements = QueryUtil.queryAtomElements(mol, n);\n\t\t\tif (elements == null) {elements = QueryUtil.queryAtomElementsNot(mol, n); logic = 'T';}\n\t\t\tif (elements == null) continue;\n\n\t\t\tmol.setAtomElement(n, 'L');\n\n\t\t\tlet line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n\t\t\tfor (let el of elements) line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n\t\t\tatomList1.push(line);\n\n\t\t\tline = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n\t\t\tfor (let el of elements) line += this.pad(el, 4);\n\t\t\tatomList2.push(line);\n\t\t}\n\n\t\tthis.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n\t\t\t\t\t\t'  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n\n\t\t// data to record in the following M-block\n\t\tlet chgidx:number[] = [], chgval:number[] = [];\n\t\tlet radidx:number[] = [], radval:number[] = [];\n\t\tlet isoidx:number[] = [], isoval:number[] = [];\n\t\tlet rgpidx:number[] = [], rgpval:number[] = [];\n\t\tlet hydidx:number[] = [], hydval:number[] = [];\n\t\tlet zchidx:number[] = [], zchval:number[] = [];\n\t\tlet zboidx:number[] = [], zboval:number[] = [];\n\t\tlet rbcidx:number[] = [], rbcval:number[] = [];\n\t\tlet subidx:number[] = [], subval:number[] = [];\n\t\tlet unsidx:number[] = [], unsval:number[] = [];\n\n\t\t// export atoms, and make a few notes along the way\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tlet z = mol.is3D() ? mol.atomZ(n) : 0;\n\t\t\tlet line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n\n\t\t\tlet el = mol.atomElement(n);\n\t\t\tlet str = el;\n\t\t\tif (str.length > 3) str = str.substring(0, 3);\n\t\t\tif (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9')\n\t\t\t{\n\t\t\t\trgpidx.push(n);\n\t\t\t\trgpval.push(parseInt(str.substring(1)));\n\t\t\t\tstr = 'R#';\n\t\t\t}\n\t\t\twhile (str.length < 4) str += ' ';\n\t\t\tline += ' ' + str + '0';\n\n\t\t\tlet chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n\t\t\tif (chg >= -3 && chg <= -1) chg = 4 - chg;\n\t\t\telse if (chg == 0 && rad == 2) chg = 4;\n\t\t\telse if (chg >= 1 && chg <= 3) chg = 4 - chg;\n\t\t\telse chg = 0;\n\n\t\t\tlet qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n\t\t\tlet hyd = 0;\n\t\t\tif (Vec.len(qhyd) == 1) hyd = qhyd[0] + 1;\n\n\t\t\tlet val = this.mdlValence(mol, n, 15);\n\n\t\t\tline += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n\n\t\t\tthis.lines.push(line);\n\n\t\t\tif (mol.atomCharge(n) != 0) {chgidx.push(n); chgval.push(mol.atomCharge(n));}\n\t\t\tif (this.enhancedFields)\n\t\t\t{\n\t\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {hydidx.push(n); hydval.push(mol.atomHExplicit(n));}\n\t\t   \t}\n\n\t\t\tif (rad == 1) {radidx.push(n); radval.push(2);}\n\t\t\tif (rad == 2) {radidx.push(n); radval.push(1);}\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {isoidx.push(n); isoval.push(mol.atomIsotope(n));}\n\n\t\t\tlet qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n\t\t\tlet quns = QueryUtil.queryAtomUnsaturated(mol, n);\n\t\t\tif (Vec.len(qrbc) == 1) {rbcidx.push(n); rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);}\n\t\t\tif (Vec.len(qsub) == 1) {subidx.push(n); subval.push(qsub[0] == 0 ? -1 : qsub[0]);}\n\t\t\tif (quns == true) {unsidx.push(n); unsval.push(1);}\n\t\t}\n\n\t\t// export bonds\n\t\tlet maskArom = ForeignMolecule.noteAromaticBonds(mol);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet order = mol.bondOrder(n), type = order;\n\t\t\tlet qbond = Vec.sorted(QueryUtil.queryBondOrders(mol, n) ?? []);\n\t\t\tif (maskArom[n - 1] || Vec.equals(qbond, [-1])) type = 4; // the \"aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [1, 2])) type = 5; // the \"single or double\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 1])) type = 6; // the \"single or aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 2])) type = 7; // the \"double or aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 0, 1, 2, 3])) type = 8; // the \"any\" type\n\t\t\telse if (type > 3) type = 3; // 4-or-higher bonds are not available\n\n\t\t\tlet stereo = mol.bondType(n);\n\t\t\tif (stereo == Molecule.BONDTYPE_NORMAL) {}\n\t\t\telse if (stereo == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tstereo = 1;\n\t\t\t\t//type = 1; ... documentation says that wedges have to be single\n\t\t\t}\n\t\t\telse if (stereo == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tstereo = 6;\n\t\t\t\t//type = 1; ... documentation says that wedges have to be single\n\t\t\t}\n\t\t\telse if (stereo == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tif (type == 1) stereo = 4; else stereo = 3;\n\t\t\t}\n\t\t\telse stereo = 0;\n\n\t\t\tlet line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n\t\t\t\t\t   this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n\t\t\tthis.lines.push(line);\n\n\t\t\tif (this.enhancedFields)\n\t\t\t{\n\t\t\t\tif ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {zboidx.push(n); zboval.push(order);}\n\t\t\t\t// these are for retroactive bond separation, not implemented at the moment\n\t\t\t\t//if (xmol.bondOrder(n) != mol.bondOrder(n)) {zboidx.push(n); zboval.push(xmol.bondOrder(n));}\n\t\t\t}\n\t\t}\n\n\t\tthis.lines.push(...atomList1);\n\t\tthis.lines.push(...atomList2);\n\n\t\t// export the additional blocks\n\t\tthis.writeMBlockPair('CHG', chgidx, chgval);\n\t\tthis.writeMBlockPair('RAD', radidx, radval);\n\t\tthis.writeMBlockPair('ISO', isoidx, isoval);\n\t\tthis.writeMBlockPair('RGP', rgpidx, rgpval);\n\t\tthis.writeMBlockPair('HYD', hydidx, hydval);\n\t\tthis.writeMBlockPair('ZCH', zchidx, zchval);\n\t\tthis.writeMBlockPair('ZBO', zboidx, zboval);\n\t\tthis.writeMBlockPair('RBC', rbcidx, rbcval);\n\t\tthis.writeMBlockPair('SUB', subidx, subval);\n\t\tthis.writeMBlockPair('UNS', unsidx, unsval);\n\n\t\t// write bond artifacts, one line each\n\t\tif (this.enhancedFields)\n\t\t{\n\t\t\tlet artifacts = new BondArtifact(this.mol);\n\t\t\tlet idx = 0;\n\t\t\tfor (let path of artifacts.getResPaths()) this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n\t\t\tfor (let ring of artifacts.getResRings()) this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n\t\t\tfor (let arene of artifacts.getArenes()) this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n\t\t}\n\n\t\t// encode Sgroups\n\t\tlet inSgroup = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let s = 0; s < this.sgroups.length; s++)\n\t\t{\n\t\t\tlet sg = this.sgroups[s];\n\t\t\tfor (let n of sg.atoms) inSgroup[n - 1] = true;\n\n\t\t\tlet sidx = this.intrpad(s + 1, 4);\n\t\t\tthis.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n\t\t\tfor (let n = 0; n < sg.atoms.length; n += 15)\n\t\t\t{\n\t\t\t\tlet sz = Math.min(sg.atoms.length - n, 15);\n\t\t\t\tlet line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n\t\t\t\tfor (let i = 0; i < sz; i++) line += this.intrpad(sg.atoms[n + i], 4);\n\t\t\t\tthis.lines.push(line);\n\t\t\t}\n\t\t\tif (sg.type != 'DAT')\n\t\t\t{\n\t\t\t\tif (sg.name) this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n\t\t\t\tif (sg.templateClass)\n\t\t\t\t{\n\t\t\t\t\tthis.lines.push('M  SCL' + sidx + ' ' + sg.templateClass);\n\t\t\t\t\tif (!sg.name) this.lines.push('M  SDS EXP  1' + sidx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (sg.type == 'MUL')\n\t\t\t{\n\t\t\t\tlet mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n\t\t\t\tfor (let n = 0; n < unit; n += 15)\n\t\t\t\t{\n\t\t\t\t\tlet sz = Math.min(unit - n, 15);\n\t\t\t\t\tlet line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n\t\t\t\t\tfor (let i = 0; i < sz; i++) line += this.intrpad(sg.atoms[n + i], 4);\n\t\t\t\t\tthis.lines.push(line);\n\t\t\t\t}\n\t\t\t\tif (sg.parent > 0) this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n\t\t\t}\n\t\t\tif (sg.type == 'DAT')\n\t\t\t{\n\t\t\t\tthis.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n\t\t\t\tthis.lines.push('M  SED' + sidx + ' ' + sg.value);\n\t\t\t}\n\t\t}\n\n\t\tif (this.polymerBlocks) this.encodePolymerBlocks(this.sgroups.length);\n\n\t\t// export long atom names\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n).length > 2)\n\t\t{\n\t\t\tthis.lines.push('A  ' + this.intrpad(n, 3));\n\t\t\tthis.lines.push(mol.atomElement(n));\n\t\t}\n\n\t\tif (this.includeEnd) this.lines.push('M  END');\n   \t}\n\n\t// writes a specific sub-block, e.g. M__CHG, etc., where each pair of idx/val is a separate entity\n\tprivate writeMBlockPair(token:string, idx:number[], val:number[])\n\t{\n\t\tconst sz = idx.length;\n\t\tfor (let i = 0; i < sz; i += 8)\n\t\t{\n\t\t\tlet count = Math.min(8, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(count, 3);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\n\t// writes a specific sub-block, whereby the master index corresponds to some number of values; these are split over multiple\n\t// lines if necessary\n\tprivate writeMBlockFlat(token:string, idx:number, val:number[])\n\t{\n\t\tconst sz = val.length;\n\t\tfor (let i = 0; i < sz; i += 15)\n\t\t{\n\t\t\tlet count = Math.min(15, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\tprivate writeMBlockFlatIdxFirst(token:string, idx:number, val:number[])\n\t{\n\t\tconst sz = val.length;\n\t\tfor (let i = 0; i < sz; i += 15)\n\t\t{\n\t\t\tlet count = Math.min(15, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\n\t// convenient formatting\n\tprivate intrpad(num:number, sz:number):string\n\t{\n\t\treturn this.rpad(num.toString(), sz);\n\t}\n\tprivate rpad(str:string, sz:number):string\n\t{\n\t\twhile (str.length < sz) str = ' ' + str;\n\t\treturn str;\n\t}\n\tprivate pad(str:string, sz:number):string\n\t{\n\t\twhile (str.length < sz) str += ' ';\n\t\treturn str;\n\t}\n\n\t// figures out the MDL valence override, if any; a return value of 0 means that the calculated default will suffice; if the value\n\t// needs to be explicitly zero, the 'zeroVal' parameter is returned (should be 15 for V2000, -1 for V3000)\n\tprivate mdlValence(mol:Molecule, atom:number, zeroVal:number):number\n\t{\n\t\tlet marked = ForeignMolecule.noteExplicitValence(mol, atom);\n\t\tif (marked != null) return marked > 0 ? marked : zeroVal;\n\n\t\tlet hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n\t\tlet options = MDLMOL_VALENCE[el];\n\n\t\t// if no implicit valence, and no hydrogens: no need\n\t\tif (options == null && hyd == 0) return 0;\n\n\t\tlet chg = mol.atomCharge(atom);\n\t\tlet chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n\t\tlet bondSum = 0;\n\t\tfor (let b of mol.atomAdjBonds(atom)) bondSum += mol.bondOrder(b);\n\t\tlet nativeVal = chgmod + /*mol.atomUnpaired(atom) +*/ hyd + bondSum;\n\n\t\t// if this is consistent with the \"next highest valence option\" (relative to bonds & charge), can leave it unaffected\n\t\tif (options) for (let optVal of options) if (optVal >= chgmod + bondSum)\n\t\t{\n\t\t\tif (optVal == nativeVal) return 0; // it checks out\n\t\t\tbreak;\n\t\t}\n\n\t\t// NOTE: in cases with multiple valence options, like S[2,4,6], it would be possible to leave the valence unmarked\n\t\t// when the previous state is indicated, e.g. for S{val=3} ==> +1 H to get to val=4; or we could just mark the\n\t\t// valence, since the first one is always overwhelmingly the default\n\n\t\tlet val = nativeVal - chgmod;\n\t\treturn val <= 0 || val > 14 ? zeroVal : val;\n\t}\n\n\t// processes the structure so that any non-trivial abbreviations (multiple attachment points/different bond orders) are expanded, and also makes\n\t// sure that any remaining abbreviations have no nesting within them\n\tprivate partialAbbrevExpansion():void\n\t{\n\t\tconst {mol} = this;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tlet frag = MolUtil.getAbbrev(mol, n);\n\t\t\tif (frag == null || mol.atomAdjCount(n) != 1) {MolUtil.clearAbbrev(mol, n); continue;}\n\n\t\t\tif (MolUtil.hasAnyAbbrev(frag))\n\t\t\t{\n\t\t\t\tMolUtil.expandAbbrevs(frag, true);\n\t\t\t\tMolUtil.setAbbrev(mol, n, frag);\n\t\t\t}\n\n\t\t\tlet order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n\t\t\tif (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0])) continue;\n\n\t\t\tMolUtil.expandOneAbbrev(mol, n, true);\n\t\t\tn--;\n\t\t}\n\t}\n\n\t// any remaining abbreviations within the molecule get turned into S-groups\n\tprivate prepareSgroups():void\n\t{\n\t\tconst {mol} = this;\n\n\t\t// note: using -ve atom mapping numbers to disambiguate\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) < 0) mol.setAtomMapNum(n, 0);\n\t\tlet next = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tthis.sgroups.push({type: 'SUP', name: mol.atomElement(n), atoms: null});\n\t\t\tlet mask = MolUtil.expandOneAbbrev(mol, n, true);\n\t\t\tif (mask == null) continue;\n\t\t\tnext--;\n\t\t\tfor (let i = 0; i < mask.length; i++) if (mask[i]) mol.setAtomMapNum(i + 1, next);\n\n\t\t\tn--;\n\t\t}\n\n\t\t// extract the layers one at a time\n\t\tfor (let idx = -1, p = 0; idx >= next; idx--, p++)\n\t\t{\n\t\t\tlet atoms:number[] = [];\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) == idx)\n\t\t\t{\n\t\t\t\tatoms.push(n);\n\t\t\t\tmol.setAtomMapNum(n, 0);\n\t\t\t}\n\t\t\tthis.sgroups[p].atoms = atoms;\n\t\t}\n\n\t\t// also encode foreign-annotated Sgroups\n\t\tfor (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol))\n\t\t{\n\t\t\tlet sg:Sgroup = {type: 'SUP', name: ma.name, atoms: ma.atoms};\n\n\t\t\tlet str = ma.keyval['bonds'];\n\t\t\tif (str) sg.bonds = str.split(' ').map((v) => parseInt(v));\n\n\t\t\tsg.templateClass = ma.keyval['templateClass'] ;\n\t\t\tsg.natReplace = ma.keyval['natReplace'];\n\n\t\t\tstr = ma.keyval['attachPoints'];\n\t\t\tif (str) sg.attachPoints = str.split(' ');\n\n\t\t\tthis.sgroups.push(sg);\n\t\t}\n\t\tfor (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol)) this.sgroups.push({type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms});\n\t\tfor (let dat of ForeignMolecule.noteAllSgroupData(mol)) this.sgroups.push({type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms});\n\n\t\t// whenever a MUL group is subsumed by another, need to name that as the parent\n\t\tfor (let n = 0; n < this.sgroups.length; n++)\n\t\t{\n\t\t\tlet sg = this.sgroups[n];\n\t\t\tif (sg.type != 'MUL') continue;\n\t\t\tlet bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n\t\t\tskip: for (let i = 0; i < this.sgroups.length; i++) if (i != n)\n\t\t\t{\n\t\t\t\tlet look = this.sgroups[i];\n\t\t\t\tif (look.type != 'MUL' || look.atoms.length >= bestSize) continue;\n\t\t\t\tfor (let a of sg.atoms) if (!look.atoms.includes(a)) continue skip;\n\t\t\t\tbestIdx = i;\n\t\t\t\tbestSize = look.atoms.length;\n\t\t\t}\n\t\t\tif (bestIdx >= 0) sg.parent = bestIdx + 1;\n\t\t}\n\t}\n\n\t// use a variant of Sgroups for any polymer blocks\n\tprivate encodePolymerBlocks(idx:number):void\n\t{\n\t\tlet polymers = new PolymerBlock(this.mol);\n\t\tfor (let id of polymers.getIDList())\n\t\t{\n\t\t\tlet unit = polymers.getUnit(id);\n\t\t\tlet sidx = this.intrpad(++idx, 4);\n\t\t\tthis.lines.push('M  STY  1' + sidx + ' SRU');\n\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) this.lines.push('M  SCN  1' + sidx + ' HT ');\n\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) this.lines.push('M  SCN  1' + sidx + ' HH ');\n\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) this.lines.push('M  SCN  1' + sidx + ' EU ');\n\n\t\t\tthis.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n\n\t\t\tlet bonds:number[] = null;\n\t\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\t\tif ((fl1 && !fl2) || (!fl1 && fl2)) bonds = Vec.append(bonds, n);\n\t\t\t}\n\t\t\tif (bonds != null) this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n\n\t\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t\t{\n\t\t\t\tlet bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n\t\t\t\tthis.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n\t\t\t}\n\n\t\t\tthis.lines.push('M  SMT' + sidx + ' n');\n\t\t}\n\t}\n\n\tpublic writeCTAB3000():void\n\t{\n\t\tlet mol = this.mol;\n\n\t\t// if allowed to write Sgroups, some abbreviations may be retained for the subsequent steps\n\t\tif (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol))\n\t\t{\n\t\t\tmol = this.mol = mol.clone();\n\t\t\tmol.keepTransient = true;\n\t\t\tif (this.abbrevSgroups)\n\t\t\t\tthis.partialAbbrevExpansion();\n\t\t\telse\n\t\t\t\tMolUtil.expandAbbrevs(mol, true);\n\t\t\tthis.prepareSgroups();\n\t\t}\n\n\t\tlet sgroupText = this.populateV3000Sgroups();\n\n\t\tif (this.includeCounts) this.lines.push('  0  0  0     0  0            999 V3000');\n\t\tthis.lines.push(VPFX + 'BEGIN CTAB');\n\n\t\tthis.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n\n\t\tthis.lines.push(VPFX + 'BEGIN ATOM');\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet label = mol.atomElement(n);\n\n\t\t\tlet qel = QueryUtil.queryAtomElements(mol, n);\n\t\t\tif (qel != null) label = '[' + qel.join(',') + ']';\n\t\t\telse\n\t\t\t{\n\t\t\t\tqel = QueryUtil.queryAtomElementsNot(mol, n);\n\t\t\t\tif (qel != null) label = 'NOT [' + qel.join(',') + ']';\n\t\t\t}\n\n\t\t\tif (label.includes(' ')) label = `\"${label}\"`;\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tlet z = mol.is3D() ? mol.atomZ(n) : 0;\n\t\t\tlet mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n\t\t\tlet isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n\n\t\t\tlet line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n\n\t\t\tif (chg != 0) line += ' CHG=' + chg;\n\t\t\tif (unp == 1) line += ' RAD=2';\n\t\t\telse if (unp == 2) line += ' RAD=1';\n\t\t\tif (isotope != 0) line += ' MASS=' + isotope;\n\t\t\tif (val != 0) line += ' VAL=' + val;\n\n\t\t\tlet qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n\t\t\tlet quns = QueryUtil.queryAtomUnsaturated(mol, n);\n\t\t\tif (Vec.len(qhyd) == 1) line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n\t\t\tif (Vec.len(qrbc) == 1) line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n\t\t\tif (Vec.len(qsub) == 1) line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n\t\t\tif (quns == true) line += ' UNSAT=1';\n\n\t\t\tfor (let trans of mol.atomTransient(n))\n\t\t\t{\n\t\t\t\tif (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass)) line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n\t\t\t\telse if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID)) line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n\t\t\t\telse if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd))\n\t\t\t\t{\n\t\t\t\t\tlet bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n\t\t\t\t\tline += ' ATTCHORD=' + this.packV3000Strings(bits);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.lines.push(line);\n\t\t}\n\n\t\tthis.lines.push(VPFX + 'END ATOM');\n\n\t\tif (mol.numBonds > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN BOND');\n\n\t\t\tlet maskArom = ForeignMolecule.noteAromaticBonds(mol);\n\t\t\tlet maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol); // (note: dative bond is the default kind of 0-order bond, so only need to note h-bond subclass\n\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\t\tlet order = mol.bondOrder(n), type = order;\n\t\t\t\tlet qbond = Vec.sorted(QueryUtil.queryBondOrders(mol, n) ?? []);\n\t\t\t\tif (maskArom[n - 1] || Vec.equals(qbond, [-1])) type = 4; // the \"aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [1, 2])) type = 5; // the \"single or double\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 1])) type = 6; // the \"single or aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 2])) type = 7; // the \"double or aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 0, 1, 2, 3])) type = 8; // the \"double or aromatic\" type\n\t\t\t\telse if (type == 0)\n\t\t\t\t{\n\t\t\t\t\tif (!maskHBond[n - 1])\n\t\t\t\t\t\ttype = 9; // the \"coordination\" type\n\t\t\t\t\telse\n\t\t\t\t\t\ttype = 10; // the \"H-bond\" type\n\t\t\t\t}\n\t\t\t\telse if (type > 3) type = 3; // 4-or-higher bonds are not available\n\n\t\t\t\tlet stereo = mol.bondType(n);\n\n\t\t\t\tlet line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n\n\t\t\t\tif (stereo == Molecule.BONDTYPE_INCLINED) line += ' CFG=1';\n\t\t\t\telse if (stereo == Molecule.BONDTYPE_DECLINED) line += ' CFG=3';\n\t\t\t\telse if (stereo == Molecule.BONDTYPE_UNKNOWN) line += ' CFG=2';\n\n\t\t\t\tif (order == 0 && !maskHBond[n - 1]) line += ' DISP=COORD';\n\n\t\t\t\tthis.lines.push(line);\n\t\t\t}\n\n\t\t\tthis.lines.push(VPFX + 'END BOND');\n\t\t}\n\n\t\tif (sgroupText.length > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN SGROUP');\n\t\t\tthis.lines.push(...sgroupText);\n\t\t\tthis.lines.push(VPFX + 'END SGROUP');\n\t\t}\n\n\t\tlet collections:string[] = [];\n\n\t\tlet stereoGroup = new StereoGroup(mol);\n\t\tlet racidx = 0, relidx = 0;\n\t\tfor (let atoms of stereoGroup.getRacemicAtoms()) collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n\t\tfor (let atoms of stereoGroup.getRelativeAtoms()) collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n\n\t\tif (collections.length > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN COLLECTION');\n\t\t\tthis.lines.push(...collections);\n\t\t\tthis.lines.push(VPFX + 'END COLLECTION');\n\t\t}\n\n\t\tthis.lines.push(VPFX + 'END CTAB');\n\n\t\tif (Vec.notBlank(this.scsrTemplates)) this.populateSCSRTemplates();\n\n\t\tif (this.includeEnd) this.lines.push('M  END');\n\t}\n\n\tprivate populateV3000Sgroups():string[]\n\t{\n\t\tlet mol = this.mol;\n\t\tlet lines:string[] = [];\n\n\t\tfor (let s = 0; s < this.sgroups.length; s++)\n\t\t{\n\t\t\tlet sg = this.sgroups[s];\n\t\t\tlet sid = lines.length + 1;\n\n\t\t\tlet txt = `${VPFX}${sid} ${sg.type} 0`;\n\t\t\tif (sg.type == 'SUP')\n\t\t\t{\n\t\t\t\ttxt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\tif (sg.bonds) txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n\t\t\t\tif (sg.templateClass)\n\t\t\t\t{\n\t\t\t\t\ttxt += ' CLASS=' + sg.templateClass;\n\t\t\t\t\tif (!sg.name) txt += ' ESTATE=E';\n\t\t\t\t}\n\t\t\t\tif (sg.natReplace) txt += ' NATREPLACE=' + sg.natReplace;\n\t\t\t\tif (sg.attachPoints)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n + 2 < sg.attachPoints.length; n += 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n\t\t\t\t\t\ttxt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (sg.type == 'MUL')\n\t\t\t{\n\t\t\t\tlet mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n\t\t\t\ttxt += ' MULT=' + sg.name;\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\ttxt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n\t\t\t\tif (sg.parent > 0) txt += ' PARENT=' + sg.parent;\n\t\t\t}\n\t\t\telse if (sg.type == 'DAT')\n\t\t\t{\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\ttxt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n\t\t\t\ttxt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n\t\t\t}\n\t\t\tlines.push(txt);\n\t\t}\n\n\t\tif (this.polymerBlocks)\n\t\t{\n\t\t\tlet polymers = new PolymerBlock(mol);\n\t\t\tfor (let id of polymers.getIDList())\n\t\t\t{\n\t\t\t\tlet sid = lines.length + 1;\n\t\t\t\tlet unit = polymers.getUnit(id);\n\n\t\t\t\tlet txt = `${VPFX}${sid} SRU 0`;\n\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(unit.atoms);\n\n\t\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) txt += ' CONNECT=HT';\n\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) txt += ' CONNECT=HH';\n\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) txt += ' CONNECT=EU';\n\n\t\t\t\tlet bonds:number[] = [];\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tlet fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n\t\t\t\t\tif ((fl1 && !fl2) || (!fl1 && fl2)) bonds.push(n);\n\t\t\t\t}\n\t\t\t\tif (bonds.length > 0) txt += ' BONDS=' + this.packV3000List(bonds);\n\n\t\t\t\tif (unit.bondConn != null) txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n\n\t\t\t\tlines.push(txt);\n\t\t\t}\n\t\t}\n\n\t\treturn lines;\n\t}\n\n\tprivate populateSCSRTemplates():void\n\t{\n\t\tthis.lines.push(VPFX + 'BEGIN TEMPLATE');\n\t\tfor (let n = 0; n < this.scsrTemplates.length; n++)\n\t\t{\n\t\t\tvar defn = this.scsrTemplates[n];\n\t\t\tlet line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n\t\t\tif (defn.natReplace) line += ' NATREPLACE=' + defn.natReplace;\n\t\t\tthis.lines.push(line);\n\n\t\t\tvar tmdl = new MDLMOLWriter(defn.mol);\n\t\t\ttmdl.includeHeader = false;\n\t\t\ttmdl.includeCounts = false;\n\t\t\ttmdl.includeEnd = false;\n\t\t\tlet molfile = tmdl.writeV3000();\n\t\t\tfor (line of molfile.trimEnd().split('\\n')) this.lines.push(line);\n\t\t}\n\t\tthis.lines.push(VPFX + 'END TEMPLATE');\n\t}\n\n\tprivate packV3000List(values:number[]):string\n\t{\n\t\tlet str = '(' + values.length;\n\t\tfor (let v of values) str += ' ' + v;\n\t\treturn str + ')';\n\t}\n\tprivate packV3000Strings(values:string[]):string\n\t{\n\t\tlet str = '(' + values.length;\n\t\tfor (let v of values) str += ' ' + v;\n\t\treturn str + ')';\n\t}\n}\n\nexport class MDLSDFWriter\n{\n\t// options\n\tpublic enhancedFields = true; // if on, non-standard MDL fields may be added\n\tpublic chargeSeparate = false; // if on, zero bonds will be split out\n\tpublic abbrevSgroups = true; // if on, abbreviations will be written as Sgroups when possible\n\n\t// content in progress\n\tprivate lines:string[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(public ds:DataSheet)\n\t{\n\t}\n\n\t// write out the MDL content\n\tpublic write():string\n\t{\n\t\tlet ds = this.ds, lines = this.lines;\n\t\tlet colMol = this.ds.firstColOfType(DataSheetColumn.Molecule);\n\n\t\tfor (let i = 0; i < ds.numRows; i++)\n\t\t{\n\t\t\tlet mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n\t\t\tif (mol != null /*MolUtil.notBlank(mol)*/)\n\t\t\t{\n\t\t\t\tlet wtr = new MDLMOLWriter(mol);\n\t\t\t\twtr.enhancedFields = this.enhancedFields;\n\t\t\t\twtr.chargeSeparate = this.chargeSeparate;\n\t\t\t\twtr.abbrevSgroups = this.abbrevSgroups;\n\t\t\t\tlet molstr = wtr.write();\n\t\t\t\tlines.push(molstr);\n\t\t\t}\n\n\t\t\tfor (let j = 0; j < ds.numCols; j++) if (j != colMol && ds.notNull(i, j))\n\t\t\t{\n\t\t\t\tlet ct = ds.colType(j);\n\t\t\t\tlet val = '';\n\t\t\t\tif (ct == DataSheetColumn.String) val = ds.getString(i, j);\n\t\t\t\telse if (ct == DataSheetColumn.Integer) val = ds.getInteger(i, j).toString();\n\t\t\t\telse if (ct == DataSheetColumn.Real) val = ds.getReal(i, j).toString();\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) val = ds.getBoolean(i, j) ? 'true' : 'false';\n\n\t\t\t\tif (val != '')\n\t\t\t\t{\n\t\t\t\t\tlines.push('> <' + ds.colName(j) + '>');\n\t\t\t\t\tlines.push(val);\n\t\t\t\t\tlines.push('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlines.push('$$$$');\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tpublic getResult():string\n\t{\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// ----------------- private methods -----------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MDLMOLReader} from './MDLReader';\nimport {MDLMOLWriter} from './MDLWriter';\nimport {Molecule} from '../mol/Molecule';\n\n/*\n\tSerialisation and deserialisation utilities for the Molecule object.\n\n\tNote that the native format is entirely lossless. Other molecule formats, such as MDL MOL, are reasonably high fidelity for\n\tmost common molecules, but there are quite a few edge cases.\n*/\n\n// encode string for Elements format\nconst ESCAPED_CHARS = '\\n\\t\\\\,=';\nfunction escape(str:string):string\n{\n\tlet buff:string = null; // rebuild the string only if it has escaped characters\n\n\tfor (let n = 0; n < str.length; n++)\n\t{\n\t\tlet ch = str.charAt(n);\n\t\tlet escape = ESCAPED_CHARS.includes(ch), ctrl = ch.charCodeAt(0) < 32;\n\n\t\tif (buff == null && (escape || ctrl))\n\t\t{\n\t\t\tbuff = str.substring(0, n);\n\t\t}\n\t\tif (escape)\n\t\t{\n\t\t\tif (ch == '\\n') buff += '\\\\n';\n\t\t\telse if (ch == '\\t') buff += '\\\\t';\n\t\t\telse buff += '\\\\' + ch;\n\t\t}\n\t\telse if (ctrl) {} // non-printable outside of the escape list are filtered out (e.g. \\r)\n\t\telse if (buff != null) buff += ch;\n\t}\n\n\treturn buff ?? str;\n}\n\nfunction writeKeyVals(keyvals:string[]):string\n{\n\tlet str = '';\n\n\t// write out all the single-line entries, and stash multiline entries to be processed afterward\n\tlet multiline:string[] = [];\n\tfor (let kv of keyvals)\n\t{\n\t\tif (!kv.includes('\\n'))\n\t\t\tstr += ',' + escape(kv);\n\t\telse\n\t\t\tmultiline.push(kv);\n\t}\n\n\tstr += '\\n';\n\n\tfor (let kv of multiline)\n\t{\n\t\tlet lines = kv.trimEnd().split('\\n');\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tstr += `${n == 0 ? '.' : ':'}${lines[n]}\\n`;\n\t\t}\n\t}\n\n\treturn str;\n}\n\ninterface Chunk {str:string, pos:number}\nfunction readNextChunk(line:string, pos:number, term:string, mandatory:boolean)\n{\n\tlet end = pos, sz = line.length;\n\tif (pos >= sz)\n\t{\n\t\tif (mandatory) throw new Error('Molecule missing line fragment');\n\t\treturn null;\n\t}\n\n\tlet escaped = false;\n\twhile (end < sz)\n\t{\n\t\tlet ch = line.charAt(end);\n\t\tif (ch == '\\\\')\n\t\t{\n\t\t\tif (end == sz - 1) throw new Error('Escape character \\\\ at end of line');\n\t\t\tescaped = true;\n\t\t\tend += 2;\n\t\t}\n\t\telse if (ch == term) break;\n\t\telse end++;\n\t}\n\n\tif (!escaped) return {str: line.substring(pos, end), pos: end};\n\n\tvar str = '';\n\tfor (let n = pos; n < end; n++)\n\t{\n\t\tlet ch = line.charAt(n);\n\t\tif (ch == '\\\\')\n\t\t{\n\t\t\tch = line.charAt(++n);\n\t\t\tif (ch == 'n') str += '\\n';\n\t\t\telse if (ch == 't') str += '\\t';\n\t\t\telse str += ch;\n\t\t}\n\t\telse str += ch;\n\t}\n\treturn {str, pos: end};\n}\n\nexport class MoleculeStream\n{\n\tpublic static formatV2Elements = false; // switch this on to use the newer Elements serialisation, rather than SketchEl\n\n\t// tries to read a format-unknown molecule, with whatever tools are currently available\n\tpublic static readUnknown(strData:string):Molecule\n\t{\n\t\t// see if it's a JSON-encoded SketchEl string\n\t\tif (strData.startsWith('\"'))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet jsonStr = JSON.parse(strData);\n\t\t\t\tif (jsonStr && typeof jsonStr == 'string')\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mol = MoleculeStream.readNative(jsonStr);\n\t\t\t\t\t\tif (mol) return mol;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {}\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mol = MoleculeStream.readMDLMOL(jsonStr);\n\t\t\t\t\t\tif (mol) return mol;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (ex) {}\n\t\t}\n\n\t\tlet mol = MoleculeStream.readNative(strData);\n\t\tif (mol) return mol;\n\t\ttry {mol = MoleculeStream.readMDLMOL(strData);}\n\t\tcatch (e) {}\n\t\t// (... add others as available ...)\n\t\treturn mol;\n\t}\n\n\t// static method: reads in a string that is presumed to be in SketchEl format, and returns a fully instantiated Molecule; returns\n\t// null if anything went wrong\n\tpublic static readNative(strData:string):Molecule\n\t{\n\t\tif (strData.startsWith('SketchEl!')) return this.readNativeLegacy(strData);\n\n\t\tlet mol = new Molecule();\n\t\tmol.keepTransient = true;\n\n\t\tlet lines = strData.split(/\\r?\\n/);\n\n\t\tlet match = lines[0].match(/^Elements\\!\\((\\d+),(\\d+)\\)$/);\n\t\tif (!match) return null; //throw new Error('Not an Elements molecule file.');\n\n\t\tlet numAtoms = parseInt(match[1]), numBonds = parseInt(match[2]);\n\t\tif (!(numAtoms >= 0)) throw new Error(`Invalid atom count: ${match[1]}`);\n\t\tif (!(numBonds >= 0)) throw new Error(`Invalid bond count: ${match[2]}`);\n\n\t\tconst MSG_PREMATURE = 'Molecule atom content ends prematurely';\n\t\tconst MSG_UNEXPECTED = 'Molecule unexpected end tag';\n\n\t\tconst parseIntHard = (str:string):number =>\n\t\t{\n\t\t\tlet v = parseInt(str);\n\t\t\tif (Number.isNaN(v)) throw new Error(`Malformed integer: ${str}`);\n\t\t\treturn v;\n\t\t};\n\t\tconst parseFloatHard = (str:string):number =>\n\t\t{\n\t\t\tlet v = parseFloat(str);\n\t\t\tif (Number.isNaN(v)) throw new Error(`Malformed float: ${str}`);\n\t\t\treturn v;\n\t\t};\n\n\t\tconst applyAtomProperty = (atom:number, str:string):void =>\n\t\t{\n\t\t\tif (!str) return;\n\t\t\tlet pfx = str.charAt(0);\n\t\t\tif (pfx == 'z') mol.setAtomZ(atom, parseFloatHard(str.substring(1)));\n\t\t\telse if (pfx == 'c') mol.setAtomCharge(atom, parseIntHard(str.substring(1)));\n\t\t\telse if (pfx == 'u') mol.setAtomUnpaired(atom, parseIntHard(str.substring(1)));\n\t\t\telse if (pfx == 'h') mol.setAtomHExplicit(atom, parseIntHard(str.substring(1)));\n\t\t\telse if (pfx == 'i') mol.setAtomIsotope(atom, parseIntHard(str.substring(1)));\n\t\t\telse if (pfx == 'm') mol.setAtomMapNum(atom, parseIntHard(str.substring(1)));\n\t\t\telse if (pfx == 'y') mol.appendAtomTransient(atom, str);\n\t\t\telse mol.appendAtomExtra(atom, str);\n\t\t};\n\n\t\tconst applyBondProperty = (bond:number, str:string):void =>\n\t\t{\n\t\t\tif (!str) return;\n\t\t\tlet pfx = str.charAt(0);\n\t\t\tif (pfx == 'i') mol.setBondType(bond, Molecule.BONDTYPE_INCLINED);\n\t\t\telse if (pfx == 'd') mol.setBondType(bond, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (pfx == 'u') mol.setBondType(bond, Molecule.BONDTYPE_UNKNOWN);\n\t\t\telse if (pfx == 'y') mol.appendBondTransient(bond, str);\n\t\t\telse mol.appendBondExtra(bond, str);\n\t\t};\n\n\t\tlet lnum = 1;\n\n\t\tfor (let n = 1; n <= numAtoms; n++)\n\t\t{\n\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\n\t\t\tlet chunkEl = readNextChunk(lines[lnum], 0, '=', true);\n\t\t\tlet chunkX = readNextChunk(lines[lnum], chunkEl.pos + 1, ',', true);\n\t\t\tlet chunkY = readNextChunk(lines[lnum], chunkX.pos + 1, ',', true);\n\n\t\t\tlet x = parseFloatHard(chunkX.str), y = parseFloatHard(chunkY.str);\n\t\t\tmol.addAtom(chunkEl.str, x, y);\n\n\t\t\tlet pos = chunkY.pos + 1;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tvar chunk = readNextChunk(lines[lnum], pos, ',', false);\n\t\t\t\tif (chunk == null) break;\n\t\t\t\tapplyAtomProperty(n, chunk.str);\n\t\t\t\tpos = chunk.pos + 1;\n\t\t\t}\n\n\t\t\tlnum++;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\t\t\t\tif (lines[lnum] == '!End')\n\t\t\t\t{\n\t\t\t\t\tif (n == numAtoms && numBonds == 0) break; // this is where we expect it\n\t\t\t\t\tthrow new Error(MSG_UNEXPECTED);\n\t\t\t\t}\n\t\t\t\tif (!lines[lnum].startsWith('.')) break;\n\n\t\t\t\tvar buff = lines[lnum].substring(1);\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tlnum++;\n\t\t\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\t\t\t\t\tif (!lines[lnum].startsWith(':')) break;\n\t\t\t\t\tbuff += '\\n' + lines[lnum].substring(1);\n\t\t\t\t}\n\t\t\t\tapplyAtomProperty(n, buff);\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 1; n <= numBonds; n++)\n\t\t{\n\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\n\t\t\tvar chunkFrom = readNextChunk(lines[lnum], 0, '-', true);\n\t\t\tvar chunkTo = readNextChunk(lines[lnum], chunkFrom.pos + 1, '=', true);\n\t\t\tvar chunkOrder = readNextChunk(lines[lnum], chunkTo.pos + 1, ',', true);\n\n\t\t\tlet bfr = parseIntHard(chunkFrom.str), bto = parseIntHard(chunkTo.str), order = parseIntHard(chunkOrder.str);\n\t\t\tif (bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms || order < 0 || order > 4) throw new Error('Invalid bond specification');\n\t\t\tmol.addBond(bfr, bto, order);\n\t\t\tlet pos = chunkOrder.pos + 1;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tvar chunk = readNextChunk(lines[lnum], pos, ',', false);\n\t\t\t\tif (chunk == null) break;\n\t\t\t\tapplyBondProperty(n, chunk.str);\n\t\t\t\tpos = chunk.pos + 1;\n\t\t\t}\n\n\t\t\tlnum++;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\t\t\t\tif (lines[lnum] == '!End')\n\t\t\t\t{\n\t\t\t\t\tif (n == numBonds) break; // this is where we expect it\n\t\t\t\t\tthrow new Error(MSG_UNEXPECTED);\n\t\t\t\t}\n\t\t\t\tif (!lines[lnum].startsWith('.')) break;\n\n\t\t\t\tlet buff = lines[lnum].substring(1);\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tlnum++;\n\t\t\t\t\tif (!lines[lnum]) throw new Error(MSG_PREMATURE);\n\t\t\t\t\tif (!lines[lnum].startsWith(':')) break;\n\t\t\t\t\tbuff += '\\n' + lines[lnum].substring(1);\n\t\t\t\t}\n\t\t\t\tapplyBondProperty(n, buff);\n\t\t\t}\n\t\t}\n\n\t\tif (lines[lnum] != '!End') throw new Error('Molecule end tag missing');\n\n\t\tmol.keepTransient = false;\n\t\treturn mol;\n\t}\n\n\tpublic static readNativeLegacy(strData:string):Molecule\n\t{\n\t\tlet mol = new Molecule();\n\t\tmol.keepTransient = true;\n\n\t\tlet lines = strData.split(/\\r?\\n/);\n\t\tif (lines.length < 2) return null; // cannot be valid\n\n\t\t// special deal: a clipboard hack that glues together MDL+SketchEl can be easily handled\n\t\tif (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0)\n\t\t{\n\t\t\tlet i = strData.indexOf('SketchEl!');\n\t\t\tif (i < 0) return null;\n\t\t\tlines = strData.substring(i).split(/r?\\n/);\n\t\t}\n\n\t\t// opening and closing lines\n\t\tlet hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n\t\tif (!hdr) return null;\n\t\tlet numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n\t\tif (lines.length < 2 + numAtoms + numBonds) return null;\n\t\tif (!lines[1 + numAtoms + numBonds].match(/^!End/)) return null;\n\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tlet bits = lines[1 + n].split(/[=,;]/);\n\t\t\tlet num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n\t\t\tlet extra:string[] = [], trans:string[] = [];\n\t\t\tfor (let i = 5; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet ch = bits[i].charAt(0);\n\t\t\t\tif (bits[i].charAt(0) == 'i') {} // ignore\n\t\t\t\telse if (bits[i].charAt(0) == 'e') mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'm') mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'n') mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'x') extra.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'y') trans.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'z') {mol.setAtomZ(num, parseFloat(bits[i].substring(1))); mol.setIs3D(true);}\n\t\t\t\telse extra.push(MoleculeStream.skUnescape(bits[i])); // preserve unrecognised\n\t\t\t}\n\t\t\tmol.setAtomExtra(num, extra);\n\t\t\tmol.setAtomTransient(num, trans);\n\t\t}\n\t\tfor (let n = 0; n < numBonds; n++)\n\t\t{\n\t\t\tlet bits = lines[1 + numAtoms + n].split(/[=,]/);\n\t\t\tlet frto = bits[0].split('-');\n\t\t\tlet bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n\t\t\tif (bfr == bto) continue; // silent trimming\n\n\t\t\tlet num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n\t\t\tlet extra = new Array(), trans = new Array();\n\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet ch = bits[i].charAt(0);\n\t\t\t\tif (bits[i].charAt(0) == 'x') extra.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'y') trans.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse extra.push(MoleculeStream.skUnescape(bits[i])); // preserve unrecognised\n\t\t\t}\n\t\t\tmol.setBondExtra(num, extra);\n\t\t\tmol.setBondTransient(num, trans);\n\t\t}\n\n\t\tmol.keepTransient = false;\n\t\treturn mol;\n\t}\n\n\t// static method: converts a molecule into a string which represents it using the SketchEl format\n\tpublic static writeNative(mol:Molecule):string\n\t{\n\t\tif (!this.formatV2Elements) return this.writeNativeLegacy(mol);\n\n\t\tlet bits:string[] = [`Elements!(${mol.numAtoms},${mol.numBonds})\\n`];\n\n\t\tconst roundedNumber = (v:number):string =>\n\t\t{\n\t\t\treturn (Math.round(v * 1E4) * 1E-4).toFixed(4);\n\t\t};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet el = mol.atomElement(n), x = roundedNumber(mol.atomX(n)), y = roundedNumber(mol.atomY(n));\n\t\t\tbits.push(`${escape(el)}=${x},${y}`);\n\n\t\t\tlet keyvals:string[] = [];\n\n\t\t\tif (mol.is3D()) keyvals.push(`z${roundedNumber(mol.atomZ(n))}`);\n\n\t\t\tlet chg = mol.atomCharge(n), unp = mol.atomUnpaired(n), hyd = mol.atomHExplicit(n), iso = mol.atomIsotope(n), map = mol.atomMapNum(n);\n\t\t\tif (chg != 0) keyvals.push(`c${chg}`);\n\t\t\tif (unp != 0) keyvals.push(`u${unp}`);\n\t\t\tif (hyd != Molecule.HEXPLICIT_UNKNOWN) keyvals.push(`h${hyd}`);\n\t\t\tif (iso != Molecule.ISOTOPE_NATURAL) keyvals.push(`i${iso}`);\n\t\t\tif (map > 0) keyvals.push(`m${map}`);\n\n\t\t\tkeyvals.push(...mol.atomExtra(n));\n\t\t\tkeyvals.push(...mol.atomTransient(n));\n\n\t\t\tbits.push(writeKeyVals(keyvals));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n), order = mol.bondOrder(n);\n\t\t\tbits.push(`${bfr}-${bto}=${order}`);\n\n\t\t\tlet keyvals:string[] = [];\n\n\t\t\tlet typ = mol.bondType(n);\n\t\t\tif (typ == Molecule.BONDTYPE_INCLINED) keyvals.push('i');\n\t\t\telse if (typ == Molecule.BONDTYPE_DECLINED) keyvals.push('d');\n\t\t\telse if (typ == Molecule.BONDTYPE_UNKNOWN) keyvals.push('u');\n\n\t\t\tkeyvals.push(...mol.bondExtra(n));\n\t\t\tkeyvals.push(...mol.bondTransient(n));\n\n\t\t\tbits.push(writeKeyVals(keyvals));\n\t\t}\n\n\t\tbits.push('!End\\n');\n\t\treturn bits.join('');\n\t}\n\n\tpublic static writeNativeLegacy(mol:Molecule):string\n\t{\n\t\tlet ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n\t\t\tlet hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n\t\t\tret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n\t\t\tif (mol.is3D()) ret += ',z' + mol.atomZ(n);\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) ret += ',m' + mol.atomIsotope(n);\n\t\t\tif (mol.atomMapNum(n) > 0) ret += ',n' + mol.atomMapNum(n);\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n\t\t\tret += '\\n';\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n\t\t\tret += '\\n';\n\t\t}\n\n\t\tret += '!End\\n';\n\t\treturn ret;\n\t}\n\n\t// parses a string that is expected to be using MDL Molfile format, and turns it into a molecule; or null if\n\tpublic static readMDLMOL(strData:string):Molecule\n\t{\n\t\tlet src = new MDLMOLReader(strData);\n\t\tsrc.parseHeader = true;\n\t\tsrc.parse();\n\t\treturn src.mol;\n\t}\n\n\t// converts the molecule to MDL Molfile format, using default options; see the MDLMOLWriter class for finer control\n\tpublic static writeMDLMOL(mol:Molecule):string\n\t{\n\t\treturn new MDLMOLWriter(mol).write();\n\t}\n\n\t// static method: decodes a string from a sketchel field\n\tpublic static skUnescape(str:string):string\n\t{\n\t\tlet ret = '', match:RegExpMatchArray;\n\t\twhile (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/))\n\t\t{\n\t\t\tret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n\t\t\tstr = match[3];\n\t\t}\n\t\treturn ret + str;\n\t}\n\n\t// static method: makes a string safe for inclusion as a SketchEl field\n\tpublic static skEscape(str:string):string\n\t{\n\t\tlet ret = '';\n\t\tfor (let n = 0; n < str.length; n++)\n\t\t{\n\t\t\tlet ch = str.charAt(n), code = str.charCodeAt(n);\n\t\t\tif (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=')\n\t\t\t{\n\t\t\t\tlet hex = (code & 0xFFFF).toString(16).toUpperCase();\n\t\t\t\tret += '\\\\';\n\t\t\t\tfor (let i = 4 - hex.length; i > 0; i--) ret += '0';\n\t\t\t\tret += hex;\n\t\t\t}\n\t\t\telse ret += ch;\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// internal utility for writing SketchEl extra/transient content\n\tpublic static skEncodeExtra(extra:string[]):string\n\t{\n\t\tlet ret = '';\n\t\tfor (let n = 0; n < extra.length; n++) ret += ',' + MoleculeStream.skEscape(extra[n]);\n\t\treturn ret;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box} from '../util/Geom';\nimport {deepClone} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {MoleculeStream} from '../io/MoleculeStream';\n\n/*\n\tA dynamic representation of a molecule, which is analogous to the com.mmi.core.mol.Molecule class.\n\n\tThe molecule representation is conveniently interconvertible with the SketchEl format, which is the \"string\"\n\trepresentation.\n*/\n\nexport class Atom\n{\n\tpublic element:string;\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic charge:number;\n\tpublic unpaired:number;\n\tpublic isotope:number;\n\tpublic hExplicit:number;\n\tpublic mapNum:number;\n\tpublic extra:string[];\n\tpublic transient:string[];\n}\n\nexport class Bond\n{\n\tpublic from:number;\n\tpublic to:number;\n\tpublic order:number;\n\tpublic type:number;\n\tpublic extra:string[];\n\tpublic transient:string[];\n}\n\nexport class Molecule\n{\n\tprivate atoms:Atom[] = [];\n\tprivate bonds:Bond[] = [];\n\tprivate hasZCoord = false;\n\n\tpublic keepTransient = false;\n\tprivate hasTransient = false;\n\n\t// cached properties: note that these are treated as shallow copies: read-only or rebuild\n\tprivate graph:number[][] = null;\n\tprivate graphBond:number[][] = null;\n\tprivate ringID:number[] = null;\n\tprivate compID:number[] = null;\n\tprivate ring3:number[][] = null;\n\tprivate ring4:number[][] = null;\n\tprivate ring5:number[][] = null;\n\tprivate ring6:number[][] = null;\n\tprivate ring7:number[][] = null;\n\n\tpublic static IDEALBOND = 1.5;\n\tpublic static HEXPLICIT_UNKNOWN = -1;\n\tpublic static ISOTOPE_NATURAL = 0;\n\tpublic static BONDTYPE_NORMAL = 0;\n\tpublic static BONDTYPE_INCLINED = 1;\n\tpublic static BONDTYPE_DECLINED = 2;\n\tpublic static BONDTYPE_UNKNOWN = 3;\n\n\tpublic static HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\n\tpublic static HYVALENCE_VAL = [4, 3, 2, 2, 3];\n\n\t// recommended prefix for extra/transient\n\tpublic static PREFIX_EXTRA = 'x';\n\tpublic static PREFIX_TRANSIENT = 'y';\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic clone():Molecule\n\t{\n\t\tlet dup = new Molecule();\n\t\tdup.atoms = deepClone(this.atoms);\n\t\tdup.bonds = deepClone(this.bonds);\n\t\tdup.hasZCoord = this.hasZCoord;\n\t\tdup.keepTransient = this.keepTransient;\n\t\tdup.hasTransient = this.hasTransient;\n\t\tdup.graph = this.graph;\n\t\tdup.graphBond = this.graphBond;\n\t\tdup.ringID = this.ringID;\n\t\tdup.compID = this.compID;\n\t\tdup.ring3 = this.ring3;\n\t\tdup.ring4 = this.ring4;\n\t\tdup.ring5 = this.ring5;\n\t\tdup.ring6 = this.ring6;\n\t\tdup.ring7 = this.ring7;\n\t\treturn dup;\n\t}\n\tpublic static fromString(strData:string):Molecule {return MoleculeStream.readNative(strData);}\n\tpublic toString():string {return MoleculeStream.writeNative(this);}\n\n\t// takes the indicated molecular fragment and appends it to the end of the current molecule, with order preserved\n\tpublic append(frag:Molecule):void\n\t{\n\t\tlet base = this.atoms.length;\n\t\tfor (let n = 1; n <= frag.numAtoms; n++)\n\t\t{\n\t\t\tlet num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n\t\t\tthis.setAtomIsotope(num, frag.atomIsotope(n));\n\t\t\tthis.setAtomHExplicit(num, frag.atomHExplicit(n));\n\t\t\tthis.setAtomMapNum(num, frag.atomMapNum(n));\n\t\t\tthis.setAtomExtra(num, frag.atomExtra(n));\n\t\t\tthis.setAtomTransient(num, frag.atomTransient(n));\n\t\t}\n\t\tfor (let n = 1; n <= frag.numBonds; n++)\n\t\t{\n\t\t\tlet num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n\t\t\tthis.setBondExtra(num, frag.bondExtra(n));\n\t\t\tthis.setBondTransient(num, frag.bondTransient(n));\n\t\t}\n\t\tthis.trashTransient();\n\t}\n\n\tpublic get numAtoms():number {return this.atoms.length;}\n\n\t// fetches the atom definition: this should be treated as read-only\n\tpublic getAtom(idx:number):Atom\n\t{\n\t\tif (idx < 1 || idx > this.atoms.length)\n\t\t\tthrow new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n\t\treturn this.atoms[idx - 1];\n\t}\n\n\tpublic atomElement(idx:number):string {return this.getAtom(idx).element;}\n\tpublic atomX(idx:number):number {return this.getAtom(idx).x;}\n\tpublic atomY(idx:number):number {return this.getAtom(idx).y;}\n\tpublic atomCharge(idx:number):number {return this.getAtom(idx).charge;}\n\tpublic atomUnpaired(idx:number):number {return this.getAtom(idx).unpaired;}\n\tpublic atomIsotope(idx:number):number {return this.getAtom(idx).isotope;}\n\tpublic atomHExplicit(idx:number):number {return this.getAtom(idx).hExplicit;}\n\tpublic atomMapNum(idx:number):number {return this.getAtom(idx).mapNum;}\n\tpublic atomExtra(idx:number):string[] {return this.getAtom(idx).extra.slice(0);}\n\tpublic atomTransient(idx:number):string[] {return this.getAtom(idx).transient.slice(0);}\n\n\tpublic get numBonds():number {return this.bonds.length;}\n\n\t// fetches the atom definition: this should be treated as read-only\n\tpublic getBond(idx:number):Bond\n\t{\n\t\tif (idx < 1 || idx > this.bonds.length)\n\t\t\tthrow new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n\t\treturn this.bonds[idx - 1];\n\t}\n\n\tpublic bondFrom(idx:number):number {return this.getBond(idx).from;}\n\tpublic bondTo(idx:number):number {return this.getBond(idx).to;}\n\tpublic bondOrder(idx:number):number {return this.getBond(idx).order;}\n\tpublic bondType(idx:number):number {return this.getBond(idx).type;}\n\tpublic bondExtra(idx:number):string[] {return this.getBond(idx).extra.slice(0);}\n\tpublic bondTransient(idx:number):string[] {return this.getBond(idx).transient.slice(0);}\n\tpublic bondFromTo(idx:number):number[] {let b = this.getBond(idx); return [b.from, b.to];}\n\n\tpublic addAtom(element:string, x:number, y:number, charge:number = 0, unpaired:number = 0):number\n\t{\n\t\tlet a = new Atom();\n\t\ta.element = element;\n\t\ta.x = x;\n\t\ta.y = y;\n\t\ta.charge = charge;\n\t\ta.unpaired = unpaired;\n\t\ta.isotope = Molecule.ISOTOPE_NATURAL;\n\t\ta.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n\t\ta.mapNum = 0;\n\t\ta.extra = [];\n\t\ta.transient = [];\n\t\tthis.atoms.push(a);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t\treturn this.atoms.length;\n\t}\n\n\tpublic setAtomElement(idx:number, element:string):void\n\t{\n\t\tthis.getAtom(idx).element = element;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomPos(idx:number, x:number, y:number, z?:number):void\n\t{\n\t\tlet a = this.getAtom(idx);\n\t\ta.x = x;\n\t\ta.y = y;\n\t\ta.z = z == null ? 0 : z;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomX(idx:number, x:number):void\n\t{\n\t\tthis.getAtom(idx).x = x;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomY(idx:number, y:number):void\n\t{\n\t\tthis.getAtom(idx).y = y;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomCharge(idx:number, charge:number):void\n\t{\n\t\tthis.getAtom(idx).charge = charge;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomUnpaired(idx:number, unpaired:number):void\n\t{\n\t\tthis.getAtom(idx).unpaired = unpaired;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomIsotope(idx:number, isotope:number):void\n\t{\n\t\tthis.getAtom(idx).isotope = isotope;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomHExplicit(idx:number, hExplicit:number):void\n\t{\n\t\tthis.getAtom(idx).hExplicit = hExplicit;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomMapNum(idx:number, mapNum:number):void\n\t{\n\t\tthis.getAtom(idx).mapNum = mapNum;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomExtra(idx:number, extra:string[]):void\n\t{\n\t\tthis.getAtom(idx).extra = extra.slice(0);\n\t}\n\tpublic setAtomTransient(idx:number, transi:string[]):void\n\t{\n\t\tthis.getAtom(idx).transient = transi.slice(0);\n\t\tif (transi.length > 0) this.hasTransient = true;\n\t}\n\n\tpublic swapAtoms(a1:number, a2:number):void\n\t{\n\t\tlet a = this.atoms[a1 - 1];\n\t\tthis.atoms[a1 - 1] = this.atoms[a2 - 1];\n\t\tthis.atoms[a2 - 1] = a;\n\n\t\tfor (let n = 0; n < this.bonds.length; n++)\n\t\t{\n\t\t\tlet b = this.bonds[n];\n\t\t\tif (b.from == a2) b.from = a1; else if (b.from == a1) b.from = a2;\n\t\t\tif (b.to == a2) b.to = a1; else if (b.to == a1) b.to = a2;\n\t\t}\n\n\t\tthis.trashGraph();\n\t}\n\n\tpublic addBond(from:number, to:number, order:number, type:number = Molecule.BONDTYPE_NORMAL):number\n\t{\n\t\tlet b = new Bond();\n\t\tb.from = from;\n\t\tb.to = to;\n\t\tb.order = order;\n\t\tb.type = type;\n\t\tb.extra = [];\n\t\tb.transient = [];\n\t\tthis.bonds.push(b);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t\treturn this.bonds.length;\n\t}\n\n\tpublic setBondFrom(idx:number, bfr:number):void\n\t{\n\t\tthis.getBond(idx).from = bfr;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondTo(idx:number, to:number):void\n\t{\n\t\tthis.getBond(idx).to = to;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondFromTo(idx:number, bfr:number, bto:number):void\n\t{\n\t\tthis.getBond(idx).from = bfr;\n\t\tthis.getBond(idx).to = bto;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondOrder(idx:number, order:number):void\n\t{\n\t\tthis.getBond(idx).order = order;\n\t\tthis.trashTransient();\n\t}\n\tpublic setBondType(idx:number, type:number):void\n\t{\n\t\tthis.getBond(idx).type = type;\n\t\tthis.trashTransient();\n\t}\n\tpublic setBondExtra(idx:number, extra:string[]):void\n\t{\n\t\tthis.getBond(idx).extra = extra.slice(0);\n\t}\n\tpublic setBondTransient(idx:number, transi:string[]):void\n\t{\n\t\tthis.getBond(idx).transient = transi.slice(0);\n\t\tif (transi.length > 0) this.hasTransient = true;\n\t}\n\n\tpublic deleteAtomAndBonds(idx:number):void\n\t{\n\t\tfor (let n = this.numBonds; n >= 1; n--)\n\t\t{\n\t\t\tif (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n\t\t\t\tthis.deleteBond(n);\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.bondFrom(n) > idx) this.setBondFrom(n, this.bondFrom(n) - 1);\n\t\t\t\tif (this.bondTo(n) > idx) this.setBondTo(n, this.bondTo(n) - 1);\n\t\t\t}\n\t\t}\n\t\tthis.atoms.splice(idx - 1, 1);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic deleteBond(idx:number):void\n\t{\n\t\tthis.bonds.splice(idx - 1, 1);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\n\t// uses either explicit or computed number to determine how many hydrogens the atom has; the field for explicit hydrogens takes\n\t// absolute preference; if it has its default value of 'unknown', the number is computed by looking up the hydrogen capacity for\n\t// the element (most of which are zero), subtracting the total of bond orders, then returning the difference, or zero; the calculation\n\t// tends to err on the side of too few, since the concept is just an aid to drawing organic structures, not a cheminformatic attempt\n\t// to compensate for 4 decades of bad file formats\n\t// (note: returns \"implicit\"+\"explicit\", but does NOT count \"actual\" hydrogens, i.e. those which have their own atom nodes)\n\tpublic atomHydrogens(idx:number):number\n\t{\n\t\tlet hy = this.atomHExplicit(idx);\n\t\tif (hy != Molecule.HEXPLICIT_UNKNOWN) return hy;\n\n\t\tfor (let n = 0; n < Molecule.HYVALENCE_EL.length; n++) if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx))\n\t\t{\n\t\t\thy = Molecule.HYVALENCE_VAL[n];\n\t\t\tbreak;\n\t\t}\n\t\tif (hy == Molecule.HEXPLICIT_UNKNOWN) return 0;\n\t\tlet ch = this.atomCharge(idx);\n\t\tif (this.atomElement(idx) == 'C') ch = -Math.abs(ch);\n\t\thy += ch - this.atomUnpaired(idx);\n\t\tlet adjBonds = this.atomAdjBonds(idx);\n\t\tfor (let n = 0; n < adjBonds.length; n++) hy -= this.bondOrder(adjBonds[n]);\n\t\treturn hy < 0 ? 0 : hy;\n\t}\n\n\t// returns the index of the bond between the two atoms, or 0 if none\n\t// NOTE: uncached==>slow\n\tpublic findBond(a1:number, a2:number):number\n\t{\n\t\tfor (let n = 1; n <= this.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = this.bondFrom(n), b2 = this.bondTo(n);\n\t\t\tif ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1)) return n;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// for a bond, returns the end which is not==Ref; return value will be From,To or 0\n\tpublic bondOther(idx:number, ref:number):number\n\t{\n\t\tlet b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n\t\tif (b1 == ref) return b2;\n\t\tif (b2 == ref) return b1;\n\t\treturn 0;\n\t}\n\n\t// returns whether an atom logically ought to be drawn \"explicitly\";if false, it is a carbon which should be just a dot\n\tpublic atomExplicit(idx:number):boolean\n\t{\n\t\tlet a = this.atoms[idx - 1];\n\t\tif (a.isotope != Molecule.ISOTOPE_NATURAL) return true;\n\t\tif (a.element != 'C' || a.charge != 0 || a.unpaired != 0) return true;\n\t\tif (this.atomAdjCount(idx) == 0) return true;\n\t\treturn false;\n\t}\n\n\t// returns the numerical ID of the ring block in which the atom resides, or 0 if it is not in a ring\n\tpublic atomRingBlock(idx:number):number\n\t{\n\t\tif (this.graph == null) this.buildGraph();\n\t\tif (this.ringID == null) this.buildRingID();\n\t\treturn this.ringID[idx - 1];\n\t}\n\n\t// returns whether or not a bond resides in a ring (i.e. ring block of each end is the same and nonzero)\n\tpublic bondInRing(idx:number):boolean\n\t{\n\t\tlet r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n\t\treturn r1 > 0 && r1 == r2;\n\t}\n\n\t// returns the connected component ID of the atom, always 1 or more\n\tpublic atomConnComp(idx:number):number\n\t{\n\t\tif (this.graph == null) this.buildGraph();\n\t\tif (this.compID == null) this.buildConnComp();\n\t\treturn this.compID[idx - 1];\n\t}\n\n\t// returns the number of neighbours of an atom\n\t// NOTE: uncached==>slow\n\tpublic atomAdjCount(idx:number):number\n\t{\n\t\tthis.buildGraph();\n\t\treturn this.graph[idx - 1].length;\n\t}\n\n\t// returns the actual adjacency list of an atom; the return value is a 1-based deep copy\n\tpublic atomAdjList(idx:number):number[]\n\t{\n\t\tthis.buildGraph();\n\t\tlet adj = this.graph[idx - 1].slice(0);\n\t\tfor (let n = adj.length - 1; n >= 0; n--) adj[n]++;\n\t\treturn adj;\n\t}\n\n\t// returns the bond indices of the adjacency list for the atom; the return value is a 1-based deep copy\n\tpublic atomAdjBonds(idx:number):number[]\n\t{\n\t\tthis.buildGraph();\n\t\treturn this.graphBond[idx - 1].slice(0);\n\t}\n\n\t// returns _all_ rings of indicated size; each item in the array list is an array of int[Size], a consecutively ordered array of atom\n\t// numbers; uses a recursive depth first search, which must be bounded above by Size being small in order to avoid exponential blowup\n\tpublic findRingsOfSize(size:number):number[][]\n\t{\n\t\tlet rings:number[][] = null;\n\t\tif (size == 3 && this.ring3 != null) rings = this.ring3;\n\t\tif (size == 4 && this.ring4 != null) rings = this.ring4;\n\t\tif (size == 5 && this.ring5 != null) rings = this.ring5;\n\t\tif (size == 6 && this.ring6 != null) rings = this.ring6;\n\t\tif (size == 7 && this.ring7 != null) rings = this.ring7;\n\n\t\tif (rings == null)\n\t\t{\n\t\t\tif (this.graph == null) this.buildGraph();\n\t\t\tif (this.ringID == null) this.buildRingID();\n\n\t\t\trings = [];\n\t\t\tfor (let n = 1; n <= this.atoms.length; n++)\n\t\t\t{\n\t\t\t\tif (this.ringID[n - 1] > 0)\n\t\t\t\t{\n\t\t\t\t\tlet path = Vec.numberArray(0, size);\n\t\t\t\t\tpath[0] = n;\n\t\t\t\t\tthis.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (size == 3) this.ring3 = rings;\n\t\t\tif (size == 4) this.ring4 = rings;\n\t\t\tif (size == 5) this.ring5 = rings;\n\t\t\tif (size == 6) this.ring6 = rings;\n\t\t\tif (size == 7) this.ring7 = rings;\n\t\t}\n\n\t\tlet ret:number[][] = [];\n\t\tfor (let n = 0; n < rings.length; n++) ret.push(rings[n].slice(0));\n\t\treturn ret;\n\t}\n\n\t// molecule boundaries\n\tpublic boundary():Box\n\t{\n\t\tif (this.atoms.length == 0) return Box.zero();\n\t\tlet x1 = this.atoms[0].x, x2 = x1;\n\t\tlet y1 = this.atoms[0].y, y2 = y1;\n\t\tfor (let n = 1; n < this.atoms.length; n++)\n\t\t{\n\t\t\tx1 = Math.min(x1, this.atoms[n].x);\n\t\t\ty1 = Math.min(y1, this.atoms[n].y);\n\t\t\tx2 = Math.max(x2, this.atoms[n].x);\n\t\t\ty2 = Math.max(y2, this.atoms[n].y);\n\t\t}\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\t// lookup the atomic number for the element, or return 0 if not in the periodic table\n\tpublic atomicNumber(idx:number):number\n\t{\n\t\treturn Molecule.elementAtomicNumber(this.atomElement(idx));\n\t}\n\n\tpublic static elementAtomicNumber(element:string):number\n\t{\n\t\treturn Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n\t}\n\n\t// Z coordinate: somewhat aloof from the (X,Y) coordinates, because the container is oriented toward 2D molecules\n\tpublic is3D():boolean {return this.hasZCoord;}\n\tpublic setIs3D(v:boolean):void {this.hasZCoord = v;}\n\tpublic atomZ(idx:number):number {return this.getAtom(idx).z;}\n\tpublic setAtomZ(idx:number, z:number) {this.getAtom(idx).z = z;}\n\n\t// literal comparison to another molecule, which can be used for ordering purposes: returns -1/0/1\n\tpublic compareTo(other:Molecule):number\n\t{\n\t\tif (other == null || other.numAtoms == 0) return this.numAtoms == 0 ? 0 : 1; // null is equivalent to empty\n\t\tif (this.numAtoms < other.numAtoms) return -1;\n\t\tif (this.numAtoms > other.numAtoms) return 1;\n\t\tif (this.numBonds < other.numBonds) return -1;\n\t\tif (this.numBonds > other.numBonds) return 1;\n\n\t\tfor (let n = 1; n <= this.numAtoms; n++)\n\t\t{\n\t\t\tif (this.atomElement(n) < other.atomElement(n)) return -1;\n\t\t\tif (this.atomElement(n) > other.atomElement(n)) return 1;\n\t\t\tif (this.atomX(n) < other.atomX(n)) return -1; if (this.atomX(n) > other.atomX(n)) return 1;\n\t\t\tif (this.atomY(n) < other.atomY(n)) return -1; if (this.atomY(n) > other.atomY(n)) return 1;\n\t\t\tif (this.atomCharge(n) < other.atomCharge(n)) return -1; if (this.atomCharge(n) > other.atomCharge(n)) return 1;\n\t\t\tif (this.atomUnpaired(n) < other.atomUnpaired(n)) return -1; if (this.atomUnpaired(n) > other.atomUnpaired(n)) return 1;\n\t\t\tif (this.atomHExplicit(n) < other.atomHExplicit(n)) return -1; if (this.atomHExplicit(n) > other.atomHExplicit(n)) return 1;\n\t\t\tif (this.atomIsotope(n) < other.atomIsotope(n)) return -1; if (this.atomIsotope(n) > other.atomIsotope(n)) return 1;\n\t\t\tif (this.atomMapNum(n) < other.atomMapNum(n)) return -1; if (this.atomMapNum(n) > other.atomMapNum(n)) return 1;\n\n\t\t\tlet tx1 = this.atomExtra(n).map((v) => v.trimEnd()), tx2 = other.atomExtra(n).map((v) => v.trimEnd());\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\n\t\t\ttx1 = this.atomTransient(n).map((v) => v.trimEnd()); tx2 = other.atomTransient(n).map((v) => v.trimEnd());\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\t\t}\n\t\tfor (let n = 1; n <= this.numBonds; n++)\n\t\t{\n\t\t\tif (this.bondFrom(n) < other.bondFrom(n)) return -1; if (this.bondFrom(n) > other.bondFrom(n)) return 1;\n\t\t\tif (this.bondTo(n) < other.bondTo(n)) return -1; if (this.bondTo(n) > other.bondTo(n)) return 1;\n\t\t\tif (this.bondOrder(n) < other.bondOrder(n)) return -1; if (this.bondOrder(n) > other.bondOrder(n)) return 1;\n\t\t\tif (this.bondType(n) < other.bondType(n)) return -1; if (this.bondType(n) > other.bondType(n)) return 1;\n\n\t\t\tlet tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\n\t\t\ttx1 = this.bondTransient(n); tx2 = other.bondTransient(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// must be called when _any_ change to the molecule is affected; the transient extension fields are cleared out\n\tpublic trashTransient():void\n\t{\n\t\tif (this.keepTransient || !this.hasTransient) return;\n\t\tfor (let a of this.atoms) a.transient = [];\n\t\tfor (let b of this.bonds) b.transient = [];\n\t\tthis.hasTransient = false;\n\t}\n\n\t// convenience methods\n\tpublic appendAtomExtra(atom:number, extra:string):void\n\t{\n\t\tthis.getAtom(atom).extra.push(extra);\n\t}\n\tpublic appendAtomTransient(atom:number, trans:string):void\n\t{\n\t\tthis.getAtom(atom).transient.push(trans);\n\t}\n\tpublic appendBondExtra(bond:number, extra:string):void\n\t{\n\t\tthis.getBond(bond).extra.push(extra);\n\t}\n\tpublic appendBondTransient(bond:number, trans:string):void\n\t{\n\t\tthis.getBond(bond).transient.push(trans);\n\t}\n\n\t// getting atom & bond information in cloned form, and also setting from passed object; note that because of the cloning operation,\n\t// this does add a bit of overhead, so it is not necessarily recommended for rate limiting steps\n\tpublic getAtomCloned(idx:number):Atom {return deepClone(this.getAtom(idx));}\n\tpublic getBondCloned(idx:number):Bond {return deepClone(this.getBond(idx));}\n\tpublic setAtom(idx:number, atom:Atom):void\n\t{\n\t\tif (!atom) return;\n\t\tlet curr = this.getAtom(idx);\n\t\tif (atom.element != curr.element) this.setAtomElement(idx, atom.element);\n\t\tif (atom.x != curr.x) this.setAtomX(idx, atom.x);\n\t\tif (atom.y != curr.y) this.setAtomY(idx, atom.y);\n\t\tif (atom.z != curr.z) this.setAtomZ(idx, atom.z);\n\t\tif (atom.charge != curr.charge) this.setAtomCharge(idx, atom.charge);\n\t\tif (atom.unpaired != curr.unpaired) this.setAtomUnpaired(idx, atom.unpaired);\n\t\tif (atom.isotope != curr.isotope) this.setAtomIsotope(idx, atom.isotope);\n\t\tif (atom.hExplicit != curr.hExplicit) this.setAtomHExplicit(idx, atom.hExplicit);\n\t\tif (atom.mapNum != curr.mapNum) this.setAtomMapNum(idx, atom.mapNum);\n\t\tif (!Vec.equals(atom.extra, curr.extra)) this.setAtomExtra(idx, atom.extra);\n\t\tif (!Vec.equals(atom.transient, curr.transient)) this.setAtomTransient(idx, atom.transient);\n\t}\n\tpublic setBond(idx:number, bond:Bond):void\n\t{\n\t\tif (bond == null) return;\n\t\tlet curr = this.getBond(idx);\n\t\tif (bond.from != curr.from) this.setBondFrom(idx, bond.from);\n\t\tif (bond.to != curr.to) this.setBondTo(idx, bond.to);\n\t\tif (bond.order != curr.order) this.setBondOrder(idx, bond.order);\n\t\tif (bond.type != curr.type) this.setBondType(idx, bond.type);\n\t\tif (!Vec.equals(bond.extra, curr.extra)) this.setBondExtra(idx, bond.extra);\n\t\tif (!Vec.equals(bond.transient, curr.transient)) this.setBondTransient(idx, bond.transient);\n\t}\n\n\t// modify some or all of the atoms or bonds; note that the passed object has been cloned, so the callback function can modify the content and\n\t// return it; a returned value of same or null means make no change; there is some overhead for the object cloning, so avoid for rate limiting steps\n\tpublic modifyAtoms(lambda:(idx:number, atom:Atom) => Atom)\n\t{\n\t\tfor (let n = 1; n <= this.numAtoms; n++)\n\t\t{\n\t\t\tvar mod = lambda(n, this.getAtomCloned(n));\n\t\t\tif (mod != null) this.setAtom(n, mod);\n\t\t}\n\t}\n\tpublic modifyAtomsIndices(atomIndices:number[], lambda:(idx:number, atom:Atom) => Atom)\n\t{\n\t\tfor (let n of atomIndices)\n\t\t{\n\t\t\tvar mod = lambda(n, this.getAtomCloned(n));\n\t\t\tif (mod != null) this.setAtom(n, mod);\n\t\t}\n\t}\n\tpublic modifyBonds(lambda:(idx:number, bond:Bond) => Bond)\n\t{\n\t\tfor (let n = 1; n <= this.numBonds; n++)\n\t\t{\n\t\t\tvar mod = lambda(n, this.getBondCloned(n));\n\t\t\tif (mod != null) this.setBond(n, mod);\n\t\t}\n\t}\n\tpublic modifyBondsIndices(bondIndices:number[], lambda:(idx:number, bond:Bond) => Bond)\n\t{\n\t\tfor (let n of bondIndices)\n\t\t{\n\t\t\tvar mod = lambda(n, this.getBondCloned(n));\n\t\t\tif (mod != null) this.setBond(n, mod);\n\t\t}\n\t}\n\n\t// locate atom or bond that matches criteria; note that the object passed through is not cloned, so do not modify it\n\tpublic findAtomMatch(lambda:(atom:Atom) => boolean):number\n\t{\n\t\tfor (let n = 1; n <= this.numAtoms; n++) if (lambda(this.getAtom(n))) return n;\n\t\treturn 0;\n\t}\n\tpublic findBondMatch(lambda:(bond:Bond) => boolean):number\n\t{\n\t\tfor (let n = 1; n <= this.numBonds; n++) if (lambda(this.getBond(n))) return n;\n\t\treturn 0;\n\t}\n\tpublic findAllAtoms(lambda:(atom:Atom) => boolean):number[]\n\t{\n\t\tlet indices:number[] = [];\n\t\tfor (let n = 1; n <= this.numAtoms; n++) if (lambda(this.getAtom(n))) indices.push(n);\n\t\treturn indices;\n\t}\n\tpublic findAllBonds(lambda:(bond:Bond) => boolean):number[]\n\t{\n\t\tlet indices:number[] = [];\n\t\tfor (let n = 1; n <= this.numBonds; n++) if (lambda(this.getBond(n))) indices.push(n);\n\t\treturn indices;\n\t}\n\n\t// allows atoms or bonds to be mapped into some other datastructure; note that the object passed through is not cloned, so do not modify it\n\tpublic mapAtoms<T>(lambda:(atom:Atom) => T):T[]\n\t{\n\t\tlet ret:T[] = new Array(this.numAtoms);\n\t\tfor (let n = 1; n <= this.numAtoms; n++) ret[n - 1] = lambda(this.getAtom(n));\n\t\treturn ret;\n\t}\n\tpublic mapBonds<T>(lambda:(bond:Bond) => T):T[]\n\t{\n\t\tlet ret:T[] = new Array(this.numBonds);\n\t\tfor (let n = 1; n <= this.numBonds; n++) ret[n - 1] = lambda(this.getBond(n));\n\t\treturn ret;\n\t}\n\tpublic mapAtomsIndices<T>(atomIndices:number[], lambda:(atom:Atom) => T):T[]\n\t{\n\t\tlet ret:T[] = new Array(atomIndices.length);\n\t\tlet pos = 0;\n\t\tfor (let n of atomIndices) ret[pos++] = lambda(this.getAtom(n));\n\t\treturn ret;\n\t}\n\tpublic mapBondsIndices<T>(bondIndices:number[], lambda:(bond:Bond) => T):T[]\n\t{\n\t\tlet ret:T[] = new Array(bondIndices.length);\n\t\tlet pos = 0;\n\t\tfor (let n of bondIndices) ret[pos++] = lambda(this.getBond(n));\n\t\treturn ret;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// must be called when the molecule's graph changes; do not call for changing labels or coordinates\n\tprivate trashGraph():void\n\t{\n\t\tthis.graph = null;\n\t\tthis.graphBond = null;\n\t\tthis.ringID = null;\n\t\tthis.compID = null;\n\t\tthis.ring3 = null;\n\t\tthis.ring4 = null;\n\t\tthis.ring5 = null;\n\t\tthis.ring6 = null;\n\t\tthis.ring7 = null;\n\t}\n\n\t// if the computed graph is not defined, rebuild it\n\tprivate buildGraph():void\n\t{\n\t\tif (this.graph != null && this.graphBond != null) return;\n\n\t\tlet graph:number[][] = [], graphBond:number[][] = [];\n\t\tlet na = this.numAtoms, nb = this.numBonds;\n\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tgraph.push([]);\n\t\t\tgraphBond.push([]);\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet b = this.getBond(n);\n\t\t\tgraph[b.from - 1].push(b.to - 1);\n\t\t\tgraph[b.to - 1].push(b.from - 1);\n\t\t\tgraphBond[b.from - 1].push(n);\n\t\t\tgraphBond[b.to - 1].push(n);\n\t\t}\n\n\t\tthis.graph = graph;\n\t\tthis.graphBond = graphBond;\n\t}\n\n\t// passes over the graph establishing which component each atom belongs to\n\tprivate buildConnComp():void\n\t{\n\t\tconst numAtoms = this.atoms.length;\n\n\t\tthis.compID = Vec.numberArray(0, numAtoms);\n\t\tfor (let n = 0; n < numAtoms; n++) this.compID[n] = 0;\n\t\tlet comp = 1;\n\t\tthis.compID[0] = comp;\n\n\t\t// (not very efficient, should use a stack-based depth first search)\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < numAtoms; n++) if (this.compID[n] == comp)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.graph[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (this.compID[this.graph[n][i]] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.compID[this.graph[n][i]] = comp;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything)\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t\t\t{\n\t\t\t\t\tif (this.compID[n] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.compID[n] = ++comp;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!anything) break;\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the ring-block-identifier for each atom\n\tprivate buildRingID():void\n\t{\n\t\tconst numAtoms = this.atoms.length;\n\n\t\tthis.ringID = Vec.numberArray(0, numAtoms);\n\t\tif (numAtoms == 0) return;\n\t\tlet visited = Vec.booleanArray(false, numAtoms);\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tthis.ringID[n] = 0;\n\t\t\tvisited[n] = false;\n\t\t}\n\n\t\tlet path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n\t\twhile (true)\n\t\t{\n\t\t\tlet last:number, current:number;\n\n\t\t\tif (plen == 0) // find an element of a new component to visit\n\t\t\t{\n\t\t\t\tlast = -1;\n\t\t\t\tfor (current = 0; visited[current]; current++) {}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlast = path[plen - 1];\n\t\t\t\tcurrent = -1;\n\t\t\t\tfor (let n = 0; n < this.graph[last].length; n++)\n\t\t\t\t{\n\t\t\t\t\tif (!visited[this.graph[last][n]])\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent = this.graph[last][n];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (current >= 0 && plen >= 2) // path is at least 2 items long, so look for any not-previous visited neighbours\n\t\t\t{\n\t\t\t\tlet back = path[plen - 1];\n\t\t\t\t//System.out.println(\" back=\"+back);\n\t\t\t\tfor (let n = 0; n < this.graph[current].length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet join = this.graph[current][n];\n\t\t\t\t\tif (join != back && visited[join])\n\t\t\t\t\t{\n\t\t\t\t\t\tpath[plen] = current;\n\t\t\t\t\t\tfor (let i = plen; i == plen || path[i + 1] != join; i--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet id = this.ringID[path[i]];\n\t\t\t\t\t\t\tif (id == 0) this.ringID[path[i]] = last;\n\t\t\t\t\t\t\telse if (id != last)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor (let j = 0; j < numAtoms; j++)\n\t\t\t\t\t\t\t\t\tif (this.ringID[j] == id) this.ringID[j] = last;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (current >= 0) // can mark the new one as visited\n\t\t\t{\n\t\t\t\tvisited[current] = true;\n\t\t\t\tpath[plen++] = current;\n\t\t\t\tnumVisited++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// otherwise, found nothing and must rewind the path\n\t\t\t\tplen--;\n\t\t\t}\n\n\t\t\tif (numVisited == numAtoms) break;\n\t\t}\n\n\t\t// the ring ID's are not necessarily consecutive, so reassign them to 0=none, 1..NBlocks\n\t\tlet nextID = 0;\n\t\tfor (let i = 0; i < numAtoms; i++)\n\t\t{\n\t\t\tif (this.ringID[i] > 0)\n\t\t\t{\n\t\t\t\tnextID--;\n\t\t\t\tfor (let j = numAtoms - 1; j >= i; j--) if (this.ringID[j] == this.ringID[i]) this.ringID[j] = nextID;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < numAtoms; i++) this.ringID[i] = -this.ringID[i];\n\t}\n\n\t// ring hunter: recursive step; finds, compares and collects\n\tprivate recursiveRingFind(path:number[], psize:number, capacity:number, rblk:number, rings:number[][]):void\n\t{\n\t\tconst {graph} = this;\n\n\t\t// not enough atoms yet, so look for new possibilities\n\t\tif (psize < capacity)\n\t\t{\n\t\t\tlet last = path[psize - 1];\n\t\t\tfor (let n = 0; n < graph[last - 1].length; n++)\n\t\t\t{\n\t\t\t\tlet adj = graph[last - 1][n] + 1;\n\t\t\t\tif (this.ringID[adj - 1] != rblk) continue;\n\t\t\t\tlet fnd = false;\n\t\t\t\tfor (let i = 0; i < psize; i++)\n\t\t\t\t{\n\t\t\t\t\tif (path[i] == adj)\n\t\t\t\t\t{\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!fnd)\n\t\t\t\t{\n\t\t\t\t\tlet newPath = path.slice(0);\n\t\t\t\t\tnewPath[psize] = adj;\n\t\t\t\t\tthis.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// path is full, so make sure it eats its tail\n\t\tlet last = path[psize - 1];\n\t\tlet fnd = false;\n\t\tfor (let n = 0; n < graph[last - 1].length; n++)\n\t\t{\n\t\t\tif (graph[last - 1][n] + 1 == path[0])\n\t\t\t{\n\t\t\t\tfnd = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!fnd) return;\n\n\t\t// make sure every element in the path has exactly 2 neighbours within the path; otherwise it is spanning a bridge, which\n\t\t// is an undesirable ring definition\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet count = 0, p = path[n] - 1;\n\t\t\tfor (let i = 0; i < graph[p].length; i++) if (path.indexOf(graph[p][i] + 1) >= 0) count++;\n\t\t\tif (count != 2) return; // invalid\n\t\t}\n\n\t\t// reorder the array then look for duplicates\n\t\tlet first = 0;\n\t\tfor (let n = 1; n < psize; n++) if (path[n] < path[first]) first = n;\n\t\tlet fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n\t\tlet flip = path[fm] < path[fp];\n\t\tif (first != 0 || flip)\n\t\t{\n\t\t\tlet newPath = Vec.numberArray(0, psize);\n\t\t\tfor (let n = 0; n < psize; n++) newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n\t\t\tpath = newPath;\n\t\t}\n\n\t\tfor (let n = 0; n < rings.length; n++)\n\t\t{\n\t\t\tlet look = rings[n];\n\t\t\tlet same = true;\n\t\t\tfor (let i = 0; i < psize; i++)\n\t\t\t{\n\t\t\t\tif (look[i] != path[i])\n\t\t\t\t{\n\t\t\t\t\tsame = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (same) return;\n\t\t}\n\n\t\trings.push(path);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {deepClone, safeFloat, safeInt} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Molecule} from '../mol/Molecule';\n\n/*\n\tWraps an object representation of a datasheet with access functions that are analogous to the Java com.mmi.core.ds.DataSheet class.\n\n\tThe format of the data parameter is:\n\n\t\ttitle, description: string\n\t\tnumCols, numRows, numExtens: integer\n\t\tcolData: array of {name:string, type:string, descr:string}\n\t\trowData: matrix, rowData[row][col]=value\n\t\textData: array of {name:string, type:string, data:string}\n\n\tImportant differences to remember:\n\n\t- column types are represented as strings, not integers (see constants below)\n\t- molecules are represented as strings, in SketchEl format, not objects\n*/\n\nexport const enum DataSheetColumn\n{\n\tMolecule = 'molecule',\n\tString = 'string',\n\tReal = 'real',\n\tInteger = 'integer',\n\tBoolean = 'boolean',\n\tExtend = 'extend',\n}\n\ninterface DataSheetContentColumn\n{\n\tname:string;\n\ttype:DataSheetColumn;\n\tdescr:string;\n}\n\ninterface DataSheetContentExt\n{\n\tname:string;\n\ttype:string;\n\tdata:string;\n}\n\ninterface DataSheetContent\n{\n\ttitle?:string;\n\tdescription?:string;\n\tnumCols?:number;\n\tnumRows?:number;\n\tnumExtens?:number;\n\tcolData?:DataSheetContentColumn[];\n\trowData?:any[][];\n\textData?:DataSheetContentExt[];\n}\n\nexport class DataSheet\n{\n\tprivate data:DataSheetContent;\n\n\t// instantiates the data using a JSON-encoded datasheet; it may be null or empty\n\t// note: this class reserves the right to modify the data parameter; it is the caller's responsibility to ensure that there are no\n\t// troublesome references elsewhere\n\tconstructor(data?:any)\n\t{\n\t\tif (!data) data = {};\n\n\t\tif (!data.title) data.title = '';\n\t\tif (!data.description) data.description = '';\n\n\t\tif (data.numCols == null) data.numCols = Vec.len(data.colData);\n\t\tif (data.numRows == null) data.numRows = Vec.len(data.rowData);\n\t\tif (data.numExtens == null) data.numExtens = Vec.len(data.extData);\n\n\t\tif (data.colData == null) data.colData = [];\n\t\tif (data.rowData == null) data.rowData = [];\n\t\tif (data.extData == null) data.extData = [];\n\n\t\tthis.data = data;\n\t}\n\n\t// make a deep clone of the datasheet that can be safely modified without consequences\n\tpublic clone(withRows = true):DataSheet\n\t{\n\t\tlet {numCols, numRows, colData, rowData} = this.data;\n\t\tlet data:DataSheetContent =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: numCols,\n\t\t\tnumRows: withRows ? numRows : 0,\n\t\t\tnumExtens: this.data.numExtens,\n\t\t\tcolData: deepClone(colData),\n\t\t\trowData: withRows ? new Array(numRows) : [],\n\t\t\textData: deepClone(this.data.extData),\n\t\t};\n\t\tif (withRows) for (let r = 0; r < numRows; r++)\n\t\t{\n\t\t\tlet inRow = rowData[r], outRow:any[] = new Array(numCols);\n\t\t\tfor (let c = 0; c < numCols; c++)\n\t\t\t{\n\t\t\t\tif (inRow[c] != null && colData[c].type == DataSheetColumn.Molecule && inRow[c] instanceof Molecule)\n\t\t\t\t\toutRow[c] = (inRow[c] as Molecule).clone();\n\t\t\t\telse\n\t\t\t\t\toutRow[c] = inRow[c];\n\t\t\t}\n\t\t\tdata.rowData[r] = outRow;\n\t\t}\n\t\treturn new DataSheet(data);\n\t}\n\n\t// clone with more detailed control about what to include; note that null rowMask is a shortcut for empty\n\tpublic cloneMask(colMask:boolean[], rowMask:boolean[] = null, inclExtn:boolean = true):DataSheet\n\t{\n\t\tlet {numCols, numRows, colData, rowData} = this.data;\n\t\tlet data:DataSheetContent =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: Vec.maskCount(colMask),\n\t\t\tnumRows: rowMask ? Vec.maskCount(rowMask) : 0,\n\t\t\tnumExtens: inclExtn ? this.data.numExtens : 0,\n\t\t\tcolData: deepClone(Vec.maskGet(colData, colMask)),\n\t\t\trowData: [],\n\t\t\textData: inclExtn ? deepClone(this.data.extData) : [],\n\t\t};\n\n\t\tif (rowMask) for (let r = 0; r < numRows; r++) if (rowMask[r])\n\t\t{\n\t\t\tlet inRow = rowData[r], outRow:any[] = Vec.maskGet(inRow, colMask);\n\t\t\tdata.rowData.push(outRow);\n\t\t}\n\n\t\t// molecule instances need to be cloned explicitly\n\t\tconst {colData: outCols, rowData: outRows} = data;\n\t\tfor (let c = outCols.length - 1; c >= 0; c--) if (outCols[c].type == DataSheetColumn.Molecule)\n\t\t{\n\t\t\tfor (let r = outRows.length - 1; r >= 0; r--) if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n\t\t\t\toutRows[r][c] = (outRows[r][c] as Molecule).clone();\n\t\t}\n\n\t\treturn new DataSheet(data);\n\t}\n\n\t// returns the data upon which is class is based; this is in the correct format for sending to the server as a\n\t// \"JSON-formatted datasheet\", and is also suitable\n\tpublic getData():any\n\t{\n\t\treturn this.data;\n\t}\n\n\tpublic get numCols():number\n\t{\n\t\treturn this.data.numCols;\n\t}\n\tpublic get numRows():number\n\t{\n\t\treturn this.data.numRows;\n\t}\n\tpublic get title():string {return this.data.title;}\n\tpublic set title(title:string) {this.data.title = title;}\n\tpublic get description():string {return this.data.description;}\n\tpublic set description(description:string) {this.data.description = description;}\n\tpublic get numExtensions():number\n\t{\n\t\treturn this.data.numExtens;\n\t}\n\tpublic getExtName(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].name;\n\t}\n\tpublic getExtType(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].type;\n\t}\n\tpublic getExtData(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].data;\n\t}\n\tpublic setExtName(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].name = val;\n\t}\n\tpublic setExtType(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].type = val;\n\t}\n\tpublic setExtData(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].data = val;\n\t}\n\tpublic appendExtension(name:string, type:string, data:string):number\n\t{\n\t\tthis.data.numExtens++;\n\t\tthis.data.extData.push({name, type, data});\n\t\treturn this.data.numExtens - 1;\n\t}\n\tpublic insertExtension(idx:number, name:string, type:string, data:string):void\n\t{\n\t\tthis.data.numExtens++;\n\t\tthis.data.extData.splice(idx, 0, {name, type, data});\n\t}\n\tpublic deleteExtension(idx:number):void\n\t{\n\t\tthis.data.extData.splice(idx, 1);\n\t\tthis.data.numExtens--;\n\t}\n\tpublic colName(col:number):string\n\t{\n\t\treturn this.data.colData[col].name;\n\t}\n\tpublic colType(col:number):DataSheetColumn\n\t{\n\t\treturn this.data.colData[col].type;\n\t}\n\tpublic colDescr(col:number):string\n\t{\n\t\treturn this.data.colData[col].descr;\n\t}\n\tpublic isNull(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col] == null;\n\t}\n\tpublic notNull(row:number, col:number | string):boolean\n\t{\n\t\treturn !this.isNull(row, col);\n\t}\n\tpublic isBlank(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col)) return true;\n\t\tlet ct = this.colType(col);\n\t\tif (ct == DataSheetColumn.Molecule) return this.getMolecule(row, col).numAtoms == 0;\n\t\tif (ct == DataSheetColumn.String) return this.getString(row, col).length == 0;\n\t\tif (ct == DataSheetColumn.Extend) return this.getExtend(row, col).length == 0;\n\t\treturn false;\n\t}\n\tpublic notBlank(row:number, col:number | string):boolean\n\t{\n\t\treturn !this.isBlank(row, col);\n\t}\n\n\tpublic getObject(row:number, col:number | string):any\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\treturn this.data.rowData[row][col];\n\t}\n\t// NOTE: the molecule object is a direct pointer, so be careful to clone before modifying frivolously\n\tpublic getMolecule(row:number, col:number | string):Molecule\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\tlet datum = this.data.rowData[row][col];\n\t\tif (datum == null) return null;\n\t\tif (typeof datum === 'string')\n\t\t{\n\t\t\tdatum = Molecule.fromString(datum);\n\t\t\tthis.data.rowData[row][col] = datum;\n\t\t}\n\t\treturn datum;\n\t}\n\tpublic getMoleculeClone(row:number, col:number | string):Molecule\n\t{\n\t\tlet mol = this.getMolecule(row, col);\n\t\treturn mol == null ? null : mol.clone();\n\t}\n\tpublic getMoleculeBlank(row:number, col:number | string):Molecule\n\t{\n\t\tlet mol = this.getMolecule(row, col);\n\t\treturn mol ? mol : new Molecule();\n\t}\n\tpublic getString(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\tlet str = this.data.rowData[row][col] as string;\n\t\treturn str == null ? '' : str;\n\t}\n\tpublic getInteger(row:number, col:number | string):number\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getReal(row:number, col:number | string):number\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getBoolean(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getExtend(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic setToNull(row:number, col:number | string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = null;\n\t}\n\tpublic setObject(row:number, col:number | string, val:any):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setMolecule(row:number, col:number | string, mol:Molecule):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = mol ? mol.clone() : null;\n\t}\n\tpublic setString(row:number, col:number | string, val:string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setInteger(row:number, col:number | string, val:number):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setReal(row:number, col:number | string, val:number):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setBoolean(row:number, col:number | string, val:boolean):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setExtend(row:number, col:number | string, val:string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic isEqualMolecule(row:number, col:number | string, mol:Molecule):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (mol == null)) return false;\n\t\tif (mol == null) return true;\n\t\treturn this.getMolecule(row, col).compareTo(mol) == 0;\n\t}\n\tpublic isEqualString(row:number, col:number | string, val:string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null || val == '')) return false;\n\t\tif (val == null || val == '') return true;\n\t\treturn this.getString(row, col) == val;\n\t}\n\tpublic isEqualInteger(row:number, col:number | string, val:number):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getInteger(row, col) == val;\n\t}\n\tpublic isEqualReal(row:number, col:number | string, val:number):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getReal(row, col) == val;\n\t}\n\tpublic isEqualBoolean(row:number, col:number | string, val:boolean):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getBoolean(row, col) == val;\n\t}\n\tpublic appendColumn(name:string, type:DataSheetColumn, descr:string):number\n\t{\n\t\tthis.data.numCols++;\n\t\tthis.data.colData.push({name, type, descr});\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].push(null);\n\t\treturn this.data.numCols - 1;\n\t}\n\tpublic insertColumn(col:number, name:string, type:DataSheetColumn, descr:string):void\n\t{\n\t\tthis.data.numCols++;\n\t\tthis.data.colData.splice(col, 0, {name, type, descr});\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].splice(col, 0, null);\n\t}\n\tpublic deleteColumn(col:number):void\n\t{\n\t\tthis.data.numCols--;\n\t\tthis.data.colData.splice(col, 1);\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].splice(col, 1);\n\t}\n\tpublic changeColumnName(col:number, name:string, descr:string):void\n\t{\n\t\tthis.data.colData[col].name = name;\n\t\tthis.data.colData[col].descr = descr;\n\t}\n\tpublic changeColumnType(col:number, newType:DataSheetColumn):void\n\t{\n\t\tlet oldType = this.colType(col);\n\t\tif (oldType == newType) return;\n\n\t\tlet incompatible = oldType == DataSheetColumn.Molecule || newType == DataSheetColumn.Molecule ||\n\t\t\t\t\t\t   oldType == DataSheetColumn.Extend || newType == DataSheetColumn.Extend;\n\n\t\tfor (let n = this.data.rowData.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet row = this.data.rowData[n];\n\t\t\tif (row[col] == null) continue;\n\t\t\tif (incompatible) {row[col] = null; continue;}\n\n\t\t\tlet val = '';\n\t\t\tif (oldType == DataSheetColumn.String) val = row[col] as string;\n\t\t\telse if (oldType == DataSheetColumn.Integer) val = (row[col] as number).toString();\n\t\t\telse if (oldType == DataSheetColumn.Real) val = (row[col] as number).toString();\n\t\t\telse if (oldType == DataSheetColumn.Boolean) val = row[col] as boolean ? 'true' : 'false';\n\n\t\t\trow[col] = null;\n\n\t\t\tif (newType == DataSheetColumn.String) row[col] = val;\n\t\t\telse if (newType == DataSheetColumn.Integer) {let num = parseInt(val); row[col] = isFinite(num) ? num : null;}\n\t\t\telse if (newType == DataSheetColumn.Real) {let num = parseFloat(val); row[col] = isFinite(num) ? num : null;}\n\t\t\telse if (newType == DataSheetColumn.Boolean) row[col] = val.toLowerCase() == 'true' ? true : false;\n\t\t}\n\n\t\tthis.data.colData[col].type = newType;\n\t}\n\tpublic ensureColumn(name:string, type:DataSheetColumn, descr:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].name == name)\n\t\t{\n\t\t\tif (this.data.colData[n].type != type) this.changeColumnType(n, type);\n\t\t\tthis.data.colData[n].descr = descr;\n\t\t\treturn n;\n\t\t}\n\t\treturn this.appendColumn(name, type, descr);\n\t}\n\tpublic reorderColumns(order:number[]):void\n\t{\n\t\tlet identity = true;\n\t\tfor (let n = 0; n < order.length - 1; n++) if (order[n] != order[n + 1] - 1) {identity = false; break;}\n\t\tif (identity) return; // nothing to do\n\n\t\tthis.data.colData = Vec.idxGet(this.data.colData, order);\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n\t}\n\tpublic appendRow():number\n\t{\n\t\tthis.data.numRows++;\n\t\tlet row = new Array();\n\t\tfor (let n = 0; n < this.data.numCols; n++) row.push(null);\n\t\tthis.data.rowData.push(row);\n\t\treturn this.data.numRows - 1;\n\t}\n\tpublic appendRowFrom(srcDS:DataSheet, row:number):number\n\t{\n\t\tthis.data.numRows++;\n\t\tthis.data.rowData.push(srcDS.data.rowData[row].slice(0));\n\t\treturn this.data.numRows - 1;\n\t}\n\tpublic insertRow(row:number):void\n\t{\n\t\tthis.data.numRows++;\n\t\tlet data = new Array();\n\t\tfor (let n = 0; n < this.data.numCols; n++) data.push(null);\n\t\tthis.data.rowData.splice(row, 0, data);\n\t}\n\tpublic deleteRow(row:number):void\n\t{\n\t\tthis.data.numRows--;\n\t\tthis.data.rowData.splice(row, 1);\n\t}\n\tpublic deleteAllRows():void\n\t{\n\t\tthis.data.numRows = 0;\n\t\tthis.data.rowData = new Array();\n\t}\n\tpublic moveRowUp(row:number):void\n\t{\n\t\tlet data = this.data.rowData[row];\n\t\tthis.data.rowData[row] = this.data.rowData[row - 1];\n\t\tthis.data.rowData[row - 1] = data;\n\t}\n\tpublic moveRowDown(row:number):void\n\t{\n\t\tlet data = this.data.rowData[row];\n\t\tthis.data.rowData[row] = this.data.rowData[row + 1];\n\t\tthis.data.rowData[row + 1] = data;\n\t}\n\tpublic swapRows(row1:number, row2:number):void\n\t{\n\t\tVec.swap(this.data.rowData, row1, row2);\n\t}\n\tpublic exciseSingleRow(row:number):DataSheet\n\t{\n\t\tlet newData =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: this.data.numCols,\n\t\t\tnumRows: 1,\n\t\t\tnumExtens: this.data.numExtens,\n\t\t\tcolData: this.data.colData.slice(0),\n\t\t\trowData: [this.data.rowData[row].slice(0)],\n\t\t\textData: this.data.extData.slice(0)\n\t\t};\n\t\treturn new DataSheet(newData);\n\t}\n\tpublic colIsPrimitive(col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tlet ct = this.data.colData[col].type;\n\t\treturn ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n\t}\n\tpublic findColByName(name:string, type?:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].name == name)\n\t\t{\n\t\t\tif (type == null || this.data.colData[n].type == type) return n;\n\t\t}\n\t\treturn -1;\n\t}\n\tpublic firstColOfType(type:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].type == type) return n;\n\t\treturn -1;\n\t}\n\n\t// bring in a cell from the contents of another datasheet's cell, making an honest attempt to convert the data\n\t// if the type is different; completely incompatible data equates to null\n\tpublic copyCell(toRow:number, toCol:number, fromDS:DataSheet, fromRow:number, fromCol:number):void\n\t{\n\t\tthis.setToNull(toRow, toCol);\n\t\tif (fromDS.isNull(fromRow, fromCol)) return;\n\t\tlet obj = fromDS.getObject(fromRow, fromCol);\n\t\tthis.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n\t}\n\n\t// when possibly converting between two column types, make sure that the object is compatible\n\tpublic static convertType(obj:any, fromType:DataSheetColumn, toType:DataSheetColumn):any\n\t{\n\t\tconst ft = fromType, tt = toType;\n\t\tif (obj == null || ft == tt || (typeof obj == 'string' && obj == '')) return obj;\n\n\t\tif (tt == DataSheetColumn.String)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.Integer) return obj.toString();\n\t\t\telse if (ft == DataSheetColumn.Real) return obj.toString();\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 'true' : 'false';\n\t\t}\n\t\telse if (tt == DataSheetColumn.Real)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return safeFloat(obj, null);\n\t\t\telse if (ft == DataSheetColumn.Integer) return obj;\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 1 : 0;\n\t\t}\n\t\telse if (tt == DataSheetColumn.Integer)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return safeInt(obj, null);\n\t\t\telse if (ft == DataSheetColumn.Real) return Math.round(obj);\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 1 : 0;\n\t\t}\n\t\telse if (tt == DataSheetColumn.Boolean)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return (obj as string).toLowerCase() == 'true';\n\t\t\telse if (ft == DataSheetColumn.Integer) return obj > 0;\n\t\t\telse if (ft == DataSheetColumn.Real) return obj >= 0.5;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// converts a cell to a string by whatever means necessary (or returns null)\n\tpublic toString(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : obj.toString();\n\t}\n\n\t// converts a cell to a number; returns null or NaN as appropriate\n\tpublic toInt(row:number, col:number):number\n\t{\n\t\tif (!this.colIsPrimitive(col)) return null;\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : parseInt(obj);\n\t}\n\tpublic toReal(row:number, col:number):number\n\t{\n\t\tif (!this.colIsPrimitive(col)) return null;\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : parseFloat(obj);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\n\n/*\n\tAbstract base class for all \"Aspects\".\n\n\tAn aspect is a piece of functionality that sits on top of an existing datasheet and provides an extra layer of\n\tinterpretation. The scalar datatypes used by datasheets are very basic, and can be used or abused with relatively\n\tlittle implied structure.\n\n\tAspects can be created explicitly in code, and they will be handed a datasheet instance to operate on. They are\n\texpected to install whatever metadata they need, within the constructor (e.g. extensions, and additional fields).\n\n\tIf the aspect installs an extension which is given the type \"org.mmi.aspect.{something}\", then it is possible for the\n\taspect to be installed automatically at key points (by the AspectList class), as long as the class named\n\t\"com.mmi.core.aspect.{something\"} or \"com.mmi.aspect.{something}\" can be found (note the switch from 'org' to 'com').\n\n\tAn aspect must always be pessimistic about the integrity of its data. DataSheets can be modified by non-aspect-aware\n\teditors. On creation it must be prepared to create its metadata/necessary fields from scratch, or to repair _any_ kind of\n\tcorruption performed by an external process. Implementation of certain methods in the Aspect class can help to\n\tprevent these conflicts, but they should not be relied on.\n*/\n\nexport interface AspectTextRendering\n{\n\tname:string;\n\tdescr:string;\n\ttext:string;\n\ttype:number; // one of Aspect.TEXT_*\n}\nexport interface AspectGraphicRendering\n{\n\tname:string;\n\tmetavec:MetaVector;\n}\n\nexport abstract class Aspect\n{\n\tpublic ds:DataSheet;\n\tprotected allowModify = true; // if set to false, aspect is not allowed to modify any part of the header\n\tpublic subordinateCodes:string[] = []; // in case this is a subclass, list codes of aspects upon which it's built\n\n\t// usually provide an existing datasheet with the aspect already installed; if not, it will be added (as long as\n\t// modification is allowed); if no datasheet, creates a blank one\n\tconstructor(public code:string, ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tthis.ds = ds ? ds : new DataSheet();\n\t\tif (allowModify != null) this.allowModify = allowModify;\n\t}\n\n\t// must return a simple, short string describing the aspect\n\tpublic abstract plainHeading():string;\n\n\t// if the aspect wants to \"claim\" any column names (whether they exist or not) for its own purposes - nominally both\n\t// rendering and editing - it should override this method and return true; various implementations may or may not choose\n\t// to honour this\n\tpublic isColumnReserved(colName:string):boolean {return false;}\n\n\t// a bulk version of above: override this only if is overhead per determination\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet resMask = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++) resMask[n] = this.isColumnReserved(colNames[n]);\n\t\treturn resMask;\n\t}\n\n\t// some aspects reserve multiple rows as a \"block\" (e.g. multistep reaction experiments); the following two methods must\n\t// be overidden to achieve this: a row must be able to indicate whether it is the beginning of a block; and the block size\n\t// must be countable; the default implementation implies each row is a singleton; note that both of these methods are\n\t// required, because the implied results may be inconsistent with inconsistent datasheets (e.g. streams)\n\tpublic rowFirstBlock(row:number):boolean {return true;}\n\tpublic rowBlockCount(row:number):number {return 1;}\n\n\t// given another aspect (presumed to be the same type), make sure the parameters of the current aspect are such that it can\n\t// accommodate data from the new one; various header settings and columns must be modified as necessary\n\tpublic aspectUnion(other:Aspect):void {}\n\n\t// provides an opportunity to carry out modifications on a newly added row, which is intended to represent a new unit entity - the aspect may need\n\t// to setup some defaults\n\tpublic initiateNewRow(row:number):void {}\n\n\t// companion to above: returns a list of rows that can be considered blank because they are auto-created\n\tpublic columnEffectivelyBlank(row:number):string[] {return [];}\n\n\t// rendering:\n\t//\t\tan aspect may optionally volunteer to provide some static visualisation data to describe itself; this balances\n\t//\t\tout against the aspect's ability to reserve columns, which typically means that they will not be displayed; the\n\t//\t\tnumber and types of renderings can vary from row to row\n\n\t// text rendering: this is analogous to a pseudocolumn, and so name & description may optionally be manufactured as well\n\t// as text content\n\tpublic static TEXT_PLAIN = 0;\n\tpublic static TEXT_LINK = 1;\n\tpublic static TEXT_HTML = 2;\n\n\tpublic numTextRenderings(row:number):number {return 0;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering {return null;}\n\n\t// graphical rendering: the caller must provide a vector graphics context, into which will be drawn a visual representation\n\t// of the rendering; a render policy is provided, and the implementation is expected make use of it (e.g. scale, foreground\n\t// colour); the returned object provides additional metadata: the vector graphics builder object is typically the\n\t// same object as provided as the parameter\n\tpublic numGraphicRenderings(row:number):number {return 0;}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering {return null;}\n\n\t// header rendering: some number of text items that describe the datasheet overall; these are typically {name:value} pairs, which\n\t// are shown at the beginning of the datasheet, and supplement the universal title & description fields\n\tpublic numHeaderRenderings():number {return 0;}\n\tpublic produceHeaderRendering(idx:number):AspectTextRendering {return null;}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {Aspect} from './Aspect';\n\n/*\n\tThe AspectList class is used as a way to fetch all of the recognised aspects that are installed within a given datasheet, without\n\thaving to manually invoke each of the classes individually. Each aspect that is implemented within the toolkit needs to be added\n\texplicitly here, if it is going to get automatically considered during routine operations (e.g. rendering arbitrary datasheets).\n*/\n\ninterface SupportedAspect\n{\n\tcode:string;\n\tname:string;\n\tclassdef:any;\n}\nlet supportedAspects:Record<string, SupportedAspect> = {}; // code-to-definition\n\n//\teach aspect has to call this method globally as early as possible in order to be recognised; e.g.\n//\t\tclass CustomAspect extends Aspect {...}\n//\t\tregisterAspect(CustomAspect);\nexport function registerAspect(classdef:any):void\n{\n\tlet code = classdef.CODE as string, name = classdef.NAME as string;\n\tsupportedAspects[code] = {code, name, classdef};\n}\n\nexport class AspectList\n{\n\tconstructor(public ds:DataSheet)\n\t{\n\t}\n\n\t// returns two arrays: the first is a list of aspect codes that exist within the datasheet's header already; the second is a list of\n\t// codes from the recognised list that are not; note that any aspects that are not in either of these lists are missing because they're\n\t// not encoded within this class, which means that they're probably not supported at all by this toolkit\n\tpublic list():[string[], string[]]\n\t{\n\t\tlet present:string[] = [], absent:string[] = [];\n\n\t\tlet codes = new Set<string>();\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) codes.add(this.ds.getExtType(n));\n\n\t\tfor (let code in supportedAspects) if (codes.has(code)) present.push(code); else absent.push(code);\n\n\t\treturn [present, absent];\n\t}\n\n\t// instantiates an aspect by creating the class instance that matches the given code; if the code is not in the supported list,\n\t// returns null; note that calling this function takes action that can modify the datasheet: it will be inducted if it does not\n\t// already exist; if it does exist, it is given the chance to make corrective changes to the content\n\tpublic instantiate(code:string):Aspect\n\t{\n\t\tlet supp = supportedAspects[code];\n\t\tif (supp) return new supp.classdef(this.ds) as Aspect;\n\t\treturn null;\n\t}\n\n\t// goes through the header and instantiates every applicable aspect that is inducted (equivalent to using list & instantiate each)\n\tpublic enumerate():Aspect[]\n\t{\n\t\tlet aspects:Aspect[] = [];\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++)\n\t\t{\n\t\t\tlet code = this.ds.getExtType(n);\n\t\t\tif (supportedAspects[code]) aspects.push(this.instantiate(code));\n\t\t}\n\t\treturn aspects;\n\t}\n\n\t// fetches just the name of an aspect, without instantiating it\n\tpublic aspectName(code:string):string\n\t{\n\t\tlet supp = supportedAspects[code];\n\t\treturn supp ? supp.name : null;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect, AspectTextRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tAssayProvenance: informs that a datasheet originates from a distinct assay measurement of a particular\n\tbiological target or property, and that each row represents a compound and a measurement. There is some\n\tlatitude to the specifics of each row, but most of the information has defaults that are stored in the\n\theader.\n*/\n\nexport class AssayProvenanceHeader\n{\n\tpublic prefixes:Record<string, string> = {};\n\tpublic targetName = '';\n\tpublic targetURI = '';\n\tpublic organismName = '';\n\tpublic organismURI = '';\n\tpublic targetTypeName = '';\n\tpublic targetTypeURI = '';\n\tpublic cellName = '';\n\tpublic cellURI = '';\n\tpublic assayTypeName = '';\n\tpublic assayTypeURI = '';\n\tpublic assayDescription = '';\n\tpublic sourceName = '';\n\tpublic sourceURI = '';\n\tpublic sourceVersion = '';\n\tpublic documentName = '';\n\tpublic documentURI = '';\n\tpublic measureTypeName = '';\n\tpublic measureTypeURI = '';\n\tpublic unitNames:string[] = [];\n\tpublic unitURIs:string[] = [];\n}\n\nexport class AssayProvenance extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.AssayProvenance';\n\tpublic static NAME = 'Assay Provenance';\n\n\tpublic static COLNAME_MOLECULE = 'Molecule'; // molecule\n\tpublic static COLNAME_NAME = 'Name'; // string\n\tpublic static COLNAME_VALUE = 'Value'; // real\n\tpublic static COLNAME_ERROR = 'Error'; // real\n\tpublic static COLNAME_UNITS = 'Units'; // string\n\tpublic static COLNAME_RELATION = 'Relation'; // string\n\tpublic static COLNAME_SOURCEURI = 'SourceURI'; // string\n\n\t//\tprivate static final String[] RESERVED_COLUMNS = {COLNAME_MOLECULE, COLNAME_NAME, COLNAME_VALUE, COLNAME_ERROR, COLNAME_UNITS, COLNAME_RELATION, COLNAME_SOURCEURI};\n\n\t// convenient suggestions for unit URIs\n\tpublic static URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062'; // moles per litre (mol/L)\n\tpublic static URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063'; // milli-moles per litre\n\tpublic static URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064'; // micro-moles per litre\n\tpublic static URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065'; // nano-moles per litre\n\tpublic static URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066'; // pico-moles per litre\n\tpublic static URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101'; // log10 of mol/L\n\tpublic static URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102'; // -log10 of mol/L\n\tpublic static URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175'; // grams per litre (g/L)\n\tpublic static URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273'; // milligrams per litre\n\tpublic static URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275'; // micrograms per litre\n\tpublic static URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023'; // true/false\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isAssayProvenance(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == AssayProvenance.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(AssayProvenance.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():AssayProvenanceHeader\n\t{\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t\treturn this.parseMetaData(this.ds.getExtData(n));\n\t\treturn null;\n\t}\n\tpublic setHeader(header:AssayProvenanceHeader):void\n\t{\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n\t}\n\n\tpublic getMolecule(row:number):Molecule\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n\t\treturn col < 0 ? null : this.ds.getMolecule(row, col);\n\t}\n\tpublic getName(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getValue(row:number):number\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n\t\treturn col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n\t}\n\tpublic getError(row:number):number\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n\t\tif (col < 0) return null;\n\t\tif (this.ds.isNull(row, col)) return Number.NaN;\n\t\tlet err = this.ds.getReal(row, col);\n\t\tif (err <= 0) return Number.NaN;\n\t\treturn err;\n\t}\n\tpublic getUnits(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getRelation(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getSourceURI(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic setMolecule(row:number, v:Molecule):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n\t\tif (col >= 0) this.ds.setMolecule(row, col, v);\n\t}\n\tpublic setName(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setValue(row:number, v:number):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n\t\tif (col < 0) {}\n\t\telse if (Number.isNaN(v)) this.ds.setToNull(row, col);\n\t\telse this.ds.setReal(row, col, v);\n\t}\n\tpublic setError(row:number, v:number):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n\t\tif (col < 0) {}\n\t\telse if (Number.isNaN(v)) this.ds.setToNull(row, col);\n\t\telse this.ds.setReal(row, col, v);\n\t}\n\tpublic setUnits(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setRelation(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setSourceURI(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet header = new AssayProvenanceHeader();\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t{\n\t\t\theader = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, DataSheetColumn.Molecule, 'Molecular structure of compound being measured');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_NAME, DataSheetColumn.String, 'Name of compound');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, DataSheetColumn.Real, 'Measured value');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, DataSheetColumn.Real, 'Experimental error of measurement');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, DataSheetColumn.String, 'Units of measurement');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, DataSheetColumn.String, 'Relation: exact, greater or less');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, DataSheetColumn.String, 'Source identifier for activity measurement');\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(header);\n\t\t\tthis.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):AssayProvenanceHeader\n\t{\n\t\tlet header = new AssayProvenanceHeader();\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('pfx:')) header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetName=')) header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetURI=')) header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('organismName=')) header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('organismURI=')) header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetTypeName=')) header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetTypeURI=')) header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('cellName=')) header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('cellURI=')) header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayTypeName=')) header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayTypeURI=')) header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayDescription=')) header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceName=')) header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceURI=')) header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceVersion=')) header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('documentName=')) header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('documentURI=')) header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('measureTypeName=')) header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('measureTypeURI=')) header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('unit:'))\n\t\t\t{\n\t\t\t\theader.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n\t\t\t\theader.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n\t\t\t}\n\t\t}\n\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:AssayProvenanceHeader):string\n\t{\n\t\tlet content = '';\n\n\t\tfor (let pfx in header.prefixes) content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n\t\tcontent += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n\t\tcontent += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n\t\tcontent += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n\t\tcontent += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n\t\tcontent += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n\t\tcontent += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n\t\tcontent += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n\t\tcontent += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n\t\tcontent += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n\t\tcontent += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n\t\tcontent += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n\t\tcontent += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n\t\tcontent += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n\t\tcontent += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n\t\tcontent += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n\t\tcontent += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n\t\tcontent += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n\t\tcontent += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n\t\tfor (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n\t\t\tcontent += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n\n\t\treturn content;\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return AssayProvenance.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n\t\t\t\tcolName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n\t\t\t\tcolName == AssayProvenance.COLNAME_SOURCEURI;\n\t}\n\n\tpublic numTextRenderings(row:number):number {return 2;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering\n\t{\n\t\tlet header = this.getHeader();\n\n\t\tif (idx == 0)\n\t\t{\n\t\t\tlet tr:AspectTextRendering =\n\t\t\t{\n\t\t\t\tname: 'Activity',\n\t\t\t\tdescr: 'Activity measurement details for this record',\n\t\t\t\ttext: '',\n\t\t\t\ttype: Aspect.TEXT_PLAIN\n\t\t\t};\n\n\t\t\tlet val = this.getValue(row), error = this.getError(row);\n\t\t\tlet units = this.getUnits(row), rel = this.getRelation(row);\n\n\t\t\ttr.text = '';\n\t\t\tif (!Number.isNaN(val))\n\t\t\t{\n\t\t\t\tif (rel) tr.text += rel + ' ';\n\t\t\t\ttr.text += val;\n\t\t\t\tif (!Number.isNaN(error)) tr.text += ' \\u{00B1} ' + error;\n\t\t\t\tif (units) tr.text += ' ' + units;\n\t\t\t}\n\t\t\treturn tr;\n\t\t}\n\t\telse if (idx == 1)\n\t\t{\n\t\t\tlet tr:AspectTextRendering =\n\t\t\t{\n\t\t\t\tname: 'Source',\n\t\t\t\tdescr: 'Origin of the structure and activity measurement',\n\t\t\t\ttext: '',\n\t\t\t\ttype: Aspect.TEXT_LINK\n\t\t\t};\n\n\t\t\tlet url = this.getSourceURI(row);\n\t\t\tfor (let pfx in header.prefixes) if (url.startsWith(pfx + ':'))\n\t\t\t{\n\t\t\t\turl = header.prefixes[pfx] + url.substring(pfx.length + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttr.text = url;\n\t\t\treturn tr;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nregisterAspect(AssayProvenance);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tBayesianSource: tracks some number of numeric columns which can be used to create Bayesian models. Keeps track of various pre-processing\n\trequirements (e.g. threshold), parameters (e.g. folding) and metadata (e.g. description).\n*/\n\nexport class BayesianSourceModel\n{\n\tpublic colNameMolecule = ''; // where to grab the molecules from\n\tpublic colNameValue = ''; // name of column with numeric source content (integer/real/boolean)\n\tpublic thresholdValue = 0.5; // threshold for turning free numbers into booleans\n\tpublic thresholdRelation = '>='; // one of \"<\", \">\", \"<=\", \">=\"\n\t// (wouldn't it be a good idea to put the fingerprint type in here?)\n\tpublic folding = 0; // bitscale: 0=no folding, 2^n=folding into a bitmask range\n\tpublic noteField = ''; // field name for output model; defaults to value column name\n\tpublic noteTitle = ''; // model title: defaults to datasheet title\n\tpublic noteOrigin = ''; // model origin: defaults to filename\n\tpublic noteComment = ''; // totally optional, no default\n}\n\nexport class BayesianSource extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BayesianSource';\n\tpublic static NAME = 'Bayesian Source';\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as this aspect\n\tpublic static isBayesianSource(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BayesianSource.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BayesianSource.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getModels():BayesianSourceModel[]\n\t{\n\t\tlet content = '';\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tcontent = this.ds.getExtData(n);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet models:BayesianSourceModel[] = [];\n\t\tlet m:BayesianSourceModel = null;\n\n\t\tfor (let line of content.split('\\n'))\n\t\t{\n\t\t\tif (line == 'model:')\n\t\t\t{\n\t\t\t\tif (m != null) models.push(m);\n\t\t\t\tm = {} as BayesianSourceModel;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (m == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colNameMolecule=')) m.colNameMolecule = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colNameValue=')) m.colNameValue = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdValue=')) m.thresholdValue = parseFloat(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdRelation=')) m.thresholdRelation = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('folding=')) m.folding = parseInt(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteField=')) m.noteField = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteTitle=')) m.noteTitle = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteOrigin=')) m.noteOrigin = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteComment=')) m.noteComment = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t}\n\n\t\tif (m != null) models.push(m);\n\t\treturn models;\n\t}\n\tpublic setModels(models:BayesianSourceModel[]):void\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let m of models)\n\t\t{\n\t\t\tlines.push('model:');\n\t\t\tlines.push('colNameMolecule=' + MoleculeStream.skEscape(m.colNameMolecule));\n\t\t\tlines.push('colNameValue=' + MoleculeStream.skEscape(m.colNameValue));\n\t\t\tlines.push('thresholdValue=' + m.thresholdValue);\n\t\t\tlines.push('thresholdRelation=' + MoleculeStream.skEscape(m.thresholdRelation));\n\t\t\tlines.push('folding=%d' + m.folding);\n\t\t\tlines.push('noteField=' + MoleculeStream.skEscape(m.noteField));\n\t\t\tlines.push('noteTitle=' + MoleculeStream.skEscape(m.noteTitle));\n\t\t\tlines.push('noteOrigin=' + MoleculeStream.skEscape(m.noteOrigin));\n\t\t\tlines.push('noteComment=' + MoleculeStream.skEscape(m.noteComment));\n\t\t}\n\n\t\tlet content = lines.join('\\n');\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content.toString());\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension('BayesianSource', BayesianSource.CODE, content.toString());\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tlet models = this.getModels();\n\t\t\tthis.setModels(models);\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BayesianSource.NAME;}\n}\n\nregisterAspect(BayesianSource);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {BayesianSource} from './BayesianSource';\n\n/*\n\tBayesian prediction: records some number of outcomes from Bayesian models, noting the columns that hold the predictions themselves and\n\tkeeping some metadata about each.\n*/\n\nexport class BayesianPredictionModel\n{\n\tpublic colMolecule:string;\n\tpublic colRaw:string;\n\tpublic colScaled:string;\n\tpublic colArcTan:string;\n\tpublic colDomain:string;\n\tpublic colAtoms:string;\n\tpublic name:string;\n\tpublic description:string;\n\tpublic targetName:string;\n\tpublic isOffTarget:boolean;\n}\n\nexport class BayesianPredictionOutcome\n{\n\tpublic raw:number;\n\tpublic scaled:number;\n\tpublic arctan:number;\n\tpublic domain:number;\n\tpublic atoms:number[];\n}\n\nexport class BayesianPrediction extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BayesianPrediction';\n\tpublic static NAME = 'Bayesian Prediction';\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as this aspect\n\tpublic static isBayesianPrediction(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BayesianPrediction.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BayesianPrediction.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\tpublic getModels():BayesianPredictionModel[]\n\t{\n\t\tlet content = '';\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianPrediction.CODE)\n\t\t{\n\t\t\tcontent = this.ds.getExtData(n);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet models:BayesianPredictionModel[] = [];\n\t\tlet m:BayesianPredictionModel = null;\n\n\t\tfor (let line of content.split('\\n'))\n\t\t{\n\t\t\tif (line == 'model:')\n\t\t\t{\n\t\t\t\tif (m != null) models.push(m);\n\t\t\t\tm = {} as BayesianPredictionModel;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (m == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colMolecule=')) m.colMolecule = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colRaw=')) m.colRaw = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colScaled=')) m.colScaled = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colArcTan=')) m.colArcTan = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colDomain=')) m.colDomain = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colAtoms=')) m.colAtoms = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('name=')) m.name = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('description=')) m.description = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetName=')) m.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('isOffTarget=')) m.isOffTarget = line.substring(eq + 1) == 'true';\n\t\t}\n\n\t\tif (m != null) models.push(m);\n\t\treturn models;\n\t}\n\tpublic setModels(models:BayesianPredictionModel[]):void\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let m of models)\n\t\t{\n\t\t\tlines.push('model:');\n\t\t\tlines.push('colMolecule=' + MoleculeStream.skEscape(m.colMolecule));\n\t\t\tlines.push('colRaw=' + MoleculeStream.skEscape(m.colRaw));\n\t\t\tlines.push('colScaled=' + MoleculeStream.skEscape(m.colScaled));\n\t\t\tlines.push('colArcTan=' + MoleculeStream.skEscape(m.colArcTan));\n\t\t\tlines.push('colDomain=' + MoleculeStream.skEscape(m.colDomain));\n\t\t\tlines.push('colAtoms=' + MoleculeStream.skEscape(m.colAtoms));\n\t\t\tlines.push('name=' + MoleculeStream.skEscape(m.name));\n\t\t\tlines.push('description=' + MoleculeStream.skEscape(m.description));\n\t\t\tlines.push('targetName=' + MoleculeStream.skEscape(m.targetName));\n\t\t\tlines.push('isOffTarget=' + m.isOffTarget);\n\t\t}\n\n\t\tlet content = lines.join('\\n');\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content.toString());\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension('BayesianPrediction', BayesianPrediction.CODE, content.toString());\n\t}\n\n\t// rowdata access\n\tpublic getOutcome(row:number, model:BayesianPredictionModel):BayesianPredictionOutcome\n\t{\n\t\tlet outcome = new BayesianPredictionOutcome();\n\t\toutcome.raw = this.ds.getReal(row, model.colRaw);\n\t\toutcome.scaled = this.ds.getReal(row, model.colScaled);\n\t\toutcome.arctan = this.ds.getReal(row, model.colArcTan);\n\t\toutcome.domain = this.ds.getReal(row, model.colDomain);\n\n\t\tlet strAtoms = this.ds.getString(row, model.colAtoms);\n\t\tif (strAtoms)\n\t\t{\n\t\t\toutcome.atoms = [];\n\t\t\tfor (let b of strAtoms.split(',')) outcome.atoms.push(parseFloat(b));\n\t\t}\n\n\t\treturn outcome;\n\t}\n\tpublic setOutcome(row:number, model:BayesianPredictionModel, outcome:BayesianPredictionOutcome):void\n\t{\n\t\tlet col = this.ds.findColByName(model.colRaw, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.raw);\n\n\t\tcol = this.ds.findColByName(model.colScaled, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.scaled);\n\n\t\tcol = this.ds.findColByName(model.colArcTan, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.arctan);\n\n\t\tcol = this.ds.findColByName(model.colDomain, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.domain);\n\n\t\tcol = this.ds.findColByName(model.colAtoms, DataSheetColumn.String);\n\t\tif (col >= 0) this.ds.setString(row, col, outcome.atoms ? outcome.atoms.toString() : null);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tlet models = this.getModels();\n\t\t\tthis.setModels(models);\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BayesianSource.NAME;}\n}\n\nregisterAspect(BayesianPrediction);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectTextRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tMeasurement: provides some number of measurement fields, which augment an ordinary numeric field to add units,\n    modifier, error and overall metadata. This aspect is useful for collecting multiple columns of measurements such as\n    physical properties or assay readouts.\n*/\n\nexport interface MeasurementDataUnit\n{\n\tname:string;\n\turi:string;\n}\n\nexport interface MeasurementDataField\n{\n\tname:string;\n\tunits:string[];\n\tdefnURI:string[];\n}\n\nexport interface MeasurementDataHeader\n{\n\tunits:MeasurementDataUnit[];\n\tfields:MeasurementDataField[];\n}\n\nexport interface MeasurementDataValue\n{\n\tvalue:number;\n\terror:number;\n\tunits:string;\n\tmod:string;\n}\n\nexport class MeasurementData extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.MeasurementData';\n\tpublic static NAME = 'Measurement Data';\n\n\tpublic static SUFFIX_VALUE = '';\n\tpublic static SUFFIX_ERROR = '_error';\n\tpublic static SUFFIX_UNITS = '_units';\n\tpublic static SUFFIX_MOD = '_mod';\n\n\tprivate header:MeasurementDataHeader = {units: [], fields: []};\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata\n\tpublic static isMeasurementData(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == MeasurementData.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(MeasurementData.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():MeasurementDataHeader\n\t{\n\t\treturn this.header;\n\t}\n\tpublic setHeader(header:MeasurementDataHeader):void\n\t{\n\t\tthis.header = header;\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t}\n\n\t// applies the header, and also updates the columns if necessary\n\tpublic effectHeader(header:MeasurementDataHeader):void\n\t{\n\t\tthis.setHeader(header);\n\t\tthis.ensureFields();\n\t}\n\n\t// renames a field, updating both the header and the underlying columns\n\tpublic rename(fldidx:number, newName:string):void\n\t{\n\t\tlet oldName = this.header.fields[fldidx].name;\n\t\tif (oldName == newName) return;\n\n\t\tthis.header.fields[fldidx].name = newName;\n\t\tthis.setHeader(this.header);\n\n\t\tfor (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD])\n\t\t{\n\t\t\tlet col = this.ds.findColByName(oldName + sfx);\n\t\t\tif (col >= 0) this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n\t\t}\n\t}\n\n\t// return the list of columns that's reserved for just the indicated field\n\tpublic reservedColumns(fldidx:number):string[]\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\treturn [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n\t\t\t\tfieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n\t}\n\n\t// getting and setting values\n\tpublic getValue(row:number, fldidx:number):MeasurementDataValue\n\t{\n\t\treturn this.getValueField(row, this.header.fields[fldidx]);\n\t}\n\tpublic getValueField(row:number, field:MeasurementDataField):MeasurementDataValue\n\t{\n\t\tlet value:MeasurementDataValue = {value: Number.NaN, error: Number.NaN, units: '', mod: ''};\n\n\t\tlet colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0 && this.ds.notNull(row, colValue)) value.value = this.ds.getReal(row, colValue);\n\t\tif (colError >= 0 && this.ds.notNull(row, colError)) value.error = this.ds.getReal(row, colError);\n\t\tif (colUnits >= 0) value.units = this.ds.getString(row, colUnits);\n\t\tif (colMod >= 0) value.mod = this.ds.getString(row, colMod);\n\n\t\treturn value;\n\t}\n\n\tpublic setValue(row:number, fldidx:number, value:MeasurementDataValue):void\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\tlet colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0) if (isNaN(value.value)) this.ds.setToNull(row, colValue); else this.ds.setReal(row, colValue, value.value);\n\t\tif (colError >= 0) if (isNaN(value.error)) this.ds.setToNull(row, colError); else this.ds.setReal(row, colError, value.error);\n\t\tif (colUnits >= 0) this.ds.setString(row, colUnits, value.units);\n\t\tif (colMod >= 0) this.ds.setString(row, colMod, value.mod);\n\t}\n\n\tpublic clearValue(row:number, fldidx:number):void\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\tlet colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0) this.ds.setToNull(row, colValue);\n\t\tif (colError >= 0) this.ds.setToNull(row, colError);\n\t\tif (colUnits >= 0) this.ds.setToNull(row, colUnits);\n\t\tif (colMod >= 0) this.ds.setToNull(row, colMod);\n\t}\n\n\t// getting/setting description\n\tpublic getDescr(row:number, fldidx:number):string\n\t{\n\t\tlet col = this.ds.findColByName(this.header.fields[fldidx].name);\n\t\treturn col < 0 ? '' : this.ds.colDescr(col);\n\t}\n\tpublic setDescr(row:number, fldidx:number, descr:string):void\n\t{\n\t\tlet col = this.ds.findColByName(this.header.fields[fldidx].name);\n\t\tif (col >= 0) this.ds.changeColumnName(col, this.ds.colName(col), descr);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tthis.header = {units: [], fields: []};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.header = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.ensureFields();\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.header);\n\t\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t\t}\n\t}\n\n\t// makes sure the fields mentioned in the header are available\n\tprivate ensureFields():void\n\t{\n\t\tfor (let f of this.header.fields)\n\t\t{\n\t\t\tlet descr = 'Measurement';\n\t\t\tlet colidx = this.ds.findColByName(f.name);\n\t\t\tif (colidx >= 0) descr = this.ds.colDescr(colidx);\n\n\t\t\tif (this.allowModify)\n\t\t\t{\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real, descr);\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real, 'Error');\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String, 'Units');\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, DataSheetColumn.String, 'Modifier');\n\t\t\t}\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):MeasurementDataHeader\n\t{\n\t\tlet header:MeasurementDataHeader = {units: [], fields: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('unit='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length >= 2) header.units.push({name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1])});\n\t\t\t}\n\t\t\telse if (line.startsWith('field='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tlet f:MeasurementDataField = {name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: []};\n\t\t\t\tfor (let n = 1; n < bits.length; n++) f.units.push(MoleculeStream.skUnescape(bits[n]));\n\t\t\t\theader.fields.push(f);\n\t\t\t}\n\t\t\telse if (line.startsWith('definition='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet f = header.fields.find((f) => f.name == bits[0]);\n\t\t\t\t\tif (!f) continue;\n\t\t\t\t\tfor (let n = 1; n < bits.length; n++) f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:MeasurementDataHeader):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let u of header.units)\n\t\t{\n\t\t\tlines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n\t\t}\n\t\tfor (let f of header.fields)\n\t\t{\n\t\t\tlet line = 'field=' + MoleculeStream.skEscape(f.name);\n\t\t\tfor (let u of f.units) line += ',' + MoleculeStream.skEscape(u);\n\t\t\tlines.push(line);\n\n\t\t\tif (Vec.notBlank(f.defnURI))\n\t\t\t{\n\t\t\t\tline = 'definition=' + MoleculeStream.skEscape(f.name);\n\t\t\t\tfor (let d of f.defnURI) line += ',' + MoleculeStream.skEscape(d);\n\t\t\t\tlines.push(line);\n\t\t\t}\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return MeasurementData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet names = new Set<string>();\n\t\tfor (let f of this.header.fields)\n\t\t{\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_VALUE);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_ERROR);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_UNITS);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_MOD);\n\t\t}\n\t\tlet resv:boolean[] = [];\n\t\tfor (let col of colNames) resv.push(names.has(col));\n\t\treturn resv;\n\t}\n\n\tpublic numTextRenderings(row:number):number {return this.header.fields.length;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering\n\t{\n\t\tlet field = this.header.fields[idx];\n\t\tlet colField = this.ds.findColByName(field.name);\n\n\t\tlet tr:AspectTextRendering =\n\t\t{\n\t\t\tname: field.name,\n\t\t\tdescr: colField < 0 ? '' : this.ds.colDescr(colField),\n\t\t\ttext: '',\n\t\t\ttype: Aspect.TEXT_PLAIN\n\t\t};\n\n\t\tlet datum = this.getValue(row, idx);\n\t\tif (!Number.isNaN(datum.value))\n\t\t{\n\t\t\tif (datum.mod) tr.text += datum.mod + ' ';\n\t\t\ttr.text += datum.value;\n\t\t\tif (!Number.isNaN(datum.error)) tr.text += ' \\u{00B1} ' + datum.error;\n\t\t\tif (datum.units) tr.text += ' ' + datum.units;\n\t\t}\n\t\treturn tr;\n\t}\n}\n\nregisterAspect(MeasurementData);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {deepClone} from '../util/util';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {MeasurementData} from './MeasurementData';\n\n/*\n\tBinaryData: describes how continuous numeric data can be transformed into a true/false value, which is often an effective way\n\tto describe data where the criteria & binary data are known, but the precursor data may or may not.\n*/\n\nexport class BinaryDataField\n{\n\tpublic colNameSource:string; // the input feed (should be numeric)\n\tpublic colNameDest:string; // output column: enforced to be boolean\n\tpublic thresholdValue:number; // threshold for turning free numbers into booleans\n\tpublic thresholdRelation:string; // one of \"<\", \">\", \"<=\", \">=\"\n}\n\nexport class BinaryData extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BinaryData';\n\tpublic static NAME = 'Binary Data';\n\n\tprivate fields:BinaryDataField[] = [];\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isBinaryData(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BinaryData.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BinaryData.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getFields():BinaryDataField[]\n\t{\n\t\treturn deepClone(this.fields);\n\t}\n\tpublic setFields(fields:BinaryDataField[])\n\t{\n\t\tthis.fields = deepClone(fields);\n\t\tlet content = this.formatMetaData(fields);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t}\n\n\t// obtain the value, where destination takes precedence\n\tpublic getValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\tlet value = this.getDestValue(row, field);\n\t\tif (value != null) return value;\n\t\treturn this.getSourceValue(row, field);\n\t}\n\tpublic getSourceValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\tlet col = this.ds.findColByName(field.colNameSource);\n\t\tif (col < 0 || this.ds.isNull(row, col)) return null;\n\n\t\tlet ct = this.ds.colType(col);\n\t\tlet value = 0;\n\t\tif (ct == DataSheetColumn.Boolean) return this.ds.getBoolean(row, col);\n\t\telse if (ct == DataSheetColumn.Integer) value = this.ds.getInteger(row, col);\n\t\telse if (ct == DataSheetColumn.Real) value = this.ds.getReal(row, col);\n\t\telse return null;\n\n\t\tif (field.thresholdRelation == '>') return value > field.thresholdValue;\n\t\tif (field.thresholdRelation == '<') return value < field.thresholdValue;\n\t\tif (field.thresholdRelation == '>=') return value >= field.thresholdValue;\n\t\tif (field.thresholdRelation == '<=') return value <= field.thresholdValue;\n\t\treturn null;\n\t}\n\tpublic getDestValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\treturn this.ds.getBoolean(row, field.colNameDest);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.fields = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.fields);\n\t\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):BinaryDataField[]\n\t{\n\t\tlet fields:BinaryDataField[] = [];\n\t\tlet f:BinaryDataField = null;\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tif (line == 'field:')\n\t\t\t{\n\t\t\t\tif (f != null) fields.push(f as BinaryDataField);\n\t\t\t\tf = {colNameSource: '', colNameDest: '', thresholdValue: 0.5, thresholdRelation: '>='};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (f == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colNameSource=')) f.colNameSource = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colNameDest=')) f.colNameDest = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdValue=')) f.thresholdValue = parseFloat(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdRelation=')) f.thresholdRelation = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t}\n\n\t\tif (f != null) fields.push(f);\n\n\t\treturn fields;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(fields:BinaryDataField[]):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let f of fields)\n\t\t{\n\t\t\tlines.push('field:');\n\t\t\tlines.push('colNameSource=' + MoleculeStream.skEscape(f.colNameSource));\n\t\t\tlines.push('colNameDest=' + MoleculeStream.skEscape(f.colNameDest));\n\t\t\tlines.push('thresholdValue=' + f.thresholdValue);\n\t\t\tlines.push('thresholdRelation=' + MoleculeStream.skEscape(f.thresholdRelation));\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BinaryData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\t{return false;}\n}\n\nregisterAspect(BinaryData);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MoleculeStream} from '../io/MoleculeStream';\n\n/*\n\tExperiment reaction metadata: utilities and definitions.\n*/\n\nexport enum ExperimentMetaType\n{\n\tRole = 'role', // to assign an explicit role to a reagent (see ComponentClassType; default is auto)\n\tPressure = 'pressure', // when a reagent is applied at a nonstandard pressure\n\tTurnoverNumber = 'turnover_number', // catalyst turnovers (unitless)\n\tEnantiomericExcess = 'enantiomeric_excess', // percent of desired enantiomer above undesired\n\tTime = 'time', // total time for reaction step\n\tHeat = 'heat', // maximum temperature of reaction step\n\tLight = 'light', // denotes reaction powered by EM radiation\n}\n\nexport enum ExperimentMetaApplic\n{\n\tExperiment,\n\tStep,\n\tReactant,\n\tReagent,\n\tProduct,\n}\n\nexport enum ExperimentMetaValue\n{\n\tBoolean, // present = true, absent = false\n\tNumber, // requires a numeric value\n\tOptional, // numeric value is optiona; mere presence can be used as a flag\n\tString, // requires a string value\n}\n\nexport enum ExperimentMetaRoleType\n{\n\tReagent = 'reagent',\n\tCatalyst = 'catalyst',\n\tSolvent = 'solvent',\n\tAdjunct = 'adjunct',\n}\n\nexport class ExperimentMeta\n{\n\tpublic static APPLICABILITY =\n\t{\n\t\t[ExperimentMetaType.Role]: [ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.Pressure]: [ExperimentMetaApplic.Reactant, ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.TurnoverNumber]: [ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.EnantiomericExcess]: [ExperimentMetaApplic.Product],\n\t\t[ExperimentMetaType.Time]: [ExperimentMetaApplic.Step],\n\t\t[ExperimentMetaType.Heat]: [ExperimentMetaApplic.Step],\n\t\t[ExperimentMetaType.Light]: [ExperimentMetaApplic.Step],\n\t};\n\n\tpublic static NAMES =\n\t{\n\t\t[ExperimentMetaType.Role]: 'Role',\n\t\t[ExperimentMetaType.Pressure]: 'Pressure',\n\t\t[ExperimentMetaType.TurnoverNumber]: 'Turnover Number',\n\t\t[ExperimentMetaType.EnantiomericExcess]: 'Enantiomeric Excess',\n\t\t[ExperimentMetaType.Time]: 'Time',\n\t\t[ExperimentMetaType.Heat]: 'Heat',\n\t\t[ExperimentMetaType.Light]: 'Light',\n\t};\n\n\tpublic static UNITS =\n\t{\n\t\t[ExperimentMetaType.Pressure]: 'atm',\n\t\t[ExperimentMetaType.TurnoverNumber]: null as string,\n\t\t[ExperimentMetaType.EnantiomericExcess]: '%',\n\t\t[ExperimentMetaType.Time]: 'hr',\n\t\t[ExperimentMetaType.Heat]: '\\u{00B0}C',\n\t\t[ExperimentMetaType.Light]: 'nm',\n\t};\n\n\tpublic static VALUES =\n\t{\n\t\t[ExperimentMetaType.Role]: ExperimentMetaValue.String,\n\t\t[ExperimentMetaType.Pressure]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.TurnoverNumber]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.EnantiomericExcess]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.Time]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.Heat]: ExperimentMetaValue.Optional,\n\t\t[ExperimentMetaType.Light]: ExperimentMetaValue.Optional,\n\t};\n\n\t// given a string that contains some number of lines, returns a convenient array representation\n\tpublic static unpackMeta(str:string):[ExperimentMetaType, number | string][]\n\t{\n\t\tif (!str) return [];\n\t\tlet list:[ExperimentMetaType, number | string][] = [];\n\t\tfor (let line of str.split('\\n')) if (line)\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tlet type = MoleculeStream.skUnescape(eq < 0 ? line : line.substring(0, eq)) as ExperimentMetaType;\n\t\t\tlet value:number | string = eq < 0 ? null : MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\tlet vtype = this.VALUES[type];\n\t\t\tif (value != null && (vtype == ExperimentMetaValue.Number || vtype == ExperimentMetaValue.Optional)) value = parseFloat(value);\n\t\t\tlist.push([type, value]);\n\t\t}\n\t\tlist.sort((l1, l2) => (l1[0] as string).localeCompare(l2[0] as string));\n\t\treturn list;\n\t}\n\n\t// convert a list of type/value codes into packed string representation\n\tpublic static packMeta(list:[ExperimentMetaType, number | string][]):string\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let [type, value] of list)\n\t\t{\n\t\t\tif (value == null)\n\t\t\t\tlines.push(MoleculeStream.skEscape(type));\n\t\t\telse\n\t\t\t\tlines.push(MoleculeStream.skEscape(type) + '=' + MoleculeStream.skEscape(value.toString()));\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// unpacks, sets & packs, all in one go\n\tpublic static withMetaKey(metastr:string, type:ExperimentMetaType, value:string):string\n\t{\n\t\tlet list = this.unpackMeta(metastr);\n\t\tlet item = list.find((look) => look[0] == type);\n\t\tif (value != null)\n\t\t{\n\t\t\tif (item) item[1] = value; else list.push([type, value]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist = list.filter((look) => look[0] != type);\n\t\t}\n\t\treturn this.packMeta(list);\n\t}\n\n\t// return a short description of the instantiated value for display onscreen\n\tpublic static describeMeta(type:ExperimentMetaType, value:number | string):string\n\t{\n\t\tlet formatFloat = (val:number, maxSigFig:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val == 0) return '0';\n\t\t\tlet digits = Math.ceil(-Math.log10(Math.abs(val)));\n\t\t\tdigits = Math.max(0, Math.max(digits, maxSigFig));\n\t\t\tlet str = val.toFixed(digits);\n\t\t\tif (str.indexOf('.') < 0) return str;\n\t\t\twhile (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\tif (str.endsWith('.')) str = str.substring(0, str.length - 1);\n\t\t\treturn str;\n\t\t};\n\n\t\tif (type == ExperimentMetaType.Role)\n\t\t{\n\t\t\tif (!value) return null;\n\t\t\treturn `role: ${value}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Pressure)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)} atm`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.TurnoverNumber)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)} turnover${value == 1 ? '' : 's'}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.EnantiomericExcess)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)}% ee`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Time)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\tif (value as number < 1)\n\t\t\t{\n\t\t\t\tlet mins = value as number * 60;\n\t\t\t\treturn `${formatFloat(mins, 2)} min${mins == 1 ? '' : 's'}`;\n\t\t\t}\n\t\t\telse return `${formatFloat(value as number, 2)} hour${value == 1 ? '' : 's'}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Heat)\n\t\t{\n\t\t\tif (value == null) return '\\u{0394}';\n\t\t\treturn `${formatFloat(value as number, 2)} \\u{00B0}C`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Light)\n\t\t{\n\t\t\tif (value == null) return 'h\\u{03BD}';\n\t\t\treturn `${formatFloat(value as number, 2)} nm`;\n\t\t}\n\t\treturn null;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentComponent, ExperimentComponentType, ExperimentEntry} from '../aspect/Experiment';\nimport {formatDouble} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tQuantity interconversions: for an Experiment entry, figure out all of the real-and-converted quantities, and\n\tmark them as such for convenient recall.\n*/\n\nexport const enum QuantityCalcRole\n{\n\tPrimary = 1, // a reactant upon which ratios depend\n\tSecondary, // a stoichiometric reactant, intermediate or waste product\n\tProduct, // a final product for which yield should be calculated\n\tIndependent, // a nonstoichiometric reagent or waste product\n}\n\nexport const enum QuantityCalcStat\n{\n\tUnknown = 0, // no data, i.e. not provided and cannot be calculated\n\tActual, // user-provided data\n\tVirtual, // calculated data\n\tConflict, // user-provided data that clashes\n}\n\nexport class QuantityCalcComp\n{\n\tpublic role = 0;\n\tpublic molw = 0;\n\tpublic valueEquiv = 0;\n\tpublic statEquiv = QuantityCalcStat.Unknown;\n\tpublic valueMass = QuantityCalc.UNSPECIFIED;\n\tpublic statMass = QuantityCalcStat.Unknown;\n\tpublic valueVolume = QuantityCalc.UNSPECIFIED;\n\tpublic statVolume = QuantityCalcStat.Unknown;\n\tpublic valueMoles = QuantityCalc.UNSPECIFIED;\n\tpublic statMoles = QuantityCalcStat.Unknown;\n\tpublic valueDensity = QuantityCalc.UNSPECIFIED;\n\tpublic statDensity = QuantityCalcStat.Unknown;\n\tpublic valueConc = QuantityCalc.UNSPECIFIED;\n\tpublic statConc = QuantityCalcStat.Unknown;\n\tpublic valueYield = QuantityCalc.UNSPECIFIED;\n\tpublic statYield = QuantityCalcStat.Unknown;\n\n\tconstructor(public comp:ExperimentComponent, public step:number, public type:ExperimentComponentType, public idx:number)\n\t{\n\t}\n}\n\nexport class GreenMetrics\n{\n\tpublic step = 0; // reaction step\n\tpublic idx = 0; // index into the overall quantity list\n\tpublic massReact:number[] = [];\n\tpublic massProd:number[] = [];\n\tpublic massWaste:number[] = [];\n\tpublic massProdWaste:number[] = [];\n\tpublic molwReact:number[] = [];\n\tpublic molwProd:number[] = [];\n\tpublic impliedWaste = 0;\n\tpublic isBlank = false; // set to true if there's no content (blank entries can still be useful as placeholders)\n}\n\nexport class QuantityCalc\n{\n\tpublic static UNSPECIFIED = -1;\n\n\tpublic quantities:QuantityCalcComp[] = [];\n\n\tpublic primaryMoles:number[] = [];\n\tpublic idxPrimary:number[] = [];\n\tpublic idxYield:number[] = [];\n\tpublic allMassReact:number[] = [];\n\tpublic allMassProd:number[] = [];\n\tpublic allMassWaste:number[] = [];\n\n\tpublic greenMetrics:GreenMetrics[] = [];\n\n\t// ---------------- static methods -----------------\n\n\t// returns true if the stoichiometry string is equivalent to zero, i.e. non-stoichiometric\n\tpublic static isStoichZero(stoich:string):boolean\n\t{\n\t\tif (this.isStoichUnity(stoich)) return false;\n\t\tif (parseFloat(stoich) == 0) return true;\n\t\treturn false;\n\t}\n\t// returns true if the stoichiometry string is equivalent to one, which is the default state\n\tpublic static isStoichUnity(stoich:string):boolean\n\t{\n\t\tif (!stoich || stoich == '1') return true;\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\treturn numer != 0 && numer == denom;\n\t}\n\t// extracts the numerator and denominator from the stoichiometry and expresses them as numerator/denominator; makes\n\t// up suitable values if it is not expressed as a fraction\n\tpublic static extractStoichFraction(stoich:string):[number, number]\n\t{\n\t\tif (!stoich) return [1, 1];\n\n\t\tlet numer = 1, denom = 1;\n\n\t\tlet i = stoich.indexOf('/');\n\t\tif (i < 0)\n\t\t{\n\t\t\tlet v = parseFloat(stoich);\n\t\t\tif (v >= 0) numer = v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet v1 = parseFloat(stoich.substring(0, i)), v2 = parseFloat(stoich.substring(i + 1));\n\t\t\tif (v1 >= 0) numer = v1;\n\t\t\tif (v2 >= 0) denom = v2;\n\t\t}\n\t\treturn [numer, denom];\n\t}\n\n\t// as above, but just returns the number, as a decimal ratio\n\tpublic static extractStoichValue(stoich:string):number\n\t{\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\treturn denom <= 1 ? numer : numer / denom;\n\t}\n\n\t// attempts to express the stoichiometry as a ratio; ideally this involves pulling out the numbers, but when they are provided\n\t// as a floating point number, has to have a go at finding the closest fraction; it will lock onto the closest match with a small-ish\n\t// denominator, so for obscure ratios, it may be an approximation\n\tprivate static MAX_DENOM = 16;\n\tprivate static RATIO_FRACT:number[] = null;\n\tpublic static stoichAsRatio(stoich:string):[number, number]\n\t{\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\tif (numer == Math.floor(numer)) return [numer, denom];\n\t\treturn this.stoichFractAsRatio(numer);\n\t}\n\tpublic static stoichFractAsRatio(fract:number):[number, number]\n\t{\n\t\tif (fract == Math.floor(fract)) return [fract, 1];\n\n\t\tconst MAX_DENOM = QuantityCalc.MAX_DENOM;\n\t\tif (QuantityCalc.RATIO_FRACT == null)\n\t\t{\n\t\t\tQuantityCalc.RATIO_FRACT = [];\n\t\t\tfor (let p = 0, j = 2; j <= MAX_DENOM; j++) for (let i = 1; i < j && i < MAX_DENOM - 1; i++) QuantityCalc.RATIO_FRACT.push(i * 1.0 / j);\n\t\t}\n\n\t\tlet whole = Math.floor(fract);\n\t\tlet resid = fract - whole;\n\n\t\tlet bestDiff = Number.MAX_VALUE;\n\t\tlet bestOver = 1, bestUnder = 1;\n\t\tfor (let p = 0, j = 2; j <= MAX_DENOM; j++) for (let i = 1; i < j && i < MAX_DENOM - 1; i++)\n\t\t{\n\t\t\tlet diff = Math.abs(QuantityCalc.RATIO_FRACT[p++] - resid);\n\t\t\tif (diff < bestDiff) {bestDiff = diff; bestOver = i; bestUnder = j;}\n\t\t}\n\n\t\treturn [bestOver + (whole * bestUnder), bestUnder];\n\t}\n\n\t// if the given reagent has a molecule with mapping numbers, checks to see if they line up with product(s), and derives stoichiometry from\n\t// there; a value of 0 means that nothing could be determined\n\tpublic static impliedReagentStoich(reagent:ExperimentComponent, products:ExperimentComponent[]):number\n\t{\n\t\tif (MolUtil.isBlank(reagent.mol) || products.length == 0) return 0;\n\n\t\tlet pstoich = Vec.numberArray(-1, products.length);\n\t\tlet rmol = reagent.mol;\n\t\tlet highest = 0;\n\n\t\tfor (let n = 1; n <= rmol.numAtoms; n++)\n\t\t{\n\t\t\tlet m = rmol.atomMapNum(n);\n\t\t\tif (m == 0) continue;\n\t\t\tlet total = 0;\n\t\t\tfor (let i = 0; i < products.length; i++)\n\t\t\t{\n\t\t\t\tlet pmol = products[i].mol;\n\t\t\t\tif (MolUtil.isBlank(pmol)) continue;\n\n\t\t\t\tlet pcount = 0;\n\t\t\t\tfor (let j = 1; j <= pmol.numAtoms; j++) if (pmol.atomMapNum(j) == m) pcount++;\n\t\t\t\tif (pcount > 0)\n\t\t\t\t{\n\t\t\t\t\tlet rcount = 0;\n\t\t\t\t\tfor (let k = 1; k <= rmol.numAtoms; k++) if (rmol.atomMapNum(k) == m) rcount++;\n\t\t\t\t\tif (pstoich[i] < 0) pstoich[i] = QuantityCalc.extractStoichValue(products[i].stoich);\n\t\t\t\t\ttotal += pcount * pstoich[i] / rcount;\n\t\t\t\t}\n\t\t\t}\n\t\t\thighest = Math.max(highest, total);\n\t\t}\n\t\treturn highest;\n\t}\n\n\t/*\n\t// for a given step in a reaction, adds up all the structures on both the left and right hand sides; the structures on each side are combined\n\t// into a single molecule instance, and are expanded out based on the relative ratio of stoichiometry; zero stoichiometry is treated as 1\n\tpublic static Molecule[] combinedSides(Experiment.Entry entry, int step)\n\t{\n\t\tList<Molecule> left = new ArrayList<>(), right = new ArrayList<>();\n\t\tIntVector numer = new IntVector(), denom = new IntVector();\n\n\t\tComponent[] reactants = step == 0 ? entry.steps[0].reactants : entry.steps[step - 1].products;\n\t\tfor (Component comp : reactants) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tPairTwoInt ratio = stoichAsRatio(comp.stoich);\n\t\t\tleft.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\t\tfor (Component comp : entry.steps[step].reagents) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tfloat fract = impliedReagentStoich(comp, entry.steps[step].products);\n\t\t\tPairTwoInt ratio = fract == 0 ? new PairTwoInt(1, 1) : stoichAsRatio(fract);\n\t\t\tleft.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\n\t\tfor (Component comp : entry.steps[step].products) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tPairTwoInt ratio = stoichAsRatio(comp.stoich);\n\t\t\tright.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\n\t\tint bigDenom = 1;\n\t\tfor (int n = 0; n < numer.size(); n++)\n\t\t{\n\t\t\tint d = denom.get(n);\n\t\t\tif (d == 1) continue;\n\t\t\tif (bigDenom % d != 0) bigDenom *= d;\n\t\t}\n\t\t// (any way to bring it back down?)\n\n\t\tMolecule mol1 = new Molecule(), mol2 = new Molecule();\n\t\tfor (int n = 0; n < left.size(); n++)\n\t\t{\n\t\t\tint num = numer.get(n) * bigDenom / denom.get(n);\n\t\t\tfor (int i = 0; i < num; i++) MolUtil.append(mol1, left.get(n));\n\t\t}\n\t\tfor (int n = 0; n < right.size(); n++)\n\t\t{\n\t\t\tint nn = left.size() + n, num = numer.get(nn) * bigDenom / denom.get(nn);\n\t\t\tfor (int i = 0; i < num; i++) MolUtil.append(mol2, right.get(n));\n\t\t}\n\n\t\treturn new Molecule[]{mol1, mol2};\n\t}*/\n\n\t// for a given step, works out the integral stoichiometry of {reactants, reagents, components}\n\tpublic static componentRatio(entry:ExperimentEntry, step:number):[number[], number[], number[]]\n\t{\n\t\tlet numer:number[] = [], denom:number[] = [];\n\n\t\tlet reactants = step == 0 ? entry.steps[0].reactants : entry.steps[step - 1].products;\n\t\tfor (let comp of reactants)\n\t\t{\n\t\t\tlet [num, den] = this.stoichAsRatio(comp.stoich);\n\t\t\tnumer.push(num);\n\t\t\tdenom.push(den);\n\t\t}\n\t\tfor (let comp of entry.steps[step].reagents)\n\t\t{\n\t\t\tlet fract = this.impliedReagentStoich(comp, entry.steps[step].products);\n\t\t\tlet [num, den] = fract == 0 ? [0, 1] : this.stoichFractAsRatio(fract);\n\t\t\tnumer.push(num == 0 ? 1 : num);\n\t\t\tdenom.push(den);\n\t\t}\n\t\tfor (let comp of entry.steps[step].products)\n\t\t{\n\t\t\tlet [num, den] = this.stoichAsRatio(comp.stoich);\n\t\t\tnumer.push(num == 0 ? 1 : num);\n\t\t\tdenom.push(den);\n\t\t}\n\n\t\tlet bigDenom = 1;\n\t\tfor (let n = 0; n < numer.length; n++) if (denom[n] > 1 && bigDenom % denom[n] != 0) bigDenom *= denom[n];\n\n\t\tlet ratioReactants:number[] = [], ratioReagents:number[] = [], ratioProducts:number[] = [];\n\t\tlet p = 0;\n\t\tfor (let n = 0; n < reactants.length; n++, p++) ratioReactants.push(numer[p] * bigDenom / denom[p]);\n\t\tfor (let n = 0; n < entry.steps[step].reagents.length; n++, p++) ratioReagents.push(numer[p] * bigDenom / denom[p]);\n\t\tfor (let n = 0; n < entry.steps[step].products.length; n++, p++) ratioProducts.push(numer[p] * bigDenom / denom[p]);\n\n\t\treturn [ratioReactants, ratioReagents, ratioProducts];\n\t}\n\n\t// ---------------- public methods -----------------\n\n\tconstructor(public entry:ExperimentEntry)\n\t{\n\t}\n\n\t// fill in all the details\n\tpublic calculate():void\n\t{\n\t\t// the basic quantities: iteratively ifer everything possible\n\t\tthis.classifyTypes();\n\t\twhile (this.calculateSomething()) {}\n\n\t\t// work out green metrics, where applicable\n\t\tthis.allMassReact = [];\n\t\tthis.allMassProd = [];\n\t\tthis.allMassWaste = [];\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet qc = this.quantities[n];\n\n\t\t\tif (qc.type == ExperimentComponentType.Reactant || qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.valueEquiv == 0 && qc.type == ExperimentComponentType.Reagent) continue;\n\t\t\t\tthis.allMassReact.push(qc.valueMass);\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Product)\n\t\t\t{\n\t\t\t\tif (!qc.comp.waste)\n\t\t\t\t{\n\t\t\t\t\tthis.allMassProd.push(qc.valueMass);\n\t\t\t\t\tthis.calculateGreenMetrics(n);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.allMassWaste.push(qc.valueMass);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// access to determined results\n\tpublic get numQuantities():number {return this.quantities.length;}\n\tpublic getQuantity(idx:number):QuantityCalcComp {return this.quantities[idx];}\n\tpublic getAllQuantities():QuantityCalcComp[] {return this.quantities.slice(0);}\n\tpublic get numGreenMetrics():number {return this.greenMetrics.length;}\n\tpublic getGreenMetrics(idx:number):GreenMetrics {return this.greenMetrics[idx];}\n\tpublic getAllGreenMetrics():GreenMetrics[] {return this.greenMetrics.slice(0);}\n\tpublic getAllMassReact():number[] {return this.allMassReact.slice(0);}\n\tpublic getAllMassProd():number[] {return this.allMassProd.slice(0);}\n\tpublic getAllMassWaste():number[] {return this.allMassWaste.slice(0);}\n\n\t// convenience: locate a component somewhere within the entry\n\tpublic findComponent(step:number, type:number, idx:number):QuantityCalcComp\n\t{\n\t\tfor (let qc of this.quantities) if (qc.step == step && qc.type == type && qc.idx == idx) return qc;\n\t\treturn null;\n\t}\n\n\t// convenience formatting tools, which pick appropriate units\n\tpublic static formatMolWeight(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + ' g/mol';\n\t}\n\tpublic static formatMass(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCg';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mg';\n\t\tif (value >= 1E3) return formatDouble(value * 1E-3, 6) + ' kg';\n\t\treturn formatDouble(value, 6) + ' g';\n\t}\n\tpublic static formatVolume(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' nL';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' \\u03BCL';\n\t\tif (value >= 1E3) return formatDouble(value * 1E-3, 6) + ' L';\n\t\treturn formatDouble(value, 6) + ' mL';\n\t}\n\tpublic static formatMoles(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-9) return formatDouble(value * 1E9, 6) + ' nmol';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCmol';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mmol';\n\t\treturn formatDouble(value, 6) + ' mol';\n\t}\n\tpublic static formatDensity(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + ' g/mL';\n\t}\n\tpublic static formatConc(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-9) return formatDouble(value * 1E9, 6) + ' nmol/L';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCmol/L';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mmol/L';\n\t\treturn formatDouble(value, 6) + ' mol/L';\n\t}\n\tpublic static formatPercent(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + '%';\n\t}\n\tpublic static formatEquiv(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 4) + ' equiv';\n\t}\n\n\t// ---------------- private methods -----------------\n\n\t// do a first pass of pulling out the raw data\n\tprivate classifyTypes():void\n\t{\n\t\tfor (let s = 0; s < this.entry.steps.length; s++)\n\t\t{\n\t\t\tlet step = this.entry.steps[s];\n\t\t\tfor (let n = 0; n < step.reactants.length; n++) this.quantities.push(new QuantityCalcComp(step.reactants[n], s, ExperimentComponentType.Reactant, n));\n\t\t\tfor (let n = 0; n < step.reagents.length; n++) this.quantities.push(new QuantityCalcComp(step.reagents[n], s, ExperimentComponentType.Reagent, n));\n\t\t\tfor (let n = 0; n < step.products.length; n++) this.quantities.push(new QuantityCalcComp(step.products[n], s, ExperimentComponentType.Product, n));\n\t\t}\n\n\t\t// classify each component into roles, and fill in some basic properties\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet qc = this.quantities[n];\n\n\t\t\tif (qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.comp.equiv != null) qc.valueEquiv = qc.comp.equiv;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet eq = QuantityCalc.impliedReagentStoich(qc.comp, this.entry.steps[qc.step].products);\n\t\t\t\t\tif (eq > 0) qc.valueEquiv = eq;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tqc.valueEquiv = QuantityCalc.extractStoichValue(qc.comp.stoich);\n\t\t\t}\n\n\t\t\tif (qc.comp.mol != null) qc.molw = MolUtil.molecularWeight(qc.comp.mol);\n\n\t\t\tqc.role = QuantityCalcRole.Independent;\n\t\t\tif (qc.step == 0 && qc.type == ExperimentComponentType.Reactant)\n\t\t\t{\n\t\t\t\tif (qc.comp.primary)\n\t\t\t\t{\n\t\t\t\t\tqc.role = QuantityCalcRole.Primary;\n\t\t\t\t\tthis.idxPrimary.push(n);\n\t\t\t\t}\n\t\t\t\telse qc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.valueEquiv > 0) qc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Product && !qc.comp.waste)\n\t\t\t{\n\t\t\t\tqc.role = QuantityCalcRole.Product;\n\t\t\t\tthis.idxYield.push(n);\n\t\t\t}\n\t\t\telse if (qc.valueEquiv > 0)\n\t\t\t{\n\t\t\t\tqc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\n\t\t\t// fill in any user-specified values\n\t\t\tif (qc.comp.mass != null) qc.valueMass = qc.comp.mass;\n\t\t\tif (qc.comp.volume != null) qc.valueVolume = qc.comp.volume;\n\t\t\tif (qc.comp.moles != null) qc.valueMoles = qc.comp.moles;\n\t\t\tif (qc.comp.density != null) qc.valueDensity = qc.comp.density;\n\t\t\tif (qc.comp.conc != null) qc.valueConc = qc.comp.conc;\n\t\t\tif (qc.comp.yield != null) qc.valueYield = qc.comp.yield;\n\n\t\t\tqc.statEquiv = qc.valueEquiv == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statMass = qc.valueMass == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statVolume = qc.valueVolume == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statMoles = qc.valueMoles == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statDensity = qc.valueDensity == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statConc = qc.valueConc == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statYield = qc.valueYield == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t}\n\n\t\t// if no rate limiting reactants, pick everything from step 1\n\t\tif (this.idxPrimary.length == 0)\n\t\t{\n\t\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t\t{\n\t\t\t\tlet qc = this.quantities[n];\n\t\t\t\tif (qc.type == ExperimentComponentType.Reactant && qc.step == 0)\n\t\t\t\t{\n\t\t\t\t\tqc.role = QuantityCalcRole.Primary;\n\t\t\t\t\tthis.idxPrimary.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// attempt to replace at least one unknown value with an inferred value; returns true if anything happened, which\n\t// signals that another round should be repeated, in case more possibilities come online\n\tprivate calculateSomething():boolean\n\t{\n\t\tlet anything = false;\n\n\t\t// ---- part 1: look for any interconversions that are internal to a component\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\t// molar interconversion\n\t\t\tif (qc.molw > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tqc.valueMass = qc.valueMoles * qc.molw;\n\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.molw > 0 && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMoles = qc.valueMass / qc.molw;\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.molw > 0 && qc.statMass == QuantityCalcStat.Actual && qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tlet calcMoles = qc.valueMass / qc.molw;\n\t\t\t\tif (!this.closeEnough(qc.valueMoles, calcMoles))\n\t\t\t\t{\n\t\t\t\t\tqc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\tqc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet isSoln = qc.statConc == QuantityCalcStat.Actual ||\n\t\t\t\t(qc.statVolume == QuantityCalcStat.Actual && (qc.statMass == QuantityCalcStat.Actual || qc.statMoles == QuantityCalcStat.Actual));\n\n\t\t\t// non solutions, mass/density/volume\n\t\t\tif (!isSoln)\n\t\t\t{\n\t\t\t\tif (qc.valueDensity > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueMass = qc.valueVolume * qc.valueDensity;\n\t\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueDensity > 0 && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueVolume == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueVolume = qc.valueMass / qc.valueDensity;\n\t\t\t\t\tqc.statVolume = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueDensity == QuantityCalc.UNSPECIFIED && qc.valueMass != QuantityCalc.UNSPECIFIED &&\n\t\t\t\t\tqc.valueVolume != QuantityCalc.UNSPECIFIED && qc.valueConc == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual || qc.statMoles == QuantityCalcStat.Actual) // don't guess density from stoichoimetry\n\t\t\t\t\t{\n\t\t\t\t\t\tqc.valueDensity = qc.valueMass / qc.valueVolume;\n\t\t\t\t\t\tqc.statDensity = QuantityCalcStat.Virtual;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// solutions, moles/conc/volume\n\t\t\tif (isSoln)\n\t\t\t{\n\t\t\t\tif (qc.valueConc > 0 && qc.valueMoles == QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueMoles = 0.001 * qc.valueVolume * qc.valueConc;\n\t\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueConc > 0 && qc.valueMoles != QuantityCalc.UNSPECIFIED && qc.valueVolume == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueVolume = 1000 * qc.valueMoles / qc.valueConc;\n\t\t\t\t\tqc.statVolume = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueConc == QuantityCalc.UNSPECIFIED && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueConc = 1000 * qc.valueMoles / qc.valueVolume;\n\t\t\t\t\tqc.statConc = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.statConc == QuantityCalcStat.Actual && qc.valueMoles > 0 && qc.statVolume == QuantityCalcStat.Actual)\n\t\t\t\t{\n\t\t\t\t\tlet calcVolume = 1000 * qc.valueMoles / qc.valueConc;\n\t\t\t\t\tif (!this.closeEnough(qc.valueVolume, calcVolume))\n\t\t\t\t\t{\n\t\t\t\t\t\tqc.statConc = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual) qc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Actual) qc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tqc.statVolume = QuantityCalcStat.Conflict;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// calculating mass from virtual molar mass\n\t\t\tif (qc.molw > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueMoles != QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMass = qc.valueMoles * qc.molw;\n\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\n\t\t\t// providing a concentration and density is disallowed\n\t\t\tif (qc.statDensity == QuantityCalcStat.Actual && qc.statConc == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tqc.statDensity = QuantityCalcStat.Conflict;\n\t\t\t\tqc.statConc = QuantityCalcStat.Conflict;\n\t\t\t}\n\t\t}\n\n\t\tif (anything) return true; // want to make it cycle over all the reactants before moving on\n\n\t\t// ---- part 2: determine the molar quantity baseline, for each step, where applicable\n\n\t\tlet hasRef = false;\n\t\tlet numSteps = this.entry.steps.length;\n\t\tlet primaryCounts = Vec.numberArray(0, numSteps);\n\t\tlet primaryEquivs = Vec.numberArray(0, numSteps);\n\t\tlet primaryMoles = this.primaryMoles = Vec.numberArray(0, numSteps);\n\n\t\t// go over components: first step uses reactants; next steps use products from previous\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tlet ref = -1;\n\t\t\tif (qc.step == 0 && qc.type == ExperimentComponentType.Reactant && qc.comp.primary) ref = qc.step;\n\t\t\telse if (qc.step < numSteps - 1 && qc.type == ExperimentComponentType.Product && !qc.comp.waste) ref = qc.step + 1;\n\t\t\telse continue;\n\t\t\tif (primaryEquivs[ref] < 0) continue;\n\n\t\t\tif (qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tprimaryEquivs[ref] = -1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprimaryCounts[ref]++;\n\t\t\tprimaryEquivs[ref] += qc.valueEquiv;\n\t\t\tprimaryMoles[ref] += qc.valueMoles;\n\t\t}\n\n\t\t// special deal: if no primary reactants, use all of the primaries\n\t\tif (primaryEquivs[0] <= 0)\n\t\t{\n\t\t\tprimaryCounts[0] = 0;\n\t\t\tprimaryEquivs[0] = 0;\n\t\t\tprimaryMoles[0] = 0;\n\t\t\tfor (let i of this.idxPrimary)\n\t\t\t{\n\t\t\t\tlet qc = this.quantities[i];\n\t\t\t\tif (qc.statMoles == QuantityCalcStat.Unknown)\n\t\t\t\t{\n\t\t\t\t\tprimaryCounts[0] = 0;\n\t\t\t\t\tprimaryEquivs[0] = -1;\n\t\t\t\t\tprimaryMoles[0] = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprimaryCounts[0]++;\n\t\t\t\tprimaryEquivs[0] += qc.valueEquiv;\n\t\t\t\tprimaryMoles[0] += qc.valueMoles;\n\t\t\t}\n\t\t}\n\t\tlet refMoles = Vec.numberArray(0, numSteps);\n\t\tfor (let n = 0; n < numSteps; n++)\n\t\t{\n\t\t\trefMoles[n] = primaryCounts[n] == 0 || primaryEquivs[n] <= 0 ? 0 : primaryMoles[n] / primaryEquivs[n];\n\t\t\tif (refMoles[n] > 0) hasRef = true;\n\t\t}\n\n\t\t// if no reference moles at all, try formulating some by making use of product quantities\n\t\tif (!hasRef)\n\t\t{\n\t\t\tfor (let n = 0; n < numSteps; n++)\n\t\t\t{\n\t\t\t\tlet prodMolar:number[] = [];\n\t\t\t\tfor (let qc of this.quantities)\n\t\t\t\t{\n\t\t\t\t\tif (qc.step != n || qc.role != QuantityCalcRole.Product) continue;\n\t\t\t\t\t//if (qc.statMoles == QuantityCalcStat.Actual || qc.valueMoles <= 0 || qc.valueEquiv <= 0) continue;\n\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Unknown || qc.valueMoles <= 0 || qc.valueEquiv <= 0) continue;\n\t\t\t\t\tlet yld = qc.valueYield > 0 ? qc.valueYield * 0.01 : 1;\n\t\t\t\t\tprodMolar.push(qc.valueMoles / (qc.valueEquiv * yld));\n\t\t\t\t}\n\t\t\t\tif (prodMolar.length > 0)\n\t\t\t\t{\n\t\t\t\t\trefMoles[n] = Vec.sum(prodMolar) / prodMolar.length;\n\t\t\t\t\thasRef = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasRef) return false; // can't do anything else\n\n\t\t// ---- part 3: look for ways to apply the yield\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tif (qc.type != ExperimentComponentType.Product) continue;\n\n\t\t\tif (refMoles[qc.step] == 0) continue;\n\n\t\t\tif (qc.valueYield == QuantityCalc.UNSPECIFIED && qc.valueMoles != QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueYield = 100 * qc.valueMoles / (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tqc.statYield = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueYield != QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMoles = qc.valueYield * 0.01 * (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueMoles > 0 && qc.statYield == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tlet calcYield = 100 * qc.valueMoles / (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tif (!this.closeEnough(qc.valueYield, calcYield))\n\t\t\t\t{\n\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual) qc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Actual) qc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t\tqc.statYield = QuantityCalcStat.Conflict;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (anything) return true;\n\n\t\t// ---- part 4: look for stoichiometric components where molarity can be filled in\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tif (refMoles[qc.step] == 0) continue;\n\n\t\t\tif (qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED && qc.valueEquiv > 0)\n\t\t\t{\n\t\t\t\tqc.valueMoles = refMoles[qc.step] * qc.valueEquiv;\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueMoles != QuantityCalc.UNSPECIFIED && qc.valueEquiv == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueEquiv = qc.valueMoles / refMoles[qc.step];\n\t\t\t\tqc.statEquiv = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t}\n\n\t\treturn anything;\n\t}\n\n\t// work out all available green metrics for a particular product index\n\tprivate calculateGreenMetrics(idx:number):void\n\t{\n\t\tlet qc = this.quantities[idx];\n\t\tlet gm = new GreenMetrics();\n\n\t\tgm.step = qc.step;\n\t\tgm.idx = qc.idx;\n\t\tgm.isBlank = true;\n\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet sub = this.quantities[n];\n\t\t\tif (sub.step > gm.step) continue;\n\n\t\t\tlet eq = sub.valueEquiv;\n\t\t\tif (eq == 0 && sub.type == ExperimentComponentType.Reagent) continue;\n\n\t\t\tif (sub.valueMass != QuantityCalc.UNSPECIFIED) gm.isBlank = false;\n\n\t\t\tif (sub.type == ExperimentComponentType.Reactant || sub.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tgm.massReact.push(sub.valueMass);\n\t\t\t\tif (sub.step == gm.step && eq > 0 && sub.molw > 0) gm.molwReact.push(eq * sub.molw);\n\t\t\t}\n\t\t\telse if (sub.type == ExperimentComponentType.Product)\n\t\t\t{\n\t\t\t\tif (!sub.comp.waste)\n\t\t\t\t{\n\t\t\t\t\tif (sub.step == gm.step) gm.massProd.push(sub.valueMass);\n\t\t\t\t\tif (eq > 0 && sub.molw > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sub.step == gm.step) gm.molwProd.push(eq * sub.molw);\n\t\t\t\t\t\telse if (sub.step == gm.step - 1) gm.molwReact.push(eq * sub.molw);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgm.massWaste.push(sub.valueMass);\n\t\t\t\t}\n\t\t\t\tif (sub.step == gm.step) gm.massProdWaste.push(sub.valueMass);\n\t\t\t}\n\t\t}\n\n\t\tgm.impliedWaste = Vec.sum(gm.massReact) - Vec.sum(gm.massProdWaste);\n\t\tif (Math.abs(gm.impliedWaste) > 1E-3) gm.impliedWaste = 0;\n\n\t\tthis.greenMetrics.push(gm);\n\t}\n\n\t// figure out if two values are not in conflict\n\tprivate closeEnough(value1:number, value2:number):boolean\n\t{\n\t\tif (value1 <= 0 || value2 <= 0) return true;\n\t\tlet ratio = value1 / value2;\n\t\treturn ratio >= 0.99 && ratio <= 1.01;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {clone} from '../util/util';\n\n/*\n\tRenderPolicy: controls the parameters of rendering for molecules (and some composites like reactions). These policies are\n\tgeneral, i.e. can apply to any instantiated molecule instance.\n*/\n\ninterface RenderData\n{\n\tname:string;\n\tpointScale:number;\n\tresolutionDPI:number;\n\tfontSize:number;\n\tlineSize:number;\n\tbondSep:number;\n\tdefaultPadding:number;\n\tforeground:number;\n\tbackground:number;\n\tatomCols:number[];\n}\n\nexport class RenderPolicy\n{\n\tpublic data:RenderData;\n\tpublic get scale():number {return this.data.pointScale;}\n\n\tconstructor(data?:RenderData)\n\t{\n\t\tif (!data)\n\t\t{\n\t\t\tdata =\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\tpointScale: 20,\n\t\t\t\tresolutionDPI: 100,\n\t\t\t\tfontSize: 0.65,\n\t\t\t\tlineSize: 0.075,\n\t\t\t\tbondSep: 0.2,\n\t\t\t\tdefaultPadding: 0.2,\n\t\t\t\tforeground: 0x000000,\n\t\t\t\tbackground: 0xFFFFFF,\n\t\t\t\tatomCols: new Array(112)\n\t\t\t};\n\t\t\tfor (let n = 0; n <= 111; n++) data.atomCols[n] = 0x000000;\n\t\t\tthis.data = data;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.data = clone(data) as RenderData;\n\t\t}\n\t}\n\n\tpublic clone():RenderPolicy {return new RenderPolicy(this.data);}\n\n\t// static methods for creating new default schemes\n\tpublic static defaultBlackOnWhite(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = new RenderPolicy();\n\t\tif (pixPerAng) policy.data.pointScale = pixPerAng;\n\t\treturn policy;\n\t}\n\tpublic static defaultWhiteOnBlack(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = new RenderPolicy();\n\t\tif (pixPerAng) policy.data.pointScale = pixPerAng;\n\t\tpolicy.data.foreground = 0xFFFFFF;\n\t\tpolicy.data.background = 0x000000;\n\t\tfor (let n = 0; n <= 111; n++) policy.data.atomCols[n] = 0xFFFFFF;\n\t\treturn policy;\n\t}\n\tpublic static defaultColourOnWhite(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n\t\tpolicy.data.atomCols[0] = 0x404040;\n\t\tpolicy.data.atomCols[1] = 0x808080;\n\t\tpolicy.data.atomCols[6] = 0x000000;\n\t\tpolicy.data.atomCols[7] = 0x0000FF;\n\t\tpolicy.data.atomCols[8] = 0xFF0000;\n\t\tpolicy.data.atomCols[9] = 0xFF8080;\n\t\tpolicy.data.atomCols[15] = 0xFF8000;\n\t\tpolicy.data.atomCols[16] = 0x808000;\n\t\tpolicy.data.atomCols[17] = 0x00C000;\n\t\tpolicy.data.atomCols[35] = 0xC04000;\n\t\treturn policy;\n\t}\n\tpublic static defaultColourOnBlack(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n\t\tpolicy.data.atomCols[0] = 0xA0A0A0;\n\t\tpolicy.data.atomCols[1] = 0x808080;\n\t\tpolicy.data.atomCols[6] = 0xFFFFFF;\n\t\tpolicy.data.atomCols[7] = 0x4040FF;\n\t\tpolicy.data.atomCols[8] = 0xFF4040;\n\t\tpolicy.data.atomCols[9] = 0xFF8080;\n\t\tpolicy.data.atomCols[15] = 0xFF8000;\n\t\tpolicy.data.atomCols[16] = 0xFFFF00;\n\t\tpolicy.data.atomCols[17] = 0x40FF40;\n\t\tpolicy.data.atomCols[35] = 0xFF8040;\n\t\treturn policy;\n\t}\n\tpublic static defaultPrintedPublication():RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite(9.6);\n\t\tpolicy.data.resolutionDPI = 600;\n\t\tpolicy.data.fontSize = 0.80;\n\t\tpolicy.data.bondSep = 0.27;\n\t\tpolicy.data.lineSize = 0.0625;\n\t\treturn policy;\n\t}\n}\n\n/*\n\tRenderEffects: provides the ability to request additional drawing effects for a specific molecule instance, in\n\taddition to the basic rendering.\n*/\n\nexport class RenderEffects\n{\n\t// optional replacement colours, by object index: to override defaults\n\tpublic colAtom:Record<number, number> = {};\n\tpublic colBond:Record<number, number> = {};\n\n\t// atoms that should be surrounded by a dotted rectangular outline (atom = colour)\n\tpublic dottedRectOutline:Record<number, number> = {};\n\n\t// bonds that should have a dotted line plotted across them (bond = colour)\n\tpublic dottedBondCross:Record<number, number> = {};\n\n\t// list of atom/bond indices to NOT draw\n\tpublic hideAtoms = new Set<number>();\n\tpublic hideBonds = new Set<number>();\n\n\t// rectangular frames to draw around atoms\n\tpublic atomFrameDotSz:number[] = [];\n\tpublic atomFrameCol:number[] = [];\n\n\t// solid dots to draw over top of atoms\n\tpublic atomCircleSz:number[] = [];\n\tpublic atomCircleCol:number[] = [];\n\n\t// atom & bond decoration: text to display, colour, and font size (in Angstrom units)\n\tpublic atomDecoText:string[] = [];\n\tpublic atomDecoCol:number[] = [];\n\tpublic atomDecoSize:number[] = [];\n\tpublic bondDecoText:string[] = [];\n\tpublic bondDecoCol:number[] = [];\n\tpublic bondDecoSize:number[] = [];\n\n\t// list of atom indices which are considered to be \"overlapping\", i.e. this is bad\n\tpublic overlapAtoms:number[] = [];\n}\n\n/*\n\tRenderMnemonics: a convenient container for recording information about a rendering process, which is useful for\n\tvalidation procedures.\n*/\n\nexport enum RenderMnemonicType\n{\n\tAtom = 'A',\n\tBond = 'B',\n\tArtifact = 'R',\n\tEffect = 'E',\n}\n\nexport interface RenderMnemonicItem\n{\n\ttype:RenderMnemonicType | string; // general category: known type or custom\n\tdetails:string; // arbitrary information about the payload, keep it concise, don't use the separator ('|')\n\tcoords?:number[];\n}\n\nexport class RenderMnemonics\n{\n\tpublic items:RenderMnemonicItem[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(encoded?:string)\n\t{\n\t\tlet lines = (encoded || '').split('&');\n\t\tfor (let line of lines)\n\t\t{\n\t\t\tlet bits = line.split('|');\n\t\t\tif (bits.length != 3) continue;\n\t\t\tlet item:RenderMnemonicItem =\n\t\t\t{\n\t\t\t\ttype: bits[0],\n\t\t\t\tdetails: bits[1],\n\t\t\t\tcoords: bits[2].split(',').map((str) => parseFloat(str)),\n\t\t\t};\n\t\t\tthis.items.push(item);\n\t\t}\n\t}\n\n\tpublic append(type:RenderMnemonicType | string, details:string, coords?:number[]):void\n\t{\n\t\tfor (let n = details.length - 1; n >= 0; n--) if (details[n] == '|' || details[n] == '&') details = details.substring(0, n) + details.substring(n + 1);\n\t\tthis.items.push({type, details, coords});\n\t}\n\n\tpublic serialise():string\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let item of this.items)\n\t\t{\n\t\t\tlet coords = (item.coords ?? []).map((coord) => coord.toFixed(1)).join(',');\n\t\t\tlines.push(`${item.type}|${item.details}|${coords}`);\n\t\t}\n\t\treturn lines.join('&');\n\t}\n\n\t// produce a quasi-human-readable representation of the mnemonics, so that two sets can be compared with each other;\n\t// a sans-coordinate version is provided as well, in case a rougher comparison is wanted\n\tpublic packWithCoords():string {return this.serialise();}\n\tpublic packWithoutCoords():string\n\t{\n\t\treturn this.items.map((item) => `${item.type}|${item.details}`).join('&');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2024 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {PseudoEmbedding} from '../mol/PseudoEmbedding';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Molecule} from '../mol/Molecule';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {FitRotatedEllipse} from '../util/FitRotatedEllipse';\nimport {Box, GeomUtil, Line, Oval, QuickHull} from '../util/Geom';\nimport {angleDiff, clone, deepClone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {FontData} from './FontData';\nimport {RenderEffects, RenderPolicy} from './Rendering';\n\n/*\n\tThe algorithm for examining the contents of a molecule representation, and converting this into graphics primitives\n\twhich are arranged on some virtual canvas, according to layout metrics. Most of the hard work of displaying a\n\tmolecular structure is done within this class.\n*/\n\nexport interface APoint\n{\n\tanum:number; // corresponds to molecule atom index\n\ttext:string; // the primary label, or null if invisible\n\tfsz:number; // font size for label\n\tcol:number;\n\toval:Oval;\n\trotation?:number; // degrees to rotate text\n}\n\nexport enum BLineType\n{\n\tNormal = 1, // a line segment; may be single bond, part of a multiple bond, or dissected bond\n\tInclined, // an up-wedge bond\n\tDeclined, // a down-wedge bond\n\tUnknown, // a squiggly bond\n\tDotted, // dotted line\n\tDotDir, // dotted line, with inclined destination\n\tIncDouble, // inclined destination, order=2\n\tIncTriple, // inclined destination, order=3\n\tIncQuadruple // inclined destination, order=4\n}\n\nexport interface BLine\n{\n\tbnum:number; // molecule bond index\n\tbfr:number;\n\tbto:number;\n\ttype:BLineType;\n\tline:Line;\n\tsize:number; // line or dot size, where it applies\n\thead:number; // the maximum width of a wedge-type bond\n\tcol:number;\n}\n\nexport interface XRing\n{\n\tatoms:number[];\n\tcx:number;\n\tcy:number;\n\trw:number;\n\trh:number;\n\ttheta:number;\n\tsize:number; // line size\n}\n\nexport interface XPath\n{\n\tatoms:number[];\n\tpx:number[];\n\tpy:number[];\n\tctrl:boolean[];\n\tsize:number; // line size\n}\n\nexport interface SpaceFiller\n{\n\tanum:number; // origin, if any\n\tbnum:number;\n\tbox:Box; // bounding limit\n\tpx:number[];\n\tpy:number[];\n}\n\n// try to avoid compressing bonds too much; simple-line bonds are more resilient than things like dotted lines\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\n\nexport class ArrangeMolecule\n{\n\tprivate scale:number; // extracted from the measurement instance: useful to note when it changes\n\n\t// extracts, for efficiency\n\tprivate bondSepPix:number;\n\tprivate lineSizePix:number;\n\tprivate fontSizePix:number;\n\tprivate ymul:number; // -1 if Y is up, +1 if it is down\n\n\t// the angstrom-to-ascent height is corrected by this factor\n\tprivate static FONT_CORRECT = 1.5;\n\n\t// note: the first {#atoms} entries in the points array correspond to the atoms - and likewise for the space array; anything\n\t// listed after that is arbitrary; the lines are not listed in any kind of order\n\tprivate points:APoint[] = [];\n\tprivate lines:BLine[] = [];\n\tprivate rings:XRing[] = [];\n\tprivate paths:XPath[] = [];\n\tprivate space:SpaceFiller[] = [];\n\n\t// special field: if the layout algorithm split up lines on account of them crossing each other, it stashes the original list here,\n\t// in case the original is needed\n\tprivate unsplitLines:BLine[] = null;\n\n\t// bond artifacts: by default they are derived automatically, but can also be disabled; these properties are also used to\n\t// override the default rendering of atom/bond properties\n\tprivate wantArtifacts = true; // turn this off to not draw things like arenes and resonance\n\tprivate wantCrossings = true; // turn this off to prevent crossed bonds from doing the over/under segmentation\n\tprivate artifacts:BondArtifact = null;\n\tprivate bondOrder:number[] = []; // replacement bond orders; special case: -1 for do-not-draw\n\tprivate atomCharge:number[] = [];\n\tprivate atomUnpaired:number[] = [];\n\tprivate artifactCharge = new Map<object, number>();\n\tprivate artifactUnpaired = new Map<object, number>();\n\tprivate artifactFract = new Map<object, boolean>();// bond order < 1: replaces the bond itself\n\n\t// --------------------- static methods ---------------------\n\n\t// when it is necessary to define a boundary box in which to draw a molecule, the only way to get it right is to do a\n\t// full arrangement, but this is computationally intensive; this method is fast, and delivers an approximate estimate\n\tpublic static guestimateSize(mol:Molecule, policy:RenderPolicy, maxW?:number, maxH?:number):number[]\n\t{\n\t\tlet box = mol.boundary();\n\t\tlet minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n\t\tlet fontSize = policy.data.fontSize * this.FONT_CORRECT;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomExplicit(n))\n\t\t{\n\t\t\tlet numsym = 0;\n\t\t\tfor (let ch of mol.atomElement(n)) if (!'|{}^'.includes(ch)) numsym++;\n\t\t\tlet plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n\t\t\tconst aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n\t\t\tconst ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n\t\t\tconst ax = mol.atomX(n), ay = mol.atomY(n);\n\t\t\tminX = Math.min(minX, ax - aw);\n\t\t\tmaxX = Math.max(maxX, ax + aw);\n\t\t\tminY = Math.min(minY, ay - ah);\n\t\t\tmaxY = Math.max(maxY, ay + ah);\n\t\t}\n\t\tlet w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n\t\tlet h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n\t\tif (maxW > 0 && w > maxW) {h *= maxW / w; w = maxW;}\n\t\tif (maxH > 0 && h > maxH) {w *= maxH / h; h = maxH;}\n\t\treturn [w, h];\n\t}\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private mol:Molecule, private measure:ArrangeMeasurement, private policy:RenderPolicy,\n\t\t\t\tprivate effects:RenderEffects = new RenderEffects())\n\t{\n\t}\n\n\t// access to setup info\n\tpublic getMolecule():Molecule {return this.mol;}\n\tpublic getMeasure():ArrangeMeasurement {return this.measure;}\n\tpublic getPolicy():RenderPolicy {return this.policy;}\n\tpublic getEffects():RenderEffects {return this.effects;}\n\tpublic getScale():number {return this.scale;} // may be different from measure.scale() if modified after layout\n\n\t// bond artifacts: can decide whether they're to be derived, or provide them already\n\tpublic setWantArtifacts(want:boolean):void {this.wantArtifacts = want;}\n\tpublic getArtifacts():BondArtifact {return this.artifacts;}\n\tpublic setArtifacts(artifacts:BondArtifact):void {this.artifacts = artifacts;}\n\n\t// want line crossing resolution\n\tpublic setWantCrossings(want:boolean):void {this.wantCrossings = want;}\n\n\t// the action method: call this before accessing any of the resultant data\n\tpublic arrange():void\n\t{\n\t\tconst {mol, measure, policy, effects} = this;\n\n\t\tthis.scale = measure.scale();\n\t\tthis.bondSepPix = policy.data.bondSep * measure.scale();\n\t\tthis.lineSizePix = policy.data.lineSize * measure.scale();\n\t\tthis.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n\t\tthis.ymul = measure.yIsUp() ? -1 : 1;\n\n\t\tlet artmask:boolean[] = null;\n\t\tif (this.wantArtifacts && this.artifacts == null)\n\t\t{\n\t\t\tthis.artifacts = new BondArtifact(mol);\n\n\t\t\tartmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\tfor (let path of this.artifacts.getResPaths()) for (let a of path.atoms) artmask[a - 1] = true;\n\t\t\tfor (let ring of this.artifacts.getResRings()) for (let a of ring.atoms) artmask[a - 1] = true;\n\t\t\tfor (let arene of this.artifacts.getArenes()) {artmask[arene.centre - 1] = true; for (let a of arene.atoms) artmask[a - 1] = true;}\n\t\t}\n\n\t\tthis.setupBondOrders();\n\n\t\t// fill in each of the atom centres\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\t// atom symbols which are more than 2 characters long are labels rather than elements, and get different treatment;\n\t\t\t// note we put in a null placeholder here, so that the points will be kept in their original atom order\n\t\t\tif (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0)\n\t\t\t{\n\t\t\t\tthis.points.push(null);\n\t\t\t\tthis.space.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// proceed with a regular atom symbol\n\t\t\tlet a:APoint =\n\t\t\t{\n\t\t\t\tanum: n,\n\t\t\t\ttext: /*this.effects.showCarbon ||*/ mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n\t\t\t\tfsz: this.fontSizePix,\n\t\t\t\tcol: this.policy.data.atomCols[mol.atomicNumber(n)],\n\t\t\t\toval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n\t\t\t};\n\t\t\tlet overCol = this.effects.colAtom[n];\n\t\t\tif (overCol) a.col = overCol;\n\n\t\t\t//if (policy.mappedColour >= 0 && mol.atomMapNum(n) > 0) a.col = policy.mappedColour;\n\n\t\t\t// decide whether this atom is to have a label\n\t\t\t//let explicit = mol.atomExplicit(n) /*|| this.effects.showCarbon;*/\n\t\t\t//if (explicit && /*!effects.showCarbon &&*/ mol.atomElement(n) == 'C' && !this.atomIsWeirdLinear(n)) explicit = !artmask[n - 1];\n\t\t\t//a.text = explicit ? mol.atomElement(n) : null;\n\t\t\tif (artmask && artmask[n - 1] && mol.atomElement(n) == 'C') a.text = null;\n\n\t\t\t// if it has a label, then how big\n\t\t\tif (a.text != null)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(a.text, a.fsz);\n\t\t\t\tconst PADDING = 1.1; // want a bit more room\n\t\t\t\ta.oval.rw = 0.5 * wad[0] * PADDING;\n\t\t\t\ta.oval.rh = 0.5 * wad[1] * PADDING;\n\t\t\t}\n\n\t\t\tthis.points.push(a);\n\t\t\tthis.space.push(this.computeSpacePoint(a));\n\t\t}\n\n\t\t// pick up the label-style elements, and deal with them\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (this.points[n - 1] == null) this.processLabel(n);\n\n\t\t// resolve the bonds which can be analyzed immediately\n\t\tlet bdbl = Vec.booleanArray(false, mol.numBonds); // gets set to true if bond is awaiting a double bond assignment\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n\t\t\tif (bo < 0) continue; // do not draw\n\n\t\t\tlet col = this.effects.colBond[n];\n\t\t\tif (!col) col = this.policy.data.foreground;\n\n\t\t\tbdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n\n\t\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\n\t\t\t // miniscule resolution: do not give it a bond line; and remove the double bond flag so it doesn't get processed later either\n\t\t\tif (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1)\n\t\t\t{\n\t\t\t\tbdbl[n - 1] = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// for non-double bonds, can add the constituents right away\n\t\t\tif (bdbl[n - 1]) continue;\n\n\t\t\tlet minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n\t\t\tlet xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n\t\t\tlet xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n\t\t\tthis.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n\n\t\t\tlet sz = this.lineSizePix, head = 0;\n\t\t\tlet qbonds = QueryUtil.queryBondOrders(mol, n);\n\t\t\tif (Vec.notBlank(qbonds))\n\t\t\t{\n\t\t\t\tVec.sort(qbonds);\n\t\t\t\tif (qbonds[0] == -1) {qbonds.splice(0, 1); qbonds.push(-1);}\n\t\t\t\tlet qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n\t\t\t\tlet oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n\t\t\t\tlet v = -0.5;\n\t\t\t\tfor (let i = 0; i < 2; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\tlet b:BLine =\n\t\t\t\t\t{\n\t\t\t\t\t\tbnum: n,\n\t\t\t\t\t\tbfr,\n\t\t\t\t\t\tbto,\n\t\t\t\t\t\ttype: BLineType.Dotted,\n\t\t\t\t\t\tline: new Line(lx1, ly1, lx2, ly2),\n\t\t\t\t\t\tsize: 0.5 * sz,\n\t\t\t\t\t\thead,\n\t\t\t\t\t\tcol: (col & 0xFFFFFF) | 0x80000000,\n\t\t\t\t\t};\n\t\t\t\t\tthis.lines.push(b);\n\t\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t\t}\n\n\t\t\t\tlet rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n\t\t\t\tif (rotation < -90 || rotation > 90) rotation += 180; // don't want text to be upside down\n\n\t\t\t\tlet a:APoint =\n\t\t\t\t{\n\t\t\t\t\tanum: 0,\n\t\t\t\t\ttext: qtxt,\n\t\t\t\t\tfsz: 0.35 * this.fontSizePix,\n\t\t\t\t\tcol,\n\t\t\t\t\toval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n\t\t\t\t\trotation\n\t\t\t\t};\n\t\t\t\tthis.points.push(a);\n\t\t\t\tthis.space.push(this.computeSpacePoint(a));\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet ltype = BLineType.Normal;\n\t\t\tif (bo == 1 && bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tltype = BLineType.Inclined;\n\t\t\t\thead = 0.15 * measure.scale();\n\t\t\t}\n\t\t\telse if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tltype = BLineType.Declined;\n\t\t\t\thead = 0.15 * measure.scale();\n\t\t\t}\n\t\t\telse if (bt == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tltype = BLineType.Unknown;\n\t\t\t\thead = 0.2 * measure.scale();\n\t\t\t}\n\t\t\telse if (bo == 0)\n\t\t\t{\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) ltype = BLineType.DotDir;\n\t\t\t\telse ltype = BLineType.Dotted;\n\t\t\t}\n\t\t\telse if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED))\n\t\t\t{\n\t\t\t\tltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n\t\t\t\thead = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n\t\t\t}\n\n\t\t\t// for dotted lines, back off intersections if non-terminal\n\t\t\tif (bo == 0)\n\t\t\t{\n\t\t\t\tlet dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n\t\t\t\tlet d = norm_xy(dx, dy), invD = 1 / d;\n\t\t\t\tlet ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n\t\t\t\tif (mol.atomAdjCount(bfr) > 1) {xy1[0] += ox; xy1[1] += oy;}\n\t\t\t\tif (mol.atomAdjCount(bto) > 1) {xy2[0] -= ox; xy2[1] -= oy;}\n\t\t\t}\n\n\t\t\t// for dotted/declined, swap the sides\n\t\t\tif (bo != 1 && bt == Molecule.BONDTYPE_DECLINED) [xy1, xy2] = [xy2, xy1];\n\n\t\t\t// for flat multi-order bonds, add multiple lines\n\t\t\tif (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN))\n\t\t\t{\n\t\t\t\tlet oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n\n\t\t\t\t// check the intersections for each individual line\n\t\t\t\tlet ext1 = 1, ext2 = 1;\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\text1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n\t\t\t\t}\n\t\t\t\txy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\text2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n\t\t\t\t}\n\t\t\t\txy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n\n\t\t\t\t// instantiate objects\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\tlet b:BLine =\n\t\t\t\t\t{\n\t\t\t\t\t\tbnum: n,\n\t\t\t\t\t\tbfr,\n\t\t\t\t\t\tbto,\n\t\t\t\t\t\ttype: ltype,\n\t\t\t\t\t\tline: new Line(lx1, ly1, lx2, ly2),\n\t\t\t\t\t\tsize: sz,\n\t\t\t\t\t\thead,\n\t\t\t\t\t\tcol\n\t\t\t\t\t};\n\t\t\t\t\tthis.lines.push(b);\n\t\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// just one line, of whatever style was determined\n\t\t\t\tlet b:BLine =\n\t\t\t\t{\n\t\t\t\t\tbnum: n,\n\t\t\t\t\tbfr,\n\t\t\t\t\tbto,\n\t\t\t\t\ttype: ltype,\n\t\t\t\t\tline: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n\t\t\t\t\tsize: sz,\n\t\t\t\t\thead,\n\t\t\t\t\tcol\n\t\t\t\t};\n\t\t\t\tthis.lines.push(b);\n\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t}\n\t\t}\n\n\t\t// process double bonds in rings\n\t\tlet rings = this.orderedRingList();\n\t\tfor (let i = 0; i < rings.length; i++)\n\t\t{\n\t\t\tfor (let j = 0; j < rings[i].length; j++)\n\t\t\t{\n\t\t\t\tlet k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n\t\t\t\tif (bdbl[k - 1])\n\t\t\t\t{\n\t\t\t\t\tthis.processDoubleBond(k, rings[i]);\n\t\t\t\t\tbdbl[k - 1] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// process all remaining double bonds\n\t\tfor (let i = 1; i <= mol.numBonds; i++) if (bdbl[i - 1]) this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n\n\t\t// place hydrogen labels as explicit \"atom centres\"\n\t\tlet hcount = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) hcount[n - 1] = /*!effects.showHydrogen ||*/ this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n\t\tfor (let n = 0; n < mol.numAtoms; n++) if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true)) hcount[n] = 0;\n\t\tfor (let n = 0; n < mol.numAtoms; n++) if (hcount[n] > 0) this.placeHydrogen(n, hcount[n], false);\n\n\t\t// look for atoms with isotope labels, and place them\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n\t\t{\n\t\t\tlet isostr = mol.atomIsotope(n).toString();\n\t\t\tlet col = policy.data.atomCols[mol.atomicNumber(n)];\n\t\t\tthis.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n\t\t}\n\n\t\t// do atomic charges/radical notation\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet str = '';\n\t\t\tlet chg = this.atomCharge[n - 1];\n\t\t\tif (chg == -1) str = '-';\n\t\t\telse if (chg == 1) str = '+';\n\t\t\telse if (chg < -1) str = Math.abs(chg) + '-';\n\t\t\telse if (chg > 1) str = chg + '+';\n\t\t\tfor (let i = this.atomUnpaired[n - 1]; i > 0; i--) str += '.';\n\t\t\tif (str.length == 0) continue;\n\t\t\tlet col = policy.data.atomCols[mol.atomicNumber(n)];\n\t\t\tthis.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n\t\t}\n\n\t\t// add in any explicitly user-requested decorations\n\t\tfor (let n = 0; n < effects.atomDecoText.length; n++)\n\t\t{\n\t\t\tlet txt = effects.atomDecoText[n];\n\t\t\tif (!txt) continue;\n\t\t\tthis.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n\t\t}\n\t\tfor (let n = 0; n < effects.bondDecoText.length; n++)\n\t\t{\n\t\t\tlet txt = effects.bondDecoText[n];\n\t\t\tif (!txt) continue;\n\t\t\tthis.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n\t\t}\n\n\t\t// atom circles need space reserved for them\n\t\tfor (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++) if (effects.atomCircleSz[n] > 0)\n\t\t{\n\t\t\tlet dw = effects.atomCircleSz[n] * this.scale;\n\t\t\tlet a = this.points[n];\n\t\t\tlet box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n\t\t\tlet spc:SpaceFiller =\n\t\t\t{\n\t\t\t\tanum: 0,\n\t\t\t\tbnum: 0,\n\t\t\t\tbox,\n\t\t\t\tpx: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n\t\t\t\tpy: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n\t\t\t};\n\t\t\tthis.space.push(spc);\n\t\t}\n\n\t\tif (this.artifacts != null)\n\t\t{\n\t\t\tfor (let path of this.artifacts.getResPaths())\n\t\t\t{\n\t\t\t\tthis.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n\t\t\t\tthis.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n\t\t\t}\n\t\t\tfor (let ring of this.artifacts.getResRings())\n\t\t\t{\n\t\t\t\tthis.createCircularRing(ring.atoms);\n\t\t\t\tthis.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n\t\t\t}\n\t\t\tfor (let arene of this.artifacts.getArenes())\n\t\t\t{\n\t\t\t\tlet isRing = arene.atoms.length > 2;\n\t\t\t\tif (isRing) for (let n = 0; n < arene.atoms.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n\t\t\t\t\tif (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {isRing = false; break;}\n\t\t\t\t}\n\t\t\t\tlet alkeneLike = arene.atoms.length == 2;\n\n\t\t\t\tthis.createBondCentroid(arene.centre, arene.atoms);\n\t\t\t\tif (!alkeneLike)\n\t\t\t\t{\n\t\t\t\t\tif (isRing) this.createCircularRing(arene.atoms); else this.createCurvedPath(arene.atoms, false, arene.centre);\n\t\t\t\t}\n\t\t\t\tthis.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n\t\t\t}\n\t\t}\n\n\t\t// perform a pseudo-embedding of the structure to resolve line-crossings\n\t\tif (this.wantCrossings)\n\t\t{\n\t\t\tlet emb = new PseudoEmbedding(mol);\n\t\t\temb.calculateCrossings();\n\t\t\tfor (let cross of emb.crossings)\n\t\t\t{\n\t\t\t\tif (cross.higher == 1) this.resolveLineCrossings(cross.bond1, cross.bond2);\n\t\t\t\telse if (cross.higher == 2) this.resolveLineCrossings(cross.bond2, cross.bond1);\n\t\t\t}\n\t\t}\n\n\t\t// create polymer brackets\n\t\tlet polymers = new PolymerBlock(mol);\n\t\tfor (let id of polymers.getIDList()) this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n\t}\n\n   \t// access to atom information; it is valid to assume that {atomcentre}[N-1] matches {moleculeatom}[N], if N<=mol.numAtoms\n\tpublic numPoints():number {return this.points.length;}\n\tpublic getPoint(idx:number):APoint {return this.points[idx];}\n\tpublic getPoints():APoint[] {return this.points;}\n\n\t// access to bond information; it is _NOT_ valid to read anything into the indices; they do not correlate with bond numbers\n\tpublic numLines():number {return this.lines.length;}\n\tpublic getLine(idx:number):BLine {return this.lines[idx];}\n\tpublic getLines():BLine[] {return this.lines;}\n\n\t// bond lines prior to splitting: if none happened, returns null\n\tpublic getUnsplitLines():BLine[] {return this.unsplitLines;}\n\n\t// access to extra ring/resonance information\n\tpublic numRings():number {return this.rings.length;}\n\tpublic getRing(idx:number):XRing {return this.rings[idx];}\n\tpublic getRings():XRing[] {return this.rings;}\n\tpublic numPaths():number {return this.paths.length;}\n\tpublic getPath(idx:number):XPath {return this.paths[idx];}\n\tpublic getPaths():XPath[] {return this.paths;}\n\n\t// access to space-fillers (useful for calculating bounding boxes)\n\tpublic numSpace():number {return this.space.length;}\n\tpublic getSpace(idx:number):SpaceFiller {return this.space[idx];}\n\tpublic getSpaces():SpaceFiller[] {return this.space;}\n\n\t// goes through all the objects and nudges them by the given offset\n\tpublic offsetEverything(dx:number, dy:number):void\n\t{\n\t\tfor (let a of this.points) a.oval.offsetBy(dx, dy);\n\t\tfor (let b of [...this.lines, ...(this.unsplitLines ?? [])]) b.line.offsetBy(dx, dy);\n\t\tfor (let r of this.rings)\n\t\t{\n\t\t\tr.cx += dx;\n\t\t\tr.cy += dy;\n\t\t}\n\t\tfor (let p of this.paths)\n\t\t{\n\t\t\tVec.addTo(p.px, dx);\n\t\t\tVec.addTo(p.py, dy);\n\t\t}\n\t\tfor (let spc of this.space)\n\t\t{\n\t\t\tspc.box.offsetBy(dx, dy);\n\t\t\tVec.addTo(spc.px, dx);\n\t\t\tVec.addTo(spc.py, dy);\n\t\t}\n\t}\n\n\t// ensure that the origin is at (0,0)\n\tpublic offsetOrigin():void\n\t{\n\t\tlet bounds = this.determineBoundary();\n\t\tif (bounds[0] != 0 || bounds[1] != 0) this.offsetEverything(-bounds[0], -bounds[1]);\n\t}\n\n\t// goes through all of the objects and scales them by the provided factor\n\tpublic scaleEverything(scaleBy:number):void\n\t{\n\t\tif (scaleBy == 1) return;\n\n\t\tthis.scale *= scaleBy;\n\t\tfor (let a of this.points)\n\t\t{\n\t\t\ta.oval.scaleBy(scaleBy);\n\t\t\ta.fsz *= scaleBy;\n\t\t}\n\t\tfor (let b of [...this.lines, ...(this.unsplitLines ?? [])])\n\t\t{\n\t\t\tb.line.scaleBy(scaleBy);\n\t\t\tb.size *= scaleBy;\n\t\t\tb.head *= scaleBy;\n\t\t}\n\t\tfor (let r of this.rings)\n\t\t{\n\t\t\tr.cx *= scaleBy;\n\t\t\tr.cy *= scaleBy;\n\t\t\tr.rw *= scaleBy;\n\t\t\tr.rh *= scaleBy;\n\t\t\tr.size *= scaleBy;\n\t\t}\n\t\tfor (let p of this.paths)\n\t\t{\n\t\t\tVec.mulBy(p.px, scaleBy);\n\t\t\tVec.mulBy(p.py, scaleBy);\n\t\t\tp.size *= scaleBy;\n\t\t}\n\t\tfor (let spc of this.space)\n\t\t{\n\t\t\tspc.box.scaleBy(scaleBy);\n\t\t\tVec.mulBy(spc.px, scaleBy);\n\t\t\tVec.mulBy(spc.py, scaleBy);\n\t\t}\n\t}\n\n\t// goes through all of the primitives and works out {minX,minY,maxX,maxY}\n\tpublic determineBoundary(padding?:number):number[]\n\t{\n\t\tif (padding == null) padding = 0;\n\t\tif (this.space.length == 0) return [0, 0, 2 * padding, 2 * padding];\n\n\t\tlet bounds = Vec.numberArray(0, 4);\n\t\tlet spc = this.space[0];\n\t\tbounds[0] = spc.box.x;\n\t\tbounds[1] = spc.box.y;\n\t\tbounds[2] = spc.box.x + spc.box.w;\n\t\tbounds[3] = spc.box.y + spc.box.h;\n\n\t\tfor (let n = this.space.length - 1; n > 0; n--)\n\t\t{\n\t\t\tspc = this.space[n];\n\t\t\tbounds[0] = Math.min(bounds[0], spc.box.x);\n\t\t\tbounds[1] = Math.min(bounds[1], spc.box.y);\n\t\t\tbounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n\t\t\tbounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n\t\t}\n\n\t\treturn bounds;\n\t}\n\tpublic determineBoundaryBox():Box\n\t{\n\t\tlet [x1, y1, x2, y2] = this.determineBoundary();\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\t// convenience method: determines the boundaries of the arrangement, and makes sure that it all fits into the given\n\t// box; will be scaled down if necessary, but not scaled up\n\tpublic squeezeInto(x:number, y:number, w:number, h:number, padding?:number):void\n\t{\n\t\tif (padding != null && padding > 0)\n\t\t{\n\t\t\tx += padding;\n\t\t\ty += padding;\n\t\t\tw -= 2 * padding;\n\t\t\th -= 2 * padding;\n\t\t}\n\t\tlet bounds = this.determineBoundary(0);\n\t\tlet bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n\t\tif (bw > w || bh > h)\n\t\t{\n\t\t\tlet downScale = 1;\n\t\t\tif (bw > w) downScale = w / bw;\n\t\t\tif (bh > h) downScale = Math.min(downScale, h / bh);\n\t\t\tthis.scaleEverything(downScale);\n\t\t\tVec.mulBy(bounds, downScale);\n\t\t}\n\t\tthis.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n\t}\n\n\t// if either boundary is greater than the given width/height, scales the objects down so that it fits; the origin is at (0,0) and the\n\t// size is as big as it needs to be\n\tpublic limitBounds(w:number, h:number):void\n\t{\n\t\tlet bounds = this.determineBoundary(0);\n\t\tif (bounds[0] == bounds[2] && bounds[1] == bounds[3]) return;\n\n\t\tlet scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n\t\tthis.offsetEverything(-bounds[0], -bounds[1]);\n\t\tthis.scaleEverything(scale);\n\t}\n\n\t// converts all drawing objects to a single colour\n\tpublic monochromate(col:number):void\n\t{\n\t\tfor (let a of this.points) a.col = col;\n\t\tfor (let b of this.lines) b.col = col;\n\t}\n\n\t// for a specific location, returns a measure of how \"congested\" it is; lower values mean that the point is generally far away\n\t// from things\n\tpublic spatialCongestion(x:number, y:number, thresh?:number):number\n\t{\n\t\tif (thresh == null) thresh = 0.001;\n\t\tlet congest = 0;\n\t\tfor (let n = 0; n < this.points.length; n++)\n\t\t{\n\t\t\tlet a = this.points[n];\n\t\t\tif (a == null) continue;\n\t\t\tlet dx = a.oval.cx - x, dy = a.oval.cy - y;\n\t\t\tcongest += 1 / (dx * dx + dy * dy + thresh);\n\t\t}\n\t\treturn congest;\n\t}\n\n\t// makes a moderately deep copy: the layout metrics can be tinkered with, but not the core ingredients\n\tpublic clone():ArrangeMolecule\n\t{\n\t\tlet dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n\t\tdup.scale = this.scale;\n\t\tdup.bondSepPix = this.bondSepPix;\n\t\tdup.lineSizePix = this.lineSizePix;\n\t\tdup.fontSizePix = this.fontSizePix;\n\t\tdup.ymul = this.ymul;\n\t\tfor (let a of this.points) dup.points.push(clone(a));\n\t\tfor (let b of this.lines) dup.lines.push(clone(b));\n\t\tfor (let s of this.space) dup.space.push(clone(s));\n\t\treturn dup;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// extract bond orders and other artifact-overriden content, and then overwrite them if an artifact applies\n\tprivate setupBondOrders():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\tfor (let n = 0; n < mol.numBonds; n++) this.bondOrder[n] = mol.bondOrder(n + 1);\n\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tthis.atomCharge[n] = mol.atomCharge(n + 1);\n\t\t\tthis.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n\t\t}\n\n\t\tlet delocalise = (obj:any, atoms:number[]) =>\n\t\t{\n\t\t\t// move charge/unpaired off the atoms and into the resonance system\n\t\t\tlet charge = 0, unpaired = 0;\n\t\t\tfor (let a of atoms)\n\t\t\t{\n\t\t\t\tcharge += this.atomCharge[a - 1];\n\t\t\t\tunpaired += this.atomUnpaired[a - 1];\n\t\t\t\tthis.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n\t\t\t}\n\t\t\tthis.artifactCharge.set(obj, charge);\n\t\t\tthis.artifactUnpaired.set(obj, unpaired);\n\n\t\t\t// any bonds sticking out of the resonance system are depicted as single lines\n\t\t\tfor (let a1 of atoms) for (let a2 of mol.atomAdjList(a1)) if (!atoms.includes(a2))\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(a1, a2);\n\t\t\t\tif (this.bondOrder[b - 1] >= 0) this.bondOrder[b - 1] = 1;\n\t\t\t}\n\t\t};\n\n\t\t// any bond that's affected by an artifact gets set to single-order for rendering purposes\n\t\tif (this.artifacts == null) return;\n\n\t\tfor (let path of this.artifacts.getResPaths())\n\t\t{\n\t\t\t// figure out if the average bond order is less than 1 (using the original values)\n\t\t\tlet charge = 0, unpaired = 0, orders = 0;\n\t\t\tfor (let n = 0; n < path.atoms.length; n++)\n\t\t\t{\n\t\t\t\tcharge += mol.atomCharge(path.atoms[n]);\n\t\t\t\tunpaired += mol.atomUnpaired(path.atoms[n]);\n\t\t\t\tlet b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\tif (b > 0) orders += mol.bondOrder(b);\n\t\t\t}\n\t\t\tlet fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n\t\t\tthis.artifactFract.set(path, fractional);\n\n\t\t\tfor (let n = 0; n < path.atoms.length - 1; n++)\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = fractional ? -1 : 1;\n\t\t\t}\n\t\t\tdelocalise(path, path.atoms);\n\t\t}\n\t\tfor (let ring of this.artifacts.getResRings())\n\t\t{\n\t\t\tfor (let n = 0; n < ring.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = 1;\n\t\t\t}\n\t\t\tdelocalise(ring, ring.atoms);\n\t\t}\n\t\tfor (let arene of this.artifacts.getArenes())\n\t\t{\n\t\t\tlet alkeneLike = arene.atoms.length == 2;\n\n\t\t\tfor (let n = 0; n < arene.atoms.length; n++)\n\t\t\t{\n\t\t\t\tif (!alkeneLike)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\t\tif (b > 0) this.bondOrder[b - 1] = 1;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(arene.centre, arene.atoms[n]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = -1;\n\t\t\t}\n\t\t\tdelocalise(arene, arene.atoms);\n\t\t}\n\t}\n\n\t// for a given adjunct to an atom, find a suitable position for it, based on the provided direction (angdir, radians);\n\t// the placement algorithm will try pretty hard to find a suitable position which is close to the parent atom, not\n\t// overlapping anything, and projected in the requested direction\n\tprivate placeAdjunct(atom:number, str:string, fsz:number, col:number, angdir:number):void\n\t{\n\t\tlet wad = this.measure.measureText(str, fsz);\n\t\tlet a = this.points[atom - 1];\n\t\tlet cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n\n\t\t// special deal: carbenes with a zero bond\n\t\tif (str == '..')\n\t\t{\n\t\t\tlet zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n\t\t\tif (zeroBonds.length == 1)\n\t\t\t{\n\t\t\t\tlet zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n\t\t\t\tlet dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n\t\t\t\tlet r = fsz * 0.15;\n\t\t\t\tlet ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n\t\t\t\tlet ext = 1.2 * (rw + rh) * inv;\n\t\t\t\t[dx, dy] = [dx * ext, dy * ext];\n\n\t\t\t\tthis.points.push({anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r)});\n\t\t\t\tthis.points.push({anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r)});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = 0, bestDX = 0, bestDY = 0;\n\t\tlet px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n\t\tlet angThresh = 10; // angular threshold for short-circuiting\n\t\tlet shorted = false;\n\t\tfor (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale())\n\t\t{\n\t\t\tconst DELTA = 5 * DEGRAD;\n\t\t\tfor (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA) for (let s = -1; s <= 1; s += 2)\n\t\t\t{\n\t\t\t\tlet dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n\t\t\t\tlet dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, null, false);\n\t\t\t\tlet score = 10 * viol + Math.abs(dang) + 10 * ext;\n\n\t\t\t\tlet shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n\n\t\t\t\tif (bestScore == 0 || shortCircuit || score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t\tif (shortCircuit) {shorted = true; break;}\n\t\t\t}\n\n\t\t\tangThresh += 5;\n\t\t}\n\n\t\t// create a point for it\n\t\ta =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: str,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n\t\t};\n\t\tthis.points.push(a);\n\n\t\t// create a square spacefiller\n\t\t// TODO: spacefiller should use the glyph rather than just a box...\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n\t\t\tpy: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// deals with an atom symbol which is a label rather than an element/short token\n\tprivate processLabel(anum:number):void\n\t{\n\t\tlet ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n\n\t\t// decide whether the label goes on the left, or the right, or is centred\n\t\tlet left = 0, right = 0;\n\t\tlet adj = this.mol.atomAdjList(anum);\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tlet theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n\t\t\tif (theta >= -15 && theta <= 15) right += 3;\n\t\t\telse if (theta >= -85 && theta <= 85) right++;\n\t\t\telse if (theta > 85 && theta < 95) {} // orthogonal\n\t\t\telse if (theta < -85 && theta > -95) {} // orthogonal\n\t\t\telse if (theta > 165 || theta < -165) left += 3;\n\t\t\telse left++;\n\t\t}\n\n\t\tlet label = this.mol.atomElement(anum);\n\t\tlet ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n\n\t\tlet side = 0;\n\t\tif (left == 0 && right == 0 && ibar < 0 && ibrace < 0) {} // stay in middle\n\t\telse if (left < right) side = -1;\n\t\telse if (right < left) side = 1;\n\t\telse\n\t\t{\n\t\t\t// pick based on congestion; notice the bias toward placing on the right\n\t\t\t// !! if (spatialCongestion(ax-1,ay)<0.5f*spatialCongestion(ax+1,ay)) side=-1; else side=1;\n\t\t\tlet score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n\t\t\tlet score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n\t\t\tif (score1 < 0.5 * score2) side = -1; else side = 1;\n\t\t}\n\n\t\t// break up the label, if special characters are being used, and measure each\n\t\tlet chunks:string[] = null;\n\t\tlet position:number[] = null;\n\t\tlet primary:boolean[] = null;\n\t\tlet refchunk = 0;\n\n\t\tif (ibar < 0 && ibrace < 0) // one piece: it's simple\n\t\t{\n\t\t\tif (side == 0) chunks = [label];\n\t\t\telse if (side < 0)\n\t\t\t{\n\t\t\t\tchunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n\t\t\t\trefchunk = 1;\n\t\t\t}\n\t\t\telse chunks = [label.substring(0, 1), label.substring(1)];\n\t\t}\n\t\telse // multiple pieces: split it up\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tlet bpos:number[] = [];\n\t\t\tlet bpri:boolean[] = [];\n\n\t\t\tlet blocks:string[] = label.split('|');\n\t\t\tif (side < 0) blocks = Vec.reverse(blocks);\n\n\t\t\tlet buff = '';\n\t\t\tfor (let i = 0; i < blocks.length; i++)\n\t\t\t{\n\t\t\t\tlet isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n\n\t\t\t\tif (side < 0 && refchunk == 0 && i == blocks.length - 1) refchunk = bits.length;\n\t\t\t\tlet pos = 0;\n\t\t\t\tbuff = '';\n\t\t\t\tfor (let j = 0; j < blocks[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tlet ch = blocks[i].charAt(j);\n\t\t\t\t\tif (ch == '{' || ch == '}')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (buff.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbits.push(buff.toString());\n\t\t\t\t\t\t\tbpos.push(pos);\n\t\t\t\t\t\t\tbpri.push(isPrimary);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuff = '';\n\t\t\t\t\t\tpos = ch == '{' ? -1 : 0;\n\t\t\t\t\t}\n\t\t\t\t\t// NOTE: to do this, have to also protect the split by '|' part above...\n\t\t\t\t\t//else if (ch == '\\\\' && j < blocks[i].length() - 1) {buff.append(blocks[i].charAt(j + 1)); j++;}\n\t\t\t\t\telse if (ch == '^' && pos == -1 && buff.length == 0) pos = 1;\n\t\t\t\t\telse buff += ch;\n\t\t\t\t}\n\t\t\t\tif (buff.length > 0)\n\t\t\t\t{\n\t\t\t\t\tbits.push(buff.toString());\n\t\t\t\t\tbpos.push(pos);\n\t\t\t\t\tbpri.push(isPrimary);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchunks = bits;\n\t\t\tposition = bpos;\n\t\t\tprimary = bpri;\n\n\t\t\t// in case it leads with sub/superscript\n\t\t\twhile (refchunk < chunks.length - 1 && position[refchunk] != 0) refchunk++;\n\t\t}\n\n\t\tlet PADDING = 1.1;\n\t\tlet SSFRACT = 0.6;\n\n\t\tlet chunkw = Vec.numberArray(0, chunks.length);\n\t\tlet tw = 0;\n\t\tfor (let n = 0; n < chunks.length; n++)\n\t\t{\n\t\t\tchunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n\t\t\tif (position != null && position[n] != 0) chunkw[n] *= SSFRACT;\n\t\t\ttw += chunkw[n];\n\t\t}\n\n\t\tlet x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n\t\tfor (let n = 0; n < refchunk; n++) x -= chunkw[n];\n\t\tx -= 0.5 * chunkw[refchunk];\n\n\t\tfor (let n = 0; n < chunks.length; n++)\n\t\t{\n\t\t\tlet a:APoint =\n\t\t\t{\n\t\t\t\tanum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n\t\t\t\ttext: chunks[n],\n\t\t\t\tfsz: this.fontSizePix,\n\t\t\t\tcol: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n\t\t\t\toval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n\t\t\t};\n\n\t\t\tif (position != null && position[n] != 0)\n\t\t\t{\n\t\t\t\ta.fsz *= SSFRACT;\n\t\t\t\t//a.cy += a.fsz * 0.7f * (measure.yIsUp() ? -1 : 1);\n\n\t\t\t\tif (position[n] < 0)\n\t\t\t\t\ta.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n\t\t\t\telse\n\t\t\t\t\ta.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n\t\t\t}\n\t\t\tif (n == refchunk)\n\t\t\t{\n\t\t\t\tthis.points[anum - 1] = a;\n\t\t\t\tthis.space[anum - 1] = this.computeSpacePoint(a);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.points.push(a);\n\t\t\t\tthis.space.push(this.computeSpacePoint(a));\n\t\t\t}\n\n\t\t\tx += chunkw[n];\n\t\t}\n\t}\n\n\t// given that the position (X,Y) connects with atom N, and is part of a bond that connects at the other end\n\t// with (FX,FY), considers the possibility that a new (X,Y) may need to be calculated by backing up along the line;\n\t// the return value is the fraction the it needs to backup, i.e. 1 = don't change, <1 = needs to be shorter\n\tprivate backOffAtom(atom:number, x:number, y:number, fx:number, fy:number, minDist:number):number\n\t{\n\t\tif (x == fx && y == fy) return 1; // can happen when really small\n\n\t\tlet dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n\t\tconst bump = 0.1 * this.measure.scale();\n\t\tlet xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n\n\t\tlet ext = dist;\n\t\tlet active = false;\n\t\tfor (let spc of this.space) if (spc.anum == atom)\n\t\t{\n\t\t\tconst sz = spc.px.length;\n\t\t\tif (sz == 0) continue;\n\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < sz - 1 ? n + 1 : 0;\n\t\t\t\tlet x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n\t\t\t\tif (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2)) continue;\n\t\t\t\tlet xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n\n\t\t\t\tactive = true;\n\t\t\t\text = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n\t\t\t}\n\t\t}\n\n\t\tif (active)\n\t\t{\n\t\t\text = Math.max(minDist, ext - bump);\n\t\t\treturn ext / dist;\n\t\t}\n\t\telse return 1;\n\t}\n\n\t// as above, except returns {reduced distance squared, dx, dy}\n\tprivate backOffAtomDelta(atom:number, x:number, y:number, fx:number, fy:number, minDist:number):number[]\n\t{\n\t\tlet ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n\t\tif (ext >= 1) return null;\n\t\text = 1 - ext;\n\t\tlet dx = (fx - x) * ext, dy = (fy - y) * ext;\n\t\treturn [norm2_xy(dx, dy), dx, dy];\n\t}\n\n\t// applies the impact of the back-off extent, calculated above; returns new coordinates for [x,y]\n\tprivate shrinkBond(x:number, y:number, fx:number, fy:number, ext:number):number[]\n\t{\n\t\tif (ext == 1) return [x, y];\n\t\tlet dx = x - fx, dy = y - fy;\n\t\treturn [fx + ext * dx, fy + ext * dy];\n\t}\n\n\t// for bond begin/end points, compares the current distance to the original distance, to make sure that it hasn't been\n\t// squished below a certain length, which tends to render badly\n\tprivate ensureMinimumBondLength(xy1:number[], xy2:number[], x1:number, y1:number, x2:number, y2:number, minDist:number):void\n\t{\n\t\tlet dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n\t\tlet dsq = norm2_xy(dx, dy);\n\t\tminDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n\t\tif (dsq >= sqr(minDist - 0.0001)) return;\n\n\t\t// scale the bond back up to its minimum size\n\t\tlet d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n\t\tlet mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n\t\txy1[0] -= dx * mag1;\n\t\txy1[1] -= dy * mag1;\n\t\txy2[0] += dx * mag2;\n\t\txy2[1] += dy * mag2;\n\t}\n\n\t// produces a list of small rings, ordered in a terminal-first manner, which is to be used as the sequence for assigning sides\n\t// of bond orders\n\tprivate orderedRingList():number[][]\n\t{\n\t\tlet rings:number[][] = [];\n\t\tlet SIZE_ORDER = [6, 5, 7, 4, 3];\n\t\tfor (let i = 0; i < SIZE_ORDER.length; i++)\n\t\t{\n\t\t\tlet nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n\t\t\tfor (let j = 0; j < nring.length; j++) rings.push(nring[j]);\n\t\t}\n\t\tlet ringsz = rings.length;\n\n\t\t// for each atom add up the number of times it occurs in a small ring\n\t\tlet ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[n];\n\t\t\tfor (let i = 0; i < r.length; i++) ringbusy[r[i] - 1]++;\n\t\t}\n\n\t\t// score the rings by the sum of the busy quotient\n\t\tlet ringscore = Vec.numberArray(0, ringsz);\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[n];\n\t\t\tfor (let i = 0; i < r.length; i++) ringscore[n] += ringbusy[r[i] - 1];\n\t\t}\n\t\tlet ringorder = Vec.idxSort(ringscore);\n\n\t\t// count the number of double bonds in each ring, and use this to override the primary sort order (most=first)\n\t\tlet resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[ringorder[n]];\n\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tlet j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n\t\t\t\tif (this.mol.bondOrder(j) == 2) resbcount[n]++;\n\t\t\t}\n\t\t\tmaxbcount = Math.max(maxbcount, resbcount[n]);\n\t\t}\n\n\t\tlet pos = 0, ret:number[][] = [];\n\t\tfor (let sz = maxbcount; sz >= 0; sz--)\n\t\t{\n\t\t\tfor (let n = 0; n < ringsz; n++) if (resbcount[n] == sz) ret.push(rings[ringorder[n]]);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t// convenience function which returns {ox,oy} which is orthogonal to the direction of the input vector, of magnitude D; the\n\t// direction of {ox,oy} is to the \"left\" of the input vector\n\tprivate orthogonalDelta(x1:number, y1:number, x2:number, y2:number, d:number):number[]\n\t{\n\t\tlet ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n\t\tlet sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n\t\treturn [ox * sc, oy * sc];\n\t}\n\n\t// given the guideline index of a double bond, and some information about the atoms which are on the \"important side\", creates\n\t// the appropriate line segments\n\tprivate processDoubleBond(idx:number, priority:number[]):void\n\t{\n\t\tlet bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n\t\tlet nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n\n\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\t\tlet oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n\n\t\tconst minDist = MINBOND_EXOTIC * this.measure.scale();\n\t\tlet dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n\n\t\t// count number of priority atoms on either side of the bond vector\n\t\tlet countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n\t\tlet idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n\t\tlet noshift = false; // true if definitely not alkene-ish\n\t\tfor (let n = 0; n < nfr.length; n++) if (nfr[n] != bto)\n\t\t{\n\t\t\tlet bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n\t\t\tif (bo == 0) continue;\n\t\t\tif (bo > 1) {noshift = true; break;}\n\n\t\t\tlet ispri = false;\n\t\t\tfor (let i = 0; i < (priority == null ? 0 : priority.length); i++) if (priority[i] == nfr[n]) ispri = true;\n\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n\t\t\tif (Math.abs(theta) * RADDEG > 175) {noshift = true; break;} // linear\n\n\t\t\tif (theta > 0)\n\t\t\t{\n\t\t\t\tif (ispri) countFLeft++;\n\t\t\t\tidxFLeft = nfr[n];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (ispri) countFRight++;\n\t\t\t\tidxFRight = nfr[n];\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < nto.length; n++) if (nto[n] != bfr)\n\t\t{\n\t\t\tlet bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n\t\t\tif (bo == 0) continue;\n\t\t\tif (bo > 1) {noshift = true; break;}\n\n\t\t\tlet ispri = false;\n\t\t\tfor (let i = 0; i < (priority == null ? 0 : priority.length); i++) if (priority[i] == nto[n]) ispri = true;\n\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n\t\t\tif (Math.abs(theta) * RADDEG > 175) {noshift = true; break;} // linear\n\n\t\t\tif (theta > 0)\n\t\t\t{\n\t\t\t\tif (ispri) countTLeft++;\n\t\t\t\tidxTLeft = nto[n];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (ispri) countTRight++;\n\t\t\t\tidxTRight = nto[n];\n\t\t\t}\n\t\t}\n\n\t\t// decide which side the bond should be shifted to, if either\n\t\tlet side = 0;\n\t\tif (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) {} // inappropriate\n\t\telse if (countFLeft > 0 && countFRight > 0) {} // ambiguous\n\t\telse if (countTLeft > 0 && countTRight > 0) {} // ambiguous\n\t\telse if (countFLeft > 0 || countTLeft > 0) side = 1; // left\n\t\telse if (countFRight > 0 || countTRight > 0) side = -1; // right\n\n\t\t// create the bond lines\n\n\t\tlet sz = this.lineSizePix;\n\t\tlet ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n\t\tlet bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n\n\t\t// side==0 means that the double bond straddles the line between the two points; !=0 means that the first line (A) is like a\n\t\t// regular single bond, while the second line is an adjunct off to one side\n\t\tif (side == 0)\n\t\t{\n\t\t\tax1 = x1 + 0.5 * oxy[0]; ay1 = y1 + 0.5 * oxy[1];\n\t\t\tax2 = x2 + 0.5 * oxy[0]; ay2 = y2 + 0.5 * oxy[1];\n\t\t\tbx1 = x1 - 0.5 * oxy[0]; by1 = y1 - 0.5 * oxy[1];\n\t\t\tbx2 = x2 - 0.5 * oxy[0]; by2 = y2 - 0.5 * oxy[1];\n\t\t}\n\t\telse if (side > 0)\n\t\t{\n\t\t\tbx1 = x1 + oxy[0]; by1 = y1 + oxy[1];\n\t\t\tbx2 = x2 + oxy[0]; by2 = y2 + oxy[1];\n\t\t\tif (nfr.length > 1 && this.points[bfr - 1].text == null) {bx1 += oxy[1]; by1 -= oxy[0];}\n\t\t\tif (nto.length > 1 && this.points[bto - 1].text == null) {bx2 -= oxy[1]; by2 += oxy[0];}\n\t\t}\n\t\telse if (side < 0)\n\t\t{\n\t\t\tbx1 = x1 - oxy[0]; by1 = y1 - oxy[1];\n\t\t\tbx2 = x2 - oxy[0]; by2 = y2 - oxy[1];\n\t\t\tif (nfr.length > 1 && this.points[bfr - 1].text == null) {bx1 += oxy[1]; by1 -= oxy[0];}\n\t\t\tif (nto.length > 1 && this.points[bto - 1].text == null) {bx2 -= oxy[1]; by2 += oxy[0];}\n\t\t}\n\n\t\t// if there's shifting happening, check to see if either end has a terminal heteroatom\n\t\tif (side != 0)\n\t\t{\n\t\t\tif (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null)\n\t\t\t{\n\t\t\t\tthis.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n\t\t\t}\n\t\t\tif (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null)\n\t\t\t{\n\t\t\t\tthis.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n\t\t\t}\n\t\t}\n\n\t\t// see if either of the lines approaches too close to something and, if so, back them both off by the same extent\n\t\tlet delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n\t\tif (delta1 != null || delta2 != null)\n\t\t{\n\t\t\tlet delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n\t\t\tax1 += delta[1];\n\t\t\tay1 += delta[2];\n\t\t\tbx1 += delta[1];\n\t\t\tby1 += delta[2];\n\t\t}\n\t\tlet delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n\t\tif (delta3 != null || delta4 != null)\n\t\t{\n\t\t\tlet delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n\t\t\tax2 += delta[1];\n\t\t\tay2 += delta[2];\n\t\t\tbx2 += delta[1];\n\t\t\tby2 += delta[2];\n\t\t}\n\n\t\t// if both sides are evenly balanced, want to make the double bonds intersect with their adjacent bonds\n\t\tif (side == 0 && !noshift)\n\t\t{\n\t\t\tlet xy:number[] = null;\n\t\t\tif (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx))\n\t\t\t{\n\t\t\t\txy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n\t\t\t\tif (xy != null) {ax1 = xy[0]; ay1 = xy[1];}\n\t\t\t\txy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n\t\t\t\tif (xy != null) {bx1 = xy[0]; by1 = xy[1];}\n\t\t\t}\n\t\t\tif (this.points[bto - 1].text == null && !this.mol.bondInRing(idx))\n\t\t\t{\n\t\t\t\txy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n\t\t\t\tif (xy != null) {ax2 = xy[0]; ay2 = xy[1];}\n\t\t\t\txy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n\t\t\t\tif (xy != null) {bx2 = xy[0]; by2 = xy[1];}\n\t\t\t}\n\t\t}\n\n\t\tlet lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n\t\tlet head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n\t\tlet col = this.effects.colBond[idx];\n\t\tif (!col) col = this.policy.data.foreground;\n\n\t\tlet b1:BLine =\n\t\t{\n\t\t\tbnum: idx,\n\t\t\tbfr,\n\t\t\tbto,\n\t\t\ttype: lt,\n\t\t\tline: new Line(ax1, ay1, ax2, ay2),\n\t\t\tsize: sz,\n\t\t\thead,\n\t\t\tcol\n\t\t};\n\t\tlet b2:BLine =\n\t\t{\n\t\t\tbnum: idx,\n\t\t\tbfr,\n\t\t\tbto,\n\t\t\ttype: lt,\n\t\t\tline: new Line(bx1, by1, bx2, by2),\n\t\t\tsize: sz,\n\t\t\thead,\n\t\t\tcol\n\t\t};\n\n\t\tthis.lines.push(b1);\n\t\tthis.lines.push(b2);\n\t\tthis.space.push(this.computeSpaceLine(b1));\n\t\tthis.space.push(this.computeSpaceLine(b2));\n\t}\n\n\t// for a point index (0-based), attempt to place some number of hydrogen atoms as a label (H, H2, H3, etc.); if the fussy\n\t// parameter is set, will insist on placing it in one of the 4 axial directions, starting with the atom's default preference;\n\t// will return false if this cannot be accomplished without stepping on something; if fussy is not enabled, will just try to\n\t// get it as close as possible\n\tprivate placeHydrogen(idx:number, hcount:number, fussy:boolean):boolean\n\t{\n\t\tlet font = FontData.main;\n\t\tconst SSFRACT = 0.6;\n\t\tconst GLYPH_H = font.getIndex('H');\n\n\t\tlet a = this.points[idx];\n\t\tlet emscale = a.fsz * font.INV_UNITS_PER_EM;\n\t\tlet sub = hcount >= 2 ? hcount.toString() : '';\n\n\t\t// create polygonal outline: start with the precomputed convex hull of the letter 'H', then grow as necessary\n\t\tlet outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n\n\t\tlet firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n\t\tfor (let n = 0; n < sub.length; n++)\n\t\t{\n\t\t\tlet ch = sub.charAt(n), g = font.getIndex(ch);\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\temw += font.getKerning('H', ch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet chp = sub.charAt(n - 1);\n\t\t\t\temw += font.getKerning(chp, ch) * SSFRACT;\n\t\t\t}\n\n\t\t\tlet extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n\t\t\tVec.addTo(extraX, emw / SSFRACT);\n\t\t\tVec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n\t\t\tVec.mulBy(extraX, SSFRACT);\n\t\t\tVec.mulBy(extraY, SSFRACT);\n\t\t\toutlineX = outlineX.concat(extraX);\n\t\t\toutlineY = outlineY.concat(extraY);\n\t\t\temw += font.HORIZ_ADV_X[g] * SSFRACT;\n\t\t}\n\n\t\t// if multiple, take the convex hull of all of the above\n\t\tif (sub.length > 0)\n\t\t{\n\t\t\tlet qh = new QuickHull(outlineX, outlineY, 0);\n\t\t\toutlineX = qh.hullX;\n\t\t\toutlineY = qh.hullY;\n\t\t}\n\n\t\t// transform the outline into the right position\n\t\tlet emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n\t\tfor (let n = 0; n < outlineX.length; n++)\n\t\t{\n\t\t\toutlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n\t\t\toutlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n\t\t}\n\n\t\t// for the \"fussy\" cases, only attempt the 4 axis-oriented directions\n\t\tlet dx = 0, dy = 0;\n\t\tlet srcWAD = this.measure.measureText(a.text, a.fsz);\n\t\tif (fussy)\n\t\t{\n\t\t\t// decide on the order: {0,1,2,3} is right,left,up,down; but priority can vary\n\t\t\tlet RIGHTLEFT = [0, 1, 2, 3];\n\t\t\tlet LEFTRIGHT = [1, 0, 2, 3];\n\t\t\tlet UPDOWN = [2, 3, 0, 1];\n\t\t\tlet DOWNUP = [3, 2, 0, 1];\n\t\t\tlet quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n\n\t\t\tif (adj.length == 0)\n\t\t\t{\n\t\t\t\tlet LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n\t\t\t\tif (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n\t\t\t\t\tLEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0) quad = LEFTRIGHT; // e.g. H2O, H2S\n\t\t\t\telse quad = RIGHTLEFT; // e.g. NH3, -OH\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet allLeft = true, allRight = true, allUp = true, allDown = true;\n\t\t\t\tconst ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n\t\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t\t{\n\t\t\t\t\tconst bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n\t\t\t\t\tif (bx > ax + 0.01) allLeft = false;\n\t\t\t\t\tif (bx < ax - 0.01) allRight = false;\n\t\t\t\t\tif (by < ay - 0.01) allUp = false;\n\t\t\t\t\tif (by > ay + 0.01) allDown = false;\n\t\t\t\t}\n\t\t\t\tif (allLeft) {}\n\t\t\t\telse if (allRight) quad = LEFTRIGHT;\n\t\t\t\telse if (allUp) quad = DOWNUP;\n\t\t\t\telse if (allDown) quad = UPDOWN;\n\t\t\t}\n\t\t\tfor (let n = 0; n < 4; n++)\n\t\t\t{\n\t\t\t\tlet tx = 0, ty = 0;\n\t\t\t\tif (quad[n] == 0) tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale; // right\n\t\t\t\telse if (quad[n] == 1) tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale; // left\n\t\t\t\telse if (quad[n] == 2) ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul; // up\n\t\t\t\telse if (quad[n] == 3) ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul; // down\n\n\t\t\t\t// if it can be placed without overlap, we'll take it\n\t\t\t\tVec.addTo(outlineX, tx);\n\t\t\t\tVec.addTo(outlineY, ty);\n\t\t\t\tlet viol = this.countPolyViolations(outlineX, outlineY, null, true);\n\t\t\t\tVec.addTo(outlineX, -tx);\n\t\t\t\tVec.addTo(outlineY, -ty);\n\n\t\t\t\tif (viol == 0)\n\t\t\t\t{\n\t\t\t\t\tdx = tx;\n\t\t\t\t\tdy = ty;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dx == 0 && dy == 0) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// for this one, we need a version of the outline polygon that's slightly bigger so it's not adjacent\n\t\t\tconst mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n\t\t\tconst mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n\t\t\tconst psz = outlineX.length;\n\n\t\t\tlet magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tmagPX[n] = (magPX[n] - cx) * mag + cx;\n\t\t\t\tmagPY[n] = (magPY[n] - cy) * mag + cy;\n\t\t\t}\n\n\t\t\t// do a circular sweep, with an extending radius; if at any extension there's a non-overlapping\n\t\t\tlet bestScore = 0, bestExt = 0, bestAng = 0;\n\t\t\tfor (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale())\n\t\t\t{\n\t\t\t\tlet anyNoClash = false;\n\n\t\t\t\tfor (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tlet tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n\t\t\t\t\tVec.addTo(magPX, tx);\n\t\t\t\t\tVec.addTo(magPY, ty);\n\t\t\t\t\tlet viol = this.countPolyViolations(magPX, magPY, null, false);\n\t\t\t\t\tVec.addTo(magPX, -tx);\n\t\t\t\t\tVec.addTo(magPY, -ty);\n\t\t\t\t\tif (viol == 0) anyNoClash = true;\n\t\t\t\t\tlet score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n\t\t\t\t\tif (bestScore == 0 || score < bestScore)\n\t\t\t\t\t{\n\t\t\t\t\t\tbestScore = score;\n\t\t\t\t\t\tbestExt = ext;\n\t\t\t\t\t\tbestAng = ang;\n\t\t\t\t\t\tdx = tx;\n\t\t\t\t\t\tdy = ty;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (anyNoClash) break;\n\t\t\t}\n\t\t}\n\n\t\t// apply the result\n\t\tlet wad = this.measure.measureText('H', a.fsz);\n\t\tconst PADDING = 1.1;\n\t\tlet ah:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: 'H',\n\t\t\tfsz: a.fsz,\n\t\t\tcol: a.col,\n\t\t\toval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n\t\t};\n\t\tthis.points.push(ah);\n\n\t\tif (sub.length > 0)\n\t\t{\n\t\t\tconst subFsz = SSFRACT * a.fsz;\n\t\t\twad = this.measure.measureText(sub, subFsz);\n\t\t\tlet an:APoint =\n\t\t\t{\n\t\t\t\tanum: 0,\n\t\t\t\ttext: sub,\n\t\t\t\tfsz: subFsz,\n\t\t\t\tcol: a.col,\n\t\t\t\toval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0],\n\t\t\t\t\t\t\t\t ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n\t\t\t};\n\t\t\tthis.points.push(an);\n\t\t}\n\n\t\t// the space-filler is for the H and its label\n\t\tVec.addTo(outlineX, dx);\n\t\tVec.addTo(outlineY, dy);\n\t\tlet minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n\t\t\tpx: outlineX,\n\t\t\tpy: outlineY\n\t\t};\n\t\tthis.space.push(spc);\n\n\t\treturn true;\n\t}\n\n\t// creates a \"space filling\" outline for a point, which provides sufficient detail to maneuvre other objects around it\n\tprivate computeSpacePoint(a:APoint):SpaceFiller\n\t{\n\t\tlet s:SpaceFiller =\n\t\t{\n\t\t\tanum: a.anum,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(),\n\t\t\tpx: [],\n\t\t\tpy: []\n\t\t};\n\n\t\tconst font = FontData.main;\n\t\tlet outlineX:number[] = [], outlineY:number[] = [];\n\t\tlet emw = 0, nglyphs = 0;\n\t\tif (a.text != null)\n\t\t{\n\t\t\tfor (let n = 0; n < a.text.length; n++)\n\t\t\t{\n\t\t\t\tlet ch1 = a.text.charAt(n);\n\t\t\t\tlet i = font.getIndex(ch1);\n\t\t\t\tif (i >= 0)\n\t\t\t\t{\n\t\t\t\t\tif (emw == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\toutlineX = font.getOutlineX(i);\n\t\t\t\t\t\toutlineY = font.getOutlineY(i);\n\t\t\t\t\t\tnglyphs = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n\t\t\t\t\t\tif (extraX.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tVec.addTo(extraX, emw);\n\t\t\t\t\t\t\toutlineX = outlineX.concat(extraX);\n\t\t\t\t\t\t\toutlineY = outlineY.concat(extraY);\n\t\t\t\t\t\t\tnglyphs++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\temw += font.HORIZ_ADV_X[i];\n\t\t\t\t}\n\t\t\t\telse emw += font.MISSING_HORZ;\n\n\t\t\t\tif (n < a.text.length - 1)\n\t\t\t\t{\n\t\t\t\t\tlet ch2 = a.text.charAt(n + 1);\n\t\t\t\t\temw += font.getKerning(ch1, ch2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (outlineX.length > 0)\n\t\t{\n\t\t\tif (nglyphs > 1)\n\t\t\t{\n\t\t\t\tlet qh = new QuickHull(outlineX, outlineY, 0);\n\t\t\t\toutlineX = qh.hullX;\n\t\t\t\toutlineY = qh.hullY;\n\t\t\t}\n\n\t\t\tlet emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n\t\t\tlet emscale = a.fsz * font.INV_UNITS_PER_EM;\n\t\t\tfor (let n = 0; n < outlineX.length; n++)\n\t\t\t{\n\t\t\t\toutlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n\t\t\t\toutlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n\t\t\t}\n\n\t\t\ts.px = outlineX;\n\t\t\ts.py = outlineY;\n\t\t\tlet minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n\t\t\ts.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts.box = Box.fromOval(a.oval);\n\t\t\tif (s.box.w > 0 && s.box.h > 0)\n\t\t\t{\n\t\t\t\ts.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n\t\t\t\ts.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n\t\t\t}\n\t\t}\n\n\t\treturn s;\n\t}\n\n\t// creates a \"space filling\" outline for a line, which may end up being described as a line segment or a polygon\n\tprivate computeSpaceLine(b:BLine):SpaceFiller\n\t{\n\t\tlet s:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: b.bnum,\n\t\t\tbox: new Box(),\n\t\t\tpx: [],\n\t\t\tpy: []\n\t\t};\n\t\tif (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir)\n\t\t{\n\t\t\t// line segment\n\t\t\ts.px = [b.line.x1, b.line.x2];\n\t\t\ts.py = [b.line.y1, b.line.y2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create a wedge of fat-body outline\n\t\t\tconst dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n\t\t\tconst norm = b.head / Math.sqrt(dx * dx + dy * dy);\n\t\t\tconst ox = norm * dy, oy = -norm * dx;\n\n\t\t\tif (b.type == BLineType.Unknown)\n\t\t\t{\n\t\t\t\ts.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n\t\t\t\ts.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n\t\t\t\ts.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n\t\t\t}\n\t\t}\n\n\t\ts.box.x = Vec.min(s.px) - b.size;\n\t\ts.box.y = Vec.min(s.py) - b.size;\n\t\ts.box.w = Vec.max(s.px) - s.box.x + b.size;\n\t\ts.box.h = Vec.max(s.py) - s.box.y + b.size;\n\t\treturn s;\n\t}\n\n\t// adjusts the point, and associated spacefillers, for an atom\n\tprivate bumpAtomPosition(atom:number, dx:number, dy:number):void\n\t{\n\t\tlet p = this.points[atom - 1];\n\t\tp.oval.cx += dx;\n\t\tp.oval.cy += dy;\n\n\t\tfor (let n = this.space.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet s = this.space[n - 1];\n\t\t\tif (s == null || s.anum != atom) continue;\n\t\t\ts.box.x += dx;\n\t\t\ts.box.y += dy;\n\t\t\tVec.addTo(s.px, dx);\n\t\t\tVec.addTo(s.py, dy);\n\t\t}\n\t}\n\n\t// returns a subset of the space-filling outlines: only those whose bounding boxes match the supplied rectangle\n\tprivate spaceSubset(x:number, y:number, w:number, h:number):SpaceFiller[]\n\t{\n\t\tlet subset:SpaceFiller[] = [];\n\t\tfor (let s of this.space) if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h)) subset.push(s);\n\t\treturn subset;\n\t}\n\n\t// for a provided polygon, counts the number of times each of its lines intersects with the lines of one of the space-filling\n\t// polygons already placed; if the shortCircuit parameter is true, will return as soon as one is found\n\tprivate countPolyViolations(px:number[], py:number[], space:SpaceFiller[], shortCircuit:boolean):number\n\t{\n\t\tif (space == null) space = this.space;\n\n\t\tlet hits = 0;\n\t\tconst psz = px.length, nspc = space.length;\n\n\t\t// check for line-crossings first: this is the usual way that collisions happen\n\t\tlet pr = new Box(), sr = new Box();\n\t\tfor (let i1 = 0; i1 < psz; i1++)\n\t\t{\n\t\t\tlet i2 = i1 < psz - 1 ? i1 + 1 : 0;\n\t\t\tpr.x = Math.min(px[i1], px[i2]) - 1;\n\t\t\tpr.y = Math.min(py[i1], py[i2]) - 1;\n\t\t\tpr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n\t\t\tpr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n\n\t\t\tfor (let j = 0; j < nspc; j++)\n\t\t\t{\n\t\t\t\tlet spc = space[j];\n\t\t\t\tif (spc.px == null) continue;\n\t\t\t\tsr.x = spc.box.x - 1;\n\t\t\t\tsr.y = spc.box.y - 1;\n\t\t\t\tsr.w = spc.box.w + 1;\n\t\t\t\tsr.h = spc.box.h + 1;\n\t\t\t\tif (!pr.intersects(sr)) continue; // will eliminate almost everything\n\n\t\t\t\tlet ssz = spc.px.length;\n\t\t\t\tfor (let j1 = 0; j1 < ssz; j1++)\n\t\t\t\t{\n\t\t\t\t\tlet j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n\t\t\t\t\tsr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n\t\t\t\t\tsr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n\t\t\t\t\tsr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n\t\t\t\t\tsr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n\t\t\t\t\tif (!pr.intersects(sr)) continue; // almost everything else\n\n\t\t\t\t\tif (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\tbreak; // (no need to count all the lines in this spacefiller)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ssz == 1) break; // it's a line, not a polygon; one pass only\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now iterate over the spacefillers, and see if it's possible for either polygon to enclose the other\n\t\tpr.x = Vec.min(px);\n\t\tpr.y = Vec.min(py);\n\t\tpr.w = Vec.max(px) - pr.x;\n\t\tpr.h = Vec.max(py) - pr.y;\n\n\t\tfor (let n = nspc - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet spc = space[n];\n\t\t\tsr.x = spc.box.x;\n\t\t\tsr.y = spc.box.y;\n\t\t\tsr.w = spc.box.w;\n\t\t\tsr.h = spc.box.h;\n\t\t\tif (!pr.intersects(sr)) continue; // eliminates most\n\n\t\t\t// see if the spacefiller is inside the parameter polygon\n\t\t\tfor (let i = spc.px.length - 1; i >= 0; i--) if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py))\n\t\t\t{\n\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\thits++;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// see if the parameter polygon is inside the spacefiller\n\t\t\tfor (let i = 0; i < psz; i++) if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py))\n\t\t\t{\n\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\thits++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn hits;\n\t}\n\n\t// considering any bonds between (bf,bt), given that 'bt' is the source of a double bond line at position (x,y) and heading\n\t// out in the direction (dx,dy), make sure that two lines are adjusted to their intersection position; the position of\n\t// the line involving 'bf' is modified directly, while the new position is returned as an array of [x,y], for the caller\n\t// to update\n\tprivate adjustBondPosition(bf:number, bt:number, x1:number, y1:number, x2:number, y2:number):number[]\n\t{\n\t\tif (bf == 0 || bt == 0) return null;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet b = this.lines[n];\n\t\t\tif (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL) continue;\n\n\t\t\tlet alt = false;\n\t\t\tif (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) {}\n\t\t\telse if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf) alt = true;\n\t\t\telse continue;\n\n\t\t\t// if lines are anywhere near parallel, don't do this\n\t\t\t//if (GeomUtil.areLinesParallel(b.x1,b.y1,b.x2,b.y2,x1,y1,x2,y2)) continue; (this is too precise)\n\t\t\tlet th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n\t\t\tif ((th > -5 && th < 5) || th > 175 || th < -175) continue;\n\n\t\t\tlet xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n\n\t\t\t// separate the non-double bond attachments (but only if not in a ring)\n\t\t\tif (this.mol.atomRingBlock(bt) == 0)\n\t\t\t{\n\t\t\t\tif (alt)\n\t\t\t\t\t{b.line.x1 = xy[0]; b.line.y1 = xy[1];}\n\t\t\t\telse\n\t\t\t\t\t{b.line.x2 = xy[0]; b.line.y2 = xy[1];}\n\t\t\t}\n\n\t\t\treturn xy;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// for the guideline index of a double bond, determines which side has weighting priority for the drawing of the bond;\n\t// assumes a chain-like bond (though it could still be in a large ring); a null/empty/ambiguous set implies that there\n\t// is no priority, and that the bond should not be drawn in a side-shifted manner...\n\tprivate priorityDoubleSubstit(idx:number):number[]\n\t{\n\t\tlet bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n\t\tlet nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n\t\tlet a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\t\tlet dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n\n\t\tlet idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n\n\t\tfor (let n = 0; n < nf.length; n++) if (nf[n] != bt)\n\t\t{\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n\t\t\tif (theta > 0) {if (idxFLeft != 0) return null; idxFLeft = nf[n];}\n\t\t\telse {if (idxFRight != 0) return null; idxFRight = nf[n];}\n\t\t}\n\t\tfor (let n = 0; n < nt.length; n++) if (nt[n] != bf)\n\t\t{\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n\t\t\tif (theta > 0) {if (idxTLeft != 0) return null; idxTLeft = nt[n];}\n\t\t\telse {if (idxTRight != 0) return null; idxTRight = nt[n];}\n\t\t}\n\n\t\tlet sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n\n\t\tif (sumFrom == 1 && sumTo == 0) return [idxFLeft > 0 ? idxFLeft : idxFRight];\n\t\tif (sumFrom == 0 && sumTo == 1) return [idxTLeft > 0 ? idxTLeft : idxTRight];\n\t\tif (sumFrom == 1 && sumTo == 1)\n\t\t{\n\t\t\t// cis? if so, then side is obvious\n\t\t\tif (idxFLeft > 0 && idxTLeft > 0) return [idxFLeft, idxTLeft];\n\t\t\tif (idxFRight > 0 && idxTRight > 0) return [idxFRight, idxTRight];\n\n\t\t\t// trans? either is fine, so go with congestion\n\t\t\tlet oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n\t\t\tlet congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n\t\t\tlet congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n\t\t\tif (congestLeft < congestRight) return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n\t\t\telse return [idxFRight > 0 ? idxFRight : idxTRight];\n\t\t}\n\t\tif (sumFrom == 2 && sumTo == 1)\n\t\t{\n\t\t\t// side with the majority\n\t\t\tif (idxTLeft == 0) return [idxFRight, idxTRight];\n\t\t\telse return [idxFLeft, idxTLeft];\n\t\t}\n\t\tif (sumFrom == 1 && sumTo == 2)\n\t\t{\n\t\t\t// side with the majority\n\t\t\tif (idxFLeft == 0) return [idxFRight, idxTRight];\n\t\t\telse return [idxFLeft, idxTLeft];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// adding additional non-core annotations, later on in the process; it is assumed that there is no directional preference\n\tprivate annotateAtom(atom:number, text:string, col:number, fsz:number):void\n\t{\n\t\tlet [tw, ta] = this.measure.measureText(text, fsz);\n\t\tlet a = this.points[atom - 1];\n\t\tlet cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n\n\t\tlet otherTheta:number[] = [];\n\t\tfor (let a of this.mol.atomAdjList(atom))\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\n\t\tlet minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n\t\tlet angsteps = 36, angsz = TWOPI / angsteps;\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n\t\tlet px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n\n\t\tlet limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n\t\tlet subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n\n\t\tfor (let step = 0; step < nsteps; step++)\n\t\t{\n\t\t\tlet ext = minExt + step * stepsz;\n\t\t\tfor (let ang = 0; ang < angsteps; ang++)\n\t\t\t{\n\t\t\t\tlet th = angsz * ang;\n\t\t\t\tlet dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, subSpace, false);\n\t\t\t\tlet score = viol * 1000;\n\t\t\t\tfor (let oth of otherTheta) score -= Math.abs(angleDiff(th, oth));\n\n\t\t\t\tif (score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestScore < 500) break;\n\t\t}\n\n\t\tlet x = cx + bestDX, y = cy + bestDY;\n\n\t\t// create a point for it\n\t\tlet an:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(x, y, rw, rh),\n\t\t};\n\t\tthis.points.push(an);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [x - rw, x + rw, x + rw, x - rw],\n\t\t\tpy: [y - rh, y - rh, y + rh, y + rh],\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\tprivate annotateBond(bond:number, text:string, col:number, fsz:number):void\n\t{\n\t\tlet [tw, ta] = this.measure.measureText(text, fsz);\n\t\tlet bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\tlet cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n\n\t\tlet bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n\t\tlet otherTheta:number[] = [bth, bth + Math.PI];\n\t\tfor (let a of this.mol.atomAdjList(bfr)) if (a != bto)\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\t\tfor (let a of this.mol.atomAdjList(bto)) if (a != bfr)\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\n\t\tlet minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n\t\tlet angsteps = 36, angsz = TWOPI / angsteps;\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n\t\tlet px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n\n\t\tlet limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n\t\tlet subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n\n\t\tfor (let step = 0; step < nsteps; step++)\n\t\t{\n\t\t\tlet ext = minExt + step * stepsz;\n\t\t\tfor (let ang = 0; ang < angsteps; ang++)\n\t\t\t{\n\t\t\t\tlet th = angsz * ang;\n\t\t\t\tlet dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, subSpace, false);\n\t\t\t\tlet score = viol * 1000;\n\t\t\t\tfor (let oth of otherTheta) score -= Math.abs(angleDiff(th, oth));\n\n\t\t\t\tif (score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestScore < 500) break;\n\t\t}\n\n\t\tlet x = cx + bestDX, y = cy + bestDY;\n\n\t\t// create a point for it\n\t\tlet an:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(x, y, rw, rh),\n\t\t};\n\t\tthis.points.push(an);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [x - rw, x + rw, x + rw, x - rw],\n\t\t\tpy: [y - rh, y - rh, y + rh, y + rh],\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// returns true if the indicated box intersects with any of the currently defined atom centres or bond lines; can optionally\n\t// pass masks for the points & lines which we could possibly care about\n\tprivate boxOverlaps(x:number, y:number, w:number, h:number, pointmask?:boolean[], linemask?:boolean[]):boolean\n\t{\n\t\tlet vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n\n\t\tfor (let n = 0; n < this.points.length; n++)\n\t\t{\n\t\t\tif (pointmask != null && !pointmask[n]) continue;\n\n\t\t\tlet a = this.points[n];\n\t\t\tlet wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n\n\t\t\t// test for any intersection of rectangles\n\t\t\tif (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2) continue; // no intersection of rectangles\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tif (linemask != null && !linemask[n]) continue;\n\n\t\t\tlet b = this.lines[n];\n\n\t\t\tlet wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n\n\t\t\t// test for any intersection with line's rectangle\n\t\t\tif (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2)) continue; // no intersection of rectangles\n\n\t\t\t// if either point is completely in the box, then fast-out\n\t\t\tif (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2) return true;\n\t\t\tif (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2) return true;\n\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2)) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// given the predetermined fact that {bondHigher} crosses {bondLower} with the original coordinates, looks for\n\t// arranged lines matching these indices, so that they might be split up\n\tprivate resolveLineCrossings(bondHigher:number, bondLower:number):void\n\t{\n\t\tconst TYPES = [BLineType.Normal, BLineType.Dotted, BLineType.DotDir];\n\n\t\tconst stashOriginals = () =>\n\t\t{\n\t\t\tif (!this.unsplitLines) this.unsplitLines = this.lines.map((b) =>\n\t\t\t{\n\t\t\t\treturn {...b, line: b.line.clone()};\n\t\t\t});\n\t\t};\n\n\t\tfor (let sanity = 10; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tlet linesHigher = this.lines.filter((b) => b.bnum == bondHigher && TYPES.includes(b.type));\n\t\t\tlet linesLower = this.lines.filter((b) => b.bnum == bondLower && TYPES.includes(b.type));\n\n\t\t\tfor (let b1 of linesHigher)\n\t\t\t{\n\t\t\t\tfor (let b2 of linesLower)\n\t\t\t\t{\n\t\t\t\t\t// make sure they don't share an atom\n\t\t\t\t\tif (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto) continue;\n\n\t\t\t\t\tif (b2.type == BLineType.DotDir) b2.type = BLineType.Dotted; // zap the directionality when splitting in two\n\n\t\t\t\t\tif (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2)) continue;\n\t\t\t\t\tlet [ix, iy] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n\n\t\t\t\t\tlet dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n\t\t\t\t\tlet ext = Math.abs(dx) > Math.abs(dy) ? (ix - b2.line.x1) / dx : (iy - b2.line.y1) / dy;\n\t\t\t\t\tlet dist = norm_xy(dx, dy);\n\t\t\t\t\tlet delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n\t\t\t\t\tif (ext > delta && ext < 1 - delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tstashOriginals();\n\t\t\t\t\t\tlet b3:BLine =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbnum: b2.bnum,\n\t\t\t\t\t\t\tbfr: b2.bfr,\n\t\t\t\t\t\t\tbto: b2.bto,\n\t\t\t\t\t\t\ttype: b2.type,\n\t\t\t\t\t\t\tline: b2.line.clone(),\n\t\t\t\t\t\t\tsize: b2.size,\n\t\t\t\t\t\t\thead: b2.head,\n\t\t\t\t\t\t\tcol: b2.col\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.lines.push(b3);\n\t\t\t\t\t\tb2.line.x2 = b2.line.x1 + dx * (ext - delta);\n\t\t\t\t\t\tb2.line.y2 = b2.line.y1 + dy * (ext - delta);\n\t\t\t\t\t\tb3.line.x1 = b3.line.x1 + dx * (ext + delta);\n\t\t\t\t\t\tb3.line.y1 = b3.line.y1 + dy * (ext + delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (ext > delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tstashOriginals();\n\t\t\t\t\t\tb2.line.x2 = b2.line.x1 + dx * (ext - delta);\n\t\t\t\t\t\tb2.line.y2 = b2.line.y1 + dy * (ext - delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (ext < 1 - delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tstashOriginals();\n\t\t\t\t\t\tb2.line.x1 = b2.line.x1 + dx * (ext + delta);\n\t\t\t\t\t\tb2.line.y1 = b2.line.y1 + dy * (ext + delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// draw a circle at the interior of a group of atoms, as in, ring-style benzene\n\tprivate createCircularRing(atoms:number[]):void\n\t{\n\t\tlet px:number[] = new Array(atoms.length), py:number[] = new Array(atoms.length);\n\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t{\n\t\t\tlet pt = this.points[atoms[n] - 1];\n\t\t\tpx[n] = pt.oval.cx;\n\t\t\tpy[n] = pt.oval.cy;\n\t\t}\n\t\tlet cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n\n\t\tlet bx:number[] = [], by:number[] = [];\n\t\tlet isRegular = true;\n\t\tlet regDist = Number.NaN;\n\t\tconst FRACT = 0.7;\n\t\tfor (let a of atoms)\n\t\t{\n\t\t\tlet pt = this.points[a - 1];\n\t\t\tlet x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n\t\t\tbx.push(x1); by.push(y0);\n\t\t\tbx.push(x1); by.push(y1);\n\t\t\tbx.push(x1); by.push(y2);\n\t\t\tbx.push(x0); by.push(y1);\n\t\t\tbx.push(x0); by.push(y2);\n\t\t\tbx.push(x2); by.push(y0);\n\t\t\tbx.push(x2); by.push(y1);\n\t\t\tbx.push(x2); by.push(y2);\n\t\t\tlet dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n\t\t\tbx.push(FRACT * dist * Math.cos(theta));\n\t\t\tby.push(FRACT * dist * Math.sin(theta));\n\n\t\t\tfor (let b of this.mol.atomAdjList(a)) if (atoms.indexOf(b) >= 0)\n\t\t\t{\n\t\t\t\tlet pb = this.points[b - 1];\n\t\t\t\tlet mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n\t\t\t\tlet mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n\t\t\t\tbx.push(FRACT * mdist * Math.cos(mtheta));\n\t\t\t\tby.push(FRACT * mdist * Math.sin(mtheta));\n\t\t\t}\n\n\t\t\t// check if it's still considered regular\n\t\t\tif (!isRegular) {}\n\t\t\telse if (Number.isFinite(regDist)) {if (Math.abs(regDist - dist) > 1) isRegular = false;}\n\t\t\telse regDist = dist;\n\t\t}\n\n\t\tlet r:XRing = {atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0};\n\t\tif (isRegular)\n\t\t{\n\t\t\tr.rw = r.rh = GeomUtil.fitCircle(bx, by);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*let lowX = Vec.min(bx) - 10 * Vec.range(bx), highX = Vec.max(bx) + 10 * Vec.range(bx);\n\t\t\tlet lowY = Vec.min(by) - 10 * Vec.range(by), highY = Vec.max(by) + 10 * Vec.range(by);\n\t\t\tlet minX = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < atoms.length - 1 ? n + 1 : 0;\n\t\t\t\tlet p1 = this.points[atoms[n] - 1], p2 = this.points[atoms[nn] - 1];\n\t\t\t\tlet x1 = p1.oval.cx - cx - 0.1 * (p2.oval.cx - p1.oval.cx), y1 = p1.oval.cy - cy - 0.1 * (p2.oval.cy - p1.oval.cy);\n\t\t\t\tlet x2 = p2.oval.cx - cx + 0.1 * (p2.oval.cx - p1.oval.cx), y2 = p2.oval.cy - cy + 0.1 * (p2.oval.cy - p1.oval.cy);\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, lowX, 0, highX, 0))\n\t\t\t\t{\n\t\t\t\t\tlet xy = GeomUtil.lineIntersect(x1, y1, x2, y2, lowX, 0, highX, 0);\n\t\t\t\t\tminX = Math.min(minX, xy[0]);\n\t\t\t\t\tmaxX = Math.max(maxX, xy[0]);\n\t\t\t\t}\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, 0, lowY, 0, highY))\n\t\t\t\t{\n\t\t\t\t\tlet xy = GeomUtil.lineIntersect(x1, y1, x2, y2, 0, lowY, 0, highY);\n\t\t\t\t\tminY = Math.min(minY, xy[1]);\n\t\t\t\t\tmaxY = Math.max(maxY, xy[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet rwh = GeomUtil.fitEllipse(bx, by, minX, minY, maxX, maxY);\n\t\t\tr.rw = rwh[0];\n\t\t\tr.rh = rwh[1];*/\n\n\t\t\tlet mdist = 0;\n\t\t\tfor (let n = 0; n < atoms.length; n++) mdist += norm_xy(px[n] - cx, py[n] - cy);\n\t\t\tlet margin = mdist / atoms.length * (1 - FRACT);\n\t\t\tvar fit = new FitRotatedEllipse(px, py, margin);\n\t\t\tfit.calculate();\n\t\t\tr.cx = fit.cx;\n\t\t\tr.cy = fit.cy;\n\t\t\tr.rw = fit.rw;\n\t\t\tr.rh = fit.rh;\n\t\t\tr.theta = fit.theta;\n\t\t}\n\t\tr.size = this.lineSizePix;\n\t\tthis.rings.push(r);\n\t}\n\n\t// draw a continuous fractional bond for resonance-style paths\n\tprivate createCurvedPath(atoms:number[], fractional:boolean, extAtom:number):void\n\t{\n\t\tconst sz = atoms.length, szn = sz - 1;\n\t\tlet x:number[] = [], y:number[] = [], symbol:boolean[] = [];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet pt = this.points[atoms[n] - 1];\n\t\t\tx.push(pt.oval.cx);\n\t\t\ty.push(pt.oval.cy);\n\t\t\tsymbol.push(pt.text != null);\n\t\t}\n\n\t\t// calculate offsets that can be used (+/-) to put the fraction on one side of the path\n\t\tlet ox:number[] = [], oy:number[] = [];\n\t\tconst EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tlet dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n\t\t\tox.push(dy * invD);\n\t\t\toy.push(-dx * invD);\n\t\t}\n\n\t\t// create two paths with these offsets\n\t\tconst FAR = 1.2, CLOSE = 0.7;\n\t\tlet sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n\t\tconst capA = symbol[0] ? FAR : CLOSE;\n\t\tif (!fractional)\n\t\t{\n\t\t\tsx1[0] = x[0] + ox[0] * capA; sy1[0] = y[0] + oy[0] * capA;\n\t\t\tsx2[0] = x[0] - ox[0] * capA; sy2[0] = y[0] - oy[0] * capA;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst dx = -oy[0], dy = ox[0];\n\t\t\tsx1[0] = x[0] + dx * capA; sy1[0] = y[0] + dy * capA;\n\t\t\tsx2[0] = x[0] + dx * capA; sy2[0] = y[0] + dy * capA;\n\t\t}\n\n\t\tlet ncross1 = 0, ncross2 = 0;\n\t\tfor (let n = 1; n < sz - 1; n++)\n\t\t{\n\t\t\tconst fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n\t\t\tsx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]); sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n\t\t\tsx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]); sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n\n\t\t\t// every other bond \"crosses\" one side or the other\n\t\t\tfor (let a of this.mol.atomAdjList(atoms[n])) if (atoms.indexOf(a) < 0 && a != extAtom)\n\t\t\t{\n\t\t\t\tlet pt = this.points[a - 1];\n\t\t\t\tlet dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n\t\t\t\tlet dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n\t\t\t\tlet dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n\t\t\t\tif (dot1 > dot2) ncross1++; else ncross2++; // higher means that the vectors align, hence this is the crosser\n\t\t\t}\n\t\t}\n\n\t\tlet nn = sz - 1;\n\t\tlet capB = symbol[nn] ? FAR : CLOSE;\n\t\tif (!fractional)\n\t\t{\n\t\t\tsx1[nn] = x[nn] + ox[nn - 1] * capB; sy1[nn] = y[nn] + oy[nn - 1] * capB;\n\t\t\tsx2[nn] = x[nn] - ox[nn - 1] * capB; sy2[nn] = y[nn] - oy[nn - 1] * capB;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet dx = -oy[nn - 1], dy = ox[nn - 1];\n\t\t\tsx1[nn] = x[nn] - dx * capB; sy1[nn] = y[nn] - dy * capB;\n\t\t\tsx2[nn] = x[nn] - dx * capB; sy2[nn] = y[nn] - dy * capB;\n\t\t}\n\n\t\t// come up with a score for each one, and pick the best (shortest with fewest bond crossings)\n\t\tlet score1 = 0, score2 = 0;\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tscore1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n\t\t\tscore2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n\t\t}\n\t\tscore1 *= ncross1 + 1;\n\t\tscore2 *= ncross2 + 1;\n\n\t\tlet sx = score1 < score2 ? sx1 : sx2;\n\t\tlet sy = score1 < score2 ? sy1 : sy2;\n\n\t\tlet p:XPath = {atoms, px: null, py: null, ctrl: null, size: this.lineSizePix};\n\t\tthis.splineInterpolate(p, sx, sy);\n\t\tthis.paths.push(p);\n\n\t\t// NOTE: no spacefiller; consider adding one\n\t}\n\n\t// create a bond emerging from an atom to a centroid of multiple atoms\n\tprivate createBondCentroid(from:number, to:number[]):void\n\t{\n\t\tlet pt = this.points[from - 1];\n\t\tlet x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n\t\tfor (let a of to)\n\t\t{\n\t\t\tpt = this.points[a - 1];\n\t\t\tx2 += pt.oval.cx;\n\t\t\ty2 += pt.oval.cy;\n\t\t}\n\t\tx2 /= to.length; y2 /= to.length;\n\n\t\t// if the \"centroid\" is a point or line, don't want to hit the middle\n\t\tif (to.length <= 2)\n\t\t{\n\t\t\tx2 -= 0.1 * (x2 - x1);\n\t\t\ty2 -= 0.1 * (y2 - y1);\n\t\t}\n\n\t\tconst minDist = MINBOND_LINE * this.measure.scale();\n\t\tlet xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n\t\tthis.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n\n\t\tlet b:BLine =\n\t\t{\n\t\t\tbnum: 0,\n\t\t\tbfr: from,\n\t\t\tbto: 0,\n\t\t\ttype: BLineType.Normal,\n\t\t\tline: new Line(xy1[0], xy1[1], x2, y2),\n\t\t\tsize: this.lineSizePix,\n\t\t\thead: 0,\n\t\t\tcol: this.policy.data.foreground\n\t\t};\n\t\tthis.lines.push(b);\n\t\tthis.space.push(this.computeSpaceLine(b));\n\t}\n\n\t// turns a series of points into a smooth spline\n\tprivate splineInterpolate(path:XPath, x:number[], y:number[]):void\n\t{\n\t\tconst sz = x.length;\n\t\tconst scale = 0.25; // empirical\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\tlet dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n\t\t\t\tlet qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t\tpath.px = Vec.append(path.px, qx); path.py = Vec.append(path.py, qy); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t}\n\t\t\telse if (n == sz - 1)\n\t\t\t{\n\t\t\t\tlet dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n\t\t\t\tlet qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n\t\t\t\tpath.px = Vec.append(path.px, qx); path.py = Vec.append(path.py, qy); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n\t\t\t\tlet invD = invZ(norm_xy(dx, dy));\n\t\t\t\tdx *= invD; dy *= invD;\n\n\t\t\t\tlet d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n\t\t\t\tlet qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n\t\t\t\tlet qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n\n\t\t\t\tpath.px = Vec.append(path.px, qx1); path.py = Vec.append(path.py, qy1); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t\tpath.px = Vec.append(path.px, qx2); path.py = Vec.append(path.py, qy2); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t// create a \"delocalised\" charge or unpaired state, which hovers in between a sequence of atoms that are resonance related\n\tprivate delocalisedAnnotation(atoms:number[], charge:number, unpaired:number):void\n\t{\n\t\tconst mol = this.mol;\n\n\t\tlet str = '';\n\t\tif (charge == -1) str = '-';\n\t\telse if (charge == 1) str = '+';\n\t\telse if (charge < -1) str = Math.abs(charge) + '-';\n\t\telse if (charge > 1) str = charge + '+';\n\t\tif (unpaired > 0) for (let n = 0; n < unpaired; n++) str += '.';\n\t\tif (str.length == 0) return;\n\n\t\t// find the least congested point; overall average is first\n\t\tconst sz = atoms.length;\n\t\tlet bestX = 0, bestY = 0;\n\t\tfor (let a of atoms) {bestX += mol.atomX(a); bestY += mol.atomY(a);}\n\t\tbestX /= sz; bestY /= sz;\n\t\tlet bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n\n\t\tfor (let n = 1; n < sz - 1; n++)\n\t\t{\n\t\t\tlet x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n\t\t\tlet score = CoordUtil.congestionPoint(mol, x, y);\n\t\t\tif (score < bestScore) {bestScore = score; bestX = x; bestY = y;}\n\t\t}\n\n\t\tlet fsz = 0.8 * this.fontSizePix;\n\t\tlet wad = this.measure.measureText(str, fsz);\n\t\tlet rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n\n\t\t// create a point for it\n\t\tlet a:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: str,\n\t\t\tfsz,\n\t\t\tcol: this.policy.data.foreground,\n\t\t\toval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n\t\t};\n\t\tthis.points.push(a);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n\t\t\tpy: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// draw the brackets that are associated with a\n\tprivate processPolymerUnit(unit:PolymerBlockUnit, allUnits:PolymerBlockUnit[]):void\n\t{\n\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t{\n\t\t\tthis.processPolymerUnitPair(unit);\n\t\t\treturn;\n\t\t}\n\n\t\tinterface Bracket\n\t\t{\n\t\t\ta1?:number; // in-block atom\n\t\t\ta2?:number; // out-block atom\n\t\t\tx1?:number;\n\t\t\ty1?:number;\n\t\t\tx2?:number;\n\t\t\ty2?:number;\n\t\t\tshared?:boolean; // bond is shared with a block coming from the other direction\n\t\t\tnestOrder?:number; // if bond is nested within more than one block, nest/count stored information\n\t\t\tnestCount?:number; // ... on how to render them non-overlapping\n\t\t}\n\t\tlet brackets:Bracket[] = [];\n\n\t\tconst {mol, measure} = this;\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n\t\t\tlet in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n\t\t\tlet bracket:Bracket = null;\n\t\t\tif (in1 && !in2) bracket = {a1, a2};\n\t\t\telse if (in2 && !in1) bracket = {a1: a2, a2: a1};\n\t\t\telse continue;\n\n\t\t\tbracket.x1 = mol.atomX(bracket.a1);\n\t\t\tbracket.y1 = mol.atomY(bracket.a1);\n\t\t\tbracket.x2 = mol.atomX(bracket.a2);\n\t\t\tbracket.y2 = mol.atomY(bracket.a2);\n\n\t\t\tbracket.shared = false;\n\t\t\tfor (let other of allUnits) if (unit !== other && other.atoms.includes(bracket.a2))\n\t\t\t{\n\t\t\t\tbracket.shared = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n\t\t\tif (nestings.length > 1)\n\t\t\t{\n\t\t\t\tnestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n\t\t\t\tfor (let i = 0; i < nestings.length; i++) if (nestings[i] === unit) bracket.nestOrder = i;\n\t\t\t\tbracket.nestCount = nestings.length;\n\t\t\t}\n\n\t\t\tbrackets.push(bracket);\n\t\t}\n\n\t\tlet tagidx = 0;\n\t\tlet atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n\t\tlet minX = Vec.min(atomX), minY = Vec.min(atomY);\n\t\tlet maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n\t\tfor (let n = 1; n < brackets.length; n++)\n\t\t{\n\t\t\tlet b1 = brackets[tagidx], b2 = brackets[n];\n\t\t\tlet score1 = b1.x2 - minX - b1.y2 + minY;\n\t\t\tlet score2 = b2.x2 - minX - b2.y2 + minY;\n\t\t\tif (score2 > score1) tagidx = n;\n\t\t}\n\n\t\tlet isLinear = false, isOuter = false;\n\t\tif (brackets.length == 2)\n\t\t{\n\t\t\tlet left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n\t\t\tlet theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n\t\t\tlet theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n\t\t\tisLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n\t\t}\n\t\telse if (brackets.length == 0)\n\t\t{\n\t\t\tlet ym = 0.5 * (minY + maxY);\n\t\t\tbrackets.push({x1: minX, y1: ym, x2: minX - 1, y2: ym});\n\t\t\tbrackets.push({x1: maxX, y1: ym, x2: maxX + 1, y2: ym});\n\t\t\ttagidx = 1;\n\t\t\tisOuter = true;\n\t\t}\n\n\t\tlet bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n\n\t\tconst BASE_LINE = {bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground};\n\t\tconst BASE_TEXT = {anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground};\n\n\t\tfor (let n = 0; n < brackets.length; n++)\n\t\t{\n\t\t\tlet bracket = brackets[n];\n\t\t\tlet x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n\t\t\tlet x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n\t\t\tif (bracket.shared)\n\t\t\t{\n\t\t\t\tx2 -= (x2 - x1) * 0.1;\n\t\t\t\ty2 -= (y2 - y1) * 0.1;\n\t\t\t}\n\t\t\tif (bracket.nestCount > 1)\n\t\t\t{\n\t\t\t\tlet dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n\t\t\t\tx2 = x1 + dx * fract;\n\t\t\t\ty2 = y1 + dy * fract;\n\t\t\t}\n\t\t\tlet mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n\t\t\tif (isLinear)\n\t\t\t{\n\t\t\t\tx1 = x2 = mx;\n\t\t\t\ty1 = y2 = my;\n\t\t\t\tif (n == tagidx)\n\t\t\t\t\t{x1--; x2++;}\n\t\t\t\telse\n\t\t\t\t\t{x1++; x2--;}\n\t\t\t}\n\t\t\tlet invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n\t\t\tlet dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n\t\t\tlet ox = dy, oy = -dx;\n\n\t\t\tlet px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n\t\t\tlet px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n\t\t\tlet px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n\t\t\tlet px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n\n\t\t\tlet line1 = {...BASE_LINE, 'line': new Line(px1, py1, px2, py2)};\n\t\t\tlet line2 = {...BASE_LINE, 'line': new Line(px2, py2, px3, py3)};\n\t\t\tlet line3 = {...BASE_LINE, 'line': new Line(px3, py3, px4, py4)};\n\t\t\tthis.lines.push(line1);\n\t\t\tthis.lines.push(line2);\n\t\t\tthis.lines.push(line3);\n\t\t\tthis.space.push(this.computeSpaceLine(line1));\n\t\t\tthis.space.push(this.computeSpaceLine(line2));\n\t\t\tthis.space.push(this.computeSpaceLine(line3));\n\n\t\t\tif (n == tagidx)\n\t\t\t{\n\t\t\t\tlet xx:number, yy:number;\n\t\t\t\tif (bracket.shared)\n\t\t\t\t\t[xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n\t\t\t\telse\n\t\t\t\t\t[xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n\n\t\t\t\tlet pt1 = {...BASE_TEXT, 'text': 'n', 'oval': new Oval(xx, yy, 0, 0)};\n\t\t\t\tthis.points.push(pt1);\n\t\t\t\tthis.space.push(this.computeSpacePoint(pt1));\n\n\t\t\t\tif (unit.connect != null)\n\t\t\t\t{\n\t\t\t\t\tlet text = '?';\n\t\t\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) text = 'ht';\n\t\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) text = 'hh';\n\t\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) text = 'eu';\n\n\t\t\t\t\tif (bracket.shared)\n\t\t\t\t\t\t[xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n\t\t\t\t\telse\n\t\t\t\t\t\t[xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n\n\t\t\t\t\tlet pt2 = {...BASE_TEXT, 'text': text, 'oval': new Oval(xx, yy, 0, 0)};\n\t\t\t\t\tthis.points.push(pt2);\n\t\t\t\t\tthis.space.push(this.computeSpacePoint(pt2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// special case: 2x2, double-up the brackets\n\tprivate processPolymerUnitPair(unit:PolymerBlockUnit):void\n\t{\n\t\tconst {mol, measure} = this;\n\n\t\tlet xpos:number[] = [], ypos:number[] = [];\n\t\tfor (let b of unit.bondConn)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n\t\t\txpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n\t\t\typos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n\t\t}\n\n\t\tlet cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n\t\tlet bsz = 0.5 * this.scale;\n\t\tlet rx:number[] = [], ry:number[] = [];\n\n\t\tfor (let [i1, i2] of [[0, 1], [2, 3]])\n\t\t{\n\t\t\tlet dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n\t\t\t[dx, dy] = [dx * inv, dy * inv];\n\t\t\txpos[i1] -= 2 * dx;\n\t\t\typos[i1] -= 2 * dy;\n\t\t\txpos[i2] += 2 * dx;\n\t\t\typos[i2] += 2 * dy;\n\t\t\tlet ox = dy, oy = -dx;\n\t\t\tlet dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n\t\t\tlet dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n\t\t\tif (dsq2 < dsq1) [ox, oy] = [-ox, -oy];\n\t\t\trx.push(...[ox, ox]);\n\t\t\try.push(...[oy, oy]);\n\t\t}\n\n\t\tconst BASE_LINE = {bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground};\n\t\tconst BASE_TEXT = {anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground};\n\n\t\tlet drawLine = (x1:number, y1:number, x2:number, y2:number):void =>\n\t\t{\n\t\t\tlet line = {...BASE_LINE, 'line': new Line(x1, y1, x2, y2)};\n\t\t\tthis.lines.push(line);\n\t\t\tthis.space.push(this.computeSpaceLine(line));\n\t\t};\n\t\tlet drawText = (x:number, y:number, txt:string):void =>\n\t\t{\n\t\t\tlet pt = {...BASE_TEXT, 'text': txt, 'oval': new Oval(x, y, 0, 0)};\n\t\t\tthis.points.push(pt);\n\t\t\tthis.space.push(this.computeSpacePoint(pt));\n\t\t};\n\n\t\tdrawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n\t\tdrawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n\t\tdrawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n\n\t\tdrawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n\t\tdrawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n\t\tdrawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n\n\t\tlet xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n\t\tlet dist:number[] = [];\n\t\tfor (let n = 0; n < 4; n++) dist.push(xpos[n] - xmin + ypos[n] - ymin);\n\t\tlet idxN = Vec.idxMax(dist); // \"bottom right\" or equivalent\n\t\tdrawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n\n\t\tlet idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n\t\tdrawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n\t\tdrawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentComponent, ExperimentComponentType, ExperimentEntry} from '../aspect/Experiment';\nimport {ExperimentMeta, ExperimentMetaApplic} from '../rxn/ExperimentMeta';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {QuantityCalc} from '../rxn/QuantityCalc';\nimport {Box, Pos, Size} from '../util/Geom';\nimport {realEqual} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {ArrangeMolecule} from './ArrangeMolecule';\nimport {FontData} from './FontData';\nimport {RenderPolicy} from './Rendering';\n\n/*\n\tPerforms the layout of an experiment, which is a reaction that may be multistep, and contains a variety of\n\toptional annotations. The flow may be arranged from left-to-right or some combination of horizontal and vertical.\n\n\tThere are various tweaks for things that can be included or left out. The default settings reflect the default chemistry\n\trendering style, i.e. annotations and editing artifacts are not included.\n\n\tComponent characteristics such as quantities, and derived properties such as green metrics, are not a part of\n\tthe layout.\n*/\n\nexport enum ArrangeComponentType\n{\n\tArrow = 1, // side separator (horizontal or vertical)\n\tPlus = 2, // component separator\n\tReactant = 3, // primary reactant: molecule or name\n\tReagent = 4, // primary reagent: molecule or name\n\tProduct = 5, // primary product: molecule or name\n\tStepNote = 6, // additional information about the step (e.g. rxn conditions)\n}\n\nexport enum ArrangeComponentAnnot\n{\n\tNone = 0,\n\tPrimary = 1,\n\tWaste = 2,\n\tImplied = 3,\n}\n\nexport class ArrangeComponent\n{\n\tpublic type:ArrangeComponentType;\n\tpublic srcIdx:number; // index in underlying reactionsheet (i.e. reactants/reagents/products[srcIdx])\n\tpublic step:number;\t// which step it belongs to\n\tpublic side:number; // which side of the reaction (-1=left, 1=right, 0=middle)\n\tpublic mol:Molecule; // molecule content, if applicable\n\tpublic text:string[] = []; // text content, if applicable\n\tpublic leftNumer:string; // // to the left of the structure: may be {n}/{d} form\n\tpublic leftDenom:string;\n\tpublic fszText:number; // text font sizes, if applicable\n\tpublic fszLeft:number;\n\tpublic annot = ArrangeComponentAnnot.None; // annotation glyph on the right\n\tpublic monochromeColour:number = null; // cause the rendering to be done in a specific colour\n\tpublic metaInfo:Record<string, any> = null; // user-controlled\n\tpublic box = new Box(); // bounding box\n\tpublic padding:number; // how much padding around the outer boundary\n\n\tpublic clone():ArrangeComponent\n\t{\n\t\tlet dup = new ArrangeComponent();\n\t\tdup.type = this.type;\n\t\tdup.srcIdx = this.srcIdx;\n\t\tdup.step = this.step;\n\t\tdup.side = this.side;\n\t\tdup.mol = this.mol;\n\t\tdup.text = this.text;\n\t\tdup.leftNumer = this.leftNumer;\n\t\tdup.leftDenom = this.leftDenom;\n\t\tdup.fszText = this.fszText;\n\t\tdup.fszLeft = this.fszLeft;\n\t\tdup.annot = this.annot;\n\t\tdup.monochromeColour = this.monochromeColour;\n\t\tdup.metaInfo = this.metaInfo;\n\t\tdup.box = this.box.clone();\n\t\tdup.padding = this.padding;\n\t\treturn dup;\n\t}\n}\n\nconst PADDING = 0.25;\nconst PLUSSZ = 0.5;\nconst ARROW_W = 2;\nconst ARROW_H = 0.5;\nconst REAGENT_SCALE = 0.7;\nconst PLACEHOLDER_W = 2;\nconst PLACEHOLDER_H = 2;\n\nexport interface ArrangeExperimentFauxComponent\n{\n\tstep:number;\n\ttype:ArrangeComponentType;\n\tmol:Molecule;\n\tname?:string;\n\tannot?:ArrangeComponentAnnot;\n\tcolour?:number;\n\tmetaInfo?:any;\n}\n\nexport class ArrangeExperiment\n{\n\tpublic scale:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitTotalW = 1000;\n\tpublic limitTotalH = 1000;\n\tpublic limitStructW = 0;\n\tpublic limitStructH = 0;\n\tpublic includeReagents = true; // drawing of reagents alongside the arrow\n\tpublic includeNames = false; // including names of components alongside structures\n\tpublic includeStoich = true; // whether to include non-unity stoichiometry labels\n\tpublic includeAnnot = false; // whether to add annotations like primary/waste\n\tpublic includeBlank = false; // any section with no components gets a blank placeholder\n\tpublic includeDetails = false; // include information like yield, amount, metadata in the layout\n\tpublic includeAtomMap = false; // display atom mapping numbers\n\tpublic colourAtomMap = 0x9D1A76; // if above, use this colour\n\tpublic allowVertical = true; // permit vertical or bent arrangements\n\tpublic padding = 0;\n\tpublic fauxComponents:ArrangeExperimentFauxComponent[] = []; // extra components to add in by request\n\n\tpublic static COMP_GAP_LEFT = 0.5;\n\tpublic static COMP_ANNOT_SIZE = 1;\n\n\tprivate extraText:Record<string, string[]> = {}; // key {step:type:idx}\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public entry:ExperimentEntry, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.padding = PADDING * this.scale;\n\t}\n\n\t// optional text decoration to add to a particular component\n\tpublic includeExtraText(step:number, type:ExperimentComponentType, idx:number, txt:string):void\n\t{\n\t\tif (!txt) return;\n\t\tlet key = `${step}:${type}:${idx}`;\n\t\tthis.extraText[key] = Vec.append(this.extraText[key], txt);\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\n\t\tlet fszText = this.scale * this.policy.data.fontSize, fszLeft = this.scale * this.policy.data.fontSize * 1.5;\n\n\t\t// do an initial sizing of most of the components\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\tif (xc.type == ArrangeComponentType.Plus) xc.box = new Box(0, 0, this.scale * PLUSSZ, this.scale * PLUSSZ);\n\t\t\telse if (xc.type == ArrangeComponentType.Arrow) {} // directional\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet w = 0, h = 0;\n\t\t\t\tif (MolUtil.notBlank(xc.mol))\n\t\t\t\t{\n\t\t\t\t\tlet sz = Size.fromArray(ArrangeMolecule.guestimateSize(xc.mol, this.policy));\n\t\t\t\t\tif (xc.type == ArrangeComponentType.Reagent) sz.scaleBy(REAGENT_SCALE);\n\t\t\t\t\tif (xc.leftNumer)\n\t\t\t\t\t{\n\t\t\t\t\t\txc.fszLeft = fszLeft;\n\t\t\t\t\t\tlet wad = this.measure.measureText(xc.leftNumer, fszLeft);\n\t\t\t\t\t\tlet lw = wad[0], lh = wad[1] + wad[2];\n\t\t\t\t\t\tif (xc.leftDenom) lw = Math.max(lw, this.measure.measureText(xc.leftDenom, fszLeft)[0]);\n\t\t\t\t\t\tsz.w += lw + ArrangeExperiment.COMP_GAP_LEFT * lh; // lineHeight=some extra spacing\n\t\t\t\t\t\tsz.h = Math.max(sz.h, lh * (xc.leftDenom ? 2 : 1));\n\t\t\t\t\t}\n\t\t\t\t\tsz.fitInto(this.limitStructW, this.limitStructH);\n\t\t\t\t\tw = sz.w;\n\t\t\t\t\th = sz.h;\n\t\t\t\t}\n\t\t\t\tif (Vec.notBlank(xc.text))\n\t\t\t\t{\n\t\t\t\t\tif (MolUtil.notBlank(xc.mol)) h += 0.5 * fszText;\n\t\t\t\t\tfor (let line of xc.text)\n\t\t\t\t\t{\n\t\t\t\t\t\txc.fszText = fszText;\n\t\t\t\t\t\tlet wad = this.measure.measureText(line, fszText);\n\t\t\t\t\t\tw = Math.max(w, wad[0]);\n\t\t\t\t\t\th += wad[1] + wad[2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (xc.annot != 0) w += ArrangeExperiment.COMP_ANNOT_SIZE * this.scale;\n\t\t\t\tif ((MolUtil.isBlank(xc.mol) && !xc.text && this.includeBlank) || w == 0 || h == 0)\n\t\t\t\t{\n\t\t\t\t\tw = Math.max(w, PLACEHOLDER_W * this.scale);\n\t\t\t\t\th = Math.max(h, PLACEHOLDER_H * this.scale);\n\t\t\t\t}\n\t\t\t\txc.box = new Box(0, 0, w, h);\n\t\t\t}\n\n\t\t\t// give it breathing room\n\t\t\txc.padding = this.padding;\n\t\t\txc.box = new Box(0, 0, xc.box.w + 2 * this.padding, xc.box.h + 2 * this.padding);\n\t\t}\n\n\t\t// build several permutations; take the best one\n\t\t// note: bend=1 for completely vertical, bend=2 for switch after first step, bend=#steps+1 for linear\n\t\tif (this.allowVertical)\n\t\t{\n\t\t\tlet best:ArrangeComponent[] = null;\n\t\t\tlet bestScore = 0;\n\t\t\tfor (let bend = this.entry.steps.length + 1; bend >= 1; bend--) for (let vert = 0; vert <= 1; vert++)\n\t\t\t{\n\t\t\t\tlet trial:ArrangeComponent[] = [];\n\t\t\t\tfor (let xc of this.components) trial.push(xc.clone());\n\t\t\t\tthis.arrangeComponents(trial, bend, vert > 0);\n\n\t\t\t\tlet score = this.scoreArrangement(trial);\n\t\t\t\tif (best == null || score > bestScore)\n\t\t\t\t{\n\t\t\t\t\tbest = trial;\n\t\t\t\t\tbestScore = score;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.components = best;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.arrangeComponents(this.components, this.entry.steps.length + 1, false);\n\t\t}\n\n\t\t// ascertain the limits\n\t\tthis.width = this.height = 0;\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\tthis.width = Math.max(this.width, xc.box.maxX());\n\t\t\tthis.height = Math.max(this.height, xc.box.maxY());\n\t\t}\n\t}\n\n\t// access to content\n\tpublic get numComponents():number {return this.components.length;}\n\tpublic getComponent(idx:number):ArrangeComponent {return this.components[idx];}\n\tpublic getComponents():ArrangeComponent[] {return this.components;}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\txc.box.scaleBy(modScale);\n\t\t\txc.fszText *= modScale;\n\t\t\txc.fszLeft *= modScale;\n\t\t\txc.padding *= modScale;\n\t\t}\n\t}\n\n\t// convenience: convert arrangment type to its experiment counterpart, if applicable\n\tpublic static toExpType(compType:ArrangeComponentType):ExperimentComponentType\n\t{\n\t\tif (compType == ArrangeComponentType.Reactant) return ExperimentComponentType.Reactant;\n\t\tif (compType == ArrangeComponentType.Reagent) return ExperimentComponentType.Reagent;\n\t\tif (compType == ArrangeComponentType.Product) return ExperimentComponentType.Product;\n\t\treturn null;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// step 0: the only place where reactants come from\n\t\tfor (let n = 0; n < this.entry.steps[0].reactants.length; n++)\n\t\t{\n\t\t\tif (n > 0) this.createSegregator(ArrangeComponentType.Plus, 0, -1);\n\t\t\tthis.createReactant(n, 0);\n\t\t}\n\t\tif (this.components.length == 0 && this.includeBlank) this.createBlank(ArrangeComponentType.Reactant, 0);\n\n\t\t// reagents & products for each step\n\t\tfor (let s = 0; s < this.entry.steps.length; s++)\n\t\t{\n\t\t\tthis.createSegregator(ArrangeComponentType.Arrow, s, 0);\n\t\t\tif (this.includeReagents)\n\t\t\t{\n\t\t\t\tlet any = false;\n\t\t\t\tfor (let n = 0; n < this.entry.steps[s].reagents.length; n++)\n\t\t\t\t{\n\t\t\t\t\tthis.createReagent(n, s);\n\t\t\t\t\tany = true;\n\t\t\t\t}\n\t\t\t\tif (!any && this.includeBlank) this.createBlank(ArrangeComponentType.Reagent, s);\n\t\t\t}\n\t\t\tif (this.includeDetails) this.createStepMeta(s);\n\n\t\t\tlet any = false;\n\t\t\tfor (let n = 0; n < this.entry.steps[s].products.length; n++)\n\t\t\t{\n\t\t\t\tif (n > 0) this.createSegregator(ArrangeComponentType.Plus, s, 1);\n\t\t\t\tthis.createProduct(n, s);\n\t\t\t\tany = true;\n\t\t\t}\n\t\t\tif (!any && this.includeBlank) this.createBlank(ArrangeComponentType.Product, s);\n\t\t}\n\n\t\t// faux-components\n\t\tfor (let fc of this.fauxComponents)\n\t\t{\n\t\t\tif (fc.type == ArrangeComponentType.Reactant) this.createSegregator(ArrangeComponentType.Plus, fc.step, -1);\n\t\t\telse if (fc.type == ArrangeComponentType.Product) this.createSegregator(ArrangeComponentType.Plus, fc.step, 1);\n\t\t\tthis.createFauxComponent(fc);\n\t\t}\n\t}\n\n\tprivate createReactant(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].reactants[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Reactant;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = -1;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (MolUtil.notBlank(comp.mol) && this.includeStoich && !QuantityCalc.isStoichZero(comp.stoich) && !QuantityCalc.isStoichUnity(comp.stoich))\n\t\t{\n\t\t\tlet slash = comp.stoich.indexOf('/');\n\t\t\tif (slash >= 0)\n\t\t\t{\n\t\t\t\txc.leftNumer = comp.stoich.substring(0, slash);\n\t\t\t\txc.leftDenom = comp.stoich.substring(slash + 1);\n\t\t\t}\n\t\t\telse xc.leftNumer = comp.stoich;\n\t\t}\n\t\tif (this.includeAnnot && MolUtil.notBlank(comp.mol) && comp.primary) xc.annot = ArrangeComponentAnnot.Primary;\n\n\t\tlet key = `${step}:${ExperimentComponentType.Reactant}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createReagent(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].reagents[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Reagent;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = 0;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (this.includeAnnot)\n\t\t{\n\t\t\tlet stoich = QuantityCalc.impliedReagentStoich(comp, this.entry.steps[step].products);\n\t\t\tif (stoich > 0) xc.annot = ArrangeComponentAnnot.Implied;\n\t\t\tif (stoich > 0 && stoich != 1)\n\t\t\t{\n\t\t\t\tif (realEqual(stoich, Math.round(stoich)))\n\t\t\t\t\txc.leftNumer = Math.round(stoich).toString();\n\t\t\t\telse\n\t\t\t\t\txc.leftNumer = stoich.toString(); // TODO: use ratio instead, this can be ugly\n\t\t\t}\n\t\t}\n\n\t\tlet key = `${step}:${ExperimentComponentType.Reagent}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createProduct(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].products[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Product;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = 1;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (this.includeStoich && !QuantityCalc.isStoichZero(comp.stoich) && !QuantityCalc.isStoichUnity(comp.stoich))\n\t\t{\n\t\t\tlet slash = comp.stoich.indexOf('/');\n\t\t\tif (slash >= 0)\n\t\t\t{\n\t\t\t\txc.leftNumer = comp.stoich.substring(0, slash);\n\t\t\t\txc.leftDenom = comp.stoich.substring(slash + 1);\n\t\t\t}\n\t\t\telse xc.leftNumer = comp.stoich;\n\t\t}\n\t\tif (this.includeAnnot && MolUtil.notBlank(comp.mol) && comp.waste) xc.annot = ArrangeComponentAnnot.Waste;\n\n\t\tlet key = `${step}:${ExperimentComponentType.Product}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createSegregator(type:ArrangeComponentType, step:number, side:number):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = type;\n\t\txc.step = step;\n\t\txc.side = side;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createStepMeta(step:number):void\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let [type, value] of ExperimentMeta.unpackMeta(this.entry.steps[step].meta))\n\t\t{\n\t\t\tif (!Vec.safeArray(ExperimentMeta.APPLICABILITY[type]).includes(ExperimentMetaApplic.Step)) continue;\n\t\t\tlet descr = ExperimentMeta.describeMeta(type, value);\n\t\t\tif (descr != null) lines.push(descr);\n\t\t}\n\t\tif (lines.length == 0) return;\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.StepNote;\n\t\txc.step = step;\n\t\txc.side = 0;\n\t\txc.text = lines;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createBlank(type:number, step:number):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = type;\n\t\txc.step = step;\n\t\txc.side = type == ArrangeComponentType.Reactant ? -1 : type == ArrangeComponentType.Product ? 1 : 0;\n\t\txc.srcIdx = -1;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createFauxComponent(fc:ArrangeExperimentFauxComponent):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = fc.type;\n\t\txc.srcIdx = -1;\n\t\txc.step = fc.step;\n\t\txc.side = fc.type == ArrangeComponentType.Reactant ? -1 : fc.type == ArrangeComponentType.Product ? 1 : 0;\n\t\txc.mol = fc.mol;\n\t\tif (fc.name) xc.text = [fc.name];\n\t\tif (fc.annot) xc.annot = fc.annot;\n\t\txc.monochromeColour = fc.colour;\n\t\txc.metaInfo = fc.metaInfo;\n\t\tthis.components.push(xc);\n\t}\n\n\tprivate arrangeComponents(comps:ArrangeComponent[], bendStep:number, vertComp:boolean):void\n\t{\n\t\tlet blkMain:ArrangeComponent[][] = [];\n\t\tlet blkArrow:ArrangeComponent[][] = [];\n\t\tlet szMain:Size[] = [], szArrow:Size[] = [];\n\t\tlet midMain:Pos[] = [], midArrow:Pos[] = [];\n\n\t\tblkMain.push(this.gatherBlock(comps, 0, -1));\n\t\tszMain.push(this.arrangeMainBlock(blkMain[0], vertComp));\n\t\tmidMain.push(this.findMidBlock(blkMain[0], szMain[0]));\n\n\t\tfor (let n = 0; n < this.entry.steps.length; n++)\n\t\t{\n\t\t\tlet bent = n + 1 >= bendStep;\n\n\t\t\tblkMain.push(this.gatherBlock(comps, n, 1));\n\t\t\tszMain.push(this.arrangeMainBlock(blkMain[n + 1], vertComp && !bent));\n\t\t\tmidMain.push(this.findMidBlock(blkMain[n + 1], szMain[n + 1]));\n\n\t\t\tblkArrow.push(this.gatherBlock(comps, n, 0));\n\t\t\tif (!bent)\n\t\t\t\tszArrow.push(this.arrangeHorizontalArrowBlock(blkArrow[n]));\n\t\t\telse\n\t\t\t\tszArrow.push(this.arrangeVerticalArrowBlock(blkArrow[n]));\n\t\t\tmidArrow.push(this.findMidBlock(blkArrow[n], szArrow[n]));\n\t\t}\n\n\t\t// part 1: arrange the first step(s) left-to-right\n\n\t\tlet midH = 0;\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tmidH = Math.max(midH, midMain[n].y);\n\t\t\tif (n > 0) midH = Math.max(midH, midArrow[n - 1].y);\n\t\t}\n\t\tlet sz = Size.zero();\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tsz.w += szMain[n].w;\n\t\t\tsz.h = Math.max(sz.h, midH + (szMain[n].h - midMain[n].y));\n\t\t\tif (n > 0)\n\t\t\t{\n\t\t\t\tsz.w += szArrow[n - 1].w;\n\t\t\t\tsz.h = Math.max(sz.h, midH + (szArrow[n - 1].h - midArrow[n - 1].y));\n\t\t\t}\n\t\t}\n\n\t\tlet x = 0, arrowX = 0;\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tif (n > 0)\n\t\t\t{\n\t\t\t\tthis.originateBlock(blkArrow[n - 1], x, midH - midArrow[n - 1].y);\n\t\t\t\tx += szArrow[n - 1].w;\n\t\t\t}\n\n\t\t\tthis.originateBlock(blkMain[n], x, midH - midMain[n].y);\n\t\t\tarrowX = x + midMain[n].x;\n\t\t\tx += szMain[n].w;\n\t\t}\n\n\t\t// part 2: arrange the remaining steps top-down\n\n\t\tlet y = sz.h, lowX = 0;\n\t\tfor (let n = bendStep; n <= this.entry.steps.length; n++)\n\t\t{\n\t\t\tx = arrowX - midArrow[n - 1].x;\n\t\t\tlowX = Math.min(lowX, x);\n\t\t\tthis.originateBlock(blkArrow[n - 1], x, y);\n\t\t\ty += szArrow[n - 1].h;\n\t\t\tsz.w = Math.max(sz.w, x + szArrow[n - 1].w);\n\n\t\t\tx = arrowX - midMain[n].x;\n\t\t\tlowX = Math.min(lowX, x);\n\t\t\tthis.originateBlock(blkMain[n], x, y);\n\t\t\ty += szMain[n].h;\n\t\t\tsz.w = Math.max(sz.w, x + szMain[n].w);\n\t\t}\n\n\t\t// need to post-correct sometimes with wide products\n\t\tif (lowX < 0)\n\t\t{\n\t\t\tfor (let xc of comps) xc.box.x -= lowX;\n\t\t}\n\t}\n\n\t// enumerate blocks of specific type\n\tprivate gatherBlock(comps:ArrangeComponent[], step:number, side:number):ArrangeComponent[]\n\t{\n\t\tlet block:ArrangeComponent[] = [];\n\t\tfor (let xc of comps) if (xc.side == side && xc.step == step) block.push(xc);\n\t\treturn block;\n\t}\n\n\t// fit out all individual components, horizontally or vertically\n\tprivate arrangeMainBlock(block:ArrangeComponent[], vertComp:boolean):Size\n\t{\n\t\tlet sz = Size.zero();\n\t\tif (!vertComp)\n\t\t{\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\tsz.w += xc.box.w;\n\t\t\t\tsz.h = Math.max(sz.h, xc.box.h);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\tsz.w = Math.max(sz.w, xc.box.w);\n\t\t\t\tsz.h += xc.box.h;\n\t\t\t}\n\t\t}\n\n\t\tsz.w = Math.max(sz.w, this.scale * 2.0);\n\t\tsz.h = Math.max(sz.h, this.scale * 2.0);\n\n\t\tif (!vertComp)\n\t\t{\n\t\t\tlet x = 0;\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\txc.box.x = x;\n\t\t\t\txc.box.y = 0.5 * (sz.h - xc.box.h);\n\t\t\t\tx += xc.box.w;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet y = 0;\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\txc.box.x = 0.5 * (sz.w - xc.box.w);\n\t\t\t\txc.box.y = y;\n\t\t\t\ty += xc.box.h;\n\t\t\t}\n\t\t}\n\n\t\treturn sz;\n\t}\n\n\t// arrange an arrow, and the associated reagents\n\tprivate arrangeHorizontalArrowBlock(block:ArrangeComponent[]):Size\n\t{\n\t\tlet arrow:ArrangeComponent = null;\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tarrow = xc;\n\t\t\txc.box.w = ARROW_W * this.scale + 2 * xc.padding;\n\t\t\txc.box.h = ARROW_H * this.scale + 2 * xc.padding;\n\t\t}\n\n\t\tlet mid = block.length >> 1; // (could vote by height?)\n\n\t\tfor (let xc of block) arrow.box.w = Math.max(xc.box.w, arrow.box.w);\n\n\t\tlet sz = Size.zero();\n\n\t\tlet n = 0;\n\t\tlet y = 0;\n\t\tlet arrowPlaced = false;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\txc.box.x = 0.5 * (arrow.box.w - xc.box.w);\n\t\t\txc.box.y = y;\n\t\t\ty += xc.box.h;\n\n\t\t\tn++;\n\t\t\tif (n == mid)\n\t\t\t{\n\t\t\t\tarrow.box.x = 0;\n\t\t\t\tarrow.box.y = y;\n\t\t\t\ty += arrow.box.h;\n\t\t\t\tarrowPlaced = true;\n\t\t\t}\n\t\t}\n\t\tif (!arrowPlaced)\n\t\t{\n\t\t\tarrow.box.x = 0;\n\t\t\tarrow.box.y = y;\n\t\t\ty += arrow.box.h;\n\t\t}\n\t\tsz.w = arrow.box.w;\n\t\tsz.h = y;\n\n\t\treturn sz;\n\t}\n\n\tprivate arrangeVerticalArrowBlock(block:ArrangeComponent[]):Size\n\t{\n\t\tlet arrow:ArrangeComponent = null;\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tarrow = xc;\n\t\t\txc.box.w = ARROW_H * this.scale + 2 * xc.padding;\n\t\t\txc.box.h = ARROW_W * this.scale + 2 * xc.padding;\n\t\t}\n\n\t\tlet mid = block.length >> 1; // (could vote by height?)\n\n\t\tlet sz1 = Size.zero(), sz2 = Size.zero();\n\t\tlet n = 0;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tif (n < mid)\n\t\t\t{\n\t\t\t\tsz1.w = Math.max(sz1.w, xc.box.w);\n\t\t\t\tsz1.h += xc.box.h;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsz2.w = Math.max(sz2.w, xc.box.w);\n\t\t\t\tsz2.h += xc.box.h;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\n\t\tlet sz = new Size(sz1.w + sz2.w + arrow.box.w, Math.max(arrow.box.h, Math.max(sz1.h, sz2.h)));\n\t\tarrow.box = new Box(sz1.w, 0, arrow.box.w, sz.h);\n\n\t\tlet y1 = 0.5 * (sz.h - sz1.h), y2 = 0.5 * (sz.h - sz2.h);\n\t\tn = 0;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tif (n < mid)\n\t\t\t{\n\t\t\t\txc.box.x = sz1.w - xc.box.w;\n\t\t\t\txc.box.y = y1;\n\t\t\t\ty1 += xc.box.h;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txc.box.x = sz.w - sz2.w;\n\t\t\t\txc.box.y = y2;\n\t\t\t\ty2 += xc.box.h;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\n\t\treturn sz;\n\t}\n\n\t// find the \"reference middle\" of a block, which is based on pluses and arrows\n\tprivate findMidBlock(block:ArrangeComponent[], sz:Size):Pos\n\t{\n\t\tlet count = 0;\n\t\tlet mid = Pos.zero();\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Plus || xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tmid.x += xc.box.midX();\n\t\t\tmid.y += xc.box.midY();\n\t\t\tcount++;\n\t\t}\n\t\tif (count == 0)\n\t\t{\n\t\t\tmid.x = 0.5 * sz.w;\n\t\t\tmid.y = 0.5 * sz.h;\n\t\t}\n\t\telse if (count > 1)\n\t\t{\n\t\t\tlet inv = 1.0 / count;\n\t\t\tmid.x *= inv;\n\t\t\tmid.y *= inv;\n\t\t}\n\t\treturn mid;\n\t}\n\n\t// determine how good a particular arrangement is\n\tprivate scoreArrangement(comps:ArrangeComponent[]):number\n\t{\n\t\tlet w = 0, h = 0;\n\t\tfor (let xc of comps)\n\t\t{\n\t\t\tw = Math.max(w, xc.box.maxX());\n\t\t\th = Math.max(h, xc.box.maxY());\n\t\t}\n\n\t\tlet score = 0;\n\n\t\t// want the width to be as close as possible to the limiting width\n\t\tscore -= Math.max(0, Math.abs(w - this.limitTotalW));\n\n\t\t// .. and height?\n\t\t//score -= Math.max(0, Math.abs(h - this.limitTotalH));\n\n\t\t// (anything else that matters?)\n\n\t\treturn score;\n\t}\n\n\t// moves all components in a block\n\tprivate originateBlock(block:ArrangeComponent[], x:number, y:number):void\n\t{\n\t\tfor (let xc of block)\n\t\t{\n\t\t\txc.box.x += x;\n\t\t\txc.box.y += y;\n\t\t}\n\t}\n\n\t// add in other text information about the comment, if desired\n\tprivate supplementText(xc:ArrangeComponent, comp:ExperimentComponent):void\n\t{\n\t\tif (comp.mass > 0) xc.text.push(QuantityCalc.formatMass(comp.mass));\n\t\tif (comp.volume > 0) xc.text.push(QuantityCalc.formatVolume(comp.volume));\n\t\tif (comp.moles > 0) xc.text.push(QuantityCalc.formatMoles(comp.moles));\n\t\t//if (comp.density > 0) xc.text.push(QuantityCalc.formatDensity(comp.density));\n\t\tif (comp.conc > 0) xc.text.push(QuantityCalc.formatConc(comp.conc));\n\t\tif (comp.yield != null && comp.yield >= 0) xc.text.push(QuantityCalc.formatPercent(comp.yield));\n\t\tif (comp.equiv > 0) xc.text.push(QuantityCalc.formatEquiv(comp.equiv));\n\n\t\tfor (let [type, value] of ExperimentMeta.unpackMeta(comp.meta))\n\t\t{\n\t\t\tlet descr = ExperimentMeta.describeMeta(type, value);\n\t\t\tif (descr) xc.text.push(descr);\n\t\t}\n\t}\n\n\tprivate wordWrapName(name:string, mol:Molecule):string[]\n\t{\n\t\tlet minLimW = 0;\n\t\tif (MolUtil.notBlank(mol)) minLimW = (mol.boundary().w + 2) * this.scale;\n\t\tlet limW = Math.max(minLimW, 10 * this.scale);\n\t\tlet fsz = this.scale * this.policy.data.fontSize;\n\n\t\tlet w = this.measure.measureText(name, fsz)[0];\n\t\tif (w < limW) return [name];\n\n\t\tlet wrap = ():[string[], number] =>\n\t\t{\n\t\t\tlet lines:string[] = [], residual = name, nclean = 0;\n\t\t\twhile (residual.length > 0)\n\t\t\t{\n\t\t\t\tlet wsz = FontData.measureWidths(residual, fsz);\n\t\t\t\tlet pos = 0;\n\t\t\t\twhile (pos < wsz.length && wsz[pos] < limW) pos++;\n\t\t\t\tfor (let n = pos; n > 5; n--)\n\t\t\t\t{\n\t\t\t\t\tif (residual[n] == ' ') {pos = n; nclean++; break;}\n\t\t\t\t\tif (wsz[n] < limW * 0.8) break;\n\t\t\t\t}\n\t\t\t\tlines.push(residual.substring(0, pos));\n\t\t\t\tresidual = residual.substring(pos).trimLeft();\n\t\t\t}\n\t\t\treturn [lines, nclean];\n\t\t};\n\n\t\tlet [lines, nclean] = wrap();\n\t\tfor (; limW > 50; limW -= fsz)\n\t\t{\n\t\t\tlet [tryLines, tryClean] = wrap();\n\t\t\tif (tryLines.length > lines.length) break;\n\t\t\tif (tryClean >= nclean) [lines, nclean] = [tryLines, tryClean];\n\t\t}\n\t\treturn lines;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box} from '../util/Geom';\nimport {colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {FontData, FontDataNativeOpt} from './FontData';\n\n/*\n\tMetaVector: allows the construction of a set of drawing primitives of the most basic variety. These are collected together so that they can be analyzed,\n\te.g. finding the precise boundary, and optionally transformed or spooled into other such instances.\n\n\tRendering can be done by creating an SVG instance reflecting the content, or writing onto an HTML canvas using drawing primitives.\n\n\tSeparation of type & object is done in order to optimise SVG creation: when a lot of objects with the same characteristics (e.g. fill/outline) are consecutive,\n\tthis allows them to be grouped together without repeating unnecessary information.\n\n\tLine, Rect & Oval objects are fairly self-explanatory.\n\n\tText objects are handled unusually: they correspond to internally-defined paths, so they can be measured *precisely* without knowing the rendering context\n\tahead of time. This means that the font options are limited, but for most chemistry rendering tasks, this is not a dealbreaker.\n\n\tTextNative is to be used in cases where the font should match other renderings on the device, e.g. HTML text & MetaVector text should be drawn in the same\n\tway. The font is specified using the CSS style, which is the same for SVG & canvas. Measurement of the native text is done by making a fake invisible background\n\tcanvas which is specific to the current HTML environment. Rendering on another device does not guarantee the same metrics, so caution must be exercised.\n*/\n\nexport enum TextAlign\n{\n\tCentre = 0,\n\tLeft = 1,\n\tRight = 2,\n\tBaseline = 0,\n\tMiddle = 4,\n\tTop = 8,\n\tBottom = 16\n}\n\nenum PrimClass\n{\n\tLine = 1,\n\tRect = 2,\n\tOval = 3,\n\tPath = 4,\n\tText = 5,\n\tTextNative = 6,\n}\n\ninterface PrimBase\n{\n\tprimClass:PrimClass;\n\ttypeidx:number;\n}\ninterface TypeBase\n{\n\tprimClass:PrimClass;\n}\n\ninterface LinePrim extends PrimBase\n{\n\tx1:number;\n\ty1:number;\n\tx2:number;\n\ty2:number;\n}\ninterface LineType extends TypeBase\n{\n\tthickness:number;\n\tcolour:number;\n}\n\ninterface RectPrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\tw:number;\n\th:number;\n}\ninterface RectType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n}\n\ninterface OvalPrim extends PrimBase\n{\n\tcx:number;\n\tcy:number;\n\trw:number;\n\trh:number;\n}\ninterface OvalType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n}\n\ninterface PathPrim extends PrimBase\n{\n\tcount:number;\n\tx:number[];\n\ty:number[];\n\tctrl:boolean[];\n\tclosed:boolean;\n}\ninterface PathType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n\thardEdge:boolean;\n}\n\ninterface TextPrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\ttxt:string;\n\tdirection:number;\n}\ninterface TextType extends TypeBase\n{\n\tsize:number;\n\tcolour:number;\n}\n\ninterface TextNativePrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\ttxt:string;\n}\ninterface TextNativeType extends TypeBase\n{\n\tfamily:string;\n\tsize:number;\n\tcolour:number;\n\topt:FontDataNativeOpt;\n}\n\nfunction pixelCoord(val:number):string\n{\n\tlet str = val.toFixed(4);\n\tlet match = /^(.*\\.\\d*?[1-9]+)0+$/.exec(str) ?? /^(.*)\\.0+$/.exec(str);\n\tif (match) str = match[1];\n\treturn str;\n}\n\nclass SpoolSVG\n{\n\tprivate lines:string[] = [];\n\tprivate depth = 0;\n\n\tconstructor(private prettyPrint:boolean) {}\n\tpublic spool(str:string) {if (str?.length > 0) this.lines.push(str);}\n\tpublic start(str:string):void\n\t{\n\t\tif (this.prettyPrint && this.depth > 0) this.lines.push('  '.repeat(this.depth));\n\t\tthis.spool(str);\n\t}\n\tpublic stop(str:string):void\n\t{\n\t\tthis.spool(str);\n\t\tif (this.prettyPrint) this.lines.push('\\n');\n\t}\n\tpublic whole(str:string):void\n\t{\n\t\tif (this.prettyPrint && this.depth > 0) this.lines.push('  '.repeat(this.depth));\n\t\tthis.spool(str);\n\t\tif (this.prettyPrint) this.lines.push('\\n');\n\n\t}\n\tpublic attr(key:string, val:string | number):void\n\t{\n\t\tif (typeof val == 'number')\n\t\t{\n\t\t\tval = pixelCoord(val);\n\t\t}\n\t\tthis.spool(` ${key}=\"${val}\"`);\n\t}\n\tpublic inc():void {this.depth++;}\n\tpublic dec():void {this.depth--;}\n\tpublic toString():string {return this.lines.join('');}\n}\n\nexport class MetaVector\n{\n\t//private ONE_THIRD = 1.0 / 3;\n\n\tpublic static NOCOLOUR = -1;\n\n\tprivate types:TypeBase[] = [];\n\tprivate prims:PrimBase[] = [];\n\tprivate typeObj:TypeBase[];\n\tpublic width:number = 0;\n\tpublic height:number = 0;\n\tpublic offsetX = 0;\n\tpublic offsetY = 0;\n\tpublic scale = 1;\n\tpublic density = 1;\n\n\tprivate charMask:boolean[];\n\tprivate charMissing = false;\n\tprivate lowX:number = null;\n\tprivate lowY:number = null;\n\tprivate highX:number = null;\n\tprivate highY:number = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(vec?:any)\n\t{\n\t\tconst font = FontData.main;\n\n\t\tthis.charMask = Vec.booleanArray(false, font.UNICODE.length);\n\n\t\tif (vec != null)\n\t\t{\n\t\t\tif (vec.size != null)\n\t\t\t{\n\t\t\t\tthis.width = vec.size[0];\n\t\t\t\tthis.height = vec.size[1];\n\t\t\t}\n\t\t\tif (vec.types != null) this.types = vec.types;\n\t\t\tif (vec.prims != null) this.prims = vec.prims;\n\n\t\t\t// extract char-mask\n\t\t\tfor (let p of this.prims) if (p.primClass == PrimClass.Text)\n\t\t\t{\n\t\t\t\tlet {txt} = (p as TextPrim);\n\t\t\t\tfor (let n = 0; n < txt.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet i = font.getIndex(txt.charAt(n));\n\t\t\t\t\tif (i >= 0) this.charMask[i] = true; else this.charMissing = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// methods for adding a primitive (and possibly a type to go with it)\n\tpublic drawLine(x1:number, y1:number, x2:number, y2:number, colour:number, thickness:number):void\n\t{\n\t\tif (thickness == null) thickness = 1;\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Line, thickness, colour} as LineType);\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n\t\tthis.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n\n\t\tthis.prims.push({primClass: PrimClass.Line, typeidx, x1, y1, x2, y2} as LinePrim);\n\t}\n\tpublic drawRect(x:number, y:number, w:number, h:number, edgeCol:number, thickness:number, fillCol:number):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Rect, edgeCol, fillCol, thickness} as RectType);\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(x - bump, y - bump);\n\t\tthis.updateBounds(x + w + bump, y + h + bump);\n\n\t\tthis.prims.push({primClass: PrimClass.Rect, typeidx, x, y, w, h} as RectPrim);\n\t}\n\tpublic drawOval(cx:number, cy:number, rw:number, rh:number, edgeCol:number, thickness:number, fillCol:number):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(cx - rw - bump, cy - rh - bump);\n\t\tthis.updateBounds(cx + rw + bump, cy + rh + bump);\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Oval, edgeCol, fillCol, thickness} as OvalType);\n\t\tthis.prims.push({primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh} as OvalPrim);\n\t}\n\tpublic drawPath(xpoints:number[], ypoints:number[], ctrlFlags:boolean[], isClosed:boolean,\n\t\t\t\t\tedgeCol:number, thickness:number, fillCol:number, hardEdge:boolean):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\t\tif (hardEdge == null) hardEdge = false;\n\n\t\tconst bump = 0.5 * thickness;\n\t\tfor (let n = 0; n < xpoints.length; n++)\n\t\t{\n\t\t\t// NOTE: treats control points as literals; this could cause glitches, but hasn't yet\n\t\t\tthis.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n\t\t\tif (bump != 0) this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n\t\t}\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge} as PathType);\n\t\tthis.prims.push({primClass: PrimClass.Path, typeidx, count: xpoints.length,\n\t\t\t\t\t\t x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed} as PathPrim);\n\t}\n\tpublic drawPoly(xpoints:number[], ypoints:number[], edgeCol:number, thickness:number, fillCol:number, hardEdge:boolean):void\n\t{\n\t\tthis.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n\t}\n\tpublic drawText(x:number, y:number, txt:string, size:number, colour:number, align?:number, direction?:number):void\n\t{\n\t\tif (align == null) align = TextAlign.Left | TextAlign.Baseline;\n\t\tif (direction == null) direction = 0;\n\n\t\tlet cosTheta = 1, sinTheta = 0;\n\t\tif (direction != 0) [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n\n\t\tconst font = FontData.main;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet i = font.getIndex(txt.charAt(n));\n\t\t\tif (i >= 0) this.charMask[i] = true; else this.charMissing = true;\n\t\t}\n\n\t\tlet metrics = font.measureText(txt, size);\n\t\tlet bx = 0, by = 0;\n\n\t\tlet dx = 0;\n\t\tif ((align & TextAlign.Left) != 0) {}\n\t\telse if ((align & TextAlign.Right) != 0) dx = -metrics[0];\n\t\telse /* centre */ dx = -0.5 * metrics[0];\n\t\tif (dx != 0)\n\t\t{\n\t\t\tbx += dx * cosTheta;\n\t\t\tby += dx * sinTheta;\n\t\t}\n\n\t\tlet dy = 0;\n\t\tif ((align & TextAlign.Middle) != 0) dy = 0.5 * metrics[1];\n\t\telse if ((align & TextAlign.Top) != 0) dy = metrics[1];\n\t\telse if ((align & TextAlign.Bottom) != 0) dy = -metrics[2];\n\t\t// else: baseline\n\t\tif (dy != 0)\n\t\t{\n\t\t\tbx -= dy * sinTheta;\n\t\t\tby += dy * cosTheta;\n\t\t}\n\n\t\t// mainstaking measurement of the boundaries (looks like overkill, but it really isn't)\n\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n\t\tlet tx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\t\t\tif (i >= 0)\n\t\t\t{\n\t\t\t\tlet outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n\t\t\t\tx1 = Math.min(x1, tx + Vec.min(outlineX));\n\t\t\t\tx2 = Math.max(x2, tx + Vec.max(outlineX));\n\t\t\t\ty1 = Math.min(y1, -Vec.max(outlineY));\n\t\t\t\ty2 = Math.max(y2, -Vec.min(outlineY));\n\n\t\t\t\ttx += font.HORIZ_ADV_X[i];\n\t\t\t\tif (n < txt.length - 1) tx += font.getKerning(ch, txt.charAt(n + 1));\n\n\t\t\t\t// !! TODO: compensate for direction if !0 and !baseline/left\n\t\t\t}\n\t\t\telse tx += font.MISSING_HORZ;\n\t\t}\n\t\tconst mscale = size * font.INV_UNITS_PER_EM;\n\t\tif (direction == 0)\n\t\t{\n\t\t\tthis.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n\t\t\tthis.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet rx1 = x1 * mscale, ry1 = y1 * mscale;\n\t\t\tlet rx2 = x2 * mscale, ry2 = y2 * mscale;\n\t\t\tthis.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n\t\t}\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Text, size, colour} as TextType);\n\t\tthis.prims.push({primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction} as TextPrim);\n\t}\n\n\t// render *native* text, which is defined by an HTML/CSS font specifier; this is different from the built-in text in that it presumes that the device\n\t// can locate the font at render-time, and that whatever methods were used to measure the font at draw-time are synced; this is a fair assumption when\n\t// creating graphics for immediate output to a canvas or inline-rendered SVG object, but anything else has to be taken on a case by case basis\n\tpublic drawTextNative(x:number, y:number, txt:string, fontFamily:string, fontSize:number, colour:number, align?:number, opt?:FontDataNativeOpt):void\n\t{\n\t\tif (!opt) opt = {};\n\n\t\tif (align == null) align = TextAlign.Left | TextAlign.Baseline;\n\t\tconst font = FontData.main;\n\n\t\tlet metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n\n\t\tif ((align & TextAlign.Left) != 0) {}\n\t\telse if ((align & TextAlign.Right) != 0) x -= metrics[0];\n\t\telse /* centre */ x -= 0.5 * metrics[0];\n\n\t\tif ((align & TextAlign.Middle) != 0) y += 0.5 * metrics[1];\n\t\telse if ((align & TextAlign.Top) != 0) y += metrics[1];\n\t\telse if ((align & TextAlign.Bottom) != 0) y -= metrics[2];\n\t\t// else: baseline\n\n\t\tthis.updateBounds(x, y - metrics[1]);\n\t\tthis.updateBounds(x + metrics[0], y + metrics[2]);\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt} as TextNativeType);\n\t\tthis.prims.push({primClass: PrimClass.TextNative, typeidx, x, y, txt} as TextNativePrim);\n\t}\n\n\t// query the boundaries of the drawing, post factum\n\tpublic boundLowX():number {return this.lowX;}\n\tpublic boundLowY():number {return this.lowY;}\n\tpublic boundHighX():number {return this.highX;}\n\tpublic boundHighY():number {return this.highY;}\n\tpublic getBounds():Box {return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY);}\n\n\t// update width/height (this isn't done automatically, as it can be considered a parameter)\n\tpublic measure():void\n\t{\n\t\tthis.width = Math.ceil(this.highX - this.lowX);\n\t\tthis.height = Math.ceil(this.highY - this.lowY);\n\t}\n\n\t// for a metavector that has been drawn programmatically, makes sure that origin is (0,0) and that the size is set\n\tpublic normalise():void\n\t{\n\t\tif (this.lowX != 0 || this.lowY != 0) this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n\t\tthis.width = Math.ceil(this.highX - this.lowX);\n\t\tthis.height = Math.ceil(this.highY - this.lowY);\n\t}\n\n\t// convenience\n\tpublic setSize(width:number, height:number) {this.width = width; this.height = height;}\n\n\t// makes sure everything fits into the indicated box, scaling down if necessary (but not up)\n\tpublic transformIntoBox(box:Box):void\n\t{\n\t\tthis.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n\t\tlet nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n\t\tlet scale = 1;\n\t\tif (nw > box.w)\n\t\t{\n\t\t\tlet mod = box.w / nw;\n\t\t\tnw = box.w;\n\t\t\tnh *= mod;\n\t\t\tscale *= mod;\n\t\t}\n\t\tif (nh > box.h)\n\t\t{\n\t\t\tlet mod = box.h / nh;\n\t\t\tnh = box.h;\n\t\t\tnw *= mod;\n\t\t\tscale *= mod;\n\t\t}\n\t\tlet ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n\t\tthis.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n\t}\n\n\t// if the width/height of the content exceeds either of the indicated maximum dimensions, it is scaled down accordingly;\n\t// does not correct for the origin\n\tpublic scaleExtent(maxWidth:number, maxHeight:number):void\n\t{\n\t\tlet w = this.highX - this.lowX, h = this.highY - this.lowY;\n\t\tif (w <= maxWidth && h <= maxHeight) return; // already in bounds\n\t\tlet scale = Math.min(maxWidth / w, maxHeight / h);\n\t\tthis.transformPrimitives(0, 0, scale, scale);\n\t}\n\n\t// transforms the sizes and positions of the primitives; a transform of [0,0,1,1] is the identity; the position of each coordinate\n\t// is rescaled based on: p' = p*scale + offset\n\tpublic transformPrimitives(ox:number, oy:number, sw:number, sh:number):void\n\t{\n\t\tif (ox == 0 && oy == 0 && sw == 1 && sh == 1) return;\n\n\t\tfor (let a of this.prims)\n\t\t{\n\t\t\tconst type = a.primClass;\n\t\t\tif (type == PrimClass.Line)\n\t\t\t{\n\t\t\t\tlet line = a as LinePrim;\n\t\t\t\tline.x1 = ox + line.x1 * sw;\n\t\t\t\tline.y1 = oy + line.y1 * sh;\n\t\t\t\tline.x2 = ox + line.x2 * sw;\n\t\t\t\tline.y2 = oy + line.y2 * sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tlet rect = a as RectPrim;\n\t\t\t\trect.x = ox + rect.x * sw;\n\t\t\t\trect.y = oy + rect.y * sh;\n\t\t\t\trect.w = rect.w * sw;\n\t\t\t\trect.h = rect.h * sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tlet oval = a as OvalPrim;\n\t\t\t\toval.cx = ox + oval.cx * sw;\n\t\t\t\toval.cy = oy + oval.cy * sh;\n\t\t\t\toval.rw *= sw;\n\t\t\t\toval.rh *= sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Path)\n\t\t\t{\n\t\t\t\tlet path = a as PathPrim;\n\t\t\t\tlet sz = path.count, px = path.x, py = path.y;\n\t\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t\t{\n\t\t\t\t\tpx[n] = ox + px[n] * sw;\n\t\t\t\t\tpy[n] = oy + py[n] * sh;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == PrimClass.Text || type == PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tlet text = a as TextPrim | TextNativePrim;\n\t\t\t\ttext.x = ox + text.x * sw;\n\t\t\t\ttext.y = oy + text.y * sh;\n\t\t\t}\n\t\t}\n\t\tlet swsh = 0.5 * (sw + sh);\n\t\tif (swsh != 1) for (let t of this.types)\n\t\t{\n\t\t\tconst type = t.primClass;\n\t\t\tif (type == PrimClass.Line) (t as LineType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Rect) (t as RectType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Oval) (t as OvalType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Path) (t as PathType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Text) (t as TextType).size *= swsh;\n\t\t\telse if (type == PrimClass.TextNative) (t as TextNativeType).size *= swsh;\n\t\t}\n\n\t\tthis.lowX = ox + this.lowX * sw;\n\t\tthis.lowY = oy + this.lowY * sh;\n\t\tthis.highX = ox + this.highX * sw;\n\t\tthis.highY = oy + this.highY * sh;\n\t}\n\n\t// renders the meta vector by creating a new canvas\n\tpublic renderInto(parent:any)\n\t{\n\t\tlet canvas = newElement(parent, 'canvas', {'width': this.width, 'height': this.height}) as HTMLCanvasElement;\n\t\tthis.renderCanvas(canvas);\n\t\treturn canvas;\n\t}\n\n\t// renders the meta vector into an existing canvas\n\tpublic renderCanvas(canvas:HTMLCanvasElement, clearFirst?:boolean)\n\t{\n\t\tlet ctx = canvas.getContext('2d');\n\t\tif (clearFirst) ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tlet w = this.width, h = this.height;\n\n\t\tthis.density = pixelDensity();\n\n\t\tcanvas.style.width = w + 'px';\n\t\tcanvas.style.height = h + 'px';\n\t\tcanvas.width = w * this.density;\n\t\tcanvas.height = h * this.density;\n\n\t\tthis.renderContext(ctx);\n\t}\n\n\t// renders the meta vector into a context (this is useful when there's stuff to draw above or below)\n\tpublic renderContext(ctx:CanvasRenderingContext2D)\n\t{\n\t\tctx.save();\n\t\tctx.scale(this.density, this.density);\n\n\t\tthis.typeObj = [];\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tlet t = this.types[n];\n\t\t\tif (t.primClass == PrimClass.Line) this.typeObj[n] = this.setupTypeLine(t as LineType);\n\t\t\telse if (t.primClass == PrimClass.Rect) this.typeObj[n] = this.setupTypeRect(t as RectType);\n\t\t\telse if (t.primClass == PrimClass.Oval) this.typeObj[n] = this.setupTypeOval(t as OvalType);\n\t\t\telse if (t.primClass == PrimClass.Path) this.typeObj[n] = this.setupTypePath(t as PathType);\n\t\t\telse if (t.primClass == PrimClass.Text) this.typeObj[n] = this.setupTypeText(t as TextType);\n\t\t\telse if (t.primClass == PrimClass.TextNative) this.typeObj[n] = this.setupTypeTextNative(t as TextNativeType);\n\t\t}\n\t\tfor (let n = 0; n < this.prims.length; n++)\n\t\t{\n\t\t\tlet p = this.prims[n];\n\t\t\tif (p.primClass == PrimClass.Line) this.renderLine(ctx, p as LinePrim);\n\t\t\telse if (p.primClass == PrimClass.Rect) this.renderRect(ctx, p as RectPrim);\n\t\t\telse if (p.primClass == PrimClass.Oval) this.renderOval(ctx, p as OvalPrim);\n\t\t\telse if (p.primClass == PrimClass.Path) this.renderPath(ctx, p as PathPrim);\n\t\t\telse if (p.primClass == PrimClass.Text) this.renderText(ctx, p as TextPrim);\n\t\t\telse if (p.primClass == PrimClass.TextNative) this.renderTextNative(ctx, p as TextNativePrim);\n\t\t}\n\n\t\tctx.restore();\n\t}\n\n\t// builds a new DOM containing an <svg> element, and everything underneath it is a representation of the graphic; the most common UI use case for this method is:\n\t//\t\t\tlet domSVG = dom(gfx.createSVG()).appendTo(div);\n\t//\t\t\tdomSVG.css({'display': 'block', 'pointer-events': 'none'});\n\t// note that setting the display style to 'block' prevents the layout from adding descender padding for baseline alignment, which is never useful; and disabling\n\t// pointer events for individual SVG elements is generally a good idea\n\tpublic createSVG(prettyPrint = false, withXlink = false):string\n\t{\n\t\tlet svg = new SpoolSVG(prettyPrint);\n\t\tsvg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n\t\tif (withXlink) svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\t\tsvg.attr('width', this.width);\n\t\tsvg.attr('height', this.height);\n\t\tsvg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tthis.renderSVG(svg, withXlink);\n\n\t\tsvg.dec();\n\t\tsvg.whole('</svg>');\n\t\treturn svg.toString();\n\t}\n\n\t// given a DOM that represents an <svg> element, or some sub-container (such as <g>), populates it with all of the\n\t// content from the graphic\n\tpublic renderSVG(svg:SpoolSVG, withXlink = false):void\n\t{\n\t\tthis.typeObj = [];\n\n\t\tconst font = FontData.main;\n\t\tsvg.whole('<defs>');\n\t\tsvg.inc();\n\t\tif (this.charMissing)\n\t\t{\n\t\t\tsvg.start('<path');\n\t\t\tsvg.attr('id', 'missing');\n\t\t\tsvg.attr('d', font.MISSING_DATA);\n\t\t\tsvg.attr('edge', 'none');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t\tfor (let n = 0; n < font.UNICODE.length; n++) if (this.charMask[n])\n\t\t{\n\t\t\tsvg.start('<path');\n\t\t\tsvg.attr('id', 'char' + n);\n\t\t\tsvg.attr('d', font.GLYPH_DATA[n]);\n\t\t\tsvg.attr('edge', 'none');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t\tsvg.dec();\n\t\tsvg.whole('</defs>');\n\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tlet t = this.types[n];\n\t\t\tif (t.primClass == PrimClass.Line) this.typeObj[n] = this.setupTypeLine(t as LineType);\n\t\t\telse if (t.primClass == PrimClass.Rect) this.typeObj[n] = this.setupTypeRect(t as RectType);\n\t\t\telse if (t.primClass == PrimClass.Oval) this.typeObj[n] = this.setupTypeOval(t as OvalType);\n\t\t\telse if (t.primClass == PrimClass.Path) this.typeObj[n] = this.setupTypePath(t as PathType);\n\t\t\telse if (t.primClass == PrimClass.Text) this.typeObj[n] = this.setupTypeText(t as TextType);\n\t\t\telse if (t.primClass == PrimClass.TextNative) this.typeObj[n] = this.setupTypeTextNative(t as TextNativeType);\n\t\t}\n\t\tfor (let n = 0; n < this.prims.length;)\n\t\t{\n\t\t\tlet p = this.prims[n], num = 1;\n\t\t\tif (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tfor (; n + num < this.prims.length; num++) if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx) break;\n\t\t\t}\n\t\t\tif (p.primClass == PrimClass.Line)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgLine1(svg, p as LinePrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgLineN(svg, this.prims.slice(n, n + num) as LinePrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgRect1(svg, p as RectPrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgRectN(svg, this.prims.slice(n, n + num) as RectPrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgOval1(svg, p as OvalPrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgOvalN(svg, this.prims.slice(n, n + num) as OvalPrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Path) this.svgPath(svg, p as PathPrim);\n\t\t\telse if (p.primClass == PrimClass.Text) this.svgText(svg, p as TextPrim, withXlink);\n\t\t\telse if (p.primClass == PrimClass.TextNative) this.svgTextNative(svg, p as TextNativePrim);\n\n\t\t\tn += num;\n\t\t}\n\t}\n\n\t// for duplication purposes: emits all the primitives into another builder instance\n\tpublic spool(into:MetaVector):void\n\t{\n\t\tfor (let p of this.prims)\n\t\t{\n\t\t\tif (p.primClass == PrimClass.Line)\n\t\t\t{\n\t\t\t\tlet {typeidx, x1, y1, x2, y2} = p as LinePrim;\n\t\t\t\tlet {thickness, colour} = this.types[typeidx] as LineType;\n\t\t\t\tinto.drawLine(x1, y1, x2, y2, colour, thickness);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, w, h} = p as RectPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness} = this.types[typeidx] as RectType;\n\t\t\t\tinto.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tlet {typeidx, cx, cy, rw, rh} = p as OvalPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness} = this.types[typeidx] as OvalType;\n\t\t\t\tinto.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Path)\n\t\t\t{\n\t\t\t\tlet {typeidx, count, x, y, ctrl, closed} = p as PathPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.types[typeidx] as PathType;\n\t\t\t\tinto.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Text)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, txt, direction} = p as TextPrim;\n\t\t\t\tlet {size, colour} = this.types[typeidx] as TextType;\n\t\t\t\tinto.drawText(x, y, txt, size, colour, null, direction);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, txt} = p as TextNativePrim;\n\t\t\t\tlet {family, size, colour} = this.types[typeidx] as TextNativeType;\n\t\t\t\tinto.drawTextNative(x, y, txt, family, size, colour);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// transform stored types into renderables\n\tpublic setupTypeLine(t:LineType):LineType\n\t{\n\t\tlet thickness = t.thickness * this.scale;\n\t\tlet colour = t.colour;\n\t\treturn {primClass: t.primClass, thickness, colour};\n\t}\n\tpublic setupTypeRect(t:RectType):RectType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness};\n\t}\n\tpublic setupTypeOval(t:OvalType):OvalType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness};\n\t}\n\tpublic setupTypePath(t:PathType):PathType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\tlet hardEdge = t.hardEdge;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge};\n\t}\n\tpublic setupTypeText(t:TextType):TextType\n\t{\n\t\tlet size = t.size * this.scale;\n\t\tlet colour = t.colour;\n\t\treturn {primClass: t.primClass, colour, size};\n\t}\n\tpublic setupTypeTextNative(t:TextNativeType):TextNativeType\n\t{\n\t\tlet family = t.family;\n\t\tlet size = t.size * this.scale;\n\t\tlet colour = t.colour;\n\t\tlet opt = t.opt;\n\t\treturn {primClass: t.primClass, colour, family, size, opt};\n\t}\n\n\t// perform actual rendering for the primitives\n\tpublic renderLine(ctx:CanvasRenderingContext2D, line:LinePrim):void\n\t{\n\t\tlet {x1, y1, x2, y2} = line;\n\t\tlet {colour, thickness} = this.typeObj[line.typeidx] as LineType;\n\n\t\tx1 = this.offsetX + this.scale * x1;\n\t\ty1 = this.offsetY + this.scale * y1;\n\t\tx2 = this.offsetX + this.scale * x2;\n\t\ty2 = this.offsetY + this.scale * y2;\n\t\tif (colour != null)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.strokeStyle = colourCanvas(colour);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.lineCap = 'round';\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tpublic renderRect(ctx:CanvasRenderingContext2D, rect:RectPrim):void\n\t{\n\t\tlet {x, y, w, h} = rect;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rect.typeidx] as RectType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\t\tw *= this.scale;\n\t\th *= this.scale;\n\n\t\tif (fillCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fillRect(x, y, w, h);\n\t\t}\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.lineCap = 'square';\n\t\t\tctx.strokeRect(x, y, w, h);\n\t\t}\n\t}\n\tpublic renderOval(ctx:CanvasRenderingContext2D, oval:OvalPrim):void\n\t{\n\t\tlet {cx, cy, rw, rh} = oval;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[oval.typeidx] as OvalType;\n\n\t\tcx = this.offsetX + this.scale * cx;\n\t\tcy = this.offsetY + this.scale * cy;\n\t\trw *= this.scale;\n\t\trh *= this.scale;\n\n\t\tif (fillCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n\t\t\tctx.fill();\n\t\t}\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tpublic renderPath(ctx:CanvasRenderingContext2D, path:PathPrim):void\n\t{\n\t\tlet {count, x, y, ctrl, closed} = path;\n\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.typeObj[path.typeidx] as PathType;\n\n\t\tx = [...x];\n\t\ty = [...y];\n\t\tfor (let n = 0; n < count; n++)\n\t\t{\n\t\t\tx[n] = this.offsetX + this.scale * x[n];\n\t\t\ty[n] = this.offsetY + this.scale * y[n];\n\t\t}\n\n\t\tfor (let layer = 1; layer <= 2; layer++)\n\t\t{\n\t\t\tif (layer == 1 && fillCol == MetaVector.NOCOLOUR) continue;\n\t\t\tif (layer == 2 && edgeCol == MetaVector.NOCOLOUR) continue;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x[0], y[0]);\n\t\t\tfor (let i = 1; i < count; i++)\n\t\t\t{\n\t\t\t\tif (!ctrl || !ctrl[i])\n\t\t\t\t{\n\t\t\t\t\tctx.lineTo(x[i], y[i]);\n\t\t\t\t}\n\t\t\t\telse if (i < count - 1 && !ctrl[i + 1])\n\t\t\t\t{\n\t\t\t\t\tctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if (i < count - 1 && !ctrl[i + 2])\n\t\t\t\t{\n\t\t\t\t\tctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed) ctx.closePath();\n\n\t\t\tif (layer == 1)\n\t\t\t{\n\t\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\t\tctx.lineWidth = thickness;\n\t\t\t\tctx.lineCap = hardEdge ? 'square' : 'round';\n\t\t\t\tctx.lineJoin = hardEdge ? 'miter' : 'round';\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t}\n\tprivate renderText(ctx:CanvasRenderingContext2D, text:TextPrim):void\n\t{\n\t\tlet {x, y, txt, direction} = text;\n\t\tlet {size, colour} = this.typeObj[text.typeidx] as TextType;\n\n\t\tlet fill = colourCanvas(colour);\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size * this.scale / font.UNITS_PER_EM;\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\t\t\tlet path:Path2D = null;\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\tpath = font.getMissingPath();\n\t\t\t}\n\t\t\telse path = font.getGlyphPath(i);\n\n\t\t\tif (path)\n\t\t\t{\n\t\t\t\tctx.save();\n\t\t\t\tlet theta = direction != 0 ? direction * DEGRAD : 0;\n\t\t\t\tif (theta == 0)\n\t\t\t\t\tctx.translate(x + dx * scale, y);\n\t\t\t\telse\n\t\t\t\t\tctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n\t\t\t\tctx.scale(scale, -scale);\n\t\t\t\tif (theta != 0) ctx.rotate(-theta);\n\t\t\t\tctx.fillStyle = fill;\n\t\t\t\tctx.fill(path);\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t}\n\t}\n\tprivate renderTextNative(ctx:CanvasRenderingContext2D, text:TextNativePrim):void\n\t{\n\t\tlet {x, y, txt} = text;\n\t\tlet {size, colour, family, opt} = this.typeObj[text.typeidx] as TextNativeType;\n\n\t\tlet fill = colourCanvas(colour);\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tctx.save();\n\n\t\tlet pfx = '';\n\t\tif (opt.bold) pfx += 'bold ';\n\t\tif (opt.italic) pfx += 'italic ';\n\t\tctx.font = pfx + (size * this.scale) + 'px ' + family;\n\t\tctx.fillStyle = fill;\n\t\tctx.fillText(txt, x, y);\n\t\tctx.restore();\n\t}\n\n\t// create SVG object for each primitive\n\t// perform actual rendering for the primitives\n\tpublic svgLine1(svg:SpoolSVG, line:LinePrim):void\n\t{\n\t\tlet {x1, y1, x2, y2} = line;\n\t\tlet {colour, thickness} = this.typeObj[line.typeidx] as LineType;\n\n\t\tx1 = this.offsetX + this.scale * x1;\n\t\ty1 = this.offsetY + this.scale * y1;\n\t\tx2 = this.offsetX + this.scale * x2;\n\t\ty2 = this.offsetY + this.scale * y2;\n\n\t\tif (colour != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.start('<line');\n\t\t\tsvg.attr('x1', x1);\n\t\t\tsvg.attr('y1', y1);\n\t\t\tsvg.attr('x2', x2);\n\t\t\tsvg.attr('y2', y2);\n\t\t\tthis.defineSVGStroke(svg, colour);\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'round');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t}\n\tpublic svgLineN(svg:SpoolSVG, lines:LinePrim[]):void\n\t{\n\t\tlet {colour, thickness} = this.typeObj[lines[0].typeidx] as LineType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, colour);\n\t\tsvg.attr('stroke-width', thickness);\n\t\tsvg.attr('stroke-linecap', 'round');\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let line of lines)\n\t\t{\n\t\t\tlet {x1, y1, x2, y2} = line;\n\n\t\t\tx1 = this.offsetX + this.scale * x1;\n\t\t\ty1 = this.offsetY + this.scale * y1;\n\t\t\tx2 = this.offsetX + this.scale * x2;\n\t\t\ty2 = this.offsetY + this.scale * y2;\n\n\t\t\tsvg.start('<line');\n\t\t\tsvg.attr('x1', x1);\n\t\t\tsvg.attr('y1', y1);\n\t\t\tsvg.attr('x2', x2);\n\t\t\tsvg.attr('y2', y2);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgRect1(svg:SpoolSVG, rect:RectPrim):void\n\t{\n\t\tlet {x, y, w, h} = rect;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rect.typeidx] as RectType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\t\tw *= this.scale;\n\t\th *= this.scale;\n\n\t\tsvg.start('<rect');\n\t\tsvg.attr('x', x);\n\t\tsvg.attr('y', y);\n\t\tsvg.attr('width', w);\n\t\tsvg.attr('height', h);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'square');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tpublic svgRectN(svg:SpoolSVG, rects:RectPrim[]):void\n\t{\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rects[0].typeidx] as RectType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'square');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let rect of rects)\n\t\t{\n\t\t\tlet {x, y, w, h} = rect;\n\n\t\t\tx = this.offsetX + this.scale * x;\n\t\t\ty = this.offsetY + this.scale * y;\n\t\t\tw *= this.scale;\n\t\t\th *= this.scale;\n\n\t\t\tsvg.start('<rect');\n\t\t\tsvg.attr('x', x);\n\t\t\tsvg.attr('y', y);\n\t\t\tsvg.attr('width', w);\n\t\t\tsvg.attr('height', h);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgOval1(svg:SpoolSVG, oval:OvalPrim):void\n\t{\n\t\tlet {cx, cy, rw, rh} = oval;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[oval.typeidx] as OvalType;\n\n\t\tcx = this.offsetX + this.scale * cx;\n\t\tcy = this.offsetY + this.scale * cy;\n\t\trw *= this.scale;\n\t\trh *= this.scale;\n\n\t\tsvg.start('<ellipse');\n\t\tsvg.attr('cx', cx);\n\t\tsvg.attr('cy', cy);\n\t\tsvg.attr('rx', rw);\n\t\tsvg.attr('ry', rh);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tpublic svgOvalN(svg:SpoolSVG, ovals:OvalPrim[]):void\n\t{\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[ovals[0].typeidx] as OvalType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let oval of ovals)\n\t\t{\n\t\t\tlet {cx, cy, rw, rh} = oval;\n\n\t\t\tcx = this.offsetX + this.scale * cx;\n\t\t\tcy = this.offsetY + this.scale * cy;\n\t\t\trw *= this.scale;\n\t\t\trh *= this.scale;\n\n\t\t\tsvg.start('<ellipse');\n\t\t\tsvg.attr('cx', cx);\n\t\t\tsvg.attr('cy', cy);\n\t\t\tsvg.attr('rx', rw);\n\t\t\tsvg.attr('ry', rh);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgPath(svg:SpoolSVG, path:PathPrim):void\n\t{\n\t\tlet {count, x, y, ctrl, closed} = path;\n\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.typeObj[path.typeidx] as PathType;\n\n\t\tx = [...x];\n\t\ty = [...y];\n\t\tfor (let n = 0; n < count; n++)\n\t\t{\n\t\t\tx[n] = this.offsetX + this.scale * x[n];\n\t\t\ty[n] = this.offsetY + this.scale * y[n];\n\t\t}\n\n\t\tlet shape = 'M ' + pixelCoord(x[0]) + ' ' + pixelCoord(y[0]);\n\t\tlet n = 1;\n\t\twhile (n < count)\n\t\t{\n\t\t\tif (!ctrl || !ctrl[n])\n\t\t\t{\n\t\t\t\tshape += ' L ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]);\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse if (ctrl[n] && n < count - 1 && !ctrl[n + 1])\n\t\t\t{\n\t\t\t\tshape += ' Q ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n\t\t\t\t\t\t       + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]);\n\t\t\t\tn += 2;\n\t\t\t}\n\t\t\telse if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2])\n\t\t\t{\n\t\t\t\tshape += ' C ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n\t\t\t\t\t\t\t   + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]) + ' '\n\t\t\t\t\t\t\t   + pixelCoord(x[n + 2]) + ' ' + pixelCoord(y[n + 2]);\n\t\t\t\tn += 3;\n\t\t\t}\n\t\t\telse n++; // (dunno, so skip)\n\t\t}\n\t\tif (closed) shape += ' Z';\n\n\t\tsvg.start('<path');\n\t\tsvg.attr('d', shape);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n\t\t\tsvg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tprivate svgText(svg:SpoolSVG, text:TextPrim, withXlink = true):void\n\t{\n\t\tlet {x, y, txt, direction} = text;\n\t\tlet {size, colour} = this.typeObj[text.typeidx] as TextType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size * this.scale / font.UNITS_PER_EM;\n\n\t\tif (direction != 0)\n\t\t{\n\t\t\tsvg.start('<g');\n\t\t\tsvg.attr('transform', `rotate(${direction},${pixelCoord(x)},${pixelCoord(y)})`);\n\t\t\tsvg.stop('>');\n\t\t\tsvg.inc();\n\t\t}\n\n\t\tsvg.start('<g');\n\t\tsvg.attr('transform', `translate(${pixelCoord(x)},${pixelCoord(y)})`);\n\t\tthis.defineSVGFill(svg, colour);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tsvg.start('<g');\n\t\tsvg.attr('transform', `scale(${pixelCoord(scale)},${pixelCoord(-scale)})`);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\n\t\t\tsvg.start('<use');\n\t\t\tlet ref = i < 0 ? '#missing' : '#char' + i;\n\t\t\tif (withXlink) svg.attr('xlink:href', ref); else svg.attr('href', ref);\n\t\t\tsvg.attr('x', dx);\n\t\t\tsvg.stop('/>');\n\n\t\t\tif (i >= 0)\n\t\t\t{\n\t\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t\t}\n\t\t\telse dx += font.MISSING_HORZ;\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\n\t\tif (direction != 0)\n\t\t{\n\t\t\tsvg.dec();\n\t\t\tsvg.whole('</g>');\n\t\t}\n\t}\n\tprivate svgTextNative(svg:SpoolSVG, text:TextNativePrim):void\n\t{\n\t\tlet {x, y, txt} = text;\n\t\tlet {size, colour, family, opt} = this.typeObj[text.typeidx] as TextNativeType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet fill = colourCanvas(colour);\n\t\tlet style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n\t\tif (opt.bold) style += ' font-weight: bold;';\n\t\tif (opt.italic) style += ' font-style: italic;';\n\n\t\tconst escapeXML = (str:string):string =>\n\t\t{\n\t\t\treturn str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n\t\t};\n\n\t\tsvg.start('<text');\n\t\tsvg.attr('xml:space', 'preserve');\n\t\tsvg.attr('x', x);\n\t\tsvg.attr('y', y);\n\t\tsvg.attr('style', style);\n\t\tsvg.stop('>' + escapeXML(txt) + '</text>');\n\t}\n\n\t// utility for SVG\n\tprivate defineSVGStroke(svg:SpoolSVG, col:number):void\n\t{\n\t\tif (col == MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-opacity', '0');\n\t\t\treturn;\n\t\t}\n\t\tsvg.attr('stroke', colourCode(col));\n\t\tlet alpha = colourAlpha(col);\n\t\tif (alpha != 1) svg.attr('stroke-opacity', alpha);\n\t}\n\tprivate defineSVGFill(svg:SpoolSVG, col:number):void\n\t{\n\t\tif (col == MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('fill-opacity', '0');\n\t\t\treturn;\n\t\t}\n\t\tsvg.attr('fill', colourCode(col));\n\t\tlet alpha = colourAlpha(col);\n\t\tif (alpha != 1) svg.attr('fill-opacity', alpha);\n\t}\n\n\t// for a type definition array, see if it exists in the list, and return that index - or if not, push it on\n\tprivate findOrCreateType(typeDef:TypeBase)\n\t{\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tif (this.types[n].primClass != typeDef.primClass) continue;\n\t\t\tlet keys = Object.keys(typeDef);\n\t\t\tlet match = keys.every((k) => (typeDef as any)[k] == (this.types[n] as any)[k]);\n\t\t\tif (match) return n;\n\t\t}\n\t\tthis.types.push(typeDef);\n\t\treturn this.types.length - 1;\n\t}\n\n\t// ensures boundaries move whenever something out of range is added\n\tprivate updateBounds(x:number, y:number):void\n\t{\n\t\tif (this.lowX == null)\n\t\t{\n\t\t\tthis.lowX = x;\n\t\t\tthis.lowY = y;\n\t\t\tthis.highX = x;\n\t\t\tthis.highY = y;\n\t\t\treturn;\n\t\t}\n\t\tthis.lowX = Math.min(this.lowX, x);\n\t\tthis.lowY = Math.min(this.lowY, y);\n\t\tthis.highX = Math.max(this.highX, x);\n\t\tthis.highY = Math.max(this.highY, y);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {ArrangeExperiment} from '../gfx/ArrangeExperiment';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {DrawExperiment} from '../gfx/DrawExperiment';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectGraphicRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tExperiment aspect: transforms groups of rows from a datasheet into a collection of structures that make up a\n\tmultistep reaction, along with accompanying quantities and other miscellaneous information.\n*/\n\nexport enum ExperimentComponentType\n{\n\tReactant,\n\tReagent,\n\tProduct,\n}\n\nexport class ExperimentComponent\n{\n\tpublic mol:Molecule = null;\n\tpublic name = '';\n\tpublic stoich = '';\n\tpublic mass:number = null; // units: g\n\tpublic volume:number = null; // units: mL\n\tpublic moles:number = null; // units: mol\n\tpublic density:number = null; // units: g/mL\n\tpublic conc:number = null; // units: mol/L\n\tpublic yield:number = null; // products only; unit: %\n\tpublic primary = false; // reactants only\n\tpublic waste = false; // products only\n\tpublic equiv:number = null; // reagents only\n\tpublic meta = '';\n\n\tconstructor(mol?:Molecule, name?:string)\n\t{\n\t\tthis.mol = mol;\n\t\tif (name) this.name = name;\n\t}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentComponent\n\t{\n\t\tlet dup = new ExperimentComponent(this.mol, this.name);\n\t\tdup.stoich = this.stoich;\n\t\tdup.mass = this.mass;\n\t\tdup.volume = this.volume;\n\t\tdup.moles = this.moles;\n\t\tdup.density = this.density;\n\t\tdup.conc = this.conc;\n\t\tdup.yield = this.yield;\n\t\tdup.primary = this.primary;\n\t\tdup.waste = this.waste;\n\t\tdup.equiv = this.equiv;\n\t\tdup.meta = this.meta;\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentComponent):boolean\n\t{\n\t\tif (this.name != other.name) return false;\n\t\tif (this.stoich != other.stoich || this.mass != other.mass || this.volume != other.volume || this.moles != other.moles ||\n\t\t\tthis.density != other.density || this.conc != other.conc || this.yield != other.yield || this.primary != other.primary ||\n\t\t\tthis.waste != other.waste || this.equiv != other.equiv || this.meta != other.meta) return false;\n\t\tif (this.mol === other.mol) return true; // if literally the same\n\t\tif (this.mol == null || other.mol == null) return false;\n\t\treturn this.mol.compareTo(other.mol) == 0;\n\t}\n\n\tpublic isBlank():boolean\n\t{\n\t\treturn MolUtil.isBlank(this.mol) && !this.name;\n\t}\n}\n\nexport class ExperimentStep\n{\n\tpublic reactants:ExperimentComponent[] = []; // non-blank only for the first step\n\tpublic reagents:ExperimentComponent[] = [];\n\tpublic products:ExperimentComponent[] = [];\n\tpublic meta = '';\n\n\tconstructor() {}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentStep\n\t{\n\t\tlet dup = new ExperimentStep();\n\t\tfor (let c of this.reactants) dup.reactants.push(c.clone());\n\t\tfor (let c of this.reagents) dup.reagents.push(c.clone());\n\t\tfor (let c of this.products) dup.products.push(c.clone());\n\t\tdup.meta = this.meta;\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentStep):boolean\n\t{\n\t\tif (this.reactants.length != other.reactants.length) return false;\n\t\tif (this.reagents.length != other.reagents.length) return false;\n\t\tif (this.products.length != other.products.length) return false;\n\t\tif (this.meta != other.meta) return false;\n\t\tfor (let n = 0; n < this.reactants.length; n++) if (!this.reactants[n].equals(other.reactants[n])) return false;\n\t\tfor (let n = 0; n < this.reagents.length; n++) if (!this.reagents[n].equals(other.reagents[n])) return false;\n\t\tfor (let n = 0; n < this.products.length; n++) if (!this.products[n].equals(other.products[n])) return false;\n\t\treturn true;\n\t}\n}\n\nexport class ExperimentEntry\n{\n\tpublic title = '';\n\tpublic createDate:Date = null;\n\tpublic modifyDate:Date = null;\n\tpublic doi = '';\n\tpublic meta = '';\n\n\tpublic steps:ExperimentStep[] = [];\n\n\tconstructor() {}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentEntry\n\t{\n\t\tlet dup = new ExperimentEntry();\n\t\tdup.title = this.title;\n\t\tdup.createDate = this.createDate;\n\t\tdup.modifyDate = this.modifyDate;\n\t\tdup.doi = this.doi;\n\t\tdup.meta = this.meta;\n\t\tfor (let s of this.steps) dup.steps.push(s.clone());\n\t\treturn dup;\n\t}\n\n\t// as above, but clones all the molecules too so they can be modified safely\n\tpublic deepClone():ExperimentEntry\n\t{\n\t\tlet dup = this.clone();\n\t\tfor (let step of dup.steps)\n\t\t{\n\t\t\tfor (let comp of step.reactants) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t\tfor (let comp of step.reagents) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t\tfor (let comp of step.products) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t}\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentEntry):boolean\n\t{\n\t\tif (this.title != other.title) return false;\n\t\tlet d1 = this.createDate == null ? 0 : this.createDate.getTime(), d2 = other.createDate == null ? 0 : other.createDate.getTime();\n\t\tif (d1 != d2) return false;\n\t\tlet d3 = this.modifyDate == null ? 0 : this.modifyDate.getTime(), d4 = other.modifyDate == null ? 0 : other.modifyDate.getTime();\n\t\tif (d3 != d4) return false;\n\t\tif (this.doi != other.doi || this.meta != other.meta) return false;\n\t\tif (this.steps.length != other.steps.length) return false;\n\t\tfor (let n = 0; n < this.steps.length; n++) if (!this.steps[n].equals(other.steps[n])) return false;\n\t\treturn true;\n\t}\n\n\t// convenience: saves a switch\n\tpublic getComponent(step:number, type:ExperimentComponentType, idx:number):ExperimentComponent\n\t{\n\t\tif (type == ExperimentComponentType.Reactant) return this.steps[step].reactants[idx];\n\t\tif (type == ExperimentComponentType.Reagent) return this.steps[step].reagents[idx];\n\t\tif (type == ExperimentComponentType.Product) return this.steps[step].products[idx];\n\t\treturn new ExperimentComponent();\n\t}\n}\n\nexport class Experiment extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.Experiment';\n\tpublic static CODE_RXN = 'org.mmi.aspect.Reaction';\n\tpublic static CODE_YLD = 'org.mmi.aspect.Yield';\n\tpublic static NAME = 'Experiment';\n\tpublic static NAME_RXN = 'Reaction';\n\tpublic static NAME_YLD = 'Yield';\n\n\tpublic static COLNAME_EXPERIMENT_TITLE = 'ExperimentTitle';\n\tpublic static COLNAME_EXPERIMENT_CREATEDATE = 'ExperimentCreateDate';\n\tpublic static COLNAME_EXPERIMENT_MODIFYDATE = 'ExperimentModifyDate';\n\tpublic static COLNAME_EXPERIMENT_DOI = 'ExperimentDOI';\n\tpublic static COLNAME_EXPERIMENT_META = 'ExperimentMeta';\n\n\t// prefixes for Steps\n\tpublic static COLNAME_STEP_META = 'ExperimentStepMeta';\n\n\t// prefixes for Reactants\n\tpublic static COLNAME_REACTANT_MOL = 'ReactantMol';\n\tpublic static COLNAME_REACTANT_NAME = 'ReactantName';\n\tpublic static COLNAME_REACTANT_STOICH = 'ReactantStoich';\n\tpublic static COLNAME_REACTANT_MASS = 'ReactantMass';\n\tpublic static COLNAME_REACTANT_VOLUME = 'ReactantVolume';\n\tpublic static COLNAME_REACTANT_MOLES = 'ReactantMoles';\n\tpublic static COLNAME_REACTANT_DENSITY = 'ReactantDensity';\n\tpublic static COLNAME_REACTANT_CONC = 'ReactantConc';\n\tpublic static COLNAME_REACTANT_PRIMARY = 'ReactantPrimary';\n\tpublic static COLNAME_REACTANT_META = 'ReactantMeta';\n\n\t// prefixes for Reagents\n\tpublic static COLNAME_REAGENT_MOL = 'ReagentMol';\n\tpublic static COLNAME_REAGENT_NAME = 'ReagentName';\n\tpublic static COLNAME_REAGENT_EQUIV = 'ReagentEquiv';\n\tpublic static COLNAME_REAGENT_MASS = 'ReagentMass';\n\tpublic static COLNAME_REAGENT_VOLUME = 'ReagentVolume';\n\tpublic static COLNAME_REAGENT_MOLES = 'ReagentMoles';\n\tpublic static COLNAME_REAGENT_DENSITY = 'ReagentDensity';\n\tpublic static COLNAME_REAGENT_CONC = 'ReagentConc';\n\tpublic static COLNAME_REAGENT_META = 'ReagentMeta';\n\n\t// prefixes for Products\n\tpublic static COLNAME_PRODUCT_MOL = 'ProductMol';\n\tpublic static COLNAME_PRODUCT_NAME = 'ProductName';\n\tpublic static COLNAME_PRODUCT_STOICH = 'ProductStoich';\n\tpublic static COLNAME_PRODUCT_MASS = 'ProductMass';\n\tpublic static COLNAME_PRODUCT_VOLUME = 'ProductVolume';\n\tpublic static COLNAME_PRODUCT_MOLES = 'ProductMoles';\n\tpublic static COLNAME_PRODUCT_DENSITY = 'ProductDensity';\n\tpublic static COLNAME_PRODUCT_CONC = 'ProductConc';\n\tpublic static COLNAME_PRODUCT_YIELD = 'ProductYield';\n\tpublic static COLNAME_PRODUCT_WASTE = 'ProductWaste';\n\tpublic static COLNAME_PRODUCT_META = 'ProductMeta';\n\n\tpublic static COLUMN_DESCRIPTIONS:Record<string, string> = {};\n\n\tpublic static ALL_COLUMN_LITERALS =\n\t[\n\t\tExperiment.COLNAME_EXPERIMENT_TITLE,\n\t\tExperiment.COLNAME_EXPERIMENT_CREATEDATE,\n\t\tExperiment.COLNAME_EXPERIMENT_MODIFYDATE,\n\t\tExperiment.COLNAME_EXPERIMENT_DOI,\n\t\tExperiment.COLNAME_EXPERIMENT_META,\n\t\tExperiment.COLNAME_STEP_META,\n\t];\n\tpublic static ALL_COLUMN_PREFIXES =\n\t[\n\t\tExperiment.COLNAME_REACTANT_MOL,\n\t\tExperiment.COLNAME_REACTANT_NAME,\n\t\tExperiment.COLNAME_REACTANT_STOICH,\n\t\tExperiment.COLNAME_REACTANT_MASS,\n\t\tExperiment.COLNAME_REACTANT_VOLUME,\n\t\tExperiment.COLNAME_REACTANT_MOLES,\n\t\tExperiment.COLNAME_REACTANT_DENSITY,\n\t\tExperiment.COLNAME_REACTANT_CONC,\n\t\tExperiment.COLNAME_REACTANT_PRIMARY,\n\t\tExperiment.COLNAME_REACTANT_META,\n\t\tExperiment.COLNAME_REAGENT_MOL,\n\t\tExperiment.COLNAME_REAGENT_NAME,\n\t\tExperiment.COLNAME_REAGENT_EQUIV,\n\t\tExperiment.COLNAME_REAGENT_MASS,\n\t\tExperiment.COLNAME_REAGENT_VOLUME,\n\t\tExperiment.COLNAME_REAGENT_MOLES,\n\t\tExperiment.COLNAME_REAGENT_DENSITY,\n\t\tExperiment.COLNAME_REAGENT_CONC,\n\t\tExperiment.COLNAME_REAGENT_META,\n\t\tExperiment.COLNAME_PRODUCT_MOL,\n\t\tExperiment.COLNAME_PRODUCT_NAME,\n\t\tExperiment.COLNAME_PRODUCT_STOICH,\n\t\tExperiment.COLNAME_PRODUCT_MASS,\n\t\tExperiment.COLNAME_PRODUCT_VOLUME,\n\t\tExperiment.COLNAME_PRODUCT_MOLES,\n\t\tExperiment.COLNAME_PRODUCT_DENSITY,\n\t\tExperiment.COLNAME_PRODUCT_CONC,\n\t\tExperiment.COLNAME_PRODUCT_YIELD,\n\t\tExperiment.COLNAME_PRODUCT_WASTE,\n\t\tExperiment.COLNAME_PRODUCT_META,\n\t];\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isExperiment(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == Experiment.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(Experiment.CODE, ds, allowModify);\n\n\t\tthis.subordinateCodes = [Experiment.CODE_RXN, Experiment.CODE_YLD];\n\n\t\tif (Object.keys(Experiment.COLUMN_DESCRIPTIONS).length == 0)\n\t\t{\n\t\t\tlet v = Experiment.COLUMN_DESCRIPTIONS;\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_TITLE] = 'Title description for the experiment';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_CREATEDATE] = 'Date the experiment was created (seconds since 1970)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_MODIFYDATE] = 'Date the experiment was last modified (seconds since 1970)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_DOI] = 'Digital object identifiers (DOI) for the experiment (whitespace separated)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_META] = 'Additional experiment metadata';\n\t\t\tv[Experiment.COLNAME_STEP_META] = 'Additional step metadata';\n\t\t\tv[Experiment.COLNAME_REACTANT_MOL] = 'Molecular structure of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_NAME] = 'Name of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_STOICH] = 'Stoichiometry of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_MASS] = 'Mass quantity of reactant (g)';\n\t\t\tv[Experiment.COLNAME_REACTANT_VOLUME] = 'Volume quantity of reactant (mL)';\n\t\t\tv[Experiment.COLNAME_REACTANT_MOLES] = 'Molar quantity of reactant (mol)';\n\t\t\tv[Experiment.COLNAME_REACTANT_DENSITY] = 'Density of reactant (g/mL)';\n\t\t\tv[Experiment.COLNAME_REACTANT_CONC] = 'Concentration of reactant (mol/L)';\n\t\t\tv[Experiment.COLNAME_REACTANT_PRIMARY] = 'Whether the reactant is used for yield calculation';\n\t\t\tv[Experiment.COLNAME_REACTANT_META] = 'Additional reactant metadata';\n\t\t\tv[Experiment.COLNAME_REAGENT_MOL] = 'Molecular structure of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_NAME] = 'Name of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_EQUIV] = 'Molar equivalents of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_MASS] = 'Mass quantity of reagent (g)';\n\t\t\tv[Experiment.COLNAME_REAGENT_VOLUME] = 'Volume quantity of reagent (mL)';\n\t\t\tv[Experiment.COLNAME_REAGENT_MOLES] = 'Molar quantity of reagent (mol)';\n\t\t\tv[Experiment.COLNAME_REAGENT_DENSITY] = 'Density of reagent (g/mL)';\n\t\t\tv[Experiment.COLNAME_REAGENT_CONC] = 'Concentration of reagent (mol/L)';\n\t\t\tv[Experiment.COLNAME_REAGENT_META] = 'Additional reagent metadata';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MOL] = 'Molecular structure of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_NAME] = 'Name of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_STOICH] = 'Stoichiometry of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MASS] = 'Mass quantity of reactant (g)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_VOLUME] = 'Volume quantity of reactant (mL)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MOLES] = 'Molar quantity of reactant (mol)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_DENSITY] = 'Density of reactant (g/mL)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_CONC] = 'Concentration of reactant (mol/L)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_YIELD] = 'Yield of product (%)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_WASTE] = 'Whether the product is an unwanted byproduct';\n\t\t\tv[Experiment.COLNAME_PRODUCT_META] = 'Additional product metadata';\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\t// returns true if the row is at the beginning of an experiment\n\tpublic isFirstStep(row:number):boolean\n\t{\n\t\tif (this.ds.notNull(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE)) return true;\n\t\tlet mol = this.ds.getMolecule(row, Experiment.COLNAME_REACTANT_MOL + '1');\n\t\tif (MolUtil.notBlank(mol)) return true;\n\t\tlet name = this.ds.getString(row, Experiment.COLNAME_REACTANT_NAME + '1');\n\t\tif (name) return true;\n\t\treturn false;\n\t}\n\n\t// starting at the given row, figure out how many rows (\"steps\") the reaction spans; always 1-or-more\n\tpublic numberOfSteps(row:number):number\n\t{\n\t\tif (row >= this.ds.numRows) return 0;\n\t\tlet steps = 1;\n\t\twhile (row + steps < this.ds.numRows)\n\t\t{\n\t\t\tif (this.isFirstStep(row + steps)) break;\n\t\t\tsteps++;\n\t\t}\n\t\treturn steps;\n\t}\n\n\t// data access\n\tpublic getEntry(row:number):ExperimentEntry\n\t{\n\t\tlet entry = new ExperimentEntry();\n\n\t\tlet title = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_TITLE);\n\t\tif (title) entry.title = title;\n\t\tlet createDate = this.ds.getReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE);\n\t\tif (createDate) entry.createDate = new Date(createDate * 1000);\n\t\tlet modifyDate = this.ds.getReal(row, Experiment.COLNAME_EXPERIMENT_MODIFYDATE);\n\t\tif (modifyDate) entry.modifyDate = new Date(modifyDate * 1000);\n\t\tlet doi = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_DOI);\n\t\tif (doi) entry.doi = doi;\n\t\tlet meta = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_META);\n\t\tif (meta) entry.meta = meta;\n\n\t\tlet [nreactants, nproducts, nreagents] = this.countComponents();\n\n\t\tfor (let pos = row; pos < this.ds.numRows; pos++)\n\t\t{\n\t\t\tif (pos > row && this.isFirstStep(pos)) break;\n\n\t\t\tlet step = new ExperimentStep();\n\t\t\tif (pos == row) for (let n = 1; n <= nreactants; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchReactant(pos, n);\n\t\t\t\tif (comp != null) step.reactants.push(comp); else break;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= nproducts; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchProduct(pos, n);\n\t\t\t\tif (comp != null) step.products.push(comp); else break;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= nreagents; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchReagent(pos, n);\n\t\t\t\tif (comp != null) step.reagents.push(comp); else break;\n\t\t\t}\n\t\t\tstep.meta = this.ds.getString(pos, Experiment.COLNAME_STEP_META);\n\n\t\t\tentry.steps.push(step);\n\t\t}\n\n\t\treturn entry;\n\t}\n\tpublic setEntry(row:number, entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(row, entry, true);\n\t}\n\tpublic addEntry(entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(this.ds.numRows, entry, false);\n\t}\n\tpublic insertEntry(row:number, entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(row, entry, false);\n\t}\n\tpublic deleteEntry(row:number):void\n\t{\n\t\tlet nsteps = this.numberOfSteps(row);\n\t\tfor (let n = row + nsteps - 1; n >= row; n--) this.ds.deleteRow(n);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet ds = this.ds;\n\t\tlet idxRxn = -1, idxYld = -1, idxExp = -1;\n\t\tlet extRxn = '', extYld = '', extExp = '';\n\t\tfor (let n = 0; n < ds.numExtensions; n++)\n\t\t{\n\t\t\tif (ds.getExtType(n) == Experiment.CODE_RXN) {idxRxn = n; extRxn = ds.getExtData(n);}\n\t\t\telse if (ds.getExtType(n) == Experiment.CODE_YLD) {idxYld = n; extYld = ds.getExtData(n);}\n\t\t\telse if (ds.getExtType(n) == Experiment.CODE) {idxExp = n; extExp = ds.getExtData(n);}\n\t\t}\n\n\t\t// note: the implied Reaction aspect is the only metadata field that actually holds content\n\t\tlet [nreactants, nproducts, nreagents] = this.parseReactionMetaData(extRxn);\n\t\tlet meta = `nreactants=${nreactants}\\nnproducts=${nproducts}\\nnreagents=${nreagents}\\n`;\n\t\tif (idxRxn >= 0) ds.setExtData(idxRxn, meta); else ds.appendExtension(Experiment.NAME_RXN, Experiment.CODE_RXN, meta);\n\t\tif (idxYld >= 0) ds.setExtData(idxYld, ''); else ds.appendExtension(Experiment.NAME_YLD, Experiment.CODE_YLD, '');\n\t\tif (idxExp >= 0) ds.setExtData(idxExp, ''); else ds.appendExtension(Experiment.NAME, Experiment.CODE, '');\n\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_TITLE, DataSheetColumn.String);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_CREATEDATE, DataSheetColumn.Real);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_MODIFYDATE, DataSheetColumn.Real);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_DOI, DataSheetColumn.String);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_META, DataSheetColumn.String);\n\n\t\tthis.forceColumn(Experiment.COLNAME_STEP_META, DataSheetColumn.String);\n\n\t\tfor (let n = 1; n <= nreactants; n++) this.forceReactantColumns(n);\n\t\tfor (let n = 1; n <= nreagents; n++) this.forceReagentColumns(n);\n\t\tfor (let n = 1; n <= nproducts; n++) this.forceProductColumns(n);\n\t}\n\n\t// force-adds respective groups of columns as necessary\n\tprivate forceColumn(colName:string, type:DataSheetColumn, suffix?:number):void\n\t{\n\t\tlet useName = colName + (suffix == null ? '' : suffix);\n\t\tthis.ds.ensureColumn(useName, type, Experiment.COLUMN_DESCRIPTIONS[colName]);\n\t}\n\tprivate forceReactantColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_STOICH, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_PRIMARY, DataSheetColumn.Boolean, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_META, DataSheetColumn.String, suffix);\n\t}\n\tprivate forceReagentColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_EQUIV, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_META, DataSheetColumn.String, suffix);\n\t}\n\tprivate forceProductColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_STOICH, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_YIELD, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_WASTE, DataSheetColumn.Boolean, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_META, DataSheetColumn.String, suffix);\n\t}\n\n\tprivate parseReactionMetaData(content:string):[number, number, number]\n\t{\n\t\tlet nreactants = 1, nproducts = 1, nreagents = 0;\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tif (line.startsWith('nreactants=')) nreactants = Math.max(nreactants, Math.min(100, parseInt(line.substring(11))));\n\t\t\telse if (line.startsWith('nproducts=')) nproducts = Math.max(nproducts, Math.min(100, parseInt(line.substring(10))));\n\t\t\telse if (line.startsWith('nreagents=')) nreagents = Math.max(nreagents, Math.min(100, parseInt(line.substring(10))));\n\t\t}\n\n\t\treturn [nreactants, nproducts, nreagents];\n\t}\n\n\t// more convenient version of above which scans the header; for routine use, post-setup\n\tprivate countComponents():[number, number, number]\n\t{\n\t\tlet nreactants = 0, nproducts = 0, nreagents = 0;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Experiment.CODE_RXN)\n\t\t{\n\t\t\t[nreactants, nproducts, nreagents] = this.parseReactionMetaData(this.ds.getExtData(n));\n\t\t\tbreak;\n\t\t}\n\t\treturn [nreactants, nproducts, nreagents];\n\t}\n\n\t// pulls out the respective component types from the underlying fields\n\tprivate fetchReactant(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_REACTANT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tlet stoich = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_STOICH}${idx}`);\n\t\tif (stoich) comp.stoich = stoich;\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_CONC}${idx}`);\n\t\tlet primary = this.ds.getBoolean(row, `${Experiment.COLNAME_REACTANT_PRIMARY}${idx}`);\n\t\tif (primary != null) comp.primary = primary;\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_META}${idx}`);\n\t\treturn comp;\n\t}\n\tprivate fetchProduct(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_PRODUCT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tlet stoich = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_STOICH}${idx}`);\n\t\tif (stoich) comp.stoich = stoich;\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_CONC}${idx}`);\n\t\tcomp.yield = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_YIELD}${idx}`);\n\t\tlet waste = this.ds.getBoolean(row, `${Experiment.COLNAME_PRODUCT_WASTE}${idx}`);\n\t\tif (waste != null) comp.waste = waste;\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_META}${idx}`);\n\t\treturn comp;\n\t}\n\tprivate fetchReagent(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_REAGENT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_REAGENT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_CONC}${idx}`);\n\t\tcomp.equiv = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_EQUIV}${idx}`);\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_REAGENT_META}${idx}`);\n\t\treturn comp;\n\t}\n\n\t// returns the list of operations needed to \"set\" an entry: this may involve adjusting columns, modifying extensions,\n\t// and deleting/inserting rows... as well as replacing cell content\n\tprivate putEntry(row:number, entry:ExperimentEntry, replace:boolean):void\n\t{\n\t\t// make sure the metadata is in place\n\t\tlet [preactants, pproducts, preagents] = this.countComponents();\n\t\tlet [nreactants, nproducts, nreagents] = [preactants, pproducts, preagents];\n\t\tfor (let step of entry.steps)\n\t\t{\n\t\t\tnreactants = Math.max(nreactants, step.reactants.length);\n\t\t\tnproducts = Math.max(nproducts, step.products.length);\n\t\t\tnreagents = Math.max(nreagents, step.reagents.length);\n\t\t}\n\t\tif (nreactants != preactants || nproducts != pproducts || nreagents != preagents)\n\t\t{\n\t\t\tlet meta = `nreactants=${nreactants}\\nnproducts=${nproducts}\\nnreagents=${nreagents}`;\n\t\t\tlet got = false;\n\t\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Experiment.CODE_RXN)\n\t\t\t{\n\t\t\t\tthis.ds.setExtData(n, meta);\n\t\t\t\tgot = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!got) this.ds.appendExtension(Experiment.NAME_RXN, Experiment.CODE_RXN, meta);\n\t\t}\n\n\t\t// make sure all columns are present and of the right type\n\t\tfor (let n = 1; n <= nreactants; n++) this.forceReactantColumns(n);\n\t\tfor (let n = 1; n <= nreagents; n++) this.forceReagentColumns(n);\n\t\tfor (let n = 1; n <= nproducts; n++) this.forceProductColumns(n);\n\n\t\t// sync up the number of steps, if necessary\n\t\tlet oldSteps = replace ? this.numberOfSteps(row) : 0, newSteps = entry.steps.length;\n\t\tif (oldSteps > newSteps)\n\t\t{\n\t\t\tfor (let n = newSteps; n < oldSteps; n++) this.ds.deleteRow(row + newSteps - 1);\n\t\t}\n\t\telse if (newSteps > oldSteps)\n\t\t{\n\t\t\tfor (let n = oldSteps; n < newSteps; n++) this.ds.insertRow(row + oldSteps);\n\t\t}\n\n\t\t// emit the header\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_TITLE, entry.title);\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE, entry.createDate == null ? null : entry.createDate.getTime() * 1E-3);\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_MODIFYDATE, entry.modifyDate == null ? null : entry.modifyDate.getTime() * 1E-3);\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_DOI, entry.doi);\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_META, entry.meta);\n\n\t\t// emit the steps and components\n\t\tfor (let s = 0; s < entry.steps.length; s++)\n\t\t{\n\t\t\tlet r = row + s, step = entry.steps[s];\n\t\t\tif (s == 0) for (let n = 0; n < step.reactants.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.reactants[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_REACTANT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_STOICH}${i}`, comp.stoich);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setBoolean(r, `${Experiment.COLNAME_REACTANT_PRIMARY}${i}`, comp.primary);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tfor (let n = 0; n < step.reagents.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.reagents[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_REAGENT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REAGENT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_EQUIV}${i}`, comp.equiv);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REAGENT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tfor (let n = 0; n < step.products.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.products[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_PRODUCT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_STOICH}${i}`, comp.stoich);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_YIELD}${i}`, comp.yield);\n\t\t\t\tthis.ds.setBoolean(r, `${Experiment.COLNAME_PRODUCT_WASTE}${i}`, comp.waste);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tthis.ds.setString(r, Experiment.COLNAME_STEP_META, step.meta);\n\t\t}\n\n\t\t// trash anything beyond the incoming limits\n\t\tfor (let s = 0; s < entry.steps.length; s++)\n\t\t{\n\t\t\tlet r = row + s;\n\t\t\tlet start = s > 0 ? 0 : entry.steps[s].reactants.length;\n\t\t\tfor (let n = start; n < nreactants; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_STOICH}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_PRIMARY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_META}${i}`);\n\t\t\t}\n\t\t\tfor (let n = entry.steps[s].reagents.length; n < nreagents; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_EQUIV}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_META}${i}`);\n\t\t\t}\n\t\t\tfor (let n = entry.steps[s].products.length; n < nproducts; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_STOICH}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_WASTE}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_META}${i}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return Experiment.NAME;}\n\n\tpublic rowFirstBlock(row:number):boolean {return this.isFirstStep(row);}\n\tpublic rowBlockCount(row:number):number {return this.numberOfSteps(row);}\n\n\tpublic initiateNewRow(row:number):void\n\t{\n\t\tlet curTime = new Date().getTime() * 1E-3;\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE, curTime);\n\t}\n\n\tpublic columnEffectivelyBlank(row:number):string[]\n\t{\n\t\treturn [Experiment.COLNAME_EXPERIMENT_CREATEDATE];\n\t}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet resv = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++)\n\t\t{\n\t\t\tlet name = colNames[n];\n\t\t\tif (Experiment.ALL_COLUMN_LITERALS.indexOf(name) >= 0)\n\t\t\t{\n\t\t\t\tresv[n] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (let pfx of Experiment.ALL_COLUMN_PREFIXES) if (name.startsWith(pfx))\n\t\t\t{\n\t\t\t\tresv[n] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn resv;\n\t}\n\n\t// render the experiment in scheme form\n\t// TODO: other forms can be rendered (summary, metrics, quantity)\n\tpublic numGraphicRenderings(row:number):number {return 1;}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering\n\t{\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\tlet layout = new ArrangeExperiment(this.getEntry(row), measure, policy);\n\t\tlayout.limitTotalW = 50 * policy.data.pointScale;\n\t\tlayout.limitTotalH = 50 * policy.data.pointScale;\n\t\tlayout.includeStoich = true;\n\t\tlayout.includeAnnot = false;\n\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawExperiment(layout, metavec).draw();\n\t\tmetavec.normalise();\n\n\t\treturn {name: 'Scheme', metavec: metavec};\n\t}\n\n/*\topen override func numTextRenderings(row:Int) -> Int {return 1}\n\topen override func produceTextRendering(row:Int, idx:Int) -> (name:String, descr:String, text:String)\n\t{\n\t\tvar retName = \"\", retDescr = \"\", retText = \"\"\n\t\tdata.observe() {(ds:DataSheet) in (retName, retDescr, retText) = self.produceTextRendering(row:row, idx:idx, ds:ds)}\n\t\treturn (name:retName, descr:retDescr, text:retText)\n\t}\n\topen override func produceTextRendering(row:Int, idx:Int, ds:DataSheet) -> (name:String, descr:String, text:String)\n\t{\n\t\tassert(idx == 0, \"Invalid index to Experiment.produceTextRendering\")\n\n\t\tlet entry = getEntry(row, ds:ds)\n\t\tvar lines:[String] = []\n\n\t\tif !entry.title.isEmpty {lines.append(\"Title: \\(entry.title)\")}\n\n\t\tlet datefmt = DateFormatter()\n\t\tdatefmt.dateStyle = .medium\n\t\tdatefmt.timeStyle = .medium\n\n\t\tif let createDate = entry.createDate {lines.append(\"Created: \\(datefmt.string(from:createDate))\")}\n\t\tif let modifyDate = entry.modifyDate {lines.append(\"Modified: \\(datefmt.string(from:modifyDate))\")}\n\n\t\tif !entry.doi.isEmpty {lines.append(\"DOI: \\(entry.doi)\")}\n\n\t\tlet txt = lines.joined(separator:\"\\n\")\n\n\t\treturn (name:\"Header\", descr:\"Experiment description and metadata\", text:txt)\n\t}\n\n\topen override func numGraphicRenderings(row:Int) -> Int {return 3}\n\topen override func produceGraphicRendering(row:Int, idx:Int, policy:RenderPolicy, vg:VectorGfxBuilder) -> (name:String, vg:VectorGfxBuilder)\n\t{\n\t\tvar retName = \"\", retVG = vg\n\t\tdata.observe() {(ds:DataSheet) in (retName, retVG) = self.produceGraphicRendering(row:row, idx:idx, policy:policy, vg:vg, ds:ds)}\n\t\treturn (name:retName, vg:retVG)\n\t}\n\topen override func produceGraphicRendering(row:Int, idx:Int, policy:RenderPolicy, vg:VectorGfxBuilder, ds:DataSheet) -> (name:String, vg:VectorGfxBuilder)\n\t{\n\t\tif idx == Render.Scheme\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExperiment(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\n\t\t\tlayout.limitTotalW = 50 * policy.pointScale\n\t\t\tlayout.limitTotalH = 50 * policy.pointScale\n\t\t\tlayout.arrange()\n\n\t\t\t//vg.drawLine(x1:0, y1:0, x2:layout.width, y2:layout.height, colour:0xFF0000, thickness:1)\n\t\t\tlet vgexp = DrawExperiment(layout:layout, vg:vg)\n\t\t\tvgexp.draw()\n\n\t\t\treturn (name:\"Scheme\", vg:vg)\n\t\t}\n\t\telse if idx == Render.Quantity\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExpQuant(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\t\t\tlayout.idealAspect = 1.4\n\t\t\tlayout.arrange()\n\t\t\tlayout.render(vg)\n\t\t}\n\t\telse if idx == Render.Metrics\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExpMetrics(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\t\t\tlayout.idealAspect = 1.4\n\t\t\tlayout.arrange()\n\t\t\tlayout.render(vg)\n\t\t}\n\t\treturn (name:\"\", vg:vg)\n\t}*/\n}\n\nregisterAspect(Experiment);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Vec} from '../util/Vec';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {MeasurementData} from './MeasurementData';\n\n/*\n\tMixture: stores metadata about various columns such that they can be corralled into a hierarchical form that represents\n\ta mixed group of chemical substances, where individual components and branches have structure, name, quantity and various\n\tother properties when available. Designed to be compatible with the Mixfile format (https://github.com/cdd/mixtures) and\n\tIUPAC Mixtures InChI (MInChI) notation.\n*/\n\nexport enum MixtureAttributeType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\nexport interface MixtureAttribute\n{\n\tcolumn:string;\n\tposition:number[];\n\ttype:MixtureAttributeType;\n\tinfo?:string[];\n}\n\nexport interface MixtureHeader\n{\n\tattributes:MixtureAttribute[];\n}\n\nexport class Mixture extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.Mixture';\n\tpublic static NAME = 'Mixture';\n\n\tpublic static SUFFIX_VALUE = '';\n\tprivate header:MixtureHeader = {attributes: []};\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata\n\tpublic static isMixture(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == Mixture.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(Mixture.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():MixtureHeader\n\t{\n\t\treturn this.header;\n\t}\n\tpublic setHeader(header:MixtureHeader):void\n\t{\n\t\tthis.header = header;\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Mixture.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tthis.header = {attributes: []};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Mixture.CODE)\n\t\t{\n\t\t\tthis.header = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.header);\n\t\t\tthis.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):MixtureHeader\n\t{\n\t\tlet header:MixtureHeader = {attributes: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('attr='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length < 3) continue;\n\t\t\t\tlet column = MoleculeStream.skUnescape(bits[0]);\n\t\t\t\tlet position:number[] = [];\n\t\t\t\tif (bits[1] != '0') position = bits[1].split('.').map((str) => parseInt(str));\n\t\t\t\tlet type = bits[2] as MixtureAttributeType;\n\t\t\t\tlet info:string[] = [];\n\t\t\t\tfor (let n = 3; n < bits.length; n++) info.push(MoleculeStream.skUnescape(bits[n]));\n\n\t\t\t\theader.attributes.push({column, position, type, info});\n\t\t\t}\n\t\t}\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:MixtureHeader):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let a of header.attributes)\n\t\t{\n\t\t\tlet bits:string[] = [MoleculeStream.skEscape(a.column)];\n\t\t\tif (Vec.isBlank(a.position)) bits.push('0'); else bits.push(a.position.join('.'));\n\t\t\tbits.push(a.type);\n\t\t\tif (a.info) for (let str of a.info) bits.push(MoleculeStream.skEscape(str));\n\t\t\tlines.push('attr=' + bits.join(','));\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return MeasurementData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet names = new Set<string>();\n\t\tfor (let a of this.header.attributes) names.add(a.column);\n\t\tlet resv:boolean[] = [];\n\t\tfor (let col of colNames) resv.push(names.has(col));\n\t\treturn resv;\n\t}\n}\n\nregisterAspect(Mixture);\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {fltEqual} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {ForeignMoleculeTransient} from './ForeignMolecule';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\n\n/* eslint-disable no-multi-spaces */\n\n/*\n\tA meta-description of a molecule that divides the molecular graph up into chunks based on their\n\tability to provide pi-like resonance electrons. Atoms that are deemed to be invariant to the passage\n\tof resonance electrons (most notably sp3 carbons) are considered to break up these pathways. The\n\tremaining components-of-resonance are assigned bond orders based on the ratio of electrons to # bonds.\n*/\n\nexport interface DotPathBlock\n{\n\tatoms:number[];\n\tbonds:number[];\n\t// (average bond order = numer/denom)\n\tnumer:number; // # of electrons contributed to the block\n\tdenom:number; // 2 * number of bonds\n}\n\n// discrete bond type categories (these collapse the fractional bond orders)\nexport const enum DotPathBond\n{\n\tO0 = 0, // exactly zero\n\tO01 = 1, // from 0..1 (exclusive)\n\tO1 = 2, // exactly one\n\tO12 = 3, // from 1..2 (exclusive)\n\tO2 = 4, // exactly two\n\tO23 = 5, // from 2..3 (exclusive)\n\tO3 = 6, // exactly three\n\tO3X = 7, // more than three\n}\n\n// discrete charge type categories (these collapse fractional charges)\nexport const enum DotPathCharge\n{\n\tN1X = -3, // less than -1\n\tN1 = -2, // exactly -1\n\tN01 = -1, // a bit less than zero\n\tZ0 = 0, // exactly zero\n\tP01 = 1, // a bit more than zero\n\tP1 = 2, // exactly +1\n\tP1X = 3, // more than +1\n}\n\nexport class DotPath\n{\n\tpublic maskBlock:boolean[]; // atoms that are considered blocking; generally not important for interpretation\n\tpublic paths:DotPathBlock[] = []; // the blocks of dots: note that only bonds that have a different bond order under the dot-scheme are listed\n\n\t// ------------------ public methods --------------------\n\n\t// instantiates the DotPath content right away, unless the molecule argument is null\n\tconstructor(public mol:Molecule)\n\t{\n\t\tif (mol) this.calculate();\n\t}\n\n\t// shallow clone\n\tpublic clone():DotPath\n\t{\n\t\tlet dup = new DotPath(null);\n\t\tdup.mol = this.mol;\n\t\tdup.maskBlock = this.maskBlock;\n\t\tdup.paths = this.paths.slice(0);\n\t\treturn dup;\n\t}\n\n\t// returns recomputed bond orders: any atom that's part of a dot-path gets assigned with a fractional bond order based on\n\t// the path characteristics, while the rest of them get their original integral bond order\n\tpublic getBondOrders():number[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet orders:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) orders.push(mol.bondOrder(n));\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\t// compute fractional bond order, and guard against rounding errors (i.e. want literal whole numbers when appropriate)\n\t\t\tlet fract = path.numer / path.denom;\n\t\t\tfor (let n = 1; n <= 5; n++) if (fltEqual(fract, n)) fract = n;\n\t\t\tfor (let b of path.bonds) orders[b - 1] = fract;\n\t\t}\n\t\treturn orders;\n\t}\n\n\t// as above, except returns the bond orders as predetermined bins, corresponding to ordinals and intermediates\n\tpublic getBondClasses():DotPathBond[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet classes:DotPathBond[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bo = mol.bondOrder(n);\n\t\t\tclasses.push(bo == 0 ? DotPathBond.O0 :\n\t\t\t\t\t\t bo == 1 ? DotPathBond.O1 :\n\t\t\t\t\t\t bo == 2 ? DotPathBond.O2 :\n\t\t\t\t\t\t bo == 3 ? DotPathBond.O3 : DotPathBond.O3X);\n\t\t}\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\t// compute fractional bond order, and guard against rounding errors (i.e. want literal whole numbers when appropriate)\n\t\t\tlet fract = path.numer / path.denom;\n\t\t\tlet bcls = fltEqual(fract, 0) ? DotPathBond.O0 :\n\t\t\t\t\t   fltEqual(fract, 1) ? DotPathBond.O1 :\n\t\t\t\t\t   fltEqual(fract, 2) ? DotPathBond.O2 :\n\t\t\t\t\t   fltEqual(fract, 3) ? DotPathBond.O3 :\n\t\t\t\t\t   fract < 1 ? DotPathBond.O01 :\n\t\t\t\t\t   fract < 2 ? DotPathBond.O12 :\n\t\t\t\t\t   fract < 3 ? DotPathBond.O23 : DotPathBond.O3X;\n\t\t\tfor (let b of path.bonds) classes[b - 1] = bcls;\n\t\t}\n\t\treturn classes;\n\t}\n\n\t// return one of the categories of fractional charges\n\tpublic getChargeClasses():DotPathCharge[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet classes:DotPathCharge[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet chg = mol.atomCharge(n);\n\t\t\tclasses.push(chg == 0 ? DotPathCharge.Z0 :\n\t\t\t\t\t\t chg == -1 ? DotPathCharge.N1 :\n\t\t\t\t\t\t chg == 1 ? DotPathCharge.P1 :\n\t\t\t\t\t\t chg < -1 ? DotPathCharge.N1X : DotPathCharge.P1X);\n\t\t}\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\tlet chg = 0;\n\t\t\tfor (let a of path.atoms) chg += mol.atomCharge(a);\n\t\t\tchg /= path.atoms.length;\n\t\t\tlet ccls = fltEqual(chg, 0) ? DotPathCharge.Z0 :\n\t\t\t\t\t   fltEqual(chg, -1) ? DotPathCharge.N1 :\n\t\t\t\t\t   fltEqual(chg, 1) ? DotPathCharge.P1 :\n\t\t\t\t\t   chg > -1 && chg < 0 ? DotPathCharge.N01 :\n\t\t\t\t\t   chg > 0 && chg < 1 ? DotPathCharge.P01 :\n\t\t\t\t\t   chg < -1 ? DotPathCharge.N1X : DotPathCharge.P1X;\n\t\t\tfor (let a of path.atoms) classes[a - 1] = ccls;\n\t\t}\n\t\treturn classes;\n\t}\n\n\t// return for each atom the total charge of the path to which it belongs (which is related to above, but isn't binned)\n\tpublic getAggregateCharges():number[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet chg:number[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) chg[n - 1] = mol.atomCharge(n);\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\tlet total = 0;\n\t\t\tfor (let a of path.atoms) total += chg[a - 1];\n\t\t\tfor (let a of path.atoms) chg[a - 1] = total;\n\t\t}\n\t\treturn chg;\n\t}\n\n\t// for debugging purposes\n\tpublic toString():string\n\t{\n\t\tlet str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n\t\tfor (let p of this.paths) str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n\t\treturn str;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\tprivate calculate():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// gather metrics\n\t\tlet nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n\t\tlet bondsum = Vec.numberArray(0, na); // explicit bond orders + virtual hydrogens\n\t\tfor (let n = 0; n < na; n++) bondsum[n] = mol.atomHydrogens(n + 1);\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tif (bo != 1)\n\t\t\t{\n\t\t\t\tnonsingle[bfr - 1] = true;\n\t\t\t\tnonsingle[bto - 1] = true;\n\t\t\t}\n\t\t\tif (bo >= 2)\n\t\t\t{\n\t\t\t\tpibonded[bfr - 1] = true;\n\t\t\t\tpibonded[bto - 1] = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n\t\t\t\tif (blk1 >= 3 || blk2 >= 3)\n\t\t\t\t{\n\t\t\t\t\tmetalbonded[bfr - 1] = true;\n\t\t\t\t\tmetalbonded[bto - 1] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbondsum[bfr - 1] += bo;\n\t\t\tbondsum[bto - 1] += bo;\n\n\t\t\t// respect externally indicated aromaticity\n\t\t\tif (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0)\n\t\t\t{\n\t\t\t\tpibonded[bfr - 1] = true;\n\t\t\t\tpibonded[bto - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\t// \"implied pi\" atoms are those which are wedged between two or more pi atoms; this is extended out just one iteration\n\t\tlet impliedPi = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= na; n++) if (!pibonded[n - 1])\n\t\t{\n\t\t\tlet adjpi = 0;\n\t\t\tfor (let adj of mol.atomAdjList(n)) if (pibonded[adj - 1] || metalbonded[adj - 1]) adjpi++;\n\t\t\tif (adjpi >= 2) impliedPi[n - 1] = true;\n\t\t}\n\t\tfor (let n = 0; n < na; n++) if (impliedPi[n]) pibonded[n] = true;\n\n\t\t// first pass: find things that are definitely blocking, or maybe blocking\n\t\tthis.maskBlock = Vec.booleanArray(false, na);\n\t\tlet maskMaybe = Vec.booleanArray(false, na); // might be blocking, as long as neighbours also maybe\n\n\t\t// main groups which could potentially be blocking if they are neutral and have just sigma bonds that add up to the regular octet valence\n\t\tconst COULD_BLOCK =\n\t\t[\n\t\t\tChemistry.ELEMENT_H,\n\t\t\tChemistry.ELEMENT_B,  Chemistry.ELEMENT_C,  Chemistry.ELEMENT_N,  Chemistry.ELEMENT_O,  Chemistry.ELEMENT_F,\n\t\t\tChemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P,  Chemistry.ELEMENT_S,  Chemistry.ELEMENT_Cl,\n\t\t\tChemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n\t\t\tChemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n\t\t\tChemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n\t\t];\n\n\t\t// acids/bases: whenever one is paired with the other, it's not a blocking possibility\n\t\tconst ACIDS =\n\t\t[\n\t\t\tChemistry.ELEMENT_B,\n\t\t\tChemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n\t\t\tChemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n\t\t\tChemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n\t\t\tChemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n\t\t];\n\t\tconst BASES =\n\t\t[\n\t\t\tChemistry.ELEMENT_N,  Chemistry.ELEMENT_O,  Chemistry.ELEMENT_F,\n\t\t\tChemistry.ELEMENT_P,  Chemistry.ELEMENT_S,  Chemistry.ELEMENT_Cl,\n\t\t\tChemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n\t\t\tChemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n\t\t\tChemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n\t\t];\n\n\t\tskip: for (let n = 0; n < na; n++)\n\t\t{\n\t\t\tconst a = n + 1;\n\n\t\t\t// must be all single bonds, uncharged, non-radical, in the list of potentially block elements, and have a bonding sum equal\n\t\t\t// to the valence\n\t\t\tif (nonsingle[n] || pibonded[n]) continue;\n\t\t\tif (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0) continue;\n\t\t\tconst atno = mol.atomicNumber(a);\n\t\t\tif (atno == 0)\n\t\t\t{\n\t\t\t\tthis.maskBlock[n] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (COULD_BLOCK.indexOf(atno) < 0) continue;\n\t\t\tif (bondsum[n] != Chemistry.ELEMENT_BONDING[atno]) continue;\n\n\t\t\tif (ACIDS.indexOf(atno) >= 0)\n\t\t\t{\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (BASES.indexOf(mol.atomicNumber(adj)) >= 0) continue skip;\n\t\t\t}\n\t\t\tif (BASES.indexOf(atno) >= 0)\n\t\t\t{\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0) continue skip;\n\t\t\t}\n\n\t\t\tmaskMaybe[n] = true;\n\n\t\t\t// if carbon and has no metal neighbours, it's sp3 and definitely blocking\n\t\t\tif (atno == Chemistry.ELEMENT_C)\n\t\t\t{\n\t\t\t\tlet hasMetal = false;\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0) hasMetal = true;\n\t\t\t\tif (!hasMetal) this.maskBlock[n] = true;\n\t\t\t}\n\t\t\t// ... or if hydrogen, have already established that there's no interesting valence, so it's blocking\n\t\t\telse if (atno == Chemistry.ELEMENT_H)\n\t\t\t{\n\t\t\t\tthis.maskBlock[n] = true;\n\t\t\t}\n\t\t}\n\n\t\t// any \"maybe\" atom that is surrounded by other maybe atoms gets approved as a blocking atom\n\t\t// note: this is non-chaining; might need to reconsider this, i.e. make maybe-to-not propagate\n\t\tskip: for (let n = 0; n < na; n++) if (maskMaybe[n] && !this.maskBlock[n])\n\t\t{\n\t\t\tfor (let a of mol.atomAdjList(n + 1)) if (!maskMaybe[a - 1]) continue skip;\n\t\t\tthis.maskBlock[n] = true;\n\t\t}\n\n\t\t// now build the graph, and pick apart the blocked units\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tfor (let n = 0; n < na; n++) if (this.maskBlock[n]) g.isolateNode(n);\n\t\tfor (let cc of g.calculateComponentGroups())\n\t\t{\n\t\t\tif (cc.length == 1) continue;\n\t\t\tlet amask = Vec.idxMask(cc, na);\n\t\t\tVec.addTo(cc, 1);\n\n\t\t\tlet p:DotPathBlock =\n\t\t\t{\n\t\t\t\tatoms: cc,\n\t\t\t\tbonds: [],\n\t\t\t\tnumer: 0,\n\t\t\t\tdenom: 0\n\t\t\t};\n\t\t\tfor (let n = 1; n <= nb; n++) if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1]) p.bonds.push(n);\n\n\t\t\tlet totalHave = 0, totalWant = 0;\n\t\t\tfor (let a of p.atoms)\n\t\t\t{\n\t\t\t\tlet others = mol.atomHydrogens(a); // bonds to atoms not in path; these are single bonds, by definition\n\t\t\t\tfor (let o of mol.atomAdjList(a)) if (!amask[o - 1]) others++;\n\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tlet have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n\t\t\t\tlet want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n\t\t\t\ttotalHave += have;\n\t\t\t\ttotalWant += want;\n\t\t\t}\n\n\t\t\tlet electrons = Math.min(totalHave, totalWant);\n\n\t\t\tp.numer = electrons;\n\t\t\tp.denom = 2 * p.bonds.length;\n\t\t\tthis.paths.push(p);\n\t\t}\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2024 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\nimport {Graph} from './Graph';\nimport {GeomUtil} from '../util/Geom';\nimport {norm2_xy, norm_xy} from '../util/util';\n\n/*\n\tCalculates a \"pseudo-embedding\" for a molecule, for the purposes of classifying bonds that intersect, by deciding which\n\tone is \"higher\" than the other. This is useful for rendering purposes, when lines need to be drawn as disconnected\n\tinstances.\n*/\n\nexport interface LineCrossing\n{\n\tbond1:number;\n\tbond2:number;\n\thigher:number; // 0=neither, 1 or 2\n}\n\nexport class PseudoEmbedding\n{\n\tpublic bondMask:boolean[] = null; // optional bond mask: setting a bond to false excludes it from consideration\n\tpublic crossings:LineCrossing[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mol:Molecule)\n\t{\n\t}\n\n\t// perform the embedding calculation, based on components that involve some number of line-crossings\n\tpublic calculateCrossings():void\n\t{\n\t\tconst {mol, bondMask, crossings} = this;\n\t\tlet na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// enumerate all the bond-crossings, and keep a mask of atoms that are involved\n\t\tlet maskCross = Vec.booleanArray(false, na);\n\t\tfor (let i = 1; i < nb; i++)\n\t\t{\n\t\t\tif (bondMask && !bondMask[i - 1]) continue;\n\n\t\t\tlet x1 = mol.atomX(mol.bondFrom(i)), y1 = mol.atomY(mol.bondFrom(i));\n\t\t\tlet x2 = mol.atomX(mol.bondTo(i)), y2 = mol.atomY(mol.bondTo(i));\n\t\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\t\tx1 += dx * 0.001;\n\t\t\ty1 += dy * 0.001;\n\t\t\tx2 -= dx * 0.001;\n\t\t\ty2 -= dy * 0.001;\n\n\t\t\tfor (let j = i + 1; j <= nb; j++)\n\t\t\t{\n\t\t\t\tif (bondMask && !bondMask[j - 1]) continue;\n\n\t\t\t\tlet x3 = mol.atomX(mol.bondFrom(j)), y3 = mol.atomY(mol.bondFrom(j));\n\t\t\t\tlet x4 = mol.atomX(mol.bondTo(j)), y4 = mol.atomY(mol.bondTo(j));\n\t\t\t\tdx = x4 - x3;\n\t\t\t\tdy = y4 - y3;\n\t\t\t\tx3 += dx * 0.001;\n\t\t\t\ty3 += dy * 0.001;\n\t\t\t\tx4 -= dx * 0.001;\n\t\t\t\ty4 -= dy * 0.001;\n\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4))\n\t\t\t\t{\n\t\t\t\t\tcrossings.push({bond1: i, bond2: j, higher: 0});\n\n\t\t\t\t\tmaskCross[mol.bondFrom(i) - 1] = true;\n\t\t\t\t\tmaskCross[mol.bondTo(i) - 1] = true;\n\t\t\t\t\tmaskCross[mol.bondFrom(j) - 1] = true;\n\t\t\t\t\tmaskCross[mol.bondTo(j) - 1] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (crossings.length == 0) return; // nothing to do\n\n\t\t// extend the atom mask to include ring blocks thereof\n\t\tlet crossRblk = new Set<number>();\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet rblk = mol.atomRingBlock(n);\n\t\t\tif (rblk > 0) crossRblk.add(rblk);\n\t\t}\n\t\tfor (let n = 1; n <= na; n++) if (!maskCross[n - 1])\n\t\t{\n\t\t\tlet rblk = mol.atomRingBlock(n);\n\t\t\tif (rblk > 0 && crossRblk.has(rblk)) maskCross[n - 1] = true;\n\t\t}\n\n\t\t// connect up islands within components, then divide the whole thing into groups\n\t\tlet maskComp = this.connectMaskedComponents(maskCross);\n\t\tlet g = Graph.fromMoleculeMask(mol, maskComp);\n\t\tlet ccgrp = g.calculateComponentGroups();\n\t\tfor (let n = 0; n < ccgrp.length; n++)\n\t\t{\n\t\t\tfor (let i = 0; i < ccgrp[n].length; i++) ccgrp[n][i] = g.getIndex(ccgrp[n][i]);\n\t\t\tthis.embedComponent(ccgrp[n]);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// for an incoming mask that specifies some number of atoms, returns a new mask which joins up any connections between\n\t// these groups, i.e. any atom that is on a path between two originally masked atoms is included in the result\n\tprivate connectMaskedComponents(imask:boolean[]):boolean[]\n\t{\n\t\tconst {mol} = this;\n\n\t\tlet omask = Vec.duplicate(imask);\n\t\tlet gmol = Graph.fromMolecule(mol); // will be duplicated many times; faster to clone than to build from mol\n\n\t\tlet na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet maskNever = Vec.booleanArray(false, na);\n\n\t\t// until no further changes: keep looking for bonds that bridge between mask/not-mask; create a graph with the edge\n\t\t// missing, and see if the not-mask atom is now in a connected component that shares a masked atom; if it is, then\n\t\t// set its mask, because it lies along a path between two disconnected groups\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n <= nb; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\t\tlet aidx = 0;\n\t\t\t\tif (omask[bfr - 1] && !omask[bto - 1]) aidx = bto;\n\t\t\t\telse if (omask[bto - 1] && !omask[bfr - 1]) aidx = bfr;\n\t\t\t\telse continue;\n\t\t\t\tif (maskNever[aidx - 1]) continue; // don't want to reinvestigate unless we have to\n\n\t\t\t\t// test the components of the disconnection\n\t\t\t\t// (note: this is relatively expensive, and could be optimised somewhat, if this becomes a problem)\n\t\t\t\tlet g = gmol.clone();\n\t\t\t\tg.removeEdge(bfr - 1, bto - 1);\n\t\t\t\tlet cc = g.calculateComponents();\n\t\t\t\tlet hit = false;\n\t\t\t\tfor (let i = 0; i < na; i++) if (omask[i] && cc[i] == cc[aidx - 1])\n\t\t\t\t{\n\t\t\t\t\thit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (hit)\n\t\t\t\t{\n\t\t\t\t\tomask[aidx - 1] = true;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\telse maskNever[aidx - 1] = true;\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\n\t\treturn omask;\n\t}\n\n\t// for a group of atoms (1-based), perform the embedding\n\tprivate embedComponent(atoms:number[]):boolean[]\n\t{\n\t\tconst {mol, crossings} = this;\n\t\tlet na = mol.numAtoms, gsz = atoms.length;\n\t\tlet amask = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < gsz; n++) amask[atoms[n] - 1] = true;\n\n\t\tlet z = Vec.numberArray(0, gsz), newZ = new Array(gsz);\n\n\t\tif (this.seedFromInternalWedges(atoms, amask, z)) {}\n\t\telse if (this.seedFromExternalWedges(atoms, amask, z)) {}\n\t\telse if (this.seedFromPerspective(atoms, amask, z)) {}\n\t\telse if (this.seedFromDensity(atoms, amask, z)) {}\n\t\telse return; // do nothing\n\n\t\tlet ucount = this.normaliseHeights(z);\n\n\t\twhile (ucount < gsz)\n\t\t{\n\t\t\tthis.expandOutward(z, newZ, atoms, amask);\n\t\t\tlet ncount = this.normaliseHeights(newZ);\n\t\t\tif (ncount == ucount) break;\n\n\t\t\tfor (let n = 0; n < gsz; n++) z[n] = newZ[n];\n\t\t\tucount = ncount;\n\t\t}\n\n\t\tfor (let cross of crossings)\n\t\t{\n\t\t\tif (amask[mol.bondFrom(cross.bond1) - 1]) this.updateCrossing(cross, atoms, z);\n\t\t}\n\t}\n\n\t// computes initial Z-positions from wedge bonds within the group, or returns false\n\tprivate seedFromInternalWedges(atoms:number[], amask:boolean[], z:number[]):boolean\n\t{\n\t\tconst {mol} = this;\n\t\tlet nb = mol.numBonds;\n\t\tlet success = false;\n\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED) continue;\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tif (!amask[bfr - 1] || !amask[bto - 1]) continue;\n\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\t// source atom lowered, destination atom raised\n\t\t\t\tz[atoms.indexOf(bfr)] -= 0.5;\n\t\t\t\tz[atoms.indexOf(bto)] += 0.5;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// source atom raised, destination atom lowered\n\t\t\t\tz[atoms.indexOf(bfr)] += 0.5;\n\t\t\t\tz[atoms.indexOf(bto)] -= 0.5;\n\t\t\t}\n\t\t\tsuccess = true;\n\t\t}\n\n\t\treturn success;\n\t}\n\n\t// computes initial Z-positions from wedge bonds exterior to the group, or returns false\n\tprivate seedFromExternalWedges(atoms:number[], amask:boolean[], z:number[]):boolean\n\t{\n\t\tconst {mol} = this;\n\t\tlet nb = mol.numBonds;\n\t\tlet success = false;\n\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED) continue;\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\n\t\t\tif (amask[bfr - 1])\n\t\t\t{\n\t\t\t\tz[atoms.indexOf(bfr)] += bt == Molecule.BONDTYPE_INCLINED ? 1 : -1;\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t\telse if (amask[bto - 1])\n\t\t\t{\n\t\t\t\tz[atoms.indexOf(bto)] += bt == Molecule.BONDTYPE_INCLINED ? -1 : 1;\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t}\n\n\t\treturn success;\n\t}\n\n\t// tries to infer up/down from perspective drawing, by elevating atoms with longer bond lengths\n\tprivate seedFromPerspective(atoms:number[], amask:boolean[], z:number[]):boolean\n\t{\n\t\tconst {mol} = this;\n\t\tlet nb = mol.numBonds;\n\n\t\tlet avgdist = 0, maxdist = 0;\n\t\tlet count = 0, bidx = 0;\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tif (!amask[bfr - 1] || !amask[bto - 1]) continue;\n\t\t\tlet d = norm_xy(mol.atomX(bfr) - mol.atomX(bto), mol.atomY(bfr) - mol.atomY(bto));\n\t\t\tavgdist += d;\n\t\t\tcount++;\n\t\t\tif (d > maxdist)\n\t\t\t{\n\t\t\t\tmaxdist = d;\n\t\t\t\tbidx = n;\n\t\t\t}\n\t\t}\n\t\tif (count == 0 || bidx == 0) return false;\n\t\tavgdist /= count;\n\n\t\tif (maxdist < avgdist * 1.02) return false;\n\n\t\tz[atoms.indexOf(mol.bondFrom(bidx))] = 1;\n\t\tz[atoms.indexOf(mol.bondTo(bidx))] = 1;\n\t\treturn true;\n\t}\n\n\t// looks for densely-clustered atoms to raise above the rest\n\tprivate seedFromDensity(atoms:number[], amask:boolean[], z:number[]):boolean\n\t{\n\t\tconst {mol} = this;\n\t\tlet highIdx = 0;\n\t\tlet highCongest = 0;\n\t\tfor (let i = 0; i < atoms.length; i++)\n\t\t{\n\t\t\tlet x1 = mol.atomX(atoms[i]), y1 = mol.atomY(atoms[i]);\n\t\t\tlet congest = 0;\n\t\t\tfor (let j = 0; j < atoms.length; j++) if (i != j)\n\t\t\t\tcongest += 1.0 / (0.001 + norm2_xy(mol.atomX(atoms[j]) - x1, mol.atomY(atoms[j]) - y1));\n\t\t\tif (congest > highCongest)\n\t\t\t{\n\t\t\t\thighIdx = atoms[i];\n\t\t\t\thighCongest = congest;\n\t\t\t}\n\t\t}\n\n\t\tif (highIdx == 0) return false;\n\n\t\tz[atoms.indexOf(highIdx)] = 1;\n\t\treturn true;\n\t}\n\n\t// for a set of arbitrary Z-axis values, normalises them so that they are integral, where the lowest value is 1, and the\n\t// highest value is equal to the number of {approximately} unique values, which will be equal to the array length if they\n\t// have fully distinguished themselves; and then it shifts them down so that the median point is at 0\n\tprivate normaliseHeights(z:number[]):number\n\t{\n\t\tVec.addTo(z, -Vec.min(z)); // lowest value is now 0\n\t\tlet eps = Vec.max(z) * 1E-6; // close enough to numerical precision\n\n\t\tlet idx = Vec.idxSort(z);\n\t\tlet prevZ = -1;\n\t\tlet mark = 0;\n\t\tfor (let n = 0; n < idx.length; n++)\n\t\t{\n\t\t\tif (prevZ < 0 || Math.abs(prevZ - z[idx[n]]) > eps) mark++;\n\t\t\tprevZ = z[idx[n]];\n\t\t\tz[idx[n]] = mark;\n\t\t}\n\n\t\tVec.addTo(z, -0.5 * (1 + Vec.max(z))); // set it so that 0 is the midpoint\n\n\t\treturn mark;\n\t}\n\n\t// for the indicated atom subset, walk through and splash a portion of each atom's height onto each of its neighbours\n\tprivate expandOutward(z:number[], newZ:number[], atoms:number[], amask:boolean[]):void\n\t{\n\t\tconst {mol} = this;\n\t\tlet gsz = atoms.length;\n\t\tfor (let n = 0; n < gsz; n++) newZ[n] = z[n];\n\t\tfor (let n = 0; n < gsz; n++)\n\t\t{\n\t\t\tlet adj = mol.atomAdjList(atoms[n]);\n\t\t\tfor (let i = 0; i < adj.length; i++) if (amask[adj[i] - 1]) newZ[atoms.indexOf(adj[i])] += 0.1 * z[n];\n\t\t}\n\t}\n\n\t// updates the line crossing with the results of Z coordinates, to decide which one gets to go on top\n\tprivate updateCrossing(cross:LineCrossing, atoms:number[], z:number[]):void\n\t{\n\t\tconst {mol} = this;\n\t\tlet bfr1 = mol.bondFrom(cross.bond1), bto1 = mol.bondTo(cross.bond1);\n\t\tlet bfr2 = mol.bondFrom(cross.bond2), bto2 = mol.bondTo(cross.bond2);\n\t\tlet idx1 = atoms.indexOf(bfr1), idx2 = atoms.indexOf(bto1);\n\t\tlet idx3 = atoms.indexOf(bfr2), idx4 = atoms.indexOf(bto2);\n\t\tif (idx1 < 0 || idx2 < 0 || idx3 < 0 || idx4 < 0) return;\n\t\tlet x1a = mol.atomX(bfr1), y1a = mol.atomY(bfr1), x1b = mol.atomX(bto1), y1b = mol.atomY(bto1);\n\t\tlet x2a = mol.atomX(bfr2), y2a = mol.atomY(bfr2), x2b = mol.atomX(bto2), y2b = mol.atomY(bto2);\n\t\tlet xy = GeomUtil.lineIntersect(x1a, y1a, x1b, y1b, x2a, y2a, x2b, y2b);\n\t\tlet dx1 = x1b - x1a, dy1 = y1b - y1a, dx2 = x2b - x2a, dy2 = y2b - y2a;\n\t\tlet ext1 = Math.abs(dx1) > Math.abs(dy1) ? (xy[0] - x1a) / dx1 : (xy[1] - y1a) / dy1;\n\t\tlet ext2 = Math.abs(dx2) > Math.abs(dy2) ? (xy[0] - x2a) / dx2 : (xy[1] - y2a) / dy2;\n\n\t\t// sanity check: if either of them isn't in the range 0..1, this is a bug (should be impossible)\n\t\tif (ext1 < 0 || ext1 > 1 || ext2 < 0 || ext2 > 1) return; // (nah) throw new GraphFaultException(\"Bug in calculating line-crossings\");\n\n\t\tlet z1a = z[idx1], z1b = z[idx2], z2a = z[idx3], z2b = z[idx4];\n\t\tlet z1 = z1a + ext1 * (z1b - z1a), z2 = z2a + ext2 * (z2b - z2a);\n\t\tcross.higher = z1 > z2 ? 1 : 2;\n\t}\n}\n\n\n","/*\n    WebMolKit\n\n    (c) 2010-2024 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil, Spline} from './Geom';\nimport {DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tGiven a collection of points that is shaped somewhat like an oval-esque outline (i.e. a molecule ring that might be squished and rotated\n\tsomewhat) finds a rotated ellipse that fills it out, up to a certain margin distance.\n\n\tThere is no straightforward mathematical formula for this, and so the algorithm is done by way of a crude optimisation. It is intended\n\tto be more fast than correct, since it needs to run on an interactive timescale. Edge cases may fail in ugly ways.\n\n\tThe bezier is parametrised as (cx,cy,rw,rh,theta).\n\n\tNote that the algorithm is reasonably fast, but it can add up when being used in real time. There's a caching system to help with this.\n*/\n\nconst CACHE_SIZE = 1000;\n\nexport class FitRotatedEllipse\n{\n\tprivate static cacheVal:FitRotatedEllipse[] = [];\n\tprivate static cacheMap = new Map<string, FitRotatedEllipse>();\n\n\t// these are the results\n\tpublic cx:number;\n\tpublic cy:number;\n\tpublic rw:number;\n\tpublic rh:number;\n\tpublic theta = 0;\n\n\t// working variables\n\tprivate psz:number;\n\tprivate invpsz:number;\n\tprivate stop = false;\n\tprivate currentScore:number;\n\tprivate hashKey:string;\n\n\t// ------------ public methods ------------\n\n\tconstructor(public px:number[], public py:number[], public margin:number)\n\t{\n\t\tthis.hashKey = JSON.stringify([this.px, this.py]);\n\t}\n\n\tpublic calculate():void\n\t{\n\t\tif (this.lookupCache()) return;\n\n\t\tthis.setupParameters();\n\t\tif (this.stop) return;\n\n\t\tthis.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n\n\t\tthis.coarseDiscovery();\n\t\tthis.fineImprovement();\n\n\t\tthis.theta = -this.theta;\n\n\t\tthis.saveCache();\n\t}\n\n\t// converts the calculated result into a Bezier spline for convenient rendering\n\tpublic getSpline():Spline\n\t{\n\t\treturn GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate lookupCache():boolean\n\t{\n\t\tlet hashKey = this.hashKey;\n\t\tlet look = FitRotatedEllipse.cacheMap.get(hashKey);\n\t\tif (look)\n\t\t{\n\t\t\tthis.cx = look.cx;\n\t\t\tthis.cy = look.cy;\n\t\t\tthis.rw = look.rw;\n\t\t\tthis.rh = look.rh;\n\t\t\tthis.theta = look.theta;\n\n\t\t\t// rotate the hit to the tip of the cache\n\t\t\tconst {cacheVal} = FitRotatedEllipse;\n\t\t\tfor (let n = cacheVal.length - 1; n >= 0; n--) if (cacheVal[n].hashKey == hashKey)\n\t\t\t{\n\t\t\t\tif (n < cacheVal.length - 1)\n\t\t\t\t{\n\t\t\t\t\tcacheVal.push(cacheVal[n]);\n\t\t\t\t\tcacheVal.splice(n, 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate saveCache():void\n\t{\n\t\tlet hashKey = this.hashKey;\n\t\tconst {cacheVal, cacheMap} = FitRotatedEllipse;\n\n\t\tcacheVal.push(this);\n\t\tcacheMap.set(hashKey, this);\n\n\t\twhile (cacheVal.length > CACHE_SIZE)\n\t\t{\n\t\t\tcacheMap.delete(cacheVal[0].hashKey);\n\t\t\tcacheVal.splice(0);\n\t\t}\n\t}\n\n\tprivate setupParameters():void\n\t{\n\t\tconst psz = this.psz = this.px.length;\n\t\tconst invpsz = this.invpsz = 1.0 / psz;\n\t\tthis.cx = Vec.sum(this.px) * invpsz;\n\t\tthis.cy = Vec.sum(this.py) * invpsz;\n\t\tlet ptheta:number[] = new Array(psz), pdist:number[] = new Array(psz);\n\t\tfor (let n = 0; n < psz; n++)\n\t\t{\n\t\t\tptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n\t\t\tpdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n\t\t}\n\t\tlet order = Vec.idxSort(ptheta);\n\t\tthis.px = Vec.idxGet(this.px, order);\n\t\tthis.py = Vec.idxGet(this.py, order);\n\t\tptheta = Vec.idxGet(ptheta, order);\n\t\tpdist = Vec.idxGet(pdist, order);\n\n\t\tlet buffX:number[] = new Array(psz), buffY:number[] = new Array(psz);\n\t\tconst rotatedScore = (ptheta:number[], pdist:number[], rtheta:number):number =>\n\t\t{\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tbuffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n\t\t\t\tbuffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n\t\t\t}\n\t\t\tlet scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n\t\t\tlet devx = 0, devy = 0;\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tdevx += sqr(buffX[n] - scx);\n\t\t\t\tdevy += Math.abs(buffY[n] - scy);\n\t\t\t}\n\t\t\treturn devy / (1 + devx);\n\t\t};\n\n\t\tlet bestScore = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < 360; n++)\n\t\t{\n\t\t\tlet th = n * DEGRAD;\n\t\t\tlet score = rotatedScore(ptheta, pdist, th);\n\t\t\tif (score < bestScore) {this.theta = th; bestScore = score;}\n\t\t}\n\t\tfor (let dth = -1; dth <= 1; dth += 0.05)\n\t\t{\n\t\t\tlet th = this.theta + dth * DEGRAD;\n\t\t\tlet score = rotatedScore(ptheta, pdist, th);\n\t\t\tif (score < bestScore) {this.theta = th; bestScore = score;}\n\t\t}\n\t\tfor (let n = 0; n < psz; n++)\n\t\t{\n\t\t\tthis.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n\t\t\tthis.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n\t\t}\n\t\tthis.cx = Vec.sum(this.px) * invpsz;\n\t\tthis.cy = Vec.sum(this.py) * invpsz;\n\n\t\tthis.rw = this.rh = 1;\n\t}\n\n\tprivate coarseDiscovery():void\n\t{\n\t\tconst {margin} = this;\n\n\t\tlet deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n\t\tconst DELTA_OPTIONS:{dx:number, dy:number, dw:number, dh:number}[] =\n\t\t[\n\t\t\t{dx: -1, dy: 0, dw: 0, dh: 0},\n\t\t\t{dx: 1, dy: 0, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: -1, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: 1, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: -1, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: 1, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: 0, dh: -1},\n\t\t\t{dx: 0, dy: 0, dw: 0, dh: 1},\n\t\t];\n\n\t\tfor (let sanity = 0; sanity < 1000; sanity++)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tlet bestScore = this.currentScore;\n\t\t\tlet bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n\n\t\t\tfor (let delta of DELTA_OPTIONS)\n\t\t\t{\n\t\t\t\tlet newCX = this.cx + delta.dx * deltaD;\n\t\t\t\tlet newCY = this.cy + delta.dy * deltaD;\n\t\t\t\tlet newRW = this.rw + delta.dw * deltaR;\n\t\t\t\tlet newRH = this.rh + delta.dh * deltaR;\n\n\t\t\t\tlet newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n\t\t\t\tif (newScore > bestScore && !fltEqual(newScore, bestScore))\n\t\t\t\t{\n\t\t\t\t\tanything = true;\n\t\t\t\t\tbestScore = newScore;\n\t\t\t\t\tbestCX = newCX;\n\t\t\t\t\tbestCY = newCY;\n\t\t\t\t\tbestRW = newRW;\n\t\t\t\t\tbestRH = newRH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\n\t\t\tthis.currentScore = bestScore;\n\t\t\tthis.cx = bestCX;\n\t\t\tthis.cy = bestCY;\n\t\t\tthis.rw = bestRW;\n\t\t\tthis.rh = bestRH;\n\t\t}\n\t}\n\n\tprivate fineImprovement():void\n\t{\n\t\tconst {margin} = this;\n\n\t\tlet deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n\t\tconst REDUCTION = 2.0 / 3;\n\t\tconst MAX_REDUCTIONS = 20;\n\t\tfor (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tlet bestScore = this.currentScore;\n\t\t\tlet bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n\n\t\t\tfor (let dCX = -1; dCX <= 1; dCX++)\n\t\t\t{\n\t\t\t\tlet newCX = this.cx + dCX * deltaD;\n\t\t\t\tfor (let dCY = -1; dCY <= 1; dCY++)\n\t\t\t\t{\n\t\t\t\t\tlet newCY = this.cy + dCY * deltaD;\n\t\t\t\t\tfor (let dRW = -1; dRW <= 1; dRW++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet newRW = this.rw + dRW * deltaR;\n\t\t\t\t\t\tfor (let dRH = -1; dRH <= 1; dRH++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet newRH = this.rh + dRH * deltaR;\n\t\t\t\t\t\t\tif (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0) continue;\n\t\t\t\t\t\t\tlet newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n\t\t\t\t\t\t\tif (newScore > bestScore && !fltEqual(newScore, bestScore))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tanything = true;\n\t\t\t\t\t\t\t\tbestScore = newScore;\n\t\t\t\t\t\t\t\tbestCX = newCX;\n\t\t\t\t\t\t\t\tbestCY = newCY;\n\t\t\t\t\t\t\t\tbestRW = newRW;\n\t\t\t\t\t\t\t\tbestRH = newRH;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (anything)\n\t\t\t{\n\t\t\t\tthis.currentScore = bestScore;\n\t\t\t\tthis.cx = bestCX;\n\t\t\t\tthis.cy = bestCY;\n\t\t\t\tthis.rw = bestRW;\n\t\t\t\tthis.rh = bestRH;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treduc++;\n\t\t\t\tdeltaD *= REDUCTION;\n\t\t\t\tdeltaR *= REDUCTION;\n\t\t\t}\n\t\t}\n\t}\n\n\t// calculate a score for a given state; higher is better, zero is unacceptable\n\tprivate calculateScore(cx:number, cy:number, rw:number, rh:number,):number\n\t{\n\t\tconst {px, py, margin} = this, psz = px.length;\n\n\t\t// radiate out a series of \"spokes\" that make up points of the rotated ellipse; if any of these crosses an outline segment\n\t\tconst nseg = 24;\n\t\tlet cosTheta = 1, sinTheta = 0;\n\t\tlet incrAlpha = TWOPI / nseg;\n\n\t\tlet closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet alpha = n * incrAlpha;\n\t\t\tlet cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n\t\t\tlet dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n\t\t\tlet dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n\n\t\t\tlet d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n\t\t\tlet x = cx + d * Math.cos(eth);\n\t\t\tlet y = cy + d * Math.sin(eth);\n\n\t\t\tfor (let i = 0; i < psz; i++)\n\t\t\t{\n\t\t\t\tlet ii = i == psz - 1 ? 0 : i + 1;\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii])) return 0;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < psz; i++) closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n\t\t}\n\n\t\tlet proxSum = 0;\n\t\tfor (let dsq of closestDSQ) proxSum += 1.0 / (1 + Math.sqrt(dsq));\n\n\t\t// it isn't violated, so bigger is better\n\t\treturn rw * rh + proxSum;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2019 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing */\n\n/*\n\tFontData: stores information about the general font, sufficient to recreate and layout every glyph.\n\n\tThis is to support the MetaVector class, which renders SVG/Canvas text using this embedded font, thus guaranteeing\n\tthat the output is identical on every platform in every graphics format, and making the metrics available ahead of\n\ttime. This may seem pedantic, but for rendering molecules it is the only way to obtain really excellent results,\n\tbecause it is necessary to calculate the bond-to-element intercept to a subpixel resolution.\n*/\n\nexport interface FontDataNativeOpt\n{\n\tbold?:boolean;\n\titalic?:boolean;\n}\n\nexport class FontData\n{\n\tpublic static main = new FontData();\n\n\tpublic UNITS_PER_EM = 2048;\n\tpublic INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n\tpublic PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n\tpublic ASCENT = 1638;\n\tpublic DESCENT = -410;\n\tpublic MISSING_HORZ = 2048;\n\tpublic MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n\tpublic ASCENT_FUDGE = 0.9;\n\tpublic UNICODE =\n\t[\n\t\t' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n\t\t'=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n\t\t'[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n\t\t'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n\t\t'\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n\t\t'\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n\t\t'\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n\t\t'\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n\t\t'\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n\t\t'\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n\t\t'\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n\t\t'\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n\t\t'\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n\t\t'\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n\t\t'\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n\t\t'\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n\t];\n\tpublic HORIZ_ADV_X =\n\t[\n\t\t720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n\t\t930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n\t\t1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n\t\t1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n\t\t1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n\t\t1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n\t\t1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n\t\t1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n\t\t1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n\t\t1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n\t\t1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n\t];\n\tpublic GLYPH_DATA =\n\t[\n\t\t'',\n\t\t'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n\t\t'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n\t\t'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n\t\t'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n\t\t'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n\t\t'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n\t\t'M386 1556l-43 -579h-136l-43 579h222z',\n\t\t'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n\t\t'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n\t\t'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n\t\t'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n\t\t'M575 285l-282 -655h-146l174 655h254z',\n\t\t'M777 561h-624v181h624v-181z',\n\t\t'M492 0h-239v285h239v-285z',\n\t\t'M860 1556l-717 -1860h-173l714 1860h176z',\n\t\t'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n\t\t'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n\t\t'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n\t\t'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n\t\t'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n\t\t'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n\t\t'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n\t\t'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n\t\t'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n\t\t'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n\t\t'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n\t\t'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n\t\t'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n\t\t'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n\t\t'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n\t\t'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n\t\t'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n\t\t'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n\t\t'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n\t\t'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n\t\t'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n\t\t'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n\t\t'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n\t\t'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n\t\t'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n\t\t'M1142 0h-942v1489h198v-1313h744v-176z',\n\t\t'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n\t\t'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n\t\t'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n\t\t'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n\t\t'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n\t\t'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n\t\t'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n\t\t'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n\t\t'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n\t\t'M960 -304h-173l-717 1860h176z',\n\t\t'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n\t\t'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n\t\t'M1306 -300h-1310v120h1310v-120z',\n\t\t'M762 1302h-149l-273 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n\t\t'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n\t\t'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n\t\t'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n\t\t'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n\t\t'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n\t\t'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n\t\t'M375 0h-188v1556h188v-1556z',\n\t\t'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n\t\t'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n\t\t'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n\t\t'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n\t\t'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n\t\t'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n\t\t'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n\t\t'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n\t\t'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n\t\t'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n\t\t'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n\t\t'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n\t\t'M552 -392h-174v1948h174v-1948z',\n\t\t'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n\t\t'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n\t\t'',\n\t\t'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n\t\t'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n\t\t'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n\t\t'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n\t\t'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n\t\t'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n\t\t'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n\t\t'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n\t\t'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n\t\t'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n\t\t'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n\t\t'M1456 57h-171v545h-1075v160h1246v-705z',\n\t\t'M777 561h-624v181h624v-181z',\n\t\t'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n\t\t'M1306 1668h-1305l-5 120h1310v-120z',\n\t\t'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n\t\t'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n\t\t'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n\t\t'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n\t\t'M963 1676l-273 -374h-149l179 374h243z',\n\t\t'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n\t\t'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n\t\t'M492 511h-239v283h239v-283z',\n\t\t'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n\t\t'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n\t\t'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n\t\t'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n\t\t'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n\t\t'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n\t\t'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n\t\t'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n\t\t'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n\t\t'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n\t\t'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n\t\t'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n\t\t'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n\t\t'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n\t\t'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n\t\t'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n\t\t'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n\t\t'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n\t\t'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n\t\t'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n\t\t'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n\t\t'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n\t\t'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n\t\t'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n\t\t'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n\t\t'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n\t\t'M773 1676l-49 -384h-145l-49 384h243z',\n\t\t'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n\t\t'M585 832h-239v285h239v-285z',\n\t\t'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n\t\t'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n\t\t'M1162 1313h-764v-1313h-198v1489h962v-176z',\n\t\t'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n\t\t'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n\t\t'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n\t\t'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n\t\t'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n\t\t'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n\t\t'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n\t\t'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n\t\t'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n\t\t'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n\t\t'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n\t\t'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n\t\t'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n\t\t'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n\t\t'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n\t\t'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n\t\t'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n\t\t'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n\t\t'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n\t\t'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n\t\t'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n\t\t'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n\t\t'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n\t\t'M375 0h-188v1117h188v-1117z',\n\t\t'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n\t\t'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n\t\t'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n\t\t'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n\t\t'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n\t\t'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n\t\t'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n\t\t'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n\t\t'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n\t\t'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n\t\t'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n\t\t'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n\t\t'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n\t\t'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n\t\t'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n\t\t'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n\t\t'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n\t\t'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n\t\t'M1456 572h-1236v160h1236v-160z',\n\t\t'M843 1489l-780 -1489h-165l780 1489h165z',\n\t\t'M492 511h-239v283h239v-283z',\n\t\t'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n\t\t'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n\t\t'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n\t\t'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n\t\t'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n\t\t'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n\t\t'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n\t];\n\tpublic OUTLINE_X =\n\t[\n\t\t[], [291,301,505,515], [168,211,729,772,554], [195,389,917,1364,1481,1481,1288,760,312,195],\n\t\t[155,604,722,1129.8,1160,1107,722,604,278.5,191.1,162,155], [149,172.3,242,630,1687,1844.3,1960,2031.3,2055,2031.8,1962,1575,517,359.8,244,172.8],\n\t\t[115,149.4,252.5,407.6,598,1555,1287,961.3,881,757.5,601,423.5,293,213.5,187], [164,207,343,386], [181,205.5,279,554,783,783,554,279,205.5],\n\t\t[147,376,651,724.5,749,724.5,651,376,147], [167,232,588,717,1073,1137,1137,1073,717,588,232,167], [210,755,921,1466,1466,921,755,210],\n\t\t[147,293,575,321], [153,777,777,153], [253,492,492,253], [-30,143,860,684],\n\t\t[137,167.9,260.5,420.1,652,881.4,1041.5,1135.6,1167,1136.1,1043.5,883.9,652,422,262,168.3], [278,1084,1084,780,625,278],\n\t\t[161,1169,1169,1106,1073.5,976,821.3,617,387.5,198,161], [167,364,608,830.5,1007,1111,1148,1117,1080,971,821,629,399.5,210,167],\n\t\t[77,790,982,1203,1203,982,798,77], [187,378,613,843.5,1015,1119,1157,1147,251,187],\n\t\t[137,183.5,316,475,675,875.1,1041.5,1153.6,1191,1046,965,866,542,315,179.5], [154,285,499,1173,1173,154],\n\t\t[122,157.9,265.5,433.6,651,859.6,1029.5,1142.4,1180,1140,1106.8,1007,851.5,651,456.8,300,196.5,162],\n\t\t[113,258,340,438,760,988,1122.5,1167,1121,990,829,629,429.5,263,150.5], [346,585,585,346], [230,376,658,585,346], [254,1408,1408,254],\n\t\t[245,1431,1431,245], [268,1422,1422,268], [160,406,610,970,1005,973.9,880.5,733.4,541,337.5,160],\n\t\t[176,240,419,692,1037,1210,1391,1714,1829.5,1870,1813.5,1651,1391,1041,701,426,243], [26,1374,832,568],\n\t\t[200,728,983.5,1168,1281,1323,1196,1159,1040,885,641,200], [115,169,319,549.5,844,1001.5,1134,1250.5,1350,1350,1084.5,845,546.5,317,167],\n\t\t[200,576,906.5,1134,1369.5,1458,1373,1136,918.5,572,200], [200,1181,1181,200], [200,398,1045,1151,1151,200],\n\t\t[115,171,330,577,896,1175.5,1442,1442,1441,1155.5,896,570.9,323.5,167.1], [200,1339,1339,200], [137,725,725,137],\n\t\t[44,178,306,486.6,626.5,716.1,746,746,233,44], [205,1397,1366,205], [200,1142,1142,398,200], [200,1526,1526,200], [200,1336,1336,200],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,398,1043,1139.5,1174,1127.5,996,831,604,200],\n\t\t[115,163.5,302,520.5,1010.5,1133.1,1290,1409.5,1528,1528,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,1432,1130.5,1004,842,617,200],\n\t\t[134,395.5,685,941.5,1128,1241.5,1282,1222,990,702,480.3,301,182.5,143,134], [0,532,730,1262,1262,0],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,178], [26,568,832,1374,238], [92,486,1546,1933,295], [68,1335,1336,80], [6,532,730,1254,225],\n\t\t[126,1288,1288,1266,160,126], [239,759,759,239], [70,787,960,246], [171,691,691,171], [186,383,1490,901,775], [-4,1306,1306,-4], [340,613,762,583],\n\t\t[104,130.3,209,325.5,465,1053,1053,1020,924,772.5,567,362,203], [185,679,866,1022,1128.5,1168,1139.4,1053.5,918.1,373,185],\n\t\t[105,145,258,431,653,832.5,1011,1011,841.5,653,430.1,255.5,142.6], [108,137.4,225.5,363.6,543,1091,1091,903,258,148.5],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,997.5,849.1,649,428.6,255.5,143.4], [68,195,383,716,786,786,693.5,580,415,294,68],\n\t\t[108,225,391.5,565,798.3,962,1058.8,1091,1091,602,417,259,148.5], [185,1119,1119,1095.3,1024,373,185], [175,187,375,387,387,175],\n\t\t[-62,47.5,153,304,421,496,521,533,533,321,100,-62], [193,1199,1161,381,193], [187,375,375,187], [185,1815,1815,1793.1,1727.5,1615.9,1456,735,185],\n\t\t[185,1119,1119,1095.3,1024,907.5,748,185], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,833.3,622,409.4,245.5,140.9],\n\t\t[185,373,1019,1129,1168,1139.9,1055.5,920.6,741,185], [108,137.6,226.5,365.1,903,1091,1091,602,414,259,149.5], [185,373,882,882,816,745,185],\n\t\t[110,283.5,511,706.9,856.5,951.4,983,939,768.5,566,372.5,230,143.5,115,110], [62,211.3,278,387.5,538,649.5,765,765,377,189,62],\n\t\t[177,201.5,275,392.5,549,1111,1111,177], [61,510,699,1151,265], [86,380,1299,1590,766], [60,1152,1152,64], [61,298,499,1151,265],\n\t\t[93,995,995,978,107,93], [173,588.9,672.5,800.9,963,1113,1113,963,800.9,672.5,588.9,173], [378,552,552,378],\n\t\t[187,337,499.1,627.5,711.1,1127,1127,711.1,627.5,499.1,337,187], [187,354,1125,1290,1401,1466.5,1489,1322,551,386,274,209.5], [], [291,515,505,301],\n\t\t[159,191.6,289.5,647,765,1120,1120,765,647,292.5,192.4], [137,1163,1163,1137,997,816,630.6,484.5,389.6,182,137],\n\t\t[138,247,1058,1168,1168,1055,249,138], [108,187,557,745,1115,1191,320], [378,552,552,378],\n\t\t[172,229,404.5,575,796,965,1063,1096,1128,1071,896,725,497.5,334,235,203], [346,958,958,346],\n\t\t[159,222.4,412.5,692.1,1024,1355.9,1635.5,1825.6,1889,1825.6,1635.5,1355.9,1024,692.1,412.5,222.4],\n\t\t[151,238.5,454,944,944,920.3,849,723.5,537,368,231], [166,716,1146,1146,716,166], [210,1285,1456,1456,210], [153,777,777,153],\n\t\t[159,222.4,412.5,692.1,1024,1355.9,1635.5,1825.6,1889,1825.6,1635.5,1355.9,1024,692.1,412.5,222.4], [-4,1,1306,1306],\n\t\t[154,183,270,399.3,555,710.8,840,927,956,927.1,840.5,711.4,555,399.3,270,183], [215,1461,1461,921,755,215],\n\t\t[207,967,967,911,887.6,817.5,544,369.5,211,207], [207,363.5,540,703,834,923,956,929,904.9,832.5,561,384.5,224,207], [541,690,963,720],\n\t\t[190,378,1124,1124,190], [137,168.5,595,1106,1106,640,425.3,267,169.5], [253,492,492,253], [353,456,551,788.5,857.1,880,877,872,719,353],\n\t\t[291,299,914,914,693,558,291], [121,150.6,239.5,378.6,559,734.3,874,965.5,996,965.5,874,734.3,559,378.6,239.5,150.6], [174,604,1154,1154,604,174],\n\t\t[171,465,1694,1857,1857,1694,1410,545,408,171], [171,465,1955,1955,1890,1805.5,1410,545,408,171], [140,555,1750,1913,1913,1750,1500,448,294,155,140],\n\t\t[113,144.1,237.5,384.6,577,782,958,958,712,508,147.5], [26,1374,862,683,440], [26,1374,955,712,533], [26,1374,1033,805,578,350],\n\t\t[26,1374,1119,990,541,367,288], [26,1374,1005,806,393], [26,1374,1049,1023.6,947.5,834.6,699,564,451,374.5,349], [14,1901,1901,608],\n\t\t[115,169,548,652.5,750,990.5,1350,1350,1084.5,845,546.5,317,167], [200,1181,1181,643,400,200], [200,1181,1181,993,750,200],\n\t\t[200,1181,1181,803,576,200], [200,1181,1181,1038,426,200], [137,725,725,389,146,137], [137,725,725,482,137], [93,137,725,776,548,321],\n\t\t[126,137,725,738,738,126], [14,210,586,916.5,1144,1379.5,1468,1383,1146,929,582,210,14], [200,1336,1336,1208,1079,630,456,200],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,753,510,163], [115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1083,840,303,163],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1136,908,681,453,163],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1207,1078,629,455,163],\n\t\t[112,160.5,299,517.5,803,1089.5,1307,1445.5,1495,1446.5,1108,909,496,160], [291,402,1274,1385,1385,1274,402,291],\n\t\t[115,120,252,1092.5,1310,1448.5,1498,1474,1342,806,521.5,303,163], [178,213.5,330,505,749,989,1169,1285.5,1321,1321,753,510,178],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,1073,830,178], [178,213.5,330,505,749,989,1169,1285.5,1321,1321,856,629,178],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,1056,444,178], [6,532,730,1254,935,692], [200,398,1044,1139,1174,1127,997,398,200],\n\t\t[185,675,873.1,1029.5,1131.1,1165,1066,1037.4,951.5,819.9,654,470.5,321,221,185], [104,130.3,209,325.5,465,1053,1053,1020,559,316,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,934,691,203], [104,130.3,209,325.5,465,1053,1053,961,733,506,278,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,1038,909,460,286,207], [104,130.3,209,325.5,465,1053,1053,926,314,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,956,930.6,854.5,741.6,606,471,358,281.5,256],\n\t\t[104,130.4,209.5,326.1,465,1433,1648.5,1833,1855,1855,1823.6,1729.5,1581.1,1387,564,360,202],\n\t\t[105,145,353,456,551,788.5,857.1,1011,1011,841.5,653,430.1,255.5,142.6], [106,145,262,448.5,696,904,1098,1120,1120,1089.4,997.5,580,337,143.4],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,960,717,255.5,143.4], [106,145,262,448.5,696,904,1098,1120,1120,1089.4,986,758,531,303,143.4],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,951,339,143.4], [-21,187,375,401,222], [160,187,375,582,339], [-11,187,375,572,394,167],\n\t\t[5,187,375,557,557,5], [106,140.6,244.5,405.6,612,828.3,995,1101.5,1137,1004,938,263], [185,1119,1119,1075,946,497,323,244,185],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,553,310,140.9], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,933,690,245.5,140.9],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,963,735,508,280,140.9], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1038,909,460,286,207],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,928,729,316,140.9], [210,719,957,1466,1466,957,719,210],\n\t\t[93,203,833.3,997,1102,1137,1132,1021,409.4,245.5,140.9,106], [177,201.5,275,392.5,549,1111,1111,585,342,177],\n\t\t[177,201.5,275,392.5,549,1111,1111,945,702,177], [177,201.5,275,392.5,549,1111,1111,757,530,177], [177,201.5,275,392.5,549,1111,1111,955,343,177],\n\t\t[61,298,499,1151,928,685], [185,373,1019,1129,1168,1139.9,1055.5,920.6,373,185], [230,376,658,585,346], [530,579,724,773],\n\t\t[256,588,716,1048,1048,765,539,256], [7,26,1374,832], [346,585,585,346], [0,49,443,1424,1424,443], [0,49,443,1582,1582,443], [0,49,380,968,968,380],\n\t\t[0,49,354.5,493,711.5,997,1283.5,1501,1639.5,1689,1640.5,1501,1284.5,997], [0,49,815,1013,1537,289],\n\t\t[0,49,291,1751,1751,1701,1654.1,1513.5,1296.6,1021], [-53,187,375,615,615,379,183,-53], [26,1374,832,568],\n\t\t[200,728,983.5,1168,1281,1323,1196,1159,1040,885,641,200], [200,398,1162,1162,200], [26,1414,852,588], [200,1181,1181,200],\n\t\t[126,1288,1288,1266,160,126], [200,1339,1339,200], [115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163],\n\t\t[137,725,725,137], [205,1397,1366,205], [26,1378,822,582], [200,1526,1526,200], [200,1336,1336,200], [114,1215,1215,114],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,1339,1339,200],\n\t\t[200,398,1043,1139.5,1174,1127.5,996,831,604,200], [118,1280,1280,1234,138,118], [0,532,730,1262,1262,0], [6,532,730,1254,225],\n\t\t[105,149.5,273,740,937,1404,1527.5,1572,1528.5,1410,937,740,267,148], [68,1335,1336,80], [179,219.5,338,793,990,1446,1563.5,1604,1604,179],\n\t\t[108,1568,1568,1518,1471.1,1330.5,1113.6,838,562.4,345.5,204.9,158,108], [126,137,725,738,738,126], [6,532,730,1254,939,740,327],\n\t\t[108,137.4,225.5,363.6,543,1091,1091,743,500,148.5], [109,152.5,265,417,578,796,1006,1006,961,721,478,191.5,144],\n\t\t[185,931,1119,1119,1095.3,802,559,185], [160,187,375,403], [177,207.8,300,448,646,846,994,1085.5,1116,1116,1043,760,534,251,177],\n\t\t[108,137.4,225.5,363.6,543,1091,1091,604,416.5,258,148.5], [185,373,1030.5,1131.4,1165,1084,1050,959,825.5,661,462.1,311.5,216.6,185],\n\t\t[61,506,694,1151,265], [106,140.6,244.5,408.6,624,837.1,1000.5,1104.4,1139,1049,239],\n\t\t[109,152.5,265,417,578,796,1006,1006,961,789,609,449,304,191.5,144], [108,135.8,219,646,825,937,982,942,198],\n\t\t[185,931,1119,1119,1095.3,1024,907.5,748,185], [137,159.5,219,382,639,896,1059,1118,1141,1118,1058,895.5,639,382.5,220,159.5], [187,375,375,187],\n\t\t[193,1192,1122,1085,1027,193], [61,1151,522,311], [185,373,1125,1125,185], [61,510,699,1151,265], [104,138.5,239,704,884,995.5,1041,957,133],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,833.3,622,409.4,245.5,140.9], [185,1120,1120,185],\n\t\t[185,373,1033.5,1137.4,1172,1140,1044,887.3,673,477.5,322,220.5,185], [105,146.5,261,685,862,971,1018,986,839,675,441.9,260.5,143.9],\n\t\t[106,140.5,244,407.8,623,832.9,996.5,1101.9,1295,1295,625,412,247,141.3], [10,414,602,1006,1006,10],\n\t\t[177,207.8,300,448,646,846,994,1085.5,1116,1116,177], [104,151,283,715,902,1342.5,1471.1,1514,1470.4,1339.5,1132.6,861,784.5,714,355,163],\n\t\t[48,1160,1149,59], [176,223.5,748,935,1459,1507,1507,176], [113,136.5,211,343.5,538,1128,1321.5,1455,1529.5,1553,1496,1295,371,170],\n\t\t[5,187,375,557,557,5], [177,207.8,300,448,646,846,994,1085.5,1116,1116,953,341,177],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,743,500,140.9], [177,207.8,300,448,646,846,994,1085.5,1116,1116,768,525,177],\n\t\t[113,136.5,211,343.5,538,1128,1321.5,1455,1529.5,1553,1496,955,712,170],\n\t\t[149,179.4,270.5,409.6,584,798.5,985,1106,1145,1130.5,1074,909.5,670,473.5,292], [50,1438,876,612], [144,344,1332,1532,1532,144],\n\t\t[187,1369,1369,1330,197,187], [220,1456,1456,220], [-102,63,843,678], [253,492,492,253], [134,755,857,1737,1570,134],\n\t\t[161,189.3,274,406.5,578,1435,1620.9,1764.5,1856.4,1887,1858.8,1774,1641.5,1470,613,430.3,286,192.3],\n\t\t[138,241.5,348,515.3,641,719,1168,1168,1063,954,786.3,661,583,138], [243,400,1070,1214,1320,1432,1431,1274,604,462.4,355.5,243],\n\t\t[245,566,719,1431,1431,1109,956,245], [254,1408,1408,254], [268,1422,1422,268]\n\t];\n\tpublic OUTLINE_Y =\n\t[\n\t\t[], [1489,0,0,1489], [1556,977,977,1556,1556], [421,0,0,421,932,1067,1489,1489,1067,556],\n\t\t[85,-361,-361,238.1,380,1231,1576,1576,1185,1071.5,935,283], [1075,880.5,743,0,-29,-1.8,80,217.8,413,607.5,745,1489,1517,1489.8,1408,1270.3],\n\t\t[409,230.9,90.5,-0.6,-31,0,909,1333.4,1432.5,1498.1,1520,1490,1412,1301.5,1174], [1556,977,977,1556], [572,286.3,31,-412,-412,1556,1556,1113,857.8],\n\t\t[-412,-412,31,286.3,572,857.8,1113,1556,1556], [886,776,630,630,777,887,1299,1409,1556,1556,1410,1300], [572,27,27,572,732,1277,1277,732],\n\t\t[-370,-370,285,285], [561,561,742,742], [0,0,285,285], [-304,-304,1556,1556],\n\t\t[743,400,159,16.5,-31,15.9,156.5,397.4,745,1084.9,1326.5,1470.9,1519,1471.6,1329.5,1088.1], [0,0,152,1494,1494,1286],\n\t\t[0,0,171,1110,1279.4,1409.5,1492.4,1520,1491,1427,209], [63,-1.5,-31,2.5,106,254,441,1161,1320,1436,1500,1520,1490.5,1426,272],\n\t\t[419,0,0,419,579,1489,1489,649], [56,-5.5,-31,6.5,114,274,473,1489,1489,267],\n\t\t[654,324,104,3,-31,4.9,112.5,276.9,483,1494,1512,1517,1453.5,1277,1005], [1314,0,0,1266,1489,1489],\n\t\t[411,233.5,91,-2.8,-34,-2,94,238.3,415,1144,1294.5,1416,1496.3,1523,1495,1411,1285,1131],\n\t\t[1005,-6,-23.5,-29,33,209,480,834,1171.5,1385,1485.5,1519,1483.3,1376,1211.8], [0,0,1117,1117], [-370,-370,285,1117,1117], [590,77,1227,714],\n\t\t[362,362,942,942], [77,590,714,1227], [1245,0,0,964.5,1139,1293.4,1414.5,1492.9,1519,1497.5,1449],\n\t\t[647,291,15,-162.5,-226,-218.5,-190,157,394,663,1013.5,1283,1457,1519,1452,1268,991.5], [0,0,1489,1489],\n\t\t[0,0,28,122,262,458,1155,1316.5,1427,1477,1489,1489], [743,402.5,161,18.5,-27,-13.5,19,63,108,1385,1487,1516,1465,1317,1072],\n\t\t[0,0,28,119,375,743,1118,1371,1457.5,1489,1489], [0,0,1489,1489], [0,0,717,1313,1489,1489],\n\t\t[746,405.5,163,19,-29,12.5,110,749,1382,1485.5,1516,1464.4,1309.5,1065.4], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[8,-12.5,-21,5.5,85,213.5,387,1489,1489,193], [0,0,1489,1489], [0,0,176,1489,1489], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,709,855.5,1039,1254,1396,1466.5,1489,1489],\n\t\t[744,415,172,21,-297.5,-369.1,-393,-386.5,-365,-183,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1280.5,1409,1471.5,1489,1489],\n\t\t[92,3,-27,9,109,253,425,1412,1486,1516,1486.1,1396.5,1260.1,1090,340], [1313,0,0,1313,1489,1489], [598,313,115,6,-31,4,115,315.5,598,1489,1489],\n\t\t[1489,0,0,1489,1489], [1489,0,0,1489,1489], [0,0,1489,1489], [1489,0,0,1489,1489], [0,0,176,1489,1489,184], [-392,-392,1556,1556],\n\t\t[1556,-304,-304,1556], [-392,-392,1556,1556], [682,682,684,1489,1489], [-300,-300,-180,-180], [1676,1302,1302,1676],\n\t\t[324,182.8,69,-6,-31,0,758,939,1058,1124.5,1144,1126,1093], [0,-31,8.5,127,315,567,812.8,996,1110,1556,1556],\n\t\t[557,300,118,10.5,-25,0,70,1050,1116,1143,1104,987,801.5], [550,306.8,123,7.5,-31,0,1556,1556,992,803],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1016,1115,1148,1107.8,987,797.8], [959,0,0,959,1374,1546,1560,1566,1539.4,1459.5,1117],\n\t\t[569,-375,-410.5,-423,-389.8,-290,-119.3,127,1117,1148,1108.5,998,817.5], [0,0,725,906,1039,1556,1556], [1304,0,0,1304,1499,1499],\n\t\t[-395,-415,-423,-398,-323,-199,-27,1304,1499,1499,1117,-216], [0,0,1117,1556,1556], [0,0,1556,1556], [0,0,725,902.9,1036.5,1120.1,1148,1148,1117],\n\t\t[0,0,725,906,1039,1120.8,1148,1117], [558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1108.4,1148,1108.4,989.5,802.4],\n\t\t[-412,-412,133,323.5,572,813.4,995.5,1109.9,1148,1117], [555,314.1,131.5,16.4,-412,-412,1117,1148,1108,995,809.5], [0,0,912,1105,1114.5,1117,1117],\n\t\t[67,2.5,-27,-2.5,71,182.8,322,1060,1119.5,1144,1116.5,1042,933,803,278], [959,189.8,70,1,-22,-13,10,1117,1438,1438,1117],\n\t\t[392,209.1,76.5,-4.1,-31,0,1117,1117], [1117,0,0,1117,1117], [1117,0,0,1117,1117], [0,0,1117,1117], [1117,-412,-412,1117,1117],\n\t\t[0,0,159,1117,1117,139], [504,-170.9,-292.5,-367.1,-392,-392,1556,1556,1531.1,1456.5,1334.9,660], [-392,-392,1556,1556],\n\t\t[-392,-392,-367.1,-292.5,-170.9,504,660,1334.9,1456.5,1531.1,1556,1556], [395,395,396,440,561,732,927,927,926,880.5,761,589.5], [], [0,0,1489,1489],\n\t\t[557,333.5,163,-361,-361,74,1046,1475,1475,948.5,775.9], [0,0,171,1467,1501,1518,1485.9,1389.5,1243.1,751,207],\n\t\t[258,145,147,257,1067,1176,1176,1066], [1489,426,0,0,426,1489,1489], [-392,-392,1556,1556],\n\t\t[533,-327,-371.5,-385,-358,-275,-156,-10,601,1462,1505,1519,1490,1411,1293.5,1147], [1304,1304,1499,1499],\n\t\t[655,323.1,43.5,-146.6,-210,-146.6,43.5,323.1,655,986.9,1266.5,1456.6,1520,1456.6,1266.5,986.9],\n\t\t[833,616,531,554,1192,1332.4,1435.5,1498.9,1520,1504,1475], [608,162,191,1113,1142,697], [602,57,57,762,762], [561,561,742,742],\n\t\t[655,323.1,43.5,-146.6,-210,-146.6,43.5,323.1,655,986.9,1266.5,1456.6,1520,1456.6,1266.5,986.9], [1788,1668,1668,1788],\n\t\t[1116,960.4,831.5,744.9,716,745,832,961,1116,1271,1400,1487,1516,1487,1400,1271], [179,179,917,1462,1462,917],\n\t\t[566,566,711,1237,1350.4,1440.5,1519,1501.5,1458,722], [585,542,527,543.5,595,685.5,817,1278,1374.5,1452,1520,1502.5,1458,764],\n\t\t[1302,1302,1676,1676], [-412,-412,0,1117,1117], [1050,866,-363,-363,1489,1489,1460,1373,1234.3], [511,511,794,794],\n\t\t[-397,-416,-423,-337,-232,-89,-25,20,20,-237], [1256,566,566,688,1493,1493,1368],\n\t\t[1025,820.1,663.5,564.1,531,563.4,660.5,816.4,1025,1233.8,1390,1487.5,1520,1486.8,1387,1230], [191,162,608,697,1142,1113],\n\t\t[1246,0,0,220,353,944,1489,1493,1493,1363], [1246,0,0,139,664,865,1489,1493,1493,1363], [598,0,0,220,353,944,1489,1517,1500,1456,773],\n\t\t[350,195.6,74.5,-3.9,-30,-10,40,244,1489,1489,523], [0,0,1675,2049,2049], [0,0,2049,2049,1675], [0,0,1670,2049,2049,1670],\n\t\t[0,0,1992,1992,1987,1910,1682], [0,0,1872,1872,1872], [0,0,1712,1843.5,1952,2024.8,2049,2024.8,1952,1843.5,1712], [0,0,1489,1489],\n\t\t[743,402.5,-397,-416,-423,-337,108,1385,1487,1516,1465,1317,1072], [0,0,1489,2049,2049,1489], [0,0,1489,2049,2049,1489], [0,0,1489,2049,2049,1489],\n\t\t[0,0,1489,1872,1872,1489], [0,0,1489,2049,2049,1489], [0,0,2049,2049,1489], [1670,0,0,1670,2049,2049], [1677,0,0,1677,1872,1872],\n\t\t[740,0,0,28,119,375,743,1118,1371,1457.5,1489,1489,883], [0,0,1489,1992,1992,1987,1910,1489],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1318,2049,2049,1070.5], [744,415,172,21,-31,20,172,414.5,744,1073,2049,2049,1318,1070.5],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1670,2049,2049,1670,1070.5], [744,415,172,21,-31,20,172,414.5,744,1073,1992,1992,1987,1910,1070.5],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1872,1872,1872,1070.5], [216,105,105,216,1088,1199,1199,1088],\n\t\t[744,-146,-146,20,172,414.5,744,1611,1611,1520,1468,1318,1070.5], [598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489],\n\t\t[598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489], [598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489],\n\t\t[598,313,115,6,-31,4,115,315.5,598,1489,1872,1872,1489], [1489,0,0,1489,2049,2049], [0,0,469,610.5,787,992,1130,1489,1489],\n\t\t[0,-24,12.4,121.5,284.1,481,1241,1376,1479,1544.3,1566,1536.5,1449,1295.5,1080], [324,182.8,69,-6,-31,0,758,939,1676,1676,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1676,1676,1093], [324,182.8,69,-6,-31,0,758,1297,1676,1676,1297,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1619,1619,1614,1537,1309], [324,182.8,69,-6,-31,0,758,1499,1499,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1630,1761.8,1871,1944.5,1969,1944.5,1871,1761.8,1630],\n\t\t[317,178.8,68,-4.8,-29,-26,3.5,68,559,641,861.3,1020,1116,1148,1146,1127,1093], [557,300,-397,-416,-423,-337,-232,70,1050,1116,1143,1104,987,801.5],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1016,1676,1676,797.8], [552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1676,1676,987,797.8],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1297,1676,1676,1297,797.8], [552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1499,1499,797.8],\n\t\t[1676,0,0,1302,1676], [1302,0,0,1676,1676], [1297,0,0,1297,1676,1676], [1304,0,0,1304,1499,1499],\n\t\t[484,266.5,104,2.8,-31,12,141,351,637,1469,1566,1556], [0,0,725,1619,1619,1614,1537,1309,1117],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1676,1676,802.4], [558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1676,1676,989.5,802.4],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1297,1676,1676,1297,802.4], [558,313.8,127,8.5,-31,8.5,127,313.8,558,1619,1619,1614,1537,1309],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1499,1499,1499,802.4], [572,7,7,572,732,1297,1297,732],\n\t\t[-148,-148,8.5,127,313.8,558,1241,1241,1108.4,989.5,802.4,558], [392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117],\n\t\t[392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117], [392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117], [392,209.1,76.5,-4.1,-31,0,1117,1499,1499,1117],\n\t\t[1117,-412,-412,1117,1676,1676], [-412,-412,133,323.5,572,813.4,995.5,1109.9,1556,1556], [-370,-370,285,1117,1117], [1676,1292,1292,1676],\n\t\t[1304,1292,1292,1304,1499,1676,1676,1499], [1489,0,0,1489], [832,832,1117,1117], [1489,1105,0,0,1489,1489], [1489,1105,0,0,1489,1489],\n\t\t[1489,1105,0,0,1489,1489], [1489,1105,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520], [1489,1105,0,0,1489,1489],\n\t\t[1489,1105,0,0,174,894,1144.8,1345,1476.3,1520], [1304,0,0,1304,1499,1676,1676,1499], [0,0,1489,1489],\n\t\t[0,0,28,122,262,458,1155,1316.5,1427,1477,1489,1489], [0,0,1313,1489,1489], [0,0,1489,1489], [0,0,1489,1489], [0,0,176,1489,1489,184],\n\t\t[0,0,1489,1489], [744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1489,1489], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[0,0,1489,1489], [0,0,1489,1489], [0,0,1489,1489], [744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1489,1489],\n\t\t[0,0,709,855.5,1039,1254,1396,1466.5,1489,1489], [0,0,176,1489,1489,184], [1313,0,0,1313,1489,1489], [1489,0,0,1489,1489],\n\t\t[755,507,325,-16,-16,325,506.5,755,994,1171,1505,1505,1171,993], [0,0,1489,1489], [910,647,471,0,0,471,645.5,910,1489,1489],\n\t\t[0,0,174,894,1144.8,1345,1476.3,1520,1476.3,1345,1144.8,894,174], [1677,0,0,1677,1872,1872], [1489,0,0,1489,1872,1872,1872],\n\t\t[550,306.8,123,7.5,-31,0,1117,1676,1676,803], [306,148.5,46,-10,-26,-5,64,270,1083,1676,1676,986.5,839], [0,-412,-412,725,906,1676,1676,1117],\n\t\t[1676,0,0,1676], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1499,1676,1676,1499,1117], [550,306.8,123,7.5,-31,0,1117,1148,1108,992,803],\n\t\t[-412,-412,110,259.5,444,1195,1355,1467,1534.5,1556,1524.3,1429,1277.8,1078], [1117,-412,-412,1117,1117],\n\t\t[534,299.6,120.5,6.9,-31,7.8,124,308.3,551,1556,1556], [306,148.5,46,-10,-26,-5,64,270,1083,1127.5,1144,1128,1079,986.5,839],\n\t\t[463,262.3,118,-412,-412,-264.5,-96,1556,1556], [0,-412,-412,725,906,1039,1120.8,1148,1117],\n\t\t[768,451.5,241,37.5,-31,37.5,241,451.5,768,1073,1288,1487,1556,1487,1288,1073.5], [0,0,1117,1117], [0,0,1117,1118,1119,1117], [0,0,1556,1556],\n\t\t[-412,-412,0,1117,1117], [1117,0,0,1117,1117], [412,248.5,113,-412,-412,-265,-96,1556,1556],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1108.4,1148,1108.4,989.5,802.4], [0,0,1117,1117],\n\t\t[-412,-412,148.5,340.9,577,821.5,1001,1111.3,1148,1115,1020,861.5,646], [549,299,129,-412,-412,-268,-96,1079,1124.5,1143,1102.5,981,792],\n\t\t[558,313.8,127,8.5,-31,7.5,123,308.8,952,1117,1148,1108.6,990.5,803.6], [952,0,0,952,1117,1117],\n\t\t[407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1117], [546,314,142,-412,-412,159,342.3,576,816.6,996.5,1108.6,1146,1145.5,1143,1117,842],\n\t\t[-412,-412,1117,1117], [446,248.5,-412,-412,248,446,1117,1117], [503,310.5,139,16.5,-30,-30,14.5,139,310.5,503,811.5,1117,1117,811.5],\n\t\t[1304,0,0,1304,1499,1499], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1499,1499,1117],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1676,1676,802.4], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1676,1676,1117],\n\t\t[503,310.5,139,16.5,-30,-30,14.5,139,310.5,503,811.5,1676,1676,811.5], [424,240.1,94.5,-0.4,-32,17,190,493,837,1097,1286,1464.5,1519,1496.5,1430],\n\t\t[0,0,1489,1489], [1315,-193,-193,1315,1489,1489], [-189,-189,-13,1489,1489,2], [572,572,732,732], [0,0,1489,1489], [511,511,794,794],\n\t\t[842,-151,-151,1788,1788,981], [642,447.6,292.5,190.9,157,157,190.4,290.5,450.4,663,857.4,1012.5,1114.1,1148,1148,1114.5,1014,854],\n\t\t[-402,-417.5,-423,-395.5,-313,-179.8,1367,1545,1560.5,1566,1538.5,1456,1321.8,-224], [202,202,209,233.4,306.5,588,1104,1104,1097,1072.5,999,719],\n\t\t[362,27,27,362,942,1277,1277,942], [0,0,1393,910], [0,0,910,1393]\n\t];\n\tpublic KERN_C1 =\n\t[\n\t\t'\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n\t\t'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n\t\t'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n\t\t'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n\t\t'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n\t\t'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n\t\t'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n\t\t'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n\t\t'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n\t\t'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n\t\t'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n\t\t'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n\t];\n\tpublic KERN_C2 =\n\t[\n\t\t'\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n\t\t'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n\t\t'?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n\t\t'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n\t\t'.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n\t\t'\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n\t\t'\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n\t\t'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n\t\t'\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n\t\t'\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n\t\t'-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n\t\t'\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n\t\t'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n\t\t'-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n\t];\n\tpublic KERN_K =\n\t[\n\t\t100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n\t\t20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n\t\t50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n\t\t300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n\t\t220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n\t\t50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n\t\t100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n\t\t60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n\t\t10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n\t\t20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n\t];\n\n\tconstructor()\n\t{\n\t\tfor (let n = this.GLYPH_DATA.length - 1; n >= 0; n--) this.pathCache[n] = null;\n\t}\n\n\t// returns the advance value between two glyphs, with kerning included\n\t/*public getKerning(g1:number, g2:number):number\n\t{\n\t\tfor (let n = 0; n < this.GLYPH_COUNT; n++) if (this.KERN_G1[n] == g1 && this.KERN_G2[n] == g2) return this.KERN_K[n];\n\t\treturn 0;\n\t}*/\n\tpublic getKerning(ch1:string, ch2:string):number\n\t{\n\t\tconst sz = this.KERN_K.length;\n\t\tfor (let n = 0; n < sz; n++) if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2) return -this.KERN_K[n];\n\t\treturn 0;\n\t}\n\n\t// for text of a given size, returns [width,ascent,descent]; all of these numbers are positive; text drawing always uses\n\t// the left/baseline as the reference position\n\tpublic static measureText(txt:string, size:number):number[] {return this.main.measureText(txt, size);}\n\tpublic measureText(txt:string, size:number):number[]\n\t{\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size / font.UNITS_PER_EM;\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = this.getIndex(ch);\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t}\n\n\t\treturn [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n\t}\n\n\t// measurement of individual characters: an array of x offsets is returned (0, sz1, sz1+sz2, ...) with kernings\n\t// factored in; this is particularly useful for wordwrapping, as it avoids repeated calls; the size is one greater\n\t// than the string length, to capture the final position of the whole string\n\tpublic static measureWidths(txt:string, size:number):number[] {return this.main.measureWidths(txt, size);}\n\tpublic measureWidths(txt:string, size:number):number[]\n\t{\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size / font.UNITS_PER_EM;\n\t\tlet xpos = [0];\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = this.getIndex(ch);\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\txpos.push(dx * scale);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\n\t\t\txpos.push(dx * scale);\n\t\t}\n\t\treturn xpos;\n\t}\n\n\tprivate pathCache:Path2D[] = [];\n\tprivate pathMissing:Path2D = null;\n\n\t// convert the character into a glyph index\n\t// NOTE: might be faster with a binary search? indexOf is fairly quick though\n\tpublic getIndex(ch:string):number\n\t{\n\t\treturn this.UNICODE.indexOf(ch);\n\t}\n\n\t// returns the raw SVG glyph directly\n\tpublic getRawGlyph(idx:number):string\n\t{\n\t\treturn this.GLYPH_DATA[idx];\n\t}\n\n\t// returns canvas path object for the glyph (cached in case the constructor is rate limiting)\n\tpublic getGlyphPath(idx:number):Path2D\n\t{\n\t\tlet path = this.pathCache[idx];\n\t\tif (path != null) return path;\n\t\tpath = new Path2D(this.GLYPH_DATA[idx]);\n\t\tthis.pathCache[idx] = path;\n\t\treturn path;\n\t}\n\n\t// returns the glyph for \"unknown\"\n\tpublic getMissingPath():Path2D\n\t{\n\t\tif (!this.pathMissing) this.pathMissing = new Path2D(this.MISSING_DATA);\n\t\treturn this.pathMissing;\n\t}\n\n\t// grab duplicates of the points that make up the convex outline for the glyph\n\tpublic getOutlineX(idx:number):number[] {return this.OUTLINE_X[idx].slice(0);}\n\tpublic getOutlineY(idx:number):number[] {return this.OUTLINE_Y[idx].slice(0);}\n\n\t// ------------ special native-font methods ------------\n\n\tprivate ctxReference:CanvasRenderingContext2D = null;\n\n\t// must call this function before accessing native font measuring, because the only way to get access to the functionality is to have\n\t// a canvas object; manufacturing a fake one is a hacky workaround\n\tpublic initNativeFont(ctx?:CanvasRenderingContext2D):void\n\t{\n\t\tif (ctx == null && this.ctxReference) return;\n\t\tif (ctx == null)\n\t\t{\n\t\t\t/*let canvas = dom('<canvas/>').appendTo(document.body);\n\t\t\tthis.ctxReference = (canvas.el as HTMLCanvasElement).getContext('2d');\n\t\t\tcanvas.remove();*/\n\t\t\tlet canvas = new OffscreenCanvas(256, 256);\n\t\t\tthis.ctxReference = canvas.getContext('2d') as unknown as CanvasRenderingContext2D;\n\t\t}\n\t\telse this.ctxReference = ctx;\n\t}\n\n\tpublic static measureTextNative(txt:string, family:string, size:number, opt:FontDataNativeOpt = {}):number[]\n\t{\n\t\treturn this.main.measureTextNative(txt, family, size, opt);\n\t}\n\tpublic measureTextNative(txt:string, family:string, size:number, opt:FontDataNativeOpt = {}):number[]\n\t{\n\t\tif (!this.ctxReference) throw 'Calling measureTextNative without having called initNativeFont first';\n\t\tthis.ctxReference.save();\n\t\tlet pfx = '';\n\t\tif (opt.bold) pfx += 'bold ';\n\t\tif (opt.italic) pfx += 'italic ';\n\t\tthis.ctxReference.font = pfx + size + 'px ' + family;\n\t\tlet metrics = this.ctxReference.measureText(txt);\n\t\tthis.ctxReference.restore();\n\n\t\t// unfortunately the font-bounding values aren't implemented yet, and will come out as null; default to the same fudge-factors as built in font\n\t\t//return [metrics.width, metrics.fontBoundingBoxAscent, metrics.fontBoundingBoxDescent];\n\t\tconst FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n\t\treturn [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {FontData} from './FontData';\n\n/*\n\tInterface for providing information about the device onto which a molecule is to be drawn, without it needing to\n\tknow what the device actually is.\n*/\n\nexport interface ArrangeMeasurement\n{\n\t// conversion between angstrom units of molecules, and device units\n\tscale():number;\n\tangToX(ax:number):number;\n\tangToY(ay:number):number;\n\txToAng(px:number):number;\n\tyToAng(py:number):number;\n\n\t// return true for math-style Y-axis, false for screen-style Y-axis\n\tyIsUp():boolean;\n\n\t// returns an array of 3 numbers: [ascent, descent, width]\n\tmeasureText(str:string, fontSize:number):number[];\n}\n\n// a suitable default which is useful for creating offline renderings\nexport class OutlineMeasurement implements ArrangeMeasurement\n{\n\tprivate invScale:number;\n\n\tconstructor(private offsetX:number, private offsetY:number, private pointScale:number)\n\t{\n\t\tthis.invScale = 1 / pointScale;\n\t}\n\n\tpublic scale():number {return this.pointScale;}\n\tpublic angToX(ax:number):number {return ax * this.pointScale + this.offsetX;}\n\tpublic angToY(ay:number):number {return ay * -this.pointScale + this.offsetY;}\n\tpublic xToAng(px:number):number {return (px - this.offsetX) * this.invScale;}\n\tpublic yToAng(py:number):number {return (py - this.offsetY) * -this.invScale;}\n\n\t// return true for math-style Y-axis, false for screen-style Y-axis\n\tpublic yIsUp():boolean {return false;}\n\n\t// returns an array of 3 numbers: [ascent, descent, width]\n\tpublic measureText(str:string, fontSize:number):number[] {return FontData.main.measureText(str, fontSize);}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2024 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, DEGRAD, invZ, norm2_xy, norm_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMolecule, BLine, BLineType} from './ArrangeMolecule';\nimport {MetaVector, TextAlign} from './MetaVector';\nimport {RenderEffects, RenderMnemonics, RenderMnemonicType, RenderPolicy} from './Rendering';\n\n/*\n    Controlling class for drawing a molecule in a vector graphics format: this turns an \"arranged molecule\" instance into the series of primitives that\n    can be mapped directly to a rendering engine or output format, as encapsulated by the VectorGfxBuilder subclasses.\n\n    Note that in this implementation of rendering, only the molecule is drawn, without interactive effects. The constructor/draw/build sequence should be\n    called only once during the lifetime of this object.\n*/\n\nexport class DrawMolecule\n{\n\tpublic mnemonics:RenderMnemonics = null; // set this externally to request\n\n\tprivate mol:Molecule;\n\tprivate policy:RenderPolicy;\n\tprivate effects:RenderEffects;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\tconstructor(private layout:ArrangeMolecule, private vg:MetaVector)\n\t{\n\t\tthis.mol = layout.getMolecule();\n\t\tthis.policy = layout.getPolicy();\n\t\tthis.effects = layout.getEffects();\n\t\tthis.scale = layout.getScale();\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// access to content\n\tpublic getMolecule():Molecule {return this.mol;}\n\tpublic getMetaVector():MetaVector {return this.vg;}\n\tpublic getLayout():ArrangeMolecule {return this.layout;}\n\tpublic getPolicy():RenderPolicy {return this.policy;}\n\tpublic getEffects():RenderEffects {return this.effects;}\n\n\t// renders the molecular structure\n\tpublic draw():void\n\t{\n\t\t// debugging: draw the \"space filling\" areas-to-avoid\n\t\tlet DRAW_SPACE = false;\n\t\tif (DRAW_SPACE)\n\t\t{\n\t\t\tlet bounds = this.layout.determineBoundary();\n\t\t\tthis.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n\t\t\tfor (let n = 0; n < this.layout.numSpace(); n++)\n\t\t\t{\n\t\t\t\tlet spc = this.layout.getSpace(n);\n\t\t\t\tthis.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n\t\t\t\tif (spc.px != null && spc.py != null && spc.px.length > 2) this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.drawUnderEffects();\n\n\t\t// emit the drawing elements as vector primitives\n\n\t\tlet {mol, layout, effects, policy, vg} = this;\n\n\t\t// special deal: bonds that are drawn together\n\t\tlet hideBonds = new Set<number>(effects.hideBonds);\n\t\tfor (let i = 1; i <= mol.numBonds; i++) if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i))\n\t\t{\n\t\t\tlet atom = mol.bondTo(i);\n\t\t\tif (layout.getPoint(atom - 1).text) continue; // invisible carbon only\n\t\t\tfor (let j of mol.atomAdjBonds(atom)) if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j))\n\t\t\t{\n\t\t\t\tlet b1 = layout.getLines().find((b) => b.bnum == i);\n\t\t\t\tlet b2 = layout.getLines().find((b) => b.bnum == j);\n\n\t\t\t\tlet th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n\t\t\t\tlet th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n\t\t\t\tif (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tthis.drawFusedWedge(b1, b2);\n\t\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n\t\t\t\t\thideBonds.add(i);\n\t\t\t\t\thideBonds.add(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < layout.numLines(); n++)\n\t\t{\n\t\t\tlet b = layout.getLine(n);\n\t\t\tif (hideBonds.has(b.bnum)) continue;\n\n\t\t\tif (b.type == BLineType.Normal)\n\t\t\t{\n\t\t\t\tvg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Inclined)\n\t\t\t{\n\t\t\t\tthis.drawBondInclined(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Declined)\n\t\t\t{\n\t\t\t\tthis.drawBondDeclined(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Unknown)\n\t\t\t{\n\t\t\t\tthis.drawBondUnknown(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Dotted || b.type == BLineType.DotDir)\n\t\t\t{\n\t\t\t\tthis.drawBondDotted(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple)\n\t\t\t{\n\t\t\t\tthis.drawBondIncMulti(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t}\n\n\t\tlet fg = policy.data.foreground;\n\t\tfor (let r of layout.getRings())\n\t\t{\n\t\t\tif (r.theta != 0)\n\t\t\t{\n\t\t\t\tvar bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n\t\t\t\tvg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n\t\t\t}\n\t\t}\n\t\tfor (let p of layout.getPaths())\n\t\t{\n\t\t\tvg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n\t\t}\n\n\t\tfor (let n = 0; n < layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = layout.getPoint(n);\n\t\t\tif (effects.hideAtoms.has(p.anum)) continue;\n\n\t\t\tlet txt = p.text;\n\t\t\tlet cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n\t\t\tif (txt == null)\n\t\t\t{\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n\t\t\t\tcontinue; // is a point, so do not draw anything\n\t\t\t}\n\t\t\tlet fsz = p.fsz;\n\t\t\tlet col = p.col;\n\n\t\t\twhile (txt.endsWith('.'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet r = fsz * 0.15;\n\t\t\t\tvg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n\n\t\t\t\tcx -= dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(0, txt.length - 1);\n\t\t\t}\n\t\t\twhile (txt.startsWith('+'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n\t\t\t\tvg.drawLine(x - r, y, x + r, y, col, lsz);\n\t\t\t\tvg.drawLine(x, y - r, x, y + r, col, lsz);\n\n\t\t\t\tcx += dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(1, txt.length);\n\t\t\t}\n\t\t\twhile (txt.startsWith('-'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n\t\t\t\tvg.drawLine(x - r, y, x + r, y, col, lsz);\n\n\t\t\t\tcx += dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(1, txt.length);\n\t\t\t}\n\t\t\tif (txt.length > 0)\n\t\t\t{\n\t\t\t\tvg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n\t\t\t}\n\t\t\telse this.mnemonics?.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n\t\t}\n\n\t\tthis.drawOverEffects();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate drawUnderEffects():void\n\t{\n\t\tlet mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n\n\t\tfor (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++)\n\t\t{\n\t\t\tif (effects.hideAtoms.has(n + 1)) continue;\n\n\t\t\tlet dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n\t\t\tlet a = layout.getPoint(n);\n\n\t\t\tlet rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n\t\t\tlet wdots = Math.ceil(2 * rw / (3 * dw));\n\t\t\tlet hdots = Math.ceil(2 * rh / (3 * dw));\n\t\t\tlet wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n\n\t\t\tfor (let i = 0; i <= wdots; i++)\n\t\t\t{\n\t\t\t\tlet x = a.oval.cx - rw + i * wspc;\n\t\t\t\tvg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\t\t\tfor (let i = 1; i < hdots; i++)\n\t\t\t{\n\t\t\t\tlet y = a.oval.cy - rh + i * hspc;\n\t\t\t\tvg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n\t\t}\n\n\t\tfor (let key in effects.dottedRectOutline)\n\t\t{\n\t\t\tlet atom = parseInt(key), col = effects.dottedRectOutline[key];\n\t\t\tlet a = layout.getPoint(atom - 1);\n\t\t\tlet rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n\t\t\tlet sz = 0.05 * scale;\n\t\t\tlet xdots = Math.max(1, Math.round(rw / (2 * sz)));\n\t\t\tlet ydots = Math.max(1, Math.round(rh / (2 * sz)));\n\t\t\tlet invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n\t\t\tfor (let n = 0; n <= xdots; n++)\n\t\t\t{\n\t\t\t\tlet x = a.oval.cx - rw + n * invX;\n\t\t\t\tvg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\t\t\tfor (let n = 1; n < ydots; n++)\n\t\t\t{\n\t\t\t\tlet y = a.oval.cy - rh + n * invY;\n\t\t\t\tvg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n\t\t}\n\n\t\tfor (let key in effects.dottedBondCross)\n\t\t{\n\t\t\tlet bond = parseInt(key), col = effects.dottedBondCross[key];\n\t\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n\t\t\tfor (let n = 0; n < layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet b = layout.getLine(n);\n\t\t\t\tif (b.bnum == bond)\n\t\t\t\t{\n\t\t\t\t\tx1 += b.line.x1; y1 += b.line.y1;\n\t\t\t\t\tx2 += b.line.x2; y2 += b.line.y2;\n\t\t\t\t\tbcount += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bcount > 1)\n\t\t\t{\n\t\t\t\tlet inv = 1 / bcount;\n\t\t\t\t[x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n\t\t\t}\n\n\t\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\t\tlet inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n\t\t\tfor (let p of [-2, -1, 1, 2])\n\t\t\t{\n\t\t\t\tlet x = cx + p * ox, y = cy + p * oy;\n\t\t\t\tvg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n\t\t}\n\t}\n\n\tprivate drawOverEffects():void\n\t{\n\t\tlet mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n\n\t\tfor (let a of effects.overlapAtoms)\n\t\t{\n\t\t\tlet p = layout.getPoint(a - 1);\n\t\t\tlet rad = scale * 0.2;\n\t\t\tvg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n\t\t\tvg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n\t\t}\n\n\t\tfor (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++) if (effects.atomCircleSz[n] > 0)\n\t\t{\n\t\t\tlet dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n\t\t\tlet p = layout.getPoint(n);\n\t\t\tvg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n\t\t}\n\t}\n\n\tprivate drawBondInclined(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet norm = head / Math.sqrt(dx * dx + dy * dy);\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tlet px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n\n\t\t// if endpoint is divalent, consider modifying the polygon shape\n\t\tif (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2)\n\t\t{\n\t\t\tlet other:BLine = null;\n\t\t\tfor (let n = 0; n < this.layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet o = this.layout.getLine(n);\n\t\t\t\tif (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto))\n\t\t\t\t{\n\t\t\t\t\tif (other != null) {other = null; break;} // must be only one\n\t\t\t\t\tother = o;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (other != null)\n\t\t\t{\n\t\t\t\tlet th1 = Math.atan2(y1 - y2, x1 - x2);\n\t\t\t\tlet th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n\t\t\t\tif (b.bto == other.bfr) th2 += Math.PI;\n\t\t\t\tlet diff = Math.abs(angleDiff(th1, th2));\n\t\t\t\tif (diff > 105 * DEGRAD && diff < 135 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tlet ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n\t\t\t\t\tlet ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n\t\t\t\t\tpx[1] = ixy1[0];\n\t\t\t\t\tpy[1] = ixy1[1];\n\t\t\t\t\tpx[2] = ixy2[0];\n\t\t\t\t\tpy[2] = ixy2[1];\n\n\t\t\t\t\t// extend slightly, to overlap the line\n\t\t\t\t\tlet dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n\t\t\t\t\tpx[1] += dx1 * inv1;\n\t\t\t\t\tpy[1] += dy1 * inv1;\n\t\t\t\t\tlet dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n\t\t\t\t\tpx[2] += dx2 * inv1;\n\t\t\t\t\tpy[2] += dy2 * inv1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if endpoint is trivalent, another modification is considered\n\t\tif (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3)\n\t\t{\n\t\t\tlet other1:BLine = null, other2:BLine = null;\n\t\t\tfor (let n = 0; n < this.layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet o = this.layout.getLine(n);\n\t\t\t\tif (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto))\n\t\t\t\t{\n\t\t\t\t\tif (other1 == null) other1 = o;\n\t\t\t\t\telse if (other2 == null) other2 = o;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tother1 = other2 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (other1 != null && other2 != null)\n\t\t\t{\n\t\t\t\tlet th1 = Math.atan2(y1 - y2, x1 - x2);\n\t\t\t\tlet th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n\t\t\t\tlet th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n\t\t\t\tif (b.bto == other1.bfr) th2 += Math.PI;\n\t\t\t\tif (b.bto == other2.bfr) th3 += Math.PI;\n\t\t\t\tlet dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n\t\t\t\tlet dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n\t\t\t\tlet diff3 = Math.abs(angleDiff(th2, th3));\n\t\t\t\tif (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n\t\t\t\t\tdiff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n\t\t\t\t\tdiff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tif (dth1 < 0) [other1, other2] = [other2, other1];\n\t\t\t\t\tlet ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n\t\t\t\t\tlet ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n\t\t\t\t\tpx = [x1, ixy1[0], x2, ixy2[0]];\n\t\t\t\t\tpy = [y1, ixy1[1], y2, ixy2[1]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n\t}\n\tprivate drawFusedWedge(b1:BLine, b2:BLine):void\n\t{\n\t\tconst terminalPoints = (b:BLine, other:BLine):{outerX:number, outerY:number, innerX:number, innerY:number} =>\n\t\t{\n\t\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\t\tlet norm = b.head / Math.sqrt(dx * dx + dy * dy);\n\t\t\tlet ox = norm * dy, oy = -norm * dx;\n\n\t\t\tlet tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n\t\t\tlet dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n\t\t\tlet dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n\t\t\tif (dsq1 > dsq2)\n\t\t\t\treturn {outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2};\n\t\t\telse\n\t\t\t\treturn {outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1};\n\t\t};\n\n\t\tlet u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n\n\t\tlet [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n\n\t\tlet px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n\t\tlet py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n\t}\n\n\tprivate drawBondDeclined(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet ext = Math.sqrt(dx * dx + dy * dy);\n\t\tlet nsteps = Math.ceil(ext * 2.5 * this.invScale);\n\t\tlet norm = head / ext;\n\t\tlet ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n\t\tlet holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n\t\tfor (let i = 0; i <= nsteps + 1; i++)\n\t\t{\n\t\t\tlet cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n\t\t\tlet ix = ox * i * invSteps, iy = oy * i * invSteps;\n\t\t\tthis.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n\t\t}\n\t}\n\tprivate drawBondUnknown(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet ext = Math.sqrt(dx * dx + dy * dy);\n\t\tlet nsteps = Math.ceil(ext * 3.5 * this.invScale);\n\t\tlet norm = head / ext;\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tlet sz = 1 + 3 * (nsteps + 1);\n\t\tlet x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n\t\tx[0] = x1;\n\t\ty[0] = y1;\n\t\tctrl[0] = false;\n\n\t\tfor (let i = 0, j = 1; i <= nsteps; i++, j += 3)\n\t\t{\n\t\t\tlet ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n\t\t\tlet cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n\t\t\tlet bx = (ax + cx) / 2, by = (ay + cy) / 2;\n\t\t\tlet sign = i % 2 == 0 ? 1 : -1;\n\n\t\t\tx[j] = ax;\n\t\t\tx[j + 1] = bx + sign * ox;\n\t\t\tx[j + 2] = cx;\n\t\t\ty[j] = ay;\n\t\t\ty[j + 1] = by + sign * oy;\n\t\t\ty[j + 2] = cy;\n\t\t\tctrl[j] = true;\n\t\t\tctrl[j + 1] = true;\n\t\t\tctrl[j + 2] = false;\n\t\t}\n\t\tthis.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n\t}\n\tprivate drawBondDotted(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size;\n\n\t\tlet radius = size, dist = norm_xy(dx, dy);\n\t\tif (dist < 0.01) return;\n\t\tlet nudge = 0.5 * size / dist;\n\t\tx1 += nudge * dx;\n\t\ty1 += nudge * dy;\n\t\tx2 -= nudge * dx;\n\t\ty2 -= nudge * dy;\n\t\tdx = x2 - x1;\n\t\tdy = y2 - y1;\n\n\t\tlet nsteps = Math.ceil(0.2 * dist / radius);\n\t\tlet invSteps = 1.0 / (nsteps + 1);\n\t\tfor (let i = 0; i <= nsteps + 1; i++)\n\t\t{\n\t\t\tlet r = radius;\n\t\t\tif (b.type == BLineType.DotDir) r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n\t\t\tlet cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n\t\t\tthis.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n\t\t}\n\t}\n\tprivate drawBondIncMulti(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet norm = head / Math.sqrt(dx * dx + dy * dy);\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tthis.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n\n\t\tif (b.type == BLineType.IncDouble)\n\t\t{\n\t\t\tthis.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n\t\t\tthis.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentEntry} from '../aspect/Experiment';\nimport {MolUtil} from '../mol/MolUtil';\nimport {invZ, norm_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeComponent, ArrangeComponentAnnot, ArrangeComponentType, ArrangeExperiment} from './ArrangeExperiment';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {ArrangeMolecule} from './ArrangeMolecule';\nimport {DrawMolecule} from './DrawMolecule';\nimport {MetaVector, TextAlign} from './MetaVector';\nimport {RenderEffects, RenderPolicy} from './Rendering';\n\n/*\n\tControlling class for drawing a molecule in a vector graphics format: this turns an \"arranged molecule\" instance into the series of primitives that\n\tcan be mapped directly to a rendering engine or output format, as encapsulated by the VectorGfxBuilder subclasses.\n\n\tNote that in this implementation of rendering, only the molecule is drawn, without interactive effects. The constructor/draw/build sequence should be\n\tcalled only once during the lifetime of this object.\n*/\n\nexport class DrawExperiment\n{\n\tprivate entry:ExperimentEntry;\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// optional hooks to intercept rendering\n\tpublic preDrawComponent:(vg:MetaVector, idx:number, xc:ArrangeComponent) => void = null;\n\tpublic preDrawMolecule:(vg:MetaVector, idx:number, xc:ArrangeComponent, arrmol:ArrangeMolecule) => void = null;\n\tpublic postDrawMolecule:(vg:MetaVector, idx:number, xc:ArrangeComponent, arrmol:ArrangeMolecule) => void = null;\n\n\tpublic molDrawn:ArrangeMolecule[] = []; // useful to obtain later, sometimes\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeExperiment, private vg:MetaVector)\n\t{\n\t\tthis.entry = layout.entry;\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\t// debug: draw outlines of components\n\t\t//for (let xc of this.layout.components) this.vg.drawRect(xc.box.x, xc.box.y, xc.box.w, xc.box.h, MetaVector.NOCOLOUR, 0, 0xF0000000);\n\n\t\tthis.molDrawn = Vec.anyArray(null, this.layout.components.length);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet xc = this.layout.components[n];\n\t\t\tif (xc.type == ArrangeComponentType.Arrow) this.drawSymbolArrow(xc);\n\t\t\telse if (xc.type == ArrangeComponentType.Plus) this.drawSymbolPlus(xc);\n\t\t\telse this.drawComponent(n, xc);\n\t\t}\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawComponent(idx:number, xc:ArrangeComponent):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet bx = xc.box.x + xc.padding, by = xc.box.y + xc.padding;\n\t\tlet bw = xc.box.w - 2 * xc.padding, bh = xc.box.h - 2 * xc.padding;\n\n\t\tif (this.preDrawComponent) this.preDrawComponent(vg, idx, xc);\n\n\t\tif (xc.srcIdx < 0 && MolUtil.isBlank(xc.mol) && Vec.isBlank(xc.text))\n\t\t{\n\t\t\tlet fsz = 0.5 * bh;\n\t\t\tvg.drawText(bx + 0.5 * bw, by + 0.5 * bh, '?', fsz, policy.data.foreground, TextAlign.Centre | TextAlign.Middle);\n\t\t\treturn;\n\t\t}\n\n\t\t//vg.drawRect(bx, by, bw, bh, 0xFF0000, 2, null);\n\n\t\tif (Vec.notBlank(xc.text))\n\t\t{\n\t\t\tlet wad = this.measure.measureText('!', xc.fszText), th = wad[1] + wad[2];\n\t\t\tlet totalH = th * xc.text.length;\n\n\t\t\t//vg.drawRect(bx, by + bh - totalH, bw, totalH, 0x00FF00, 1, null);\n\n\t\t\tlet ty = by + bh - th * (xc.text.length - 1);\n\t\t\tfor (let line of xc.text)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line, xc.fszText);\n\t\t\t\t/* !! text has to be wrapped: need features for this, in some static module...\n\t\t\t\tif (tsz.width>limitBounds.width) tsz=textSizeWithin(xc.text,fontText,limitBounds,NSLineBreakByCharWrapping);\n\t\t\t\t... in DrawUtil\t*/\n\t\t\t\tvg.drawText(bx + 0.5 * bw, ty, line, xc.fszText, policy.data.foreground, TextAlign.Centre | TextAlign.Baseline);\n\t\t\t\tty += th;\n\t\t\t}\n\n\t\t\tbh -= totalH + 0.5 * xc.fszText;\n\t\t}\n\n\t\t//vg.drawRect(bx, by, bw, bh, 0x0000FF, 1, null);\n\n\t\tlet stoichPos:{tx?:number, th?:number, lx?:number, lw?:number} = {};\n\t\tif (xc.leftNumer)\n\t\t{\n\t\t\tlet wad1 = this.measure.measureText(xc.leftNumer, xc.fszLeft);\n\t\t\tif (!xc.leftDenom)\n\t\t\t{\n\t\t\t\tstoichPos.tx = bx;\n\t\t\t\tlet useW = wad1[0] + ArrangeExperiment.COMP_GAP_LEFT * (wad1[1] + wad1[2]);\n\t\t\t\tbx += useW;\n\t\t\t\tbw -= useW;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet wad2 = this.measure.measureText(xc.leftDenom, xc.fszLeft);\n\t\t\t\tlet tw = Math.max(wad1[0], wad2[0]);\n\t\t\t\tlet x = bx + 0.5 * tw, y = by + 0.5 * bh;\n\t\t\t\tstoichPos.tx = x;\n\t\t\t\tstoichPos.th = wad1[2];\n\t\t\t\tstoichPos.lx = bx;\n\t\t\t\tstoichPos.lw = tw;\n\t\t\t\tlet useW = tw + ArrangeExperiment.COMP_GAP_LEFT * (wad1[1] + wad1[2]);\n\t\t\t\tbx += useW;\n\t\t\t\tbw -= useW;\n\t\t\t}\n\t\t}\n\t\tif (xc.annot != 0)\n\t\t{\n\t\t\tlet aw = ArrangeExperiment.COMP_ANNOT_SIZE * this.scale;\n\t\t\tbw -= aw;\n\t\t\tthis.drawAnnotation(xc.annot, bx + bw, by, aw, bh);\n\t\t}\n\n\t\tlet baseY = by + 0.5 * bh;\n\t\tif (MolUtil.notBlank(xc.mol))\n\t\t{\n\t\t\tlet effects = new RenderEffects();\n\t\t\tif (this.layout.includeAtomMap)\n\t\t\t{\n\t\t\t\teffects.atomDecoText = Vec.stringArray('', xc.mol.numAtoms);\n\t\t\t\teffects.atomDecoCol = Vec.numberArray(this.layout.colourAtomMap, xc.mol.numAtoms);\n\t\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, xc.mol.numAtoms);\n\t\t\t\tfor (let n = 1; n <= xc.mol.numAtoms; n++) if (xc.mol.atomMapNum(n) > 0) effects.atomDecoText[n - 1] = xc.mol.atomMapNum(n).toString();\n\t\t\t}\n\n\t\t\tlet usePolicy = policy;\n\t\t\tif (xc.monochromeColour != null)\n\t\t\t{\n\t\t\t\tusePolicy = usePolicy.clone();\n\t\t\t\tusePolicy.data.foreground = xc.monochromeColour;\n\t\t\t\tusePolicy.data.atomCols = Vec.numberArray(xc.monochromeColour, usePolicy.data.atomCols.length);\n\t\t\t}\n\n\t\t\tlet arrmol = new ArrangeMolecule(xc.mol, this.layout.measure, usePolicy, effects);\n\t\t\tarrmol.arrange();\n\t\t\tarrmol.squeezeInto(bx, by, bw, bh, 0);\n\t\t\tbaseY = this.calculateMoleculeBaseline(arrmol) ?? baseY;\n\n\t\t\tif (this.preDrawMolecule) this.preDrawMolecule(vg, idx, xc, arrmol);\n\n\t\t\tlet drawmol = new DrawMolecule(arrmol, vg);\n\t\t\tdrawmol.draw();\n\n\t\t\tif (this.postDrawMolecule) this.postDrawMolecule(vg, idx, xc, arrmol);\n\n\t\t\tthis.molDrawn[idx] = arrmol;\n\t\t}\n\n\t\tif (xc.leftNumer && !xc.leftDenom)\n\t\t{\n\t\t\tvg.drawText(stoichPos.tx, baseY, xc.leftNumer, xc.fszLeft, policy.data.foreground, TextAlign.Left | TextAlign.Middle);\n\t\t}\n\t\telse if (xc.leftNumer && xc.leftDenom)\n\t\t{\n\t\t\tvg.drawText(stoichPos.tx, baseY, xc.leftNumer, xc.fszLeft, policy.data.foreground, TextAlign.Centre | TextAlign.Bottom);\n\t\t\tvg.drawText(stoichPos.tx, baseY + stoichPos.th, xc.leftDenom, xc.fszLeft, policy.data.foreground, TextAlign.Centre | TextAlign.Top);\n\t\t\tvg.drawLine(stoichPos.lx, baseY, stoichPos.lx + stoichPos.lw, baseY, policy.data.foreground, this.scale * 0.03);\n\t\t}\n\t}\n\tprivate drawSymbolArrow(xc:ArrangeComponent):void\n\t{\n\t\tlet bx = xc.box.x + xc.padding, by = xc.box.y + xc.padding;\n\t\tlet bw = xc.box.w - 2 * xc.padding, bh = xc.box.h - 2 * xc.padding;\n\n\t\tif (bw > bh)\n\t\t\tthis.drawArrow(bx, by + 0.5 * bh, bx + bw, by + 0.5 * bh, bh, this.policy.data.foreground, this.scale * 0.05);\n\t\telse\n\t\t\tthis.drawArrow(bx + 0.5 * bw, by, bx + 0.5 * bw, by + bh, bw, this.policy.data.foreground, this.scale * 0.05);\n\t}\n\tprivate drawSymbolPlus(xc:ArrangeComponent):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet x1 = xc.box.x + xc.padding, y1 = xc.box.y + xc.padding;\n\t\tlet x3 = x1 + xc.box.w - 2 * xc.padding, y3 = y1 + xc.box.h - 2 * xc.padding;\n\t\tlet x2 = 0.5 * (x1 + x3), y2 = 0.5 * (y1 + y3);\n\t\tlet lw = 0.2 * 0.5 * (x3 - x1 + y3 - y1);\n\n\t\tvg.drawLine(x1, y2, x3, y2, policy.data.foreground, lw);\n\t\tvg.drawLine(x2, y1, x2, y3, policy.data.foreground, lw);\n\t}\n\tprivate drawAnnotation(annot:number, bx:number, by:number, bw:number, bh:number):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet sz = bw, x2 = bx + bw, y2 = by + bh, x1 = x2 - sz, y1 = by;\n\t\tif (annot == ArrangeComponentAnnot.Primary) y2 = y1 + sz;\n\t\telse if (annot == ArrangeComponentAnnot.Waste) y1 = y2 - sz;\n\n\t\t//vg.drawRect(x1,y1,x2-x1,y2-y1,0x000000,1,NOCOLOUR);\n\n\t\tif (annot == ArrangeComponentAnnot.Primary)\n\t\t{\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ext = 0.25 * sz;\n\t\t\tlet px = [cx, cx + 0.866 * ext, cx + 0.866 * ext, cx, cx - 0.866 * ext, cx - 0.866 * ext];\n\t\t\tlet py = [cy - ext, cy - 0.5 * ext, cy + 0.5 * ext, cy + ext, cy + 0.5 * ext, cy - 0.5 * ext];\n\t\t\tlet lw = 0.05 * this.scale;\n\t\t\tvg.drawLine(px[0], py[0], px[3], py[3], policy.data.foreground, lw);\n\t\t\tvg.drawLine(px[1], py[1], px[4], py[4], policy.data.foreground, lw);\n\t\t\tvg.drawLine(px[2], py[2], px[5], py[5], policy.data.foreground, lw);\n\t\t\tlet inset = 0.1 * sz;\n\t\t\tvg.drawOval(x1 + 0.5 * sz, y1 + 0.5 * sz, 0.5 * sz - inset, 0.5 * sz - inset, policy.data.foreground, lw, MetaVector.NOCOLOUR);\n\t\t}\n\t\telse if (annot == ArrangeComponentAnnot.Waste)\n\t\t{\n\t\t\tlet cx = x1 + 0.7 * sz, cy = 0.5 * (y1 + y2), quart = 0.25 * sz;\n\t\t\tlet lw = 0.05 * this.scale;\n\n\t\t\tlet px = [x1 + 0.1 * sz, cx - quart, cx, cx, cx];\n\t\t\tlet py = [y1, y1, y1, cy - quart, cy];\n\t\t\tlet ctrl = [false, false, true, false, false];\n\t\t\tvg.drawPath(px, py, ctrl, false, policy.data.foreground, lw, MetaVector.NOCOLOUR, false);\n\n\t\t\tfor (let n = 0; n < 4; n++)\n\t\t\t{\n\t\t\t\tlet y = cy + n * 0.45 * sz * (1.0 / 3), dw = (3.1 - n) * 0.1 * sz;\n\t\t\t\tvg.drawLine(cx - dw, y, cx + dw, y, policy.data.foreground, lw);\n\t\t\t}\n\t\t}\n\t\telse if (annot == ArrangeComponentAnnot.Implied)\n\t\t{\n\t\t\tlet tw = 0.5 * sz, th = 0.75 * sz;\n\t\t\tlet cx = x2 - 0.5 * tw, cy = y1 + 0.5 * th;\n\t\t\tlet ty = y1 + 0.25 * th, dsz = sz * 0.1, hsz = 0.5 * dsz;\n\t\t\tlet lw = 0.05 * this.scale, fg = policy.data.foreground;\n\n\t\t\tvg.drawLine(cx, y1, cx, y1 + th, fg, lw);\n\t\t\tvg.drawLine(x2 - tw, ty, x2, ty, fg, lw);\n\t\t\tvg.drawLine(x2 - tw, cy, x2, cy, fg, lw);\n\t\t\tvg.drawOval(x2 - tw + hsz, y1 + th - hsz, hsz, hsz, 0, 0, fg);\n\t\t\tvg.drawOval(x2 - hsz, y1 + th - hsz, hsz, hsz, 0, 0, fg);\n\t\t}\n\t}\n\n\tprivate drawArrow(x1:number, y1:number, x2:number, y2:number, headsz:number, colour:number, linesz:number):void\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy));\n\t\tdx *= invD;\n\t\tdy *= invD;\n\t\tlet ox = dy, oy = -dx;\n\t\tlet hx = x2 - dx * headsz, hy = y2 - dy * headsz;\n\t\tlet px =\n\t\t[\n\t\t\tx1 + ox * 0.5 * linesz,\n\t\t\thx + ox * 0.5 * linesz,\n\t\t\thx + ox * 0.5 * headsz,\n\t\t\tx2,\n\t\t\thx - ox * 0.5 * headsz,\n\t\t\thx - ox * 0.5 * linesz,\n\t\t\tx1 - ox * 0.5 * linesz\n\t\t];\n\t\tlet py =\n\t\t[\n\t\t\ty1 + oy * 0.5 * linesz,\n\t\t\thy + oy * 0.5 * linesz,\n\t\t\thy + oy * 0.5 * headsz,\n\t\t\ty2,\n\t\t\thy - oy * 0.5 * headsz,\n\t\t\thy - oy * 0.5 * linesz,\n\t\t\ty1 - oy * 0.5 * linesz\n\t\t];\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, colour, true);\n\t}\n\n\t// finds a Y-position that runs through approximately the centre of the molecule, for purposes of sub-positioning; returns null if there's nothing\n\t// really meaningful\n\tprivate calculateMoleculeBaseline(arrmol:ArrangeMolecule):number\n\t{\n\t\tlet mol = arrmol.getMolecule();\n\t\tlet midY = mol.boundary().midY();\n\t\tlet ax = Number.POSITIVE_INFINITY, ay:number = null, baseY:number = null;\n\t\tconst TOLERANCE = 0.1;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tif (Math.abs(y - midY) < TOLERANCE && x < ax)\n\t\t\t{\n\t\t\t\t[ax, ay] = [x, y];\n\t\t\t\tbaseY = arrmol.getPoint(n - 1).oval.cy;\n\t\t\t}\n\t\t}\n\n\t\treturn baseY;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectGraphicRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tSAR Table: provides scaffold/substituent/molecule equivalence based on fragment placeholders (R-groups).\n\n\tNote that the aspect also includes the concept of \"fields\", with predefined units and ranges and rendering information. This\n\twas put to good effect in the eponymous mobile app, but is now deprecated: these information are stored as a pass-through for\n\tcompatibility purposes.\n*/\n\n// description of the overall structure of the aspect\ninterface SARTableFields\n{\n\t// column names for underlying content\n\tconstruct:string; // molecule\n\tlocked:string; // boolean\n\tscaffold:string; // molecule\n\tsubstituents:string[]; // molecule\n\n\t// additional configuration lines from the header, implemented as a passthrough: stored for compatibility, but not used anymore\n\tmetadata:string[];\n}\n\n// a single entry, in a workable form\ninterface SARTableEntry\n{\n\tconstruct:Molecule;\n\tlocked:boolean;\n\tscaffold:Molecule;\n\tsubstNames:string[];\n\tsubstituents:Molecule[];\n}\n\nexport class SARTable extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.SARTable';\n\tpublic static NAME = 'SAR Table';\n\n\tprivate static DESCR_CONSTRUCT = 'Structure of constructed molecule';\n\tprivate static DESCR_LOCKED = 'Whether constructed molecule should be rebuilt';\n\tprivate static DESCR_SCAFFOLD = 'Decorated core scaffold of molecule';\n\tprivate static DESCR_SUBSTITUENT = 'Substituent fragment to be attached to scaffold';\n\n\t// indices that can be used to request specific graphics\n\tpublic static RENDER_CONSTRUCT = 0;\n\tpublic static RENDER_SCAFFOLD = 1;\n\tpublic static RENDER_SUBSTITUENT = 2; // (and beyond)\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isSARTable(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == SARTable.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(SARTable.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getFields():SARTableFields\n\t{\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE) return this.parseMetaData(this.ds.getExtData(n));\n\t\treturn null;\n\t}\n\tpublic setFields(fields:SARTableFields):void\n\t{\n\t\tlet content = this.formatMetaData(fields);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(SARTable.NAME, SARTable.CODE, content);\n\t}\n\tpublic getEntry(row:number):SARTableEntry\n\t{\n\t\tlet fields = this.getFields();\n\t\tlet entry:SARTableEntry =\n\t\t{\n\t\t\tconstruct: this.ds.getMolecule(row, fields.construct),\n\t\t\tlocked: !!this.ds.getBoolean(row, fields.locked),\n\t\t\tscaffold: this.ds.getMolecule(row, fields.scaffold),\n\t\t\tsubstNames: [],\n\t\t\tsubstituents: []\n\t\t};\n\t\tfor (let subst of fields.substituents)\n\t\t{\n\t\t\tentry.substNames.push(subst);\n\t\t\tentry.substituents.push(this.ds.getMolecule(row, subst));\n\t\t}\n\t\treturn entry;\n\t}\n\tpublic setEntry(row:number, entry:SARTableEntry):void\n\t{\n\t\tlet fields = this.getFields();\n\n\t\tlet colConstruct = this.ds.findColByName(fields.construct, DataSheetColumn.Molecule);\n\t\tif (colConstruct >= 0) this.ds.setMolecule(row, colConstruct, entry.construct);\n\n\t\tlet colLocked = this.ds.findColByName(fields.locked, DataSheetColumn.Boolean);\n\t\tif (colLocked >= 0) this.ds.setBoolean(row, colLocked, entry.locked);\n\n\t\tlet colScaffold = this.ds.findColByName(fields.scaffold, DataSheetColumn.Molecule);\n\t\tif (colScaffold >= 0) this.ds.setMolecule(row, colScaffold, entry.scaffold);\n\n\t\tfor (let n = 0; n < fields.substituents.length; n++)\n\t\t{\n\t\t\tlet colSubst = this.ds.findColByName(fields.substituents[n], DataSheetColumn.Molecule);\n\t\t\tif (colSubst >= 0) this.ds.setMolecule(row, colSubst, entry.substituents[n]);\n\t\t}\n\t}\n\n\t// goes through the list of substituent names, and makes sure that each of them is referred to in the extensions, and also that the\n\t// underlying column exists\n\tpublic createSubstituents(tobeAdded:string[]):void\n\t{\n\t\tif (tobeAdded.length == 0) return;\n\n\t\tlet fields = this.getFields();\n\t\tlet modified = false;\n\t\tfor (let name of tobeAdded) if (fields.substituents.indexOf(name) < 0)\n\t\t{\n\t\t\tfields.substituents.push(name);\n\t\t\tthis.ds.ensureColumn(name, DataSheetColumn.Molecule, SARTable.DESCR_SUBSTITUENT);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) this.setFields(fields);\n\t}\n\n\t// general purpose: returns true if an atom is considered to be an attachment placeholder\n\tpublic static isAttachment(mol:Molecule, atom:number):boolean\n\t{\n\t\treturn mol.atomicNumber(atom) == 0 && !MolUtil.hasAbbrev(mol, atom) && mol.atomAdjCount(atom) == 1;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet fields:SARTableFields =\n\t\t{\n\t\t\tconstruct: 'Molecule',\n\t\t\tlocked: 'Molecule_locked',\n\t\t\tscaffold: 'Scaffold',\n\t\t\tsubstituents: [],\n\t\t\tmetadata: []\n\t\t};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE)\n\t\t{\n\t\t\tfields = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.ds.ensureColumn(fields.construct, DataSheetColumn.Molecule, SARTable.DESCR_CONSTRUCT);\n\t\tthis.ds.ensureColumn(fields.locked, DataSheetColumn.Boolean, SARTable.DESCR_LOCKED);\n\t\tthis.ds.ensureColumn(fields.scaffold, DataSheetColumn.Molecule, SARTable.DESCR_SCAFFOLD);\n\t\tfor (let subst of fields.substituents) this.ds.ensureColumn(subst, DataSheetColumn.Molecule, SARTable.DESCR_SUBSTITUENT);\n\n\t\tif (!got)\n\t\t{\n\t\t\tlet content = this.formatMetaData(fields);\n\t\t\tthis.ds.appendExtension(SARTable.NAME, SARTable.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):SARTableFields\n\t{\n\t\tlet fields:SARTableFields = {construct: null, locked: null, scaffold: null, substituents: [], metadata: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet pos = line.indexOf('=');\n\t\t\tif (pos < 0) continue;\n\t\t\tlet key = line.substring(0, pos), val = line.substring(pos + 1);\n\t\t\tif (key == 'field')\n\t\t\t{\n\t\t\t\tlet bits = val.split(',');\n\t\t\t\tif (bits.length >= 3)\n\t\t\t\t{\n\t\t\t\t\tlet type = bits[0], name = MoleculeStream.skUnescape(bits[1]);\n\t\t\t\t\tif (type == 'construct')\n\t\t\t\t\t{\n\t\t\t\t\t\tfields.construct = name;\n\t\t\t\t\t\tfields.locked = name + '_locked';\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == 'scaffold') {fields.scaffold = name; continue;}\n\t\t\t\t\telse if (type == 'substituent') {fields.substituents.push(name); continue;}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfields.metadata.push(line);\n\t\t}\n\n\t\treturn fields;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(fields:SARTableFields):string\n\t{\n\t\tlet content = '';\n\t\tcontent += 'field=construct,' + MoleculeStream.skEscape(fields.construct) + ',\\n';\n\t\tcontent += 'field=scaffold,' + MoleculeStream.skEscape(fields.scaffold) + ',\\n';\n\t\tfor (let subst of fields.substituents) content += 'field=substituent,' + MoleculeStream.skEscape(subst) + ',\\n';\n\t\tfor (let meta of fields.metadata) content += meta + '\\n';\n\t\treturn content;\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return SARTable.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet fields = this.getFields();\n\t\tlet used = new Set<string>();\n\t\tused.add(fields.construct);\n\t\tused.add(fields.locked);\n\t\tused.add(fields.scaffold);\n\t\tfor (let subst of fields.substituents) used.add(subst);\n\n\t\tlet reserved = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++) reserved[n] = used.has(colNames[n]);\n\t\treturn reserved;\n\t}\n\n\tpublic numGraphicRenderings(row:number):number\n\t{\n\t\tlet fields = this.getFields();\n\t\treturn 2 + fields.substituents.length;\n\t}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering\n\t{\n\t\tlet fields = this.getFields(), ds = this.ds;\n\n\t\tif (idx == SARTable.RENDER_CONSTRUCT)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(row, fields.construct);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// recolour the core scaffold, and add boundary notation\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) > 0) effects.colAtom[n] = 0x096E6F;\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tlet m1 = mol.atomMapNum(mol.bondFrom(n)), m2 = mol.atomMapNum(mol.bondTo(n));\n\t\t\t\t\tif (m1 > 0 && m2 > 0) effects.colBond[n] = 0x096E6F;\n\t\t\t\t\telse if (m1 > 0 || m2 > 0) effects.dottedBondCross[n] = 0x606060;\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse metavec.drawText(0, 0, '?', 15, 0x000000);\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: fields.construct, metavec: metavec};\n\t\t}\n\t\telse if (idx == SARTable.RENDER_SCAFFOLD)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(row, fields.scaffold);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// decorate substituents: different display depending on whether matching substituents are available\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (SARTable.isAttachment(mol, n))\n\t\t\t\t{\n\t\t\t\t\tlet isDefined = false;\n\t\t\t\t\tlet el = mol.atomElement(n);\n\t\t\t\t\touter: for (let colName of fields.substituents)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subst = ds.getMolecule(row, colName);\n\t\t\t\t\t\tif (subst != null) for (let i = 1; i <= subst.numAtoms; i++)\n\t\t\t\t\t\t\tif (subst.atomElement(i) == el || (subst.atomElement(i) == 'R' && el == colName))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisDefined = true;\n\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\teffects.colAtom[n] = isDefined ? 0x096E6F : 0xFF0000;\n\t\t\t\t\teffects.dottedRectOutline[n] = isDefined ? 0x808080 : 0xFF0000;\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse metavec.drawText(0, 0, '?', 15, 0x000000);\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: fields.scaffold, metavec: metavec};\n\t\t}\n\t\telse if (idx >= SARTable.RENDER_SUBSTITUENT && idx < SARTable.RENDER_SUBSTITUENT + fields.substituents.length)\n\t\t{\n\t\t\tlet sidx = idx - SARTable.RENDER_SUBSTITUENT, sname = fields.substituents[sidx];\n\t\t\tlet mol = ds.getMolecule(row, sname);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// decorated substituents\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (SARTable.isAttachment(mol, n))\n\t\t\t\t{\n\t\t\t\t\teffects.colAtom[n] = 0x096E6F;\n\t\t\t\t\teffects.dottedRectOutline[n] = 0x808080;\n\t\t\t\t\t// (different colours if the attachments don't line up? or just leave it?)\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// empty substituents get decorated in some way, depending on whether absence is justified\n\t\t\t\tlet txt = '?';\n\t\t\t\tlet scaff = ds.getMolecule(row, fields.scaffold);\n\t\t\t\tif (MolUtil.notBlank(scaff))\n\t\t\t\t{\n\t\t\t\t\ttxt = 'n/a';\n\t\t\t\t\tfor (let n = 1; n <= scaff.numAtoms; n++) if (scaff.atomElement(n) == sname) {txt = '?'; break;}\n\t\t\t\t\tif (txt == '?') for (let n = 0; n < fields.substituents.length; n++) if (n != sidx)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subst = ds.getMolecule(row, fields.substituents[n]);\n\t\t\t\t\t\tif (MolUtil.notBlank(subst))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let i = 1; i <= subst.numAtoms; i++) if (subst.atomElement(i) == sname) {txt = 'n/a'; break;} // multidentate\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmetavec.drawText(0, 0, txt, 15, 0x000000);\n\t\t\t}\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: sname, metavec: metavec};\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nregisterAspect(SARTable);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz} from '../util/util';\nimport {Permutation, Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tCalculation of the stereochemical properties of a molecule, such as R/S and E/Z isomer labels.\n*/\n\nexport class Stereochemistry\n{\n\tprivate mol:Molecule;\n\n\t// computed stereochemistry properties\n\tprivate priority:number[]; // CIP (per atom)\n\tprivate chiralTetra:number[]; // (per atom)\n\tprivate cistransBond:number[]; // (per bond)\n\tprivate squarePlanar:number[]; // (per atom)\n\t//private chiralOcta:number[]; // (per atom)\n\tprivate isH:boolean[]; // per atom\n\n\t// ------------------ constants --------------------\n\n\tpublic static STEREO_NONE = 0; // topology does not allow any stereoisomers\n\tpublic static STEREO_POS = 1; // R or Z, depending on type\n\tpublic static STEREO_NEG = 2; // S or E, depending on type\n\tpublic static STEREO_UNKNOWN = 3; // stereocentre with no specification\n\tpublic static STEREO_BROKEN = 4; // stereocentre with contradictory stereochemistry information\n\n\t// all equivalent tetrahedral permutations\n\tpublic static RUBRIC_EQUIV_TETRA =\n\t[\n\t\t[0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n\t\t[2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n\t];\n\n\tpublic static RUBRIC_EQUIV_SIDES =\n\t[\n\t\t[0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n\t];\n\n\tpublic static RUBRIC_EQUIV_SQUARE =\n\t[\n\t\t[0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n\t\t[2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n\t];\n\n\tpublic static RUBRIC_EQUIV_BIPY =\n\t[\n\t\t[0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n\t\t[0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n\t];\n\n\tpublic static RUBRIC_EQUIV_OCTA =\n\t[\n\t\t[0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n\t\t[1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n\t\t[2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n\t\t[3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n\t\t[4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n\t\t[5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n\t];\n\n\t// ------------------ public methods --------------------\n\n\t// constructor: the metamolecule should generally have aromaticity calculated, because this can affect the priority,\n\t// and can also exclude some cases, e.g. cis/trans labels\n\tconstructor(public meta:MetaMolecule)\n\t{\n\t\tthis.mol = meta.mol;\n\n\t\tthis.priority = Vec.numberArray(0, this.mol.numAtoms);\n\t\tthis.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t\tthis.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n\t\tthis.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t\t//this.chiralOcta = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t}\n\n\t// performs the calculation by filling in the arrays\n\tpublic calculate():void\n\t{\n\t\tthis.isH = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tfor (let n = this.mol.numAtoms; n >= 1; n--) this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n\n\t\tthis.buildPriority();\n\t\tthis.buildTetraChirality();\n\t\tthis.buildBondCisTrans();\n\t\tthis.buildPlanarCisTrans();\n\t\tthis.buildOctaChirality();\n\t}\n\n\t// access to calculated values; indices are 1-based\n\tpublic atomPriority(atom:number):number {return this.priority[atom - 1];}\n\tpublic atomTetraChirality(atom:number):number {return this.chiralTetra[atom - 1];}\n\tpublic bondSideStereo(bond:number):number {return this.cistransBond[bond - 1];}\n\tpublic atomPlanarStereo(atom:number):number {return this.squarePlanar[atom - 1];}\n\t//public atomOctaChirality(atom:number):number {return this.chiralOcta[atom - 1];}\n\n\t// for bulk access, sometimes more convenient\n\tpublic getPriorities():number[] {return this.priority.slice(0);}\n\tpublic getAtomTetraChiral():number[] {return this.chiralTetra.slice(0);}\n\tpublic getBondSideStereo():number[] {return this.cistransBond.slice(0);}\n\n\t// ------------------ static methods --------------------\n\n\t// convenience\n\tpublic static create(meta:MetaMolecule):Stereochemistry\n\t{\n\t\tlet stereo = new Stereochemistry(meta);\n\t\tstereo.calculate();\n\t\treturn stereo;\n\t}\n\n\t/*\n\t\tThe Rubric Methods: each of these examines an atom/bond and ascertains whether it has sufficient substituents, and\n\t\tlayout information (coordinates and/or wedges) for it to fit into a certain type of geometry-locked template, which\n\t\tcan infer chirality or restricted bond stereochemistry; the return value is an array with the adjacent indices fitted\n\t\tinto the mould, sometimes with 0 as a placeholder for implicit hydrogens or missing substituents; or null if there are\n\t\tinsufficient neighbours or geometry clues.\n\n\t\tThese methods do NOT make any judgment calls as to whether the atom types should limit to the geometry - the caller must\n\t\tprovide this logic. They also make no judgment about degeneracy, which means that the atom/bond is not necessarily\n\t\tstereochemically active.\n\t*/\n\n\t//\n\t//                    4    3\n\t// assignment style:   \\\\ #      (3 is pointing down, 4 is pointing up)\n\t//                       A\n\t//                     /   \\\n\t//                    1     2\n\tpublic static rubricTetrahedral(mol:Molecule, atom:number):number[]\n\t{\n\t\t// must have at least 3 actual neighbours, and actual+virtual H's of 4\n\t\tif (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4) return null;\n\n\t\t// must have at least one wedge originating from the atom, and no squigglies\n\t\tlet adjBonds = mol.atomAdjBonds(atom);\n\t\tlet hasWedge = false;\n\t\tfor (let n = 0; n < adjBonds.length; n++)\n\t\t{\n\t\t\tlet bt = mol.bondType(adjBonds[n]);\n\t\t\tif (bt == Molecule.BONDTYPE_UNKNOWN) return null; // squiggly\n\t\t\tif (mol.bondFrom(adjBonds[n]) != atom) continue;\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) hasWedge = true;\n\t\t}\n\t\tif (!hasWedge && !mol.is3D()) return null;\n\n\t\t// pull out coordinates, including fakes for Z\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet x = [0, 0, 0, 0];\n\t\tlet y = [0, 0, 0, 0];\n\t\tlet z = [0, 0, 0, 0];\n\t\tlet numShort = 0, numWedges = 0;\n\t\tfor (let n = 0; n < adjBonds.length; n++)\n\t\t{\n\t\t\tconst bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n\t\t\tx[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n\t\t\ty[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n\t\t\tif (mol.is3D())\n\t\t\t{\n\t\t\t\tz[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n\t\t\t}\n\t\t\telse if (bfr == atom)\n\t\t\t{\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t\t{\n\t\t\t\t\tz[n] = 1;\n\t\t\t\t\tnumWedges++;\n\t\t\t\t}\n\t\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t\t{\n\t\t\t\t\tz[n] = -1;\n\t\t\t\t\tnumWedges++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// normalise the length, and stop if it's insane\n\t\t\tlet dsq = norm_xyz(x[n], y[n], z[n]);\n\t\t\tif (dsq < 0.01 * 0.01)\n\t\t\t{\n\t\t\t\tnumShort++;\n\t\t\t\tif (numShort > 1) return null; // second one is a dealbreaker\n\t\t\t}\n\t\t}\n\n\t\t// build implicit-H position\n\t\tif (adjBonds.length == 3)\n\t\t{\n\t\t\tadj.push(0);\n\t\t\tif (!mol.is3D() && numWedges == 1)\n\t\t\t{\n\t\t\t\t// special deal it's flat, so order the bonds by angle, and push in a canonical set of coordinates; this renormalisation can\n\t\t\t\t// fix some weird drawings, which is common for sugars, and various other things\n\t\t\t\tlet th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n\t\t\t\tlet i1 = 1, i2 = 2;\n\t\t\t\tif (angleDiffPos(th1, th0) > angleDiffPos(th2, th0))\n\t\t\t\t{\n\t\t\t\t\ti2 = 1;\n\t\t\t\t\ti1 = 2;\n\t\t\t\t}\n\n\t\t\t\tx[0] = 1.5;\n\t\t\t\ty[0] = 0;\n\t\t\t\tx[1] = -0.75;\n\t\t\t\ty[i1] = 1.3;\n\t\t\t\tx[2] = -0.75;\n\t\t\t\ty[i2] = -1.3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// use geometry largely as-is\n\t\t\t\tx[3] = -(x[0] + x[1] + x[2]);\n\t\t\t\ty[3] = -(y[0] + y[1] + y[2]);\n\t\t\t\tz[3] = -(z[0] + z[1] + z[2]);\n\t\t\t\tlet dsq = norm2_xyz(x[3], y[3], z[3]);\n\t\t\t\tif (dsq < 0.01 * 0.01) return null;\n\t\t\t\tlet inv = 1.0 / Math.sqrt(dsq);\n\t\t\t\tx[3] *= inv;\n\t\t\t\ty[3] *= inv;\n\t\t\t\tz[3] *= inv;\n\t\t\t}\n\t\t}\n\n\t\tlet one = 0, two = 0;\n\t\tfor (let i = 1; i <= 6; i++)\n\t\t{\n\t\t\tlet a = 0, b = 0;\n\t\t\tif (i == 1) {a = 1; b = 2;}\n\t\t\telse if (i == 2) {a = 2; b = 3;}\n\t\t\telse if (i == 3) {a = 3; b = 1;}\n\t\t\telse if (i == 4) {a = 2; b = 1;}\n\t\t\telse if (i == 5) {a = 3; b = 2;}\n\t\t\telse if (i == 6) {a = 1; b = 3;}\n\t\t\tlet xx = y[a] * z[b] - y[b] * z[a] - x[0];\n\t\t\tlet yy = z[a] * x[b] - z[b] * x[a] - y[0];\n\t\t\tlet zz = x[a] * y[b] - x[b] * y[a] - z[0];\n\t\t\tif (i <= 3) one += xx * xx + yy * yy + zz * zz;\n\t\t\telse two += xx * xx + yy * yy + zz * zz;\n\t\t}\n\n\t\tif (two > one) Vec.swap(adj, 2, 3);\n\t\treturn adj;\n\t}\n\n \t//                      1   2\n\t// assignment style:     # #\tnote: the Z-axis direction is arbitrary; 1234 is equivalent to 1432\n\t//                        A\n\t//\t\t\t\t\t\t// \\\\\n\t//                      3   4\n\tpublic static rubricSquarePlanar(mol:Molecule, atom:number):number[]\n\t{\n\t\tif (mol.atomAdjCount(atom) != 4) return null;\n\n\t\t// drawing style must be one of 3 options: 2 up + 2 down, or 2 flat + (2 up/2 down)\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tlet ninc = 0, ndec = 0;\n\t\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t\t{\n\t\t\t\tlet bt = mol.bondType(b);\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) ninc++;\n\t\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) ndec++;\n\t\t\t}\n\t\t\tif (ninc == 2 && ndec == 2) {}\n\t\t\telse if (ninc == 2 && ndec == 0) {}\n\t\t\telse if (ninc == 0 && ndec == 2) {}\n\t\t\telse return null;\n\t\t}\n\n\t\t// determine all the vector outgoings; ensure that position 3 is opposite position 1; other than that, the order is arbitrary\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n\t\tlet v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n\t\tlet v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n\t\tlet v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n\n\t\tfor (let v of [v1, v2, v3, v4])\n\t\t{\n\t\t\tlet dsq = norm2_xyz(v[0], v[1], v[2]);\n\t\t\tif (dsq < 0.01 * 0.01) continue;\n\t\t\tlet inv = 1.0 / Math.sqrt(dsq);\n\t\t\tv[0] *= inv;\n\t\t\tv[1] *= inv;\n\t\t\tv[2] *= inv;\n\t\t}\n\n\t\tlet d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n\t\tif (d2 > d3 && d2 >= d4)\n\t\t{\n\t\t\tVec.swap(adj, 1, 2);\n\t\t\t[v2, v3] = [v3, v2];\n\t\t}\n\t\telse if (d4 > d3)\n\t\t{\n\t\t\tVec.swap(adj, 3, 2);\n\t\t\t[v3, v4] = [v4, v3];\n\t\t}\n\n\t\t// circle around and make sure the acute angles are with reasonable bounds; 90 degrees is ideal, +/- 45 is OK\n\t\t// for 3D cases we don't have the wedge filter, so make the constraint tighter\n\t\tconst MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n\t\tconst MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n\t\tconst th12 = GeomUtil.acuteAngle(v1, v2);\n\t\tif (th12 < MIN_ANGLE || th12 > MAX_ANGLE) return null;\n\t\tconst th23 = GeomUtil.acuteAngle(v2, v3);\n\t\tif (th23 < MIN_ANGLE || th23 > MAX_ANGLE) return null;\n\t\tconst th34 = GeomUtil.acuteAngle(v3, v4);\n\t\tif (th34 < MIN_ANGLE || th34 > MAX_ANGLE) return null;\n\t\tconst th41 = GeomUtil.acuteAngle(v4, v1);\n\t\tif (th41 < MIN_ANGLE || th41 > MAX_ANGLE) return null;\n\t\treturn adj;\n\t}\n\n\t//                        5  3\n\t// assignment style:      | #    (4->5 is the \"axial up\" and [1,2,3] follow the right hand vector rule)\n\t//                     1--A      (only position 1 is allowed to be vacant, and only 2 & 3 can be opposite)\n\t//                        |\\\\\n\t//                        4  2\n\tpublic static rubricBipyrimidal(mol:Molecule, atom:number):number[]\n\t{\n\t\tconst nadj = mol.atomAdjCount(atom);\n\t\tif (nadj != 4 && nadj != 5) return null;\n\n\t\t// if sketch, must have exactly 1 up & 1 down\n\t\tlet atom2 = 0, atom3 = 0;\n\t\tlet adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tif (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED)\n\t\t\t\t{\n\t\t\t\t\tif (atom2 > 0) return null;\n\t\t\t\t\tatom2 = adj[n];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED)\n\t\t\t\t{\n\t\t\t\t\tif (atom3 > 0) return null;\n\t\t\t\t\tatom3 = adj[n];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (atom2 == 0 || atom3 == 0) return null;\n\n\t\t\t// the two bonds with opposite wedges cannot be close to opposite\n\t\t\tlet th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n\t\t\tlet th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n\t\t\tif (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD) return null;\n\t\t}\n\n\t\t// get all the relative emergent vectors\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v:number[][] = [[], [], [], [], []];\n\t\tconst THRESH = 0.1; // bond lengths in general must be this long, otherwise the structure is unworthy\n\t\tfor (let n = 0; n < nadj; n++)\n\t\t{\n\t\t\tv[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n\t\t\tconst mag = GeomUtil.magnitude(v[n]);\n\t\t\tif (mag < THRESH) return null;\n\t\t\tVec.mulBy(v[n], 1.0 / mag);\n\n\t\t\t// if it's 2D, atom2 & 3 are defined: do faux embedding\n\t\t\tif (adj[n] == atom2) v[n][2] += 1; // up\n\t\t\telse if (adj[n] == atom3) v[n][2] -= 1; // down\n\t\t}\n\n\t\t// figure out atoms 4 & 5; for 2D can rule out two candidates already\n\t\tlet atom4 = 0, atom5 = 0;\n\t\tconst ANGLE_OPPOSITE = 175 * DEGRAD;\n\t\tfor (let i = 0; i < nadj - 1; i++) if (adj[i] != atom2 && adj[i] != atom3)\n\t\t{\n\t\t\tfor (let j = i + 1; j < nadj; j++) if (adj[j] != atom2 && adj[j] != atom3)\n\t\t\t{\n\t\t\t\tlet theta = GeomUtil.acuteAngle(v[i], v[j]);\n\t\t\t\tif (theta > ANGLE_OPPOSITE)\n\t\t\t\t{\n\t\t\t\t\tif (atom4 != 0) return null; // can't have two angles close to 180 degrees\n\t\t\t\t\tatom4 = adj[i];\n\t\t\t\t\tatom5 = adj[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if 3D, atoms 2 & 3 can be selected arbitrarily\n\t\tif (mol.is3D())\n\t\t{\n\t\t\tfor (let a of adj) if (a != atom4 && a != atom5)\n\t\t\t{\n\t\t\t\tif (atom2 == 0) atom2 = a;\n\t\t\t\telse if (atom3 == 0) atom3 = a;\n\t\t\t}\n\t\t}\n\t\tif (!atom4 || !atom5) return null;\n\n\t\tlet v1 = null;\n\t\tlet v2 = v[adj.indexOf(atom2)];\n\t\tlet v3 = v[adj.indexOf(atom3)];\n\t\tlet v4 = v[adj.indexOf(atom4)];\n\t\tlet v5 = v[adj.indexOf(atom5)];\n\n\t\t// the atom3 position is either real or virtual\n\t\tlet atom1 = 0;\n\t\tif (nadj == 5)\n\t\t{\n\t\t\tfor (let n = 0; n < nadj; n++) if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5)\n\t\t\t{\n\t\t\t\tatom1 = adj[n];\n\t\t\t\tv1 = v[n];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse // create a virtual atom\n\t\t{\n\t\t\tv1 = [0, 0, 0];\n\t\t\tv1 = Vec.sub(v1, v2);\n\t\t\tv1 = Vec.sub(v1, v3);\n\t\t\tconst mag = GeomUtil.magnitude(v1);\n\t\t\tif (mag < THRESH) return null; // (is this being unfair at all?)\n\t\t\tVec.mulBy(v1, 1.0 / mag);\n\t\t}\n\n\t\t// if the cross product of 4->5 x 0->1 is closer to 2, parity is even\n\t\tlet v45 = Vec.sub(v5, v4);\n\t\tlet cross = GeomUtil.crossProduct(v45, v1);\n\t\tlet dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n\t\tif (dsq2 < dsq3)\n\t\t\treturn [atom1, atom2, atom3, atom4, atom5];\n\t\telse\n\t\t\treturn [atom1, atom2, atom3, atom5, atom4];\n\t}\n\n\t//                        6 2\n\t// assignment style:      |#    (5->6 is the \"axial up\" and [1,2,3,4] follow the right hand vector rule)\n\t//                     3--A--1\n\t//\t\t\t\t\t\t//|\n\t//                     4  5\n\tpublic static rubricOctahedral(mol:Molecule, atom:number):number[]\n\t{\n\t\tconst nadj = mol.atomAdjCount(atom);\n\t\tif (nadj != 5 && nadj != 6) return null;\n\n\t\tlet adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n\t\tif (nadj == 5) {adj.push(0); bonds.push(0);}\n\n\t\t// if a 2D sketch, make sure there are enough wedges\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tlet numWedges = 0;\n\t\t\tfor (let b of bonds) if (b > 0)\n\t\t\t{\n\t\t\t\tconst bt = mol.bondType(b);\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) numWedges++;\n\t\t\t}\n\t\t\tif ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2)) return null;\n\t\t}\n\n\t\tconst THRESH = 0.1; // bond lengths in general must be this long, otherwise the structure is unworthy\n\n\t\t// get all the relative emergent vectors; generate faux embedding for wedges\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v:number[][] = [[], [], [], [], [], []];\n\t\tfor (let n = 0; n < nadj; n++)\n\t\t{\n\t\t\tv[n] = MolUtil.atomVec3(mol, adj[n]);\n\t\t\tVec.subFromArray(v[n], v0);\n\t\t\tlet mag = GeomUtil.magnitude(v[n]);\n\t\t\tif (mag < THRESH) return null;\n\t\t\tVec.mulBy(v[n], 1 / mag);\n\n\t\t\tlet bt = mol.bondType(bonds[n]);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(bonds[n]) == atom) v[n][2] += 1; else v[n][2] -= 1;\n\t\t\t}\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(bonds[n]) == atom) v[n][2] -= 1; else v[n][2] += 1;\n\t\t\t}\n\t\t}\n\n\t\t// if there's a missing spot, compose it from the opposite of the sum of all the other directions\n\t\tif (nadj == 5)\n\t\t{\n\t\t\tv[5] = [0, 0, 0];\n\t\t\tfor (let n = 0; n < 5; n++) Vec.subFromArray(v[5], v[n]);\n\t\t\tlet mag = GeomUtil.magnitude(v[5]);\n\t\t\tif (mag < THRESH) return null; // (is this being unfair at all?)\n\t\t\tVec.mulBy(v[5], 1 / mag);\n\t\t}\n\n\t\t// first reference: locate ligands that are as far away as possible from each other (i.e. 180 degrees), and stick these in the axial positions\n\t\tlet slots = [-1, -1, -1, -1, 0, 1];\n\t\tlet bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n\t\tfor (let i = 0; i < 5; i++) for (let j = (i == 0 ? 2 : i + 1); j < 6; j++)\n\t\t{\n\t\t\tlet theta = GeomUtil.acuteAngle(v[i], v[j]);\n\t\t\tif (theta > bestOpposite)\n\t\t\t{\n\t\t\t\tslots[4] = i;\n\t\t\t\tslots[5] = j;\n\t\t\t\tbestOpposite = theta;\n\t\t\t}\n\t\t}\n\t\tlet axial = Vec.sub(v[slots[5]], v[slots[4]]);\n\n\t\t// second reference: locate the ligand that is as close as possible to orthogonal to the axial vector, and stick this in the first equatorial position\n\t\tlet bestOrthogonal = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < 6; n++) if (n != slots[4] && n != slots[5])\n\t\t{\n\t\t\tlet delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n\t\t\tif (delta < bestOrthogonal)\n\t\t\t{\n\t\t\t\tslots[0] = n;\n\t\t\t\tbestOrthogonal = delta;\n\t\t\t}\n\t\t}\n\n\t\t// third reference: use the cross product between axial & current equatorial to grab the next two in sequence\n\t\tfor (let s = 1; s <= 2; s++)\n\t\t{\n\t\t\tlet cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n\t\t\tlet bestOrient = Number.POSITIVE_INFINITY;\n\n\t\t\tfor (let n = 0; n < 6; n++)\n\t\t\t{\n\t\t\t\tif (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1]) continue;\n\t\t\t\tlet delta = GeomUtil.acuteAngle(v[n], cross);\n\t\t\t\tif (delta < bestOrient)\n\t\t\t\t{\n\t\t\t\t\tslots[s] = n;\n\t\t\t\t\tbestOrient = delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the last one is implied by process of elimination\n\t\tfor (let n = 0; n < 6; n++) if (slots.indexOf(n) < 0)\n\t\t{\n\t\t\tslots[3] = n;\n\t\t\tbreak;\n\t\t}\n\n\t\t/*Util.writeln(\"NOW slots = \"+Util.arrayStr(slots));\n\t\tfor (int n = 0; n < 6; n++) Util.writeln(\" position \"+(n+1)+\" -> atom \"+mol.atomElement(adj[slots[n]]));*/\n\n\t\t// convert to atom indices\n\t\tlet rubric = [0, 0, 0, 0, 0, 0];\n\t\tfor (let n = 0; n < 6; n++) rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n\t\treturn rubric;\n\t}\n\n\t//                      1      3\n\t//                       \\    /\n\t// assignment style:      A==B\n\t//                       /    \\\n\t//\t\t\t\t\t    2      4\n\tpublic static rubricBondSides(mol:Molecule, bond:number):number[]\n\t{\n\t\tconst bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tconst nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n\t\tif (nfr < 2 || nfr > 3 || nto < 2 || nto > 3) return null;\n\t\tlet adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n\t\tlet f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n\t\tfor (let i = 0; i < adj1.length; i++)\n\t\t{\n\t\t\tif (adj1[i] != bto)\n\t\t\t{\n\t\t\t\tif (f1 == 0) f1 = adj1[i];\n\t\t\t\telse f2 = adj1[i];\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < adj2.length; i++)\n\t\t{\n\t\t\tif (adj2[i] != bfr)\n\t\t\t{\n\t\t\t\tif (t1 == 0) t1 = adj2[i];\n\t\t\t\telse t2 = adj2[i];\n\t\t\t}\n\t\t}\n\n\t\tif (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {let f = f1; f1 = f2; f2 = f;}\n\t\tif (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {let t = t1; t1 = t2; t2 = t;}\n\n\t\t// make a determination of whether the first substituents are on the same side, using the cross product; if there\n\t\t// are only 2 substituents, this ends up being definitive\n\t\tlet vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n\t\tlet vbond = Vec.sub(vto, vfr);//,vt0=Vec.neg(vf0);\n\t\tlet vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n\n\t\tconst THRESHSQ = 0.1 * 0.1; // cross product must be this long; if not, it's either linear, or unreasonably short\n\n\t\tlet xf1 = GeomUtil.crossProduct(vf1, vbond);\n\t\tif (GeomUtil.magnitude2(xf1) < THRESHSQ) return null;\n\t\tlet xt1 = GeomUtil.crossProduct(vt1, vbond);\n\t\tif (GeomUtil.magnitude2(xt1) < THRESHSQ) return null;\n\n\t\tlet xf1N = Vec.neg(xf1);\n\t\tlet keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n\t\tlet keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n\n\t\t// check the other substituents, if they are defined: these may contradict the first determination, and hence cause\n\t\t// the stereo assignment to be rejected\n\t\t// note that the determination is tolerant of hydrogen atoms that are planted pretty much on top of their heavy\n\t\t// neighbour - this can make the algorithm more tolerant to add/create hydrogen cycles\n\t\tlet vf2:number[] = null, vt2:number[] = null, xf2:number[] = null, xt2:number[] = null, xf2N:number[] = null;\n\t\tif (f2 > 0)\n\t\t{\n\t\t\tvf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n\t\t\tif (GeomUtil.magnitude2(vf2) < THRESHSQ)\n\t\t\t{\n\t\t\t\tif (mol.atomElement(f2) != 'H') return null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txf2 = GeomUtil.crossProduct(vf2, vbond);\n\t\t\t\tif (GeomUtil.magnitude2(xf2) < THRESHSQ) return null;\n\t\t\t\txf2N = Vec.neg(xf2);\n\t\t\t\tkeepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n\t\t\t}\n\t\t}\n\t\tif (t2 > 0)\n\t\t{\n\t\t\tvt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n\t\t\tif (GeomUtil.magnitude2(vt2) < THRESHSQ)\n\t\t\t{\n\t\t\t\tif (mol.atomElement(t2) != 'H') return null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txt2 = GeomUtil.crossProduct(vt2, vbond);\n\t\t\t\tif (GeomUtil.magnitude2(xt2) < THRESHSQ) return null;\n\t\t\t\tkeepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n\t\t\t}\n\t\t}\n\t\tif (/*f2>0 && t2>0*/xf2 != null && xt2 != null)\n\t\t{\n\t\t\tkeepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n\t\t}\n\n\t\t// pick the order based on sides\n\t\tif (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2) return [f1, f2, t1, t2];\n\t\tif (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2) return [f1, f2, t2, t1];\n\n\t\treturn null;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// compute the chirality values for each atom centre\n\tprivate buildTetraChirality():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// !! USE THE \"BROKEN\" value for screwed up stuff\n\n\t\tlet haswedge = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n\t\t\t\thaswedge[mol.bondFrom(n) - 1] = true;\n\t\t}\n\n\t\tskip_atom: for (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tthis.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tlet adj = mol.atomAdjList(n);\n\t\t\tif (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1))) continue;\n\t\t\tif (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1])) continue;\n\t\t\tfor (let i = 0; i < adj.length - 1; i++)\n\t\t\t{\n\t\t\t\tfor (let j = i + 1; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (this.priority[adj[i] - 1] == this.priority[adj[j] - 1]) continue skip_atom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!haswedge[n - 1] && !mol.is3D())\n\t\t\t{\n\t\t\t\tthis.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pri =\n\t\t\t[\n\t\t\t\trubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n\t\t\t\trubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n\t\t\t\trubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n\t\t\t\trubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n\t\t\t];\n\t\t\tpri = Vec.idxSort(pri);\n\t\t\tlet parity = Permutation.parityIdentity(pri);\n\n\t\t\tthis.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the cis/trans stereochemistry for each bond\n\tprivate buildBondCisTrans():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet sf = [0, 0], st = [0, 0];\n\n\t\t// bonds in small rings should not get an E/Z assignment, due to geometry constraints\n\t\tlet ringMask = Vec.booleanArray(false, nb);\n\t\tfor (let rsz = 3; rsz <= 7; rsz++)\n\t\t{\n\t\t\tfor (let r of mol.findRingsOfSize(rsz))\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < r.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n\t\t\t\t\tringMask[b - 1] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tskip_bond: for (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tthis.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tif (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1]) continue;\n\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n\t\t\tif (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3) continue;\n\t\t\tif (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1])) continue;\n\t\t\tif (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1])) continue;\n\n\t\t\t// make sure neither side has two with equivalent priority\n\t\t\tfor (let i = 0; i < adj1.length - 1; i++)\n\t\t\t\tif (adj1[i] != bfr) for (let j = i + 1; j < adj1.length; j++)\n\t\t\t\t\tif (adj1[j] != bfr) if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1]) continue skip_bond;\n\t\t\tfor (let i = 0; i < adj2.length - 1; i++)\n\t\t\t\tif (adj2[i] != bto) for (let j = i + 1; j < adj2.length; j++)\n\t\t\t\t\tif (adj2[j] != bto) if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1]) continue skip_bond;\n\n\t\t\t// if it's a squiggly bond, that means unknown\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tthis.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricBondSides(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n\t\t\tlet pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n\t\t\tlet pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n\t\t\tlet pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n\n\t\t\tthis.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the cis/trans stereochemistry for square planar atoms\n\tprivate buildPlanarCisTrans():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\tskip_atom: for (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tthis.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tif (mol.atomAdjCount(n) != 4) continue; // NOTE: entertain the notion of making it work with virtual hydrogens\n\t\t\tif (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3) continue; // only d- or f-blocks need apply\n\n\t\t\tlet adj = mol.atomAdjList(n);\n\n\t\t\t// if 3 or more substituents are the same, nothing to see here\n\t\t\tfor (let i = 0; i < adj.length; i++)\n\t\t\t{\n\t\t\t\tlet count = 0;\n\t\t\t\tfor (let j = 0; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (this.priority[adj[i] - 1] == this.priority[adj[j] - 1]) count++;\n\t\t\t\t}\n\t\t\t\tif (count >= 3) continue skip_atom;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pri =\n\t\t\t[\n\t\t\t\trubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n\t\t\t\trubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n\t\t\t\trubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n\t\t\t\trubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n\t\t\t];\n\n\t\t\tlet parity = Permutation.parityOrder(pri);\n\t\t\tthis.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the R/S chirality for octahedral centres\n\tprivate buildOctaChirality():void\n\t{\n\t\t// !! TODO\n\t}\n\n\t// generates Cahn-Ingold-Prelog priority for each atom, where degeneracies are indicated by having the same number\n\tprivate buildPriority():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// build a graph representation which has entries replicated according to bond order, and -1 for implicit hydrogens\n\t\tlet cipgr:number[][] = [];\n\t\tfor (let n = 0; n < na; n++) cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n\t\t\tif (this.meta.isBondAromatic(n)) bo = 2; // hacky\n\t\t\tif (bf != bt) for (let i = 0; i < bo; i++)\n\t\t\t{\n\t\t\t\tcipgr[bf].push(bt);\n\t\t\t\tcipgr[bt].push(bf);\n\t\t\t}\n\t\t}\n\n\t\t// seed the priorities with atomic number\n\t\tthis.priority = Vec.numberArray(0, na);\n\t\tlet anyActualH = false;\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tthis.priority[n] = mol.atomicNumber(n + 1);\n\t\t\tif (this.priority[n] == 1) anyActualH = true;\n\t\t}\n\n\t\t// pass through and reassign priorities as many times as necessary, until no change\n\t\tlet prigr:number[][] = [];\n\t\tfor (let n = 0; n < na; n++) prigr.push([]);\n\t\twhile (true)\n\t\t{\n\t\t\t// make an equivalent to cipgr which has priorities instead of indices\n\t\t\tfor (let n = 0; n < na; n++)\n\t\t\t{\n\t\t\t\tlet cip = cipgr[n], pri:number[] = [];\n\t\t\t\tfor (let i = 0; i < cip.length; i++) pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n\t\t\t\tVec.sort(pri);\n\t\t\t\tprigr[n] = pri;\n\t\t\t}\n\n\t\t\t// divide each priority category into groups, then for each of these groups, split the contents out and reassign\n\t\t\tlet groups = this.sortAndGroup(this.priority);\n\t\t\tlet nextpri = anyActualH ? 0 : 1;\n\t\t\tlet repartitioned = false;\n\n\t\t\tfor (let n = 0; n < groups.length; n++)\n\t\t\t{\n\t\t\t\t// sort the groups according to their cipgr contents\n\t\t\t\tlet g = groups[n];\n\t\t\t\tfor (let p = 0; p < g.length - 1;)\n\t\t\t\t{\n\t\t\t\t\tconst i1 = g[p], i2 = g[p + 1];\n\t\t\t\t\tlet cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n\t\t\t\t\tfor (let i = 0; i < sz; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n\t\t\t\t\t\tif (v1 < v2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmp = -1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v1 > v2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmp = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cmp > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tg[p] = i2;\n\t\t\t\t\t\tg[p + 1] = i1;\n\t\t\t\t\t\tif (p > 0) p--;\n\t\t\t\t\t}\n\t\t\t\t\telse p++;\n\t\t\t\t}\n\t\t\t\t//Util.writeln(\" after sort: \"+Util.arrayStr(g));\n\t\t\t\t//for (int z : g) Util.writeln(\"   pri=\"+Util.arrayStr(prigr[z]));\n\t\t\t\tfor (let i = 0; i < g.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i == 0) nextpri++;\n\t\t\t\t\telse if (prigr[g[i]].length != prigr[g[i - 1]].length)\n\t\t\t\t\t{\n\t\t\t\t\t\tnextpri++;\n\t\t\t\t\t\trepartitioned = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let j = 0; j < prigr[g[i]].length; j++) if (prigr[g[i]][j] != prigr[g[i - 1]][j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnextpri++;\n\t\t\t\t\t\t\trepartitioned = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.priority[g[i]] = nextpri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!repartitioned) break;\n\t\t}\n\t}\n\n\t// utility method, used during priority generation\n\tprivate sortAndGroup(val:number[]):number[][]\n\t{\n\t\tlet uset = new Set<number>();\n\t\tfor (let v of val) uset.add(v);\n\t\tlet unique = Array.from(uset);\n\t\tVec.sort(unique);\n\t\tlet ret:number[][] = [];\n\t\tfor (let n = 0; n < unique.length; n++) ret.push([]);\n\n\t\tfor (let n = 0; n < val.length; n++)\n\t\t{\n\t\t\tlet grp = unique.indexOf(val[n]);\n\t\t\tret[grp].push(n);\n\t\t}\n\n\t\treturn ret;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {DotPath} from '../mol/DotPath';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from './MolUtil';\nimport {Stereochemistry} from '../mol/Stereochemistry';\n\n/*\n\tA \"meta-molecule\" is a container for a molecule which stores derived information about it. This is a compensation for the\n\tfact that the molecular datastructure is extremely minimalistic, and includes only very low level chemical interpretation.\n\tThe low level molecule object is intended to represent a work in progress, something that is likely being sketched or chopped up\n\tand reassembled by algorithms. The meta-molecule wrapper is based on the assumption that the molecule is \"done\", and is\n\tready to be compared to other fully described molecules.\n\n\tEach of the fields contained within may or may not be defined, and should be calculated as necessary, which means that\n\tthis class basically operates as a cache.\n\n\tTypical use case:\n\n\t\tMetaMolecule meta=new MetaMolecule(mol);\n\t\tcalculateStrictAromaticity();\n\t\tcalculateStereoRubric();\n\n\tNote that the calculations are not necessarily independent, so order of calling can be important.\n\n\tCan also be used as a convenient storage place for the \"skeleton hash\", which is useful for screening isomorphisms.\n*/\n\nexport class MetaMolecule\n{\n\tpublic static skeletonHash:(mol:Molecule) => string = null;\n\tpublic static isomorphMatch:(meta1:MetaMolecule, meta2:MetaMolecule, timeout:number) => boolean = null;\n\n\tpublic atomArom:boolean[] = null;\n\tpublic bondArom:boolean[] = null;\n\tpublic rubricTetra:number[][] = null;\n\tpublic rubricSquare:number[][] = null;\n\tpublic rubricBipy:number[][] = null;\n\tpublic rubricOcta:number[][] = null;\n\tpublic rubricSides:number[][] = null;\n\tpublic hash:string = null;\n\tpublic heavyHash:string = null;\n\tpublic uniqueElements:string[] = null;\n\tpublic dots:DotPath = null;\n\n\tprivate piAtom:boolean[] = null; // true for all atoms that have at least one double bond attached\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t}\n\n\t// strict aromaticity: considers only rings with pure alternating single/double bonds, i.e. benzene-style; fused ring\n\t// systems like naphthalene are handled iteratively; many types of aromaticity are excluded, e.g. thiophene (lone pair),\n\t// imidazolium (ions) and larger rings (e.g. porphyrins); this calculation is reasonably fast\n\tpublic calculateStrictAromaticity():void\n\t{\n\t\tlet mol = this.mol;\n\t\tthis.atomArom = Vec.booleanArray(false, mol.numAtoms);\n\t\tthis.bondArom = Vec.booleanArray(false, mol.numBonds);\n\n\t\tlet rings = mol.findRingsOfSize(6);\n\t\tconst nr = rings.length;\n\t\tif (nr == 0) return;\n\n\t\t// assign the potentially-aromatic rings\n\t\tthis.ensurePiAtoms();\n\t\tlet mask = Vec.booleanArray(false, nr); // false=not decided; true=already processed\n\t\tfor (let n = 0; n < nr; n++)\n\t\t{\n\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t{\n\t\t\t\tlet a = rings[n][i];\n\t\t\t\tif (!this.piAtom[a - 1])\n\t\t\t\t{\n\t\t\t\t\tmask[n] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\tif (bo != 1 && bo != 2)\n\t\t\t\t{\n\t\t\t\t\tmask[n] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// keep classifying rings as aromatic until no change; this needs to be done iteratively, for the benefit of highly\n\t\t// embedded ring systems, that can't be classified as aromatic until it is known that their neighbours obviously are\n\t\twhile (true)\n\t\t{\n\t\t\tlet anyChange = false;\n\n\t\t\tfor (let n = 0; n < nr; n++) if (!mask[n])\n\t\t\t{\n\t\t\t\tlet phase1 = true, phase2 = true; // has to go 121212 or 212121; already arom=either is OK\n\t\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\t\tif (this.bondArom[b - 1]) continue; // valid for either phase\n\t\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\t\tphase1 = phase1 && bo == (2 - (i & 1));\n\t\t\t\t\tphase2 = phase2 && bo == (1 + (i & 1));\n\t\t\t\t}\n\t\t\t\tif (!phase1 && !phase2) continue;\n\n\t\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\t\tthis.bondArom[b - 1] = true;\n\t\t\t\t}\n\n\t\t\t\tmask[n] = true;\n\t\t\t\tanyChange = true;\n\t\t\t}\n\n\t\t\tif (!anyChange) break;\n\t\t}\n\n\t\t// update the atom aromaticity flags\n\t\tfor (let n = 0; n < this.bondArom.length; n++) if (this.bondArom[n])\n\t\t{\n\t\t\tthis.atomArom[mol.bondFrom(n + 1) - 1] = true;\n\t\t\tthis.atomArom[mol.bondTo(n + 1) - 1] = true;\n\t\t}\n\t}\n\n\t// relaxed aromaticity: based on strict aromaticity, but extends to other small ring sizes; it is also reasonably\n\t// fast - there are no opportunities for exponential graph-walk blowups\n\tpublic calculateRelaxedAromaticity():void\n\t{\n\t\tlet mol = this.mol;\n\t\tthis.atomArom = Vec.booleanArray(false, mol.numAtoms);\n\t\tthis.bondArom = Vec.booleanArray(false, mol.numBonds);\n\n\t\tthis.ensurePiAtoms();\n\t\tconst na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet electrons = Vec.numberArray(0, na); // # lone pair electrons available for donating into the ring; >=2 qualifies\n\t\tlet exocyclic = Vec.booleanArray(false, na); // true=has a double bond that sticks out of the ring block\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(n);\n\t\t\telectrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n\t\t\t\t\t\t\t- mol.atomUnpaired(n);\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tconst bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n\t\t\telectrons[bfr - 1] -= bo;\n\t\t\telectrons[bto - 1] -= bo;\n\t\t\tif (bo == 2)\n\t\t\t{\n\t\t\t\tconst rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n\t\t\t\tif (rblk1 > 0 && rblk1 != rblk2) exocyclic[bfr - 1] = true;\n\t\t\t\tif (rblk2 > 0 && rblk2 != rblk1) exocyclic[bto - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\t// compile candidate rings: all atoms must have some potentially qualifying pi-action doing on\n\n\t\tlet rings:number[][] = [];\n\t\tfor (let rsz = 3; rsz <= 7; rsz++) for (let rng of mol.findRingsOfSize(rsz))\n\t\t{\n\t\t\tlet valid = true;\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tconst a = rng[n];\n\t\t\t\tif (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1])\n\t\t\t\t{\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\tif (bo != 1 && bo != 2)\n\t\t\t\t{\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valid) rings.push(rng);\n\t\t}\n\n\t\t// keep processing rings, until no new ones are found\n\n\t\twhile (rings.length > 0)\n\t\t{\n\t\t\tlet anyChange = false;\n\n\t\t\tfor (let n = 0; n < rings.length; n++)\n\t\t\t{\n\t\t\t\tlet r = rings[n];\n\n\t\t\t\tlet paths = [0];\n\t\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t\t{\n\t\t\t\t\tconst a = r[i];\n\t\t\t\t\tconst b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n\t\t\t\t\tconst b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n\t\t\t\t\tif (this.bondArom[b1 - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\t// contemplate with or without extra pi-bond\n\t\t\t\t\t\tfor (let j = paths.length - 1; j >= 0; j--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst e = paths[j] + 2;\n\t\t\t\t\t\t\tif (paths.indexOf(e) < 0) paths = Vec.append(paths, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (mol.bondOrder(b1) == 2) Vec.addTo(paths, 2);\n\t\t\t\t\telse if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1) Vec.addTo(paths, 2);\n\t\t\t\t}\n\n\t\t\t\t// see if there's anything Hueckel (4N+2) buried in there\n\t\t\t\tlet arom = false;\n\t\t\t\tfor (let e of paths)\n\t\t\t\t{\n\t\t\t\t\tif (e == 2 && r.length == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tarom = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // N==0 case only for 3 membered rings, e.g. cyclopropylium\n\t\t\t\t\tif (e == 6)\n\t\t\t\t\t{\n\t\t\t\t\t\tarom = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// (anything bigger does not apply, because only using small rings)\n\t\t\t\t}\n\t\t\t\tif (arom)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n\t\t\t\t\t\tthis.atomArom[a - 1] = true;\n\t\t\t\t\t\tthis.bondArom[b - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\trings.splice(n, 1);\n\t\t\t\t\tn--;\n\t\t\t\t\tanyChange = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anyChange) break;\n\t\t}\n\t}\n\n\t/*\n\t// extended Hueckel aromaticity: any ring pathway which meets the 4n+2 PI electron rule, counting double bonds and\n\t// lone pairs, is classified as aromatic\n\tpublic void calculateExtendedAromaticity() throws MoleculeCalcException\n\t{\n\t\t// !!\n\t\tthrow new MoleculeCalcException(\"Hueckel aromaticity: not implemented yet\");\n\t}*/\n\n\t// goes through the atoms and bonds, and determines \"geometry rubric\" sequences for those that are considered to\n\t// be potentially stereo-active; chemical judgment calls are made within this method\n\t// NOTE: it is a good idea to calculate aromaticity first, since it can affect atom classification\n\tpublic calculateStereoRubric():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tthis.rubricTetra = new Array(na);\n\t\tthis.rubricSquare = new Array(na);\n\t\tthis.rubricBipy = new Array(na);\n\t\tthis.rubricOcta = new Array(na);\n\t\tthis.rubricSides = new Array(nb);\n\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n\t\t\tlet adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n\t\t\tlet ninc = 0, ndec = 0;\n\t\t\tfor (let b of mol.atomAdjBonds(n))\n\t\t\t{\n\t\t\t\tif (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n) ninc++;\n\t\t\t\telse if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n) ndec++;\n\t\t\t}\n\n\t\t\t// p-block atoms with 4 neighbours (1 of which can be implicit H) are allowed tetrahedral chirality\n\t\t\t// (or more stringent requirements for d- & f-block)\n\t\t\tif (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0)))\n\t\t\t{\n\t\t\t\tthis.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\t}\n\t\t\telse if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1)\n\t\t\t{\n\t\t\t\tthis.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\t}\n\n\t\t\t// d- & f-block atoms with 4 neighbours can have square planar constraints\n\t\t\tif (blk >= 3 && adjc == 4 && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n\t\t\t}\n\n\t\t\t// d- and f-block atoms with 4 or 5 neighbours can have trigonal bipyramidal constraints\n\t\t\tif (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n\t\t\t}\n\n\t\t\t// d- & f-block atoms with 5 or 6 neighbours can have octahedral constraints\n\t\t\t// (as can p-block atoms with 6 neighbours)\n\t\t\tif (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n\t\t\t}\n\t\t\telse if (blk == 2 && adjc == 6 && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n\t\t\t}\n\t\t}\n\n\t\t// certain double bonds are considered to have restricted rotation constraints\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n)) continue;\n\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n\t\t\tlet blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n\t\t\tlet adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n\t\t\tlet adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n\n\t\t\t// if both sides of the bond are p-block atoms, and have 2 substituents, can be side-constrained\n\t\t\t// (note: things like C=N-, with potentially constrained lone pairs, are not considered)\n\t\t\tif (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1))\n\t\t\t{\n\t\t\t\tthis.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n\t\t\t}\n\t\t}\n\t}\n\n\t// removes all hydrogens from the molecule, cloning it anything changes; if this is called after the aromaticity/stereochemistry is calculated, these will be\n\t// remapped as necessary\n\tpublic removeHydrogens():void\n\t{\n\t\tlet mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n\t\tfor (let n = 1; n <= na; n++) if (MolUtil.boringHydrogen(mol, n))\n\t\t{\n\t\t\tatomMask[n - 1] = false;\n\t\t\tbondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n\t\t}\n\t\tif (Vec.allTrue(atomMask)) return;\n\n\t\tmol = MolUtil.subgraphMask(mol, atomMask);\n\n\t\tif (this.atomArom) this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n\t\tif (this.bondArom) this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n\n\t\tif (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides)\n\t\t{\n\t\t\tif (this.rubricTetra) this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n\t\t\tif (this.rubricSquare) this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n\t\t\tif (this.rubricBipy) this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n\t\t\tif (this.rubricOcta) this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n\t\t\tif (this.rubricSides) this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n\n\t\t\tlet atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricTetra); n++) if (this.rubricTetra[n]) this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricSquare); n++) if (this.rubricSquare[n]) this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricBipy); n++) if (this.rubricBipy[n]) this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricOcta); n++) if (this.rubricOcta[n]) this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricSides); n++) if (this.rubricSides[n]) this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n\t\t}\n\n\t\t// (... recreate anything else that's affected)\n\t}\n\n\t// defines the \"skeleton hash\" field, for prescreening\n\tpublic calculateSkeletonHash():void\n\t{\n\t\tif (MetaMolecule.skeletonHash == null) throw 'Skeleton hash not available.';\n\t\tthis.hash = MetaMolecule.skeletonHash(this.mol);\n\t}\n\n\t// define the \"heavy hash\": like for skeleton, but with explicit hydrogens removed\n\tpublic calculateHeavyHash():void\n\t{\n\t\tlet anyH = false;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (this.mol.atomElement(n) == 'H') {anyH = true; break;}\n\t\tif (!anyH)\n\t\t{\n\t\t\tthis.heavyHash = this.getSkeletonHash();\n\t\t\treturn;\n\t\t}\n\n\t\tlet hvy = this.mol.clone();\n\t\tfor (let n = hvy.numAtoms; n >= 1; n--) if (hvy.atomElement(n) == 'H') hvy.deleteAtomAndBonds(n);\n\t\tthis.heavyHash = MetaMolecule.skeletonHash(hvy);\n\t}\n\n\t// access to aromaticity: either by 1-based single index, or grabbing the whole array\n\tpublic isAtomAromatic(atom:number):boolean\n\t{\n\t\treturn this.atomArom == null ? false : this.atomArom[atom - 1];\n\t}\n\tpublic isBondAromatic(bond:number):boolean\n\t{\n\t\treturn this.bondArom == null ? false : this.bondArom[bond - 1];\n\t}\n\n\t// modified version of bond order: returns -1 to encode for aromaticity; if not aromatic, or aromaticity wasn't calculated,\n\t// this is the same as the regular bond order\n\tpublic bondOrderArom(bond:number):number\n\t{\n\t\treturn this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n\t}\n\n\tpublic getAtomAromaticity():boolean[]\n\t{\n\t\treturn this.atomArom == null ? null : this.atomArom.slice(0);\n\t}\n\tpublic getBondAromaticity():boolean[]\n\t{\n\t\treturn this.bondArom == null ? null : this.bondArom.slice(0);\n\t}\n\n\t// cached access to hash-type properties: first invocation slow, after that fast\n\tpublic getSkeletonHash():string\n\t{\n\t\tif (this.hash == null) this.calculateSkeletonHash();\n\t\treturn this.hash;\n\t}\n\tpublic getHeavyHash():string\n\t{\n\t\tif (this.heavyHash == null) this.calculateHeavyHash();\n\t\treturn this.heavyHash;\n\t}\n\tpublic getDotPath():DotPath\n\t{\n\t\tif (this.dots == null) this.dots = new DotPath(this.mol);\n\t\treturn this.dots;\n\t}\n\n\tpublic getUniqueElements():string[]\n\t{\n\t\tif (this.uniqueElements == null)\n\t\t{\n\t\t\tthis.uniqueElements = [];\n\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet el = this.mol.atomElement(n);\n\t\t\t\tif (this.uniqueElements.indexOf(el) < 0) this.uniqueElements.push(el);\n\t\t\t}\n\t\t}\n\t\treturn this.uniqueElements;\n\t}\n\n\t// equivalence: assumes that both metavectors have been marked up according to the same additional into, i.e.\n\t// aromaticity, stereo, etc.; it will try to resolve the equivalence and get to the answer as quickly as possible,\n\t// with the isomorphism test being the final option\n\tpublic equivalentTo(other:MetaMolecule, timeout = 1000):boolean\n\t{\n\t\tif (MetaMolecule.isomorphMatch == null) throw 'Isomorph search unavailable.';\n\n\t\t// phase 1: different atom/bond counts, don't waste any time\n\t\tif (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds) return false;\n\n\t\t// phase 2: make sure both hashes are generated, and use to screen\n\t\tif (this.hash == null) this.calculateSkeletonHash();\n\t\tif (other.hash == null) other.calculateSkeletonHash();\n\t\tif (this.hash != other.hash) return false;\n\n\t\t// phase 3: if molecules are literally equal, no need to get fancy\n\t\tif (this.mol.compareTo(other.mol) == 0) return true;\n\n\t\t// phase 4: check if any elements are unique on either side\n\t\tlet uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n\t\tfor (let n = 0; n < uniq1.length; n++)\n\t\t{\n\t\t\tif (!uniq2.includes(uniq1[n])) return false;\n\t\t}\n\t\n\t\t// phase 5: the most laborious part, finding any isomorphism\n\t\treturn MetaMolecule.isomorphMatch(this, other, timeout);\n\t}\n\n\t// convenience constructor alternatives\n\tpublic static createRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\tpublic static createStrict(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStrictAromaticity();\n\t\treturn meta;\n\t}\n\n\tpublic static createStrictRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStrictAromaticity();\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\tpublic static createRelaxed(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateRelaxedAromaticity();\n\t\treturn meta;\n\t}\n\n\tpublic static createRelaxedRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateRelaxedAromaticity();\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// define pi-atoms, if not already\n\tprivate ensurePiAtoms():void\n\t{\n\t\tif (this.piAtom != null) return;\n\t\tthis.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++) if (this.mol.bondOrder(n) == 2)\n\t\t{\n\t\t\t{\n\t\t\t\tthis.piAtom[this.mol.bondFrom(n) - 1] = true;\n\t\t\t\tthis.piAtom[this.mol.bondTo(n) - 1] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {Permutation, Vec} from '../util/Vec';\n\n/*\n\tCircular fingerprints: for generating ECFP-2/4/6 and FCFP-2/4/6 fingerprints. These are described by:\n\n    \tOriginal proprietary version:\n    \t\tJ. Chem. Inf. Model., 50, 742–754 (2010)\n    \t\thttp://pubs.acs.org/doi/abs/10.1021/ci100050t\n\n    \tOpen source version (implemented in this module):\n    \t\tJ. Cheminf., 6:38 (2014)\n    \t\thttp://www.jcheminf.com/content/6/1/38\n\n\tNote that integer hashing is done using the CRC32 algorithm, using the Java CRC32 class, which is the same\n\tformula/parameters as used by PNG files, and described in: http://www.w3.org/TR/PNG/#D-CRCAppendix\n\n\tImplicit vs. explicit hydrogens are handled, i.e. it doesn't matter whether the incoming molecule is hydrogen\n\tsuppressed or not. However, inline abbreviations do need to be expanded out prior to doing the calculation.\n*/\n\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\nexport interface CircularFP\n{\n\thashCode:number;\n\titeration:number;\n\tatoms:number[];\n\tcentralAtom:number;\n}\n\nexport class CircularFingerprints\n{\n\tpublic static CLASS_ECFP0 = 0;\n\tpublic static CLASS_ECFP2 = 1;\n\tpublic static CLASS_ECFP4 = 2;\n\tpublic static CLASS_ECFP6 = 3;\n\n\t// plugins: interception of fingerprint addition\n\tpublic hookApplyNewFP:(newFP:CircularFP) => void = null;\n\tpublic hookConsiderNewFP:(newFP:CircularFP) => void = null;\n\n\tprivate identity:number[] = [];\n\tprivate resolvedChiral:boolean[] = [];\n\tprivate atomGroup:number[][] = [];\n\tprivate fplist:CircularFP[] = [];\n\tprivate amask:boolean[] = [];\n\tprivate atomAdj:number[][] = [];\n\tprivate bondAdj:number[][] = [];\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private meta:MetaMolecule, private kind:number)\n\t{\n\t\tmake_crc_table(); // (nop if already made)\n\t}\n\n\t// performs the calculation; after completion, the results may be fetched\n\tpublic calculate():void\n\t{\n\t\tlet mol = this.meta.mol, na = mol.numAtoms;\n\t\tthis.identity = Vec.numberArray(0, na);\n\t\tthis.resolvedChiral = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++) this.atomGroup.push([]);\n\n\t\t// setup the potential correction between explicit vs. implicit hydrogens, and the stashed adjacency list\n\t\tthis.amask = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tthis.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n\t\t\tthis.atomAdj.push([]);\n\t\t\tthis.bondAdj.push([]);\n\t\t}\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tif (!this.amask[n]) continue;\n\t\t\tthis.atomAdj[n] = mol.atomAdjList(n + 1);\n\t\t\tthis.bondAdj[n] = mol.atomAdjBonds(n + 1);\n\t\t\tfor (let i = this.atomAdj[n].length - 1; i >= 0; i--) if (!this.amask[this.atomAdj[n][i] - 1])\n\t\t\t{\n\t\t\t\tthis.atomAdj[n].splice(i, 1);\n\t\t\t\tthis.bondAdj[n].splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\t// seed the initial atom identities, at iteration zero\n\t\tfor (let n = 0; n < na; n++) if (this.amask[n])\n\t\t{\n\t\t\tthis.identity[n] = this.initialIdentityECFP(n + 1);\n\t\t\tthis.atomGroup[n] = [n + 1];\n\t\t\tthis.applyNewFP({hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1});\n\t\t}\n\t\tlet niter = this.kind; // (corresponds: numeric value is # iterations)\n\n\t\t// iterate outward\n\t\tfor (let iter = 1; iter <= niter; iter++)\n\t\t{\n\t\t\tlet newident = Vec.numberArray(0, na);\n\t\t\tfor (let n = 0; n < na; n++) if (this.amask[n]) newident[n] = this.circularIterate(iter, n + 1);\n\t\t\tthis.identity = newident;\n\n\t\t\tfor (let n = 0; n < na; n++) if (this.amask[n])\n\t\t\t{\n\t\t\t\tthis.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n\t\t\t\tthis.considerNewFP({hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1});\n\t\t\t}\n\t\t}\n\t}\n\n\t// convenience constructors; note that molecules should have abbreviations expanded out beforehand\n\tpublic static create(meta:Molecule | MetaMolecule, kind:number):CircularFingerprints\n\t{\n\t\tif (meta instanceof Molecule) meta = MetaMolecule.createStrictRubric(meta);\n\t\tlet circ = new CircularFingerprints(meta, kind);\n\t\tcirc.calculate();\n\t\treturn circ;\n\t}\n\n\t// access to the results/input content\n\tpublic getMolecule():Molecule {return this.meta.mol;}\n\tpublic get numFP():number {return this.fplist.length;}\n\tpublic getFP(idx:number):CircularFP {return this.fplist[idx];}\n\tpublic getFingerprints():CircularFP[] {return this.fplist.slice(0);}\n\n\t// pulls out just the unique instances of each hash code, and returns the sorted list\n\tpublic getUniqueHashes():number[]\n\t{\n\t\tlet hashes = new Set<number>();\n\t\tfor (let fp of this.fplist) hashes.add(fp.hashCode);\n\t\treturn Vec.sorted(Array.from(hashes));\n\t}\n\n\t// as above, except cuts off the bits to a certain folding; note that the folding size must be an exponent of 2\n\tpublic getFoldedHashes(maxBits:number):number[]\n\t{\n\t\tlet andBits = maxBits - 1;\n\t\tlet hashes = new Set<number>();\n\t\tfor (let fp of this.fplist) hashes.add(fp.hashCode & andBits);\n\t\treturn Vec.sorted(Array.from(hashes));\n\t}\n\n\t// calculates the Tanimoto coefficient for two lists of hash codes: these are assumed to be sorted and unique, which\n\t// allows the calculation to be done in O(N) time\n\tpublic static tanimoto(hash1:number[], hash2:number[]):number\n\t{\n\t\tlet shared = 0, total = 0;\n\t\tlet sz1 = hash1.length, sz2 = hash2.length;\n\t\tif (sz1 == 0 && sz2 == 0) return 0;\n\t\tlet i1 = 0, i2 = 0;\n\t\twhile (i1 < sz1 || i2 < sz2)\n\t\t{\n\t\t\tif (i1 == sz1) {total += sz2 - i2; break;}\n\t\t\tif (i2 == sz2) {total += sz1 - i1; break;}\n\t\t\tlet v1 = hash1[i1], v2 = hash2[i2];\n\t\t\tif (v1 == v2) {shared += 1; i1 += 1; i2 += 1;}\n\t\t\telse if (v1 < v2) i1 += 1; else i2 += 1;\n\t\t\ttotal += 1;\n\t\t}\n\t\treturn shared / total;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// calculates an integer number that stores the bit-packed identity of the given atom\n\tprivate initialIdentityECFP(atom:number):number\n\t{\n\t\tconst mol = this.meta.mol;\n\t\tlet adj = mol.atomAdjList(atom); // (note: want them all)\n\n\t\t/*\n\t\t\tAtom properties from the source reference:\n\t\t\t\t(1) number of heavy atom neighbours\n\t\t\t\t(2) atom degree: valence minus # hydrogens\n\t\t\t\t(3) atomic number\n\t\t\t\t(4) atom charge\n\t\t\t\t(5) number of hydrogen neighbours\n\t\t\t\t(6) whether the atom is in a ring\n\t\t*/\n\n\t\tlet nheavy = 0, nhydr = mol.atomHydrogens(atom);\n\t\tfor (let a of adj) if (mol.atomElement(a) == 'H') nhydr++; else nheavy++;\n\n\t\tlet atno = mol.atomicNumber(atom);\n\t\tlet degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n\t\tlet chg = mol.atomCharge(atom);\n\t\tlet inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n\n\t\tlet crc = start_crc();\n\t\tcrc = feed_crc(crc, (nheavy << 4) | degree);\n\t\tcrc = feed_crc(crc, atno);\n\t\tcrc = feed_crc(crc, chg + 0x80);\n\t\tcrc = feed_crc(crc, (nhydr << 4) | inring);\n\t\treturn end_crc(crc);\n\t}\n\n\t// takes the current identity values\n\tprivate circularIterate(iter:number, atom:number):number\n\t{\n\t\tlet adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n\n\t\t// build out a sequence, formulated as\n\t\t//     {iteration,original#, adj0-bondorder,adj0-identity, ..., [chiral?]}\n\t\tlet seq = Vec.numberArray(0, 2 + 2 * adj.length);\n\t\tseq[0] = iter;\n\t\tseq[1] = this.identity[atom - 1];\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tseq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n\t\t\tseq[2 * n + 3] = this.identity[adj[n] - 1];\n\t\t}\n\n\t\t// now sort the adjacencies by bond order first, then identity second\n\t\tlet p = 0;\n\t\twhile (p < adj.length - 1)\n\t\t{\n\t\t\tlet i = 2 + 2 * p;\n\t\t\tif (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3]))\n\t\t\t{\n\t\t\t\tVec.swap(seq, i, i + 2);\n\t\t\t\tVec.swap(seq, i + 1, i + 3);\n\t\t\t\tif (p > 0) p--;\n\t\t\t}\n\t\t\telse p++;\n\t\t}\n\n\t\t// roll it up into a hash code\n\t\tlet crc = start_crc();\n\t\tfor (let n = 0; n < seq.length; n += 2)\n\t\t{\n\t\t\tcrc = feed_crc(crc, seq[n]);\n\t\t\tlet v = seq[n + 1];\n\t\t\tcrc = feed_crc(crc, v >> 24);\n\t\t\tcrc = feed_crc(crc, (v >> 16) & 0xFF);\n\t\t\tcrc = feed_crc(crc, (v >> 8) & 0xFF);\n\t\t\tcrc = feed_crc(crc, v & 0xFF);\n\t\t}\n\n\t\t// chirality flag: one chance to resolve it\n\t\tif (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null)\n\t\t{\n\t\t\tlet ru = this.meta.rubricTetra[atom - 1];\n\t\t\tlet par =\n\t\t\t[\n\t\t\t\tru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n\t\t\t\tru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n\t\t\t\tru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n\t\t\t\tru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n\t\t\t];\n\t\t\tif (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3])\n\t\t\t{\n\t\t\t\t// add 1 or 2 to the end of the list, depending on the parity\n\t\t\t\tcrc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n\t\t\t\tthis.resolvedChiral[atom - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn end_crc(crc);\n\t}\n\n\t// takes a set of atom indices and adds all atoms that are adjacent to at least one of them; the resulting list of\n\t// atom indices is sorted\n\tprivate growAtoms(atoms:number[]):number[]\n\t{\n\t\tlet mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t{\n\t\t\tmask[atoms[n] - 1] = true;\n\t\t\tfor (let a of this.atomAdj[atoms[n] - 1]) mask[a - 1] = true;\n\t\t}\n\t\treturn Vec.add(Vec.maskIdx(mask), 1);\n\t}\n\n\t// add a new fingerprint, with no duplicate check (initial seed round); is only a separate function so it can be trapped\n\tprivate applyNewFP(newFP:CircularFP):void\n\t{\n\t\tif (this.hookConsiderNewFP) this.hookConsiderNewFP(newFP);\n\t\tif (this.hookApplyNewFP) this.hookApplyNewFP(newFP);\n\t\tthis.fplist.push(newFP);\n\t}\n\n\t// consider adding a new fingerprint: if it's a duplicate with regard to the atom list, either replace the match or\n\t// discard it\n\tprivate considerNewFP(newFP:CircularFP):void\n\t{\n\t\tif (this.hookConsiderNewFP) this.hookConsiderNewFP(newFP);\n\n\t\tlet hit = -1;\n\t\tlet fp:CircularFP = null;\n\t\tfor (let n = 0; n < this.fplist.length; n++)\n\t\t{\n\t\t\tlet lookFP = this.fplist[n];\n\t\t\tif (Vec.equals(lookFP.atoms, newFP.atoms)) {fp = lookFP; hit = n; break;}\n\t\t}\n\t\tif (hit < 0)\n\t\t{\n\t\t\tthis.fplist.push(newFP);\n\t\t\treturn;\n\t\t}\n\n\t\t// if the preexisting fingerprint is from an earlier iteration, or has a lower hashcode, discard\n\t\tif (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode) return;\n\n\t\tthis.fplist[hit] = newFP;\n\t\tif (this.hookApplyNewFP) this.hookApplyNewFP(newFP);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {norm2_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CircularFingerprints, CircularFP} from './CircularFingerprints';\n\n/*\n\tA specialisation of the BayesianModel class, which operates exclusively on Circular (ECFP/FCFP) fingerprints.\n\tProvides convenience methods for feeding in raw molecules to create a model, and also serialisation/deserialisation\n\tfeatures allowing models to be stored and recreated with known properties.\n\n\tThe class is designed to operate with fairly large input sizes, but it does need to hold onto all of the calculated\n\tfingerprint lists so that the final build operation can calculate calibration metrics.\n\n\tIt can operate with any degree of fingerprint folding, including none at all (but this means that there is a diabolical\n\tcase that could get very memory intensive).\n\n\tFolding is optional: 0 means that all hash codes are retained (worst case scenario: 4 billion). If folding,\n\tmust be an exponent of two (e.g. 1024, 2048, 4096, etc.) In practice, ROC curves for recalling single properties\n\ttend to hit diminishing returns above folding sizes of about 1024.\n\n\tSerialisation format is:\n\n\t\tBayesian!({fptype},{folding},{low},{high})\n\t\t{hashidx1}={contribution1}\n\t\t{hashidx2}={contribution2}\n\t\t...\n\t\t!End\n\n\tRecommended file extension is \".bayesian\", MIME type is \"chemistry/x-bayesian\"\n\n\tWhere {fptype} is ECFP0/2/4/6 or FCFP0/2/4/6.\n\n\t{low} and {high} are the boundaries of the response value for the training set.\n*/\n\nexport class BayesianModel\n{\n\t// incoming hash codes: actual values, and subsumed values are {#active,#total}\n\tprivate numActive = 0;\n\tprivate inHash:{[id:number] : number[]} = {};\n\tprivate training:number[][] = [];\n\tprivate activity:boolean[] = [];\n\n\t// built model: contributions for each hash code\n\tprivate contribs:{[id:number] : number} = {};\n\tprivate lowThresh = 0;\n\tprivate highThresh = 0;\n\tprivate range = 0;\n\tprivate invRange = 0;\n\n\t// self-validation metrics: can optionally be calculated after a build\n\tprivate estimates:number[] = null;\n\tpublic rocX:number[] = null; // between 0..1, and rounded to modest precision\n\tpublic rocY:number[] = null;\n\tpublic rocType:string = null;\n\tpublic rocAUC = Number.NaN;\n\tpublic trainingSize = 0; // these are serialised, while the actual training set is not\n\tpublic trainingActives = 0;\n\tpublic atomicSlopeA = Number.NaN; // calibration for atomic predictors (to get into [-1,1])\n\tpublic atomicInterceptB = Number.NaN;\n\n\t// truth-table and derived metrics\n\tpublic truthTP = 0;\n\tpublic truthFP = 0;\n\tpublic truthTN = 0;\n\tpublic truthFN = 0;\n\tpublic precision = Number.NaN;\n\tpublic recall = Number.NaN;\n\tpublic specificity = Number.NaN;\n\tpublic statF1 = Number.NaN;\n\tpublic statKappa = Number.NaN;\n\tpublic statMCC = Number.NaN;\n\n\t// optional text attributes (serialisable)\n\tpublic noteTitle:string = null;\n\tpublic noteOrigin:string = null;\n\tpublic noteField:string = null;\n\tpublic noteComments:string[] = null;\n\n\t// ----------------- public methods -----------------\n\n\t// instantiate: must pick a class, which is one of the CircularFingerprints.CLASS_* constants\n\tconstructor(public classType:number, public folding?:number)\n\t{\n\t\tif (this.folding == null) this.folding = 0;\n\t}\n\n\t// creates fingerprints for the indicated molecule, and adds them into the Bayesian inputs; note that for performance purposes, it is allowed to provide precomputed\n\t// hash codes, but the caller must ensure that they are calculated according to the same schema\n\tpublic addMolecule(mol:Molecule, active:boolean, hashes?:number[])\n\t{\n\t\tif (MolUtil.isBlank(mol) && hashes == null) throw 'Molecule cannot be blank or null.';\n\n\t\tif (hashes == null)\n\t\t{\n\t\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\t\tcirc.calculate();\n\t\t\thashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\t}\n\n\t\tif (active) this.numActive++;\n\t\tthis.training.push(hashes);\n\t\tthis.activity.push(active);\n\t\tfor (let h of hashes)\n\t\t{\n\t\t\tlet stash = this.inHash[h];\n\t\t\tif (stash == null) stash = [0, 0];\n\t\t\tif (active) stash[0]++;\n\t\t\tstash[1]++;\n\t\t\tthis.inHash[h] = stash;\n\t\t}\n\t}\n\n\t// turns the incoming hashes into fingerprint contributions, which makes up a model that can be used to predict\n\t// newly submitted structures\n\tpublic build():void\n\t{\n\t\tthis.trainingSize = this.training.length; // for posterity\n\t\tthis.trainingActives = this.numActive;\n\n\t\tthis.contribs = [];\n\n\t\tconst sz = this.training.length;\n\t\tconst invSz = 1.0 / sz;\n\t\tconst P_AT = this.numActive * invSz;\n\n\t\tfor (let hashStr in this.inHash)\n\t\t{\n\t\t\tlet hash = parseInt(hashStr);\n\t\t\tconst AT = this.inHash[hash];\n\t\t\tconst A = AT[0], T = AT[1];\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tthis.contribs[hash] = P;\n\t\t}\n\n\t\tthis.lowThresh = Number.POSITIVE_INFINITY;\n\t\tthis.highThresh = Number.NEGATIVE_INFINITY;\n\t\tfor (let fp of this.training)\n\t\t{\n\t\t\tlet val = 0;\n\t\t\tfor (let hash of fp) val += this.contribs[hash];\n\t\t\tthis.lowThresh = Math.min(this.lowThresh, val);\n\t\t\tthis.highThresh = Math.max(this.highThresh, val);\n\t\t}\n\t\tthis.range = this.highThresh - this.lowThresh;\n\t\tthis.invRange = this.range > 0 ? 1 / this.range : 0;\n\t}\n\n\t// calculates fingerprints for a molecule, and returns the predictor value\n\tpublic predictMolecule(mol:Molecule):number\n\t{\n\t\tif (MolUtil.isBlank(mol)) throw 'Molecule cannot be blank or null.';\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\tcirc.calculate();\n\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\treturn this.predictFP(hashes);\n\t}\n\n\t// perform the prediction, given the precomputed hash codes; this may be called from outside of the class for performance reasons, but the caller\n\t// must take care to ensure that the same fingerprint scheme is used, and that the hash codes are ordered\n\tpublic predictFP(hashes:number[]):number\n\t{\n\t\tlet val = 0;\n\t\tfor (let h of hashes)\n\t\t{\n\t\t\tlet c = this.contribs[h];\n\t\t\tif (c != null) val += c;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// converts the predictor (as calculated above) into a value that is scaled and translated into a range that can be used as a probability: most values\n\t// will fall between 0..1, though some out-of-domain cases will exceed this range and may have to be capped\n\tpublic scalePredictor(pred:number):number\n\t{\n\t\t// special case: if there is no differentiation scale, it's either above or below (typically happens with tiny models)\n\t\tif (this.range == 0) return pred >= this.highThresh ? 1 : 0;\n\t\treturn (pred - this.lowThresh) * this.invRange;\n\t}\n\n\t// while the scaled predictor (above) is generally between 0..1 (\"probability-like\"), results can go out of bounds; using the arctan\n\t// function scales it so that the centroid is the same (0.5), but lower/higher values approach 0 or 1 as asymptotes; this is a useful\n\t// way of keeping it within the range without resorting to capping, and has another handy effect of allowing known results to be stored\n\t// in the same field (i.e. 0=known inactive, 1=known active, because these values cannot otherwise be reached)\n\tpublic scaleArcTan(scaled:number):number\n\t{\n\t\tconst INVPI = 1.0 / Math.PI;\n\t\treturn Math.atan(2 * scaled - 1) * INVPI + 0.5;\n\t}\n\n\t// figure out the proportion of a molecule's fingerprints are represented in the model\n\tpublic calculateOverlap(mol:Molecule):number\n\t{\n\t\tif (MolUtil.isBlank(mol)) throw 'Molecule cannot be blank or null.';\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\tcirc.calculate();\n\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\treturn this.calculateOverlapFP(hashes);\n\t}\n\n\tpublic calculateOverlapFP(hashes:number[]):number\n\t{\n\t\tif (hashes.length == 0) return 0;\n\t\tlet count = 0.0;\n\t\tfor (let h of hashes) if (this.contribs[h] != null) count++;\n\t\treturn hashes.length == 1 ? count : count / hashes.length;\n\t}\n\n\t// builds an array of contribution values per atom; the scale is: 0=neutral, -1=very inactive, 1=very active (but not capped)\n\tpublic calculateAtomPredictors(mol:Molecule):number[]\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet atomic = Vec.numberArray(0, na); // (default of zero: is this the best call?)\n\n\t\t// sum the contributions: for each fingerprint that is defined, smear the contribution equally over all of the atoms that were involved in\n\t\t// a fingerprint with that hash code\n\t\tlet predHashes = new Set<number>();\n\t\tlet cover = this.determineCoverage(mol, predHashes);\n\t\tfor (let h in cover)\n\t\t{\n\t\t\tlet c = this.contribs[h];\n\t\t\tif (c == null) continue;\n\t\t\tlet mask = cover[h];\n\t\t\tlet msz = Vec.maskCount(mask);\n\t\t\tlet invSz = 1.0 / msz;\n\t\t\tfor (let n = 0; n < na; n++) if (mask[n]) atomic[n] += c * invSz;\n\t\t}\n\n\t\t// special deal: if there is a calibration for atomic values, apply that and be done with it\n\t\tif (!isNaN(this.atomicSlopeA))\n\t\t{\n\t\t\tfor (let n = 0; n < na; n++) atomic[n] = (this.atomicSlopeA * atomic[n]) + this.atomicInterceptB;\n\t\t\treturn atomic;\n\t\t}\n\n\t\t// double duty: use the same source material to add up the numeric predictor as well (note that the \"coverage\" hashes are not necessarily\n\t\t// the same as the approved list)\n\t\tlet pred = 0;\n\t\tfor (let h of predHashes)\n\t\t{\n\t\t\tlet c = this.contribs[h as any];\n\t\t\tif (c != null) pred += c;\n\t\t}\n\n\t\t// adjust the contributions to an average of zero, with a fixed standard deviation\n\t\tconst SCALE_STDDEV_TO = 0.25;\n\t\tconst invN = 1.0 / na;\n\t\tVec.addTo(atomic, -Vec.sum(atomic) * invN);\n\t\tlet stdDev = 0;\n\t\tfor (let a of atomic) stdDev += a * a;\n\t\tstdDev = Math.sqrt(stdDev * invN);\n\n\t\tif (stdDev > 1E-3) Vec.mulBy(atomic, SCALE_STDDEV_TO / stdDev);\n\n\t\t// shunt it up so that it is centred around the overal predictor, in the same zero-centred space\n\t\tlet scaled = (this.scalePredictor(pred) - 0.5) * 2; // adjusted to the [-1,1] space\n\t\tif (scaled < -1) scaled = -1; else if (scaled > 1) scaled = 1;\n\t\tVec.addTo(atomic, scaled);\n\t\treturn atomic;\n\t}\n\n\t// produces an ROC validation set using the training data, in leave-one-out fashion; note that this is very slow, and scales to O(N^2) relative\n\t// to the size of the training set, so should only be used for small collections\n\tpublic validateLeaveOneOut():void\n\t{\n\t\tconst sz = this.training.length;\n\t\tthis.estimates = [];\n\t\tfor (let n = 0; n < sz; n++) this.estimates.push(this.singleLeaveOneOut(n));\n\t\tthis.calculateROC();\n\t\tthis.calculateTruth();\n\t\tthis.rocType = 'leave-one-out';\n\t}\n\n\t// produces ROC validation, except using an N-pass split, which is much faster than leave-one-out, and is appropriate for reasonably big datasets\n\tpublic validateFiveFold():void\n\t{\n\t\tthis.rocType = 'five-fold';\n\t\tthis.validateNfold(5);\n\t}\n\n\tpublic validateThreeFold():void\n\t{\n\t\tthis.rocType = 'three-fold';\n\t\tthis.validateNfold(3);\n\t}\n\n\t// clears content from the training set (since it can be a memory hog)\n\tpublic clearTraining():void\n\t{\n\t\tthis.training = [];\n\t\tthis.activity = [];\n\t}\n\n\t// turns the model into a serialised ASCII string format\n\tpublic serialise():string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tlet fpname = this.classType == CircularFingerprints.CLASS_ECFP0 ? 'ECFP0' : this.classType == CircularFingerprints.CLASS_ECFP2 ? 'ECFP2'\n\t\t\t\t   : this.classType == CircularFingerprints.CLASS_ECFP4 ? 'ECFP4' : this.classType == CircularFingerprints.CLASS_ECFP6 ? 'ECFP6'\n\t\t\t\t   : '?';\n\n\t\tlines.push('Bayesian!(' + fpname + ',' + this.folding + ',' + this.lowThresh + ',' + this.highThresh + ')');\n\n\t\t// primary payload: the bit contributions\n\t\tlet sorted:number[] = [];\n\t\tfor (let hash in this.contribs) sorted.push(parseInt(hash));\n\t\tVec.sort(sorted);\n\t\tfor (let hash of sorted)\n\t\t{\n\t\t\tconst c = this.contribs[hash];\n\t\t\tlines.push(hash + '=' + c);\n\t\t}\n\n\t\t// other information\n\t\tlines.push('training:size=' + this.trainingSize);\n\t\tlines.push('training:actives=' + this.trainingActives);\n\n\t\tif (!Number.isNaN(this.rocAUC)) lines.push('roc:auc=' + this.rocAUC);\n\t\tif (this.rocType != null) lines.push('roc:type=' + this.rocType);\n\t\tif (this.rocX != null && this.rocY != null)\n\t\t{\n\t\t\tlet x = 'roc:x=';\n\t\t\tfor (let n = 0; n < this.rocX.length; n++) x += (n == 0 ? '' : ',') + this.rocX[n];\n\t\t\tlines.push(x);\n\n\t\t\tlet y = 'roc:y=';\n\t\t\tfor (let n = 0; n < this.rocY.length; n++) y += (n == 0 ? '' : ',') + this.rocY[n];\n\t\t\tlines.push(y);\n\t\t}\n\n\t\tif (this.truthTP > 0 || this.truthFP > 0 || this.truthTN > 0 || this.truthFP > 0)\n\t\t{\n\t\t\tlines.push('truth:TP=' + this.truthTP);\n\t\t\tlines.push('truth:FP=' + this.truthFP);\n\t\t\tlines.push('truth:TN=' + this.truthTN);\n\t\t\tlines.push('truth:FN=' + this.truthFN);\n\t\t\tlines.push('truth:precision=' + this.precision);\n\t\t\tlines.push('truth:recall=' + this.recall);\n\t\t\tlines.push('truth:specificity=' + this.specificity);\n\t\t\tlines.push('truth:F1=' + this.statF1);\n\t\t\tlines.push('truth:kappa=' + this.statKappa);\n\t\t\tlines.push('truth:MCC=' + this.statMCC);\n\t\t}\n\n\t\tif (!isNaN(this.atomicSlopeA) && !isNaN(this.atomicInterceptB))\n\t\t{\n\t\t\tlines.push('atomic:slope=' + this.atomicSlopeA);\n\t\t\tlines.push('atomic:intercept=' + this.atomicInterceptB);\n\t\t}\n\n\t\t// notes: freeform user text\n\t\tif (this.noteTitle) lines.push('note:title=' + this.noteTitle);\n\t\tif (this.noteOrigin) lines.push('note:origin=' + this.noteOrigin);\n\t\tif (this.noteField) lines.push('note:field=' + this.noteField);\n\t\tif (this.noteComments) for (let comment of this.noteComments) lines.push('note:comment=' + comment);\n\n\t\tlines.push('!End');\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// transforms string back into model, if possible\n\tpublic static deserialise(str:string):BayesianModel\n\t{\n\t\tlet lines = str.split('\\n'), lnum = 0;\n\t\tfunction readLine() {return lnum >= lines.length ? null : lines[lnum++].trim();}\n\n\t\tlet line = readLine();\n\t\tif (line == null || !line.startsWith('Bayesian!(') || !line.endsWith(')')) throw 'Not a serialised Bayesian model.';\n\t\tlet bits = line.substring(10, line.length - 1).split(',');\n\t\tif (bits.length < 4) throw 'Invalid header content';\n\n\t\tlet classType = bits[0] == 'ECFP0' ? CircularFingerprints.CLASS_ECFP0 : bits[0] == 'ECFP2' ? CircularFingerprints.CLASS_ECFP2\n\t\t\t\t\t  : bits[0] == 'ECFP4' ? CircularFingerprints.CLASS_ECFP4 : bits[0] == 'ECFP6' ? CircularFingerprints.CLASS_ECFP6\n\t\t\t\t\t  : 0;\n\t\tif (classType == 0) throw 'Unknown fingerprint type: ' + bits[0];\n\n\t\tlet folding = parseInt(bits[1]);\n\t\tif (folding > 0) for (let f = folding; f > 0; f = f >> 1)\n\t\t{\n\t\t\tif ((f & 1) == 1 && f != 1)\n\t\t\t{\n\t\t\t\tfolding = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (folding < 0) throw 'Fingerprint folding ' + bits[1] + ' invalid: must be 0 or power of 2.';\n\n\t\tlet model = new BayesianModel(classType, folding);\n\t\tmodel.lowThresh = parseFloat(bits[2]);\n\t\tmodel.highThresh = parseFloat(bits[3]);\n\t\tmodel.range = model.highThresh - model.lowThresh;\n\t\tmodel.invRange = model.range > 0 ? 1 / model.range : 0;\n\n\t\tconst PTN_HASHLINE = new RegExp('^(-?\\\\d+)=([\\\\d\\\\.Ee-]+)');\n\n\t\twhile (true)\n\t\t{\n\t\t\tline = readLine();\n\t\t\tif (line == null) throw 'Missing correct terminator line.';\n\t\t\tif (line == '!End') break;\n\n\t\t\tlet match = PTN_HASHLINE.exec(line);\n\t\t\tif (match != null)\n\t\t\t{\n\t\t\t\tlet hash = parseInt(match[1]);\n\t\t\t\tlet c = parseFloat(match[2]);\n\t\t\t\tmodel.contribs[hash] = c;\n\t\t\t}\n\t\t\telse if (line.startsWith('training:size=')) model.trainingSize = parseInt(line.substring(14));\n\t\t\telse if (line.startsWith('training:actives=')) model.trainingActives = parseInt(line.substring(17));\n\t\t\telse if (line.startsWith('roc:auc=')) model.rocAUC = parseFloat(line.substring(8));\n\t\t\telse if (line.startsWith('roc:type=')) model.rocType = line.substring(9);\n\t\t\telse if (line.startsWith('roc:x='))\n\t\t\t{\n\t\t\t\tmodel.rocX = [];\n\t\t\t\tfor (let s of line.substring(6).split(',')) model.rocX.push(parseFloat(s));\n\t\t\t}\n\t\t\telse if (line.startsWith('roc:y='))\n\t\t\t{\n\t\t\t\tmodel.rocY = [];\n\t\t\t\tfor (let s of line.substring(6).split(',')) model.rocY.push(parseFloat(s));\n\t\t\t}\n\t\t\telse if (line.startsWith('truth:TP=')) model.truthTP = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:FP=')) model.truthFP = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:TN=')) model.truthTN = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:FN=')) model.truthFN = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:precision=')) model.precision = parseFloat(line.substring(16));\n\t\t\telse if (line.startsWith('truth:recall=')) model.recall = parseFloat(line.substring(13));\n\t\t\telse if (line.startsWith('truth:specificity=')) model.specificity = parseFloat(line.substring(18));\n\t\t\telse if (line.startsWith('truth:F1=')) model.statF1 = parseFloat(line.substring(9));\n\t\t\telse if (line.startsWith('truth:kappa=')) model.statKappa = parseFloat(line.substring(12));\n\t\t\telse if (line.startsWith('truth:MCC=')) model.statMCC = parseFloat(line.substring(10));\n\t\t\telse if (line.startsWith('atomic:slope=')) model.atomicSlopeA = parseFloat(line.substring(13));\n\t\t\telse if (line.startsWith('atomic:intercept=')) model.atomicInterceptB = parseFloat(line.substring(17));\n\t\t\telse if (line.startsWith('note:title=')) model.noteTitle = line.substring(11);\n\t\t\telse if (line.startsWith('note:origin=')) model.noteOrigin = line.substring(12);\n\t\t\telse if (line.startsWith('note:field=')) model.noteField = line.substring(11);\n\t\t\telse if (line.startsWith('note:comment='))\n\t\t\t{\n\t\t\t\tif (model.noteComments == null) model.noteComments = [];\n\t\t\t\tmodel.noteComments.push(line.substring(13));\n\t\t\t}\n\t\t}\n\n\t\treturn model;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// estimate leave-one-out predictor for a given training entry\n\tprivate singleLeaveOneOut(idx:number):number\n\t{\n\t\tlet exclActive = this.activity[idx];\n\t\tlet exclSet = new Set<number>();\n\t\tfor (let fp of this.training[idx]) exclSet.add(fp);\n\n\t\tconst sz = this.training.length, szN = sz - 1;\n\t\tconst invSzN = 1.0 / szN;\n\t\tconst activeN = exclActive ? this.numActive - 1 : this.numActive;\n\t\tconst P_AT = activeN * invSzN;\n\n\t\tlet val = 0;\n\t\tfor (let hashStr in this.inHash)\n\t\t{\n\t\t\tconst hash = parseInt(hashStr);\n\t\t\tif (!exclSet.has(hash)) continue;\n\t\t\tconst AT = this.inHash[hash];\n\t\t\tconst A = AT[0] - (exclActive ? 1 : 0), T = AT[1] - 1;\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tval += P;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// validation with N segments\n\tprivate validateNfold(nsegs:number):void\n\t{\n\t\t// partition between active & inactive, just in case the mixture is heavily skewed\n\t\tconst sz = this.training.length;\n\t\tlet order = Vec.numberArray(0, sz);\n\t\tlet p = 0;\n\t\tfor (let n = 0; n < sz; n++) if (this.activity[n]) order[p++] = n;\n\t\tfor (let n = 0; n < sz; n++) if (!this.activity[n]) order[p++] = n;\n\n\t\t// build N separate contribution models: each one of them build from the entities that are *not* in the segment\n\t\tlet segContribs:{[id:number] : number}[] = [];\n\t\tfor (let n = 0; n < nsegs; n++) segContribs.push(this.buildPartial(order, n, nsegs));\n\n\t\t// use the separate models to estimate the cases that were not covered\n\t\tthis.estimates = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < sz; n++) this.estimates[order[n]] = this.estimatePartial(order, n, segContribs[n % nsegs]);\n\t\tthis.calculateROC();\n\t\tthis.calculateTruth();\n\t}\n\n\t// generates a contribution model based on all the training set for which (n%div)!=seg; e.g. for 5-fold, it would use the 80% of the training set\n\t// that is not implied by the current skein\n\tprivate buildPartial(order:number[], seg:number, div:number)\n\t{\n\t\tconst sz = this.training.length;\n\t\tlet na = 0, nt = 0;\n\t\tlet ih:{[id:number] : number[]} = {};\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n % div != seg)\n\t\t\t{\n\t\t\t\tconst active = this.activity[order[n]];\n\t\t\t\tif (active) na++;\n\t\t\t\tnt++;\n\t\t\t\tfor (let h of this.training[order[n]])\n\t\t\t\t{\n\t\t\t\t\tlet stash = ih[h];\n\t\t\t\t\tif (stash == null) stash = [0, 0];\n\t\t\t\t\tif (active) stash[0]++;\n\t\t\t\t\tstash[1]++;\n\t\t\t\t\tih[h] = stash;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet segContribs:{[id:number] : number} = {};\n\n\t\tconst invSz = 1.0 / nt;\n\t\tconst P_AT = na * invSz;\n\t\tfor (let hashStr in ih)\n\t\t{\n\t\t\tlet hash = parseInt(hashStr);\n\t\t\tconst AT = ih[hash];\n\t\t\tconst A = AT[0], T = AT[1];\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tsegContribs[hash] = P;\n\t\t}\n\n\t\treturn segContribs;\n\t}\n\n\t// using contributions build from some partial section of the training set, uses that to estimate for an untrained entry\n\tprivate estimatePartial(order:number[], idx:number, segContrib:{[id:number] : number}):number\n\t{\n\t\tlet val = 0;\n\t\tfor (let h of this.training[order[idx]])\n\t\t{\n\t\t\tlet c = segContrib[h];\n\t\t\tif (c != null) val += c;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// assumes estimates already calculated, fills in the ROC data\n\tprivate calculateROC():void\n\t{\n\t\t// sort the available estimates, and take midpoints\n\t\tconst sz = this.training.length;\n\t\tlet idx = Vec.idxSort(this.estimates);\n\t\tlet thresholds:number[] = [];\n\t\tthresholds.push(this.lowThresh - 0.01 * this.range);\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tconst th1 = this.estimates[idx[n]], th2 = this.estimates[idx[n + 1]];\n\t\t\tif (th1 == th2) continue;\n\t\t\tthresholds.push(0.5 * (th1 + th2));\n\t\t}\n\t\tthresholds.push(this.highThresh + 0.01 * this.range);\n\n\t\t// x = false positives / actual negatives\n\t\t// y = true positives / actual positives\n\t\tthis.rocX = [];\n\t\tthis.rocY = [];\n\t\tlet rocT:number[] = [];\n\n\t\tlet posTrue = 0, posFalse = 0, ipos = 0;\n\t\tlet invPos = 1.0 / this.numActive, invNeg = 1.0 / (sz - this.numActive);\n\t\tfor (let n = 0; n < thresholds.length; n++)\n\t\t{\n\t\t\tconst th = thresholds[n];\n\t\t\tfor (; ipos < sz; ipos++)\n\t\t\t{\n\t\t\t\tif (th < this.estimates[idx[ipos]]) break;\n\t\t\t\tif (this.activity[idx[ipos]]) posTrue++;\n\t\t\t\telse posFalse++;\n\t\t\t}\n\t\t\tconst x = posFalse * invNeg;\n\t\t\tconst y = posTrue * invPos;\n\t\t\tconst rsz = rocT.length;\n\t\t\tif (rsz > 0 && x == this.rocX[rsz - 1] && y == this.rocY[rsz - 1]) continue;\n\n\t\t\tthis.rocX[rsz] = 1 - x;\n\t\t\tthis.rocY[rsz] = 1 - y;\n\t\t\trocT[rsz] = th;\n\t\t}\n\n\t\tthis.rocX = Vec.reverse(this.rocX);\n\t\tthis.rocY = Vec.reverse(this.rocY);\n\t\trocT = Vec.reverse(rocT);\n\n\t\tthis.calibrateThresholds(this.rocX, this.rocY, rocT);\n\n\t\t// calculate area-under-curve\n\t\tthis.rocAUC = 0;\n\t\tfor (let n = 0; n < rocT.length - 1; n++)\n\t\t{\n\t\t\tconst w = this.rocX[n + 1] - this.rocX[n], h = 0.5 * (this.rocY[n] + this.rocY[n + 1]);\n\t\t\tthis.rocAUC += w * h;\n\t\t}\n\n\t\t// collapse the {x,y} coords: no sensible reason to have huge number of points\n\t\tconst DIST = 0.002, DSQ = DIST * DIST;\n\t\tlet gx:number[] = [], gy:number[] = [];\n\t\tgx.push(this.rocX[0]);\n\t\tgy.push(this.rocY[0]);\n\t\tfor (let i = 1; i < rocT.length - 1; i++)\n\t\t{\n\t\t\tconst dx = this.rocX[i] - gx[gx.length - 1], dy = this.rocY[i] - gy[gy.length - 1];\n\t\t\tif (norm2_xy(dx, dy) < DSQ) continue;\n\t\t\tgx.push(this.rocX[i]);\n\t\t\tgy.push(this.rocY[i]);\n\t\t}\n\t\tgx.push(this.rocX[rocT.length - 1]);\n\t\tgy.push(this.rocY[rocT.length - 1]);\n\t}\n\n\t// builds the \"truth table\", which uses the calibration threshold to determine which side of the line each input molecule is on (with whichever\n\t// cross validation split was used for the ROC); from the 2x2 table, all the other metrics can also be derived\n\tprivate calculateTruth():void\n\t{\n\t\tlet thresh = 0.5 * (this.lowThresh + this.highThresh);\n\t\tthis.truthTP = this.truthFP = this.truthTN = this.truthFN = 0;\n\t\tfor (let n = 0; n < this.activity.length; n++)\n\t\t{\n\t\t\tlet actual = this.activity[n], predicted = this.estimates[n] >= thresh;\n\t\t\tif (actual && predicted) this.truthTP++;\n\t\t\telse if (!actual && predicted) this.truthFP++;\n\t\t\telse if (actual && !predicted) this.truthFN++;\n\t\t\telse if (!actual && !predicted) this.truthTN++;\n\t\t}\n\n\t\tconst TP = this.truthTP, FP = this.truthFP, TN = this.truthTN, FN = this.truthFN;\n\n\t\tlet invSize = 1.0 / this.activity.length;\n\n\t\t// calculate F1 score\n\t\tthis.precision = TP / (TP + FP);\n\t\tthis.recall = TP / (TP + FN);\n\t\tthis.specificity = TN / (TN + FP);\n\t\tthis.statF1 = 2 * (this.precision * this.recall) / (this.precision + this.recall);\n\n\t\t// calculate Cohen's kappa\n\t\tlet Pyes = (TP + FP) * invSize * (TP + FN) * invSize;\n\t\tlet Pno = (FP + TN) * invSize * (FN + TN) * invSize;\n\t\tlet P0 = (TP + TN) * invSize, Pe = Pyes + Pno;\n\t\tthis.statKappa = (P0 - Pe) / (1 - Pe);\n\n\t\t// calculate Matthews correlation coefficient\n\t\tlet mccOver = TP * TN - FP * FN;\n\t\tlet mccUnder = (TP + FP) * (TP + FN) * (TN + FP) * (TN + FN);\n\t\tthis.statMCC = mccOver / Math.sqrt(mccUnder);\n\t}\n\n\t// rederives the low/high thresholds, using ROC curve data: once the analysis is complete, the midpoint will be the optimum balance\n\tprivate calibrateThresholds(x:number[], y:number[], t:number[]):void\n\t{\n\t\tconst sz = t.length;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < sz; n++) if (y[n] - x[n] > y[idx] - x[idx]) idx = n;\n\t\tconst midThresh = t[idx];\n\t\tlet idxX = 0, idxY = sz - 1;\n\t\tfor (; idxX < idx - 1; idxX++) if (x[idxX] > 0) break;\n\t\tfor (; idxY > idx + 1; idxY--) if (y[idxY] < 1) break;\n\t\tlet delta = Math.min(t[idxX] - midThresh, midThresh - t[idxY]);\n\t\tthis.lowThresh = midThresh - delta;\n\t\tthis.highThresh = midThresh + delta;\n\t\tthis.range = 2 * delta;\n\t\tthis.invRange = this.range > 0 ? 1 / this.range : 0;\n\t}\n\n\t// reapplies the fingerprint generation for a molecule, given that the outgoing indices are known already; it uses this\n\t// information to generate a mask for each of the indices, which describes the atoms that could lead to the fingerprint's\n\t// creation (including all of the possible redundancies)\n\t// note that the \"approvedHashes\" parameter is optional; it will be used to gather the numeric indices of the hashes\n\t// that were approved, i.e. the normal fingerprint list; done for performance reasons, to avoid recalculating\n\tpublic determineCoverage(mol:Molecule, approvedHashes:Set<number>):{[id:number] : boolean[]}\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet cover:{[id:number] : boolean[]} = {};\n\t\tconst andBits = this.folding == 0 ? 0xFFFFFFFF : this.folding - 1;\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\n\t\tlet collectFP = (fp:CircularFP):void =>\n\t\t{\n\t\t\tlet idx = fp.hashCode & andBits;\n\t\t\tif (this.contribs[idx] == null) return; // hash bit not in the model, so abandon it\n\t\t\tlet mask = cover[idx];\n\t\t\tif (mask == null)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, na);\n\t\t\t\tcover[idx] = mask;\n\t\t\t}\n\t\t\tfor (let a of fp.atoms) mask[a - 1] = true;\n\t\t};\n\t\tcirc.hookApplyNewFP = collectFP;\n\t\tcirc.hookConsiderNewFP = collectFP;\n\t\tcirc.calculate();\n\n\t\t// collect the \"approved\" hashes, i.e. the normal operation of the fingerprinter\n\t\tif (approvedHashes != null)\n\t\t{\n\t\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\t\tfor (let h of hashes) approvedHashes.add(h);\n\t\t}\n\n\t\treturn cover;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Molecule} from '../mol/Molecule';\nimport {Vec} from '../util/Vec';\n\n/*\n\tTurns a molecule into linear notation, following some of the SMILES string patterns. The output will be recognisable as a\n\tconnection table, but it should be noted that the conversion process is extremely lossy. There are only certain use cases\n\twhere this makes sense, mainly for interoperability purposes, e.g. pasting into an online searching tool, or embedding in a\n\ttext format where some molecule is better than none. The output can be made canonical by providing a set of priorities,\n\tbut this is optional, and there is no plan to sync with any of the existing schemes.\n\n\tSpecific deficiencies which could be addressed:\n\t\t- aromaticity is not used at all; the raw bond orders are encoded\n\t\t- stereochemistry is not encoded at all\n\t\t- no query to SMARTS translation\n*/\n\nexport class BuildSMILES\n{\n\tprivate seq:number[]; // the walk-order atom sequence\n\tprivate link:number[][]; // a list of the linking-codes between nonsequential atoms\n\tprivate conn:number[][]; // a list of the \"other atom\" indices corresponding to above\n\n\t// ------------------ public methods --------------------\n\n\t// note: pri is an optional parameter that can be used to specify the walk-order preference\n\tconstructor(private mol:Molecule, private pri:number[] = null)\n\t{\n\t}\n\n\t// performs the calculation, and returns the string\n\tpublic generate():string\n\t{\n\t\tif (this.mol.numAtoms == 0) return '';\n\n\t\tthis.walkSequence();\n\t\tthis.findLinks();\n\t\treturn this.assemble();\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// orders the atoms by walking down the list\n\tprivate walkSequence():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, pri = this.pri;\n\t\tthis.seq = [];\n\t\tlet visited = Vec.booleanArray(false, na);\n\n\t\tlet pos = 1;\n\t\tif (pri != null) pos = Vec.idxMin(pri) + 1;\n\n\t\tfor (let count = 0; count < na; count++)\n\t\t{\n\t\t\tthis.seq.push(pos);\n\t\t\tvisited[pos - 1] = true;\n\n\t\t\tif (count == na - 1) break; // last atom doesn't need a next\n\n\t\t\tlet adj = mol.atomAdjList(pos);\n\t\t\tlet cc = mol.atomConnComp(pos);\n\t\t\tpos = 0;\n\n\t\t\t// see if there is an un-visited neighbour\n\t\t\tfor (let n = 0; n < adj.length; n++) if (!visited[adj[n] - 1])\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = adj[n]; break;}\n\t\t\t\tif (pos == 0 || pri[adj[n] - 1] < pri[pos - 1]) pos = adj[n];\n\t\t\t}\n\t\t\tif (pos > 0) continue;\n\n\t\t\t// see if there is an un-visited atom in the same component\n\t\t\tfor (let n = 1; n <= na; n++) if (!visited[n - 1] && mol.atomConnComp(n) == cc)\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = n; break;}\n\t\t\t\tif (pos == 0 || pri[n - 1] < pri[pos - 1]) pos = n;\n\t\t\t}\n\t\t\tif (pos > 0) continue;\n\n\t\t\t// grab the next un-visited atom\n\t\t\tfor (let n = 1; n <= na; n++) if (!visited[n - 1])\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = n; break;}\n\t\t\t\tif (pos == 0 || pri[n - 1] < pri[pos - 1]) pos = n;\n\t\t\t}\n\n\t\t\tif (pos == 0) throw 'Walk sequence failed.';\n\t\t}\n\t}\n\n\t// walks through the established sequence, and marks up bonds that do not follow the logical sequence; these need to be\n\t// assigned a connection number, between each of the atoms\n\tprivate findLinks():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, pri = this.pri, seq = this.seq;\n\t\tthis.link = [];\n\t\tthis.conn = [];\n\t\tfor (let n = 0; n < na; n++) {this.link.push([]); this.conn.push([]);}\n\n\t\tlet invseq = Vec.numberArray(0, na);\n\t\tfor (let n = 0; n < na; n++) invseq[seq[n] - 1] = n;\n\n\t\tlet inPlay = Vec.numberArray(-1, na + 1); // true if number is currently reserved for reconnection\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tlet prev = n > 0 ? seq[n - 1] : 0;\n\t\t\tlet cur = seq[n];\n\t\t\tlet next = n < na - 1 ? seq[n + 1] : 0;\n\n\t\t\tfor (let i = 1; i <= na; i++) if (inPlay[i] >= 0 && n > inPlay[i]) inPlay[i] = -1;\n\n\t\t\tlet adj = mol.atomAdjList(cur);\n\n\t\t\t// if we're using priorities, then the adjacency list needs to be sorted\n\t\t\tif (pri != null) for (let p = 0; p < adj.length - 1;)\n\t\t\t{\n\t\t\t\tif (invseq[adj[p] - 1] > invseq[adj[p + 1] - 1])\n\t\t\t\t{\n\t\t\t\t\tVec.swap(adj, p, p + 1);\n\t\t\t\t\tif (p > 0) p--;\n\t\t\t\t}\n\t\t\t\telse p++;\n\t\t\t}\n\n\t\t\t// generate all the obligatory links\n\t\t\tfor (let i = 0; i < adj.length; i++)\n\t\t\t{\n\t\t\t\tif (adj[i] == prev || adj[i] == next) continue; // these are on-sequence, so no need to connect\n\t\t\t\tlet nbr = adj[i];\n\t\t\t\tif (invseq[cur - 1] > invseq[nbr - 1]) continue; // avoid duplicates\n\n\t\t\t\tlet num = -1;\n\t\t\t\tfor (let j = 1; j <= na; j++) if (inPlay[j] < 0)\n\t\t\t\t{\n\t\t\t\t\tnum = j;\n\t\t\t\t\tinPlay[j] = Math.max(invseq[cur - 1], invseq[nbr - 1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.link[cur - 1].push(num);\n\t\t\t\tthis.conn[cur - 1].push(nbr);\n\n\t\t\t\tthis.link[nbr - 1].push(num);\n\t\t\t\tthis.conn[nbr - 1].push(cur);\n\t\t\t}\n\t\t}\n\t}\n\n\t// builds the SMILES string from the precomputed data\n\tprivate assemble():string\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, seq = this.seq, link = this.link, conn = this.conn;\n\n\t\tlet smiles = '';\n\n\t\tconst NON_ESCAPED = ['C', 'N', 'O', 'P', 'S'];\n\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tlet prev = n > 0 ? seq[n - 1] : 0, cur = seq[n];\n\t\t\tlet bidx = prev > 0 ? mol.findBond(prev, cur) : 0;\n\t\t\tif (prev > 0 && bidx == 0) smiles += '.';\n\t\t\tif (bidx > 0)\n\t\t\t{\n\t\t\t\tlet bo = mol.bondOrder(bidx);\n\t\t\t\tif (bo == 2) smiles += '=';\n\t\t\t\telse if (bo == 3) smiles += '#';\n\t\t\t}\n\n\t\t\tlet el = mol.atomElement(cur);\n\t\t\tif (Chemistry.ELEMENTS.indexOf(el) < 0) el = '*';\n\t\t\tlet chg = mol.atomCharge(cur);\n\t\t\tif (NON_ESCAPED.indexOf(el) >= 0 && chg == 0)\n\t\t\t{\n\t\t\t\tsmiles += el;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsmiles += '[' + el;\n\t\t\t\tif (chg > 0) smiles += '+' + chg;\n\t\t\t\tif (chg < 0) smiles += chg;\n\t\t\t\tsmiles += ']';\n\t\t\t}\n\n\t\t\tlet num = link[cur - 1];\n\t\t\tif (num != null) for (let i = 0; i < num.length; i++)\n\t\t\t{\n\t\t\t\tbidx = mol.findBond(cur, conn[cur - 1][i]);\n\t\t\t\tlet bo = mol.bondOrder(bidx);\n\t\t\t\tif (bo == 2) smiles += '=';\n\t\t\t\telse if (bo == 3) smiles += '#';\n\n\t\t\t\tif (num[i] < 10) smiles += num[i];\n\t\t\t\telse smiles += '%' + num[i];\n\t\t\t}\n\t\t}\n\n\t\treturn smiles;\n\t}\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {deepClone, findNode, findNodes, nodeText} from '../util/util';\nimport {XML} from '../util/XML';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from './MoleculeStream';\n\n/*\n\tSerialisation and deserialisation utilities for the DataSheet object.\n\n\tFormat handling is done via the XML class, which by default wraps the internal browser DOM. This is unfortunately not implemented\n\ton certain JavaScript engines, like basic NodeJS or web-worker: see the notes in that class for how to plugin a replacement.\n\n\tNote that the DataSheet class has a JSON property (.data) that contains all the content. This can be used as a quick serialisation\n\toption when persistence is not required (e.g. sending a datasheet to a web-worker or RPC service). \n*/\n\nexport class DataSheetStream\n{\n\t// static method: reads in a string that is presumed to XML, and converts it to a datasheet, which is returned; returns null if\n\t// something went wrong\n\tpublic static readXML(strXML:string):DataSheet\n\t{\n\t\tlet xmlDoc:Document;\n\t\tif (XML.customParser)\n\t\t\txmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n\t\telse\n\t\t\txmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n\t\tif (xmlDoc == null) return null;\n\t\tlet root = xmlDoc.documentElement;\n\t\tif (root == null) return null;\n\n\t\tlet ds = new DataSheet();\n\n\t\t// overview\n\t\tlet summary = findNode(root, 'Summary');\n\t\tif (summary == null) return null;\n\t\tds.title = nodeText(findNode(summary, 'Title'));\n\t\tds.description = nodeText(findNode(summary, 'Description'));\n\n\t\t// extensions\n\t\tlet extRoot = findNode(root, 'Extension');\n\t\tif (extRoot != null)\n\t\t{\n\t\t\t//let extList=goog.dom.xml.selectNodes(extRoot,'Ext');\n\t\t\tlet extList = findNodes(extRoot, 'Ext');\n\t\t\tfor (let n = 0; n < extList.length; n++)\n\t\t\t{\n\t\t\t\tlet ext = extList[n];\n\t\t\t\t//ds.appendExtension(ext.attributes.name.value,ext.attributes.type.value,nodeText(ext));\n\t\t\t\tds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n\t\t\t}\n\t\t}\n\n\t\t// header: columns\n\t\tlet header = findNode(root, 'Header');\n\t\tlet numCols = parseInt(header.getAttribute('ncols'));//, numRows = parseInt(header.getAttribute('nrows'));\n\t\tlet colList = findNodes(header, 'Column');\n\t\tif (colList.length != numCols) return null;\n\t\tfor (let n = 0; n < numCols; n++)\n\t\t{\n\t\t\tlet col = colList[n];\n\t\t\tlet id = parseInt(col.getAttribute('id'));\n\t\t\tif (id != n + 1) return null;\n\t\t\tds.appendColumn(col.getAttribute('name'), col.getAttribute('type') as DataSheetColumn, nodeText(col));\n\t\t}\n\n\t\t// rows\n\t\tlet rowidx = 0;\n\t\tfor (let row of findNodes(findNode(root, 'Content'), 'Row'))\n\t\t{\n\t\t\tif (parseInt(row.getAttribute('id')) != rowidx + 1) return null;\n\n\t\t\tds.appendRow();\n\n\t\t\tfor (let col of findNodes(row, 'Cell'))\n\t\t\t{\n\t\t\t\tlet colidx = parseInt(col.getAttribute('id')) - 1;\n\t\t\t\tlet ct = ds.colType(colidx), val = nodeText(col);\n\n\t\t\t\tif (val == '') {}\n\t\t\t\telse if (ct == DataSheetColumn.Molecule) ds.setObject(rowidx, colidx, val);\n\t\t\t\telse if (ct == DataSheetColumn.String) ds.setString(rowidx, colidx, val);\n\t\t\t\telse if (ct == DataSheetColumn.Real) ds.setReal(rowidx, colidx, parseFloat(val));\n\t\t\t\telse if (ct == DataSheetColumn.Integer) ds.setInteger(rowidx, colidx, parseInt(val));\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n\t\t\t\telse if (ct == DataSheetColumn.Extend) ds.setExtend(rowidx, colidx, val);\n\n\t\t\t\tcol = col.nextElementSibling;\n\t\t\t\tcolidx++;\n\t\t\t}\n\n\t\t\trow = row.nextElementSibling;\n\t\t\trowidx++;\n\t\t}\n\n\t\treturn ds;\n\t}\n\n\t// instantiate with a JSON object, which is basically the title, description, columns, rows & extensions\n\tpublic static readJSON(json:Record<string, any>):DataSheet\n\t{\n\t\tif (!json.colData || !json.rowData) throw 'Not a JSON-formatted datasheet.';\n\t\treturn new DataSheet(deepClone(json));\n\t}\n\n\t// static method: converts a datasheet into an XML-formatted string\n\tpublic static writeXML(ds:DataSheet):string\n\t{\n\t\t//let xml = new DOMParser().parseFromString('<DataSheet/>', 'text/xml');\n\t\tlet xml:Document;\n\t\tif (XML.customParser)\n\t\t\txml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n\t\telse\n\t\t\txml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n\n\t\t// summary area\n\t\tlet summary = xml.createElement('Summary');\n\t\txml.documentElement.appendChild(summary);\n\t\tlet title = xml.createElement('Title'), descr = xml.createElement('Description');\n\t\tsummary.appendChild(title); title.appendChild(xml.createTextNode(ds.title));\n\t\tsummary.appendChild(descr); descr.appendChild(xml.createCDATASection(ds.description));\n\n\t\t// extras\n\t\tlet extension = xml.createElement('Extension');\n\t\txml.documentElement.appendChild(extension);\n\t\tfor (let n = 0; n < ds.numExtensions; n++)\n\t\t{\n\t\t\tlet ext = xml.createElement('Ext');\n\t\t\textension.appendChild(ext);\n\t\t\text.setAttribute('name', ds.getExtName(n));\n\t\t\text.setAttribute('type', ds.getExtType(n));\n\t\t\text.appendChild(xml.createCDATASection(ds.getExtData(n)));\n\t\t}\n\n\t\t// columns\n\t\tlet header = xml.createElement('Header');\n\t\txml.documentElement.appendChild(header);\n\t\theader.setAttribute('nrows', ds.numRows.toString());\n\t\theader.setAttribute('ncols', ds.numCols.toString());\n\t\tfor (let n = 0; n < ds.numCols; n++)\n\t\t{\n\t\t\tlet column = xml.createElement('Column');\n\t\t\theader.appendChild(column);\n\t\t\tcolumn.setAttribute('id', (n + 1).toString());\n\t\t\tcolumn.setAttribute('name', ds.colName(n));\n\t\t\tcolumn.setAttribute('type', ds.colType(n));\n\t\t\tcolumn.appendChild(xml.createTextNode(ds.colDescr(n)));\n\t\t}\n\n\t\t// rows\n\t\tlet content = xml.createElement('Content');\n\t\txml.documentElement.appendChild(content);\n\t\tfor (let r = 0; r < ds.numRows; r++)\n\t\t{\n\t\t\tlet row = xml.createElement('Row');\n\t\t\trow.setAttribute('id', (r + 1).toString());\n\t\t\tcontent.appendChild(row);\n\n\t\t\tfor (let c = 0; c < ds.numCols; c++)\n\t\t\t{\n\t\t\t\tlet cell = xml.createElement('Cell');\n\t\t\t\tcell.setAttribute('id', (c + 1).toString());\n\t\t\t\trow.appendChild(cell);\n\t\t\t\tlet ct = ds.colType(c);\n\n\t\t\t\tlet txtNode:Node = null;\n\t\t\t\tif (ds.isNull(r, c)) {}\n\t\t\t\telse if (ct == DataSheetColumn.Molecule)\n\t\t\t\t{\n\t\t\t\t\tlet obj = ds.getObject(r, c);\n\t\t\t\t\tif (obj instanceof Molecule) obj = MoleculeStream.writeNative(obj);\n\t\t\t\t\ttxtNode = xml.createCDATASection(obj as string);\n\t\t\t\t}\n\t\t\t\telse if (ct == DataSheetColumn.String) txtNode = xml.createCDATASection(ds.getString(r, c));\n\t\t\t\telse if (ct == DataSheetColumn.Real) txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Integer) txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Extend) txtNode = xml.createCDATASection(ds.getExtend(r, c));\n\n\t\t\t\tif (txtNode != null) cell.appendChild(txtNode);\n\t\t\t}\n\t\t}\n\n\t\tif (XML.customSerial)\n\t\t\treturn new XML.customSerial().serializeToString(xml.documentElement);\n\t\telse\n\t\t\treturn new XMLSerializer().serializeToString(xml.documentElement);\n\t}\n\n\t// make a serialisation-ready JSON object with the datasheet content of interest\n\tpublic static writeJSON(ds:DataSheet):any\n\t{\n\t\tlet data = (ds as any).data; // bogarting private member\n\n\t\tlet nrow = ds.numRows, ncol = ds.numCols;\n\t\tlet rowData:any[][] = new Array(nrow);\n\t\tfor (let n = 0; n < nrow; n++) rowData[n] = new Array(ncol);\n\t\tfor (let c = 0; c < ncol; c++)\n\t\t{\n\t\t\tlet doConvert = ds.colType(c) == DataSheetColumn.Molecule;\n\t\t\tfor (let r = 0; r < nrow; r++)\n\t\t\t{\n\t\t\t\tlet val = data.rowData[r][c];\n\t\t\t\tif (val != null && doConvert) val = val.toString(); // turns {mol-or-string} into {string}\n\t\t\t\trowData[r][c] = val;\n\t\t\t}\n\t\t}\n\n\t\tlet json =\n\t\t{\n\t\t\ttitle: data.title,\n\t\t\tdescription: data.description,\n\t\t\tcolData: deepClone(data.colData),\n\t\t\trowData: rowData,\n\t\t\textData: deepClone(data.extData),\n\t\t};\n\t\treturn json;\n\t}\n\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CircularFingerprints} from '../calc/CircularFingerprints';\nimport {Theme} from '../util/Theme';\nimport {DEGRAD, escapeHTML, norm_xy, readTextURL} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\nimport dsRings from '@reswmk/data/templates/rings.ds';\nimport dsTermGrp from '@reswmk/data/templates/termgrp.ds';\nimport dsFuncGrp from '@reswmk/data/templates/funcgrp.ds';\nimport dsProtGrp from '@reswmk/data/templates/protgrp.ds';\nimport dsNonPlRings from '@reswmk/data/templates/nonplrings.ds';\nimport dsLargeRings from '@reswmk/data/templates/largerings.ds';\nimport dsCrownEthers from '@reswmk/data/templates/crownethers.ds';\nimport dsLigMonodent from '@reswmk/data/templates/ligmonodent.ds';\nimport dsLigBident from '@reswmk/data/templates/ligbident.ds';\nimport dsLigTrident from '@reswmk/data/templates/ligtrident.ds';\nimport dsLigMultident from '@reswmk/data/templates/ligmultident.ds';\nimport dsCageCmplx from '@reswmk/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '@reswmk/data/templates/aminoacids.ds';\nimport dsBiomolecules from '@reswmk/data/templates/biomolecules.ds';\nimport dsSaccharides from '@reswmk/data/templates/saccharides.ds';\n\nconst TEMPLATE_SOURCE:Record<string, string> =\n{\n\t'rings': dsRings,\n\t'termgrp': dsTermGrp,\n\t'funcgrp': dsFuncGrp,\n\t'protgrp': dsProtGrp,\n\t'nonplrings': dsNonPlRings,\n\t'largerings': dsLargeRings,\n\t'crownethers': dsCrownEthers,\n\t'ligmonodent': dsLigMonodent,\n\t'ligbident': dsLigBident,\n\t'ligtrident': dsLigTrident,\n\t'ligmultident': dsLigMultident,\n\t'cagecmplx': dsCageCmplx,\n\t'aminoacids': dsAminoAcids,\n\t'biomolecules': dsBiomolecules,\n\t'saccharides': dsSaccharides,\n};\n\n/*\n\tAbbreviation container: a singleton list of inline abbreviations which are initially bootstrapped from the available templates.\n*/\n\nexport interface AbbrevContainerFrag\n{\n\tname:string;\n\tfrag:Molecule;\n\tnameHTML:string; // label in HTML format, with sub & superscripts\n\tnameSearch:string; // label in lower case with formatting characters stripped\n}\n\nexport class AbbrevContainer\n{\n\tpublic static main:AbbrevContainer = null;\n\n\tprivate abbrevs:AbbrevContainerFrag[] = [];\n\n\t// ----------------- static methods -----------------\n\n\tpublic static getTemplateKeys():string[] {return Object.keys(TEMPLATE_SOURCE);}\n\tpublic static getTemplateData(key:string):string {return TEMPLATE_SOURCE[key];}\n\n\t// needs to be called once per lifecycle, in order to ensure that the necessary resources are loaded\n\tpublic static needsSetup():boolean {return !this.main;}\n\tpublic static async setupData():Promise<void>\n\t{\n\t\tif (this.main) return;\n\n\t\tthis.main = new AbbrevContainer();\n\n\t\tfor (let key of this.getTemplateKeys())\n\t\t{\n\t\t\tlet dsstr = this.getTemplateData(key);\n\t\t\tlet ds = DataSheetStream.readXML(dsstr);\n\n\t\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule), colAbbrev = ds.findColByName('Abbrev', DataSheetColumn.String);\n\t\t\tif (colMol < 0 || colAbbrev < 0) continue;\n\t\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t\t{\n\t\t\t\tlet frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n\t\t\t\tif (!frag || !name) continue;\n\n\t\t\t\tlet attcount = 0, firstConn = 0;\n\t\t\t\tfor (let i = 1; i <= frag.numAtoms; i++) if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT)\n\t\t\t\t{\n\t\t\t\t\tif (firstConn == 0) firstConn = i;\n\t\t\t\t\tfrag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n\t\t\t\t\tattcount++;\n\t\t\t\t}\n\t\t\t\tif (attcount != 1) continue; // (don't want abbreviations with two attachment points; they are sort of valid, but not appropriate for here)\n\t\t\t\tif (firstConn > 1) frag.swapAtoms(1, firstConn);\n\t\t\t\tthis.main.submitAbbreviation(name, frag);\n\t\t\t}\n\t\t}\n\t}\n\n\t// returns a shallow copy of the abbreviations (because the original list can grow in the meanwhile)\n\tpublic getAbbrevs():AbbrevContainerFrag[]\n\t{\n\t\treturn this.abbrevs.slice(0);\n\t}\n\n\t// adds an abbreviation explicitly to the collection, if not there already; returns control immediately (background thread)\n\tpublic submitAbbreviation(name:string, infrag:Molecule, promote:boolean = false):void\n\t{\n\t\tlet frag = infrag.clone();\n\t\tthis.submitFragment(name, frag, promote);\n\t}\n\n\t// pulls apart the contents of a molecule, looking for abbreviations; anything that is new gets added to the background; this function returns control immediately\n\tpublic submitMolecule(inmol:Molecule, promote:boolean = false):void\n\t{\n\t\tlet mol = inmol.clone();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet frag = MolUtil.getAbbrev(mol, n);\n\t\t\tif (!frag) continue;\n\t\t\tthis.submitFragment(mol.atomElement(n), frag, promote);\n\t\t}\n\t}\n\n\t// given that an atom has been turned into an abbreviation, searches through the list to see if the fragment structure matches anything; if so, borrows the name\n\t// and modifies the molecule accordingly\n\tpublic substituteAbbrevName(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet frag = MolUtil.getAbbrev(mol, atom);\n\t\tif (!frag) return false;\n\n\t\tlet fragExp = MolUtil.expandedAbbrevs(frag);\n\t\tlet fragMF = MolUtil.molecularFormula(fragExp);\n\t\tlet fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n\n\t\tfor (let abbrev of this.abbrevs) if (abbrev.frag.numAtoms == frag.numAtoms)\n\t\t{\n\t\t\tlet match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n\t\t\tif (!match)\n\t\t\t{\n\t\t\t\tlet afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n\t\t\t\tif (fragMF == MolUtil.molecularFormula(afragExp))\n\t\t\t\t{\n\t\t\t\t\tlet afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n\t\t\t\t\tif (Vec.equals(fragFP, afragFP)) match = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match)\n\t\t\t{\n\t\t\t\tmol.setAtomElement(atom, abbrev.name);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// considers the abbrevation for inclusion in the list; it is assumed that this is being called in a background thread, and also that 'frag' has already been\n\t// copied and is safely owned by this instance\n\tprivate submitFragment(name:string, frag:Molecule, promote:boolean):void\n\t{\n\t\tif (name == '?') return; // no thanks!\n\n\t\t// rotate the fragment so that the attachment (atom 1) is oriented \"west\"\n\t\tlet vx = 0, vy = 0;\n\t\tlet adj = frag.atomAdjList(1);\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tvx += frag.atomX(a) - frag.atomX(1);\n\t\t\tvy += frag.atomY(a) - frag.atomY(1);\n\t\t}\n\t\tif (adj.length > 1) {let inv = 1.0 / adj.length; vx *= inv; vy *= inv;}\n\t\tif (norm_xy(vx, vy) > 0.1 * 0.1)\n\t\t{\n\t\t\tlet theta = Math.atan2(vy, vx);\n\t\t\tif (Math.abs(theta) > 2 * DEGRAD) CoordUtil.rotateMolecule(frag, -theta);\n\t\t}\n\n\t\tlet hit = -1;\n\t\tfor (let n = 0; n < this.abbrevs.length; n++)\n\t\t{\n\t\t\tlet a = this.abbrevs[n];\n\t\t\tif (a.name != name) continue;\n\t\t\t// Q: what to do if same name but different thing? esp. if just a different orientation...\n\t\t\t//if a.frag.compareTo(frag) == 0 || CoordUtil.sketchMappable(mol1:frag, mol2:a.frag) {hit = n; break}\n\t\t\thit = n;\n\t\t\tbreak;\n\t\t}\n\n\t\tlet [html, search] = this.formatAbbrevLabel(name);\n\t\tlet abv:AbbrevContainerFrag = {name, frag, nameHTML: html, nameSearch: search};\n\t\tif (hit < 0)\n\t\t{\n\t\t\tif (promote) this.abbrevs.unshift(abv); else this.abbrevs.push(abv);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (promote && hit > 0)\n\t\t\t{\n\t\t\t\tthis.abbrevs.splice(hit, 1);\n\t\t\t\tthis.abbrevs.unshift(abv);\n\t\t\t}\n\t\t\telse this.abbrevs[hit] = abv;\n\t\t}\n\t}\n\n\t// prepare the HTML & searchable forms of an abbreviation label\n\tprivate formatAbbrevLabel(name:string):[string, string]\n\t{\n\t\tlet html = '', search = '';\n\n\t\tlet append = (bit:string, tag:string):void =>\n\t\t{\n\t\t\tif (tag) html += '<' + tag + '>';\n\t\t\thtml += escapeHTML(bit);\n\t\t\tsearch += bit;\n\t\t\tif (tag) html += '</' + tag + '>';\n\t\t};\n\n\t\tfor (let bit of name.split('|'))\n\t\t{\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tlet match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n\t\t\t\tif (!match) break;\n\t\t\t\tlet pre = match[1], mid = match[2], post = match[3];\n\t\t\t\tappend(pre, null);\n\t\t\t\tif (mid.startsWith('^')) append(mid.substring(1), 'sup'); else append(mid, 'sub');\n\t\t\t\tbit = post;\n\t\t\t}\n\t\t\tappend(bit, null);\n\t\t}\n\n\t\treturn [html, search.toLowerCase()];\n\t}\n}\n\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable key-spacing */\n\n/*\n\tProvides fixed constants for dataformats.\n\n\t(Note: presence in this file does not imply that they are all implemented yet)\n*/\n\nexport class FormatList\n{\n\tpublic static FMT_NATIVE = 'native'; // SketchEl molecule format\n\tpublic static FMT_XMLDS = 'xmlds'; // XML datasheet format\n\tpublic static FMT_MDLMOL = 'mdlmol'; // MDL MOLfile (slightly lossy)\n\tpublic static FMT_MDLSDF = 'mdlsdf'; // MDL SDfile (very lossy)\n\tpublic static FMT_MDLRDF = 'mdlrdf'; // MDL RDfile (very lossy)\n\tpublic static FMT_MDLRXN = 'mdlrxn'; // MDL RXNfile (extremely lossy)\n\n\tpublic static GFX_PNG = 'png'; // raster graphics (single image)\n\tpublic static GFX_PNGZIP = 'pngzip'; // zip file containing multiple PNG images\n\tpublic static GFX_SVG = 'svg'; // scalable vector graphics (single diagram)\n\tpublic static GFX_SVGZIP = 'svgzip'; // zip file containing multiple SVG diagrams\n\tpublic static GFX_PDF = 'pdf'; // portable document format (single diagram)\n\tpublic static GFX_PDFZIP = 'pdfzip'; // zip file containing multiple PDF diagrams\n\tpublic static GFX_EPS = 'eps'; // encapsulated postscript (single diagram)\n\tpublic static GFX_HTML = 'html'; // HTML file with embedded SVG diagrams\n\tpublic static GFX_OPENDOC_ODG = 'odg'; // OpenDocument: graphic (single)\n\tpublic static GFX_OPENDOC_ODT = 'odt'; // OpenDocument: text\n\tpublic static GFX_OPENDOC_ODS = 'ods'; // OpenDocument: spreadsheet\n\tpublic static GFX_OOXML_DOCX = 'docx'; // Microsoft Word XML\n\tpublic static GFX_OOXML_XLSX = 'xlsx'; // Microsoft Excel XML\n\n\tpublic static FORMAT_DESCR:Record<string, string> =\n\t{\n\t\t'native':\t'SketchEl Molecule',\n\t\t'xmlds':\t'DataSheet XML',\n\t\t'mdlmol':\t'MDL MOL (single molecule)',\n\t\t'mdlsdf':\t'MDL SDF (molecules + data)',\n\t\t'mdlrdf':\t'MDL RDF (reactions + data)',\n\t\t'mdlrxn':\t'MDL RXN (single reaction)',\n\n\t\t'png':\t\t'PNG image (raster)',\n\t\t'pngzip':\t'ZIP (multiple PNG files)',\n\t\t'svg':\t\t'SVG picture (vector)',\n\t\t'svgzip':\t'ZIP (multiple SVG files)',\n\t\t'pdf':\t\t'PDF diagram (vector)',\n\t\t'pdfzip':\t'ZIP (multiple PDF files)',\n\t\t'eps':\t\t'Encapsulated PostScript (vector)',\n\t\t'html':\t\t'HTML with embedded SVG',\n\t\t'odg':\t\t'OpenDocument Graphic',\n\t\t'odt':\t\t'OpenDocument Text',\n\t\t'ods':\t\t'OpenDocument SpreadSheet',\n\t\t'docx':\t\t'Microsoft Word',\n\t\t'xlsx':\t\t'Microsoft Excel'\n\t};\n\tpublic static FORMAT_EXTN:Record<string, string> =\n\t{\n\t\t'native':\t'.el',\n\t\t'xmlds':\t'.ds',\n\t\t'mdlmol':\t'.mol',\n\t\t'mdlsdf':\t'.sdf',\n\t\t'mdlrdf':\t'.rdf',\n\t\t'mdlrxn':\t'.rxn',\n\t\t'png':\t\t'.png',\n\t\t'pngzip':\t'_png.zip',\n\t\t'svg':\t\t'.svg',\n\t\t'svgzip':\t'_svg.zip',\n\t\t'pdf':\t\t'.pdf',\n\t\t'pdfzip':\t'_pdf.zip',\n\t\t'eps':\t\t'.eps',\n\t\t'html':\t\t'.html',\n\t\t'odg':\t\t'.odg',\n\t\t'odt':\t\t'.odt',\n\t\t'ods':\t\t'.ods',\n\t\t'docx':\t\t'.docx',\n\t\t'xlsx':\t\t'.xlsx'\n\t};\n\tpublic static FORMAT_MIMETYPE:Record<string, string> =\n\t{\n\t\t'native':\t'chemical/x-sketchel',\n\t\t'xmlds':\t'chemical/x-datasheet',\n\t\t'mdlmol':\t'chemical/x-mdl-molfile',\n\t\t'mdlsdf':\t'chemical/x-mdl-sdfile',\n\t\t'mdlrdf':\t'chemical/x-mdl-rdfile',\n\t\t'mdlrxn':\t'chemical/x-mdl-rxnfile',\n\t\t'png':\t\t'image/png',\n\t\t'pngzip':\t'application/zip',\n\t\t'svg':\t\t'image/png',\n\t\t'svgzip':\t'application/zip',\n\t\t'pdf':\t\t'application/pdf',\n\t\t'pdfzip':\t'application/zip',\n\t\t'eps':\t\t'image/eps',\n\t\t'html':\t\t'text/html',\n\t\t'odg':\t\t'application/vnd.oasis.opendocument.graphics',\n\t\t'odt':\t\t'application/vnd.oasis.opendocument.text',\n\t\t'ods':\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t'docx':\t\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t'xlsx':\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t};\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Theme} from '../util/Theme';\nimport {readTextURL} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tManages a tree of ontology (URI) terms, which is an extremely minimalist subset of the functionality of formats\n\tlike OWL. Each term belongs to a single hierarchy and its only property is a label. Content is loaded out of concise\n\ttext files (.onto) that are easy to curate manually.\n\n\tThe class should generally be used as a singleton, with individual items of content loaded into it permanently.\n\n\tThe source content consists of lines of the following form:\n\n\t\t{indentation} {uri} {label}\n\n\twhere {indentation} consists of zero-or-more dashes; the order and indentation level implies the tree structure. The {uri}\n\tis fully expanded, and by definition contains no whitespace. The {label} consumes the remainder of the line, and may contain\n\tany amount of spaces. Blank lines are ignored and comments start with #.\n\n\te.g.\n\t\t# arbitrary ontology\n\t\thttp://thing.com/something#THI_001 thing\n\t\t- http://thing.com/something#THI_002 subset of thing\n\t\t- - http://thing.com/something#THI_003 different kind of thing\n\n\tDuplicate terms are allowed, except for the root branches, which are collapsed into one. Loading an ontology source file\n\tmore than once is not recommended.\n*/\n\nlet globalInstance:OntologyTree = null;\n\n/*const ONTOLOGY_FILES =\n[\n\t'units'\n];*/\n\nimport ontoUnits from '@reswmk/data/ontology/units.onto';\n\nconst ONTOLOGY_SOURCE:Record<string, string> =\n{\n\t'units': ontoUnits,\n};\n\nexport interface OntologyTreeTerm\n{\n\turi:string;\n\tlabel:string;\n\tparent:OntologyTreeTerm;\n\tchildren:OntologyTreeTerm[];\n\tdepth:number;\n}\n\nexport class OntologyTree\n{\n\tpublic static get main():OntologyTree {return globalInstance;}\n\n\tprivate roots:OntologyTreeTerm[] = [];\n\tprivate mapTerms = new Map<string, OntologyTreeTerm[]>(); // uri-to-term(s)\n\n\tprivate alreadyLoaded = new Set<string>(); // prevent double-loading files\n\n\t// ----------------- static methods -----------------\n\n\tpublic static getOntologyKeys():string[] {return Object.keys(ONTOLOGY_SOURCE);}\n\tpublic static getOntologyData(key:string):string {return ONTOLOGY_SOURCE[key];}\n\n\t// ------------------ public methods --------------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// call this at least once during the early lifecycle: makes sure the default ontology files are loaded\n\tpublic static init():void\n\t{\n\t\tif (globalInstance) return;\n\t\tglobalInstance = new OntologyTree();\n\n\t\tfor (let key of this.getOntologyKeys())\n\t\t{\n\t\t\tglobalInstance.loadFromString(key, this.getOntologyData(key));\n\t\t}\n\t}\n\n\t// return a list of root branches; note that the list is not cloned at all\n\tpublic getRoots():OntologyTreeTerm[]\n\t{\n\t\treturn this.roots;\n\t}\n\n\t// queries the existence of a term: when returning a branch, not that it is not cloned\n\tpublic hasTerm(uri:string):boolean {return this.mapTerms.has(uri);}\n\tpublic getBranch(uri:string):OntologyTreeTerm[]\n\t{\n\t\treturn this.mapTerms.get(uri);\n\t}\n\n\t// fetches a branch, populating it into a flattened list that is ordered according to the tree hierarchy; this is a convenient\n\t// form for certain use cases, especially interactivity; the container array can be treated as a shallow copy\n\tpublic getBranchList(root:string | OntologyTreeTerm):OntologyTreeTerm[]\n\t{\n\t\tif (typeof root == 'string')\n\t\t{\n\t\t\tlet look = this.mapTerms.get(root);\n\t\t\tif (!look) throw `Unknown branch URI: ${root}`;\n\t\t\tif (look.length > 1) throw `Ambiguous branch URI occurs more than once: ${root}`;\n\t\t\troot = look[0];\n\t\t}\n\n\t\tlet list:OntologyTreeTerm[] = [];\n\t\tlet accumulate = (branch:OntologyTreeTerm):void =>\n\t\t{\n\t\t\tlist.push(branch);\n\t\t\tfor (let child of Vec.safeArray(branch.children)) accumulate(child);\n\t\t};\n\t\taccumulate(root as OntologyTreeTerm);\n\t\treturn list;\n\t}\n\n\t// fetches a file and loads it up; throws an exception if it didn't work\n\t/*public async loadFromURL(url:string):Promise<void>\n\t{\n\t\tif (this.alreadyLoaded.has(url)) return;\n\t\tthis.alreadyLoaded.add(url);\n\n\t\tlet text = await readTextURL(url);\n\t\tif (!text) throw `Resource not found: ${url}`;\n\t\tthis.loadContent(text);\n\t}*/\n\tpublic loadFromString(key:string, text:string):void\n\t{\n\t\tif (this.alreadyLoaded.has(key)) return;\n\t\tthis.alreadyLoaded.add(key);\n\t\tthis.loadContent(text);\n\t}\n\n\t// loads up a file containing ontology content (see comment at top); throws an exception if anything is invalid\n\tpublic loadContent(text:string):void\n\t{\n\t\tlet termList:OntologyTreeTerm[] = [];\n\t\tlet pos = 0;\n\t\tfor (let line of text.split(/\\n/))\n\t\t{\n\t\t\tpos++;\n\t\t\tline = line.trim();\n\t\t\tif (!line || line.startsWith('#')) continue;\n\n\t\t\tlet idx = line.indexOf('http');\n\t\t\tif (idx < 0) throw `Line ${pos} invalid, no URI term: ${line}`;\n\t\t\tlet depth = 0;\n\t\t\tfor (let n = 0; n < idx; n++) if (line.charAt(n) == '-') depth++;\n\n\t\t\tlet uri = line.substring(idx);\n\t\t\tidx = uri.indexOf(' ');\n\t\t\tif (idx < 0) throw `Line ${pos} invalid, no label: ${line}`;\n\t\t\tlet label = uri.substring(idx + 1);\n\t\t\turi = uri.substring(0, idx);\n\n\t\t\t// if this is a root term, and it already exists, borrow it\n\t\t\tlet term:OntologyTreeTerm = null;\n\t\t\tif (depth == 0) term = this.roots.find((look) => look.uri == uri);\n\n\t\t\tif (!term)\n\t\t\t{\n\t\t\t\tterm = {uri, label, 'parent': null, 'children': [], depth};\n\n\t\t\t\tif (depth == 0) this.roots.push(term);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (let n = termList.length - 1; n >= 0; n--) if (termList[n].depth == depth - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tterm.parent = termList[n];\n\t\t\t\t\t\ttermList[n].children.push(term);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!term.parent) throw `Line ${pos} invalid hierarchy, no parent found`;\n\t\t\t\t}\n\n\t\t\t\tlet list = this.mapTerms.get(uri);\n\t\t\t\tif (list) list.push(term); else this.mapTerms.set(uri, [term]);\n\t\t\t}\n\n\t\t\ttermList.push(term);\n\t\t}\n\t}\n\n\tpublic debugString(term:OntologyTreeTerm):string\n\t{\n\t\tlet lines:string[] = [];\n\t\tlet emit = (term:OntologyTreeTerm):void =>\n\t\t{\n\t\t\tlines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n\t\t\tfor (let child of term.children) emit(child);\n\t\t};\n\t\temit(term);\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ public methods --------------------\n\n}\n\n","export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {colourCode} from './util';\n\n// public theme definition: the values for these colours can be customised; they will be converted into CSS as soon as the initialisation\n// function is called (see below); the general idea is a tetrachrome: most content is monochrome (black text on white background by default),\n// with interesting content marked in the \"lowlight\" colour (turquoise), and active content in \"highlight\" (green)\nexport class Theme\n{\n\t// e.g. 'http://servername/MolSync'; the REST services hang off of this url: ${BASE_URL}/REST/...\n\tpublic static BASE_URL:string = null;\n\n\t// base for static resources that can be fetched without going through the RPC mechanism\n\tpublic static RESOURCE_URL:string = null;\n\n\t// these are open to modification\n\tpublic static foreground = 0x000000;\n\tpublic static background = 0xFFFFFF;\n\tpublic static lowlight = 0x24D0D0;\n\tpublic static lowlightEdge1 = 0x47D5D2;\n\tpublic static lowlightEdge2 = 0x008FD1;\n\tpublic static highlight = 0x00FF00;\n\tpublic static highlightEdge1 = 0x00CA59;\n\tpublic static highlightEdge2 = 0x008650;\n\tpublic static error = 0xFF0000;\n}\n\n// to be called as soon as possible from within any environment that uses WebMolKit functionality\nexport function initWebMolKit(resourcePath:string):void\n{\n\tTheme.RESOURCE_URL = resourcePath;\n\n\t// code below here assumes that DOM is defined (which isn't the case for web workers)\n\ttry {let _ = document;}\n\tcatch (e) {return;}\n\n\tif (document) installInlineCSS('main', composeMainCSS());\n}\n\n/*\n\tInline CSS: each major section of WebMolKit that needs its own CSS tags should call installCSS(..) before doing anything interesting.\n\tThe custom CSS should include some number of definitions with the prefix 'wmk-{tag}-{whatever}', where {tag} is a concise definition\n\tthat can be used to make sure that each of these CSS blocks are installed just once.\n*/\n\nlet cssTagsInstalled = new Set<string>();\nexport function hasInlineCSS(tag:string):boolean {return cssTagsInstalled.has(tag);}\n\n// makes sure a block of CSS is installed, returning true if it was added, false if it was already there\nexport function installInlineCSS(tag:string, css:string):boolean\n{\n\tif (cssTagsInstalled.has(tag)) return false;\n\n\tlet el = document.createElement('style');\n\tel.innerHTML = css;\n\tdocument.head.appendChild(el);\n\tcssTagsInstalled.add(tag);\n\treturn true;\n}\n\n// assembles top-level CSS that's available for theming that doesn't have an encapsulating class\nfunction composeMainCSS():string\n{\n\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t// NOTE: theme is only partially honoured here; need to tighten it up\n\treturn `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DOM, dom} from '../util/dom';\nimport {Box} from '../util/Geom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tTooltips: adding popovers to widgets.\n*/\n\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\n\nlet globalTooltip:Tooltip = null;\nlet globalPopWatermark = 0;\n\n// adds a well behaved tooltip to the given node (element or JQuery object)\nexport function addTooltip(parent:any, bodyHTML:string, titleHTML?:string, delay?:number):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tlet widget = dom(parent);\n\tlet tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n\n\twidget.onMouseEnter(() => tooltip.start());\n\twidget.onMouseLeave(() => tooltip.stop());\n}\n\n// variation of above where the body content is created by a callback function: use when content is expensive\nexport function addTooltipPromise(parent:any, bodyCallback:() => Promise<string>, titleHTML?:string, delay?:number):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tlet widget = dom(parent);\n\tlet tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n\ttooltip.bodyCallback = bodyCallback;\n\n\twidget.onMouseEnter(() => tooltip.start());\n\twidget.onMouseLeave(() => tooltip.stop());\n}\n\n// immediately raise a tooltip, with a position relative to a given widget\nexport function raiseToolTip(parent:any, avoid:Box, bodyHTML:string, titleHTML?:string):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tclearTooltip();\n\tglobalPopWatermark++;\n\tnew Tooltip(dom(parent), bodyHTML, titleHTML, 0).start(avoid);\n}\n\n// rudely shutdown the tooltip\nexport function clearTooltip():void\n{\n\tif (globalTooltip == null) return;\n\tglobalPopWatermark++;\n\tglobalTooltip.stop();\n}\n\nexport class Tooltip\n{\n\tpublic bodyCallback:() => Promise<string>;\n\n\tprivate watermark:number;\n\tprivate domTooltip:DOM = null;\n\n\tconstructor(private widget:DOM, private bodyHTML:string, private titleHTML:string, private delay:number)\n\t{\n\t}\n\n\t// raise the tooltip after a delay, assuming someone else hasn't bogarted it in the meanwhile\n\tpublic start(avoid?:Box)\n\t{\n\t\tthis.watermark = ++globalPopWatermark;\n\n\t\t(async () =>\n\t\t{\n\t\t\tif (this.bodyHTML == null && this.bodyCallback) this.bodyHTML = await this.bodyCallback();\n\n\t\t\twindow.setTimeout(() =>\n\t\t\t{\n\t\t\t\tif (this.watermark == globalPopWatermark) this.raise(avoid);\n\t\t\t}, this.delay);\n\t\t})();\n\t}\n\n\t// lower the tooltip, if it is still owned by this widget\n\tpublic stop()\n\t{\n\t\tif (this.domTooltip)\n\t\t{\n\t\t\tthis.domTooltip.remove();\n\t\t\tthis.domTooltip = null;\n\t\t}\n\t\t//globalPopWatermark++;\n\t\tthis.watermark = -1; // stop any raise in progress\n\t}\n\n\tpublic raise(avoid?:Box)\n\t{\n\t\tif (!this.widget.exists()) return; // 'tis gone\n\n\t\tglobalTooltip = this;\n\t\tif (this.domTooltip) return;\n\n\t\tlet pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({'visibility': 'hidden'}).appendTo(document.body);\n\n\t\t// special deal: if the parent widget has an ancestor with z-index set, then perpetuate that kludge\n\t\tlet sanity = 50;\n\t\tfor (let ancestor = this.widget; ancestor; ancestor = ancestor.parent())\n\t\t{\n\t\t\tif (--sanity == 0) break;\n\t\t\tlet zindex = parseInt(ancestor.elHTML.style.zIndex);\n\t\t\tif (zindex > 0)\n\t\t\t{\n\t\t\t\tpop.setCSS('z-index', (zindex + 1000).toString());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n\n\t\tlet hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n\n\t\tif (hasTitle) dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n\t\tif (hasTitle && hasBody) div.appendHTML('<hr/>');\n\t\tif (hasBody) dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n\n\t\t// to-do: title, if any\n\n\t\tlet winW = window.innerWidth, winH = window.innerHeight;\n\t\tconst GAP = 2;\n\t\tlet boundDiv = this.widget.el.getBoundingClientRect();\n\t\tlet wx1 = boundDiv.left, wy1 = boundDiv.top;\n\t\tlet wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n\n\t\t// if more specific positioning is requested within the widget, adjust accordingly\n\t\tif (avoid)\n\t\t{\n\t\t\twx1 += avoid.x;\n\t\t\twy1 += avoid.y;\n\t\t\twx2 = wx1 + avoid.w;\n\t\t\twy2 = wy1 + avoid.h;\n\t\t}\n\n\t\tlet setPosition = () =>\n\t\t{\n\t\t\tlet popW = pop.width(), popH = pop.height();\n\t\t\tlet posX = 0, posY = 0;\n\t\t\tif (wx1 + popW < winW) posX = wx1;\n\t\t\telse if (popW < wx2) posX = wx2 - popW;\n\t\t\tif (wy2 + GAP + popH < winH) posY = wy2 + GAP;\n\t\t\telse if (wy1 - GAP - popH > 0) posY = wy1 - GAP - popH;\n\t\t\telse posY = wy2 + GAP;\n\n\t\t\tposX += window.pageXOffset;\n\t\t\tposY += window.pageYOffset;\n\n\t\t\tpop.css({'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible'});\n\t\t};\n\n\t\tpop.css({'left': '0px', 'top': '0px'});\n\t\tsetTimeout(() => setPosition(), 1);\n\n\t\tlet checkParent = () =>\n\t\t{\n\t\t\tif (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n\t\t\t\tthis.stop();\n\t\t\telse\n\t\t\t\tsetTimeout(checkParent, 100);\n\t\t};\n\t\tsetTimeout(checkParent, 100);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {clearTooltip} from '../ui/Tooltip';\nimport {dom, DOM, domLegacy} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tDialog: base class for popup dialogs.\n*/\n\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\n\nexport class Dialog\n{\n\tprivate parent:DOM;\n\n\t// configuration parameters to modify before opening\n\tpublic minPortionWidth = 80; // percentage width of page to occupy\n\tpublic maxPortionWidth = 80; //  ...\n\tpublic maximumWidth = 0; // optional pixel-specific maximum\n\tpublic maximumHeight = 0;\n\tpublic minPortionHeight = 20; // minimum % vertical height, if too small\n\tpublic maxPortionHeight = 0; // optional % of vertical height allowed\n\tpublic topMargin = 50; // pixels to reserve along the top\n\tpublic title = 'Dialog';\n\tpublic allowScroller = true; // if true, vertical scrolling is enabled\n\tpublic zindex:number = null; // optionally the use of zindex, to ensure it goes on top (usually not necessary)\n\tpublic beenClosed = false; // will be set to true as soon as the close sequence is initiated; assumes no re-opening\n\n\t// content information that can be accessed after opening\n\tprotected domObscureBackground:DOM; // grey covering banner\n\tprotected domObscureForeground:DOM; // transparent second cover\n\tprotected domPanelBoundary:DOM; // the dialog outline itself\n\tprotected domTitle:DOM; // section that contains the title and mini-buttons\n\tprotected domTitleButtons:DOM; // table cell where the top-right buttons go\n\tprotected domBody:DOM; // the main area, for content\n\tprotected domClose:DOM; // the close button, in case anyone wants to know\n\n\tpublic callbackClose:(source?:Dialog) => void = null;\n\tpublic callbackShown:(source?:Dialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(parent:any = null)\n\t{\n\t\tthis.parent = domLegacy(parent);\n\n\t\tinstallInlineCSS('dialog', CSS_DIALOG);\n\t}\n\n\tpublic onClose(callback:(source?:Dialog) => void)\n\t{\n\t\tthis.callbackClose = callback;\n\t}\n\n\tpublic onShown(callback:(source?:Dialog) => void)\n\t{\n\t\tthis.callbackShown = callback;\n\t}\n\n\t// creates all the DOM objects and shows the dialog; details such as title should be setup before calling this\n\tpublic open():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet body = this.parent || dom(document.body);\n\t\tbody.addClass('wmk-noscroll');\n\n\t\tlet bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n\t\tbg.css({'position': 'fixed'/*, 'z-index': zindex*/});\n\t\tbg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tbg.css({'background-color': 'black', 'opacity': 0.8});\n\t\tbg.onClick(() => this.close());\n\n\t\tlet fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n\t\tfg.css({'position': 'fixed'/*, 'z-index': zindex + 1*/});\n\t\tfg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\n\t\tif (this.zindex > 0)\n\t\t{\n\t\t\tbg.setCSS('z-index', this.zindex);\n\t\t\tfg.setCSS('z-index', this.zindex + 1);\n\t\t}\n\n\t\tlet pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n\t\tpb.css({'min-width': this.minPortionWidth + '%'});\n\t\tif (this.maximumWidth > 0) pb.css({'max-width': this.maximumWidth + 'px'});\n\t\telse if (this.maxPortionWidth != null) pb.css({'max-width': this.maxPortionWidth + '%'});\n\t\tif (this.maximumHeight > 0) pb.css({'max-height': this.maximumHeight + 'px'});\n\t\telse if (this.maxPortionHeight > 0) pb.css({'max-height': this.maxPortionHeight + 'vh'});\n\n\t\tpb.css({'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black'});\n\t\tpb.css({'position': 'absolute'});\n\t\tpb.css({'left': (50 - 0.5 * this.minPortionWidth) + '%'});\n\t\tpb.css({'top': this.topMargin + 'px'});\n\t\tpb.css({'min-height': this.minPortionHeight + '%'});\n\n\t\tlet divOuter = dom('<div/>').appendTo(pb).css({'display': 'flex'});\n\t\tdivOuter.css({'flex-direction': 'column', 'align-items': 'stretch'});\n\t\tif (this.maximumHeight > 0) divOuter.css({'max-height': this.maximumHeight + 'px'});\n\t\telse if (this.maxPortionHeight > 0) divOuter.css({'max-height': this.maxPortionHeight + 'vh'});\n\t\tlet tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n\t\ttdiv.css({'flex-shrink': '0', 'flex-grow': '0'});\n\t\ttdiv.css({'margin': '0', 'padding': '0'});\n\t\ttdiv.css({'background-color': '#F0F0F0'});\n\t\ttdiv.css({'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)'});\n\t\ttdiv.css({'border-bottom': '1px solid #C0C0C0'});\n\t\ttdiv.css({'border-radius': '6px 6px 0 0'});\n\n\t\tlet bdiv = dom('<div/>').appendTo(divOuter).css({'width': '100%'});\n\t\tbdiv.css({'flex-shrink': '1', 'flex-grow': '0'});\n\t\tif (this.allowScroller) bdiv.css({'overflow-y': 'auto'});\n\n\t\tthis.domBody = dom('<div/>').appendTo(bdiv).css({'padding': '0.5em'}); // (has to be nested, otherwise runs over)\n\n\t\tlet ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n\t\tttlTable.attr({'width': '100%'});\n\n\t\tlet tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({'padding': '0.5em'});\n\t\tlet ttl = dom('<font/>').appendTo(tdTitle).css({'font-size': '1.5em', 'font-weight': '600'});\n\t\tttl.setText(this.title);\n\n\t\tlet tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({'padding': '0.5em'});\n\t\tthis.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n\t\tthis.domClose.onClick(() => this.close());\n\n\t\tthis.populate();\n\n\t\tthis.repositionSize();\n\n\t\t/*bg.show();\n\t\tpb.show();*/\n\n\t\tif (this.callbackShown) this.callbackShown(this); // currently there's no delay so it's fine to just call it\n\t}\n\n\t// closes and hides the dialog\n\tpublic close():void\n\t{\n\t\tthis.beenClosed = true;\n\n\t\tclearTooltip();\n\n\t\tthis.domObscureBackground.remove();\n\t\tthis.domObscureForeground.remove();\n\n\t\tlet body = this.parent || dom(document.body);\n\t\tbody.removeClass('wmk-noscroll');\n\n\t\tif (this.callbackClose) this.callbackClose(this);\n\t}\n\n\t// sizes may have changed, so adjust if necessary\n\tpublic bump():void\n\t{\n\t\tthis.repositionSize();\n\t}\n\n\t// use this to obtain the parts of the dialog box intended for modification\n\tpublic bodyDOM():DOM {return this.domBody;}\n\tpublic buttonsDOM():DOM {return this.domTitleButtons;}\n\n\t// override this function to create the content; this gets called right before the dialog box is shown\n\tprotected populate():void\n\t{\n\t\tthis.bodyDOM().setText('Empty dialog box.');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have this called when the size may have changed, and need to update position\n\tprivate repositionSize():void\n\t{\n\t\tlet docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n\t\tthis.domPanelBoundary.css({'left': (0.5 * (docW - dlgW)) + 'px'});\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {addTooltip} from './Tooltip';\n\n/*\n\tBase class for widgets. Maintains the wrapping <div> element into which everything is rendered.\n*/\n\nexport class Widget\n{\n\tprotected tagType = 'div';\n\n\t//public content:JQuery = null;\n\n\tprivate domContent:DOM = null;\n\tpublic get contentDOM():DOM {return this.domContent;}\n\n\tconstructor() {}\n\n\t// create the underlying structure; the parent parameter must be jQuery- or DOM-compatible\n\tpublic render(parent:DOM | Element):void\n\t{\n\t\tlet tag = this.tagType;\n\t\tthis.domContent = dom(`<${tag}/>`).appendTo(parent as (DOM | Element));\n\t}\n\n\t// deconstructs the widget; this is not a hook, rather it is for the benefit of calling code that wants the widget gone\n\tpublic remove():void\n\t{\n\t\tif (this.domContent) this.domContent.remove();\n\t\tthis.domContent = null;\n\t}\n\n\t// convenience function: attaches a tooltip to the main content element, after rendering\n\tpublic addTooltip(bodyHTML:string, titleHTML?:string):void\n\t{\n\t\taddTooltip(this.contentDOM, bodyHTML, titleHTML);\n\t}\n\n\t// convenience wrapper\n\tpublic grabFocus():void\n\t{\n\t\tthis.domContent.grabFocus();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {FontData} from '../gfx/FontData';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {dom, DOM} from '../util/dom';\nimport {Theme} from '../util/Theme';\nimport {colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ButtonBank, ButtonBankItem} from './ButtonBank';\nimport {addTooltip} from './Tooltip';\nimport {Widget} from './Widget';\n\n/*\n\tButtonView: a container for a stack of ButtonBanks. The ButtonView handles all the display/user interaction parts\n\tof a button bank. A ButtonView should be owned by a container object that defines a region of space within which this\n\tobject can position itself.\n*/\n\nexport enum ButtonViewPosition\n{\n\tLeft,\n\tRight,\n\tTop,\n\tBottom,\n\tCentre,\n}\n\nexport interface ButtonViewDisplay\n{\n\tid:string;\n\tx?:number;\n\ty?:number;\n\twidth?:number;\n\theight?:number;\n\thelpSpan?:DOM;\n\timgDOM?:DOM;\n}\n\nexport class ButtonView extends Widget\n{\n\tpublic idealSize = 50;\n\tpublic width = 0;\n\tpublic height = 0;\n\tpublic selectedButton:string = null;\n\tpublic highlightButton:string = null;\n\tpublic maxButtonColumns = 0; // optional\n\tpublic maxButtonRows = 0; // optional\n\n\tprivate border = 0x808080;\n\tprivate background = 0xFFFFFF;\n\tprivate buttonColNorm1 = 0x47D5D2;\n\tprivate buttonColNorm2 = 0x008FD1;\n\tprivate buttonColActv1 = 0x30FF69;\n\tprivate buttonColActv2 = 0x008650;\n\tprivate buttonColSel1 = 0xFFFFFF;\n\tprivate buttonColSel2 = 0xE0E0E0;\n\n\tprivate canvas:HTMLCanvasElement = null;\n\tprivate stack:ButtonBank[] = [];\n\tprivate display:ButtonViewDisplay[] = [];\n\tprivate hasBigButtons = true;\n\tprivate prefabImgSize = 44;\n\tprivate gripHeight = 30;\n\tprivate gripWidth = 50;\n\tprivate isRaised = true;\n\tprivate outPadding = 2;\n\tprivate inPadding = 2;\n\tprivate x = 0;\n\tprivate y = 0;\n\n\t// static cache: needs to be filled out just once; will contain the {icon:svg} pairs that can be used in the buttons\n\t//private static ACTION_ICONS:Record<string, string> = {};\n\n\tprivate isMacLike = false;\n\n\tconstructor(private position:ButtonViewPosition, private parentX:number, private parentY:number, private parentWidth:number, private parentHeight:number)\n\t{\n\t\tsuper();\n\n\t\t// NOTE: this is going to be a problem soon, but there's no replacement\n\t\tthis.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n\t}\n\n\t// for future reference, parent boundary size is different\n\tpublic setParentSize(width:number, height:number):void\n\t{\n\t\tthis.parentWidth = width;\n\t\tthis.parentHeight = height;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// --------------------------------------- public methods ---------------------------------------\n\n\t// returns the current bank, or null if none\n\tpublic get topBank():ButtonBank\n\t{\n\t\treturn this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n\t}\n\n\t// returns how many banks are piled up\n\tpublic get stackSize():number {return this.stack.length;}\n\n\t// create the canvas\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.contentDOM.css({'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px`});\n\t\tthis.contentDOM.addClass('no_selection');\n\n\t\tthis.layoutButtons();\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0;';\n\t\tcanvasStyle += 'pointer-events: none;';\n\t\tthis.canvas = newElement(this.contentDOM.el, 'canvas', {'width': this.width, 'height': this.height, 'style': canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\tthis.applyOffset();\n\t\tthis.redraw();\n\n\t\tthis.contentDOM.onClick((event) => this.mouseClick(event));\n\t\tthis.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tthis.contentDOM.onMouseDown((event) => {event.preventDefault(); this.mouseDown(event);});\n\t\tthis.contentDOM.onMouseUp((event) => this.mouseUp(event));\n\t\tthis.contentDOM.onMouseOver((event) => this.mouseOver(event));\n\t\tthis.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n\t\tthis.contentDOM.onMouseMove((event) => this.mouseMove(event));\n\t}\n\n\t// adds a new molsync.ui.ButtonBank instance to the stack, making it the current one\n\tpublic pushBank(bank:ButtonBank):void\n\t{\n\t\tbank.buttonView = this;\n\t\tbank.isSubLevel = this.stack.length > 0;\n\t\tbank.init();\n\t\tthis.stack.push(bank);\n\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// removes the top buttonbank from the stack\n\tpublic popBank():void\n\t{\n\t\tif (this.stack.length == 0) return;\n\t\tVec.last(this.stack).bankClosed();\n\t\tthis.stack.length--;\n\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// updates the current bank, given that the buttons have probably changed\n\tpublic refreshBank():void\n\t{\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// get/set the selected button index, by ID\n\tpublic getSelectedButton():string\n\t{\n\t\treturn this.selectedButton;\n\t}\n\tpublic setSelectedButton(id:string):void\n\t{\n\t\tif (id != this.selectedButton)\n\t\t{\n\t\t\tthis.selectedButton = id;\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// pick next/previous button\n\tpublic cycleSelected(dir:number):void\n\t{\n\t\tlet sorted = this.display.filter((s) => s.id != '*');\n\t\tsorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n\n\t\tlet idx = 0, sz = sorted.length;\n\t\tfor (let n = 0; n < sz; n++) if (sorted[n].id == this.selectedButton) {idx = n; break;}\n\t\tthis.selectedButton = sorted[(idx + dir + sz) % sz].id;\n\t\tthis.redraw();\n\t}\n\n\t// raises or lowers the buttonbank\n\tpublic raiseBank():void\n\t{\n\t\tif (this.isRaised) return;\n\t\tthis.isRaised = true;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\tpublic lowerBank():void\n\t{\n\t\tif (!this.isRaised) return;\n\t\tthis.isRaised = false;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// determines whether or not the \"big buttons\" are used; big buttons are typically better for mobile devices, which\n\t// tend to have high screen DPI, while on PC monitors they tend to look a bit goofy\n\tpublic getHasBigButtons():boolean\n\t{\n\t\treturn this.hasBigButtons;\n\t}\n\tpublic setHasBigButtons(flag:boolean)\n\t{\n\t\tthis.hasBigButtons = flag;\n\t\tthis.prefabImgSize = flag ? 44 : 36;\n\t\tthis.idealSize = flag ? 50 : 40;\n\t}\n\n\t// returns true if the coordinate is (more or less) within the button outline, which is necessary for propagating mouse events;\n\t// it's also sometimes handy for exterior code to check if the position is covered\n\tpublic withinOutline(x:number, y:number)\n\t{\n\t\tlet w = this.width, h = this.height;\n\t\tif (x < 0 || x > w || y < 0 || y > h) return false;\n\n\t\tif (this.position == ButtonViewPosition.Centre || this.stack.length == 0) return true;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn x < w - gw || (y > my - hg && y < my + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn x > gw || (y > my - hg && y < my + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn y < h - gh || (x > mx - hg && x < mx + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn y > gh || (x > mx - hg && x < mx + hg);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// returns the space taken up by the \"grip\"; this is the value of the \"height\", which will have been rotated for left/right banks\n\tpublic gripSize():number\n\t{\n\t\treturn this.gripHeight;\n\t}\n\n\t// returns the minimum size (either width or height depending on orientation) given a particular number of buttons in the aligning direction, not\n\t// including grip widgets\n\tpublic sizeForButtons(nbtn:number):number\n\t{\n\t\treturn this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n\t}\n\n\t// --------------------------------------- private methods ---------------------------------------\n\n\t// figures out the size that this buttonview needs to be\n\tprivate layoutButtons():void\n\t{\n\t\tif (this.contentDOM == null) return; // too soon\n\n\t\tlet outPadding = this.outPadding, inPadding = this.inPadding;\n\n\t\t// clean up previous buttons\n\t\tthis.removeDisplayButtons();\n\n\t\t// special case: no content\n\t\tif (this.stack.length == 0)\n\t\t{\n\t\t\tthis.width = 10;\n\t\t\tthis.height = 10;\n\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) this.height = this.parentHeight;\n\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) this.width = this.parentWidth;\n\t\t\treturn;\n\t\t}\n\n\t\t// it not raised, it shall be small, and have only a grip\n\t\tif (!this.isRaised)\n\t\t{\n\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t\t{\n\t\t\t\tthis.width = this.gripHeight;\n\t\t\t\tthis.height = this.gripWidth + 2 * outPadding;\n\t\t\t}\n\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t\t{\n\t\t\t\tthis.width = this.gripWidth + 2 * outPadding;\n\t\t\t\tthis.height = this.gripHeight;\n\t\t\t}\n\t\t\tthis.addGripButton();\n\t\t\treturn;\n\t\t}\n\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tbank.buttons = [];\n\t\tbank.update();\n\n\t\t// decide how much room the 'pop button' takes up\n\t\tlet popWidth = 0, popHeight = 0;\n\t\tif (this.stack.length == 1) {}\n\t\telse if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) popHeight = this.gripHeight + inPadding;\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) popWidth = this.gripHeight + inPadding;\n\n\t\t// burn through layout possibilities, and keep the best one\n\t\tlet bestLayout:string[][] = null, bestScore:number = null;\n\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding /*- popHeight*/) / (this.idealSize + inPadding));\n\t\t\tlet minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n\t\t\tfor (let i = maxSlotHeight; i >= minSlotHeight; i--)\n\t\t\t{\n\t\t\t\tlet slotWidth = Math.ceil(bank.buttons.length / i);\n\t\t\t\tfor (let j = slotWidth; j <= slotWidth + 1; j++)\n\t\t\t\t{\n\t\t\t\t\tlet layout = this.layoutMaxHeight(bank, i, j);\n\t\t\t\t\tlet score = this.scoreLayout(layout) + 1 * layout[0].length;\n\t\t\t\t\tif (bestLayout == null || score < bestScore)\n\t\t\t\t\t{\n\t\t\t\t\t\tbestLayout = layout;\n\t\t\t\t\t\tbestScore = score;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n\t\t\tlet minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n\t\t\tfor (let n = maxSlotWidth; n >= minSlotWidth; n--)\n\t\t\t{\n\t\t\t\tlet layout = this.layoutMaxWidth(bank, n);\n\t\t\t\tlet score = this.scoreLayout(layout) + 1 * layout.length;\n\t\t\t\tif (bestLayout == null || score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestLayout = layout;\n\t\t\t\t\tbestScore = score;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// !! implement \"middle of window\" type (?)\n\t\t}\n\n\t\t// determine total size, and position everything\n\t\tlet ncols = bestLayout[0].length, nrows = bestLayout.length;\n\t\tthis.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n\t\tthis.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n\n\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) this.width += this.gripHeight;\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) this.height += this.gripHeight;\n\t\tthis.addGripButton();\n\n\t\tif (popWidth > 0 || popHeight > 0)\n\t\t{\n\t\t\tlet d:ButtonViewDisplay =\n\t\t\t{\n\t\t\t\tid: '!',\n\t\t\t\tx: outPadding + inPadding,\n\t\t\t\ty: outPadding + inPadding,\n\t\t\t\twidth: popWidth - inPadding,\n\t\t\t\theight: popHeight - inPadding\n\t\t\t};\n\t\t\tif (this.position == ButtonViewPosition.Right) d.x += this.gripHeight;\n\t\t\telse if (this.position == ButtonViewPosition.Bottom) d.y += this.gripHeight;\n\t\t\tif (popWidth == 0) d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n\t\t\tif (popHeight == 0) d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n\t\t\tthis.display.push(d);\n\t\t}\n\n\t\t// add in all the actual buttons\n\t\tfor (let y = 0; y < nrows; y++) for (let x = 0; x < ncols; x++)\n\t\t{\n\t\t\tfor (let n = 0; n < bank.buttons.length; n++) if (bestLayout[y][x] == bank.buttons[n].id)\n\t\t\t{\n\t\t\t\tlet b = bank.buttons[n], d:ButtonViewDisplay = {id: b.id};\n\t\t\t\td.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n\t\t\t\td.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n\t\t\t\tif (this.position == ButtonViewPosition.Right) d.x += this.gripHeight;\n\t\t\t\telse if (this.position == ButtonViewPosition.Bottom) d.y += this.gripHeight;\n\t\t\t\td.width = this.idealSize;\n\t\t\t\td.height = this.idealSize;\n\t\t\t\tthis.display.push(d);\n\t\t\t}\n\t\t}\n\t}\n\n\t// if appropriate, adds a grip button, with a suitable position\n\tprivate addGripButton():void\n\t{\n\t\tif (this.position == ButtonViewPosition.Centre) return;\n\n\t\tlet d:ButtonViewDisplay = {id: '*'}, spc = 3;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\td.width = this.gripHeight - spc;\n\t\t\td.height = this.gripWidth - 2 * spc;\n\t\t\td.x = this.width - d.width - spc - 1;\n\t\t\td.y = 0.5 * (this.height - d.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\td.width = this.gripHeight - spc;\n\t\t\td.height = this.gripWidth - 2 * spc;\n\t\t\td.x = spc + 1;\n\t\t\td.y = 0.5 * (this.height - d.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\td.width = this.gripWidth - 2 * spc;\n\t\t\td.height = this.gripHeight - spc;\n\t\t\td.x = 0.5 * (this.width - d.width);\n\t\t\td.y = this.height - d.height - spc - 1;\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\td.width = this.gripWidth - 2 * spc;\n\t\t\td.height = this.gripHeight - spc;\n\t\t\td.x = 0.5 * (this.width - d.width);\n\t\t\td.y = spc + 1;\n\t\t}\n\t\tthis.display.push(d);\n\t}\n\n\t// recreates the canvas, on account of it having a different size; note the \"setSize\" method is marked to-be-done in the closures\n\t// library, so this may not always be necessary\n\tprivate replaceCanvas():void\n\t{\n\t\tthis.contentDOM.empty();\n\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tthis.display[n].imgDOM = null;\n\t\t\tthis.display[n].helpSpan = null;\n\t\t}\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0;';\n\t\tcanvasStyle += 'pointer-events: none;';\n\t\tthis.canvas = newElement(this.contentDOM.el, 'canvas', {'width': this.width, 'height': this.height, 'style': canvasStyle}) as HTMLCanvasElement;\n\t}\n\n\t// removes all the display buttons, making sure to delete the HTML objects as necessary\n\tprivate removeDisplayButtons():void\n\t{\n\t\tthis.contentDOM.empty();\n\t\tthis.display = [];\n\t}\n\n\t// positions the canvas within its parent\n\tprivate applyOffset():void\n\t{\n\t\tlet x:number, y:number;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tx = 0;\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tx = this.parentWidth - this.width;\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = 0;\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = this.parentHeight - this.height;\n\t\t}\n\t\telse // == 'centre'\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\n\t\tthis.x = this.parentX + x;\n\t\tthis.y = this.parentY + y;\n\n\t\tthis.contentDOM.css({'position': 'absolute'});\n\t\tsetBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n\t}\n\n\t// redraws the buttons, in response to some kind of state change\n\tprivate redraw():void\n\t{\n\t\tif (!this.contentDOM || !this.canvas) return;\n\n\t\t// background\n\n\t\tlet density = pixelDensity();\n\t\tthis.canvas.width = this.width * density;\n\t\tthis.canvas.height = this.height * density;\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\tlet ctx = this.canvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\tlet path = this.traceOutline();\n\t\tctx.fillStyle = colourCanvas(this.background);\n\t\tctx.fill(path);\n\t\tctx.strokeStyle = colourCanvas(this.border);\n\t\tctx.lineWidth = 1;\n\t\tctx.stroke(path);\n\n\t\tlet bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n\n\t\tthis.contentDOM.css({'width': this.width + 'px', 'height': this.height + 'px'});\n\n\t\t// button outlines\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tconst d = this.display[n], b = this.buttonFromID(d.id);\n\n\t\t\tlet col1:number, col2:number;\n\t\t\tif (this.highlightButton != null && d.id == this.highlightButton)\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColActv1;\n\t\t\t\tcol2 = this.buttonColActv2;\n\t\t\t}\n\t\t\telse if (this.selectedButton != null && d.id == this.selectedButton)\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColSel1;\n\t\t\t\tcol2 = this.buttonColSel2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColNorm1;\n\t\t\t\tcol2 = this.buttonColNorm2;\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tpath = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n\t\t\tif (col2 != null)\n\t\t\t{\n\t\t\t\tlet grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n\t\t\t\tgrad.addColorStop(0, colourCanvas(col1));\n\t\t\t\tgrad.addColorStop(1, colourCanvas(col2));\n\t\t\t\tctx.fillStyle = grad;\n\t\t\t}\n\t\t\telse ctx.fillStyle = colourCanvas(col1);\n\t\t\tctx.fill(path);\n\t\t\tctx.strokeStyle = colourCanvas(this.border);\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.stroke(path);\n\t\t\tctx.restore();\n\n\t\t\tif (d.imgDOM != null)\n\t\t\t{\n\t\t\t\td.imgDOM.remove();\n\t\t\t\td.imgDOM = null;\n\t\t\t}\n\n\t\t\tif (b != null)\n\t\t\t{\n\t\t\t\tif (d.helpSpan == null)\n\t\t\t\t{\n\t\t\t\t\td.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n\t\t\t\t\tlet txt = b.helpText;\n\t\t\t\t\tif (b.mnemonic)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (txt.endsWith('.')) txt = txt.substring(0, txt.length - 1);\n\n\t\t\t\t\t\tlet keyText = b.mnemonic;\n\t\t\t\t\t\tlet match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n\t\t\t\t\t\tif (match) keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n\t\t\t\t\t\ttxt += ' [' + keyText + ']';\n\t\t\t\t\t}\n\t\t\t\t\taddTooltip(d.helpSpan, txt);\n\t\t\t\t}\n\t\t\t\tsetBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n\t\t\t}\n\n\t\t\tif (b == null) {}\n\t\t\telse if (b.imageFN != null && d.imgDOM == null)\n\t\t\t{\n\t\t\t\td.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({'position': 'absolute', 'pointer-events': 'none'});\n\t\t\t\td.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n\t\t\t\tconst sz = this.prefabImgSize;\n\t\t\t\tconst bx = d.x + Math.floor(0.5 * (d.width - sz));\n\t\t\t\tconst by = d.y + Math.floor(0.5 * (d.height - sz));\n\t\t\t\tsetBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n\t\t\t}\n\t\t\telse if (b.svg != null)\n\t\t\t{\n\t\t\t\td.imgDOM = dom('<div/>').appendTo(this.contentDOM).css({'display': 'block', 'position': 'absolute', 'pointer-events': 'none'});\n\t\t\t\tconst sz = this.prefabImgSize;\n\t\t\t\tconst bx = d.x + Math.floor(0.5 * (d.width - sz));\n\t\t\t\tconst by = d.y + Math.floor(0.5 * (d.height - sz));\n\t\t\t\tsetBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n\t\t\t\tlet svg = dom(b.svg.substring(b.svg.indexOf('<svg'))).appendTo(d.imgDOM);\n\t\t\t\tlet oldWidth = svg.getAttr('width'), oldHeight = svg.getAttr('height');\n\t\t\t\tsvg.attr({'viewBox': `0 0 ${oldWidth} ${oldHeight}`, 'width': `${sz}`, 'height': `${sz}`});\n\t\t\t\tsvg.css({'width': `${sz}px`, 'height': `${sz}px`, 'pointer-events': 'none'});\n\t\t\t\tdom(svg).appendTo(d.imgDOM);\n\t\t\t}\n\t\t\telse if (b.metavec != null)\n\t\t\t{\n\t\t\t\tlet draw = b.metavec instanceof MetaVector ? b.metavec as MetaVector : new MetaVector(b.metavec);\n\t\t\t\tdraw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n\t\t\t\tdraw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n\t\t\t\tdraw.renderContext(ctx);\n\t\t\t}\n\t\t\telse if (b.text != null)\n\t\t\t{\n\t\t\t\tlet sz = this.idealSize;\n\t\t\t\tlet draw = new MetaVector({'size': [sz, sz]});\n\t\t\t\tlet fsz = sz * 0.6;\n\t\t\t\tlet wad = FontData.main.measureText(b.text, fsz);\n\n\t\t\t\tif (wad[1] + wad[2] > sz)\n\t\t\t\t{\n\t\t\t\t\tfsz *= sz / (wad[1] + wad[2]);\n\t\t\t\t\twad = FontData.main.measureText(b.text, fsz);\n\t\t\t\t}\n\t\t\t\tif (wad[0] > sz)\n\t\t\t\t{\n\t\t\t\t\tfsz *= sz / wad[0];\n\t\t\t\t\twad = FontData.main.measureText(b.text, fsz);\n\t\t\t\t}\n\t\t\t\tlet x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n\t\t\t\tdraw.drawText(x - 1, y, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x + 1, y, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y - 1, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y + 1, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n\t\t\t\tdraw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n\t\t\t\tdraw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n\t\t\t\tdraw.renderContext(ctx);\n\t\t\t}\n\n\t\t\t// optionally draw the submenus indicator\n\t\t\tif (b != null && b.isSubMenu)\n\t\t\t{\n\t\t\t\tctx.save();\n\t\t\t\tlet sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(sx, sy);\n\t\t\t\tctx.lineTo(sx - 6, sy);\n\t\t\t\tctx.lineTo(sx, sy - 6);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fillStyle = 'black';\n\t\t\t\tctx.fill();\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// if it's the grip-button, draw the caret\n\t\t\tif (d.id == '*')\n\t\t\t{\n\t\t\t\tctx.save();\n\n\t\t\t\tpath = new Path2D();\n\t\t\t\tlet px:number[], py:number[], flip = this.isRaised;\n\t\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t\t\t{\n\t\t\t\t\tpx = [0.2, 0.7, 0.7]; py = [0.5, 0.3, 0.7];\n\t\t\t\t\tif (this.position == ButtonViewPosition.Left) flip = !flip;\n\t\t\t\t}\n\t\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t\t\t{\n\t\t\t\t\tpx = [0.5, 0.3, 0.7]; py = [0.2, 0.7, 0.7];\n\t\t\t\t\tif (this.position == ButtonViewPosition.Top) flip = !flip;\n\t\t\t\t}\n\t\t\t\tif (flip) {px = [1 - px[0], 1 - px[1], 1 - px[2]]; py = [1 - py[0], 1 - py[1], 1 - py[2]];}\n\t\t\t\tpath.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n\t\t\t\tpath.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n\t\t\t\tpath.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n\t\t\t\tpath.closePath();\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0;\n\t\t\t\tctx.fill(path);\n\t\t\t\tctx.stroke(path);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\telse if (d.id == '!')\n\t\t\t{\n\t\t\t\tctx.save();\n\n\t\t\t\tlet path1 = new Path2D(), path2 = new Path2D();\n\n\t\t\t\tlet inset = 5;\n\t\t\t\tlet w = d.width - inset * 2, h = d.height - inset * 2;\n\n\t\t\t\tfor (let z = 5; z < w + h - 1; z += 12)\n\t\t\t\t{\n\t\t\t\t\tlet x1 = 0, y1 = z, x2 = z, y2 = 0;\n\t\t\t\t\tif (y1 > h)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet delta = y1 - h;\n\t\t\t\t\t\tx1 += delta;\n\t\t\t\t\t\ty1 -= delta;\n\t\t\t\t\t}\n\t\t\t\t\tif (x2 > w)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet delta = x2 - w;\n\t\t\t\t\t\tx2 -= delta;\n\t\t\t\t\t\ty2 += delta;\n\t\t\t\t\t}\n\t\t\t\t\tpath1.moveTo(d.x + inset + x1, d.y + inset + y1);\n\t\t\t\t\tpath1.lineTo(d.x + inset + x2, d.y + inset + y2);\n\t\t\t\t\tpath2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n\t\t\t\t\tpath2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n\t\t\t\t}\n\n\t\t\t\tctx.lineWidth = 1;\n\t\t\t\tctx.strokeStyle = '#404040';\n\t\t\t\tctx.stroke(path1);\n\t\t\t\tctx.strokeStyle = 'white';\n\t\t\t\tctx.stroke(path2);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprivate delayedRedraw():void\n\t{\n\t\twindow.setTimeout(() => this.redraw(), 100);\n\t}\n\n\t// mapping ID tags into raw/display button objects\n\tprivate buttonFromID(id:string):ButtonBankItem\n\t{\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tfor (let n = 0; n < bank.buttons.length; n++) if (bank.buttons[n].id == id) return bank.buttons[n];\n\t\treturn null;\n\t}\n\tprivate displayFromID(id:string):ButtonViewDisplay\n\t{\n\t\tfor (let n = 0; n < this.display.length; n++) if (this.display[n].id == id) return this.display[n];\n\t\treturn null;\n\t}\n\n\t// produces a path that runs around the outside edge of the buttonbank; the shape depends on the orientation\n\tprivate traceOutline():Path2D\n\t{\n\t\tlet w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n\t\tif (this.position == ButtonViewPosition.Centre || this.stack.length == 0) return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n\n\t\tlet path = new Path2D();\n\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, 0.5);\n\t\t\tpath.lineTo(0.5 + uw - gw - r, 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n\t\t\tpath.lineTo(0.5 + uw - r, 0.5 + my - hg);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n\t\t\tpath.lineTo(0.5 + uw, 0.5 + my + hg - r);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n\t\t\tpath.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n\t\t\tpath.lineTo(0.5, 0.5 + uh);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(w - 0.5, 0.5);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw - r), 0.5);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n\t\t\tpath.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n\t\t\tpath.lineTo(w - 0.5, 0.5 + uh);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, h - (0.5 + uh));\n\t\t\tpath.lineTo(0.5, h - (0.5 + gh + r));\n\t\t\tpath.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + mx - hg, h - (0.5 + r));\n\t\t\tpath.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n\t\t\tpath.lineTo(0.5 + mx + hg - r, h - 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n\t\t\tpath.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + uw - r, h - (0.5 + gh));\n\t\t\tpath.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n\t\t\tpath.lineTo(0.5 + uw, h - (0.5 + uh));\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, 0.5 + uh);\n\t\t\tpath.lineTo(0.5, 0.5 + gh + r);\n\t\t\tpath.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + mx - hg, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + mx - hg, 0.5 + r);\n\t\t\tpath.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n\t\t\tpath.lineTo(0.5 + mx + hg - r, 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n\t\t\tpath.lineTo(0.5 + mx + hg, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + uw - r, 0.5 + gh);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n\t\t\tpath.lineTo(0.5 + uw, 0.5 + uh);\n\t\t}\n\t\treturn path;\n\t}\n\n\t// used for horizontal buttonbanks: provide a maximum width, and try to fill it evenly; returns slot[y][x]='id'/undef\n\tprivate layoutMaxWidth(bank:ButtonBank, slotWidth:number):string[][]\n\t{\n\t\tif (bank.buttons.length == 0) return [[null]];\n\n\t\t// !! consider the buddy system when feeding things in...\n\t\tlet bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n\t\tlet x = 0, y = 0, w = 0, h = 0;\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tw = Math.max(x + 1, w);\n\t\t\th = Math.max(y + 1, h);\n\t\t\tbx[n] = x;\n\t\t\tby[n] = y;\n\t\t\tx++;\n\t\t\tif (x >= slotWidth) {x = 0; y++;}\n\t\t}\n\t\tlet slot = new Array(h);\n\t\tfor (let n = 0; n < h; n++) slot[n] = new Array(w);\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tslot[by[n]][bx[n]] = bank.buttons[n].id;\n\t\t}\n\t\treturn slot;\n\t}\n\n\t// used for vertical buttonbanks: provide a maximum height, and a row width, and try to fill it evenly; note that the buttons\n\t// are still fed in left-to-right, just like the layoutMaxWidth method; returns slot[y][x]='id'/undef\n\tprivate layoutMaxHeight(bank:ButtonBank, slotHeight:number, slotWidth:number):string[][]\n\t{\n\t\tif (bank.buttons.length == 0) return [[null]];\n\n\t\t// !! consider the buddy system when feeding things in...\n\t\tlet bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n\t\tlet x = 0, y = 0, w = 0, h = 0;\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tw = Math.max(x + 1, w);\n\t\t\th = Math.max(y + 1, h);\n\t\t\tbx[n] = x;\n\t\t\tby[n] = y;\n\t\t\tx++;\n\t\t\tif (x >= slotWidth) {x = 0; y++;}\n\t\t}\n\t\tlet slot = new Array(h);\n\t\tfor (let n = 0; n < h; n++) slot[n] = new Array(w);\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tslot[by[n]][bx[n]] = bank.buttons[n].id;\n\t\t}\n\t\treturn slot;\n\t}\n\n\t// takes an array of slot[y][x], and calculates a base score; higher is bad, i.e. penalty based\n\tprivate scoreLayout(slots:string[][])\n\t{\n\t\tlet score = 0;\n\t\tlet nrows = slots.length, ncols = slots[0].length;\n\t\tfor (let y = 0; y < nrows; y++) for (let x = 0; x < ncols; x++)\n\t\t{\n\t\t\tif (slots[y][x] == null) score++;\n\t\t}\n\t\tif (this.maxButtonRows > 0 && nrows > this.maxButtonRows) score += (nrows - this.maxButtonRows) * 100;\n\t\tif (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns) score += (ncols - this.maxButtonColumns) * 100;\n\t\treturn score;\n\t}\n\n\t// returns the index of the button underneath the position, or -1 if none\n\tprivate pickButtonIndex(x:number, y:number)\n\t{\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tlet d = this.display[n];\n\t\t\tif (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height) return n;\n\t\t}\n\t\treturn -1;\n\t}\n\tprivate pickButtonID(x:number, y:number):string\n\t{\n\t\tlet idx = this.pickButtonIndex(x, y);\n\t\tif (idx < 0) return undefined;\n\t\treturn this.display[idx].id;\n\t}\n\n\t// the button index has been clicked, so activate the corresponding action\n\tprivate triggerButton(id:string):void\n\t{\n\t\tif (id == '*')\n\t\t{\n\t\t\tif (this.isRaised)\n\t\t\t\tthis.lowerBank();\n\t\t\telse\n\t\t\t\tthis.raiseBank();\n\t\t\treturn;\n\t\t}\n\t\telse if (id == '!')\n\t\t{\n\t\t\tthis.popBank();\n\t\t\treturn;\n\t\t}\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tbank.hitButton(id);\n\t}\n\n\t// --------------------------------------- toolkit events ---------------------------------------\n\n\t// event responses\n\tprivate mouseClick(event:MouseEvent):void\n\t{\n\t}\n\tprivate mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\t// (do something?)\n\t\tevent.stopImmediatePropagation();\n\t}\n\tprivate mouseDown(event:MouseEvent):void\n\t{\n\t\tthis.contentDOM.parent().grabFocus();\n\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// !! ?? let shift = event.shiftKey, ctrl = event.ctrlKey, alt = event.altKey, meta = event.metaKey, plat = event.platformModifierKey;\n\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\n\t\tif (id != this.highlightButton)\n\t\t{\n\t\t\tthis.highlightButton = id;\n\t\t\tthis.redraw();\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseUp(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// !! ?? let shift = event.shiftKey, ctrl = event.ctrlKey, alt = event.altKey, meta = event.metaKey, plat = event.platformModifierKey;\n\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\n\t\tif (id != null && this.highlightButton == id)\n\t\t{\n\t\t\tthis.highlightButton = undefined;\n\t\t\tthis.triggerButton(id);\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.highlightButton = undefined;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseOver(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// (do something?)\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseOut(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1]))\n\t\t{\n\t\t\tif (this.highlightButton != null)\n\t\t\t{\n\t\t\t\tthis.highlightButton = null;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.highlightButton != null)\n\t\t{\n\t\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\t\t\tif (id != this.highlightButton)\n\t\t\t{\n\t\t\t\tthis.highlightButton = null;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseMove(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// (do something?)\n\n\t\t//event.stopPropagation();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer} from '../data/AbbrevContainer';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {Chemistry} from '../mol/Chemistry';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {QueryTypeAtom, QueryUtil} from '../mol/QueryUtil';\nimport {Geometry, SketchUtil} from '../mol/SketchUtil';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {MetalLigate} from './MetalLigate';\nimport {Sketcher} from './Sketcher';\nimport {FusionPermutation, TemplateFusion} from './TemplateFusion';\n\n/*\n\tMoleculeActivity: command-oriented modifications of the current molecular state.\n\n\tThe pattern is to start with a molecule and its selection state, and apply a unit operation. The primitive operations have\n\tbeen boiled down to a minimal subset, which was originally inspired by implementing a Sketcher UI for mobile devices with\n\tlimited input bandwidth. The paradigm is still quite useful for desktop environments because it lends itself well to power\n\tusers.\n*/\n\nexport enum ActivityType\n{\n\tDelete = 1,\n\tClear,\n\tCopy,\n\tCut,\n\tSelectAll,\n\tSelectNone,\n\tSelectPrevComp,\n\tSelectNextComp,\n\tSelectSide,\n\tSelectGrow,\n\tSelectShrink,\n\tSelectChain,\n\tSelectSmRing,\n\tSelectRingBlk,\n\tSelectCurElement,\n\tSelectToggle,\n\tSelectUnCurrent,\n\tElement,\n\tAtomPos,\n\tCharge,\n\tConnect,\n\tDisconnect,\n\tMetalLigate,\n\tBondOrder,\n\tBondType,\n\tBondGeom,\n\tBondAtom,\n\tBondSwitch,\n\tBondRotate,\n\tBondAddTwo,\n\tBondInsert,\n\tJoin,\n\tNudge,\n\tNudgeLots,\n\tNudgeFar,\n\tFlip,\n\tScale,\n\tRotate,\n\tBondDist,\n\tAlignAngle,\n\tAlignRegular,\n\tAdjustTorsion,\n\tMove,\n\tRing,\n\t/*BondDist,\n\tCycleBond,*/\n\tTemplateFusion,\n\tAbbrevTempl,\n\tAbbrevGroup,\n\tAbbrevFormula,\n\tAbbrevClear,\n\tAbbrevExpand,\n\tBondArtifactPath,\n\tBondArtifactRing,\n\tBondArtifactArene,\n\tBondArtifactClear,\n\tPolymerBlock,\n\tAddHydrogens,\n\tRemoveHydrogens,\n\tQueryClear,\n\tQueryCopy,\n\tQueryPaste,\n\tQuerySetAtom,\n\tQuerySetBond,\n\tQueryBondAny,\n\tSproutDirection,\n}\n\nexport interface ActivityParam\n{\n\telement?:string;\n\tpositionX?:number;\n\tpositionY?:number;\n\tkeepAbbrev?:boolean;\n\tdelta?:number;\n\torder?:number;\n\tgeom?:Geometry;\n\ttype?:number;\n\tx1?:number;\n\ty1?:number;\n\tx2?:number;\n\ty2?:number;\n\tdir?:string;\n\taxis?:string;\n\tmag?:number;\n\ttheta?:number;\n\tcentreX?:number;\n\tcentreY?:number;\n\tdist?:number;\n\tangle?:number;\n\trefAtom?:number;\n\tdeltaX?:number;\n\tdeltaY?:number;\n\tringX?:number[];\n\tringY?:number[];\n\taromatic?:boolean;\n\tfrag?:Molecule;\n\tfragNative?:string;\n\tqmol?:Molecule;\n}\n\nexport interface SketchState\n{\n\tmol:Molecule;\n\tcurrentAtom:number;\n\tcurrentBond:number;\n\tselectedMask:boolean[];\n\n\t// only used in specific circumstances\n\tpermutations?:FusionPermutation[];\n\n\t// alternate outcome provided occasionally\n\taltmol?:Molecule;\n}\n\nexport interface TemplatePermutation\n{\n\tmol:string;\n\tdisplay:string;\n\tmolidx:number[];\n\ttemidx:number[];\n\tsrcidx:number[];\n\tmetavec?:MetaVector;\n}\n\nexport class MoleculeActivity\n{\n\tprivate subjectMask:boolean[];\n\tprivate subjectIndex:number[];\n\tprivate subjectLength:number;\n\tprivate hasSelected:boolean;\n\n\tpublic output:SketchState;\n\tpublic errmsg:string;\n\tpublic toClipboard:string = null;\n\n\tconstructor(public input:SketchState, public activity:ActivityType, private param:ActivityParam, private owner?:Sketcher)\n\t{\n\t\tthis.output =\n\t\t{\n\t\t\tmol: null,\n\t\t\tcurrentAtom: -1,\n\t\t\tcurrentBond: -1,\n\t\t\tselectedMask: null\n\t\t};\n\n\t\tlet na = this.input.mol.numAtoms;\n\t\tif (this.input.selectedMask == null) this.input.selectedMask = Vec.booleanArray(false, na);\n\t\twhile (this.input.selectedMask.length < na) this.input.selectedMask.push(false);\n\t\tthis.subjectMask = this.input.selectedMask.slice(0);\n\t\tthis.subjectLength = Vec.maskCount(this.subjectMask);\n\t\tthis.subjectIndex = [];\n\t\tthis.hasSelected = this.subjectLength > 0;\n\n\t\tif (this.subjectLength == 0)\n\t\t{\n\t\t\tif (this.input.currentAtom > 0)\n\t\t\t{\n\t\t\t\tthis.subjectLength = 1;\n\t\t\t\tthis.subjectMask[this.input.currentAtom - 1] = true;\n\t\t\t\tthis.subjectIndex = [this.input.currentAtom];\n\t\t\t}\n\t\t\telse if (this.input.currentBond > 0)\n\t\t\t{\n\t\t\t\tlet bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n\t\t\t\tlet b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n\t\t\t\tthis.subjectLength = 2;\n\t\t\t\tthis.subjectMask[b1 - 1] = true;\n\t\t\t\tthis.subjectMask[b2 - 1] = true;\n\t\t\t\tthis.subjectIndex = [b1, b2];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.subjectIndex = Vec.maskIdx(this.subjectMask);\n\t\t\tVec.addTo(this.subjectIndex, 1);\n\t\t}\n\t}\n\n\t// provide the optional owner parameter: if defined, then it will be called after the operation is complete\n\t// (note: this is anachronistic, and should be refactored out)\n\tpublic setOwner(owner:Sketcher):void\n\t{\n\t\tthis.owner = owner;\n\t}\n\n\t// --------------------------------------- public methods ---------------------------------------\n\n\t// returns false if the activity cannot be executed; errs on the side of generosity, i.e. false positives are to be expected\n\tpublic evaluate():boolean\n\t{\n\t\t// ... actually do it...\n\t\treturn true;\n\t}\n\n\t// carries out the activity; some activities are performed immediately, while others require an RPC request; when it is finished,\n\t// the molecule state will be updated if successful, or an error will be displayed if not\n\tpublic execute():void\n\t{\n\t\tlet param = this.param;\n\n\t\tif (this.activity == ActivityType.Delete) this.execDelete();\n\t\telse if (this.activity == ActivityType.Clear) this.execClear();\n\t\telse if (this.activity == ActivityType.Copy) this.execCopy(false);\n\t\telse if (this.activity == ActivityType.Cut) this.execCopy(true);\n\t\telse if (this.activity == ActivityType.SelectAll) this.execSelectAll(true);\n\t\telse if (this.activity == ActivityType.SelectNone) this.execSelectAll(false);\n\t\telse if (this.activity == ActivityType.SelectPrevComp) this.execSelectComp(-1);\n\t\telse if (this.activity == ActivityType.SelectNextComp) this.execSelectComp(1);\n\t\telse if (this.activity == ActivityType.SelectSide) this.execSelectSide();\n\t\telse if (this.activity == ActivityType.SelectGrow) this.execSelectGrow();\n\t\telse if (this.activity == ActivityType.SelectShrink) this.execSelectShrink();\n\t\telse if (this.activity == ActivityType.SelectChain) this.execSelectChain();\n\t\telse if (this.activity == ActivityType.SelectSmRing) this.execSelectSmRing();\n\t\telse if (this.activity == ActivityType.SelectRingBlk) this.execSelectRingBlk();\n\t\telse if (this.activity == ActivityType.SelectCurElement) this.execSelectCurElement();\n\t\telse if (this.activity == ActivityType.SelectToggle) this.execSelectToggle();\n\t\telse if (this.activity == ActivityType.SelectUnCurrent) this.execSelectUnCurrent();\n\t\telse if (this.activity == ActivityType.Element) this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n\t\telse if (this.activity == ActivityType.Charge) this.execCharge(param.delta);\n\t\telse if (this.activity == ActivityType.Connect) this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n\t\telse if (this.activity == ActivityType.Disconnect) this.execDisconnect();\n\t\telse if (this.activity == ActivityType.MetalLigate) this.execMetalLigate();\n\t\telse if (this.activity == ActivityType.BondOrder) this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n\t\telse if (this.activity == ActivityType.BondType) this.execBond(1, param.type);\n\t\telse if (this.activity == ActivityType.BondGeom) this.execBondGeom(param.geom);\n\t\telse if (this.activity == ActivityType.BondAtom) this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n\t\telse if (this.activity == ActivityType.BondSwitch) this.execBondSwitch();\n\t\telse if (this.activity == ActivityType.BondRotate) this.execBondRotate();\n\t\telse if (this.activity == ActivityType.BondAddTwo) this.execBondAddTwo();\n\t\telse if (this.activity == ActivityType.BondInsert) this.execBondInsert();\n\t\telse if (this.activity == ActivityType.Join) this.execJoin();\n\t\telse if (this.activity == ActivityType.Nudge) this.execNudge(param.dir, 0.1);\n\t\telse if (this.activity == ActivityType.NudgeLots) this.execNudge(param.dir, 1);\n\t\telse if (this.activity == ActivityType.NudgeFar) this.execNudgeFar(param.dir);\n\t\telse if (this.activity == ActivityType.Flip) this.execFlip(param.axis);\n\t\telse if (this.activity == ActivityType.Scale) this.execScale(param.mag);\n\t\telse if (this.activity == ActivityType.Rotate) this.execRotate(param.theta, param.centreX, param.centreY);\n\t\telse if (this.activity == ActivityType.BondDist) this.execBondDist(param.dist);\n\t\telse if (this.activity == ActivityType.AlignAngle) this.execAlignAngle(param.angle);\n\t\telse if (this.activity == ActivityType.AlignRegular) this.execAlignRegular();\n\t\telse if (this.activity == ActivityType.AdjustTorsion) this.execAdjustTorsion(param.angle);\n\t\telse if (this.activity == ActivityType.Move) this.execMove(param.refAtom, param.deltaX, param.deltaY);\n\t\telse if (this.activity == ActivityType.Ring) this.execRing(param.ringX, param.ringY, param.aromatic);\n\t\t/*else if (this.activity == ActivityType.BondDist)\n\t\t{\n\t\t\t// !!\n\t\t}\n\t\telse if (this.activity == ActivityType.CycleBond)\n\t\t{\n\t\t\t// !!\n\t\t}*/\n\t\telse if (this.activity == ActivityType.TemplateFusion)\n\t\t{\n\t\t\tthis.execTemplateFusion(param.frag ?? Molecule.fromString(param.fragNative));\n\t\t\tif (this.owner) this.owner.setPermutations(this.output.permutations as any as TemplatePermutation[]);\n\t\t\treturn;\n\t\t}\n\t\telse if (this.activity == ActivityType.AbbrevTempl) this.execAbbrevTempl();\n\t\telse if (this.activity == ActivityType.AbbrevGroup) this.execAbbrevGroup();\n\t\telse if (this.activity == ActivityType.AbbrevFormula) this.execAbbrevFormula();\n\t\telse if (this.activity == ActivityType.AbbrevClear) this.execAbbrevClear();\n\t\telse if (this.activity == ActivityType.AbbrevExpand) this.execAbbrevExpand();\n\t\telse if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n\t\t\t\tthis.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear) this.execBondArtifact(this.activity);\n\t\telse if (this.activity == ActivityType.PolymerBlock) this.execPolymerBlock();\n\t\telse if (this.activity == ActivityType.AddHydrogens) this.execAddHydrogens();\n\t\telse if (this.activity == ActivityType.RemoveHydrogens) this.execRemoveHydrogens();\n\t\telse if (this.activity == ActivityType.QueryClear) this.execQueryClear();\n\t\telse if (this.activity == ActivityType.QueryCopy) this.execQueryCopy();\n\t\telse if (this.activity == ActivityType.QueryPaste) this.execQueryPaste();\n\t\telse if (this.activity == ActivityType.QuerySetAtom) this.execQuerySetAtom();\n\t\telse if (this.activity == ActivityType.QuerySetBond) this.execQuerySetBond();\n\t\telse if (this.activity == ActivityType.QueryBondAny) this.execQueryBondAny();\n\t\telse if (this.activity == ActivityType.SproutDirection) this.execSproutDirection(param.deltaX, param.deltaY);\n\n\t\tthis.finish();\n\t}\n\n\t// --------------------------------------- private methods ---------------------------------------\n\n\t// call this when execution has finished\n\tprivate finish():void\n\t{\n\t\tif (!this.owner) return;\n\n\t\tif (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null)\n\t\t{\n\t\t\tthis.owner.setState(this.output, true);\n\n\t\t\tif (this.errmsg != null) this.owner.showMessage(this.errmsg, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.errmsg != null) this.owner.showMessage(this.errmsg, true);\n\t\t}\n\t}\n\n\tpublic execDelete():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tthis.output.mol = mol.clone();\n\t\tthis.zapSubject();\n\n\t\t// if just a current bond, zap it\n\t\tif (this.input.currentBond > 0 && !this.hasSelected)\n\t\t{\n\t\t\tthis.output.mol.deleteBond(this.input.currentBond);\n\t\t\tthis.output.currentBond = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// if a terminal atom, bump over the selection\n\t\tif (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom)\n\t\t{\n\t\t\tlet adj = mol.atomAdjList(this.input.currentAtom);\n\t\t\tif (adj.length == 1)\n\t\t\t{\n\t\t\t\tthis.output.currentAtom = adj[0];\n\t\t\t\tif (this.output.currentAtom > this.input.currentAtom) this.output.currentAtom--;\n\t\t\t}\n\t\t}\n\n\t\t// do the deletion\n\t\tfor (let n = this.subjectLength - 1; n >= 0; n--) this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n\t}\n\n\tpublic execCopy(withCut:boolean):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tif (this.subjectLength > 0) mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n\n\t\tif (this.owner) this.owner.performCopy(mol);\n\t\telse this.toClipboard = mol.toString();\n\n\t\tif (withCut)\n\t\t{\n\t\t\tthis.zapSubject();\n\t\t\tthis.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n\t\t}\n\t}\n\n\tpublic execClear():void\n\t{\n\t\tthis.output.mol = new Molecule();\n\t\tthis.zapSubject();\n\t}\n\n\tpublic execSelectAll(all:boolean):void\n\t{\n\t\tlet same = true;\n\t\tfor (let n = 0; n < this.input.mol.numAtoms; n++) if (this.subjectMask[n] != all)\n\t\t{\n\t\t\tsame = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (same)\n\t\t{\n\t\t\tthis.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n\t\t\treturn;\n\t\t}\n\t\tthis.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n\t}\n\n\tpublic execSelectComp(dir:number):void\n\t{\n\t\tlet cclist = MolUtil.componentList(this.input.mol);\n\t\tif (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'All atoms already selected.';\n\t\t\treturn;\n\t\t}\n\t\tlet sel = this.pickSelectedGroup(cclist, dir);\n\t\tthis.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n\t\tfor (let n = 0; n < cclist[sel].length; n++) this.output.selectedMask[cclist[sel][n] - 1] = true;\n\t}\n\n\tpublic execSelectSide():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tlet mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n\n\t\tif (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Current atom has no neighbours.';\n\t\t\treturn;\n\t\t}\n\t\tif (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1)\n\t\t{\n\t\t\tthis.errmsg = 'Current bond has no neighbours.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n\t\tlet sel = this.pickSelectedGroup(sides, 1);\n\t\tthis.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let n = 0; n < sides[sel].length; n++) this.output.selectedMask[sides[sel][n] - 1] = true;\n\t}\n\n\tpublic execSelectGrow():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (!this.hasSelected)\n\t\t{\n\t\t\tif (currentAtom > 0)\n\t\t\t{\n\t\t\t\tthis.output.selectedMask[currentAtom - 1] = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n\t\t\t\tthis.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\t\tif (this.input.selectedMask[bfr] && !this.input.selectedMask[bto]) this.output.selectedMask[bto] = true;\n\t\t\t\telse if (this.input.selectedMask && !this.input.selectedMask[bfr]) this.output.selectedMask[bfr] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execSelectShrink():void\n\t{\n\t\tif (!this.requireSelected()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tlet count = Vec.numberArray(0, mol.numAtoms);\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto]) continue;\n\t\t\tcount[bfr]++;\n\t\t\tcount[bto]++;\n\t\t}\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\t\tfor (let n = 0; n < mol.numAtoms; n++) this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n\t}\n\n\tpublic execSelectChain():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0) this.output.selectedMask[bto] = true;\n\t\t\telse if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0) this.output.selectedMask[bfr] = true;\n\t\t}\n\t}\n\n\tpublic execSelectSmRing():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tfor (let r = 3; r <= 8; r++)\n\t\t{\n\t\t\tlet rings = this.input.mol.findRingsOfSize(r);\n\t\t\tfor (let i = 0; i < rings.length; i++)\n\t\t\t{\n\t\t\t\tlet any = false;\n\t\t\t\tfor (let j = 0; j < rings[i].length; j++) if (this.subjectMask[rings[i][j] - 1])\n\t\t\t\t{\n\t\t\t\t\tany = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (any) for (let j = 0; j < rings[i].length; j++) this.output.selectedMask[rings[i][j] - 1] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execSelectRingBlk():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tlet maxRB = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n\t\tif (maxRB == 0) return;\n\n\t\tlet gotRB = Vec.booleanArray(false, maxRB);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet rb = mol.atomRingBlock(n);\n\t\t\tif (rb > 0 && this.subjectMask[n - 1]) gotRB[rb - 1] = true;\n\t\t}\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet rb = mol.atomRingBlock(n);\n\t\t\tif (rb > 0 && gotRB[rb - 1]) this.output.selectedMask[n - 1] = true;\n\t\t}\n\t}\n\n\tpublic execSelectCurElement():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tlet el1 = '', el2 = '';\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tel1 = mol.atomElement(this.input.currentAtom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tel1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n\t\t\tel2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomElement(n) == el1 || mol.atomElement(n) == el2) this.output.selectedMask[n - 1] = true;\n\t}\n\n\tpublic execSelectToggle():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n\t\t\tlet sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n\t\t\tthis.output.selectedMask[bfr - 1] = sel;\n\t\t\tthis.output.selectedMask[bto - 1] = sel;\n\t\t}\n\t}\n\n\tpublic execSelectUnCurrent():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.currentAtom - 1] = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n\t\t\tthis.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n\t\t}\n\t}\n\n\tpublic execElement(element:string, positionX?:number, positionY?:number, keepAbbrev?:boolean):void\n\t{\n\t\tconst QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n\n\t\tif (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element))\n\t\t{\n\t\t\tlet anyChange = false;\n\t\t\tfor (let n = 0; n < this.subjectLength; n++) if (this.input.mol.atomElement(this.subjectIndex[n]) != element)\n\t\t\t{\n\t\t\t\tanyChange = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!anyChange)\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Elements not changed.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet mol = this.output.mol = this.input.mol.clone();\n\n\t\tlet applyQuery = (atom:number) =>\n\t\t{\n\t\t\tif (element == 'A')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'X')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Y')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Z')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Q')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'M')\n\t\t\t{\n\t\t\t\tconst NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'T')\n\t\t\t{\n\t\t\t\tconst TRANSITION_METALS =\n\t\t\t\t[\n\t\t\t\t\t'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n\t\t\t\t\t'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n\t\t\t\t\t'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n\t\t\t\t\t'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n\t\t\t\t\t'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n\t\t\t\t];\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'E')\n\t\t\t{\n\t\t\t\tconst MAIN_GROUPS =\n\t\t\t\t[\n\t\t\t\t\t'B', 'N', 'O', 'F',\n\t\t\t\t\t'Al', 'Si', 'P', 'S', 'Cl',\n\t\t\t\t\t'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n\t\t\t\t\t'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n\t\t\t\t\t'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n\t\t\t\t];\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'R')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t};\n\n\t\tif (mol.numAtoms == 0)\n\t\t{\n\t\t\tmol.addAtom(element, 0, 0);\n\t\t\tapplyQuery(mol.numAtoms);\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\t// when there's no subject, this is an add-atom operation\n\t\t\tif (positionX != null && positionY != null)\n\t\t\t\tmol.addAtom(element, positionX, positionY);\n\t\t\telse\n\t\t\t\tSketchUtil.placeNewAtom(mol, element);\n\t\t\tapplyQuery(mol.numAtoms);\n\t\t}\n\t\telse // there is a subject, so it's a change-atom operation\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tif (keepAbbrev)\n\t\t\t\t\tmol.setAtomElement(this.subjectIndex[n], element);\n\t\t\t\telse\n\t\t\t\t\tMolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n\t\t\t\tapplyQuery(this.subjectIndex[n]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execCharge(delta:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n\t\t\tthis.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n\t\t}\n\t}\n\n\tpublic execConnect(order:number, type:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n\t\tif (conn == null)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < conn.length; n += 2) MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n\t}\n\n\tpublic execDisconnect():void\n\t{\n\t\tlet zap:number[] = [];\n\n\t\tlet mol = this.input.mol;\n\n\t\tif (this.hasSelected)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) zap.push(n);\n\t\t}\n\t\telse if (this.input.currentAtom > 0)\n\t\t{\n\t\t\tfor (let a of mol.atomAdjBonds(this.input.currentAtom)) zap.push(a);\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tzap.push(this.input.currentBond);\n\t\t}\n\t\tif (zap.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet killmask = Vec.booleanArray(false, mol.numBonds);\n\t\tfor (let b of zap) killmask[b - 1] = true;\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = mol.numBonds; n >= 1; n--) if (killmask[n - 1]) this.output.mol.deleteBond(n);\n\t}\n\n\tpublic execMetalLigate():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tlet ligAtoms = this.subjectIndex.slice(0);\n\n\t\t// ideally the user specified the metal by way of the current atom, but otherwise make a guess\n\t\tlet metalAtom = this.input.currentAtom;\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tif (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {metalAtom = a; break;}\n\t\t\t}\n\t\t}\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tif (Chemistry.ELEMENT_ROWS[atno] >= 3) {metalAtom = a; break;}\n\t\t\t}\n\t\t}\n\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet i = ligAtoms.indexOf(metalAtom);\n\t\tif (i >= 0) ligAtoms.splice(i, 1);\n\n\t\tif (ligAtoms.length == 0) ligAtoms = mol.atomAdjList(metalAtom);\n\t\tif (ligAtoms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n\t\t\treturn;\n\t\t}\n\n\t\tmol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n\n\t\tthis.output.mol = mol;\n\t\tthis.output.currentAtom = metalAtom;\n\t\tthis.output.currentBond = -1;\n\t\tthis.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let a of ligAtoms) this.output.selectedMask[a - 1] = true;\n\t}\n\n\tpublic execBond(order:number, type:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\t// one atom subject: this is a request for a new bond\n\t\tif (this.subjectLength == 1)\n\t\t{\n\t\t\tthis.performBondNew(this.subjectIndex[0], order, type);\n\t\t\treturn;\n\t\t}\n\n\t\t// see whether the selected atoms are from 2 disconnected groups, which determines whether it's a change-order operation\n\t\t// or a connect operation\n\t\tlet ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n\t\tlet oneComp = true;\n\t\tfor (let n = ccmol.numAtoms; n >= 1; n--) if (ccmol.atomConnComp(n) != 1) {oneComp = false; break;}\n\t\tif (oneComp)\n\t\t\tthis.performBondChange(order, type);\n\t\telse\n\t\t\tthis.execConnect(order, type);\n\t}\n\n\tpublic execBondGeom(geom:Geometry):void\n\t{\n\t\tlet bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n\t\tif (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0))\n\t\t{\n\t\t\tthis.errmsg = 'The subject must be a single atom or bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.subjectLength == 1)\n\t\t\tthis.performBondGeomAtom(geom, this.subjectIndex[0]);\n\t\telse\n\t\t\tthis.performBondGeomBond(geom, bond);\n\t}\n\n\tpublic execBondAtom(order:number, type:number, element:string, x1:number, y1:number, x2:number, y2:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tlet a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n\t\tif (a1 > 0 && a1 == a2) return; // bond to self\n\t\tif (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0) return;\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tif (a1 == 0) a1 = this.output.mol.addAtom('C', x1, y1);\n\t\tif (a2 == 0) a2 = this.output.mol.addAtom(element, x2, y2);\n\t\tthis.output.mol.addBond(a1, a2, order, type);\n\t}\n\n\tpublic execBondSwitch():void\n\t{\n\t\tif (this.input.altmol)\n\t\t{\n\t\t\tthis.output.mol = this.input.altmol;\n\t\t\tthis.output.altmol = this.input.mol;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\t// decide which bonds are applicable\n\t\tlet src = 0, dst:number[] = [];\n\t\tif (this.subjectLength == 1)\n\t\t{\n\t\t\tsrc = this.subjectIndex[0];\n\t\t\tlet adj = mol.atomAdjList(src);\n\t\t\tfor (let n = 0; n < adj.length; n++) if (mol.atomAdjCount(adj[n]) == 1) dst.push(adj[n]);\n\t\t}\n\t\telse if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n\t\t{\n\t\t\tlet ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n\t\t\tif (ac1 > 1 && ac2 == 1)\n\t\t\t{\n\t\t\t\tsrc = this.subjectIndex[0];\n\t\t\t\tdst.push(this.subjectIndex[1]);\n\t\t\t}\n\t\t\telse if (ac1 == 1 && ac2 > 1)\n\t\t\t{\n\t\t\t\tsrc = this.subjectIndex[1];\n\t\t\t\tdst.push(this.subjectIndex[0]);\n\t\t\t}\n\t\t}\n\n\t\tif (src == 0 || dst.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Subject must include a terminal bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n\t\tif (geoms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t}\n\t}\n\n\tpublic execBondRotate():void\n\t{\n\t\tlet bond = this.input.currentBond;\n\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol;\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot rotate a ring-bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1)\n\t\t{\n\t\t\tthis.errmsg = 'Two-atom components do not rotate.';\n\t\t\treturn;\n\t\t}\n\n\t\tmol = mol.clone();\n\n\t\tlet [atom1, atom2, side] = this.mobileSide(bond, true);\n\t\tlet cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n\t\tlet theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n\t\tfor (let a of side) if (a != atom1)\n\t\t{\n\t\t\tlet dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n\t\t\tlet dtheta = Math.atan2(dy, dx);\n\t\t\tdtheta = theta - angleDiff(dtheta, theta);\n\t\t\tmol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n\t\t}\n\t\tlet mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n\t\tfor (let b = 1; b <= mol.numBonds; b++) if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1])\n\t\t{\n\t\t\tlet bt = mol.bondType(b);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\tif (CoordUtil.sketchEquivalent(this.input.mol, mol))\n\t\t{\n\t\t\tthis.errmsg = 'Rotation has no effect.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execBondAddTwo():void\n\t{\n\t\tif (this.subjectLength != 1)\n\t\t{\n\t\t\tthis.errmsg = 'Subject must be a single atom.';\n\t\t\treturn;\n\t\t}\n\t\tlet atom = this.subjectIndex[0];\n\t\tif (this.input.mol.atomAdjCount(atom) < 2)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atom must already have at least 2 bonds.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n\t\tif (ang.length == 0) ang = SketchUtil.exitVectors(this.input.mol, atom);\n\t\tif (ang.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Could not find a suitable geometry for new substituents.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet baseAng = ang[0];\n\t\tlet cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n\t\tif (ang.length > 1)\n\t\t{\n\t\t\tlet best = 0;\n\t\t\tfor (let n = 0; n < ang.length; n++)\n\t\t\t{\n\t\t\t\tlet x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n\t\t\t\tlet y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n\t\t\t\tlet score = CoordUtil.congestionPoint(this.input.mol, x, y);\n\t\t\t\tif (n == 0 || score < best) {best = score; baseAng = ang[n];}\n\t\t\t}\n\t\t}\n\n\t\tlet ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n\n\t\t// NOTE: maybe try out variations? ... may be better to just leave it as the entirely predictable 60 degrees...\n\n\t\tlet mol = this.input.mol.clone();\n\t\tlet a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n\t\tlet a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n\t\tmol.addBond(atom, a1, 1);\n\t\tmol.addBond(atom, a2, 1);\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execBondInsert():void\n\t{\n\t\tlet mol = this.input.mol, bond = this.input.currentBond;\n\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot insert into a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet [alink, _, side] = this.mobileSide(bond);\n\n\t\tmol = mol.clone();\n\t\tmol.setBondOrder(bond, 1);\n\n\t\tlet fragmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let a of side) fragmask[a - 1] = true;\n\t\tlet frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (fragmask[n - 1] && n != alink)\n\t\t{\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tif (n < alink) alink -= 1;\n\t\t}\n\n\t\tmol.setAtomElement(alink, 'C');\n\t\tmol.setAtomCharge(alink, 0);\n\t\tmol.setAtomUnpaired(alink, 0);\n\t\tmol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n\t\tmol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n\t\tmol.setAtomMapNum(alink, 0);\n\t\tmol.setAtomExtra(alink, []);\n\t\tmol.setAtomTransient(alink, []);\n\n\t\tlet fusion = new TemplateFusion(mol, frag, '');\n\t\tfusion.withGuideOnly = true;\n\t\tfusion.permuteAtom(alink);\n\t\tif (fusion.perms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Unable to insert.'; // should be rare (?)\n\t\t\treturn;\n\t\t}\n\t\tthis.output.mol = fusion.perms[0].mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = alink;\n\t}\n\n\tpublic execJoin():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.errmsg = 'Subject contains no overlapping atoms.';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.zapSubject();\n\t\t}\n\t}\n\n\tpublic execNudge(dir:string, extent:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n\t\tlet dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n\t\t\tthis.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n\t\t}\n\t}\n\n\tpublic execNudgeFar(dir:string):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (this.subjectLength == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'Cannot apply to entire molecule.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n\t\tlet dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n\n\t\tthis.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.execNudge(dir, 1); // convert it to a nudge-lots operation\n\t\t}\n\t}\n\n\tpublic execFlip(axis:string):void\n\t{\n\t\tif (this.input.mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\t\tlet isVertical = axis == 'ver'; // else 'hor'\n\n\t\t// decide where the centre of gravity is, and which atoms are to be affected\n\t\tlet cx = 0, cy = 0;\n\t\tlet mask = this.subjectMask, mol = this.input.mol;\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(this.input.currentAtom);\n\t\t\tcy = mol.atomY(this.input.currentAtom);\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(this.input.currentAtom);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = 0.5 * (box.minX() + box.maxX());\n\t\t\tcy = 0.5 * (box.minY() + box.maxY());\n\t\t\tmask = Vec.booleanArray(true, mol.numAtoms);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\t// perform the flip\n\t\tthis.output.mol = mol.clone();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tif (!isVertical)\n\t\t\t\tthis.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n\t\t\telse\n\t\t\t\tthis.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n\t\t}\n\t}\n\n\tpublic execScale(mag:number):void\n\t{\n\t\tconst {mol, currentAtom, currentBond} = this.input;\n\n\t\tif (mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\n\t\t// special case: a current atom is surrounded by one or more selected atoms - shift them based on what residual component they\n\t\t// belong to; useful also for multidentate ligands\n\t\tif (currentAtom > 0)\n\t\t{\n\t\t\tlet connAtoms:number[] = [];\n\t\t\tfor (let a of this.subjectIndex) if (a != currentAtom && mol.findBond(currentAtom, a) > 0) connAtoms.push(a);\n\t\t\tlet g = Graph.fromMolecule(mol);\n\t\t\tg.isolateNode(currentAtom - 1);\n\n\t\t\tlet anything = false;\n\t\t\tfor (let cc of g.calculateComponentGroups())\n\t\t\t{\n\t\t\t\tVec.addTo(cc, 1);\n\t\t\t\tlet sz = 0, dx = 0, dy = 0;\n\t\t\t\tfor (let a of cc) if (connAtoms.includes(a))\n\t\t\t\t{\n\t\t\t\t\tdx += mol.atomX(a) - mol.atomX(currentAtom);\n\t\t\t\t\tdy += mol.atomY(a) - mol.atomY(currentAtom);\n\t\t\t\t\tsz++;\n\t\t\t\t}\n\t\t\t\tif (sz == 0) continue;\n\n\t\t\t\t[dx, dy] = [dx / sz, dy / sz];\n\t\t\t\tif (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1) continue;\n\t\t\t\t[dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n\n\t\t\t\tif (!this.output.mol) this.output.mol = mol.clone();\n\t\t\t\tfor (let a of cc) this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (anything) return;\n\t\t}\n\n\t\t// special case: subject indicates a non-ring bond, so magnify the bond distance, and shift the component of one/both sides\n\t\tlet b:number;\n\t\tif (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b))\n\t\t{\n\t\t\tlet a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n\t\t\tlet ccmol = mol.clone();\n\t\t\tccmol.deleteBond(b);\n\t\t\tlet idx1:number[] = [], idx2:number[] = [];\n\t\t\tfor (let n = 1; n <= ccmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1)) idx1.push(n);\n\t\t\t\telse if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2)) idx2.push(n);\n\t\t\t}\n\t\t\tlet dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n\t\t\tlet dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n\t\t\tif (idx1.length == idx2.length) {dx *= 0.5; dy *= 0.5;}\n\n\t\t\tthis.output.mol = mol.clone();\n\n\t\t\tif (idx1.length <= idx2.length) for (let n = 0; n < idx1.length; n++)\n\t\t\t{\n\t\t\t\tlet a = idx1[n];\n\t\t\t\tthis.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n\t\t\t}\n\t\t\tif (idx2.length <= idx1.length) for (let n = 0; n < idx2.length; n++)\n\t\t\t{\n\t\t\t\tlet a = idx2[n];\n\t\t\t\tthis.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// scale about centre of gravity\n\t\tlet cx = 0, cy = 0;\n\t\tif (currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(currentAtom);\n\t\t\tcy = mol.atomY(currentAtom);\n\t\t}\n\t\telse if (currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet x = this.output.mol.atomX(this.subjectIndex[n]);\n\t\t\tlet y = this.output.mol.atomY(this.subjectIndex[n]);\n\t\t\tthis.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n\t\t}\n\t}\n\n\tpublic execRotate(theta:number, centreX:number, centreY:number):void\n\t{\n\t\ttheta *= DEGRAD; // (parameter is in degrees)\n\n\t\tlet mol = this.input.mol;\n\n\t\t// if a centre position is indicated, use that\n\t\tif (centreX != null && centreY != null)\n\t\t{\n\t\t\tthis.output.mol = mol.clone();\n\t\t\tlet mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n\t\t\tCoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n\t\t\treturn;\n\t\t}\n\n\t\tif (mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\n\t\t// decide where the centre of gravity is, and which atoms are to be affected\n\t\tlet cx = 0, cy = 0;\n\t\tlet mask = this.subjectMask;\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(this.input.currentAtom);\n\t\t\tcy = mol.atomY(this.input.currentAtom);\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(this.input.currentAtom);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\n\t\t\tif (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1])\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Component is isolated.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = 0.5 * (box.minX() + box.maxX());\n\t\t\tcy = 0.5 * (box.minY() + box.maxY());\n\t\t\tmask = Vec.booleanArray(true, mol.numAtoms);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.subjectLength == 1)\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Component is isolated.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\t// perform the rotation\n\t\tthis.output.mol = mol.clone();\n\t\tCoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n\t}\n\n\tpublic execBondDist(dist:number):void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tlet atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n\t\t\tlet dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n\t\t\tlet sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n\t\t\tlet ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n\t\t\tif (sel1 && !sel2)\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n\t\t\t}\n\t\t\telse if (sel2 && !sel1)\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n\t\t\t\tmol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [atom1, atom2, side] = this.mobileSide(bond);\n\t\t\tlet dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n\t\t\tlet curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n\t\t\tlet ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n\t\t\tfor (let a of side) mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAlignAngle(angle:number):void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot align a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet [atom1, atom2, side] = this.mobileSide(bond);\n\t\tlet cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n\t\tlet delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n\t\tlet cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n\n\t\tfor (let a of side)\n\t\t{\n\t\t\tlet x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n\t\t\tmol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAlignRegular():void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\tlet theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n\t\tif (theta < 0) theta += 360;\n\n\t\tlet snap = Math.round(theta / 30) * 30;\n\t\tif (Math.abs(theta - snap) < 0.001) return; // no change\n\t\tlet delta = (snap - theta) * DEGRAD;\n\n\t\tlet mask = this.input.selectedMask;\n\t\tif (Vec.allFalse(mask))\n\t\t{\n\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = cc == mol.atomConnComp(n);\n\t\t}\n\n\t\tlet cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n\t\t\tlet th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n\t\t\tmol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAdjustTorsion(angle:number):void\n\t{\n\t\t// NOTE: input definition is a awkward; selected = 3 atoms that make up the torsion (A1-A2-A3); current be set to A1, and defines\n\t\t// (A1,A2) such that the angle is A3-A1; these is necessary because the user could be referring to either the acute or obtuse angle;\n\t\t// note that the special case where the 3 atoms are all in the same ring uses the order of selected atoms as a hint, which breaks the\n\t\t// input convention\n\n\t\tif (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3)\n\t\t{\n\t\t\tthis.errmsg = 'Must be 3 selected atoms and a current atom.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tlet a1 = this.input.currentAtom;\n\t\tlet atoms:number[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (n != a1 && this.input.selectedMask[n - 1]) atoms.push(n);\n\t\tlet a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n\t\t\t\t mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n\t\tif (a2 == 0 || mol.findBond(a2, atoms[0]) == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Selected atoms must be consecutive.';\n\t\t\treturn;\n\t\t}\n\t\tlet a3 = atoms[0];\n\n\t\tlet cx = mol.atomX(a2), cy = mol.atomY(a2);\n\t\tlet theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n\t\tlet theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n\t\tlet delta = angle - angleDiff(theta3, theta1);\n\n\t\tlet group1:number[] = [], group3:number[] = [];\n\t\tif (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3))\n\t\t{\n\t\t\tlet g = Graph.fromMolecule(mol);\n\t\t\tg.removeEdge(a2 - 1, a1 - 1);\n\t\t\tg.removeEdge(a2 - 1, a3 - 1);\n\t\t\tlet cc = g.calculateComponents();\n\t\t\tfor (let n = 0; n < g.numNodes; n++)\n\t\t\t{\n\t\t\t\tif (cc[n] == cc[a1 - 1]) group1.push(n + 1);\n\t\t\t\telse if (cc[n] == cc[a3 - 1]) group3.push(n + 1);\n\t\t\t}\n\t\t}\n\t\tif (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2)) group1 = [a1];\n\t\tif (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2)) group3 = [a3];\n\n\t\tCoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n\t\tCoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execMove(refAtom:number, deltaX:number, deltaY:number):void\n\t{\n\t\tlet subj = this.subjectIndex;\n\t\tif (Vec.len(subj) == 0)\n\t\t{\n\t\t\tif (refAtom == 0) return;\n\t\t\tsubj = [refAtom];\n\t\t}\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let a of subj) this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n\t}\n\n\tpublic execRing(ringX:number[], ringY:number[], aromatic:boolean):void\n\t{\n\t\tlet rsz = ringX.length;\n\t\tlet atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n\n\t\tlet outmol = this.input.mol.clone();\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tatoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n\t\t\tif (atoms[n] == 0) atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n\t\t}\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\tbonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n\t\t\tif (bonds[n] == 0) bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n\t\t}\n\n\t\t// if aromaticity is desired, do an extremely crude Kekulisation\n\t\tif (aromatic)\n\t\t{\n\t\t\tlet valence = Vec.numberArray(0, rsz);\n\t\t\tlet pi = Vec.booleanArray(false, rsz);\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tvalence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n\t\t\t\tif (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN) valence[n] -= outmol.atomHExplicit(atoms[n]);\n\t\t\t\tfor (let b of outmol.atomAdjBonds(atoms[n])) valence[n] -= outmol.bondOrder(b);\n\t\t\t\tif (outmol.bondOrder(bonds[n]) >= 2)\n\t\t\t\t{\n\t\t\t\t\tpi[n] = true;\n\t\t\t\t\tif (n < rsz - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tpi[n] = true;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t\telse pi[0] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\t\tif (pi[n] || pi[nn]) continue;\n\n\t\t\t\tif (valence[n] > 0 && valence[nn] > 0)\n\t\t\t\t{\n\t\t\t\t\toutmol.setBondOrder(bonds[n], 2);\n\t\t\t\t\tpi[n] = true;\n\t\t\t\t\tpi[nn] = true;\n\t\t\t\t\tvalence[n]--;\n\t\t\t\t\tvalence[nn]--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.output.mol = outmol;\n\t}\n\n\tpublic execTemplateFusion(frag:Molecule):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tlet fusion = new TemplateFusion(mol, frag, '');\n\t\tif (this.subjectLength == 0) fusion.permuteNone();\n\t\telse if (this.subjectLength == 1) fusion.permuteAtom(this.subjectIndex[0]);\n\t\telse if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n\t\t\tfusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n\t\telse fusion.permuteMulti(this.subjectIndex);\n\n\t\t// package up the results\n\t\tlet permutations:any[] = [];\n\t\tfor (let perm of fusion.perms)\n\t\t{\n\t\t\tlet obj:Record<string, any> = {};\n\t\t\tobj['mol'] = perm.mol.toString();\n\t\t\tobj['display'] = perm.display.toString();\n\t\t\tobj['molidx'] = perm.molidx;\n\t\t\tobj['temidx'] = perm.temidx;\n\t\t\tobj['srcidx'] = perm.srcidx;\n\t\t\tpermutations.push(obj);\n\t\t}\n\t\tthis.output.permutations = permutations;\n\t}\n\n\tpublic execAbbrevTempl():void\n\t{\n\t\t/*\n\t\t// note: 'fusion' needs to ensure that permutation 0 is the one to use\n\t\tlet perm = fusion.getPerm(0)\n\t\tlet fused = perm.mol\n\t\tvar srcidx = perm.srcidx\n\n\t\t// consider the possibility that we might be wanting to convert a terminal atom directly into an abbreviation\n\t\tlet midx = perm.midx\n\t\tlet markback = (!perm.bridged && !perm.guided && midx.count == 1 && instate.mol.atomAdjCount(midx[0]) == 1)\n\t\t\t\t\t|| (perm.guided && midx.count == 1 && fusion.numAttach == 2)\n\t\tif markback\n\t\t{\n\t\t\tlet i = indexOf(midx[0], srcidx)\n\t\t\tif i >= 0 {srcidx[i] = 0} // mark it part of the graft-on, not the original\n\t\t}\n\n\t\t// see if it really can be done\n\t\tvar srcmask = boolArray(false, srcidx.count)\n\t\tfor n in 0 ..< srcidx.count {srcmask[n] = srcidx[n] > 0}\n\t\tlet mol = MolUtil.convertToAbbrev(fused, srcmask:srcmask, abbrevName:fusion.abbrev)\n\t\tif mol == nil\n\t\t{\n\t\t\tmessage = \"Inline abbreviations must be terminal with exactly one attachment point.\";\n\t\t\treturn false\n\t\t}\n\n\t\tif !doCommit {return true}\n\n\t\tzapSubject()\n\t\toutstate.mol = mol!\n\t\toutstate.currentAtom = mol!.numAtoms\n\n\t\treturn true\n*/\n\t}\n\n\tpublic execAbbrevGroup():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (!this.checkAbbreviationReady()) return;\n\n\t\tlet mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n\t\tif (mol == null)\n\t\t{\n\t\t\t// (probably already filtered out from above)\n\t\t\tthis.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n\t\t\treturn;\n\t\t}\n\t\tif (AbbrevContainer.main)\n\t\t{\n\t\t\tAbbrevContainer.main.submitMolecule(mol, true);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n)) AbbrevContainer.main.substituteAbbrevName(mol, n);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = mol.numAtoms;\n\t}\n\n\tpublic execAbbrevFormula():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (!this.checkAbbreviationReady()) return;\n\n\t\tlet fixed = this.input.mol.clone();\n\t\tfor (let n = 1; n <= fixed.numAtoms; n++) fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n\t\tlet abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n\t\tlet formula = MolUtil.molecularFormula(abv, true);\n\n\t\tlet mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n\t\tif (mol == null)\n\t\t{\n\t\t\t// (probably already filtered out from above)\n\t\t\tthis.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = mol.numAtoms;\n\t}\n\n\tpublic execAbbrevClear():void\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n of this.subjectIndex) if (MolUtil.hasAbbrev(this.input.mol, n)) idx.push(n);\n\n\t\tif (idx.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No abbreviations to clear.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tfor (let n of idx) MolUtil.clearAbbrev(mol, n);\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAbbrevExpand():void\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n of this.subjectIndex) if (MolUtil.hasAbbrev(this.input.mol, n)) idx.push(n);\n\n\t\tif (idx.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No abbreviations to expand.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tfor (let n of idx) MolUtil.expandOneAbbrev(mol, n, true);\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t}\n\n\tpublic execBondArtifact(activity:ActivityType):void\n\t{\n\t\tif (!this.requireAtoms() || !this.requireSubject()) return;\n\n\t\tlet artif = new BondArtifact(this.input.mol.clone());\n\t\tlet subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n\t\tif (curAtom > 0 && subject.indexOf(curAtom) < 0) subject.push(curAtom);\n\n\t\tif (activity == ActivityType.BondArtifactPath)\n\t\t{\n\t\t\tif (!artif.createPath(subject)) {this.errmsg = 'Path artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactRing)\n\t\t{\n\t\t\tif (!artif.createRing(subject)) {this.errmsg = 'Ring artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactArene)\n\t\t{\n\t\t\tif (!artif.createArene(subject)) {this.errmsg = 'Arene artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactClear)\n\t\t{\n\t\t\tif (!artif.removeArtifact(subject))\n\t\t\t{\n\t\t\t\tif (this.removePolymerBlock(subject)) return;\n\n\t\t\t\tthis.errmsg = 'No artifact removed.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tartif.rewriteMolecule();\n\t\tthis.output.mol = artif.mol;\n\t}\n\n\tpublic execPolymerBlock():void\n\t{\n\t\tif (!this.requireAtoms() || !this.requireSubject()) return;\n\t\tif (this.owner) this.owner.performPolymerBlock(this.subjectIndex);\n\t}\n\n\tpublic execAddHydrogens():void\n\t{\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (!this.requireAtoms()) return;\n\t\tlet atoms = this.subjectIndex;\n\t\tif (atoms.length == 0) atoms = Vec.identity1(mol.numAtoms);\n\n\t\tfor (let a of atoms)\n\t\t{\n\t\t\tlet hc = mol.atomHydrogens(a);\n\t\t\tif (hc > 0) SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n\t\t}\n\n\t\tif (mol.numAtoms == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'Nothing needs to be added.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execRemoveHydrogens():void\n\t{\n\t\tif (!this.requireAtoms()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tlet selmask = this.subjectMask;\n\t\tif (Vec.allFalse(selmask)) selmask = Vec.booleanArray(true, mol.numAtoms);\n\t\tlet keepmask = Vec.booleanArray(true, mol.numAtoms);\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.boringHydrogen(mol, n))\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(n)[0];\n\t\t\tif (selmask[n - 1] || selmask[nbr - 1]) keepmask[n - 1] = false;\n\t\t}\n\n\t\tif (Vec.allTrue(keepmask))\n\t\t{\n\t\t\tthis.errmsg = 'Nothing to be deleted.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = MolUtil.subgraphMask(mol, keepmask);\n\t}\n\n\tpublic execQueryClear():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tconst {currentBond} = this.input;\n\t\tif (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond))\n\t\t{\n\t\t\tQueryUtil.deleteQueryBondAll(mol, currentBond);\n\t\t\tthis.output.mol = mol;\n\t\t\treturn;\n\t\t}\n\n\t\tlet anything = false;\n\t\tfor (let a of this.subjectIndex) if (QueryUtil.hasAnyQueryAtom(mol, a))\n\t\t{\n\t\t\tQueryUtil.deleteQueryAtomAll(mol, a);\n\t\t\tanything = true;\n\t\t}\n\t\tfor (let b = 1; b <= mol.numBonds; b++) if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b))\n\t\t{\n\t\t\tQueryUtil.deleteQueryBondAll(mol, b);\n\t\t\tanything = true;\n\t\t}\n\n\t\tif (anything)\n\t\t\tthis.output.mol = mol;\n\t\telse\n\t\t\tthis.errmsg = 'No query terms to clear.';\n\t}\n\n\tpublic execQueryCopy():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tconst {mol, currentBond} = this.input;\n\n\t\tif (currentBond > 0)\n\t\t{\n\t\t\tif (!QueryUtil.hasAnyQueryBond(mol, currentBond))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Bond has no query terms.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet qmol = new Molecule();\n\t\t\tqmol.addAtom('*', 0, 0);\n\t\t\tqmol.addAtom('*', Molecule.IDEALBOND, 0);\n\t\t\tqmol.addBond(1, 2, 1);\n\t\t\tqmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n\t\t\tthis.toClipboard = qmol.toString();\n\t\t}\n\t\telse if (this.subjectLength == 1)\n\t\t{\n\t\t\tlet atom = this.subjectIndex[0];\n\t\t\tif (!QueryUtil.hasAnyQueryAtom(mol, atom))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Atom has no query terms.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet qmol = new Molecule();\n\t\t\tqmol.addAtom('*', 0, 0);\n\t\t\tqmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n\t\t\tthis.toClipboard = qmol.toString();\n\t\t}\n\t\telse this.errmsg = 'Subject has to be a single atom or bond.';\n\t}\n\n\tpublic execQueryPaste():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet qmol = this.param.qmol;\n\t\tif (!qmol) {}\n\t\telse if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1))\n\t\t{\n\t\t\tlet mol = this.output.mol = this.input.mol.clone();\n\t\t\tlet qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n\t\t\t\tmol.setAtomExtra(a, [...aterms, ...qterms]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\telse if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n\t\t\t\t qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1))\n\t\t{\n\t\t\tlet mol = this.output.mol = this.input.mol.clone();\n\t\t\tlet qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n\t\t\tfor (let b = 1; b <= mol.numBonds; b++) if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1])\n\t\t\t{\n\t\t\t\tlet bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n\t\t\t\tmol.setBondExtra(b, [...bterms, ...qterms]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.errmsg = 'Unable to paste query terms.';\n\t}\n\n\tpublic execQuerySetAtom():void\n\t{\n\t\t// TODO\n\t}\n\n\tpublic execQuerySetBond():void\n\t{\n\t\t// TODO\n\t}\n\n\tpublic execQueryBondAny():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tconst {mol, currentBond} = this.input;\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) bonds.push(n);\n\t\tif (bonds.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Must select at least one bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tfor (let b of bonds)\n\t\t{\n\t\t\tthis.output.mol.setBondOrder(b, 0);\n\t\t\tQueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n\t\t}\n\t}\n\n\tpublic execSproutDirection(deltaX:number, deltaY:number):void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\t\tif (deltaX == 0 && deltaY == 0) return;\n\n\t\tconst {mol, currentAtom} = this.input;\n\n\t\tlet angleOptions:number[];\n\t\tif (mol.atomAdjCount(currentAtom) == 0)\n\t\t\tangleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n\t\telse\n\t\t\tangleOptions = SketchUtil.primeDirections(mol, currentAtom) ?? SketchUtil.exitVectors(mol, currentAtom);\n\t\tif (angleOptions.length == 0) return;\n\n\t\tlet theta = Math.atan2(deltaY, deltaX);\n\t\tlet idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n\t\tlet px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n\t\tlet py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n\n\t\tthis.output.mol = mol.clone();\n\t\tlet newAtom = this.output.mol.addAtom('C', px, py);\n\t\tthis.output.mol.addBond(currentAtom, newAtom, 1);\n\t\tthis.output.mol = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms)) ?? this.output.mol;\n\n\t\tfor (let n = 1; n <= this.output.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n\t\t\tif (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ)\n\t\t\t{\n\t\t\t\tthis.output.currentAtom = n;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t// input: (standard)\n\t// output: (standard)\n\tpublic void execBondInsert() throws Exception\n\t{\n\t\tif (!requireSubject()) return;\n\n\t\tif (currentBond == 0)\n\t\t{\n\t\t\terrmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.bondInRing(currentBond))\n\t\t{\n\t\t\terrmsg = 'Cannot insert into a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tint[][] sides = MolUtil.getBondSides(mol, currentBond);\n\t\tint[] side1 = sides[0], side2 = sides[1];\n\t\tint[] atoms = null;\n\t\tint a1 = mol.bondFrom(currentBond), a2 = mol.bondTo(currentBond);\n\t\tboolean sel1 = selectedMask[a1 - 1], sel2 = selectedMask[a2 - 1];\n\t\tif (sel1 && !sel2) atoms = side1;\n\t\telse if (!sel1 && sel2) atoms = side2;\n\t\telse if (side1.length < side2.length) atoms = side1;\n\t\telse atoms = side2;\n\n\t\tint alink = Vec.indexOf(a1, atoms) >= 0 ? a1 : a2;\n\t\toutmol = mol.clone();\n\t\toutmol.setBondOrder(currentBond, 1);\n\n\t\tboolean[] fragmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (int n = 0; n < atoms.length; n++) fragmask[atoms[n] - 1] = true;\n\t\tMolecule frag = MolUtil.subgraphWithAttachments(outmol, fragmask);\n\n\t\tfor (int n = outmol.numAtoms; n >= 1; n--) if (fragmask[n - 1] && n != alink)\n\t\t{\n\t\t\toutmol.deleteAtomAndBonds(n);\n\t\t\tif (n < alink) alink--;\n\t\t}\n\n\t\tmol.setAtomElement(alink, \"C\");\n\t\tmol.setAtomCharge(alink, 0);\n\t\tmol.setAtomUnpaired(alink, 0);\n\t\tmol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n\t\tmol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n\t\tmol.setAtomMapNum(alink, 0);\n\t\tmol.setAtomExtra(alink, null);\n\t\tmol.setAtomTransient(alink, null);\n\n\t\tTemplateFusion fusion = new TemplateFusion(outmol, frag, \"\");\n\t\tfusion.setWithGuideOnly(true);\n\t\tfusion.permuteAtom(alink);\n\t\tif (fusion.numPerms() == 0)\n\t\t{\n\t\t\t// (should be rare or impossible)\n\t\t\terrmsg = 'Unable to insert an atom.';\n\t\t\treturn;\n\t\t}\n\n\t\toutmol = fusion.getPerm(0).mol;\n\t\tzapSubject();\n\t\toutCurrentAtom = alink;\n\t}*/\n\n\t// ----------------- private methods -----------------\n\n\t// if there is no subject, sets the error message and returns false\n\tprivate requireSubject():boolean\n\t{\n\t\tif (this.subjectLength == 0) this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n\t\treturn this.subjectLength > 0;\n\t}\n\n\t// complains if there aren't any atoms\n\tprivate requireAtoms():boolean\n\t{\n\t\tif (this.input.mol.numAtoms == 0) this.errmsg = 'There are no atoms.';\n\t\treturn this.input.mol.numAtoms > 0;\n\t}\n\n\t// complains if there's no current atom/bond\n\tprivate requireCurrent():boolean\n\t{\n\t\tif (this.input.currentAtom == 0 && this.input.currentBond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current atom or bond.';\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// complains if there are no selected atoms\n\tprivate requireSelected():boolean\n\t{\n\t\tif (!this.hasSelected) this.errmsg = 'No atoms are selected.';\n\t\treturn this.hasSelected;\n\t}\n\n\t// for a set of groups of atoms, select one that is represented by the current subject; optionally advanced\n\t// to the next group\n\tprivate pickSelectedGroup(groups:number[][], dir:number):number\n\t{\n\t\tif (this.subjectLength == 0) return 0;\n\n\t\t// if any is all-selected, that's the starting point (+ dir)\n\t\tfor (let i = 0; i < groups.length; i++)\n\t\t{\n\t\t\tlet g = groups[i];\n\t\t\tlet all = true;\n\t\t\tfor (let j = 0; j < g.length; j++) if (!this.subjectMask[g[j] - 1])\n\t\t\t{\n\t\t\t\tall = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (all)\n\t\t\t{\n\t\t\t\ti += dir;\n\t\t\t\treturn i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n\t\t\t}\n\t\t}\n\n\t\t// anything partly selected will do\n\t\tfor (let i = 0; i < groups.length; i++)\n\t\t{\n\t\t\tlet g = groups[i];\n\t\t\tfor (let j = 0; j < g.length; j++) if (this.subjectMask[g[j] - 1]) return i;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// makes sure output has no subject of any kind\n\tprivate zapSubject():void\n\t{\n\t\tthis.output.currentAtom = 0;\n\t\tthis.output.currentBond = 0;\n\t\tthis.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n\t}\n\n\t// support for bond addition\n\tprivate performBondNew(atom:number, order:number, type:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n\t\tif (ang.length == 0) ang = SketchUtil.exitVectors(mol, atom);\n\t\tif (ang.length == 0)\n\t\t{\n\t\t\t// (probably impossible...)\n\t\t\tthis.errmsg = 'Could not find a suitable geometry for a new substituent.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet bx:number[] = [], by:number[] = [], bscore:number[] = [];\n\t\tfor (let n = 0; n < ang.length; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n\t\t\tlet y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n\t\t\tlet score = CoordUtil.congestionPoint(mol, x, y);\n\t\t\tif (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n\t\t\t\tscore += Math.abs(angleNorm(ang[n])) * 1E-8; // rounding error bias for pointing right\n\t\t\telse\n\t\t\t\tscore += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8; // bias for pointing up\n\n\t\t\tbx.push(x);\n\t\t\tby.push(y);\n\t\t\tbscore.push(score);\n\t\t}\n\t\tlet idx = Vec.idxSort(bscore);\n\n\t\tthis.output.mol = mol.clone();\n\t\tlet anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n\t\tif (anum == 0) anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n\t\tMolUtil.addBond(this.output.mol, atom, anum, order, type);\n\n\t\tif (idx.length >= 2)\n\t\t{\n\t\t\tthis.output.altmol = mol.clone();\n\t\t\tanum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n\t\t\tif (anum == 0) anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n\t\t\tMolUtil.addBond(this.output.altmol, atom, anum, order, type);\n\t\t}\n\t}\n\n\t// support for bond order\n\tprivate performBondChange(order:number, type:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\tif (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) bonds.push(n);\n\n\t\tlet switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n\t\tlet stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n\t\tlet anyChange = switchType;\n\n\t\tfor (let n = 0; n < bonds.length && !anyChange; n++)\n\t\t{\n\t\t\tlet b = bonds[n];\n\t\t\tif (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL) anyChange = true;\n\t\t\telse if (mol.bondType(b) != type) anyChange = true;\n\t\t}\n\n\t\tif (!anyChange)\n\t\t{\n\t\t\tthis.errmsg = 'No bond changes made.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tfor (let n = 0; n < bonds.length; n++)\n\t\t{\n\t\t\tlet b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n\n\t\t\tif (switchType && this.output.mol.bondType(b) == type)\n\t\t\t{\n\t\t\t\tthis.output.mol.setBondFromTo(b, bto, bfr);\n\t\t\t}\n\t\t\telse if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type)\n\t\t\t{\n\t\t\t\tif (!stereoType && order != this.output.mol.bondOrder(b)) this.output.mol.setBondOrder(b, order);\n\t\t\t\telse this.output.mol.setBondType(b, type);\n\t\t\t}\n\t\t\telse if (switchType)\n\t\t\t{\n\t\t\t\tthis.output.mol.setBondFromTo(b, bto, bfr);\n\t\t\t}\n\t\t}\n\t}\n\n\t// support for atom-geometry\n\tprivate performBondGeomAtom(geom:Geometry, atom:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n\n\t\tif (asz > gsz)\n\t\t{\n\t\t\tthis.errmsg = 'The current atom has more bonds than does the selected geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// isolated atom: defer to the regular add-bond feature\n\t\tif (asz == 0)\n\t\t{\n\t\t\tthis.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n\t\t\treturn;\n\t\t}\n\n\t\t// already at limit: only refit applies\n\t\tif (asz == gsz)\n\t\t{\n\t\t\tthis.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n\t\t\tif (this.output.mol == null) this.errmsg = 'Could not re-fit the atom geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// decide whether to refit, or add a new bond onto a vacant slot\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom);\n\t\tlet newang = SketchUtil.mapAngleSubstituent(geom, ang);\n\n\t\t// doesn't match, so refit\n\t\tif (newang == null)\n\t\t{\n\t\t\tthis.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n\t\t\tif (this.output.mol == null) this.errmsg = 'Could not re-fit the atom geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// add new bond\n\t\tthis.output.mol = mol.clone();\n\t\tlet theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n\t\tlet x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n\t\tlet y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n\t\tlet anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n\t\tif (anum == 0) anum = this.output.mol.addAtom('C', x, y);\n\t\tMolUtil.addBond(this.output.mol, atom, anum, 1);\n\t}\n\n\t// support for bond-geometry\n\tprivate performBondGeomBond(geom:Geometry, bond:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\t// examine both sides (bfr,bto): make sure that 'bto' is terminal, else error\n\t\tlet bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tlet ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n\t\tif (ac1 > 1 && ac2 == 1) {}\n\t\telse if (ac1 == 1 && ac2 > 1) {let t = ac1; ac1 = ac2; ac2 = t;}\n\t\telse\n\t\t{\n\t\t\tthis.errmsg = 'One end of the bond must be terminal.';\n\t\t\treturn;\n\t\t}\n\n\t\t// consider possible angles that the bond can be migrated to\n\t\tlet adj = mol.atomAdjList(bfr);\n\t\tlet x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n\t\tlet x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n\t\tlet ang:number[] = [];\n\t\tfor (let n = 0, p = 0; n < adj.length; n++) if (adj[n] != bto)\n\t\t{\n\t\t\tang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n\t\t}\n\t\tlet newang = SketchUtil.mapAngleSubstituent(geom, ang);\n\t\tif (newang == null)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\t// pick the one that has the lowest angular increment from the current angle, i.e. around the clock\n\t\tlet bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n\t\tlet curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n\n\t\tfor (let n = 0; n < newang.length; n++)\n\t\t{\n\t\t\tlet th = angleDiff(newang[n], curth);\n\t\t\tif (th < 0) th += TWOPI;\n\t\t\tif (n > 0 && th > bestAng) continue;\n\n\t\t\tlet x = x1 + r * Math.cos(th + curth);\n\t\t\tlet y = y1 + r * Math.sin(th + curth);\n\t\t\tif (CoordUtil.atomAtPoint(mol, x, y) > 0) continue;\n\n\t\t\tbestAng = th;\n\t\t\tbestX = x;\n\t\t\tbestY = y;\n\t\t}\n\t\tif (bestAng > TWOPI)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\t\tthis.output.mol.setAtomPos(bto, bestX, bestY);\n\t}\n\n\t// returns true only if the subject matter is ready to be turned into a terminal inline abbreviation\n\tprivate checkAbbreviationReady():boolean\n\t{\n\t\tlet junction = 0;\n\n\t\tlet mol = this.input.mol, subjmask = this.subjectMask;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n\t\t\tlet atom = 0;\n\n\t\t\tif ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n\t\t\t\t(subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2)))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Already an abbreviation.';\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (subjmask[b1 - 1] && !subjmask[b2 - 1]) atom = b1;\n\t\t\telse if (subjmask[b2 - 1] && !subjmask[b1 - 1]) atom = b2;\n\n\t\t\tif (atom == 0 || atom == junction) {}\n\t\t\telse if (junction == 0) junction = atom;\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.errmsg = 'The selected group must be terminal.';\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// assuming the bond is not in a ring, figures out which side is \"lighter\", and returns the opposite; note that if one of the two\n\t// bond atoms is selected, then that one is picked preferentially; if requested, it will not consider a \"terminal\" end\n\tprivate mobileSide(bond:number, disqualTerminal = false):[number, number, number[]]\n\t{\n\t\tlet {mol} = this.input;\n\t\tlet atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.removeEdge(atom1 - 1, atom2 - 1);\n\t\tlet side1:number[] = [], side2:number[] = [];\n\t\tfor (let grp of g.calculateComponentGroups())\n\t\t{\n\t\t\tif (grp.includes(atom1 - 1)) side1 = Vec.add(grp, 1);\n\t\t\tif (grp.includes(atom2 - 1)) side2 = Vec.add(grp, 1);\n\t\t}\n\t\tlet weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n\t\tlet weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n\t\tlet sel1 = false, sel2 = false;\n\t\tfor (let a of side1) if (this.isSelected(a)) {sel1 = true; break;}\n\t\tfor (let a of side2) if (this.isSelected(a)) {sel2 = true; break;}\n\n\t\tif (disqualTerminal && mol.atomAdjCount(atom1) == 1) return [atom2, atom1, side2];\n\t\telse if (disqualTerminal && mol.atomAdjCount(atom2) == 1) return [atom1, atom2, side1];\n\t\telse if (sel1 && !sel2) {}\n\t\telse if ((sel2 && !sel1) || weight2 < weight1) return [atom2, atom1, side2];\n\t\treturn [atom1, atom2, side1];\n\t}\n\n\t// returns true if the atom is indicated in the selection mask of the input, if there is one\n\tprivate isSelected(atom:number):boolean\n\t{\n\t\tlet mask = this.input.selectedMask;\n\t\treturn mask ? mask[atom - 1] : false;\n\t}\n\n\t// if the atoms overlap with a polymer block, zap it, apply the results, and return true\n\tprivate removePolymerBlock(atoms:number[]):boolean\n\t{\n\t\tlet polymer = new PolymerBlock(this.input.mol.clone());\n\n\t\tfor (let id of polymer.getIDList())\n\t\t{\n\t\t\tlet unit = polymer.getUnit(id);\n\t\t\tfor (let atom of atoms) if (unit.atoms.includes(atom))\n\t\t\t{\n\t\t\t\tpolymer.removeUnit(id);\n\t\t\t\tpolymer.rewriteMolecule();\n\t\t\t\tthis.output.mol = polymer.mol;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ButtonView} from './ButtonView';\n\n/*\n\tButtonBank: abstract base class for providing a \"bank of buttons\". The instance is expected to server up a list\n\tof renderable buttons, and to respond when buttons are pressed. A ButtonBank is always owned by a ButtonView instance,\n\twhich calls the shots.\n\n\tContent:\n\t\t.buttons: an array of buttons, each of them an object with the following properties:\n\t\t\t.id: identification code supplied when a button is activated\n\t\t\t.imageFN: root prefix for a static image to display\n\t\t\t.metavec: metavector data to display instead of an image (raw data, not object)\n\t\t\t.helpText: explanatory text\n\t\t\t.isSubMenu: true if the button should be annotated with a submenu glyph\n\t\t\t.mnemonic: optional keyboard shortcut & annotation\n\t\t.ownerView: the molsync.ui.ButtonView object that owns this buttonbank; gets set after the constructor is called\n*/\n\nexport interface ButtonBankItem\n{\n\tid:string;\n\timageFN?:string; // provide a URL for the SVG...\n\tsvg?:string; // ... or provide the SVG text directly\n\tmetavec?:any; // either an instance of MetaVector or a dictionary that can be used to make one (server-generated: semi-deprecated)\n\thelpText:string;\n\tisSubMenu?:boolean;\n\tmnemonic?:string; // key combination for display with modifiers, e.g. Shift+X, which gets interpreted for action purposes\n\tkey?:string; // from KeyCode; overrides the key part of the mnemonic\n\ttext?:string;\n}\n\nexport abstract class ButtonBank\n{\n\tpublic buttonView:ButtonView; // the widget parent\n\tpublic isSubLevel = false; // true if it's not the first-on-stack\n\tpublic buttons:ButtonBankItem[] = [];\n\n\tconstructor() {}\n\n\t// called when the bank is added to a view; the .ownerView property will be set at this point\n\tpublic init():void {}\n\n\t// update the list of buttons; this may be called more than once, e.g. when resizing, or being popped back off the stack; this\n\t// method must be overridden\n\tpublic abstract update():void;\n\n\t// this gets called when a button is activated, i.e. clicked\n\tpublic abstract hitButton(id:string):void;\n\n\t// a key has been pressed: the button bank may choose to react to it\n\tpublic claimKey(event:KeyboardEvent):boolean {return false;}\n\n\t// override to capture the closing of the bank (a cleanup opportunity)\n\tpublic bankClosed() {}\n\n\t// utility function: returns true if the system-generated keyboard event for a \"keypress\" action matches the mnemonic string (which is\n\t// used as a shorthand in the button definitions); the mnemonic format is basically:\n\t//\n\t//     {modifier1}-{modifier2}-...-{keychar}\n\t//\n\t// where the modifiers consist of Shift-, Ctrl-, Alt-; and the keychar is usually a plain keyboard character which is case insensitive - with\n\t// special word codes for unprintables\n\tpublic static matchKey(event:KeyboardEvent, mnemonic:string, key:string):boolean\n\t{\n\t\tif (mnemonic == null || mnemonic == '') return false;\n\n\t\tlet mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n\t\twhile (true)\n\t\t{\n\t\t\tif (mkey.startsWith('Shift+')) {mshift = true; mkey = mkey.substring(6);}\n\t\t\telse if (mkey.startsWith('Ctrl+')) {mctrl = true; mkey = mkey.substring(5);}\n\t\t\telse if (mkey.startsWith('Alt+')) {malt = true; mkey = mkey.substring(4);}\n\t\t\telse if (mkey.startsWith('Cmd+')) {mmeta = true; mkey = mkey.substring(4);}\n\t\t\telse break;\n\t\t}\n\n\t\t//console.log('MatchKey:',{mkey,mshift,mctrl,malt,mmeta});\n\n\t\tif (mshift != event.shiftKey) return false;\n\t\tif (mctrl != event.ctrlKey) return false;\n\t\tif (malt != event.altKey) return false;\n\t\tif (mmeta != event.metaKey) return false;\n\n\t\tif (key) mkey = key; // override\n\n\t\treturn mkey.toLowerCase() == event.key.toLowerCase();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tGiven a metal centre, and some number of atoms that are (or should be) connected to the metal, finds an aesthetically acceptable arrangement. It\n\tassumes that the ligands themselves are arranged and only need to be oriented. If there are metal-bonded atoms that are not listed in the parameter,\n\tthese will be treated as fixed obstacles.\n*/\n\ninterface Ligand\n{\n\tatoms:number[]; // all atoms of the ligand\n\tattach:number[]; // attachment points to the metal\n\tavgTheta?:number; // average extension of the ligand attachment point(s)\n}\n\nexport class MetalLigate\n{\n\tprivate mol:Molecule;\n\tprivate ligands:Ligand[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(mol:Molecule, private metalAtom:number, private ligandAttach:number[])\n\t{\n\t\tthis.mol = mol.clone();\n\t}\n\n\t// creates enough fragments to cover all of the incoming atoms; throws a DepictorFaultException if anything goes wrong\n\tpublic generate():Molecule\n\t{\n\t\tconst {mol, metalAtom, ligandAttach, ligands} = this;\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.isolateNode(metalAtom - 1);\n\t\tfor (let cc of g.calculateComponentGroups())\n\t\t{\n\t\t\tVec.addTo(cc, 1);\n\t\t\tlet anything = false;\n\t\t\tfor (let a of ligandAttach) if (cc.indexOf(a) >= 0) {anything = true; break;}\n\t\t\tif (!anything) continue;\n\n\t\t\tlet lig:Ligand = {atoms: cc, attach: []};\n\t\t\tlig.atoms = cc;\n\t\t\tlet anyAttached = false;\n\t\t\tfor (let a of lig.atoms) if (mol.findBond(a, metalAtom) > 0) {anyAttached = true; break;}\n\t\t\tfor (let a of lig.atoms)\n\t\t\t{\n\t\t\t\tlet bonded = mol.findBond(a, metalAtom) > 0;\n\t\t\t\tif (bonded || (!anyAttached && ligandAttach.includes(a))) lig.attach.push(a);\n\t\t\t}\n\t\t\tligands.push(lig);\n\n\t\t\tfor (let a of lig.attach) if (mol.findBond(a, metalAtom) == 0) this.makeLigandBond(a);\n\t\t}\n\n\t\tif (ligands.length == 0) throw new Error('No ligand atoms');\n\n\t\t// figure out angular projections for ligands (both fixed and motile)\n\n\t\tlet otherLigands = mol.atomAdjList(metalAtom);\n\t\tfor (let lig of ligands) otherLigands = Vec.exclude(otherLigands, lig.attach);\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet otherTheta:number[] = new Array(otherLigands.length);\n\t\tfor (let n = 0; n < otherLigands.length; n++) otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n\n\t\tfor (let lig of ligands)\n\t\t{\n\t\t\tif (lig.attach.length == 1)\n\t\t\t{\n\t\t\t\tlet a = lig.attach[0];\n\t\t\t\tlig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n\t\t\t\tthis.orientLigand(lig);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// figure out the average, without recursion errors\n\t\t\t\tlet theta:number[] = new Array(lig.attach.length);\n\t\t\t\tfor (let n = 0; n < lig.attach.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet a = lig.attach[n];\n\t\t\t\t\ttheta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n\t\t\t\t}\n\t\t\t\ttheta = GeomUtil.sortAngles(theta);\n\t\t\t\tlet base = theta[0];\n\t\t\t\tfor (let n = 0; n < theta.length; n++) theta[n] = angleDiffPos(theta[n], base);\n\t\t\t\tlig.avgTheta = base + Vec.sum(theta) / theta.length;\n\n\t\t\t\tthis.orientLigand(lig);\n\t\t\t}\n\t\t}\n\n\t\t// overall cases: arrange around as many fixed references as necessary\n\n\t\tif (otherLigands.length == 0)\n\t\t{\n\t\t\tligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n\t\t\tthis.arrangeLigandsFree(ligands);\n\t\t}\n\t\telse if (otherLigands.length == 1)\n\t\t{\n\t\t\tligands.sort((l1, l2) =>\n\t\t\t{\n\t\t\t\tlet diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n\t\t\t\tlet diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n\t\t\t\treturn signum(diff1 - diff2);\n\t\t\t});\n\t\t\tthis.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet otherOrder = Vec.idxSort(otherTheta);\n\t\t\tfor (let n = 0; n < otherOrder.length; n++)\n\t\t\t{\n\t\t\t\tlet nn = (n + 1) % otherOrder.length;\n\t\t\t\tlet theta = otherTheta[otherOrder[n]];\n\t\t\t\tlet extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n\n\t\t\t\tlet batch:Ligand[] = [];\n\t\t\t\tfor (let lig of ligands)\n\t\t\t\t{\n\t\t\t\t\tlet diff = angleDiffPos(lig.avgTheta, theta);\n\t\t\t\t\tif (diff < extent) batch.push(lig);\n\t\t\t\t}\n\t\t\t\tif (batch.length == 0) continue;\n\t\t\t\tbatch.sort((l1, l2) =>\n\t\t\t\t{\n\t\t\t\t\tlet diff1 = angleDiffPos(l1.avgTheta, theta);\n\t\t\t\t\tlet diff2 = angleDiffPos(l2.avgTheta, theta);\n\t\t\t\t\treturn signum(diff1 - diff2);\n\t\t\t\t});\n\t\t\t\tthis.arrangeLigandsRange(batch, theta, extent, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.resolveClashes();\n\n\t\treturn mol;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// make ligand atom bonded to metal; pick a reasonable bond order\n\tprivate makeLigandBond(ligAtom:number):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n\t\tif (mchg > 0 && lchg < 0)\n\t\t{\n\t\t\tmol.setAtomCharge(metalAtom, mchg - 1);\n\t\t\tmol.setAtomCharge(ligAtom, lchg + 1);\n\t\t\tmol.addBond(metalAtom, ligAtom, 1);\n\t\t\treturn;\n\t\t}\n\t\tif (mchg < 0 && lchg > 0)\n\t\t{\n\t\t\tmol.setAtomCharge(metalAtom, mchg + 1);\n\t\t\tmol.setAtomCharge(ligAtom, lchg - 1);\n\t\t\tmol.addBond(metalAtom, ligAtom, 1);\n\t\t\treturn;\n\t\t}\n\n\t\tlet order = 0;\n\t\tif (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0) order = 1;\n\t\tmol.addBond(metalAtom, ligAtom, order);\n\t}\n\n\t// assuming multiple attachment points, orient the ligand so that each of its attachment points are equidistant from the metal, using the average\n\t// theta value as the guideline\n\tprivate orientLigand(lig:Ligand):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet lsz = lig.atoms.length, asz = lig.attach.length;\n\t\tlet idxAttach:number[] = new Array(asz);\n\t\tfor (let n = 0; n < asz; n++) idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n\n\t\t// step 1: extend the ligand out along its axis, so the bonds are long\n\t\tlet lx:number[] = new Array(lsz), ly:number[] = new Array(lsz);\n\t\tlet ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n\t\tlet molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n\t\tlet dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlx[n] = mol.atomX(lig.atoms[n]) + dx;\n\t\t\tly[n] = mol.atomY(lig.atoms[n]) + dy;\n\t\t}\n\n\t\t// step 2: rotate in increments to get approximately the best orientation, in order to find the preferred ordering\n\t\tlet cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n\t\tlet weight:number[] = [];\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlet closest = Number.POSITIVE_INFINITY;\n\t\t\tfor (let idx of idxAttach) closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n\t\t\tweight.push(1.0 / (1 + Math.sqrt(closest)));\n\t\t}\n\t\tlet bestScore = Number.POSITIVE_INFINITY;\n\t\tlet bestLX:number[] = null, bestLY:number[] = null;\n\t\tfor (let theta = 0; theta < 360; theta += 15)\n\t\t{\n\t\t\tlet cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n\t\t\tlet rx:number[] = new Array(lsz), ry:number[] = new Array(lsz);\n\t\t\tlet score = 0;\n\t\t\tfor (let n = 0; n < lsz; n++)\n\t\t\t{\n\t\t\t\tlet x = lx[n] - cx, y = ly[n] - cy;\n\t\t\t\trx[n] = cx + x * cosTheta - y * sinTheta;\n\t\t\t\try[n] = cy + x * sinTheta + y * cosTheta;\n\t\t\t\tlet dist = norm_xy(rx[n] - mx, ry[n] - my);\n\t\t\t\tif (lig.attach.indexOf(lig.atoms[n]) >= 0) score += dist; else score -= dist * weight[n];\n\t\t\t}\n\t\t\tif (score < bestScore)\n\t\t\t{\n\t\t\t\tbestScore = score;\n\t\t\t\tbestLX = rx;\n\t\t\t\tbestLY = ry;\n\t\t\t}\n\t\t}\n\t\tlx = bestLX;\n\t\tly = bestLY;\n\n\t\tif (asz == 1)\n\t\t{\n\t\t\t// shrink the bond length back down to normal\n\t\t\tdx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n\t\t\tdy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n\t\t\tVec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n\t\t\tVec.addTo(ly, my + dy - ly[idxAttach[0]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// step 3: get an ordering of the attachment angles\n\t\t\tlet attTheta:number[] = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n\t\t\tfor (let n = 0; n < asz; n++)\n\t\t\t{\n\t\t\t\tlet ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n\t\t\t\tattTheta[n] = Math.atan2(oy, ox);\n\t\t\t\tif (asz > 2)\n\t\t\t\t{\n\t\t\t\t\tattDist[n] = norm_xy(ox, oy);\n\t\t\t\t\tattDX[n] = ox / attDist[n];\n\t\t\t\t\tattDY[n] = oy / attDist[n];\n\t\t\t\t}\n\t\t\t}\n\t\t\tVec.addTo(attDist, -Vec.min(attDist));\n\t\t\tlet orderAttach = GeomUtil.idxSortAngles(attTheta);\n\n\t\t\t// step 4: get a mapping onto desired coords, and run with it\n\t\t\tlet srcX:number[] = new Array(asz), srcY:number[] = new Array(asz);\n\t\t\tlet dstX:number[] = new Array(asz), dstY:number[] = new Array(asz);\n\t\t\tlet dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n\t\t\tfor (let n = 0; n < asz; n++)\n\t\t\t{\n\t\t\t\tsrcX[n] = lx[idxAttach[orderAttach[n]]];\n\t\t\t\tsrcY[n] = ly[idxAttach[orderAttach[n]]];\n\t\t\t\tdstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n\t\t\t\tdstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n\n\t\t\t\ttheta += dtheta / (asz - 1);\n\t\t\t}\n\t\t\tlet tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n\t\t\tfor (let n = 0; n < lsz; n++)\n\t\t\t{\n\t\t\t\tlet [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n\t\t\t\tlx[n] = x;\n\t\t\t\tly[n] = y;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < lsz; n++) mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n\t}\n\n\t// arrange the given ligands in order, given that there are no reference constraints, so use the initial vectors\n\tprivate arrangeLigandsFree(batch:Ligand[]):void\n\t{\n\t\tif (batch.length == 1) return; // leave it be\n\n\t\tlet refTheta = Vec.last(batch).avgTheta;\n\t\trefTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n\t\tthis.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n\t}\n\n\t// arrange the given ligands in order, between the indicated range\n\tprivate arrangeLigandsRange(batch:Ligand[], refTheta:number, refSpan:number, bounded:boolean):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet bsz = batch.length;\n\t\tlet thetaMin:number[] = new Array(bsz), thetaSpan:number[] = new Array(bsz);\n\n\t\tlet ligandSpan = 0;\n\n\t\tfor (let n = 0; n < bsz; n++)\n\t\t{\n\t\t\tlet [theta1, theta2] = this.determineThetaBounds(batch[n]);\n\t\t\tthetaMin[n] = theta1;\n\t\t\tthetaSpan[n] = angleDiffPos(theta2, theta1);\n\t\t\tligandSpan += thetaSpan[n];\n\t\t}\n\n\t\tlet residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n\t\tlet theta = refTheta + (bounded ? residual : 0.5 * residual);\n\t\tfor (let n = 0; n < bsz; n++)\n\t\t{\n\t\t\tlet rotTheta = theta - thetaMin[n];\n\t\t\tlet cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n\n\t\t\tfor (let a of batch[n].atoms)\n\t\t\t{\n\t\t\t\tlet x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n\t\t\t\tmol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n\t\t\t}\n\n\t\t\ttheta += thetaSpan[n] + residual;\n\t\t}\n\t}\n\n\t// returns {lowTheta,highTheta} for the ligand based on its attachment points\n\tprivate determineThetaBounds(lig:Ligand):[number, number]\n\t{\n\t\tconst {mol, metalAtom} = this;\n\t\tlet theta:number[] = [];\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\t\tfor (let n = 0; n < lig.attach.length; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(lig.attach[n]) - mx;\n\t\t\tlet y = mol.atomY(lig.attach[n]) - my;\n\t\t\ttheta.push(Math.atan2(y, x));\n\t\t}\n\t\tVec.sort(theta);\n\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n\n\t\tfor (let n = 0; n < theta.length; n++)\n\t\t{\n\t\t\tlet score = 0;\n\t\t\tfor (let i = 0; i < theta.length - 1; i++) score += angleDiffPos(theta[i + 1], theta[i]);\n\t\t\tif (score < bestScore)\n\t\t\t{\n\t\t\t\tbestScore = score;\n\t\t\t\tbestMin = Vec.first(theta);\n\t\t\t\tbestMax = Vec.last(theta);\n\t\t\t}\n\t\t\ttheta.push(theta.shift());\n\t\t}\n\n\t\treturn [bestMin, bestMax];\n\t}\n\n\t// if any of the ligand blocks clash, keep pushing them outward until resolution\n\tprivate resolveClashes():void\n\t{\n\t\tconst {mol, metalAtom, ligands} = this;\n\n\t\tconst na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n\n\t\tlet ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb); // -1=other component, 0=metal, >0=ligand\n\t\tfor (let n = 1; n <= na; n++) if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom)) ablk[n - 1] = 0;\n\t\tfor (let n = 0; n < lsz; n++) for (let a of ligands[n].atoms) ablk[a - 1] = n + 1;\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n\t\t\tif (blk1 < 0 || blk2 < 0) {}\n\t\t\telse if (blk1 == blk2) bblk[n - 1] = blk1;\n\t\t}\n\n\t\tlet bumpDX:number[] = new Array(lsz), bumpDY:number[] = new Array(lsz);\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlet lig = ligands[n];\n\t\t\tlet dx = 0, dy = 0;\n\t\t\tfor (let a of lig.attach)\n\t\t\t{\n\t\t\t\tdx += mol.atomX(a) - mx;\n\t\t\t\tdy += mol.atomY(a) - my;\n\t\t\t}\n\t\t\tdx /= lig.attach.length;\n\t\t\tdy /= lig.attach.length;\n\t\t\tlet invDist = 1.0 / norm_xy(dx, dy);\n\t\t\tbumpDX[n] = dx * 0.5 * invDist;\n\t\t\tbumpDY[n] = dy * 0.5 * invDist;\n\t\t}\n\n\t\tconst CLOSE_SQ = sqr(0.5);\n\n\t\tfor (let count = 0; count < 12; count++)\n\t\t{\n\t\t\tlet tainted = Vec.booleanArray(false, lsz);\n\t\t\touter: for (let i = 0; i < na - 1; i++)\n\t\t\t{\n\t\t\t\tif (ablk[i] < 0) continue;\n\t\t\t\tfor (let j = i + 1; j < na; j++) if (ablk[j] >= 0 && ablk[j] != ablk[i])\n\t\t\t\t{\n\t\t\t\t\tif (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (ablk[i] > 0) tainted[ablk[i] - 1] = true;\n\t\t\t\t\t\tif (ablk[j] > 0) tainted[ablk[j] - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.allTrue(tainted)) break outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Vec.anyFalse(tainted)) outer: for (let i = 0; i < nb - 1; i++)\n\t\t\t{\n\t\t\t\tif (bblk[i] < 0) continue;\n\t\t\t\tlet x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n\t\t\t\tlet x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n\n\t\t\t\tfor (let j = i + 1; j < nb; j++) if (bblk[j] >= 0 && bblk[j] != bblk[i])\n\t\t\t\t{\n\t\t\t\t\tlet x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n\t\t\t\t\tlet x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n\t\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (bblk[i] > 0) tainted[bblk[i] - 1] = true;\n\t\t\t\t\t\tif (bblk[j] > 0) tainted[bblk[j] - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.allTrue(tainted)) break outer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Vec.allFalse(tainted)) break;\n\n\t\t\tfor (let n = 0; n < lsz; n++) if (tainted[n])\n\t\t\t{\n\t\t\t\tfor (let a of ligands[n].atoms)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {SketchUtil} from '../mol/SketchUtil';\nimport {angleDiff, DEGRAD, norm_xy, RADDEG} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n    Algorithm class that exists for the purpose of generating some number of template-fusion permutations,\n\tstarting with an edit state (molecule,subject) and a template.\n*/\n\nexport class FusionPermutation\n{\n\tpublic mol:Molecule; // contains the fused result\n\tpublic display:Molecule; // the appended fragment, modified for display\n\tpublic molidx:number[]; // atom correspondence between starting molecule (parent.mol) and template (display)\n\tpublic temidx:number[];\n\tpublic srcidx:number[]; // for each atom in mol, >0=present in original molecule, 0=not so\n\n\tpublic attdist = 0;\n\tpublic guided = false;\n\tpublic bridged = false;\n\tpublic scoreModifier = 0;\n\tpublic chainSelect = 0;\n}\n\nexport class TemplateFusion\n{\n\tpublic perms:FusionPermutation[] = [];\n\tpublic numAttach = 0;\n\tpublic withGuideOnly = false;\n\n\tprivate guidetempl:Molecule = null;\n\tprivate guideidx:number[] = [];\n\tprivate guideadj:number[] = [];\n\n\tpublic timeLimit = 5.0; // number of seconds after which template fusion should quit with what it has\n\tpublic static RESERVED_GUIDESYMBOL = 'XXX';\n\n\t// ------------------ public methods --------------------\n\n\tconstructor(public mol:Molecule, public templ:Molecule, public abbrev:string)\n\t{\n\t\t// renumber any incoming bond artifacts\n\t\tlet artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n\t\tartif2.harmoniseNumbering(artif1);\n\t\tartif2.rewriteMolecule();\n\n\t\t// and polymers\n\t\tlet poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n\t\tpoly2.harmoniseNumbering(poly1);\n\t\tpoly2.rewriteMolecule();\n\n\t\tthis.huntForGuides();\n\t}\n\n\t// place the template with no reference anchor\n\tpublic permuteNone():void\n\t{\n\t\tlet numAttach = 0;\n\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\n\t\tif (oldmol.numAtoms > 0)\n\t\t{\n\t\t\tlet oldbox = oldmol.boundary(), newbox = newmol.boundary();\n\t\t\tlet dx = oldbox.maxX() + 1 - newbox.minX();\n\t\t\tlet dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n\t\t\tCoordUtil.translateMolecule(newmol, dx, dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet newbox = newmol.boundary();\n\t\t\tCoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n\t\t}\n\n\t\tlet oldbox = oldmol.boundary(), newbox = newmol.boundary();\n\t\tlet cx = newbox.midX(), cy = newbox.midY();\n\t\tlet ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n\t\tduplicate: for (let n = 0; n < ROTN.length; n++)\n\t\t{\n\t\t\tlet rotmol = newmol.clone();\n\t\t\tCoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n\n\t\t\tfor (let i = 0; i < this.perms.length; i++)\n\t\t\t\tif (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display)) continue duplicate;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = oldmol.clone();\n\t\t\tp.mol.append(rotmol);\n\t\t\tp.display = rotmol;\n\t\t\tp.srcidx = this.sourceIndex(p.mol, oldmol);\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = false;\n\t\t\tthis.perms.push(p);\n\t\t}\n\t}\n\n\t// generate permutations with one atom reference point\n\tpublic permuteAtom(atom:number):void\n\t{\n\t\tthis.numAttach = 1;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tfor (let n = 0; n < this.guideidx.length; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n\t\t\t\tthis.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeDirectOne(newperms, oldmol, newmol, atom, n);\n\t\t\t\tthis.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n\n\t\t\t\tthis.composeBridge(newperms, oldmol, newmol, atom, n);\n\t\t\t\tthis.composeBridge(newperms, oldmol, flipmol, atom, n);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// generate permutations with a bond reference point\n\tpublic permuteBond(a1:number, a2:number):void\n\t{\n\t\tthis.numAttach = 2;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tfor (let i = 0; i < this.guideidx.length; i++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tlet g1 = this.guideidx[i];\n\t\t\t\tlet adj = this.guidetempl.atomAdjList(g1);\n\t\t\t\tfor (let j = 0; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tlet g2 = adj[j];\n\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tlet nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// generate permutations with many reference points\n\tpublic permuteMulti(atoms:number[]):void\n\t{\n\t\tthis.numAttach = atoms.length;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tif (this.guideidx.length == atoms.length)\n\t\t\t{\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n\t\t\t}\n\t\t\tif (this.guideadj.length == atoms.length)\n\t\t\t{\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n\t\t\t\tthis.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// ------------------ private methods --------------------\n\n\tprivate huntForGuides():void\n\t{\n\t\tthis.guideidx = [];\n\t\tthis.guideadj = [];\n\t\tfor (let n = 1; n <= this.templ.numAtoms; n++) if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0)\n\t\t{\n\t\t\tthis.guideidx.push(n);\n\t\t\tlet adj = this.templ.atomAdjList(n);\n\t\t\tfor (let i = 0; i < adj.length; i++) if (this.guideadj.indexOf(adj[i]) < 0) this.guideadj.push(adj[i]);\n\t\t}\n\t\tif (this.guideidx.length > 0)\n\t\t{\n\t\t\tthis.guidetempl = this.templ.clone();\n\t\t\tfor (let n = this.guideidx.length - 1; n >= 0; n--) this.templ.deleteAtomAndBonds(this.guideidx[n]);\n\t\t}\n\t}\n\tprivate composeDirectOne(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, n1:number)\n\t{\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, o1);\n\t\tlet ntheta = SketchUtil.primeDirections(newmol, n1);\n\t\tlet ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n\t\tlet ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n\n\t\t// create the list of angle matches to try out\n\t\tlet theta1:number[] = [], theta2:number[] = [], scoreMod:number[] = [];\n\n\t\tfor (let i = 0; i < ocurrent.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\ttheta1.push(ocurrent[i]);\n\t\t\ttheta2.push(ntheta[j]);\n\t\t\tscoreMod.push(-51);\n\t\t}\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ncurrent.length; j++)\n\t\t{\n\t\t\ttheta1.push(otheta[i]);\n\t\t\ttheta2.push(ncurrent[j]);\n\t\t\tscoreMod.push(0);\n\t\t}\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\ttheta1.push(otheta[i]);\n\t\t\ttheta2.push(ntheta[j]);\n\t\t\tscoreMod.push(0);\n\t\t}\n\n\t\t// now combine them\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n\t\tfor (let n = 0; n < theta1.length; n++)\n\t\t{\n\t\t\tlet dth = angleDiff(theta1[n], theta2[n]);\n\t\t\tlet frag = newmol.clone();\n\t\t\tCoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n\t\t\tCoordUtil.rotateMolecule(frag, dth, ox, oy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [o1];\n\t\t\tp.temidx = [n1];\n\t\t\tp.attdist = bfs[n1 - 1];\n\t\t\tp.guided = false;\n\t\t\tp.scoreModifier = scoreMod[n];\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeDirectTwo(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, o2:number, n1:number, n2:number):void\n\t{\n\t\tlet oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n\t\tlet nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n\t\tlet cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n\n\t\tlet frag = newmol.clone();\n\t\tCoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n\t\tCoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n\t\tfrag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n\t\tfrag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n\n\t\tlet pmol = oldmol.clone();\n\t\tlet osz = pmol.numAtoms;\n\t\tpmol.append(frag);\n\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\n\t\tif (pmol.numAtoms == osz) return;\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\n\t\tlet p = new FusionPermutation();\n\t\tp.mol = pmol;\n\t\tp.display = frag;\n\t\tp.srcidx = srcidx;\n\t\tp.molidx = [o1, o2];\n\t\tp.temidx = [n1, n2];\n\t\tp.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n\t\tp.guided = false;\n\t\tthis.removeExtraGuides(p, oldmol);\n\t\tlist.push(p);\n\t}\n\tprivate composeDirectMulti(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number[], n1:number):void\n\t{\n\t\tlet frag = newmol.clone();\n\n\t\tlet x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n\t\tCoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n\t\tlet ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n\t\tlet otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n\t\tlet nidx:number[] = [];\n\n\t\tfor (let n2 = 1; n2 <= frag.numAtoms; n2++) if (n1 != n2)\n\t\t{\n\t\t\tlet nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n\t\t\tif (Math.abs(nrad - orad) > 0.1) continue; // no point in trying to map {o1,o2} to {n1,n2}\n\t\t\tlet ntheta = Math.atan2(ny, nx);\n\t\t\tCoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n\n\t\t\tnidx = [n1, n2];\n\n\t\t\tfor (let i = 2; i < oidx.length; i++)\n\t\t\t{\n\t\t\t\tlet hit = false;\n\t\t\t\tfor (let j = 1; j <= frag.numAtoms; j++) if (nidx.indexOf(j) < 0)\n\t\t\t\t\tif (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1)\n\t\t\t\t{\n\t\t\t\t\thit = true;\n\t\t\t\t\tnidx.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!hit) break;\n\t\t\t}\n\n\t\t\tif (nidx.length < oidx.length) continue;\n\n\t\t\tlet lowbfs = bfs.length;\n\t\t\tfor (let n = 0; n < nidx.length; n++) lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n\n\t\t\tlet dx = 0, dy = 0;\n\t\t\tfor (let n = 0; n < oidx.length; n++)\n\t\t\t{\n\t\t\t\tdx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n\t\t\t\tdy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n\t\t\t}\n\t\t\tlet invsz = 1.0 / oidx.length;\n\t\t\tdx *= invsz;\n\t\t\tdy *= invsz;\n\t\t\tCoordUtil.translateMolecule(frag, dx, dy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\n\t\t\tfor (let n = 0; n < nidx.length; n++)\n\t\t\t{\n\t\t\t\tlet x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n\t\t\t\tpmol.setAtomPos(osz + nidx[n], x, y);\n\t\t\t}\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag.clone();\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = oidx.slice(0);\n\t\t\tp.temidx = nidx.slice(0);\n\t\t\tp.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n\t\t\tp.guided = false;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeBridge(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, n1:number):void\n\t{\n\t\tlet busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n\t\tlet busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n\t\tif (!busy1 || !busy2) return;\n\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, o1);\n\t\tlet ntheta = SketchUtil.primeDirections(newmol, n1);\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n\t\t\tlet dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n\t\t\tlet dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n\t\t\tlet frag = newmol.clone();\n\n\t\t\tCoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n\t\t\tCoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n\t\t\tlet pmol = oldmol.clone();\n\n\t\t\tlet att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tpmol.addBond(o1, att, 1);\n\n\t\t\tatt = frag.addAtom('C', ox, oy);\n\t\t\tfrag.addBond(n1, att, 1);\n\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [o1];\n\t\t\tp.temidx = [att];\n\t\t\tp.attdist = bfs[n1 - 1];\n\t\t\tp.bridged = true;\n\t\t\tp.guided = false;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeGuidedOne(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number, gidx:number):void\n\t{\n\t\tif (newmol.atomAdjCount(gidx) == 0) return;\n\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, oidx);\n\n\t\t// special deal: if the attachment is multidentate, make sure there is an out-jutting angle that is the simple average of the other\n\t\t// constituents' opposites, since regular bond angles are less definitively useful\n\t\tif (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0)\n\t\t{\n\t\t\tlet ox = 0, oy = 0;\n\t\t\tlet adj = oldmol.atomAdjList(oidx);\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n\t\t\t\toy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n\t\t\t}\n\t\t\tlet ang = Math.atan2(oy, ox);\n\t\t\tlet unique = true;\n\t\t\tfor (let n = 0; n < otheta.length; n++) if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG)\n\t\t\t{\n\t\t\t\tunique = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (unique) otheta.push(ang);\n\t\t}\n\n\t\tlet gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n\t\tlet dx = 0, dy = 0;\n\t\tlet adj = newmol.atomAdjList(gidx);\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tdx += newmol.atomX(adj[n]) - gx;\n\t\t\tdy += newmol.atomY(adj[n]) - gy;\n\t\t}\n\t\tdx /= adj.length;\n\t\tdy /= adj.length;\n\t\tlet ntheta = Math.atan2(dy, dx);\n\n\t\tlet homoPenalty = 0;\n\t\tif (adj.length == 1)\n\t\t{\n\t\t\tlet oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n\t\t\tif (oel != 'C' && oel == nel) homoPenalty = 1; // penalty points for het-het joining\n\t\t}\n\n\t\tfor (let n = 0; n < otheta.length; n++)\n\t\t{\n\t\t\tlet frag = newmol.clone();\n\n\t\t\t// special deal: if two guide indexes, would like to post-select the second one\n\t\t\tif (this.guideidx.length == 2)\n\t\t\t{\n\t\t\t\tfor (let i = 1; i <= frag.numAtoms; i++) if (i != gidx && frag.atomElement(i) == 'X')\n\t\t\t\t{\n\t\t\t\t\tfrag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n\t\t\tCoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\t// look for a next-current option\n\t\t\tlet sel = 0;\n\t\t\tfor (let i = 1; i <= pmol.numAtoms; i++) if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL)\n\t\t\t{\n\t\t\t\tlet padj = pmol.atomAdjList(i);\n\t\t\t\tif (padj.length == 1)\n\t\t\t\t{\n\t\t\t\t\tsel = padj[0];\n\t\t\t\t\tif (sel > i) sel--;\n\t\t\t\t}\n\t\t\t\tpmol.deleteAtomAndBonds(i);\n\t\t\t\tsrcidx.splice(i - 1, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [oidx];\n\t\t\tp.temidx = [gidx];\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = true;\n\t\t\tp.scoreModifier = homoPenalty;\n\t\t\tp.chainSelect = sel;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeGuidedTwo(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule,\n\t\t\t\t\t\t\to1:number, o2:number, gidx:number, nidx:number, snapToGuide:boolean):void\n\t{\n\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n\t\tlet gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n\t\tlet nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n\t\tlet otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n\t\tlet gtheta = Math.atan2(ny - gy, nx - gx);\n\n\t\tlet isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1; // prefer to stick the guide atom on a non-terminal atom\n\n\t\tlet pmol = oldmol.clone(), frag = newmol.clone();\n\t\tCoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n\n\t\tif (snapToGuide)\n\t\t{\n\t\t\tCoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n\t\t\tpmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n\t\t\tfrag.setAtomPos(gidx, ox, oy);\n\t\t}\n\n\t\tlet osz = pmol.numAtoms;\n\t\tpmol.append(frag);\n\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\tif (pmol.numAtoms == osz) return;\n\n\t\tlet p = new FusionPermutation();\n\t\tp.mol = pmol;\n\t\tp.display = frag;\n\t\tp.srcidx = srcidx;\n\t\tp.molidx = [o1, o2];\n\t\tp.temidx = [gidx, nidx];\n\t\tp.attdist = isGuideOnTerminal ? 1 : 0;\n\t\tp.guided = true;\n\t\tthis.removeExtraGuides(p, oldmol);\n\t\tlist.push(p);\n\t}\n\tprivate composeGuidedMulti(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number[], gidx:number[], nudgenew:boolean):void\n\t{\n\t\tlet cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n\t\tfor (let n = 0; n < oidx.length; n++)\n\t\t{\n\t\t\tcx1 += oldmol.atomX(oidx[n]);\n\t\t\tcy1 += oldmol.atomY(oidx[n]);\n\t\t}\n\t\tfor (let n = 0; n < gidx.length; n++)\n\t\t{\n\t\t\tcx2 += newmol.atomX(gidx[n]);\n\t\t\tcy2 += newmol.atomY(gidx[n]);\n\t\t}\n\t\tcx1 /= oidx.length;\n\t\tcy1 /= oidx.length;\n\t\tcx2 /= gidx.length;\n\t\tcy2 /= gidx.length;\n\n\t\tlet osz = oldmol.numAtoms;\n\n\t\tfor (let i = 0; i < oidx.length; i++) for (let j = 0; j < gidx.length; j++)\n\t\t{\n\t\t\tlet pmol = oldmol.clone(), frag = newmol.clone();\n\t\t\tlet th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n\t\t\tlet th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n\t\t\tCoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n\t\t\tCoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n\t\t\tpmol.append(frag);\n\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tlet midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n\t\t\tVec.sort(tidx);\n\t\t\tlet mask = Vec.booleanArray(false, osz);\n\n\t\t\tfor (let g = tidx.length - 1; g >= 0; g--)\n\t\t\t{\n\t\t\t\tlet gatom = tidx[g] + osz;\n\t\t\t\tlet closest = 0, closeDSQ = 0;\n\t\t\t\tfor (let n = 0; n < oidx.length; n++) if (!mask[oidx[n] - 1])\n\t\t\t\t{\n\t\t\t\t\tlet dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n\t\t\t\t\tlet dsq = norm_xy(dx, dy);\n\t\t\t\t\tif (closest == 0 || dsq < closeDSQ)\n\t\t\t\t\t{\n\t\t\t\t\t\tclosest = oidx[n];\n\t\t\t\t\t\tcloseDSQ = dsq;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!nudgenew)\n\t\t\t\t{\n\t\t\t\t\tlet dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n\t\t\t\t\tif (dsq > 0.1 * 0.1)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n\t\t\t\t\t\tfrag.addBond(num, tidx[g], 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tpmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n\t\t\t\t}\n\n\t\t\t\tmidx[g] = closest;\n\t\t\t\tmask[closest - 1] = true;\n\t\t\t\tlet adj = pmol.atomAdjList(gatom);\n\t\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet b = pmol.findBond(gatom, adj[n]);\n\t\t\t\t\tpmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n\t\t\t\t}\n\t\t\t\tpmol.deleteAtomAndBonds(gatom);\n\t\t\t\tsrcidx.splice(gatom - 1, 1);\n\n\t\t\t\tfrag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n\t\t\t}\n\n\t\t\tfor (let n = pmol.numAtoms; n > osz; n--) if (pmol.atomElement(n) == 'X')\n\t\t\t{\n\t\t\t\tpmol.deleteAtomAndBonds(n);\n\t\t\t\tsrcidx.splice(n - 1, 1);\n\t\t\t\tfor (let k = 0; k < tidx.length; k++) if (n < tidx[k]) tidx[k]--;\n\t\t\t}\n\t\t\tfor (let n = frag.numAtoms; n >= 1; n--) if (frag.atomElement(n) == 'X')\n\t\t\t{\n\t\t\t\t//[frag deleteAtomAndBonds:n];\n\t\t\t\tfrag.setAtomElement(n, 'C');\n\t\t\t}\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = midx;\n\t\t\tp.temidx = tidx;\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = true;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\n\t// add specified permutations to the main list, after filtering and sorting\n\tprivate affixRawPermutations(list:FusionPermutation[]):void\n\t{\n\t\tlet npsz = list.length;\n\t\tif (npsz == 0) return;\n\n\t\tlet umask = Vec.booleanArray(true, npsz);\n\t\tfor (let i = 0; i < npsz - 1; i++) if (umask[i])\n\t\t{\n\t\t\tlet p1 = list[i];\n\t\t\tfor (let j = i + 1; j < npsz; j++) if (umask[j])\n\t\t\t{\n\t\t\t\tlet p2 = list[j];\n\t\t\t\tif (CoordUtil.sketchEquivalent(p1.mol, p2.mol))\n\t\t\t\t{\n\t\t\t\t\tif (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist)\n\t\t\t\t\t{\n\t\t\t\t\t\tlist[i] = p2;\n\t\t\t\t\t\tlist[j] = p1;\n\t\t\t\t\t}\n\t\t\t\t\tumask[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet score = Vec.numberArray(0, npsz);\n\t\tlet numKeep = 0;\n\t\tfor (let n = 0; n < npsz; n++)\n\t\t{\n\t\t\tif (umask[n])\n\t\t\t{\n\t\t\t\tscore[n] = this.scorePermutation(list[n]);\n\t\t\t\tif (score[n] < 1000) numKeep++;\n\t\t\t}\n\t\t\telse score[n] = 0;\n\t\t}\n\n\t\tif (numKeep > 0) for (let n = 0; n < npsz; n++) if (umask[n] && score[n] >= 1000) umask[n] = false;\n\n\t\tlet uscore:number[] = [], uidx:number[] = [];\n\t\tfor (let n = 0; n < npsz; n++) if (umask[n])\n\t\t{\n\t\t\tuscore.push(score[n]);\n\t\t\tuidx.push(n);\n\t\t}\n\t\tlet sidx = Vec.idxSort(uscore);\n\n\t\tfor (let n = 0; n < sidx.length; n++)\n\t\t{\n\t\t\tlet p = list[uidx[sidx[n]]];\n\t\t\tif (p.guided)\n\t\t\t{\n\t\t\t\tthis.perms.push(p);\n\t\t\t\t//if (DEBUG) Util.writeln(\"PERM#\" + perms.size() + \" score=\" + score[uidx.get(sidx[n])] + \" scoremod=\" + p.scoreModifier + \" attdist:\" + p.attdist);\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sidx.length; n++)\n\t\t{\n\t\t\tlet p = list[uidx[sidx[n]]];\n\t\t\tif (!p.guided)\n\t\t\t{\n\t\t\t\tthis.perms.push(p);\n\t\t\t\t//if (DEBUG) Util.writeln(\"PERM#\" + perms.size() + \" score=\" + score[uidx.get(sidx[n])] + \" scoremod=\" + p.scoreModifier + \" attdist:\" + p.attdist);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeExtraGuides(perm:FusionPermutation, oldmol:Molecule):void\n\t{\n\t\tMolUtil.removeDuplicateBonds(perm.mol);\n\t\tfor (let n = perm.temidx.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet el = perm.display.atomElement(perm.temidx[n]);\n\t\t\tif (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL) continue;\n\t\t\tperm.molidx.splice(n, 1);\n\t\t\tperm.temidx.splice(n, 1);\n\t\t}\n\n\t\t// residual guide atoms either get axed or turned into carbons, so they just display as projected lines\n\t\tfor (let n = perm.display.numAtoms; n >= 1; n--)\n\t\t{\n\t\t\tlet el = perm.display.atomElement(n);\n\t\t\tif (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL) continue;\n\n\t\t\tlet a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n\t\t\tif (a > 0) perm.display.setAtomElement(n, 'C');\n\t\t\telse\n\t\t\t{\n\t\t\t\tperm.display.deleteAtomAndBonds(n);\n\t\t\t\tfor (let i = 0; i < perm.temidx.length; i++) if (perm.temidx[i] > n) perm.temidx[i]--;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate scorePermutation(perm:FusionPermutation):number\n\t{\n\t\t// note: lower is better\n\n\t\tlet mol = this.mol, tmol = perm.display, tunion = perm.mol; // (clarity)\n\n\t\tlet score = 0.2 * perm.attdist + perm.scoreModifier;\n\n\t\tscore += CoordUtil.congestionMolecule(tunion, 1e-3);\n\t\tscore -= tunion.numAtoms;\n\n\t\tlet sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n\t\tlet mx1:number[] = [], my1:number[] = [], mx2:number[] = [], my2:number[] = [];\n\t\tfor (let n = 0; n < sz1; n++)\n\t\t{\n\t\t\tmx1.push(mol.atomX(n + 1));\n\t\t\tmy1.push(mol.atomY(n + 1));\n\t\t}\n\t\tfor (let n = 0; n < sz2; n++)\n\t\t{\n\t\t\tmx2.push(tmol.atomX(n + 1));\n\t\t\tmy2.push(tmol.atomY(n + 1));\n\t\t}\n\n\t\tfor (let i = 0; i < sz1; i++) for (let j = 0; j < sz2; j++)\n\t\t{\n\t\t\tif (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\tlet contained = false;\n\t\t\tfor (let k = 0; k < perm.molidx.length; k++) if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1)\n\t\t\t{\n\t\t\t\tcontained = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (contained) continue;\n\n\t\t\tscore += 100;\n\t\t}\n\n\t\t// look for new geometries which would be a bit too funky; do not apply to guided atom fusions\n\t\tif (!perm.guided) for (let n = 0; n < perm.molidx.length; n++)\n\t\t{\n\t\t\tlet el = mol.atomElement(perm.molidx[n]);\n\t\t\tif (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P') continue;\n\n\t\t\tlet adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n\t\t\tif (adj1.length + adj2.length >= 4) continue;\n\n\t\t\tfor (let i = 0; i < adj1.length; i++) for (let j = 0; j < adj2.length; j++)\n\t\t\t{\n\t\t\t\tlet ai = adj1[i], aj = adj2[j];\n\t\t\t\tlet bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n\t\t\t\tlet bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n\n\t\t\t\tlet wantTheta = 0;\n\t\t\t\tif ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1)) wantTheta = 120;\n\t\t\t\telse if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1)) wantTheta = 180;\n\t\t\t\telse continue;\n\n\t\t\t\tlet dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n\t\t\t\tlet dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n\t\t\t\tlet dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n\t\t\t\tlet dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n\t\t\t\tlet theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n\t\t\t\tif (Math.abs(theta - wantTheta) > 5) score += 50; // penalty\n\t\t\t}\n\t\t}\n\n\t\t// look for creation of hypervalent lighter atoms, which is considered a big faux pas\n\t\tfor (let n = 1; n <= tunion.numAtoms; n++) if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N')\n\t\t{\n\t\t\tlet adjb = tunion.atomAdjBonds(n);\n\t\t\tlet totalBO = 0;\n\t\t\tfor (let i = 0; i < adjb.length; i++)\n\t\t\t{\n\t\t\t\tlet bo = tunion.bondOrder(adjb[i]);\n\t\t\t\ttotalBO += bo;\n\t\t\t\tif (bo == 0)\n\t\t\t\t{\n\t\t\t\t\ttotalBO = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t} // any of these, nothing matters anymore\n\t\t\t}\n\t\t\tif (totalBO > 4) score += 1000;\n\t\t}\n\n\t\t// match bond orders, whenever possible\n\t\tif (perm.molidx.length >= 2)\n\t\t{\n\t\t\tlet mmask = Vec.booleanArray(false, sz1);\n\t\t\tfor (let n = 0; n < perm.molidx.length; n++) mmask[perm.molidx[n] - 1] = true;\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\t\tif (!mmask[bfr - 1] || !mmask[bto - 1]) continue;\n\t\t\t\tlet tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n\t\t\t\tlet tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n\t\t\t\tif (tn == 0) continue;\n\t\t\t\tif (mol.bondOrder(n) != tmol.bondOrder(tn)) score += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn score;\n\t}\n\n\tprivate sourceIndex(xmol:Molecule, wmol:Molecule):number[]\n\t{\n\t\tlet idx = Vec.numberArray(0, xmol.numAtoms);\n\t\tfor (let n = wmol.numAtoms; n >= 1; n--) idx[n - 1] = n;\n\t\treturn idx;\n\t}\n\tprivate asMask(imask:number[]):boolean[]\n\t{\n\t\tlet ret = Vec.booleanArray(false, imask.length);\n\t\tfor (let n = 0; n < imask.length; n++) ret[n] = imask[n] != 0;\n\t\treturn ret;\n\t}\n}\n\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainUndo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"163.14968\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 196.07064,12.690252 -90,50 90,49.999998 0,-12.8125 c 20.29664,12.07637 33.75,34.2109 33.75,59.78125 0,38.68907 -30.81093,69.5 -69.5,69.5 -38.68907,0 -69.531254,-30.81093 -69.531254,-69.5 0.0934,-6.60391 -2.559001,-13.20451 -7.195999,-17.90755 -4.636997,-4.70304 -11.199433,-7.4485 -17.804001,-7.4485 -6.604568,0 -13.167004,2.74546 -17.804001,7.4485 -4.636998,4.70304 -7.289395,11.30364 -7.195999,17.90755 0,65.71107 53.82018,119.5 119.531254,119.5 65.71107,0 119.5,-53.78892 119.5,-119.5 0,-53.27576 -35.34828,-98.733461 -83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPlus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomPlus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective10\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-64.472045\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2818\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60145026,0,0,0.6014321,63.123549,63.556079)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 91.367971,160.26223 230.74482,159.73468\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 160.52478,90.246356 0.53163,138.246984\\\"\\n       id=\\\"path3756\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomMinus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomMinus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective9\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"59.813669\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"467\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2815\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60591986,0,0,0.60381033,62.403623,63.530598)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12.95214939;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 96.131868,160.58706 129.596922,-0.4623\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOne.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOne.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,140 L 39.961095,140\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,179.98053 L 39.941666,179.98053\\\"\\n       id=\\\"path3574\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondThree.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTwo.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,199.98053 L 39.941666,199.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,119.98053 L 39.941663,119.98053\\\"\\n       id=\\\"path3576\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondZero.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4517786\\\"\\n     inkscape:cx=\\\"160\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1390\\\"\\n     inkscape:window-height=\\\"1119\\\"\\n     inkscape:window-x=\\\"422\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3742\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,132.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,-17.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3746\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,32.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,82.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3748\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,232.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3750\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3752\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,182.5,-8.75)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#000000;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 300,100 L 300,220.71429 L 10,160 z \\\"\\n       id=\\\"path3610\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 40.382649,165.00403 L 40.382649,155.19597\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 100,174.2408 L 100,144.59666\\\"\\n       id=\\\"path3712\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,184.32705 L 160,134.74379\\\"\\n       id=\\\"path3714\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280,204.78908 L 280,115.08664\\\"\\n       id=\\\"path3716\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 220,195.22384 L 220,125.64966\\\"\\n       id=\\\"path3718\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSquig.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSquig.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.70939255;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 13.854696,160 C 23.404427,145.60525 31.644659,120.73451 42.883757,119.8547 C 52.560111,118.19483 66.522178,143.90673 71.912818,160 C 82.300825,178.10026 83.522733,199.152 100.94188,200.1453 C 119.40219,200.81786 121.80479,177.7981 129.97094,160 C 137.74367,142.33593 144.46966,118.67452 159,119.8547 C 175.82856,118.93206 179.97706,143.36954 188.02906,160 C 196.14175,177.45474 205.82635,200.76232 217.05812,200.1453 C 231.09125,199.83385 237.2755,175.9758 246.08718,160 C 254.09821,142.34457 263.95628,119.88399 275.11624,119.8547 C 289.09333,120.33425 295.4277,143.74196 304.1453,160 L 304.1453,160 L 304.1453,160\\\"\\n       id=\\\"path3749\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Geometry} from '../mol/SketchUtil';\nimport {ButtonBank, ButtonBankItem} from '../ui/ButtonBank';\nimport {KeyCode} from '../util/util';\nimport {ActivityType, MoleculeActivity} from './MoleculeActivity';\n\n/* eslint-disable no-multi-spaces, comma-spacing */\n\n/*\n\tCommandBank: the various bank styles that correspond to actions (select-then-do, as opposed to toolbank style which\n\tis pick-then-interact).\n*/\n\nconst ELEMENTS_NOBLE:string[] =\n[\n\t'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\n\nconst ELEMENTS_S_BLOCK:string[] =\n[\n\t'Li', 'Na', 'K',  'Rb', 'Cs', 'Fr', 'Sc',\n\t'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\n\nconst ELEMENTS_P_BLOCK:string[] =\n[\n\t'B',  'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n\t'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\n\nconst ELEMENTS_D_BLOCK:string[] =\n[\n\t'Ti', 'V' , 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n\t'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n\t'Hf', 'Ta', 'W',  'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\n\nconst ELEMENTS_F_BLOCK:string[] =\n[\n\t'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n\t'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\n\nconst ELEMENTS_ABBREV:string[] =\n[\n\t'*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n\t'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\n\nenum CommandType\n{\n\tMain = 0,\n\tAtom,\n\tBond,\n\tSelect,\n\tMove,\n\tAbbrev,\n\tSBlock,\n\tPBlock,\n\tDBlock,\n\tFBlock,\n\tNoble\n}\n\nimport svgMainUndo from '@reswmk/img/actions/MainUndo.svg';\nimport svgMainRedo from '@reswmk/img/actions/MainRedo.svg';\nimport svgMainZoomIn from '@reswmk/img/actions/MainZoomIn.svg';\nimport svgMainZoomOut from '@reswmk/img/actions/MainZoomOut.svg';\nimport svgMainZoomFit from '@reswmk/img/actions/MainZoomFit.svg';\nimport svgMainSelSide from '@reswmk/img/actions/MainSelSide.svg';\nimport svgMainSelAll from '@reswmk/img/actions/MainSelAll.svg';\nimport svgMainSelNone from '@reswmk/img/actions/MainSelNone.svg';\nimport svgMainDelete from '@reswmk/img/actions/MainDelete.svg';\nimport svgMainCut from '@reswmk/img/actions/MainCut.svg';\nimport svgMainCopy from '@reswmk/img/actions/MainCopy.svg';\nimport svgMainPaste from '@reswmk/img/actions/MainPaste.svg';\nimport svgMainAtom from '@reswmk/img/actions/MainAtom.svg';\nimport svgMainBond from '@reswmk/img/actions/MainBond.svg';\nimport svgMainSelect from '@reswmk/img/actions/MainSelect.svg';\nimport svgMainMove from '@reswmk/img/actions/MainMove.svg';\n\nconst COMMANDS_MAIN:ButtonBankItem[] =\n[\n\t{id: 'undo', svg: svgMainUndo, helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z'},\n\t{id: 'redo', svg: svgMainRedo, helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z'},\n\t{id: 'zoomin', svg: svgMainZoomIn, helpText: 'Zoom in.', mnemonic: '='},\n\t{id: 'zoomout', svg: svgMainZoomOut, helpText: 'Zoom out.', mnemonic: '-'},\n\t{id: 'zoomfit', svg: svgMainZoomFit, helpText: 'Show whole diagram onscreen.', mnemonic: ''},\n\t{id: 'selside', svg: svgMainSelSide, helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E'},\n\t{id: 'selall', svg: svgMainSelAll, helpText: 'Select all atoms.', mnemonic: 'Shift+A'},\n\t{id: 'selnone', svg: svgMainSelNone, helpText: 'Clear selection.', mnemonic: 'Shift+Q'},\n\t{id: 'delete', svg: svgMainDelete, helpText: 'Delete selected atoms and bonds.', mnemonic: 'D'},\n\t{id: 'cut', svg: svgMainCut, helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X'},\n\t{id: 'copy', svg: svgMainCopy, helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C'},\n\t{id: 'paste', svg: svgMainPaste, helpText: 'Paste clipboard contents.'/*, mnemonic: 'Ctrl+V'*/}, // TODO: web-specific behaviour\n\t{id: 'atom', svg: svgMainAtom, helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A'},\n\t{id: 'bond', svg: svgMainBond, helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B'},\n\t{id: 'select', svg: svgMainSelect, helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S'},\n\t{id: 'move', svg: svgMainMove, helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M'},\n];\n\nimport svgAtomPlus from '@reswmk/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '@reswmk/img/actions/AtomMinus.svg';\nimport svgAtomAbbrev from '@reswmk/img/actions/AtomAbbrev.svg';\nimport svgAtomSBlock from '@reswmk/img/actions/AtomSBlock.svg';\nimport svgAtomPBlock from '@reswmk/img/actions/AtomPBlock.svg';\nimport svgAtomDBlock from '@reswmk/img/actions/AtomDBlock.svg';\nimport svgAtomFBlock from '@reswmk/img/actions/AtomFBlock.svg';\nimport svgAtomNoble from '@reswmk/img/actions/AtomNoble.svg';\n\nconst COMMANDS_ATOM:ButtonBankItem[] =\n[\n\t{id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C'},\n\t{id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N'},\n\t{id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O'},\n\t{id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S'},\n\t{id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P'},\n\t{id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H'},\n\t{id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F'},\n\t{id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L'},\n\t{id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B'},\n\t{id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I'},\n\t{id: 'plus', svg: svgAtomPlus, helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+'},\n\t{id: 'minus', svg: svgAtomMinus, helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_'},\n\t{id: 'abbrev', svg: svgAtomAbbrev, helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: ''},\n\t{id: 'sblock', svg: svgAtomSBlock, helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'pblock', svg: svgAtomPBlock, helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'dblock', svg: svgAtomDBlock, helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'fblock', svg: svgAtomFBlock, helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'noble', svg: svgAtomNoble, helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: ''},\n];\n\nimport svgBondOne from '@reswmk/img/actions/BondOne.svg';\nimport svgBondTwo from '@reswmk/img/actions/BondTwo.svg';\nimport svgBondThree from '@reswmk/img/actions/BondThree.svg';\nimport svgBondFour from '@reswmk/img/actions/BondFour.svg';\nimport svgBondZero from '@reswmk/img/actions/BondZero.svg';\nimport svgBondUp from '@reswmk/img/actions/BondUp.svg';\nimport svgBondDown from '@reswmk/img/actions/BondDown.svg';\nimport svgBondSquig from '@reswmk/img/actions/BondSquig.svg';\nimport svgBondQAny from '@reswmk/img/actions/BondQAny.svg';\nimport svgBondAddTwo from '@reswmk/img/actions/BondAddTwo.svg';\nimport svgBondInsert from '@reswmk/img/actions/BondInsert.svg';\nimport svgBondSwitch from '@reswmk/img/actions/BondSwitch.svg';\nimport svgBondRotate from '@reswmk/img/actions/BondRotate.svg';\nimport svgBondLinear from '@reswmk/img/actions/BondLinear.svg';\nimport svgBondTrigonal from '@reswmk/img/actions/BondTrigonal.svg';\nimport svgBondTetra1 from '@reswmk/img/actions/BondTetra1.svg';\nimport svgBondTetra2 from '@reswmk/img/actions/BondTetra2.svg';\nimport svgBondSqPlan from '@reswmk/img/actions/BondSqPlan.svg';\nimport svgBondOcta1 from '@reswmk/img/actions/BondOcta1.svg';\nimport svgBondOcta2 from '@reswmk/img/actions/BondOcta2.svg';\nimport svgBondMetalLigate from '@reswmk/img/actions/BondMetalLigate.svg';\nimport svgBondArtifactPath from '@reswmk/img/actions/BondArtifactPath.svg';\nimport svgBondArtifactRing from '@reswmk/img/actions/BondArtifactRing.svg';\nimport svgBondArtifactArene from '@reswmk/img/actions/BondArtifactArene.svg';\nimport svgBondArtifactClear from '@reswmk/img/actions/BondArtifactClear.svg';\nimport svgBondPolymer from '@reswmk/img/actions/BondPolymer.svg';\n\nconst COMMANDS_BOND:ButtonBankItem[] =\n[\n\t{id: 'one', svg: svgBondOne, helpText: 'Create or set bonds to single.', mnemonic: '1'},\n\t{id: 'two', svg: svgBondTwo, helpText: 'Create or set bonds to double.', mnemonic: '2'},\n\t{id: 'three', svg: svgBondThree, helpText: 'Create or set bonds to triple.', mnemonic: '3'},\n\t{id: 'four', svg: svgBondFour, helpText: 'Create or set bonds to quadruple.', mnemonic: ''},\n\t{id: 'zero', svg: svgBondZero, helpText: 'Create or set bonds to zero-order.', mnemonic: '0'},\n\t{id: 'inclined', svg: svgBondUp, helpText: 'Create or set bonds to inclined.', mnemonic: '5'},\n\t{id: 'declined', svg: svgBondDown, helpText: 'Create or set bonds to declined.', mnemonic: '6'},\n\t{id: 'squig', svg: svgBondSquig, helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4'},\n\t{id: 'bondQAny', svg: svgBondQAny, helpText: 'Query bond that matches anything.'},\n\t{id: 'addtwo', svg: svgBondAddTwo, helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D'},\n\t{id: 'insert', svg: svgBondInsert, helpText: 'Insert a methylene into the subject bond.', mnemonic: ''},\n\t{id: 'switch', svg: svgBondSwitch, helpText: 'Cycle through likely bond geometries.', mnemonic: '\\''},\n\t{id: 'rotate', svg: svgBondRotate, helpText: 'Rotate bond to invert substituent orientation.', mnemonic: ''},\n\t{id: 'linear', svg: svgBondLinear, helpText: 'Apply linear geometry.', mnemonic: 'Shift+V'},\n\t{id: 'trigonal', svg: svgBondTrigonal, helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W'},\n\t{id: 'tetra1', svg: svgBondTetra1, helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E'},\n\t{id: 'tetra2', svg: svgBondTetra2, helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R'},\n\t{id: 'sqplan', svg: svgBondSqPlan, helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T'},\n\t{id: 'octa1', svg: svgBondOcta1, helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y'},\n\t{id: 'octa2', svg: svgBondOcta2, helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U'},\n\t{id: 'metalligate', svg: svgBondMetalLigate, helpText: 'Arrange ligands around metal centre.', mnemonic: ''},\n\t{id: 'artifactpath', svg: svgBondArtifactPath, helpText: 'Add a path bond artifact.', mnemonic: ''},\n\t{id: 'artifactring', svg: svgBondArtifactRing, helpText: 'Add a ring bond artifact.', mnemonic: ''},\n\t{id: 'artifactarene', svg: svgBondArtifactArene, helpText: 'Add an arene bond artifact.', mnemonic: ''},\n\t{id: 'artifactclear', svg: svgBondArtifactClear, helpText: 'Remove a bond artifact.', mnemonic: ''},\n\t{id: 'polymer', svg: svgBondPolymer, helpText: 'Create a polymer block.', mnemonic: ''},\n];\n\nimport svgSelectionGrow from '@reswmk/img/actions/SelectionGrow.svg';\nimport svgSelectionShrink from '@reswmk/img/actions/SelectionShrink.svg';\nimport svgSelectionChain from '@reswmk/img/actions/SelectionChain.svg';\nimport svgSelectionSmRing from '@reswmk/img/actions/SelectionSmRing.svg';\nimport svgSelectionRingBlk from '@reswmk/img/actions/SelectionRingBlk.svg';\nimport svgSelectionCurElement from '@reswmk/img/actions/SelectionCurElement.svg';\nimport svgMainSelPrev from '@reswmk/img/actions/MainSelPrev.svg';\nimport svgMainSelNext from '@reswmk/img/actions/MainSelNext.svg';\nimport svgSelectionToggle from '@reswmk/img/actions/SelectionToggle.svg';\nimport svgSelectionUncurrent from '@reswmk/img/actions/SelectionUncurrent.svg';\nimport svgMoveJoin from '@reswmk/img/actions/MoveJoin.svg';\nimport svgMainNew from '@reswmk/img/actions/MainNew.svg';\nimport svgAtomInline from '@reswmk/img/actions/AtomInline.svg';\nimport svgAtomFormula from '@reswmk/img/actions/AtomFormula.svg';\nimport svgAtomExpandAbbrev from '@reswmk/img/actions/AtomExpandAbbrev.svg';\nimport svgAtomClearAbbrev from '@reswmk/img/actions/AtomClearAbbrev.svg';\n\nconst COMMANDS_SELECT:ButtonBankItem[] =\n[\n\t{id: 'selgrow', svg: svgSelectionGrow, helpText: 'Add adjacent atoms to selection.', mnemonic: ''},\n\t{id: 'selshrink', svg: svgSelectionShrink, helpText: 'Unselect exterior atoms.', mnemonic: ''},\n\t{id: 'selchain', svg: svgSelectionChain, helpText: 'Extend selection to non-ring atoms.', mnemonic: ''},\n\t{id: 'smallring', svg: svgSelectionSmRing, helpText: 'Extend selection to small rings.', mnemonic: ''},\n\t{id: 'ringblock', svg: svgSelectionRingBlk, helpText: 'Extend selection to ring blocks.', mnemonic: ''},\n\t{id: 'curelement', svg: svgSelectionCurElement, helpText: 'Select all atoms of current element type.', mnemonic: ''},\n\t{id: 'selprev', svg: svgMainSelPrev, helpText: 'Select previous connected component.', mnemonic: '['},\n\t{id: 'selnext', svg: svgMainSelNext, helpText: 'Select next connected component.', mnemonic: ']'},\n\t{id: 'toggle', svg: svgSelectionToggle, helpText: 'Toggle selection of current.', mnemonic: ','},\n\t{id: 'uncurrent', svg: svgSelectionUncurrent, helpText: 'Undefine current object.', mnemonic: '.'},\n\t{id: 'join', svg: svgMoveJoin, helpText: 'Overlapping atoms will be joined as one.', mnemonic: ''},\n\t{id: 'new', svg: svgMainNew, helpText: 'Clear the molecular structure.', mnemonic: ''},\n\t{id: 'inline', svg: svgAtomInline, helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/'},\n\t{id: 'formula', svg: svgAtomFormula, helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\'},\n\t{id: 'expandabbrev', svg: svgAtomExpandAbbrev, helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?'},\n\t{id: 'clearabbrev', svg: svgAtomClearAbbrev, helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|'},\n];\n\nimport svgMoveUp from '@reswmk/img/actions/MoveUp.svg';\nimport svgMoveDown from '@reswmk/img/actions/MoveDown.svg';\nimport svgMoveLeft from '@reswmk/img/actions/MoveLeft.svg';\nimport svgMoveRight from '@reswmk/img/actions/MoveRight.svg';\nimport svgMoveUpLots from '@reswmk/img/actions/MoveUpLots.svg';\nimport svgMoveDownLots from '@reswmk/img/actions/MoveDownLots.svg';\nimport svgMoveLeftLots from '@reswmk/img/actions/MoveLeftLots.svg';\nimport svgMoveRightLots from '@reswmk/img/actions/MoveRightLots.svg';\nimport svgMoveUpFar from '@reswmk/img/actions/MoveUpFar.svg';\nimport svgMoveDownFar from '@reswmk/img/actions/MoveDownFar.svg';\nimport svgMoveLeftFar from '@reswmk/img/actions/MoveLeftFar.svg';\nimport svgMoveRightFar from '@reswmk/img/actions/MoveRightFar.svg';\nimport svgMoveRotP01 from '@reswmk/img/actions/MoveRotP01.svg';\nimport svgMoveRotM01 from '@reswmk/img/actions/MoveRotM01.svg';\nimport svgMoveRotP05 from '@reswmk/img/actions/MoveRotP05.svg';\nimport svgMoveRotM05 from '@reswmk/img/actions/MoveRotM05.svg';\nimport svgMoveRotP15 from '@reswmk/img/actions/MoveRotP15.svg';\nimport svgMoveRotM15 from '@reswmk/img/actions/MoveRotM15.svg';\nimport svgMoveRotP30 from '@reswmk/img/actions/MoveRotP30.svg';\nimport svgMoveRotM30 from '@reswmk/img/actions/MoveRotM30.svg';\nimport svgMoveHFlip from '@reswmk/img/actions/MoveHFlip.svg';\nimport svgMoveVFlip from '@reswmk/img/actions/MoveVFlip.svg';\nimport svgMoveShrink from '@reswmk/img/actions/MoveShrink.svg';\nimport svgMoveGrow from '@reswmk/img/actions/MoveGrow.svg';\n\nconst COMMANDS_MOVE:ButtonBankItem[] =\n[\n\t{id: 'up', svg: svgMoveUp, helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: KeyCode.Up},\n\t{id: 'down', svg: svgMoveDown, helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: KeyCode.Down},\n\t{id: 'left', svg: svgMoveLeft, helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: KeyCode.Left},\n\t{id: 'right', svg: svgMoveRight, helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: KeyCode.Right},\n\t{id: 'uplots', svg: svgMoveUpLots, helpText: 'Move subject atoms up somewhat.', mnemonic: ''},\n\t{id: 'downlots', svg: svgMoveDownLots, helpText: 'Move subject atoms down somewhat.', mnemonic: ''},\n\t{id: 'leftlots', svg: svgMoveLeftLots, helpText: 'Move subject atoms somewhat to the left.', mnemonic: ''},\n\t{id: 'rightlots', svg: svgMoveRightLots, helpText: 'Move subject atoms somewhat to the right.', mnemonic: ''},\n\t{id: 'upfar', svg: svgMoveUpFar, helpText: 'Move subject atoms far up.', mnemonic: ''},\n\t{id: 'downfar', svg: svgMoveDownFar, helpText: 'Move subject atoms far down.', mnemonic: ''},\n\t{id: 'leftfar', svg: svgMoveLeftFar, helpText: 'Move subject atoms far to the left.', mnemonic: ''},\n\t{id: 'rightfar', svg: svgMoveRightFar, helpText: 'Move subject atoms far to the right.', mnemonic: ''},\n\t{id: 'rotp01', svg: svgMoveRotP01, helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm01', svg: svgMoveRotM01, helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp05', svg: svgMoveRotP05, helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm05', svg: svgMoveRotM05, helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp15', svg: svgMoveRotP15, helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm15', svg: svgMoveRotM15, helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp30', svg: svgMoveRotP30, helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{'},\n\t{id: 'rotm30', svg: svgMoveRotM30, helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}'},\n\t{id: 'hflip', svg: svgMoveHFlip, helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<'},\n\t{id: 'vflip', svg: svgMoveVFlip, helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>'},\n\t{id: 'shrink', svg: svgMoveShrink, helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z'},\n\t{id: 'grow', svg: svgMoveGrow, helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X'},\n];\n\nexport class CommandBank extends ButtonBank\n{\n\tconstructor(protected owner:any, protected cmdType = CommandType.Main)\n\t{\n\t\tsuper();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tif (this.cmdType == CommandType.Main) for (let btn of COMMANDS_MAIN) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Atom) for (let btn of COMMANDS_ATOM) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Bond) for (let btn of COMMANDS_BOND) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Select) for (let btn of COMMANDS_SELECT) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Move) for (let btn of COMMANDS_MOVE) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Abbrev) this.populateElements(ELEMENTS_ABBREV);\n\t\telse if (this.cmdType == CommandType.SBlock) this.populateElements(ELEMENTS_S_BLOCK);\n\t\telse if (this.cmdType == CommandType.PBlock) this.populateElements(ELEMENTS_P_BLOCK);\n\t\telse if (this.cmdType == CommandType.DBlock) this.populateElements(ELEMENTS_D_BLOCK);\n\t\telse if (this.cmdType == CommandType.FBlock) this.populateElements(ELEMENTS_F_BLOCK);\n\t\telse if (this.cmdType == CommandType.Noble) this.populateElements(ELEMENTS_NOBLE);\n\t}\n\n\tprivate populateElements(elements:string[]):void\n\t{\n\t\tfor (let el of elements)\n\t\t{\n\t\t\tthis.buttons.push({id: `element:${el}`, text: el, helpText: `Change elements to ${el}.`});\n\t\t}\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string):void\n\t{\n\t\tlet actv = 0, param:any = null;\n\n\t\tif (id.startsWith('element:'))\n\t\t{\n\t\t\tlet el = id.substring(8);\n\t\t\tactv = ActivityType.Element;\n\t\t\tparam = {element: el};\n\t\t}\n\t\telse if (id == 'delete') actv = ActivityType.Delete;\n\t\telse if (id == 'undo')\n\t\t{\n\t\t\tif (this.owner.canUndo()) this.owner.performUndo();\n\t\t\telse this.owner.showMessage('Nothing to undo.');\n\t\t}\n\t\telse if (id == 'redo')\n\t\t{\n\t\t\tif (this.owner.canRedo()) this.owner.performRedo();\n\t\t\telse this.owner.showMessage('Nothing to redo.');\n\t\t}\n\t\telse if (id == 'cut') actv = ActivityType.Cut;\n\t\telse if (id == 'copy') actv = ActivityType.Copy;\n\t\telse if (id == 'paste') this.owner.performPaste();\n\t\telse if (id == 'new') actv = ActivityType.Clear;\n\t\telse if (id == 'zoomfit') this.owner.autoScale();\n\t\telse if (id == 'zoomout') this.owner.zoom(0.8);\n\t\telse if (id == 'zoomin') this.owner.zoom(1.25);\n\t\telse if (id == 'selall') actv = ActivityType.SelectAll;\n\t\telse if (id == 'selnone') actv = ActivityType.SelectNone;\n\t\telse if (id == 'selprev') actv = ActivityType.SelectPrevComp;\n\t\telse if (id == 'selnext') actv = ActivityType.SelectNextComp;\n\t\telse if (id == 'selside') actv = ActivityType.SelectSide;\n\t\telse if (id == 'plus') {actv = ActivityType.Charge; param = {delta: 1};}\n\t\telse if (id == 'minus') {actv = ActivityType.Charge; param = {delta: -1};}\n\t\telse if (id == 'one') {actv = ActivityType.BondOrder; param = {order: 1};}\n\t\telse if (id == 'two') {actv = ActivityType.BondOrder; param = {order: 2};}\n\t\telse if (id == 'three') {actv = ActivityType.BondOrder; param = {order: 3};}\n\t\telse if (id == 'four') {actv = ActivityType.BondOrder; param = {order: 4};}\n\t\telse if (id == 'zero') {actv = ActivityType.BondOrder; param = {order: 0};}\n\t\telse if (id == 'inclined') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_INCLINED};}\n\t\telse if (id == 'declined') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_DECLINED};}\n\t\telse if (id == 'squig') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_UNKNOWN};}\n\t\telse if (id == 'linear') {actv = ActivityType.BondGeom; param = {geom: Geometry.Linear};}\n\t\telse if (id == 'trigonal') {actv = ActivityType.BondGeom; param = {geom: Geometry.Trigonal};}\n\t\telse if (id == 'tetra1') {actv = ActivityType.BondGeom; param = {geom: Geometry.Tetra1};}\n\t\telse if (id == 'tetra2') {actv = ActivityType.BondGeom; param = {geom: Geometry.Tetra2};}\n\t\telse if (id == 'sqplan') {actv = ActivityType.BondGeom; param = {geom: Geometry.SqPlan};}\n\t\telse if (id == 'octa1') {actv = ActivityType.BondGeom; param = {geom: Geometry.Octa1};}\n\t\telse if (id == 'octa2') {actv = ActivityType.BondGeom; param = {geom: Geometry.Octa2};}\n\t\telse if (id == 'switch') actv = ActivityType.BondSwitch;\n\t\telse if (id == 'rotate') actv = ActivityType.BondRotate;\n\t\telse if (id == 'connect') actv = ActivityType.Connect;\n\t\telse if (id == 'disconnect') actv = ActivityType.Disconnect;\n\t\telse if (id == 'metalligate') actv = ActivityType.MetalLigate;\n\t\telse if (id == 'artifactpath') actv = ActivityType.BondArtifactPath;\n\t\telse if (id == 'artifactring') actv = ActivityType.BondArtifactRing;\n\t\telse if (id == 'artifactarene') actv = ActivityType.BondArtifactArene;\n\t\telse if (id == 'artifactclear') actv = ActivityType.BondArtifactClear;\n\t\telse if (id == 'polymer') actv = ActivityType.PolymerBlock;\n\t\telse if (id == 'addtwo') actv = ActivityType.BondAddTwo;\n\t\telse if (id == 'insert') actv = ActivityType.BondInsert;\n\t\telse if (id == 'curelement') actv = ActivityType.SelectCurElement;\n\t\telse if (id == 'selgrow') actv = ActivityType.SelectGrow;\n\t\telse if (id == 'selshrink') actv = ActivityType.SelectShrink;\n\t\telse if (id == 'selprev') actv = ActivityType.SelectPrevComp;\n\t\telse if (id == 'selnext') actv = ActivityType.SelectNextComp;\n\t\telse if (id == 'selchain') actv = ActivityType.SelectChain;\n\t\telse if (id == 'smallring') actv = ActivityType.SelectSmRing;\n\t\telse if (id == 'ringblock') actv = ActivityType.SelectRingBlk;\n\t\telse if (id == 'toggle') actv = ActivityType.SelectToggle;\n\t\telse if (id == 'uncurrent') actv = ActivityType.SelectUnCurrent;\n\t\telse if (id == 'join') actv = ActivityType.Join;\n\t\telse if (id == 'inline') actv = ActivityType.AbbrevGroup;\n\t\telse if (id == 'formula') actv = ActivityType.AbbrevFormula;\n\t\telse if (id == 'clearabbrev') actv = ActivityType.AbbrevClear;\n\t\telse if (id == 'expandabbrev') actv = ActivityType.AbbrevExpand;\n\t\telse if (id == 'up') {actv = ActivityType.Nudge; param = {dir: 'up'};}\n\t\telse if (id == 'down') {actv = ActivityType.Nudge; param = {dir: 'down'};}\n\t\telse if (id == 'left') {actv = ActivityType.Nudge; param = {dir: 'left'};}\n\t\telse if (id == 'right') {actv = ActivityType.Nudge; param = {dir: 'right'};}\n\t\telse if (id == 'uplots') {actv = ActivityType.NudgeLots; param = {dir: 'up'};}\n\t\telse if (id == 'downlots') {actv = ActivityType.NudgeLots; param = {dir: 'down'};}\n\t\telse if (id == 'leftlots') {actv = ActivityType.NudgeLots; param = {dir: 'left'};}\n\t\telse if (id == 'rightlots') {actv = ActivityType.NudgeLots; param = {dir: 'right'};}\n\t\telse if (id == 'upfar') {actv = ActivityType.NudgeFar; param = {dir: 'up'};}\n\t\telse if (id == 'downfar') {actv = ActivityType.NudgeFar; param = {dir: 'down'};}\n\t\telse if (id == 'leftfar') {actv = ActivityType.NudgeFar; param = {dir: 'left'};}\n\t\telse if (id == 'rightfar') {actv = ActivityType.NudgeFar; param = {dir: 'right'};}\n\t\telse if (id == 'rotp01') {actv = ActivityType.Rotate; param = {theta: 1};}\n\t\telse if (id == 'rotm01') {actv = ActivityType.Rotate; param = {theta: -1};}\n\t\telse if (id == 'rotp05') {actv = ActivityType.Rotate; param = {theta: 5};}\n\t\telse if (id == 'rotm05') {actv = ActivityType.Rotate; param = {theta: -5};}\n\t\telse if (id == 'rotp15') {actv = ActivityType.Rotate; param = {theta: 15};}\n\t\telse if (id == 'rotm15') {actv = ActivityType.Rotate; param = {theta: -15};}\n\t\telse if (id == 'rotp30') {actv = ActivityType.Rotate; param = {theta: 30};}\n\t\telse if (id == 'rotm30') {actv = ActivityType.Rotate; param = {theta: -30};}\n\t\telse if (id == 'hflip') {actv = ActivityType.Flip; param = {axis: 'hor'};}\n\t\telse if (id == 'vflip') {actv = ActivityType.Flip; param = {axis: 'ver'};}\n\t\telse if (id == 'shrink') {actv = ActivityType.Scale; param = {mag: 1 / 1.1};}\n\t\telse if (id == 'grow') {actv = ActivityType.Scale; param = {mag: 1.1};}\n\t\telse if (id == 'bondQAny') actv = ActivityType.QueryBondAny;\n\t\telse if (id == 'atom') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n\t\telse if (id == 'bond') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n\t\telse if (id == 'select') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n\t\telse if (id == 'move') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n\t\telse if (id == 'abbrev') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n\t\telse if (id == 'sblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n\t\telse if (id == 'pblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n\t\telse if (id == 'dblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n\t\telse if (id == 'fblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n\t\telse if (id == 'noble') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n\t\telse alert('Unhandled command: \"' + id + '\"');\n\n\t\tif (actv > 0)\n\t\t{\n\t\t\tnew MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n\t\t}\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('Claim/Command['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t\n\t\t// special deal: in case it's a mac, convert Cmd-Z/Cmd-Shift-Z into the Winux convention of using Ctrl\n\t\t/*if (event.metaKey && event.key == 'z')\n\t\t{\n\t\t\tevent.metaKey = false;\n\t\t\tevent.ctrlKey = true;\n\t\t}*/\n\n\t\tfor (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE]) for (let item of listItems)\n\t\t{\n\t\t\tif (ButtonBank.matchKey(event, item.mnemonic, item.key))\n\t\t\t{\n\t\t\t\tthis.hitButton(item.id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainRedo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"16.170725\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 124.537,12.690252 90,50 -90,49.999998 0,-12.8125 c -20.29664,12.07637 -33.75,34.2109 -33.75,59.78125 0,38.68907 30.81093,69.5 69.5,69.5 38.68907,0 69.53125,-30.81093 69.53125,-69.5 -0.0934,-6.60391 2.559,-13.20451 7.196,-17.90755 4.637,-4.70304 11.19944,-7.4485 17.804,-7.4485 6.60457,0 13.16701,2.74546 17.804,7.4485 4.637,4.70304 7.2894,11.30364 7.196,17.90755 0,65.71107 -53.82018,119.5 -119.53125,119.5 -65.71107,0 -119.5,-53.78892 -119.5,-119.5 0,-53.27576 35.34828,-98.733461 83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomIn.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomIn.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3766\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"184.61711\\\"\\n     inkscape:cy=\\\"128.35938\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3768\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\"\\n         style=\\\"stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000;stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.791;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.9337,7.3957969 c -1.22836,0.017783 -2.44251,0.5361707 -3.31003,1.4132395 L 127.99649,37.675208 c -1.32116,1.336065 -1.7593,3.488685 -1.0437,5.231992 0.71562,1.743309 2.54225,2.973143 4.41336,2.976825 l 23.85599,0 0,32.594718 c -19.03094,1.043649 -36.29578,8.792862 -49.59062,20.927974 L 81.596615,75.50192 98.593999,58.603182 c 1.337912,-1.329214 1.784181,-3.508978 1.073521,-5.262062 -0.710656,-1.753085 -2.535151,-2.973199 -4.413356,-2.976825 l -40.46571,-0.270619 c -0.158907,-0.0079 -0.318211,-0.0079 -0.477119,0 -2.335535,0.221972 -4.319354,2.415492 -4.323896,4.780958 l -0.298201,40.803535 c -0.01994,1.896771 1.188724,3.743885 2.922358,4.480271 1.733635,0.73639 3.886482,0.31711 5.218495,-1.022343 L 74.797659,82.237359 98.922018,106.26244 c -11.630556,13.42652 -19.014244,30.73454 -19.949562,49.73401 l -33.487834,0 0,-24.05515 c 9.54e-4,-2.56989 -2.372929,-4.89108 -4.920297,-4.81103 -1.198278,0.0406 -2.374437,0.55669 -3.220558,1.41324 L 8.7165889,157.40968 c -1.7614043,1.78077 -1.7614043,5.01481 0,6.79558 l 28.6271781,28.86618 c 1.325004,1.33218 3.4598,1.77398 5.188676,1.0524 1.728876,-0.72158 2.948527,-2.56345 2.952179,-4.4502 l 0,-24.05515 33.607114,0 c 1.240981,18.80865 8.766006,35.88989 20.486319,49.10257 L 76.169379,238.65594 59.171991,221.75718 c -1.335156,-1.31903 -3.467046,-1.72624 -5.188676,-0.99227 -1.72163,0.73398 -2.930541,2.56544 -2.922358,4.4502 l 0.26838,40.83362 c 0.01573,2.5291 2.322811,4.81236 4.830836,4.78095 l 40.465711,-0.30069 c 1.873236,-0.0154 3.680176,-1.25616 4.383526,-3.00689 0.70337,-1.75074 0.26095,-3.90631 -1.073508,-5.232 L 82.968334,245.39136 106.3472,221.48657 c 13.35681,11.91347 30.59938,19.44988 49.56079,20.32659 l 0,32.38424 -23.85597,0 c -1.87113,0.004 -3.69775,1.23352 -4.41337,2.97683 -0.71561,1.7433 -0.27746,3.89593 1.0437,5.23198 l 28.62718,28.86618 c 1.76603,1.7761 4.97329,1.7761 6.73932,0 l 28.62718,-28.86618 c 1.32117,-1.33605 1.75932,-3.48868 1.0437,-5.23198 -0.71562,-1.74331 -2.54224,-2.97314 -4.41336,-2.97683 l -23.85599,0 0,-32.50452 c 18.91988,-1.36942 36.01699,-9.38124 49.11351,-21.70975 l 23.67706,25.97954 -16.99739,16.89874 c -1.33789,1.32921 -1.78418,3.50897 -1.07351,5.26207 0.71065,1.75307 2.53515,2.97319 4.41336,2.97682 l 40.4657,0.27062 c 2.49814,0.0155 4.7852,-2.26196 4.80102,-4.78097 l 0.29821,-40.80352 c 0.009,-1.88477 -1.20074,-3.71624 -2.92237,-4.45021 -1.72162,-0.73397 -3.85353,-0.32678 -5.18866,0.99227 l -16.9974,16.89875 -23.8858,-26.19004 c 11.5936,-13.79235 18.76194,-31.49959 19.23388,-50.87663 l 34.11406,0 0,24.05514 c -0.008,1.89176 1.19113,3.72124 2.92236,4.45021 1.73125,0.72896 3.88998,0.31342 5.21849,-1.02234 l 28.62718,-28.86617 c 1.77918,-1.78291 1.77918,-5.04275 0,-6.82565 L 282.6429,125.08559 c -0.90259,-0.91262 -2.1811,-1.43496 -3.45912,-1.41325 -2.46815,0.047 -4.68191,2.32184 -4.68173,4.81103 l 0,24.05515 -34.44207,0 c -1.6396,-17.98221 -9.04936,-34.27895 -20.33723,-46.99774 l 23.40868,-24.536247 16.99739,16.898738 c 1.33515,1.319049 3.46704,1.726245 5.18867,0.992274 1.72162,-0.73397 2.93055,-2.565432 2.92236,-4.4502 L 267.97148,53.61174 c -0.0313,-2.519034 -2.33266,-4.782323 -4.83084,-4.750891 l -40.46571,0.270621 c -1.87323,0.01535 -3.68017,1.256162 -4.38354,3.006893 -0.70337,1.750731 -0.26095,3.906314 1.07352,5.231992 L 236.36229,74.269093 212.95361,98.7452 C 199.918,87.125675 183.17867,79.683488 164.76453,78.508812 l 0,-32.624787 23.85598,0 c 1.87112,-0.0037 3.69774,-1.233516 4.41336,-2.976825 0.71561,-1.743307 0.27747,-3.895927 -1.0437,-5.231992 L 163.36299,8.8090364 C 162.46736,7.9036606 161.20183,7.3821292 159.9337,7.3957969 z m -0.29821,90.1767151 c 37.68702,2.849578 62.29024,31.065418 61.69754,62.543368 -0.66052,35.07958 -25.42255,62.86092 -61.69754,62.54337 -33.68472,-0.29486 -64.464992,-23.49428 -63.576187,-62.54337 0.890095,-39.10566 27.382967,-61.739358 63.576187,-62.543368 z\\\"\\n       id=\\\"path4847\\\"\\n       sodipodi:nodetypes=\\\"cccsccccccscccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsssc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomOut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomOut.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3832\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"154.5481\\\"\\n     inkscape:cy=\\\"146.35603\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3854\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.25 10 C 77.278938 10 10.71875 76.943918 10.71875 159.21875 C 10.71875 241.49357 77.278938 308.40625 159.25 308.40625 C 241.22106 308.40625 307.84375 241.49357 307.84375 159.21875 C 307.84375 76.943918 241.22106 10 159.25 10 z M 155.875 27.59375 C 155.91666 27.592693 155.95833 27.594768 156 27.59375 L 156 61.4375 L 131 61.4375 C 129.03915 61.4413 127.12493 62.719466 126.375 64.53125 C 125.62507 66.343035 126.08423 68.580206 127.46875 69.96875 L 157.46875 99.96875 C 159.32168 101.83325 162.70957 101.83325 164.5625 99.96875 L 194.5625 69.96875 C 195.95072 68.576522 196.3826 66.314253 195.625 64.5 C 194.8674 62.685746 192.96606 61.429035 191 61.4375 L 166 61.4375 L 166 27.71875 C 233.43435 31.142779 287.33666 85.620853 290.1875 153.5625 L 258.4375 153.5625 L 258.4375 128.5625 C 258.4385 125.89168 255.95078 123.47931 253.28125 123.5625 C 252.02551 123.6047 250.79295 124.14106 249.90625 125.03125 L 219.90625 155.03125 C 218.06038 156.88197 218.06038 160.24303 219.90625 162.09375 L 249.90625 192.09375 C 251.29479 193.47827 253.53196 193.93743 255.34375 193.1875 C 257.15553 192.43757 258.43367 190.52335 258.4375 188.5625 L 258.4375 163.5625 L 290.25 163.5625 C 288.03607 232.42829 233.36911 287.73364 165.0625 290.71875 L 165.0625 260 L 190.0625 260 C 192.03598 260.009 193.96634 258.73069 194.71875 256.90625 C 195.47117 255.08181 194.99955 252.82257 193.59375 251.4375 L 163.59375 221.4375 C 162.64999 220.50778 161.3246 219.97762 160 220 C 158.71699 220.0103 157.44542 220.53722 156.53125 221.4375 L 126.53125 251.4375 C 125.12545 252.82257 124.65383 255.08181 125.40625 256.90625 C 126.15866 258.73069 128.08902 260.00857 130.0625 260 L 155.0625 260 L 155.0625 290.78125 C 86.483864 288.62253 31.34883 233.7369 28.40625 165 L 62.15625 165 L 62.15625 190 C 62.16005 191.96085 63.438216 193.84382 65.25 194.59375 C 67.061785 195.34368 69.298956 194.91577 70.6875 193.53125 L 100.6875 163.53125 C 102.53337 161.68053 102.53337 158.31947 100.6875 156.46875 L 70.6875 126.46875 C 69.741627 125.52028 68.401813 124.97743 67.0625 125 C 64.475993 125.0488 62.156049 127.41303 62.15625 130 L 62.15625 155 L 28.34375 155 C 30.519811 85.260706 86.399976 29.356768 155.875 27.59375 z \\\"\\n       id=\\\"path4847\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomFit.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomFit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective60\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"282.47425\\\"\\n     inkscape:cy=\\\"140.55244\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1478\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#dddddd;fill-opacity:0.5;stroke:#000000;stroke-width:10.00008255000000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4971\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.8709386,0,0,0.8950109,23.61288,16.185766)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:10.44176006px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4835\\\">\\n      <path\\n         d=\\\"m 70.985713,183.23596 11.216734,0 0,-38.71472 L 70,146.96852 l 0,-6.25418 12.134467,-2.44728 6.866001,0 0,44.9689 11.216732,0 0,5.77832 -29.231487,0 0,-5.77832 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4188\\\" />\\n      <path\\n         d=\\\"m 128.80288,142.78774 q -5.30246,0 -7.98768,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68522,5.20049 7.98768,5.20049 5.33644,0 7.98767,-5.20049 2.68522,-5.23447 2.68522,-15.66944 0,-10.46895 -2.68522,-15.66943 -2.65123,-5.23448 -7.98767,-5.23448 z m 0,-5.43842 q 8.53151,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 137.33439,190 128.80288,190 q -8.53152,0 -13.0522,-6.73005 -4.4867,-6.76403 -4.4867,-19.5783 0,-12.84825 4.4867,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4190\\\" />\\n      <path\\n         d=\\\"m 173.12597,142.78774 q -5.30246,0 -7.98767,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68521,5.20049 7.98767,5.20049 5.33645,0 7.98768,-5.20049 2.68521,-5.23447 2.68521,-15.66944 0,-10.46895 -2.68521,-15.66943 -2.65123,-5.23448 -7.98768,-5.23448 z m 0,-5.43842 q 8.53152,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 181.65749,190 173.12597,190 q -8.53152,0 -13.0522,-6.73005 -4.48669,-6.76403 -4.48669,-19.5783 0,-12.84825 4.48669,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4192\\\" />\\n      <path\\n         d=\\\"m 245.93277,166.68278 q -2.95713,0 -4.65664,2.51527 -1.66551,2.51527 -1.66551,7.00196 0,4.41872 1.66551,6.96797 1.69951,2.51527 4.65664,2.51527 2.88916,0 4.55468,-2.51527 1.6995,-2.54925 1.6995,-6.96797 0,-4.4527 -1.6995,-6.96797 -1.66552,-2.54926 -4.55468,-2.54926 z m 0,-4.31674 q 5.37044,0 8.53152,3.73891 3.16108,3.73891 3.16108,10.09506 0,6.35615 -3.19507,10.09506 Q 251.26922,190 245.93277,190 q -5.43841,0 -8.59949,-3.70493 -3.16108,-3.73891 -3.16108,-10.09506 0,-6.39014 3.16108,-10.09506 3.19507,-3.73891 8.59949,-3.73891 z m -35.07778,-20.69997 q -2.92315,0 -4.62266,2.54926 -1.66551,2.51526 -1.66551,6.93398 0,4.48669 1.66551,7.00196 1.66552,2.51527 4.62266,2.51527 2.95714,0 4.62265,-2.51527 1.69951,-2.51527 1.69951,-7.00196 0,-4.38473 -1.69951,-6.93398 -1.6995,-2.54926 -4.62265,-2.54926 z m 30.69306,-4.31675 5.43842,0 L 215.23971,190 l -5.43842,0 31.74676,-52.65068 z m -30.69306,0 q 5.37043,0 8.5655,3.73892 3.19507,3.70492 3.19507,10.06107 0,6.42413 -3.19507,10.12905 -3.16108,3.70492 -8.5655,3.70492 -5.40443,0 -8.56551,-3.70492 -3.12709,-3.73891 -3.12709,-10.12905 0,-6.32216 3.16108,-10.06107 3.16108,-3.73892 8.53152,-3.73892 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4194\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4967\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.981039,0,0,1.0003176,5.8435029,-5.0472616e-2)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionSide.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"199.96541\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 48.664209,245.16396 L 108.91547,160.16396 L 50.664209,75.163966\\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 108.7868,160.70711 L 226.16295,161.41421\\\"\\n       id=\\\"path2170\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 283.22481,77.213358 L 226.68065,159.21336 L 284.22481,241.21336\\\"\\n       id=\\\"path3271\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,165.10228,132.56626)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-343.98648,267.653)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.132419,130.55198)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,164.75661,294.92979)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-341.57497,437.10883)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.803983,299.05197)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-283.31663,352.18587)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,107.42818,214.60137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-10.218211,214.29461)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelAll.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 76.36753,113.52483 L 77.074637,213.93399 L 167.5843,264.84567 L 255.97265,210.39845 L 254.55843,117.06036 L 165.46298,53.420751 L 76.36753,113.52483 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-248.04603,-85.05335)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-337.35469,-26.947524)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-159.19783,-25.889527)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-336.95273,70.72442)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-246.2033,123.92331)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-158.39386,69.713238)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelNone.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 76.36753,113.52483 0.707107,100.40916 88.509663,50.91168 90.38835,-54.44722 -1.41422,-93.33809 -89.09545,-59.639609 -89.09545,56.104079 z\\\"\\n       id=\\\"path3251\\\"\\n       sodipodi:nodetypes=\\\"ccccccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainDelete.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       d=\\\"M 159.65625 30.71875 C 88.093395 30.71875 30 88.487677 30 159.65625 C 30 230.82482 88.093395 288.56252 159.65625 288.5625 C 231.2191 288.5625 289.28125 230.82482 289.28125 159.65625 C 289.28125 88.487677 231.2191 30.71875 159.65625 30.71875 z M 157.84375 72 C 158.59438 71.985792 159.33922 71.994392 160.09375 72 C 176.61399 72.122789 194.05818 77.018142 211.4375 88.5625 L 86.4375 213.5625 C 60.537368 184.56234 69.685666 120.89857 96.4375 96.4375 C 113.21391 82.331272 134.57422 72.440433 157.84375 72 z M 235.53125 110.625 C 261.43138 139.62516 252.28307 203.32017 225.53125 227.78125 C 196.3648 252.30549 153.31112 264.04188 110.53125 235.625 L 235.53125 110.625 z \\\"\\n       id=\\\"path3281\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective13\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"2.8284272\\\"\\n     inkscape:cx=\\\"170.6097\\\"\\n     inkscape:cy=\\\"215.55961\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.93447638;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.84431,4.0536087 c -0.29508,0.00449 -0.58207,0.030042 -0.87522,0.060857 -0.0514,-0.00404 -0.10482,0.00322 -0.15629,0 -0.26793,-0.016729 -0.54407,-0.036361 -0.8127,-0.030428 -2.52061,0.055258 -5.00989,1.1162381 -6.75172,2.8907158 -1.74182,1.7744777 -2.71473,4.2405775 -2.65692,6.6942895 L 149.90429,134.04453 47.472011,85.328366 45.346471,83.624365 c -1.676342,-1.065683 -3.687289,-1.624994 -5.688946,-1.582287 -0.143902,0.003 -0.294356,0.02089 -0.437611,0.03043 -0.397202,-0.03723 -0.78889,-0.04182 -1.187802,-0.03043 -4.295438,0.112766 -8.28419,3.359535 -9.158577,7.455004 -0.874388,4.09547 1.451553,8.636997 5.345108,10.406581 l 0.562644,0.273857 109.840403,68.03832 c 1.67488,1.03918 3.67355,1.56833 5.6577,1.52143 l 0.46886,43.99973 c 0.005,0.64693 0.10661,1.28576 0.25007,1.91701 -8.81541,5.38078 -15.33495,12.77739 -19.41119,21.75644 -5.08278,11.19622 -6.52603,24.62804 -5.15756,39.98316 0.0144,0.14281 0.0352,0.28499 0.0625,0.426 1.83482,10.3447 4.15972,19.71772 9.34612,26.95973 5.16099,7.20651 13.78411,11.64917 24.97511,11.13687 l 0,0.0304 c 18.09365,-0.39567 30.45126,-6.60038 37.25946,-16.7053 6.80821,-10.10493 8.17398,-23.08912 7.65819,-37.0316 -0.007,-0.1017 -0.0175,-0.20319 -0.0312,-0.30428 -1.7739,-18.11192 -9.59128,-28.87305 -18.53596,-35.54059 -6.03478,-4.49844 -12.34072,-7.3741 -17.56696,-10.01101 0.27934,-0.90435 0.41844,-1.85482 0.40635,-2.79942 l -0.53139,-49.32475 46.69938,22.21288 c 0.083,0.0395 0.16586,0.0847 0.25006,0.1217 -3.31001,17.14209 2.79839,30.23586 11.78424,40.2266 0.34773,0.39526 0.76108,0.73572 1.21906,1.00414 11.30221,6.4521 20.79655,6.99911 28.38221,4.41215 7.58567,-2.58696 13.73725,-4.92629 18.81728,-10.68044 6.76902,-5.94633 9.04203,-16.49269 9.90878,-25.01229 0.11784,-10.04709 -5.59112,-21.3058 -20.88032,-28.75502 -0.45188,-0.22178 -0.93854,-0.37626 -1.43786,-0.45643 -6.30082,-1.02286 -12.65323,-2.0926 -18.97357,-1.94743 -2.10678,0.0484 -4.22421,0.23694 -6.3141,0.60857 -4.21959,0.75035 -8.31043,2.4329 -12.00305,5.17287 -0.69153,-0.62747 -1.46297,-1.14863 -2.3131,-1.55187 l -42.94844,-20.41753 c 1.1306,-1.8011 1.65144,-3.95307 1.43786,-6.05529 L 169.94063,12.999613 c -0.20349,-2.429755 -1.39886,-4.7794669 -3.25082,-6.4204317 -1.85197,-1.6409647 -4.34143,-2.5562438 -6.8455,-2.5255726 z m -9.59618,163.9492313 0,0 z m 111.55959,12.82428 c 8.34066,2.98048 12.80146,8.83371 12.7225,15.56559 -0.52192,14.16651 -10.39975,21.02728 -20.03685,22.62502 -4.93943,1.6845 -12.73755,-0.57732 -17.22364,-5.22544 -4.30437,-5.36245 -8.22528,-12.25024 -4.56467,-27.41058 6.00237,-10.50581 21.04796,-10.76963 29.10266,-5.55459 z m -101.33825,50.22103 c 9.69468,-0.0714 19.13216,5.11216 24.59899,13.04553 8.86571,10.18835 10.08761,40.94213 0.62719,47.7922 -10.21171,9.37645 -27.6858,12.97759 -37.42521,3.78947 -3.54224,-4.94619 -6.12245,-9.52873 -7.86958,-19.28591 -2.56041,-21.47176 7.13036,-43.01402 20.06861,-45.34129 z\\\"\\n       id=\\\"path3256\\\"\\n       sodipodi:nodetypes=\\\"cssssccccssssccccccsccsccsccscccccccscccssscccccsccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCopy.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective26\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3630\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1\\\"\\n     inkscape:cx=\\\"103.77793\\\"\\n     inkscape:cy=\\\"88.169551\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2832\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.5;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 47.647496,250.03858 46.764383,-103.11546 0,-29.46156 -62.352511,0 0,-29.46156 L 110,88 C 94.411879,88 85.058997,73.26922 85.058997,58.538439 c 0,-14.73078 9.352882,-29.46156 24.941003,-29.46156 l 15.58814,0 c 15.58811,0 24.94098,14.73078 24.94098,29.46156 C 150.52912,73.26922 141.17625,88 125.58814,88 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46156 46.76439,103.11546 -37.41152,0 -31.17624,-73.65389 -34.293883,73.65389 -37.411501,0 z\\\"\\n       id=\\\"path3606-1\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 148.05936,290.03859 46.76439,-103.11546 0,-29.46157 -62.35252,0 0,-29.46156 77.94063,0 c -15.58811,0 -24.941,-14.73077 -24.941,-29.46156 0,-14.73078 9.35289,-29.46156 24.941,-29.46156 l 15.58814,0 c 15.58811,0 24.941,14.73078 24.941,29.46156 C 250.941,113.26923 241.58811,128 226,128 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46157 46.76439,103.11546 -37.4115,0 -31.17626,-73.6539 -34.29388,73.6539 -37.4115,0 z\\\"\\n       id=\\\"path3606\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPaste.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"174.19811\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#646169;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 49.497473,254.94617 C 47.825874,262.83305 36.201583,261.20579 30.405591,265.55278 C 28.322858,267.11483 31.539377,271.49006 29.698484,273.33095 C 26.809794,276.21964 14.54002,280.60096 21.213203,283.93756 C 25.917942,286.28992 18.777684,290.61571 16.970562,292.42284 C 16.407185,292.98621 11.862619,303.34583 10.606601,305.85786 C 8.8718742,309.32732 0.66378058,311.62811 -1.4142135,312.22183 C -5.3815501,313.35535 -6.7727732,317.67427 -2.1213203,320 C 4.7353319,323.42833 10.071931,322.29954 16.970562,320 C 21.596201,318.45812 26.669572,317.77844 31.112698,320 C 36.578588,322.73295 50.364949,320 56.568541,320 C 62.249059,320 67.612413,321.41421 73.539103,321.41421 C 78.147222,321.41421 83.161272,321.90643 86.974132,320 C 87.233912,319.87011 86.176512,316.99055 84.852811,314.34315 C 84.737012,314.11155 86.869217,308.51143 84.852811,305.15076 C 82.266966,300.84102 73.174191,304.07874 70.003569,300.90812 C 68.147372,299.05192 69.987876,293.16133 71.417783,290.30152 C 71.59232,289.95244 65.401454,280.15842 65.053822,279.69491 C 63.028881,276.99499 57.766096,271.20963 63.639609,271.20963 C 66.398433,271.20963 65.234252,265.89903 66.468036,263.43146 C 68.386098,259.59534 68.589356,257.469 68.589356,252.82486 C 68.589356,252.05846 63.356113,251.15582 62.225395,250.70354 C 60.461018,249.99779 62.861998,252.89536 61.518288,254.23907 C 60.546463,255.2109 50.675985,254.23907 49.497473,254.94617 z \\\"\\n       id=\\\"path3196\\\"\\n       sodipodi:nodetypes=\\\"cssssssssssssssssssssssc\\\" />\\n    <path\\n       style=\\\"fill:#c5c2c2;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 53.8295,185.43081 C 48.117551,230.16693 94.90917,267.3379 133.61555,268.32077 C 162.93137,153.99105 110.3127,171.17033 53.8295,185.43081 z \\\"\\n       id=\\\"path3188\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 182.96729,2.557079 L 54.035294,186.04372 C 85.905043,179.15842 144.16417,242.05257 133.15455,268.24096 L 321.426,146.40224 C 302.97323,72.703226 258.08103,23.582864 182.96729,2.557079 z \\\"\\n       id=\\\"path3184\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#030303;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 86.523375,220.41621 L 50.5,255.09065 C 61.048111,255.62428 64.617354,261.18692 64.369775,269.5 L 100.39315,234.82557 C 100.05192,225.90076 96.35526,220.20575 86.523375,220.41621 z \\\"\\n       id=\\\"path3190\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.76067,103.45156 L 152.49269,163.67952 L 212.07438,184.96328 L 259.56663,143.19171 L 249.13583,87.282865 L 189.09687,58.210192 L 141.76067,103.45156 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3277\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,110.7288,43.297737)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,63.614871,89.09596)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,170.91744,72.502614)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,74.104227,147.90424)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,132.84879,169.84315)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,180.61948,128.82311)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainAtom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2848\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"48.145029\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"597\\\"\\n     inkscape:window-y=\\\"53\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:0.99991798;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path2173\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-191.02317,-104.15694)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3146\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.63132,-160.28246)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3148\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-123.67417,-89.452119)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3150\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-189.79433,-79.64646)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.5817451;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.5559432,-0.9629219,0.8671851,0.5006696,-82.679852,232.98137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174519;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3160\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-0.5559432,-0.962922,0.8671851,-0.5006694,98.56249,410.307)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3166\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,177.55034,-16.166303)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,147.55034,143.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainBond.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"479\\\"\\n     inkscape:window-y=\\\"21\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3182\\\"\\n       transform=\\\"translate(11.909887,59.760501)\\\">\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-112.32262,-38.207236)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-101.73514,-67.347684)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-77.354923,-30.572473)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-111.6846,-25.481361)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3188\\\"\\n       transform=\\\"translate(-15.161547,-19.009179)\\\">\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,428.39405,40.562444)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3174\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,417.80657,11.421996)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3176\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,393.42635,48.197207)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3178\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,427.75603,53.288319)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3180\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-1.3630223e-8,-1.1150628,0.8671872,4.2624012e-8,9.4810906,343.88434)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3195\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,-60.492046,52.100836)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3197\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,107.50794,52.100828)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,89.896893,-11.387448)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-12.449661,159.8337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-74.103107,22.612552)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3204\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,179.55034,179.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1.89162562, 18.91625616;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       d=\\\"M 30.44335,26.729064 L 30.44335,291.55665 L 295.27094,291.55665 L 295.27094,26.729064 L 30.44335,26.729064 z \\\"\\n       id=\\\"path3343\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 89.051436,52.692713 L 80.264142,218.75776 L 136.18329,186.31714 L 190.50474,269.73586 L 246.42389,237.29525 L 192.10243,153.87653 L 248.02157,121.43591 L 89.051436,52.692713 z \\\"\\n       id=\\\"path3345\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainMove.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainMove.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"198.18854\\\"\\n     inkscape:cy=\\\"129.1885\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 130,130 L 70,130 L 70,100 L 10,160 L 70,220 L 70,190 L 130,190 L 130,250 L 100,250 L 160,310 L 220,250 L 190,250 L 190,190 L 250,190 L 250,220 L 310,160 L 250,100 L 250,130 L 190,130 L 190,70 L 220,70 L 160,10 L 100,70 L 130,70 L 130,130 z \\\"\\n       id=\\\"path4831\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 70,181.11523 13.227539,0 16.743164,44.64844 16.831057,-44.64844 13.22754,0 0,65.61036 -8.65723,0 0,-57.61231 -16.91894,45 -8.920903,0 -16.918946,-45 0,57.61231 -8.613281,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7008\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 109.11328,107.96387 q 2.85645,0.96679 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 l 9.00879,17.92969 -9.53613,0 -8.39356,-16.83106 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.305668,-2.15332 l -9.667969,0 0,27.7295 -8.876953,0 0,-65.610356 20.039062,0 q 11.249998,0 16.787108,4.702149 5.53711,4.702148 5.53711,14.194336 0,6.196289 -2.90039,10.283201 -2.85644,4.08692 -8.34961,5.66895 z m -22.236327,-27.553714 0,23.291014 11.162109,0 q 6.416018,0 9.667968,-2.94433 3.2959,-2.988285 3.2959,-8.745121 0,-5.756836 -3.2959,-8.657227 -3.25195,-2.944336 -9.667968,-2.944336 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7017\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 191.65039,72 9.53613,0 16.30371,24.389648 L 233.88184,72 l 9.53613,0 -21.09375,31.50879 22.5,34.10156 -9.53613,0 -18.45704,-27.90527 -18.58886,27.90527 -9.58008,0 23.42285,-35.02441 L 191.65039,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7014\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 200,180.38965 8.87695,0 0,58.13965 31.94825,0 0,7.4707 -40.8252,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7011\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomSBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"98.625641\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1447\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 52.876953,215.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590821,-2.94433 3.471679,-2.98828 3.471679,-9.09668 0,-6.15235 -3.471679,-9.05274 -3.427735,-2.94433 -10.590821,-2.94433 l -14.238281,0 z m 0,-26.98242 0,19.77539 13.139649,0 q 6.503906,0 9.667968,-2.417 3.208008,-2.46093 3.208008,-7.4707 0,-4.96582 -3.208008,-7.42676 -3.164062,-2.46093 -9.667968,-2.46093 l -13.139649,0 z M 44,181.11523 l 22.675781,0 q 10.151367,0 15.644531,4.21875 5.493165,4.21875 5.493165,11.99707 0,6.02051 -2.8125,9.58008 -2.8125,3.55957 -8.261719,4.43848 6.547851,1.40625 10.151367,5.88867 3.647461,4.43848 3.647461,11.11817 0,8.78906 -5.976563,13.5791 -5.976562,4.79004 -17.006836,4.79004 l -23.554687,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6940\\\" />\\n      <path\\n         d=\\\"m 147.44727,220.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52636,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77735,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.16016 6.54785,-7.11914 17.62207,-7.11914 9.93164,0 15.68847,6.41602 5.80079,6.37207 5.80079,17.3584 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.59082 -3.60352,-3.95508 -9.58008,-3.95508 -6.76758,0 -10.85449,3.82324 -4.04297,3.82325 -4.65821,10.7666 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 64,73.115234 8.876953,0 0,58.139646 31.948247,0 0,7.47071 -40.8252,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6945\\\" />\\n      <path\\n         d=\\\"m 113.74609,89.506836 8.08594,0 0,49.218754 -8.08594,0 0,-49.218754 z m 0,-19.160156 8.08594,0 0,10.239257 -8.08594,0 0,-10.239257 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 178.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 268.15527,112.86914 q -9.7998,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64649 0,4.30664 2.8125,6.85546 2.85645,2.50489 7.73438,2.50489 6.72363,0 10.7666,-4.7461 4.08692,-4.79004 4.08692,-12.70019 l 0,-1.80176 -8.042,0 z m 16.12793,-3.33984 0,28.08105 -8.08593,0 0,-7.4707 q -2.76856,4.48242 -6.89942,6.63574 -4.13086,2.10938 -10.10742,2.10938 -7.55859,0 -12.04102,-4.21875 -4.43847,-4.2627 -4.43847,-11.38184 0,-8.30566 5.53711,-12.52441 5.58105,-4.21875 16.61132,-4.21875 l 11.3379,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613281 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21778,1.010742 -3.99902,1.010742 -7.69043,3.032227 l 0,-7.470704 q 4.43848,-1.713867 8.61328,-2.548828 4.17481,-0.878906 8.12989,-0.878906 10.67871,0 15.95215,5.537109 5.27343,5.53711 5.27343,16.787113 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 174,184.38965 13.22754,0 16.74316,44.64844 16.83106,-44.64844 13.22754,0 0,65.61035 -8.65723,0 0,-57.6123 -16.91895,45 -8.92089,0 -16.91895,-45 0,57.6123 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text2248\\\">\\n      <path\\n         d=\\\"m 275.90332,226.09863 q 0,-8.78906 -3.64746,-13.62304 -3.60352,-4.83399 -10.15137,-4.83399 -6.5039,0 -10.15137,4.83399 -3.60351,4.83398 -3.60351,13.62304 0,8.74512 3.60351,13.5791 3.64747,4.83399 10.15137,4.83399 6.54785,0 10.15137,-4.83399 3.64746,-4.83398 3.64746,-13.5791 z m 8.08594,19.07227 q 0,12.56836 -5.58106,18.67676 Q 272.82715,270 261.31348,270 q -4.2627,0 -8.042,-0.65918 -3.77929,-0.61523 -7.33886,-1.93359 l 0,-7.86621 q 3.55957,1.93359 7.03125,2.85644 3.47168,0.92285 7.07519,0.92285 7.9541,0 11.90918,-4.1748 3.95508,-4.13086 3.95508,-12.52442 l 0,-3.99902 q -2.50488,4.35059 -6.41602,6.50391 -3.91113,2.15332 -9.36035,2.15332 -9.05273,0 -14.58984,-6.89942 Q 240,237.48047 240,226.09863 q 0,-11.42578 5.53711,-18.32519 5.53711,-6.89942 14.58984,-6.89942 5.44922,0 9.36035,2.15332 3.91114,2.15332 6.41602,6.50391 l 0,-7.4707 8.08594,0 0,43.11035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6929\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 107.33105,183.26855 0,8.65723 q -5.05371,-2.41699 -9.536128,-3.60351 -4.482422,-1.18653 -8.657227,-1.18653 -7.250976,0 -11.206054,2.8125 -3.911133,2.8125 -3.911133,7.99805 0,4.35058 2.592773,6.5918 2.636719,2.19726 9.931641,3.55957 l 5.361328,1.09863 q 9.93164,1.88965 14.63379,6.67969 4.74609,4.74609 4.74609,12.74414 0,9.53613 -6.41601,14.458 Q 98.498047,248 86.149414,248 q -4.658203,0 -9.931641,-1.05469 -5.229492,-1.05469 -10.854492,-3.12011 l 0,-9.14063 q 5.405274,3.03223 10.590821,4.57031 5.185546,1.53809 10.195312,1.53809 7.602539,0 11.733398,-2.98828 4.130858,-2.98828 4.130858,-8.52539 0,-4.83399 -2.988279,-7.5586 -2.944336,-2.72461 -9.711914,-4.08691 l -5.405274,-1.05469 q -9.931641,-1.97754 -14.370117,-6.19629 -4.438477,-4.21875 -4.438477,-11.7334 0,-8.70117 6.108399,-13.71093 6.152344,-5.00977 16.918945,-5.00977 4.614258,0 9.404297,0.83496 4.79004,0.83496 9.7998,2.50488 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n      <path\\n         d=\\\"m 124.77734,197.50684 8.08594,0 0,49.21875 -8.08594,0 0,-49.21875 z m 0,-19.16016 8.08594,0 0,10.23926 -8.08594,0 0,-10.23926 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6944\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 84.876953,107.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590816,-2.94433 3.47168,-2.98828 3.47168,-9.09668 0,-6.15235 -3.47168,-9.05274 -3.42773,-2.94433 -10.590816,-2.94433 l -14.238281,0 z m 0,-26.982424 0,19.775394 13.139649,0 q 6.503908,0 9.667968,-2.416995 3.20801,-2.460938 3.20801,-7.470703 0,-4.965821 -3.20801,-7.426758 -3.16406,-2.460938 -9.667968,-2.460938 l -13.139649,0 z M 76,73.115234 l 22.675781,0 q 10.151369,0 15.644529,4.21875 5.49317,4.21875 5.49317,11.997071 0,6.020507 -2.8125,9.580078 -2.8125,3.559567 -8.26172,4.438477 6.54785,1.40625 10.15137,5.88867 3.64746,4.43848 3.64746,11.11817 0,8.78906 -5.97657,13.5791 -5.97656,4.79004 -17.006833,4.79004 l -23.554687,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 210.74316,80.745117 -12.04101,32.651363 24.12597,0 -12.08496,-32.651363 z M 205.7334,72 l 10.06347,0 25.00489,65.61035 -9.22852,0 -5.97656,-16.83105 -29.5752,0 -5.97656,16.83105 -9.36035,0 L 205.7334,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 281.36328,89.841797 0,7.646484 q -3.42773,-1.757812 -7.11914,-2.636719 -3.69141,-0.878906 -7.64648,-0.878906 -6.02051,0 -9.05274,1.845703 -2.98828,1.845703 -2.98828,5.537111 0,2.8125 2.15332,4.43848 2.15332,1.58203 8.65723,3.03222 l 2.76855,0.61524 q 8.61328,1.8457 12.2168,5.22949 3.64746,3.33984 3.64746,9.36035 0,6.85547 -5.44922,10.85449 -5.40527,3.99903 -14.89746,3.99903 -3.95508,0 -8.26172,-0.79102 -4.26269,-0.74707 -9.00879,-2.28516 l 0,-8.34961 q 4.48242,2.32911 8.83301,3.51563 4.35059,1.14258 8.61328,1.14258 5.71289,0 8.78906,-1.9336 3.07618,-1.97754 3.07618,-5.53711 0,-3.29589 -2.24122,-5.05371 -2.19726,-1.75781 -9.71191,-3.38379 l -2.8125,-0.65918 q -7.51465,-1.58203 -10.85449,-4.83398 -3.33985,-3.2959 -3.33985,-9.00879 0,-6.943358 4.92188,-10.722655 4.92187,-3.779297 13.97461,-3.779297 4.48242,0 8.4375,0.65918 3.95508,0.659179 7.29492,1.977539 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 190.87695,189.68457 0,24.65332 11.16211,0 q 6.19629,0 9.58008,-3.20801 3.38379,-3.20801 3.38379,-9.14062 0,-5.88867 -3.38379,-9.09668 -3.38379,-3.20801 -9.58008,-3.20801 l -11.16211,0 z M 182,182.38965 l 20.03906,0 q 11.03028,0 16.65528,5.00976 5.66894,4.96582 5.66894,14.58985 0,9.71191 -5.66894,14.67773 -5.625,4.96582 -16.65528,4.96582 l -11.16211,0 0,26.36719 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n      <path\\n         d=\\\"m 271.29687,223.43457 q 0,-8.9209 -3.6914,-13.97461 -3.64746,-5.09766 -10.06348,-5.09766 -6.41601,0 -10.10742,5.09766 -3.64746,5.05371 -3.64746,13.97461 0,8.9209 3.64746,14.01855 3.69141,5.05372 10.10742,5.05372 6.41602,0 10.06348,-5.05372 3.6914,-5.09765 3.6914,-14.01855 z m -27.50976,-17.18262 q 2.54883,-4.39453 6.41601,-6.5039 3.91114,-2.15332 9.31641,-2.15332 8.96484,0 14.5459,7.11914 5.625,7.11914 5.625,18.7207 0,11.60156 -5.625,18.7207 -5.58106,7.11914 -14.5459,7.11914 -5.40527,0 -9.31641,-2.10937 -3.86718,-2.15332 -6.41601,-6.54785 l 0,7.38281 -8.12988,0 0,-68.37891 8.12988,0 0,26.63086 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6939\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomDBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 73.413235,217.96387 q 2.856445,0.96679 5.537109,4.13086 2.724609,3.16406 5.449219,8.70117 l 9.008789,17.92969 -9.536133,0 -8.393555,-16.83106 q -3.251953,-6.5918 -6.328125,-8.74512 -3.032226,-2.15332 -8.305664,-2.15332 l -9.667968,0 0,27.7295 -8.876954,0 0,-65.61036 20.039063,0 q 11.25,0 16.787109,4.70215 5.53711,4.70215 5.53711,14.19434 0,6.19629 -2.900391,10.2832 -2.856445,4.08692 -8.349609,5.66895 z m -22.236328,-27.55371 0,23.29101 11.162109,0 q 6.416016,0 9.667969,-2.94433 3.295898,-2.98829 3.295898,-8.74512 0,-5.75684 -3.295898,-8.65723 -3.251953,-2.94433 -9.667969,-2.94433 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6988\\\" />\\n      <path\\n         d=\\\"m 99.648586,229.30176 0,-29.79492 8.085934,0 0,29.4873 q 0,6.98731 2.72461,10.50293 2.72461,3.47168 8.17383,3.47168 6.54785,0 10.32715,-4.1748 3.82324,-4.17481 3.82324,-11.38184 l 0,-27.90527 8.08594,0 0,49.21875 -8.08594,0 0,-7.5586 q -2.94433,4.48242 -6.85547,6.67969 Q 122.0607,250 116.91909,250 q -8.48144,0 -12.87597,-5.27344 -4.394534,-5.27344 -4.394534,-15.4248 z m 20.346684,-30.98145 0,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6990\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 48,73.115234 37.705078,0 0,7.470703 -28.828125,0 0,19.335938 26.015625,0 0,7.470705 -26.015625,0 0,31.33301 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7003\\\" />\\n      <path\\n         d=\\\"m 136.68164,112.09473 0,3.95507 -37.177734,0 q 0.527344,8.34961 5.009764,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35058,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.676755,-6.85547 -6.855469,-6.85547 -6.855469,-18.54492 0,-12.08496 6.503906,-19.160157 6.547848,-7.119141 17.622068,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60351,-3.955078 -9.58008,-3.955078 -6.76757,0 -10.85449,3.823242 -4.04297,3.823247 -4.658202,10.766607 l 28.828122,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7005\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 229.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6998\\\" />\\n      <path\\n         d=\\\"m 262.46484,94.060547 q -6.5039,0 -10.2832,5.097656 -3.7793,5.053707 -3.7793,13.886717 0,8.83301 3.73536,13.93067 3.77929,5.05371 10.32714,5.05371 6.45996,0 10.23926,-5.09766 3.7793,-5.09766 3.7793,-13.88672 0,-8.74512 -3.7793,-13.842772 -3.7793,-5.141601 -10.23926,-5.141601 z m 0,-6.855469 q 10.54688,0 16.56739,6.855469 6.0205,6.855473 6.0205,18.984373 0,12.08496 -6.0205,18.98438 -6.02051,6.85547 -16.56739,6.85547 -10.59082,0 -16.61132,-6.85547 -5.97657,-6.89942 -5.97657,-18.98438 0,-12.1289 5.97657,-18.984373 6.0205,-6.855469 16.61132,-6.855469 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7000\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 211.11328,219.23828 q 2.85645,0.9668 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 L 231.1084,250 l -9.53613,0 -8.39356,-16.83105 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.30567,-2.15332 l -9.66797,0 0,27.72949 -8.87695,0 0,-65.61035 20.03906,0 q 11.25,0 16.78711,4.70215 5.53711,4.70215 5.53711,14.19433 0,6.19629 -2.90039,10.28321 -2.85644,4.08691 -8.34961,5.66894 z m -22.23633,-27.55371 0,23.29102 11.16211,0 q 6.41602,0 9.66797,-2.94434 3.2959,-2.98828 3.2959,-8.74512 0,-5.75683 -3.2959,-8.65722 -3.25195,-2.94434 -9.66797,-2.94434 l -11.16211,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6993\\\" />\\n      <path\\n         d=\\\"m 283.13965,220.29297 0,29.70703 -8.08594,0 0,-29.44336 q 0,-6.9873 -2.72461,-10.45898 -2.72461,-3.47168 -8.17383,-3.47168 -6.54785,0 -10.32715,4.1748 -3.77929,4.17481 -3.77929,11.38184 l 0,27.81738 -8.12988,0 0,-68.37891 8.12988,0 0,26.80664 q 2.90039,-4.43847 6.81152,-6.63574 3.95508,-2.19726 9.09668,-2.19726 8.48145,0 12.83203,5.27343 4.35059,5.2295 4.35059,15.42481 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6995\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"81.839927\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1680\\\"\\n     inkscape:window-height=\\\"974\\\"\\n     inkscape:window-x=\\\"96\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 68.82914,189.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004882,65.61036 -9.228515,0 -5.976563,-16.83106 -29.575195,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6970\\\" />\\n      <path\\n         d=\\\"m 141.91019,199.39648 0,7.5586 q -3.42773,-1.88965 -6.89941,-2.8125 -3.42773,-0.9668 -6.94336,-0.9668 -7.86621,0 -12.2168,5.00977 -4.35058,4.96582 -4.35058,13.97461 0,9.00879 4.35058,14.01855 4.35059,4.96582 12.2168,4.96582 3.51563,0 6.94336,-0.92285 3.47168,-0.9668 6.89941,-2.85645 l 0,7.47071 q -3.38378,1.58203 -7.03125,2.37304 Q 131.27543,248 127.18851,248 q -11.11816,0 -17.66601,-6.9873 -6.54785,-6.98731 -6.54785,-18.85254 0,-12.04102 6.59179,-18.94043 6.63575,-6.89942 18.14942,-6.89942 3.73535,0 7.29492,0.79102 3.55957,0.74707 6.89941,2.28515 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6972\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 50,73.115234 8.876953,0 0,58.139646 31.948242,0 0,7.47071 -40.825195,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6983\\\" />\\n      <path\\n         d=\\\"m 122.11426,113.98438 q -9.79981,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64648 0,4.30664 2.8125,6.85547 2.85644,2.50488 7.73437,2.50488 6.72364,0 10.76661,-4.74609 4.08691,-4.79004 4.08691,-12.7002 l 0,-1.80175 -8.04199,0 z m 16.12793,-3.33985 0,28.08106 -8.08594,0 0,-7.47071 q -2.76855,4.48242 -6.89941,6.63574 Q 119.12598,140 113.14941,140 q -7.55859,0 -12.04101,-4.21875 -4.438478,-4.2627 -4.438478,-11.38184 0,-8.30566 5.537108,-12.52441 5.58106,-4.21875 16.61133,-4.21875 l 11.33789,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613277 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21777,1.010742 -3.99903,1.010743 -7.69043,3.032227 l 0,-7.470703 q 4.43847,-1.713867 8.61328,-2.548828 4.1748,-0.878907 8.12988,-0.878907 10.67871,0 15.95215,5.53711 5.27344,5.537109 5.27344,16.787108 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6985\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 233.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6978\\\" />\\n      <path\\n         d=\\\"m 289.49219,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.65821,10.766601 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6980\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 194.98926,184.38965 8.9209,0 0,39.8584 q 0,10.54687 3.82324,15.20507 3.82324,4.61426 12.39258,4.61426 8.52539,0 12.34863,-4.61426 3.82324,-4.6582 3.82324,-15.20507 l 0,-39.8584 8.9209,0 0,40.95703 q 0,12.83203 -6.37207,19.37988 -6.32813,6.54785 -18.7207,6.54785 -12.43653,0 -18.8086,-6.54785 -6.32812,-6.54785 -6.32812,-19.37988 l 0,-40.95703 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6975\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomNoble.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 71.928711,191.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004878,65.61036 -9.228511,0 -5.976562,-16.83106 -29.575196,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6950\\\" />\\n      <path\\n         d=\\\"m 139.69238,207.06543 q -1.3623,-0.79102 -2.98828,-1.14258 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48243 -3.64746,4.43847 -3.64746,12.78808 l 0,25.92774 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63574,-6.63574 4.08692,-2.19727 9.93164,-2.19727 0.83496,0 1.84571,0.13184 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6952\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 40,73.115234 8.876953,0 0,26.894536 32.255859,0 0,-26.894536 8.876954,0 0,65.610356 -8.876954,0 0,-31.24512 -32.255859,0 0,31.24512 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6965\\\" />\\n      <path\\n         d=\\\"m 149.42383,112.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.160157 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823247 -4.6582,10.766607 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6967\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 184.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6960\\\" />\\n      <path\\n         d=\\\"m 293.88672,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.6582,10.766601 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6962\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 180,184.38965 8.87695,0 0,27.72949 29.44336,-27.72949 11.42578,0 -32.56347,30.58594 L 232.0752,250 l -11.68946,0 -31.50879,-31.59668 0,31.59668 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6955\\\" />\\n      <path\\n         d=\\\"m 267.23145,208.33984 q -1.36231,-0.79101 -2.98829,-1.14257 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48242 -3.64746,4.43848 -3.64746,12.78809 l 0,25.92773 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63575,-6.63574 4.08691,-2.19726 9.93164,-2.19726 0.83496,0 1.8457,0.13183 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6957\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondFour.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondFour.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,180 L 39.961095,180\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,219.98053 L 39.941666,219.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,139.98053 L 39.941663,139.98053\\\"\\n       id=\\\"path3576\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,99.980529 L 39.941665,99.980529\\\"\\n       id=\\\"path3578\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"1.0.2 (1.0.2+r75+1)\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAny.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.36294465\\\"\\n     inkscape:cx=\\\"-23.567935\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1023\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:document-rotation=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       cx=\\\"20.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <circle\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       id=\\\"path3746\\\"\\n       cx=\\\"60.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 150,160 H 100\\\"\\n       id=\\\"path838\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,140 H 180\\\"\\n       id=\\\"path840\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,180 H 180\\\"\\n       id=\\\"path842\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,120 H 260\\\"\\n       id=\\\"path844\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 H 260\\\"\\n       id=\\\"path846\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,200 H 260\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAddTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2948\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"92.512755\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1421\\\"\\n     inkscape:window-height=\\\"893\\\"\\n     inkscape:window-x=\\\"278\\\"\\n     inkscape:window-y=\\\"110\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:2.00970001\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"m 140.71429,135 a 8.9285717,9.2857141 0 1 1 -17.85714,0 8.9285717,9.2857141 0 1 1 17.85714,0 z\\\"\\n       transform=\\\"matrix(0,1.9791656,-1.9030439,0,400.81202,-104.81214)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,130.35436 51.64564,35.560356\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 176.5625,165.59375 a 9.6254627,9.6254627 0 0 0 -3.875,18.3125 L 280,237 a 9.6254627,9.6254627 0 1 0 8.53125,-17.25 l -107.3125,-53.09375 a 9.6254627,9.6254627 0 0 0 -4.65625,-1.0625 z\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,181.56035 51.64564,276.35436\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 283.65625,72.625 a 9.6254627,9.6254627 0 0 0 -4.34375,1.0625 l -107.34375,53.125 a 9.6254627,9.6254627 0 1 0 8.53125,17.25 l 107.34375,-53.125 a 9.6254627,9.6254627 0 0 0 -4.1875,-18.3125 z\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondInsert.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2958\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"103.22259\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1204\\\"\\n     inkscape:window-height=\\\"925\\\"\\n     inkscape:window-x=\\\"508\\\"\\n     inkscape:window-y=\\\"54\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4800\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 113.39098,158.69004 53.078266,263.15473\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 299.98723,58.483019 240.10753,162.19765\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"M 116.5625 151.3125 A 9.6254923 9.6254923 0 0 0 111.09375 152.90625 A 9.6254923 9.6254923 0 0 0 116.53125 170.53125 L 159.75 170.5625 C 158.10087 167.65453 157.15625 164.30057 157.15625 160.71875 C 157.15625 157.31663 158.0016 154.11729 159.5 151.3125 L 116.5625 151.3125 z M 194.78125 151.3125 C 196.27965 154.11729 197.15625 157.31663 197.15625 160.71875 C 197.15625 164.30057 196.18038 167.65453 194.53125 170.5625 L 236.28125 170.59375 A 9.6321508 9.6321508 0 0 0 236.28125 151.3125 L 194.78125 151.3125 z \\\"\\n       id=\\\"path4284\\\" />\\n    <path\\n       transform=\\\"translate(157.71429,141.42857)\\\"\\n       d=\\\"M 40,20 A 20,20 0 1 1 0,20 20,20 0 1 1 40,20 z\\\"\\n       sodipodi:ry=\\\"20\\\"\\n       sodipodi:rx=\\\"20\\\"\\n       sodipodi:cy=\\\"20\\\"\\n       sodipodi:cx=\\\"20\\\"\\n       id=\\\"path3660\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:9;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondSwitch.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1215\\\"\\n     inkscape:window-height=\\\"839\\\"\\n     inkscape:window-x=\\\"145\\\"\\n     inkscape:window-y=\\\"105\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294119;stroke:#000000;stroke-width:8;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 225.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 225.375,15.59375 z\\\"\\n       id=\\\"path3132\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-104.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.61589,160 L 63.973265,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 225.41813,293.9522 L 165.1533,170.90493\\\"\\n       id=\\\"path3158\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 197.79178,142.41668 C 208.33227,154.9762 208.33227,166.6984 197.79178,177.58331\\\"\\n       id=\\\"path3134\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 213.88997,98.458413 C 237.84561,141.99804 237.84561,183.02576 213.88997,221.54158\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.584;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send);fill-opacity:1\\\"\\n       d=\\\"M 238.03726,63.291789 C 275.40805,126.92663 275.40805,191.39877 238.03726,256.70821\\\"\\n       id=\\\"path3140\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#4a8be0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"229.81367\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1859\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4149\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4477\\\"\\n       transform=\\\"translate(-6.9348763,2.361824)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3132\\\"\\n         d=\\\"m 285.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 285.375,15.59375 Z\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans';text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate\\\" />\\n      <circle\\n         r=\\\"17.671122\\\"\\n         cy=\\\"160\\\"\\n         cx=\\\"216\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         id=\\\"path2160\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3152\\\"\\n         d=\\\"M 201.61589,160 63.97327,160\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         id=\\\"path3158\\\"\\n         d=\\\"M 285.41813,293.9522 225.1533,170.90493\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <circle\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n         id=\\\"circle4151\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         cx=\\\"56\\\"\\n         cy=\\\"160\\\"\\n         r=\\\"17.671122\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"ccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4155\\\"\\n         d=\\\"m 110,140 c 0,-30 10,-80 36,-80 24,0 34,60 34,100 0,40 -10.12741,99.49035 -34,100 -26,0 -36,-48.6 -36,-78.6\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#ffffff;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4475\\\"\\n         d=\\\"m 110,175 -15,25 30,0 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondLinear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTrigonal.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-82.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 148.66986,160 L 28.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 248.37547,27.62453 L 195.2535,134.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 247.41813,293.9522 L 194.29616,186.61922\\\"\\n       id=\\\"path3158\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"148.55302\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-96.82577,-80.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 138.34073,193.65927 L 43.546726,268.25545\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 236.37547,43.62453 L 183.2535,150.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 189.54672,193.65927 L 284.34073,268.25545\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 90.29616,44.33351 L 143.41813,151.66649\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTetra2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"146.11708\\\"\\n     inkscape:cy=\\\"127.88711\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 256.37547,43.62453 L 176.82086,133.14201\\\"\\n       id=\\\"path2233\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 255.17914,276.37547 L 175.62453,186.85799\\\"\\n       id=\\\"path2235\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSqPlan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOcta2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905712,230.35583 L 132.37547,173.62453\\\"\\n       id=\\\"path2305\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.12226,146.50851 L 293.59202,89.777207\\\"\\n       id=\\\"path2505\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905714,89.62453 L 132.37547,146.35583\\\"\\n       id=\\\"path2507\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.55084,173.92006 L 294.02059,230.65136\\\"\\n       id=\\\"path2509\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 182.07157,136.65434 L 268.37547,53.62453\\\"\\n       id=\\\"path2303\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 52.07157,264.65433 L 138.37547,181.62453\\\"\\n       id=\\\"path2305\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondMetalLigate.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-height=\\\"943\\\"\\n     inkscape:window-width=\\\"1650\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"146.31871\\\"\\n     inkscape:cx=\\\"74.452978\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <use\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,127.98962,187.61498)\\\"\\n       id=\\\"use4287\\\"\\n       x=\\\"0\\\"\\n       xlink:href=\\\"#char45\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       y=\\\"0\\\"\\n       width=\\\"100%\\\"\\n       height=\\\"100%\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path850\\\"\\n       d=\\\"M 160,110 V 20\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,300 V 210\\\"\\n       id=\\\"path852\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 205,135 282.94228,90\\\"\\n       id=\\\"path854\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path856\\\"\\n       d=\\\"m 205,185 77.94228,45\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 37.05772,90 115,135\\\"\\n       id=\\\"path858\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path860\\\"\\n       d=\\\"M 37.05772,230 115,185\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactPath.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"161.66868\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4206\\\"\\n       transform=\\\"matrix(1.1572994,0,0,1.1572994,-14.188294,6.2718173)\\\"\\n       style=\\\"stroke-width:6.91264508;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"35.082012\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4180\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"265.94345\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4182\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:6\\\"\\n       d=\\\"m 60,210 c 90,-70 110,-70 200,0\\\"\\n       id=\\\"path4210\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"14.186408\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4271\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       transform=\\\"translate(27.870353,1.568337)\\\">\\n      <line\\n         x1=\\\"132.12965\\\"\\n         y1=\\\"38.988956\\\"\\n         x2=\\\"17.069948\\\"\\n         y2=\\\"122.58849\\\"\\n         id=\\\"line4215\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"17.069948\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"61.017296\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4217\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"61.017296\\\"\\n         y1=\\\"257.85382\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4219\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4221\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"132.12965\\\"\\n         y2=\\\"38.988956\\\"\\n         id=\\\"line4223\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:24;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"66.571121\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactArene.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <path\\n       edge=\\\"none\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       id=\\\"char45\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-12.077558\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4369\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"79.874969\\\"\\n         y1=\\\"53.341728\\\"\\n         x2=\\\"42.383801\\\"\\n         y2=\\\"124.96636\\\"\\n         id=\\\"line4253\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"42.383801\\\"\\n         y1=\\\"124.96636\\\"\\n         x2=\\\"159.32974\\\"\\n         y2=\\\"157.25311\\\"\\n         id=\\\"line4255\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"159.32974\\\"\\n         y1=\\\"157.25311\\\"\\n         x2=\\\"277.61575\\\"\\n         y2=\\\"130.34207\\\"\\n         id=\\\"line4257\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"277.61575\\\"\\n         y1=\\\"130.34207\\\"\\n         x2=\\\"243.44348\\\"\\n         y2=\\\"57.081509\\\"\\n         id=\\\"line4259\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"243.44348\\\"\\n         y1=\\\"57.081509\\\"\\n         x2=\\\"79.874969\\\"\\n         y2=\\\"53.341728\\\"\\n         id=\\\"line4261\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <line\\n       style=\\\"stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"line4275\\\"\\n       y2=\\\"104.59695\\\"\\n       x2=\\\"160.5295\\\"\\n       y1=\\\"208.16769\\\"\\n       x1=\\\"160.5295\\\" />\\n    <ellipse\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:39\\\"\\n       id=\\\"ellipse4281\\\"\\n       ry=\\\"28.668024\\\"\\n       rx=\\\"69.736992\\\"\\n       cy=\\\"100.79803\\\"\\n       cx=\\\"160\\\" />\\n    <use\\n       height=\\\"100%\\\"\\n       width=\\\"100%\\\"\\n       y=\\\"0\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       xlink:href=\\\"#char45\\\"\\n       x=\\\"0\\\"\\n       id=\\\"use4287\\\"\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,128.5194,269.61687)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactClear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"109.54685\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:13.15014392\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"121.49729\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 131.71573,131.71573 56.56854,56.56854\\\"\\n       id=\\\"path4142\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 188.28427,131.71573 -56.56854,56.56854\\\"\\n       id=\\\"path4144\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondPolymer.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"56\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-width=\\\"1864\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"163.33901\\\"\\n     inkscape:cx=\\\"23.277781\\\"\\n     inkscape:zoom=\\\"0.35\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <text\\n       id=\\\"text844\\\"\\n       y=\\\"296.98486\\\"\\n       x=\\\"241.67216\\\"\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.43909\\\"\\n       xml:space=\\\"preserve\\\"><tspan\\n         style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;stroke-width:2.43909\\\"\\n         y=\\\"296.98486\\\"\\n         x=\\\"241.67216\\\"\\n         id=\\\"tspan842\\\"\\n         sodipodi:role=\\\"line\\\">n</tspan></text>\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       id=\\\"path846\\\"\\n       d=\\\"M 110,30 H 50 v 260 h 60\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 164,30 h 60 v 260 h -60\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionChain.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3810\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.621464,0,0,2.621464,4.540555,48.791192)\\\">\\n      <line\\n         id=\\\"line3812\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3814\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3816\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3818\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3820\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3822\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3824\\\"\\n         y2=\\\"31.999731\\\"\\n         x2=\\\"79.942604\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3826\\\"\\n         y2=\\\"46.999462\\\"\\n         x2=\\\"105.92352\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n      <line\\n         id=\\\"line3828\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"79.942299\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3885\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-171.09202,33.69748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,158.10549,34.777218)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,405.75369,116.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3889\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-141.7775,-40.634342)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,48.105487,74.777215)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,295.75368,156.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-196.12626,-147.6538)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionSmRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4170\\\"\\n       inkscape:persp3d-origin=\\\"54 : 21.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 32 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 32 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-0\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4150\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9029405,0,0,2.9029405,4.6189711,81.382589)\\\">\\n      <line\\n         id=\\\"line4152\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4154\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4156\\\"\\n         y2=\\\"62\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4158\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"62\\\"\\n         x1=\\\"53.98\\\" />\\n      <line\\n         id=\\\"line4160\\\"\\n         y2=\\\"17\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4162\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4164\\\"\\n         y2=\\\"2.000165\\\"\\n         x2=\\\"2.0191426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4166\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"105.9426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-255.281,-36.286753)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-6\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,-79.76244)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-8\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-103.88435,-36.613327)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-9\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-104.66888,51.903875)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-00\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-6\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-3\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,92.833999)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-9\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-4\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-254.51397,52.038479)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-4\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-60\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionRingBlk.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3937\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.4899701,0,0,2.4899701,26.948713,30.700421)\\\">\\n      <line\\n         id=\\\"line3939\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3941\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3943\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3945\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3947\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3949\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3951\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3953\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3955\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"79.942001\\\" />\\n      <line\\n         id=\\\"line3957\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3959\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3961\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"27.9795\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3963\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"79.941498\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"79.942001\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-81.933097,-38.115125)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-7\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.7766,109.10718)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-1\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-2\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17313,72.504683)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-3\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-1\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17314,-1.722748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-68\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-6\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.77659,-38.895518)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-8\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-27\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.06844,-3.787902)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-9\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-54\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-12\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.75682,71.934407)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-33\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-4\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-13\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-82.048668,108.41879)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-77\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-18.028899,71.246022)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-93\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-19\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-17.340514,-3.217626)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionCurElement.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-30.914228\\\"\\n     inkscape:cy=\\\"168.99852\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <ellipse\\n       ry=\\\"45.784992\\\"\\n       rx=\\\"47.872509\\\"\\n       cy=\\\"170\\\"\\n       cx=\\\"160.1275\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5.40349102;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841\\\"\\n       transform=\\\"translate(-1.19968,0)\\\">\\n      <path\\n         d=\\\"m 162.0258,144.65547 -10.63798,28.84679 21.31479,0 -10.67681,-28.84679 z m -4.42602,-7.72612 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         id=\\\"path4196\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4\\\"\\n       cx=\\\"255.71176\\\"\\n       cy=\\\"259.69077\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1\\\">\\n      <path\\n         d=\\\"m 257.17732,233.76078 -10.63798,28.84678 21.31479,0 -10.67681,-28.84678 z m -4.42602,-7.72613 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4190\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-9\\\"\\n       cx=\\\"62.127495\\\"\\n       cy=\\\"260\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-4\\\">\\n      <path\\n         d=\\\"m 63.593049,234.07001 -10.637981,28.84679 21.314787,0 -10.676806,-28.84679 z m -4.426021,-7.72612 8.890868,0 22.091281,57.96534 -8.153197,0 -5.280166,-14.86987 -26.129055,0 -5.280166,14.86987 -8.269671,0 22.130106,-57.96534 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4187\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-5\\\"\\n       cx=\\\"160.1275\\\"\\n       cy=\\\"60\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-5\\\"\\n       transform=\\\"translate(-1.49992,0)\\\">\\n      <path\\n         d=\\\"m 161.59305,34.070018 -10.63798,28.846788 21.31479,0 -10.67681,-28.846788 z m -4.42602,-7.726125 8.89087,0 22.09128,57.965349 -8.1532,0 -5.28017,-14.869878 -26.12905,0 -5.28017,14.869878 -8.26967,0 22.13011,-57.965349 z\\\"\\n         id=\\\"path4193\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-241.68207,-85.517816)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.86079,-84.223172)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.45883,29.712228)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.59123,4.5160638)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-266.7094,126.04463)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.49437,124.16046)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionToggle.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c -46.9442,0 -85,-38.0558 -85,-85 0,-46.9442 38.0558,-85 85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n    <path\\n       style=\\\"fill:#000000;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c 46.9442,0 85,-38.0558 85,-85 0,-46.9442 -38.0558,-85 -85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1-7\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionUncurrent.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-40.106616\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1850\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"70\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"M 160 74 C 113.0558 74 75 112.0558 75 159 C 75 205.9442 113.0558 244 160 244 C 206.9442 244 245 205.9442 245 159 C 245 112.0558 206.9442 74 160 74 z \\\"\\n       id=\\\"path2875-1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveJoin.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 310,160\\\"\\n       id=\\\"path2161\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       id=\\\"path2163\\\"\\n       sodipodi:cx=\\\"160.35715\\\"\\n       sodipodi:cy=\\\"160.71428\\\"\\n       sodipodi:rx=\\\"10.357142\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"M 170.71429 160.71428 A 10.357142 10 0 1 1  150,160.71428 A 10.357142 10 0 1 1  170.71429 160.71428 z\\\"\\n       transform=\\\"matrix(1.9310346,0,0,2,-149.65519,-161.42855)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10.5;stroke-miterlimit:4;stroke-dasharray:10.5, 21;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"159.64285\\\"\\n       sodipodi:rx=\\\"40\\\"\\n       sodipodi:ry=\\\"39.642857\\\"\\n       d=\\\"M 200 159.64285 A 40 39.642857 0 1 1  120,159.64285 A 40 39.642857 0 1 1  200 159.64285 z\\\"\\n       transform=\\\"matrix(0.8835172,0,0,0.8914768,18.63725,17.682092)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainNew.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainNew.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3748\\\">\\n      <stop\\n         id=\\\"stop3750\\\"\\n         offset=\\\"0\\\"\\n         style=\\\"stop-color:#b1b1b1;stop-opacity:1;\\\" />\\n      <stop\\n         id=\\\"stop3752\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#f8f8f8;stop-opacity:1;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3732\\\">\\n      <stop\\n         style=\\\"stop-color:#2c2c2c;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3734\\\" />\\n      <stop\\n         style=\\\"stop-color:#aaaaaa;stop-opacity:0.75294119;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3736\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3724\\\">\\n      <stop\\n         style=\\\"stop-color:#888888;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3726\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3728\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3302\\\">\\n      <stop\\n         style=\\\"stop-color:#9d9d9d;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3304\\\" />\\n      <stop\\n         style=\\\"stop-color:#dfdfdf;stop-opacity:1;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3306\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       id=\\\"perspective2858\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2919\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3732\\\"\\n       id=\\\"radialGradient3738\\\"\\n       cx=\\\"162.18814\\\"\\n       cy=\\\"173.88938\\\"\\n       fx=\\\"162.18814\\\"\\n       fy=\\\"173.88938\\\"\\n       r=\\\"121.40368\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.99372304,0,1.0914969)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3748\\\"\\n       id=\\\"radialGradient3746\\\"\\n       cx=\\\"159.69394\\\"\\n       cy=\\\"159.28571\\\"\\n       fx=\\\"159.69394\\\"\\n       fy=\\\"159.28571\\\"\\n       r=\\\"155.90823\\\"\\n       gradientTransform=\\\"matrix(1,0,0,1.0019631,0,-0.31268812)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"51.002171\\\"\\n     inkscape:cy=\\\"165.43111\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1283\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"23\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3738);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 70.323695,204.27689 C 41.841631,206.80461 27.43488,166.54249 59.305446,137.55529 49.873891,113.58226 39.63241,89.128318 90.523819,87.361033 106.27301,49.269942 126.50785,43.380107 172.54857,70.221535 c 24.08035,-4.949896 54.09769,-38.514586 71.00648,30.606245 42.5116,9.78214 51.34305,33.15299 23.87288,77.12773 16.04417,28.54308 14.43112,49.54596 -18.36375,56.92763 0.70405,25.67554 0.0649,50.80591 -47.13361,31.8305 -27.699,35.95486 -57.19689,38.30078 -88.146,-3.67275 -34.966493,0.38164 -56.960187,2.40605 -43.460875,-58.764 z\\\"\\n       id=\\\"path2948\\\"\\n       sodipodi:nodetypes=\\\"cccccccccc\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3746);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 77.05707,182.24039 C 63.933812,160.98392 31.572476,151.75124 4.2142019,139.39165 30.679923,141.54169 57.327987,144.60344 81.954069,137.55529 72.559539,108.605 63.929901,79.569724 37.881073,52.469912 c 24.509908,20.813833 50.021015,38.957802 80.188367,44.68512 4.8179,-29.638769 8.20842,-60.229129 7.3455,-93.6551159 7.91156,33.7919259 24.82706,63.0818819 44.073,91.2066169 18.18443,-22.393883 31.73946,-46.639529 40.40025,-72.842869 -3.97926,28.157749 -6.10209,56.315497 1.22425,84.473246 30.1815,-5.53135 54.99364,-18.221839 79.57624,-31.218376 -21.4992,23.026775 -42.89749,46.093916 -55.09124,72.842866 25.48741,8.04662 52.18744,10.03009 79.57624,8.56974 -29.54737,11.57525 -58.76632,23.25998 -77.12774,38.56388 12.53395,26.2048 32.69325,46.69059 52.64274,67.33374 -25.06648,-10.42451 -44.73179,-24.08972 -78.35199,-29.38199 -3.69624,29.59544 5.33453,54.10007 10.40613,80.18837 -17.43375,-21.93842 -27.4327,-46.35509 -60.60037,-63.04887 -35.09654,11.6295 -42.37898,40.95888 -58.15188,64.88524 4.3981,-26.75973 7.48188,-53.95757 0.61212,-84.47325 -28.70497,-0.76993 -55.11896,14.49699 -82.02474,26.32138 19.90929,-22.09375 43.397129,-38.46182 54.47912,-74.67925 z\\\"\\n       id=\\\"path2950\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccccccccccc\\\" />\\n    <g\\n       id=\\\"g2933\\\"\\n       transform=\\\"matrix(0.66308916,0,0,0.66308916,51.085812,66.604893)\\\">\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-168.76512,-87.437593)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8-5\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.1158,-189.26245)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-9\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-231.66709,-98.469883)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-99.709926,-156.21097)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-189.70992,-49.068112)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-133.68722,-145.69101)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-209.20179,-147.34435)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-148.68722,-55.691026)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-198.80993,-119.18415)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-93.487486,-110.91579)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-7\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-152.05893,-154.48722)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-144.70993,-87.639533)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-2\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-104.52421,-89.184173)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomInline.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"72.356688\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4152\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4154\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4156\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFormula.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3645\\\"\\n       cx=\\\"165\\\"\\n       cy=\\\"160\\\"\\n       fx=\\\"165\\\"\\n       fy=\\\"160\\\"\\n       r=\\\"130\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.80769231,0,30.769231)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.1503782\\\"\\n     inkscape:cx=\\\"147.23233\\\"\\n     inkscape:cy=\\\"155.47208\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <rect\\n       style=\\\"fill:url(#radialGradient3645);fill-opacity:1.0;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"rect2865\\\"\\n       width=\\\"250\\\"\\n       height=\\\"200\\\"\\n       x=\\\"40\\\"\\n       y=\\\"60\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 103.57242,189.11313 q 4.13353,0 7.17288,-1.39811 3.03936,-1.45889 5.2277,-3.7688 2.24912,-2.30991 3.70801,-5.22769 1.45889,-2.91778 2.43149,-5.89635 l 12.76529,5.89635 q -1.51967,4.61982 -4.01195,9.05728 -2.49227,4.43746 -6.26107,7.84154 -3.70802,3.40408 -8.87492,5.53163 -5.16691,2.06676 -12.15743,2.06676 -9.118068,0 -15.804652,-3.2825 -6.625797,-3.34329 -11.002471,-9.23965 -4.376673,-5.95713 -6.504223,-14.10261 -2.066762,-8.14548 -2.066762,-17.81063 0,-10.02988 2.066762,-18.11456 2.12755,-8.08469 6.382649,-13.7379 4.315886,-5.71399 10.880896,-8.75334 6.56501,-3.10015 15.439931,-3.10015 6.86895,0 12.03585,1.76283 5.16691,1.76283 8.87492,4.98455 3.76881,3.16093 6.20029,7.5376 2.49227,4.31589 3.89038,9.54358 l -12.94766,4.31589 q -0.66866,-2.73543 -2.12755,-5.2277 -1.45889,-2.55306 -3.70802,-4.49825 -2.18833,-1.94518 -5.1669,-3.10014 -2.97857,-1.21574 -6.74737,-1.21574 -5.349271,0 -9.178861,2.12755 -3.829589,2.06676 -6.321861,5.95714 -2.431485,3.89037 -3.647228,9.36121 -1.154955,5.41006 -1.154955,12.15743 0,6.68658 1.154955,12.279 1.215743,5.53163 3.708015,9.54358 2.492272,4.01195 6.382649,6.26107 3.890376,2.24913 9.361216,2.24913 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4157\\\" />\\n      <path\\n         d=\\\"m 218.21695,202 0,-36.71543 -30.57592,0 0,36.71543 -14.71049,0 0,-85.64907 14.71049,0 0,34.10158 30.57592,0 0,-34.10158 14.71049,0 0,85.64907 -14.71049,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4159\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2857\\\">\\n      <path\\n         d=\\\"m 162.47581,218.36884 -8.86336,-16.78472 -8.90617,16.78472 -10.53327,0 13.9159,-23.93535 -13.23081,-22.3939 10.66172,0 8.09263,15.15763 8.09263,-15.15763 10.70454,0 -13.23081,22.26544 14.00154,24.06381 -10.70454,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4162\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2861\\\">\\n      <path\\n         d=\\\"m 260.83842,220.80946 q -1.37018,4.06772 -2.78318,7.02217 -1.41299,2.95446 -3.12572,4.88127 -1.66991,1.96964 -3.81082,2.91164 -2.09809,0.942 -4.92408,0.942 -1.54146,0 -3.16855,-0.12846 -1.58427,-0.12845 -3.04009,-0.42818 l 0,-8.56363 q 0.68509,0.12845 1.66991,0.21409 1.02764,0.12845 1.71273,0.12845 1.45581,0 2.56909,-0.38536 1.15609,-0.38536 2.05527,-1.28454 0.89918,-0.89918 1.66991,-2.39782 0.81354,-1.49864 1.54145,-3.768 l 0.64227,-2.05527 -15.02917,-45.85824 10.44763,0 5.95172,21.7088 q 0,0 0.42818,1.58427 l 0.68509,2.56909 0.77073,2.99727 0.72791,2.99727 q 0.34255,1.45582 0.55664,2.56909 0.25691,1.11328 0.38536,1.58427 0.0856,-0.47099 0.29973,-1.58427 l 0.55663,-2.48345 0.64227,-2.91163 0.6851,-2.95446 0.55663,-2.52627 q 0.25691,-1.15609 0.42818,-1.66991 l 5.60918,-21.88007 10.31918,0 -15.02918,48.76988 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4165\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomExpandAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.9625\\\"\\n     inkscape:cx=\\\"167.64331\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-midpoints=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#929292;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,202 -6.20029,-21.88337 -26.74634,0 L 97.263545,202 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4723\\\" />\\n      <path\\n         d=\\\"m 211.84729,168.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4725\\\" />\\n      <path\\n         d=\\\"m 252.57467,202 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,202 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4727\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,164.47283 63.562761,0\\\"\\n       id=\\\"path2916\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       id=\\\"path4449\\\"\\n       d=\\\"M 209.1153,300.40828 165.33392,216.00234\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"M 165.33392,98.40828 209.1153,14.00234\\\"\\n       id=\\\"path4451\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomClearAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"80.025296\\\"\\n     inkscape:cy=\\\"157.96178\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4716\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4718\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4720\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 80,255 265,55\\\"\\n       id=\\\"path4714\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,43.691929 L 57.691929,148.05551 L 114.0424,148.05551 L 114.0424,275.02236 L 205.58038,275.05896 L 206.19198,148.7332 L 261.8795,148.05551 L 159.78571,43.691929 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"75\\\"\\n     inkscape:window-y=\\\"20\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,275.05896 L 57.691929,170.69538 L 114.0424,170.69538 L 114.0424,43.728529 L 205.58038,43.691929 L 206.19198,170.01769 L 261.8795,170.69538 L 159.78571,275.05896 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeft.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 44.102199,159.37544 L 148.46578,57.281659 L 148.46578,113.63213 L 275.43263,113.63213 L 275.46923,205.17011 L 149.14347,205.78171 L 148.46578,261.46923 L 44.102199,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRight.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 275.46923,159.37544 L 171.10565,57.281659 L 171.10565,113.63213 L 44.138799,113.63213 L 44.102199,205.17011 L 170.42796,205.78171 L 171.10565,261.46923 L 275.46923,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,26 102.09379,104.36358 -204.18757,0 L 160,26 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,61.691929 57.691929,166.05551 l 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 159.78571,61.691929 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.90621,296.36358 262,192 57.812425,192 159.90621,296.36358 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 25.63642,160.09378 130,58 130,262.18757 25.63642,160.09378 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 64.102199,159.37544 168.46578,57.281659 l 0,56.350471 126.96685,0 0.0366,91.53798 -126.32576,0.6116 -0.67769,55.68752 L 64.102199,159.37544 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 296,160 191.63642,57.90622 l 0,204.18757 L 296,160 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 257.46923,159.37544 153.10565,57.281659 l 0,56.350471 -126.966851,0 -0.0366,91.53798 126.325761,0.6116 0.67769,55.68752 104.36358,-102.09379 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.25104,24.788943 c 30.31102,5.508007 30.31102,22.032027 0,27.540034 l -202.073498,0 c -30.311025,-5.508007 -30.311025,-22.032027 0,-27.540034 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,64 -102.093781,104.36358 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 160,64 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"585\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.03675,297.27002 c 30.31102,-5.50801 30.31102,-22.03203 0,-27.54004 l -202.073498,0 c -30.311025,5.50801 -30.311025,22.03203 0,27.54004 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.42203379;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 24.849388,259.83188 c 5.515594,29.96228 22.062373,29.96228 27.577967,0 l 0,-199.748559 c -5.515594,-29.962283 -22.062373,-29.962283 -27.577967,0 l 0,199.748559 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 63.63642,159.74331 168,57.64953 168,114 l 126.96685,0 0.0366,91.53798 -126.32576,0.6116 L 168,261.8371 63.63642,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2839\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 295.57464,260.99435 c -5.50801,30.31102 -22.03203,30.31102 -27.54004,0 l 0,-202.073498 c 5.50801,-30.311025 22.03203,-30.311025 27.54004,0 l 0,202.073498 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 256.36358,159.74331 152,57.64953 152,114 l -126.96685,0 -0.0366,91.53798 126.32576,0.6116 L 152,261.8371 256.36358,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-2.4457843\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1468\\\"\\n     inkscape:window-height=\\\"892\\\"\\n     inkscape:window-x=\\\"267\\\"\\n     inkscape:window-y=\\\"87\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8189\\\"\\n       transform=\\\"matrix(0.82715321,0,0,0.82715321,58.222329,-1.8743271)\\\">\\n      <path\\n         d=\\\"m 210.48975,15.472333 0,15.230468 15.23046,0 0,4.648438 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648438 15.23047,0 0,-15.230468 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8057\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 241.75504,55.953626 13.12364,0 0,-45.296451 -14.27693,2.86334 0,-7.3174247 14.19739,-2.8633402 8.03326,0 0,52.6138759 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8059\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.87362,7.3961487 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872739 -2.18727,5.3687629 0,3.14172 2.18727,5.328994 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328994 0,-3.141721 -2.22704,-5.3687629 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563982 0.91468,2.266811 0.91468,4.89154 0,5.249457 -3.69849,8.908169 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579175 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289943 3.65872,-9.0274754 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8061\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(35,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 287,181.00001 -250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 159,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159,179.00001 101.14286,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 159,179.00001 -110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 158.42857,180.57143 152,20 l 7,-1 -0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1644\\\"\\n     inkscape:window-height=\\\"898\\\"\\n     inkscape:window-x=\\\"154\\\"\\n     inkscape:window-y=\\\"90\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.82715322,0,0,0.82715322,1.6734456,-2.9378058)\\\">\\n      <path\\n         d=\\\"m -2.0231386,38.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8041\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,57.239336 13.123642,0 0,-45.296452 -14.276932,2.863341 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8043\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,8.6818581 q -3.181489,0 -5.368763,2.2270419 -2.187274,2.187274 -2.187274,5.368763 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.368763 -2.187271,-2.2270419 -5.328991,-2.2270419 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563988 0.91468,2.266811 0.91468,4.891539 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.328994 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8045\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,286,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 34,181.00001 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 162,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162,179.00001 219.85714,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 162,179.00001 110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162.57143,180.57143 169,20 l -7,-1 0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"63.2685\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8172\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.934934,-1.0275628)\\\">\\n      <path\\n         d=\\\"m 209.48975,15.04897 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8080\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.44267,2.3397425 31.53651,0 0,6.7606643 -24.17931,0 0,14.5553132 q 1.74981,-0.59653 3.49963,-0.87491 1.74982,-0.318149 3.49964,-0.318149 9.94216,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.82213,5.289226 -3.73824,0 -7.63557,-0.636298 -3.85755,-0.636298 -7.99349,-1.908893 l 0,-8.073029 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715836 -3.18148,0.715835 -6.52205,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8082\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.87362,6.3961411 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942153 2.34635,0.9544468 4.0564,2.783803 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8084\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 142.14286,22.142854 160,19.999997 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-138.16008\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8064\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 32.217638,2.6254595 31.53651,0 0,6.7606643 -24.179317,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942154,0 15.748371,5.4483 5.806218,5.4483 5.806218,14.754156 0,9.584236 -5.965292,14.91323 -5.965292,5.289226 -16.822124,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857555,-0.636298 -7.993491,-1.908893 l 0,-8.073029 q 3.579175,1.948662 7.396962,2.903109 3.817787,0.954446 8.073029,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442516,0.715836 -3.181489,0.715835 -6.522052,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8066\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,6.6818581 q -3.181489,0 -5.368763,2.2270424 -2.187274,2.1872735 -2.187274,5.3687625 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.3687625 -2.187271,-2.2270424 -5.328991,-2.2270424 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.3289939 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8068\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 180.85714,22.142854 163,19.999997 163.57143,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"108.98279\\\"\\n     inkscape:cy=\\\"152.56698\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showguides=\\\"false\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 120.71429,24.285714 160,20 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8177\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,64.049971,-1.0275659)\\\">\\n      <path\\n         d=\\\"m 157.48975,14.472329 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8087\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 188.75504,54.953622 13.12364,0 0,-45.2964508 -14.27693,2.8633398 0,-7.3174245 14.19739,-2.8633402 8.03326,0 0,52.6138757 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8089\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.30095,2.3397463 31.53651,0 0,6.7606643 -24.17932,0 0,14.5553124 q 1.74982,-0.596529 3.49964,-0.874909 1.74982,-0.318149 3.49964,-0.318149 9.94215,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.9653,14.91323 -5.96529,5.289226 -16.82212,5.289226 -3.73825,0 -7.63557,-0.636298 -3.85756,-0.636298 -7.99349,-1.908894 l 0,-8.073028 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618944 4.01663,-3.618943 4.01663,-9.822847 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715835 -3.18149,0.715835 -6.52205,2.227043 l 0,-29.8264607 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8091\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.73189,6.3961449 q -3.18149,0 -5.36876,2.2270424 -2.18728,2.1872737 -2.18728,5.3687627 0,3.141721 2.18728,5.328994 2.18727,2.147506 5.36876,2.147506 3.18149,0 5.36876,-2.147506 2.18728,-2.187273 2.18728,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18728,-2.2270424 -5.329,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89154,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74403,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.98771,3.618944 -5.36876,0 -8.94793,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65871,-9.0274752 3.65872,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8093\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-133.16007\\\"\\n     inkscape:cy=\\\"148.99555\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 202.28571,24.285714 163,20 l 0.57143,161.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8071\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,55.239336 13.123642,0 0,-45.2964516 -14.276932,2.8633406 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8073\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 84.075912,2.6254595 31.536508,0 0,6.7606643 -24.179314,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942158,0 15.748368,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.822125,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857556,-0.636298 -7.993492,-1.908893 l 0,-8.073029 q 3.579176,1.948662 7.396963,2.903109 3.817786,0.954446 8.073028,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442515,0.715836 -3.181489,0.715835 -6.522053,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8075\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8077\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"12.554216\\\"\\n     inkscape:cy=\\\"162.54324\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:3,9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 160,180.71428 78.571427,33.571428 160,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8183\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.136667,-0.79565869)\\\">\\n      <path\\n         d=\\\"m 158.61496,14.226381 0,15.230469 15.23047,0 0,4.648437 -15.23047,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8096\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 212.82674,29.414836 q 5.76645,1.232827 8.98771,5.130151 3.26102,3.897324 3.26102,9.624004 0,8.788864 -6.04483,13.600866 -6.04483,4.812003 -17.18004,4.812003 -3.73825,0 -7.71511,-0.755604 -3.93709,-0.715835 -8.15256,-2.187274 l 0,-7.75488 q 3.34056,1.948663 7.31742,2.942878 3.97686,0.994215 8.31164,0.994215 7.55604,0 11.49313,-2.982646 3.97686,-2.982646 3.97686,-8.669558 0,-5.249457 -3.69848,-8.192334 -3.65871,-2.982646 -10.22053,-2.982646 l -6.91974,0 0,-6.60159 7.23789,0 q 5.92552,0 9.06724,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.26103,-6.999276 -3.22125,-2.4656539 -9.26608,-2.4656539 -3.3008,0 -7.07882,0.715835 -3.77801,0.7158351 -8.31164,2.2270419 l 0,-7.15835 q 4.57339,-1.2725957 8.55026,-1.9088935 4.01663,-0.6362978 7.55603,-0.6362978 9.14678,0 14.47578,4.1757045 5.32899,4.1359358 5.32899,11.2147488 0,4.931308 -2.82357,8.351409 -2.82357,3.380332 -8.03326,4.692697 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8098\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 257.52667,7.3432549 q -6.20391,0 -9.34563,6.1243661 -3.10195,6.084598 -3.10195,18.333331 0,12.208965 3.10195,18.333331 3.14172,6.084598 9.34563,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124366 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243661 -9.34562,-6.1243661 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741851 5.28922,22.9067211 0,14.992768 -5.28922,22.906722 -5.24946,7.874186 -15.23138,7.874186 -9.98193,0 -15.27115,-7.874186 -5.24946,-7.913954 -5.24946,-22.906722 0,-15.032536 5.24946,-22.9067211 5.28922,-7.9139542 15.27115,-7.9139542 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8100\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.85711,6.1104279 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872737 -2.18727,5.3687627 0,3.141721 2.18727,5.328994 2.18728,2.147506 5.36877,2.147506 3.18148,0 5.36876,-2.147506 2.18727,-2.187273 2.18727,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65872,-9.0274752 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8102\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"152.55422\\\"\\n     inkscape:cy=\\\"163.97182\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180.71428 244.42857,33.571428 163,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8048\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 56.476492,29.986266 q 5.766449,1.232827 8.987707,5.130151 3.261026,3.897324 3.261026,9.624005 0,8.788863 -6.044829,13.600866 -6.04483,4.812002 -17.180041,4.812002 -3.73825,0 -7.715112,-0.755604 -3.937092,-0.715835 -8.152565,-2.187274 l 0,-7.754879 q 3.340563,1.948662 7.317425,2.942877 3.976861,0.994215 8.31164,0.994215 7.556037,0 11.493129,-2.982646 3.976862,-2.982646 3.976862,-8.669557 0,-5.249457 -3.698481,-8.192335 -3.658713,-2.982646 -10.220534,-2.982646 l -6.919739,0 0,-6.60159 7.237888,0 q 5.925523,0 9.067244,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.261026,-6.999276 -3.221258,-2.4656537 -9.266087,-2.4656537 -3.300795,0 -7.078813,0.715835 -3.778019,0.7158351 -8.311641,2.2270427 l 0,-7.1583508 q 4.573391,-1.2725956 8.550252,-1.9088935 4.01663,-0.6362978 7.556037,-0.6362978 9.146781,0 14.475775,4.1757045 5.328995,4.1359358 5.328995,11.2147486 0,4.931309 -2.823572,8.351409 -2.823572,3.380333 -8.03326,4.692697 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8050\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 101.17642,7.9146851 q -6.203908,0 -9.345628,6.1243669 -3.101952,6.084598 -3.101952,18.333331 0,12.208964 3.101952,18.333331 3.14172,6.084598 9.345628,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124367 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243669 -9.34562,-6.1243669 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741859 5.28922,22.9067219 0,14.992767 -5.28922,22.906721 -5.24946,7.874186 -15.23138,7.874186 -9.981926,0 -15.271152,-7.874186 -5.249457,-7.913954 -5.249457,-22.906721 0,-15.032536 5.249457,-22.9067219 5.289226,-7.9139542 15.271152,-7.9139542 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8052\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8054\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveHFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 100,70 L 100,130 L 220,130 L 220,70 L 310,160 L 220,250 L 220,190 L 100,190 L 100,250 L 10,160 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveVFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,10 L 250,100 L 190,100 L 190,220 L 250,220 L 160,310 L 70,220 L 130,220 L 130,100 L 70,100 L 160,10 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0943065,0.3182308,-0.3235039,0.6950983,44.992262,22.609241)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1.0080384,0,0,0.4019374,14.926879,158.58684)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.96230125;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 169.01275,265.3672 C 93.306764,264.91973 184.09594,254.28496 171.89287,196.49891 C 136.81751,116.90916 48.312987,78.904811 130.8513,57.624012 C 173.1434,48.101242 249.69276,67.159794 188.4535,112.26331 C 168.91776,123.45431 278.69027,247.58954 169.01275,265.3672 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55.442114\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.42706966;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 166.08095,266.83675 C 151.36577,272.95804 139.47952,280.37536 136.31052,291.78647 L 208.19524,290.28949 C 196.71794,282.11994 186.82775,273.73226 166.08095,266.83675 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 110,226 L 83.571429,243.85714\\\"\\n       id=\\\"path3224\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 90,176 L 57.857143,183.14286\\\"\\n       id=\\\"path3226\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,116 L 50,116\\\"\\n       id=\\\"path3228\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,56 L 50,36\\\"\\n       id=\\\"path3230\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,56 L 260,46\\\"\\n       id=\\\"path3232\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,116 L 265.71429,116\\\"\\n       id=\\\"path3234\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,166 L 275,171\\\"\\n       id=\\\"path3236\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,226 L 270,246\\\"\\n       id=\\\"path3238\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 120,36 L 110,6\\\"\\n       id=\\\"path3240\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 180,36 L 190,6\\\"\\n       id=\\\"path3242\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0855802,0.3993744,-0.3209242,0.8723369,29.825633,-21.800103)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.5044248,0,148.84954)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 152.85714,282.85714 C 77.754858,282.29557 25.677197,216.09197 13.571429,143.57143 C 7.347206,39.401886 96.731177,13.499887 162.85714,13.571429 C 250.16174,20.445262 307.17949,64.110107 303.57143,149.28571 C 297.04861,249.7588 215.23148,282.68932 152.85714,282.85714 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-rule:evenodd;stroke:#000000;stroke-width:9.40279675;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1.0\\\"\\n       d=\\\"M 149.94872,284.7014 C 135.35088,292.38351 123.55941,301.69213 120.41569,316.01289 L 191.72717,314.1342 C 180.3414,303.88155 170.53007,293.35515 149.94872,284.7014 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {ClipboardProxy} from '../ui/ClipboardProxy';\nimport {MenuProxyContext} from '../ui/MenuProxy';\nimport {Vec} from '../util/Vec';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {Sketcher} from './Sketcher';\n\n/*\n\tPopulation of a context menu for the sketcher, which depends on current state.\n*/\n\nexport class ContextSketch\n{\n\tconstructor(private state:SketchState, private sketcher:Sketcher, private proxyClip:ClipboardProxy)\n\t{\n\t}\n\n\tpublic populate():MenuProxyContext[]\n\t{\n\t\tconst {state, sketcher} = this;\n\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tif (sketcher.canUndo() || sketcher.canRedo())\n\t\t{\n\t\t\tif (sketcher.canUndo()) menu.push({label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo()});\n\t\t\tif (sketcher.canRedo()) menu.push({label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo()});\n\t\t\tmenu.push(null);\n\t\t}\n\n\t\tif (state.currentAtom > 0 || state.currentBond > 0) menu.push({label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent()});\n\n\t\tthis.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n\n\t\tthis.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n\t\tthis.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n\t\tif (this.proxyClip.canAlwaysGet()) menu.push({label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste()});\n\t\t//this.maybeAppend(state, ActivityType.Paste, title:\"Paste\");\n\n\t\tthis.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, {delta: 1});\n\t\tthis.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, {delta: -1});\n\n\t\tthis.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, {order: 0});\n\t\tthis.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, {order: 1});\n\t\tthis.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, {order: 2});\n\t\tthis.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, {order: 3});\n\t\tthis.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, {order: 4});\n\n\t\tthis.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, {type: Molecule.BONDTYPE_UNKNOWN});\n\t\tthis.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, {type: Molecule.BONDTYPE_INCLINED});\n\t\tthis.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, {type: Molecule.BONDTYPE_DECLINED});\n\n\t\tthis.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n\t\tthis.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n\t\tthis.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n\t\tthis.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n\t\t// !! this.maybeAppend(menu, ActivityType.BondFix, 'Fix Geometry');\n\n\t\tthis.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n\t\tthis.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n\t\tthis.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n\t\tthis.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n\t\t//if state.currentAtom > 0 || state.currentBond > 0 {append(cmdID:Command.Query, title:\"Query Properties\")};\n\n\t\tlet rotateSub = this.rotateSubMenu();\n\t\tif (Vec.notBlank(rotateSub)) menu.push({label: 'Rotate', subMenu: rotateSub});\n\n\t\tlet querySub = this.querySubMenu();\n\t\tif (Vec.notBlank(querySub)) menu.push({label: 'Query', subMenu: querySub});\n\n\t\tlet poly = new PolymerBlock(state.mol);\n\t\tfor (let units of poly.getUnits())\n\t\t{\n\t\t\tlet a1 = state.currentAtom, a2 = 0;\n\t\t\tif (state.currentBond > 0) [a1, a2] = state.mol.bondFromTo(state.currentBond);\n\t\t\tif (units.atoms.includes(a1) || units.atoms.includes(a2))\n\t\t\t{\n\t\t\t\tlet label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n\t\t\t\tmenu.push({label: label, click: () => sketcher.performPolymerBlock(units.atoms)});\n\t\t\t}\n\t\t}\n\n\t\tif (menu.length > 0) menu.push(null);\n\n\t\tmenu.push({label: 'Scale to Fit', click: () => sketcher.autoScale()});\n\t\tmenu.push({label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25)});\n\t\tmenu.push({label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8)});\n\n\t\treturn menu;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate maybeAppend(menu:MenuProxyContext[], title:string, accelerator:string, activ:ActivityType, param:Record<string, any> = null):void\n\t{\n\t\tlet molact = new MoleculeActivity(this.state, activ, param);\n\t\tmolact.execute();\n\t\tif (!molact.output.mol && !molact.toClipboard) return;\n\n\t\tmenu.push({label: title, 'accelerator': accelerator, click: () =>\n\t\t{\n\t\t\tthis.sketcher.setState(molact.output, true);\n\t\t\tif (molact.toClipboard) this.proxyClip.setString(molact.toClipboard);\n\t\t}});\n\t}\n\n\tprivate rotateSubMenu():MenuProxyContext[]\n\t{\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tthis.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n\t\tthis.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, {theta: 1});\n\t\tthis.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, {theta: -1});\n\t\tthis.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, {theta: 5});\n\t\tthis.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, {theta: -5});\n\t\tthis.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, {theta: 15});\n\t\tthis.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, {theta: -15});\n\t\tthis.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, {theta: 30});\n\t\tthis.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, {theta: -30});\n\t\tthis.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, {axis: 'hor'});\n\t\tthis.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, {axis: 'ver'});\n\t\tthis.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n\n\t\treturn menu;\n\t}\n\n\tprivate querySubMenu():MenuProxyContext[]\n\t{\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tthis.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n\t\tthis.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n\n\t\t// TODO: add common use cases; implement in MoleculeActivity\n\n\t\treturn menu;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryTypeBond, QueryUtil} from '../mol/QueryUtil';\nimport {GuidelineSprout, SketchUtil} from '../mol/SketchUtil';\nimport {Stereochemistry} from '../mol/Stereochemistry';\nimport {ArrangeMeasurement} from '../gfx/ArrangeMeasurement';\nimport {APoint, ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {FontData} from '../gfx/FontData';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {GeomUtil} from '../util/Geom';\nimport {Theme} from '../util/Theme';\nimport {colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {SketchState, TemplatePermutation} from './MoleculeActivity';\nimport {FusionBank} from './TemplateBank';\n\n/*\n\tDrawCanvas: base class for the sketcher, which handles all of the rendering functionality for the live object.\n*/\n\nexport enum DraggingTool\n{\n\tNone = 0,\n\tPress,\n\tLasso,\n\tPan,\n\tZoom,\n\tRotate,\n\tMove,\n\tErasor,\n\tAtom,\n\tBond,\n\tCharge,\n\tRing\n}\n\nexport enum DrawCanvasDecoration\n{\n\tNone = 0,\n\tStereochemistry,\n\tMappingNumber,\n\tAtomIndex,\n}\n\ninterface DrawCanvasViewOpt\n{\n\tdecoration:DrawCanvasDecoration;\n\tshowOxState:boolean;\n\tshowQuery:boolean;\n\tshowArtifacts:boolean;\n}\n\nexport class DrawCanvas extends Widget implements ArrangeMeasurement\n{\n\tprotected mol:Molecule = null;\n\tprotected policy:RenderPolicy = null;\n\tprotected abbrevPolicy:RenderPolicy;\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = 1;\n\n\tprotected viewOpt:DrawCanvasViewOpt =\n\t{\n\t\tdecoration: DrawCanvasDecoration.Stereochemistry,\n\t\tshowOxState: true,\n\t\tshowQuery: true,\n\t\tshowArtifacts: true,\n\t};\n\n\tprotected width = 0;\n\tprotected height = 0;\n\tprotected border = 0x808080;\n\tprotected borderRadius = 4;\n\tprotected background = 0xF8F8F8;\n\n\tprotected container:DOM;\n\tprotected divInfo:DOM;\n\tprotected canvasUnder:DOM = null;\n\tprotected canvasMolecule:DOM = null;\n\tprotected canvasOver:DOM = null;\n\tprotected divMessage:DOM = null;\n\n\tprotected layout:ArrangeMolecule = null;\n\tprotected metavec:MetaVector = null; // instantiated version of above\n\tprotected stereo:Stereochemistry = null;\n\tprotected guidelines:GuidelineSprout[] = null;\n\n\tprotected filthy = false;\n\tprotected dragType = DraggingTool.None;\n\tprotected currentAtom = 0;\n\tprotected currentBond = 0;\n\tprotected hoverAtom = 0;\n\tprotected hoverBond = 0;\n\tprotected selectedMask:boolean[] = null;\n\tprotected opAtom = 0;\n\tprotected opBond = 0;\n\tprotected opBudged = false; // flips to true when the user starts dragging\n\tprotected opShift = false;\n\tprotected opCtrl = false;\n\tprotected opAlt = false;\n\tprotected lassoX:number[] = null;\n\tprotected lassoY:number[] = null;\n\tprotected lassoMask:boolean[] = null;\n\tprotected clickX = 0; // position of initial mouse click\n\tprotected clickY = 0;\n\tprotected mouseX = 0; // last known position of mouse\n\tprotected mouseY = 0;\n\tprotected dragGuides:GuidelineSprout[] = null; // guidelines pertinent to the current dragging operation\n\tprotected templatePerms:TemplatePermutation[] = null; // if fusing templates, these are the options in play\n\tprotected currentPerm = 0; // currently viewed permutation (if applicable)\n\tprotected fusionBank:FusionBank = null;\n\tprotected cursorWatermark = 0;\n\tprotected cursorDX = 0;\n\tprotected cursorDY = 0;\n\tprotected toolAtomSymbol = '';\n\tprotected toolBondOrder = 0;\n\tprotected toolBondType = 0;\n\tprotected toolChargeDelta = 0;\n\tprotected toolRingArom = false;\n\tprotected toolRingFreeform = false;\n\tprotected toolRotateIncr = 0;\n\n\tprotected redrawCacheKey = '';\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n\t\tthis.abbrevPolicy.data.foreground = 0xD0D0D0;\n\t\tthis.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tif (!this.width || !this.height) throw 'Sketcher.render called without width and height';\n\n\t\tsuper.render(parent);\n\n\t\tthis.container = dom('<div/>').appendTo(this.contentDOM);\n\t\tthis.container.css({'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px'});\n\t\tthis.container.css({'background-color': colourCanvas(this.background)});\n\t\tif (this.border != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tthis.container.css({'border': '1px solid ' + colourCanvas(this.border)});\n\t\t\tthis.container.css({'border-radius': this.borderRadius + 'px'});\n\t\t}\n\t\tthis.container.css({'outline': 'none'});\n\n\t\tthis.container.attr({'tabindex': '0'});\n\n\t\tlet canvasStyle = {'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none'};\n\n\t\tthis.divInfo = dom('<div/>').appendTo(this.container).css({'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none'});\n\t\tthis.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\n\t\tthis.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.divMessage.css({'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%'});\n\t}\n\n\t// gets the current state, as an associative array\n\tpublic getState():SketchState\n\t{\n\t\tlet state:SketchState =\n\t\t{\n\t\t\tmol: this.mol.clone(),\n\t\t\tcurrentAtom: this.currentAtom,\n\t\t\tcurrentBond: this.currentBond,\n\t\t\tselectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n\t\t};\n\t\treturn state;\n\t}\n\n\t// returns true if atom is selected (1-based)\n\tpublic getSelected(atom:number):boolean\n\t{\n\t\tif (this.selectedMask == null || atom > this.selectedMask.length) return false;\n\t\treturn this.selectedMask[atom - 1];\n\t}\n\n\t// returns true if atom is grabbed by the lasso, if any (1-based)\n\tpublic getLassoed(atom:number):boolean\n\t{\n\t\tif (this.lassoMask == null || atom > this.lassoMask.length) return false;\n\t\treturn this.lassoMask[atom - 1];\n\t}\n\n\t// functions for converting between coordinates within the widget (pixels) & molecular position (Angstroms)\n\tpublic scale() {return this.pointScale;}\n\tpublic angToX(ax:number):number\n\t{\n\t\treturn ax * this.pointScale + this.offsetX;\n\t}\n\tpublic angToY(ay:number):number\n\t{\n\t\treturn ay * -this.pointScale + this.offsetY;\n\t}\n\tpublic xToAng(px:number):number\n\t{\n\t\treturn (px - this.offsetX) / this.pointScale;\n\t}\n\tpublic yToAng(py:number):number\n\t{\n\t\treturn (py - this.offsetY) / -this.pointScale;\n\t}\n\tpublic scaleToAng(scale:number):number {return scale / this.pointScale;}\n\tpublic angToScale(ang:number):number {return ang * this.pointScale;}\n\tpublic yIsUp():boolean {return false;}\n\tpublic measureText(str:string, fontSize:number):number[] {return FontData.main.measureText(str, fontSize);}\n\n\t// ------------ protected methods ------------\n\n\t// redraw the structure: this will update the main canvas, using the current metavector representation of the structure;\n\t// the need-to-redraw flag is set, which means that this can be called multiple times without forcing the underlying canvas\n\t// to be redrawn too many times\n\tprotected delayedRedraw():void\n\t{\n\t\tif (this.canvasMolecule == null) return;\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// regenerates the layout, which is slightly performance sensitive\n\tprotected layoutMolecule():void\n\t{\n\t\tlet mol = this.mol;\n\t\tif (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tmol.setAtomElement(this.hoverAtom, '');\n\t\t\tmol.setAtomCharge(this.hoverAtom, 0);\n\t\t\tmol.setAtomUnpaired(this.hoverAtom, 0);\n\t\t\tMolUtil.clearAbbrev(mol, this.hoverAtom);\n\t\t}\n\n\t\tlet effects = this.sketchEffects(mol);\n\t\tthis.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n\t\tthis.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n\t\tthis.layout.arrange();\n\t}\n\n\t// rebuilds the metavector for the molecule, possibly with some retromods\n\tprotected redrawMetaVector():void\n\t{\n\t\tthis.metavec = new MetaVector();\n\t\tnew DrawMolecule(this.layout, this.metavec).draw();\n\n\t\tif (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom))\n\t\t{\n\t\t\tlet abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n\t\t\tthis.orientAbbreviation(this.hoverAtom, abbrevMol);\n\t\t\tthis.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n\t\t\tlet layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n\t\t\tlayout.arrange();\n\t\t\tnew DrawMolecule(layout, this.metavec).draw();\n\t\t}\n\t}\n\n\t// rebuilds the canvas content\n\tprotected redraw():void\n\t{\n\t\tthis.filthy = false;\n\t\tthis.redrawInfo();\n\t\tthis.redrawUnder();\n\t\tthis.redrawMolecule();\n\t\tthis.redrawOver();\n\t}\n\n\tprotected redrawInfo():void\n\t{\n\t\tlet cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n\t\tif (cacheKey == this.redrawCacheKey) return;\n\t\tthis.redrawCacheKey = cacheKey;\n\n\t\tthis.divInfo.empty();\n\t\tthis.divInfo.css({'visibility': 'hidden', 'left': '0', 'top': '0'});\n\t\tif (this.mol.numAtoms == 0) return;\n\n\t\tlet divText = dom('<div/>').appendTo(this.divInfo);\n\t\tdivText.css({'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0'});\n\t\tlet html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n\t\t\n\t\tlet chg = 0;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) chg += this.mol.atomCharge(n);\n\t\tif (chg == -1) html += '<sup>-</sup>';\n\t\telse if (chg < -1) html += `<sup>${chg}</sup>`;\n\t\telse if (chg == 1) html += '<sup>+</sup>';\n\t\telse if (chg > 1) html += `<sup>+${chg}</sup>`;\n\n\t\thtml += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n\n\t\tdivText.setHTML(html);\n\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tlet w = divText.width(), h = divText.height();\n\t\t\tsetBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n\t\t\tthis.divInfo.css({'visibility': 'visible'});\n\t\t}, 1);\n\t}\n\n\tprotected redrawUnder():void\n\t{\n\t\tlet HOVER_COL = 0xE0E0E0;\n\t\tlet CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n\t\tlet SELECT_COL = 0xC0C0C0;\n\t\tlet LASSO_COL = 0xD0D0D0;\n\n\t\tlet density = pixelDensity();\n\t\tthis.canvasUnder.elCanvas.width = this.width * density;\n\t\tthis.canvasUnder.elCanvas.height = this.height * density;\n\t\tthis.canvasUnder.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasUnder.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\t// draw hover effects\n\t\tif (this.hoverAtom > 0)\n\t\t{\n\t\t\tlet units = new PolymerBlock(this.mol).getUnits();\n\t\t\tfor (let unit of units) if (unit.atoms.includes(this.hoverAtom)) this.drawPolymerUnit(ctx, unit, units);\n\n\t\t\tlet sz = 0;\n\t\t\tif (this.hoverAtom == this.currentAtom) sz += 0.1;\n\t\t\tif (this.getSelected(this.hoverAtom)) sz += 0.1;\n\t\t\tif (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom)) sz += 0.1;\n\t\t\tthis.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n\t\t}\n\t\tif (this.hoverBond > 0)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n\t\t\tlet units = new PolymerBlock(this.mol).getUnits();\n\t\t\tfor (let unit of units) if (unit.atoms.includes(bfr) && unit.atoms.includes(bto)) this.drawPolymerUnit(ctx, unit, units);\n\n\t\t\tlet sz = 0;\n\t\t\tif (this.hoverBond == this.currentBond) sz += 0.1;\n\t\t\tif (this.getSelected(bfr) && this.getSelected(bto)) sz += 0.1;\n\t\t\tthis.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n\t\t}\n\n\t\t// draw selection and lasso preselection\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet sz = n == this.currentBond ? 0.1 : 0;\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n\t\t\tif (sfr && sto) this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n\t\t\telse if ((sfr || lfr) && (sto || lto)) this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet sz = this.currentAtom == n ? 0.1 : 0;\n\t\t\tif (this.getSelected(n)) this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n\t\t\telse if (this.getLassoed(n)) this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n\t\t}\n\n\t\t// draw current atom/bond\n\t\tif (this.currentAtom > 0)\n\t\t{\n\t\t\tthis.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n\t\t}\n\t\tif (this.currentBond > 0)\n\t\t{\n\t\t\tthis.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n\t\t}\n\n\t\t// if moving or dragging a new atom/bond, draw the guides\n\t\tif (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tif (this.dragGuides != null && this.dragGuides.length > 0)\n\t\t\t{\n\t\t\t\tfor (let g of this.dragGuides) for (let n = 0; n < g.x.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet lw = this.policy.data.lineSize * this.pointScale;\n\t\t\t\t\tctx.strokeStyle = '#C0C0C0';\n\t\t\t\t\tctx.lineWidth = lw;\n\t\t\t\t\tdrawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\t\tctx.fillStyle = '#C0C0C0';\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if creating a new ring, draw it\n\t\tif (this.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tlet [ringX, ringY] = this.determineFauxRing();\n\t\t\tlet rsz = ringX == null ? 0 : ringX.length;\n\t\t\tif (rsz > 0)\n\t\t\t{\n\t\t\t\tlet scale = this.pointScale;\n\t\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\t\tctx.strokeStyle = '#C0C0C0';\n\t\t\t\tctx.lineWidth = lw;\n\n\t\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t\t{\n\t\t\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\t\t\tlet x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n\t\t\t\t\tlet x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n\t\t\t\t\tdrawLine(ctx, x1, y1, x2, y2);\n\t\t\t\t}\n\n\t\t\t\tif (this.toolRingArom)\n\t\t\t\t{\n\t\t\t\t\tlet cx = 0, cy = 0;\n\t\t\t\t\tfor (let n = 0; n < rsz; n++) {cx += ringX[n]; cy += ringY[n];}\n\t\t\t\t\tcx /= rsz; cy /= rsz;\n\t\t\t\t\tlet rad = 0;\n\t\t\t\t\tfor (let n = 0; n < rsz; n++) rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n\t\t\t\t\trad = this.angToScale(rad * 0.5 / rsz);\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprotected redrawMolecule():void\n\t{\n\t\tlet density = pixelDensity();\n\t\tthis.canvasMolecule.elCanvas.width = this.width * density;\n\t\tthis.canvasMolecule.elCanvas.height = this.height * density;\n\t\tthis.canvasMolecule.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasMolecule.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\tif (this.metavec != null) this.metavec.renderContext(ctx);\n\n\t\t// debugging only\n\t\t/*for (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet x1 = this.angToX(this.mol.atomX(bfr)), y1 = this.angToY(this.mol.atomY(bfr));\n\t\t\tlet x2 = this.angToX(this.mol.atomX(bto)), y2 = this.angToY(this.mol.atomY(bto));\n\t\t\tctx.strokeStyle = 'red';\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.stroke();\n\t\t}*/\n\n\t\tif (this.templatePerms != null)\n\t\t{\n\t\t\tlet perm = this.templatePerms[this.currentPerm];\n\t\t\tif (perm.metavec != null) perm.metavec.renderContext(ctx);\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprotected redrawOver():void\n\t{\n\t\tlet density = pixelDensity();\n\t\tthis.canvasOver.elCanvas.width = this.width * density;\n\t\tthis.canvasOver.elCanvas.height = this.height * density;\n\t\tthis.canvasOver.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasOver.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\t// draw the lasso\n\t\tif ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1)\n\t\t{\n\t\t\tlet erasing = this.dragType == DraggingTool.Erasor;\n\n\t\t\tlet path = new Path2D();\n\t\t\tpath.moveTo(this.lassoX[0], this.lassoY[0]);\n\t\t\tfor (let n = 1; n < this.lassoX.length; n++) path.lineTo(this.lassoX[n], this.lassoY[n]);\n\t\t\tpath.closePath();\n\n\t\t\tctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n\t\t\tctx.fill(path);\n\n\t\t\tctx.strokeStyle = erasing ? '#804040' : '#808080';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.stroke(path);\n\t\t}\n\n\t\t// draw the rotation theta\n\t\tif (this.dragType == DraggingTool.Rotate)\n\t\t{\n\t\t\tlet [x0, y0, theta, magnitude] = this.determineDragTheta();\n\t\t\tlet scale = this.pointScale;\n\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\tctx.strokeStyle = '#E0E0E0';\n\t\t\tctx.lineWidth = 0.5 * lw;\n\t\t\tdrawLine(ctx, x0, y0, x0 + magnitude, y0);\n\t\t\tctx.strokeStyle = '#808080';\n\t\t\tctx.lineWidth = lw;\n\t\t\tdrawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\tctx.fillStyle = '#808080';\n\t\t\tctx.fill();\n\t\t\t// !! draw 0 degrees and a nice arc...\n\n\t\t\tfor (let atom of this.subjectAtoms(true, false))\n\t\t\t{\n\t\t\t\tlet ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n\t\t\t\t//let ax = this.arrmol.points[atom - 1].cx, ay = this.arrmol.points[atom - 1].cy;\n\t\t\t\tlet ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n\t\t\t\tlet nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t\t// draw the displacement of subject atoms\n\t\tif (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tlet [dx, dy] = this.determineMoveDelta();\n\t\t\tlet scale = this.pointScale;\n\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\tfor (let atom of this.subjectAtoms(false, true))\n\t\t\t{\n\t\t\t\tlet ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t\t// draw the dragging of a bond-and-atom to a new position\n\t\tif ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n\t\t\tlet order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n\t\t\tlet type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n\t\t\tthis.drawOriginatingBond(ctx, element, order, type);\n\t\t}\n\n\t\tif (this.viewOpt.showQuery) this.drawQueryFeatures(ctx);\n\n\t\tctx.restore();\n\t}\n\n\t// returns an array of atom indices that make up the selection/current, or empty if nothing; if the \"allIfNone\" flag\n\t// is set, all of the atoms will be returned if otherwise would have been none; if \"useOpAtom\" is true, an empty\n\t// selection will be beefed up by the current mouseunder atom\n\tprotected subjectAtoms(allIfNone = false, useOpAtom = false):number[]\n\t{\n\t\tlet atoms:number[] = [];\n\t\tif (this.selectedMask != null)\n\t\t{\n\t\t\tfor (let n = 0; n < this.selectedMask.length; n++) if (this.selectedMask[n]) atoms.push(n + 1);\n\t\t\tif (atoms.length > 0) return atoms;\n\t\t}\n\t\tif (this.currentAtom > 0) atoms.push(this.currentAtom);\n\t\telse if (this.currentBond > 0)\n\t\t{\n\t\t\tatoms.push(this.mol.bondFrom(this.currentBond));\n\t\t\tatoms.push(this.mol.bondTo(this.currentBond));\n\t\t}\n\t\tif (useOpAtom && atoms.length == 0 && this.opAtom > 0) atoms.push(this.opAtom);\n\t\tif (allIfNone && atoms.length == 0)\n\t\t{\n\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) atoms.push(n);\n\t\t}\n\t\treturn atoms;\n\t}\n\n\t// response to some mouse event: lasso may need to be extended, or cancelled\n\tprotected updateLasso(x:number, y:number):void\n\t{\n\t\tif (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor) return;\n\n\t\tif (x < 0 || y < 0 || x > this.width || y > this.height)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.None;\n\t\t\tthis.lassoX = null;\n\t\t\tthis.lassoY = null;\n\t\t\tthis.lassoMask = null;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tlet len = Vec.len(this.lassoX);\n\t\tif (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y) return; // identical\n\n\t\tthis.lassoX.push(x);\n\t\tthis.lassoY.push(y);\n\t\tthis.calculateLassoMask();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// sets up the lasso mask to include any atom that is within the lasso polygon\n\tprotected calculateLassoMask():void\n\t{\n\t\tthis.lassoMask = new Array(this.mol.numAtoms);\n\t\tfor (let n = 0; n < this.mol.numAtoms; n++) this.lassoMask[n] = false;\n\n\t\tfor (let n = 0; n < this.layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = this.layout.getPoint(n);\n\t\t\tif (p.anum == 0) continue;\n\t\t\tthis.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n\t\t}\n\t}\n\n\t// ------------ private methods -----------\n\n\t// draws an ellipse around an atom/bond, for highlighting purposes\n\tprivate drawAtomShade(ctx:CanvasRenderingContext2D, atom:number, fillCol:number, borderCol:number, anghalo:number):void\n\t{\n\t\tif (this.layout == null) return;\n\n\t\tlet p:APoint = null;\n\t\tfor (let n = 0; n < this.layout.numPoints(); n++) if (this.layout.getPoint(n).anum == atom)\n\t\t{\n\t\t\tp = this.layout.getPoint(n);\n\t\t\tbreak;\n\t\t}\n\t\tif (p == null) return;\n\n\t\tlet minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n\t\tlet cx = p.oval.cx, cy = p.oval.cy;\n\t\tlet rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n\n\t\tif (fillCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fill();\n\t\t}\n\t\tif (borderCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n\t\t\tctx.strokeStyle = colourCanvas(borderCol);\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tprivate drawBondShade(ctx:CanvasRenderingContext2D, bond:number, fillCol:number, borderCol:number, anghalo:number):void\n\t{\n\t\tif (this.layout == null) return;\n\n\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n\t\tfor (let l of this.layout.getUnsplitLines() ?? this.layout.getLines())\n\t\t{\n\t\t\tif (l.bnum != bond) continue;\n\t\t\tx1 += l.line.x1; y1 += l.line.y1; x2 += l.line.x2; y2 += l.line.y2;\n\t\t\tnb++;\n\t\t\tsz += l.size + (0.2 + anghalo) * this.pointScale;\n\t\t}\n\t\tif (nb == 0) return;\n\n\t\tlet invNB = 1 / nb;\n\t\tsz *= invNB;\n\t\tx1 *= invNB;\n\t\ty1 *= invNB;\n\t\tx2 *= invNB;\n\t\ty2 *= invNB;\n\n\t\tlet dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n\t\tdx *= invDist;\n\t\tdy *= invDist;\n\t\tlet ox = dy, oy = -dx;\n\n\t\tlet path = new Path2D(), mx:number, my:number, CIRC = 0.8;\n\t\tpath.moveTo(x1 + ox * sz, y1 + oy * sz);\n\n\t\tmx = x1 + (ox * sz - dx * sz) * CIRC;\n\t\tmy = y1 + (oy * sz - dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n\n\t\tmx = x1 + (-ox * sz - dx * sz) * CIRC;\n\t\tmy = y1 + (-oy * sz - dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n\t\tpath.lineTo(x2 - ox * sz, y2 - oy * sz);\n\n\t\tmx = x2 + (-ox * sz + dx * sz) * CIRC;\n\t\tmy = y2 + (-oy * sz + dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n\n\t\tmx = x2 + (ox * sz + dx * sz) * CIRC;\n\t\tmy = y2 + (oy * sz + dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n\n\t\tpath.closePath();\n\n\t\tif (fillCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fill(path);\n\t\t}\n\t\tif (borderCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = colourCanvas(borderCol);\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.stroke(path);\n\t\t}\n\t}\n\n\t// draws an in-progress bond, originating either from the clicked-upon atom, or a point in space\n\tprivate drawOriginatingBond(ctx:CanvasRenderingContext2D, element:string, order:number, type:number)\n\t{\n\t\tlet x1 = this.clickX, y1 = this.clickY;\n\t\tif (this.opAtom > 0)\n\t\t{\n\t\t\tx1 = this.angToX(this.mol.atomX(this.opAtom));\n\t\t\ty1 = this.angToY(this.mol.atomY(this.opAtom));\n\t\t}\n\t\telse if (this.opBond > 0)\n\t\t{\n\t\t\tlet [bfr, bto] = this.mol.bondFromTo(this.opBond);\n\t\t\tx1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n\t\t\ty1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n\t\t}\n\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\n\t\tlet snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n\t\tif (snapTo) [x2, y2, snapAtom] = snapTo;\n\n\t\tlet scale = this.pointScale;\n\n\t\tctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n\t\tctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n\t\tdrawLine(ctx, x1, y1, x2, y2);\n\n\t\t// !! TODO: draw multiple bonds\n\n\t\tif (element != 'C')\n\t\t{\n\t\t\tlet fh = this.policy.data.fontSize * scale;\n\t\t\tctx.font = fontSansSerif(fh);\n\t\t\tlet metrics = ctx.measureText(element);\n\t\t\tctx.fillStyle = '#808080';\n\t\t\tctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n\t\t}\n\t}\n\n\t// render query metadata for any atoms/bonds\n\tprivate drawQueryFeatures(ctx:CanvasRenderingContext2D):void\n\t{\n\t\tconst {layout, mol} = this;\n\n\t\tinterface Annotation\n\t\t{\n\t\t\ttxt:string;\n\t\t\tx:number;\n\t\t\ty:number;\n\t\t}\n\t\tlet annots:Annotation[] = [];\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (QueryUtil.hasAnyQueryAtom(mol, n))\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tfor (let xtra of mol.atomExtra(n)) if (xtra.startsWith('q')) bits.push(xtra);\n\t\t\tlet ap = layout.getPoint(n - 1);\n\n\t\t\tannots.push({txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy});\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (QueryUtil.hasAnyQueryBond(mol, n))\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tfor (let xtra of mol.bondExtra(n)) if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders)) bits.push(xtra);\n\n\t\t\tlet num = 0, cx = 0, cy = 0;\n\t\t\tfor (let bl of layout.getLines()) if (bl.bnum == n)\n\t\t\t{\n\t\t\t\tnum += 2;\n\t\t\t\tcx += bl.line.x1 + bl.line.x2;\n\t\t\t\tcy += bl.line.y1 + bl.line.y2;\n\t\t\t}\n\n\t\t\tannots.push({txt: bits.join(','), x: cx / num, y: cy / num});\n\t\t}\n\n\t\t// NOTE: displaying the encoded syntax directly; this should ideally be replaced by a nicer rendering mnemonic\n\t\tlet fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n\t\tfor (let annot of annots)\n\t\t{\n\t\t\tctx.font = fontSansSerif(fh);\n\t\t\t//let metrics = ctx.measureText(annot.txt);\n\t\t\tctx.fillStyle = '#FF40C0';\n\t\t\tctx.fillText(annot.txt, annot.x, annot.y);\n\t\t}\n\t}\n\n\t// renders a polymer block unit by drawing the outline and some key connectivity information\n\tprivate drawPolymerUnit(ctx:CanvasRenderingContext2D, unit:PolymerBlockUnit, allUnits:PolymerBlockUnit[]):void\n\t{\n\t\tconst {mol, layout} = this;\n\n\t\t// part 1: draw outline around the polymer segment\n\n\t\tlet x:number[] = [], y:number[] = [];\n\t\tlet scale = this.pointScale;\n\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet pt = layout.getPoint(a - 1);\n\t\t\tlet rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n\t\t\tconst NPT = 36, THPT = TWOPI / NPT;\n\t\t\tfor (let n = 0; n < NPT; n++)\n\t\t\t{\n\t\t\t\tlet th = n * THPT;\n\t\t\t\tx.push(pt.oval.cx + rad * Math.cos(th));\n\t\t\t\ty.push(pt.oval.cy + rad * Math.sin(th));\n\t\t\t}\n\t\t}\n\n\t\tlet extBonds:number[] = [], inAtoms:number[] = [], outAtoms:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n\t\t\tif (!flag1 && !flag2) continue;\n\t\t\tif (!flag2)\n\t\t\t{\n\t\t\t\textBonds.push(n);\n\t\t\t\tinAtoms.push(bfr);\n\t\t\t\toutAtoms.push(bto);\n\t\t\t}\n\t\t\telse if (!flag1)\n\t\t\t{\n\t\t\t\textBonds.push(n);\n\t\t\t\tinAtoms.push(bto);\n\t\t\t\toutAtoms.push(bfr);\n\t\t\t}\n\n\t\t\tlet pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n\t\t\tlet x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n\t\t\tif (!flag1) [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n\t\t\telse if (!flag2) [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n\t\t\tlet ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n\t\t\tlet npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n\t\t\tfor (let n = 0; n <= npWidth; n++)\n\t\t\t{\n\t\t\t\tx.push(x1 - ox + dx * n / npWidth);\n\t\t\t\ty.push(y1 - oy + dy * n / npWidth);\n\t\t\t\tx.push(x1 + ox + dx * n / npWidth);\n\t\t\t\ty.push(y1 + oy + dy * n / npWidth);\n\t\t\t}\n\t\t\tfor (let n = 1; n < npHeight; n++)\n\t\t\t{\n\t\t\t\tx.push(x1 - ox + 2 * ox * n / npHeight);\n\t\t\t\ty.push(y1 - oy + 2 * oy * n / npHeight);\n\t\t\t\tx.push(x2 - ox + 2 * ox * n / npHeight);\n\t\t\t\ty.push(y2 - oy + 2 * oy * n / npHeight);\n\t\t\t}\n\t\t}\n\n\t\tlet [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n\n\t\tlet path = new Path2D();\n\t\tpath.moveTo(px[0], py[0]);\n\t\tfor (let n = 1; n < px.length; n++) path.lineTo(px[n], py[n]);\n\t\tpath.closePath();\n\n\t\tctx.save();\n\t\tctx.fillStyle = '#F9EFFF';\n\t\tctx.fill(path);\n\t\tctx.strokeStyle = '#C0C0C0';\n\t\tctx.lineWidth = 1;\n\t\t//ctx.setLineDash([1, 1]);\n\t\tctx.stroke(path);\n\t\tctx.restore();\n\n\t\t// part 2: draw atom-to-atom connectivity options\n\n\t\tlet selfLinks:number[] = [];\n\t\tlet innerLinks:[number, number][] = [];\n\t\tlet outerLinks:[number, number][] = [];\n\n\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t{\n\t\t\tinnerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n\t\t\tinnerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n\t\t}\n\t\telse if (Vec.len(extBonds) == 2 && unit.connect != null)\n\t\t{\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random)\n\t\t\t{\n\t\t\t\tinnerLinks.push([inAtoms[0], inAtoms[1]]);\n\t\t\t}\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random)\n\t\t\t{\n\t\t\t\tselfLinks.push(inAtoms[0]);\n\t\t\t\tselfLinks.push(inAtoms[1]);\n\t\t\t}\n\t\t}\n\t\telse // anything goes\n\t\t{\n\t\t\tfor (let b of extBonds)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n\t\t\t\tif (unit.atoms.includes(a2)) [a1, a2] = [a2, a1];\n\t\t\t\tlet incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n\n\t\t\t\tlet isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n\n\t\t\t\tfor (let look of (isCapped ? [unit] : allUnits)) for (let a of look.atoms)\n\t\t\t\t{\n\t\t\t\t\tlet isExt = false;\n\t\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (!look.atoms.includes(adj)) {isExt = true; break;}\n\t\t\t\t\tif (!isExt) continue;\n\n\t\t\t\t\tif (Vec.notBlank(incl))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet anames = look.atomName.get(a), any = false;\n\t\t\t\t\t\tif (anames) for (let an of anames) any = any || incl.includes(an);\n\t\t\t\t\t\tif (!any) continue;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.notBlank(excl))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet anames = look.atomName.get(a), any = false;\n\t\t\t\t\t\tif (anames) for (let an of anames) any = any || excl.includes(an);\n\t\t\t\t\t\tif (any) continue;\n\t\t\t\t\t}\n\t\t\t\t\tif (a == a1) selfLinks.push(a1);\n\t\t\t\t\telse if (unit === look) innerLinks.push([a1, a]);\n\t\t\t\t\telse outerLinks.push([a1, a]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tselfLinks = Vec.uniqueStable(selfLinks);\n\t\tinnerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n\t\touterLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n\n\t\tctx.save();\n\t\tctx.strokeStyle = '#6329C1';\n\t\tctx.lineWidth = 2;\n\t\tctx.setLineDash([1, 1]);\n\t\tctx.beginPath();\n\n\t\tfor (let a of selfLinks)\n\t\t{\n\t\t\tlet p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n\t\t\tlet x2 = 0, y2 = 0, num = 0;\n\t\t\tfor (let n = 0; n < extBonds.length; n++) if (inAtoms[n] == a)\n\t\t\t{\n\t\t\t\tlet p2 = layout.getPoint(outAtoms[n] - 1);\n\t\t\t\tx2 += p2.oval.cx;\n\t\t\t\ty2 += p2.oval.cy;\n\t\t\t\tnum++;\n\t\t\t}\n\t\t\tif (num > 1) {x2 /= num; y2 /= num;}\n\t\t\tx2 = x1 + 0.5 * (x2 - x1);\n\t\t\ty2 = y1 + 0.5 * (y2 - y1);\n\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n\t\t\tconst EXT = 2 * scale;\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n\t\t\tctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n\t\t}\n\t\tfor (let [a1, a2] of innerLinks)\n\t\t{\n\t\t\tlet x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n\t\t\tconst EXT = 5;\n\t\t\tlet px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n\t\t\tlet [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n\t\t\tctx.moveTo(this.angToX(x1), this.angToY(y1));\n\t\t\tctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n\t\t}\n\t\tfor (let [a1, a2] of outerLinks)\n\t\t{\n\t\t\tlet p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n\t\t\tctx.moveTo(p1.oval.cx, p1.oval.cy);\n\t\t\tctx.lineTo(p2.oval.cx, p2.oval.cy);\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n\n\t// based on drag state, calculates a ring that's fused & locked to the origination\n\tprotected determineFauxRing():[number[], number[]]\n\t{\n\t\tlet atom = this.opAtom, bond = this.opBond, mol = this.mol;\n\t\tlet x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n\t\tlet y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n\t\tlet x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n\t\tlet rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n\n\t\tif (rsz < 3) {}\n\t\telse if (bond > 0) return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n\t\telse if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform) return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n\t\telse return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n\n\t\treturn [null, null];\n\t}\n\n\t// based on the mouse position, determine the implied rotation for the interactive operation\n\tprotected determineDragTheta():[number, number, number, number]\n\t{\n\t\tlet x0 = this.clickX, y0 = this.clickY;\n\t\tlet snap = this.snapToGuide(x0, y0);\n\t\tif (snap != null) {x0 = snap[0]; y0 = snap[1];}\n\t\tlet theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n\t\tif (this.toolRotateIncr > 0) theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n\t\treturn [x0, y0, theta, magnitude];\n\t}\n\n\t// determine the delta, in pixels, for a drag-move operation: the source and destination may be snapped\n\tprotected determineMoveDelta():[number, number]\n\t{\n\t\tlet x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n\t\tif (this.opAtom > 0)\n\t\t{\n\t\t\tx1 = this.angToX(this.mol.atomX(this.opAtom));\n\t\t\ty1 = this.angToY(this.mol.atomY(this.opAtom));\n\t\t\tlet snap = this.snapToGuide(x2, y2);\n\t\t\tif (snap != null) {x2 = snap[0]; y2 = snap[1];}\n\t\t}\n\t\treturn [x2 - x1, y2 - y1];\n\t}\n\n\t// if the mouse position is close to one of the snap-to points, or an existing atom, return that position\n\tprotected snapToGuide(x:number, y:number):[number, number, boolean]\n\t{\n\t\t// if coming from a bond, only snap to other bonds\n\t\tif (this.opBond > 0)\n\t\t{\n\t\t\tlet obj = this.pickObject(x, y);\n\t\t\tif (obj < 0)\n\t\t\t{\n\t\t\t\tlet [bfr, bto] = this.mol.bondFromTo(-obj);\n\t\t\t\tlet px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n\t\t\t\tlet py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n\t\t\t\treturn [px, py, false];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t// try guides & atoms for snapping\n\t\tlet bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n\t\tconst APPROACH = sqr(0.5 * this.pointScale);\n\t\tif (this.dragGuides != null) for (let i = 0; i < this.dragGuides.length; i++) for (let j = 0; j < this.dragGuides[i].x.length; j++)\n\t\t{\n\t\t\tlet px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n\t\t\tlet dsq = norm2_xy(px - x, py - y);\n\t\t\tif (dsq < APPROACH && dsq < bestDSQ) [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n\t\t\tlet dsq = norm2_xy(px - x, py - y);\n\t\t\tif (dsq < APPROACH && dsq < bestDSQ) [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n\t\t}\n\t\tif (isFinite(bestDSQ)) return [bestX, bestY, bestAtom];\n\n\t\treturn null;\n\t}\n\n\t// locates a molecular object at the given position: returns N for atom, -N for bond, 0 for nothing, or null for not-on-canvas (e.g. button banks)\n\tprotected pickObjectCanvas(x:number, y:number, opt:{noAtoms?:boolean; noBonds?:boolean} = {}):number\n\t{\n\t\t// proceed with atoms & bonds\n\n\t\tlet limitDist = 0.5 * this.pointScale;\n\t\tlet bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n\n\t\t// look for close atoms\n\t\tif (!opt.noAtoms) for (let n = 0; n < this.layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = this.layout.getPoint(n);\n\t\t\tif (p.anum == 0) continue;\n\n\t\t\tlet dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n\t\t\tlet dsq = norm2_xy(dx, dy);\n\t\t\tlet limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n\t\t\tif (dsq > limitDSQ) continue;\n\t\t\tif (dsq < bestScore)\n\t\t\t{\n\t\t\t\tbestItem = p.anum;\n\t\t\t\tbestScore = dsq;\n\t\t\t}\n\t\t}\n\t\tif (bestItem != 0) return bestItem;\n\n\t\t// look for close bonds\n\t\tif (!opt.noBonds) for (let n = 0; n < this.layout.numLines(); n++)\n\t\t{\n\t\t\tlet l = this.layout.getLine(n);\n\t\t\tif (l.bnum == 0) continue;\n\n\t\t\tlet x1 = l.line.x1, y1 = l.line.y1;\n\t\t\tlet x2 = l.line.x2, y2 = l.line.y2;\n\n\t\t\tif (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n\t\t\t\tx > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist) continue;\n\n\t\t\tlet dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n\t\t\tif (dist > limitDist) continue;\n\t\t\tif (dist < bestScore)\n\t\t\t{\n\t\t\t\tbestItem = -l.bnum;\n\t\t\t\tbestScore = dist;\n\t\t\t}\n\t\t}\n\n\t\treturn bestItem;\n\t}\n\tprotected pickObject(x:number, y:number, opt:{noAtoms?:boolean; noBonds?:boolean} = {}):number\n\t{\n\t\treturn this.pickObjectCanvas(x, y, opt) || 0;\n\t}\n\n\t// puts together an effects parameter for the main sketch\n\tprivate sketchEffects(mol:Molecule):RenderEffects\n\t{\n\t\tlet effects = new RenderEffects();\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom) effects.dottedRectOutline[n] = 0x808080;\n\n\t\teffects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n\n\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\teffects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\teffects.bondDecoText = Vec.stringArray('', mol.numBonds);\n\t\teffects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n\t\teffects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n\n\t\tif (this.viewOpt.showOxState)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet ox = MolUtil.atomOxidationState(mol, n);\n\t\t\t\tif (ox != null)\n\t\t\t\t{\n\t\t\t\t\teffects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n\t\t\t\t\teffects.atomDecoCol[n - 1] = 0xFF8080;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry)\n\t\t{\n\t\t\tif (!this.stereo) this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n\t\t\tskip: for (let n = 1; n <= mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet chi = this.stereo.atomTetraChirality(n);\n\t\t\t\tif (chi == Stereochemistry.STEREO_NONE) continue;\n\t\t\t\tfor (let adjb of mol.atomAdjBonds(n)) if (mol.bondOrder(adjb) != 1) continue skip;\n\t\t\t\tif (chi == Stereochemistry.STEREO_UNKNOWN)\n\t\t\t\t{\n\t\t\t\t\tfor (let adj of mol.atomAdjList(n)) if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3) continue skip;\n\t\t\t\t}\n\t\t\t\teffects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n\t\t\t\t\t\t\t\t\t\t\t  chi == Stereochemistry.STEREO_NEG ? 'S' :\n\t\t\t\t\t\t\t\t\t\t\t  chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : /*STEREO_BROKEN*/ '?';\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x00A000;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet side = this.stereo.bondSideStereo(n);\n\t\t\t\tif (side == Stereochemistry.STEREO_NONE) continue;\n\t\t\t\teffects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n\t\t\t\t\t\t\t\t\t\t\t  side == Stereochemistry.STEREO_NEG ? 'E' :\n\t\t\t\t\t\t\t\t\t\t\t  side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : /*STEREO_BROKEN*/ '?';\n\t\t\t\teffects.bondDecoCol[n - 1] = 0x00A000;\n\t\t\t}\n\t\t}\n\t\telse if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber)\n\t\t{\n\t\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\t\teffects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) > 0) effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n\t\t}\n\t\telse if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex)\n\t\t{\n\t\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\t\teffects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) effects.atomDecoText[n - 1] = n.toString();\n\t\t}\n\n\t\treturn effects;\n\t}\n\n\t// align an abbreviation for display purposes\n\tprivate orientAbbreviation(abbrevAtom:number, abbrevMol:Molecule):void\n\t{\n\t\tconst {mol} = this;\n\n\t\tif (MolUtil.isBlank(abbrevMol)) return;\n\t\tif (this.mol.atomAdjCount(abbrevAtom) != 1) return;\n\n\t\t// find the vectors, so they can be lined up\n\t\tlet nbr = mol.atomAdjList(abbrevAtom)[0];\n\t\tlet vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n\t\tlet adj = abbrevMol!.atomAdjList(1);\n\t\tlet vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tvx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n\t\t\tvy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n\t\t}\n\t\tvx2 *= inv;\n\t\tvy2 *= inv;\n\n\t\t// align the coordinates\n\t\tlet th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n\t\tCoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n\t\tif (adj.length == 1)\n\t\t{\n\t\t\tCoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n\t\t\tabbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n\t\t}\n\n\t\tfor (let b of abbrevMol.atomAdjBonds(1))\n\t\t{\n\t\t\tlet a = abbrevMol.bondOther(b, 1);\n\t\t\tif (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN) continue;\n\t\t\tabbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n\t\t}\n\t\tabbrevMol.deleteAtomAndBonds(1);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {GeomUtil} from '../util/Geom';\nimport {Theme} from '../util/Theme';\nimport {angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tGeometry editing widget to support atom/bond editing dialogs.\n*/\n\nexport enum GeomWidgetType\n{\n\tAtom,\n\tBond,\n}\n\nexport enum GeomWidgetSelType\n{\n\tPosition,\n\tLink,\n\tTorsion,\n}\n\nexport interface GeomWidgetSelection\n{\n\ttype:GeomWidgetSelType;\n\tidx:number;\n}\n\nexport class GeomWidget extends Widget\n{\n\tpublic callbackSelect:(sel:GeomWidgetSelection) => void;\n\tpublic selected:GeomWidgetSelection;\n\n\tprivate atomSubset:number[];\n\tprivate scale:number;\n\tprivate posX:number[] = [];\n\tprivate posY:number[] = [];\n\tprivate posRad:number;\n\tprivate linkA:number[] = [];\n\tprivate linkB:number[] = [];\n\tprivate torsA:number[] = [];\n\tprivate torsB:number[] = [];\n\tprivate hovered:GeomWidgetSelection = null;\n\n\tprivate divDiagram:DOM;\n\n\tconstructor(private type:GeomWidgetType, private mol:Molecule, private idx:number)\n\t{\n\t\tsuper();\n\n\t\tif (type == GeomWidgetType.Atom)\n\t\t{\n\t\t\tconst atom = idx;\n\t\t\tlet adj = mol.atomAdjList(atom);\n\t\t\tthis.atomSubset = [atom, ...adj];\n\t\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t\t{\n\t\t\t\tthis.linkA.push(0);\n\t\t\t\tthis.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n\t\t\t}\n\t\t\tlet theta:number[] = [];\n\t\t\tfor (let a of adj) theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n\t\t\tlet order = Vec.idxSort(theta);\n\t\t\tfor (let n = 0; n < order.length; n++)\n\t\t\t{\n\t\t\t\tthis.torsA.push(order[n] + 1);\n\t\t\t\tthis.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n\t\t\t}\n\t\t\tthis.selected = {type: GeomWidgetSelType.Position, idx: 0};\n\t\t}\n\t\telse // Bond\n\t\t{\n\t\t\tconst bond = idx;\n\t\t\tlet a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n\t\t\tthis.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n\t\t\tlet link = (a1:number, a2:number) =>\n\t\t\t{\n\t\t\t\tthis.linkA.push(this.atomSubset.indexOf(a1));\n\t\t\t\tthis.linkB.push(this.atomSubset.indexOf(a2));\n\t\t\t};\n\t\t\tlink(a1, a2);\n\t\t\tfor (let a of mol.atomAdjList(a1)) if (a != a2) link(a1, a);\n\t\t\tfor (let a of mol.atomAdjList(a2)) if (a != a1) link(a2, a);\n\t\t\tthis.selected = {type: GeomWidgetSelType.Link, idx: 0};\n\t\t}\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet divOuter = dom('<div/>').appendTo(this.contentDOM).css({'text-align': 'center'});\n\t\tthis.divDiagram = dom('<div/>').appendTo(divOuter).css({'display': 'inline-block'});\n\t\tthis.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n\t\tthis.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n\n\t\tthis.redraw();\n\t}\n\n\t// return the atom(s) that correspond to certain types\n\tpublic selectionAtoms(sel:GeomWidgetSelection):number[]\n\t{\n\t\tconst atoms = this.atomSubset;\n\t\tif (sel.type == GeomWidgetSelType.Position) return [atoms[sel.idx]];\n\t\tif (sel.type == GeomWidgetSelType.Link) return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n\t\tif (sel.type == GeomWidgetSelType.Torsion) return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate redraw():void\n\t{\n\t\tthis.divDiagram.empty();\n\n\t\tlet w = 250, h = 250; // customise?\n\t\tthis.posX = [];\n\t\tthis.posY = [];\n\t\tconst ANG_RAD = 0.25;\n\t\tfor (let a of this.atomSubset)\n\t\t{\n\t\t\tthis.posX.push(this.mol.atomX(a));\n\t\t\tthis.posY.push(this.mol.atomY(a));\n\t\t}\n\t\tlet loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n\t\tlet loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n\t\tthis.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n\t\tlet dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n\t\tfor (let n = 0; n < this.atomSubset.length; n++)\n\t\t{\n\t\t\tthis.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n\t\t\tthis.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n\t\t}\n\t\tthis.posRad = ANG_RAD * this.scale;\n\n\t\tlet gfx = new MetaVector();\n\t\tgfx.setSize(w, h);\n\n\t\tlet fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n\t\tfor (let n = 0; n < this.atomSubset.length; n++)\n\t\t{\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n\t\t\telse\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n\t\t}\n\n\t\tfor (let showsel of [1, 2, 3]) for (let n = 0; n < this.linkA.length; n++)\n\t\t{\n\t\t\tlet x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n\t\t\tlet x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n)\n\t\t\t{\n\t\t\t\tif (showsel == 3)\n\t\t\t\t{\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n)\n\t\t\t{\n\t\t\t\tif (showsel == 2)\n\t\t\t\t{\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (showsel == 1) gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < this.torsA.length; n++)\n\t\t{\n\t\t\tlet cx = this.posX[0], cy = this.posY[0];\n\t\t\tlet dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n\t\t\tlet dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n\n\t\t\tlet rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n\t\t\tlet theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n\t\t\tlet ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n\n\t\t\tlet px:number[], py:number[], pf:boolean[];\n\t\t\tif (dtheta > 0) // short angle\n\t\t\t{\n\t\t\t\tlet [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n\t\t\t\tpx = Vec.add([ox1, ax1, ax2, ox2], cx);\n\t\t\t\tpy = Vec.add([oy1, ay1, ay2, oy2], cy);\n\t\t\t\tpf = [false, true, true, false];\n\t\t\t}\n\t\t\telse // long angle, need to do in two parts\n\t\t\t{\n\t\t\t\tlet thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n\t\t\t\tlet oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n\n\t\t\t\tlet [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n\t\t\t\tlet [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n\t\t\t\tpx = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n\t\t\t\tpy = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n\t\t\t\tpf = [false, true, true, false, true, true, false];\n\t\t\t}\n\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n)\n\t\t\t{\n\t\t\t\tgfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n\t\t\t\tgfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t\t}\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n)\n\t\t\t{\n\t\t\t\tgfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n\t\t\t\tgfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t\t}\n\t\t\telse gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t}\n\n\t\tthis.divDiagram.empty();\n\t\tlet svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({'pointer-events': 'none'});\n\t}\n\n\tprivate mouseClick(xy:number[]):void\n\t{\n\t\tevent.stopPropagation();\n\t\tif (this.type == GeomWidgetType.Bond) return; // no selection for bonds (for now)\n\n\t\tlet which = this.whichSelection(xy[0], xy[1]);\n\t\tif (!which) return; // don't want clearing of selection (for now)\n\t\tif (!this.sameSelection(this.selected, which))\n\t\t{\n\t\t\tthis.selected = which;\n\t\t\tthis.hovered = null;\n\t\t\tthis.redraw();\n\t\t\tthis.callbackSelect(which);\n\t\t}\n\t}\n\tprivate mouseMove(xy:number[]):void\n\t{\n\t\tif (this.type == GeomWidgetType.Bond) return; // no selection for bonds (for now)\n\n\t\tlet which = this.whichSelection(xy[0], xy[1]);\n\t\tif (which && this.sameSelection(which, this.selected)) which = null;\n\t\tif (!this.sameSelection(this.hovered, which))\n\t\t{\n\t\t\tthis.hovered = which;\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\tprivate whichSelection(x:number, y:number):GeomWidgetSelection\n\t{\n\t\tlet cx = this.posX[0], cy = this.posY[0];\n\t\tif (norm_xy(x - cx, y - cy) <= this.posRad) return {type: GeomWidgetSelType.Position, idx: 0};\n\t\tlet maxRad = 0;\n\t\tfor (let n = 1; n < this.atomSubset.length; n++) maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n\t\tif (norm_xy(x - cx, y - cy) > maxRad) return null;\n\n\t\tlet theta = Math.atan2(y - cy, x - cx);\n\t\tlet closeSel:GeomWidgetSelection = null, closeDelta = Number.POSITIVE_INFINITY;\n\n\t\tfor (let n = 0; n < this.linkB.length; n++)\n\t\t{\n\t\t\tlet delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n\t\t\tif (delta < 10 * DEGRAD && delta < closeDelta)\n\t\t\t{\n\t\t\t\tcloseSel = {type: GeomWidgetSelType.Link, idx: n};\n\t\t\t\tcloseDelta = delta;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < this.torsA.length; n++)\n\t\t{\n\t\t\tlet theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n\t\t\tlet theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n\t\t\tlet midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n\t\t\tlet delta = Math.abs(angleDiff(midtheta, theta));\n\t\t\tif (delta < closeDelta)\n\t\t\t{\n\t\t\t\tcloseSel = {type: GeomWidgetSelType.Torsion, idx: n};\n\t\t\t\tcloseDelta = delta;\n\t\t\t}\n\t\t}\n\n\t\treturn closeSel;\n\t}\n\n\t// returns true if selections are the same\n\tprivate sameSelection(sel1:GeomWidgetSelection, sel2:GeomWidgetSelection):boolean\n\t{\n\t\tif (sel1 == null && sel2 == null) return true;\n\t\tif (sel1 == null || sel2 == null) return false;\n\t\treturn sel1.type == sel2.type && sel1.idx == sel2.idx;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\n\n/*\n\tClipboardProxy: abstract base class for two different methods for clipboard access. One is the usual web page method,\n\twhich has serious limitations due to security concerns (i.e. a web page can't just grab the clipboard any time it wants).\n\tThe other is the NodeJS/Electron implementation which has full access any time it wants.\n\n*/\n\n// default clipboard behaviour: override these methods to intercept incoming copy/cut/paste requests; this default implementation\n// hands over the reins to the system, which is normal behaviour\nexport class ClipboardProxyHandler\n{\n\t// note: return values = true if the event got consumed by privately implemented functionality; false = fall back to the default\n\tpublic copyEvent(andCut:boolean, proxy:ClipboardProxy):boolean {return false;}\n\tpublic pasteEvent(proxy:ClipboardProxy):boolean {return false;}\n}\n\nexport class ClipboardProxy\n{\n\tprotected handlers = [new ClipboardProxyHandler()]; // baseline fallback is the default pass-through implementation\n\n\t// ------------ public methods ------------\n\n\t// use these two functions whenever a new focus-stealing object pops up on top of everything else, e.g. dialogs or dialog-like specialised\n\t// editing tools with complex clipboard behaviour\n\tpublic pushHandler(handler:ClipboardProxyHandler)\n\t{\n\t\tthis.handlers.push(handler);\n\t}\n\tpublic popHandler()\n\t{\n\t\tthis.handlers.pop();\n\t}\n\tpublic currentHandler():ClipboardProxyHandler\n\t{\n\t\treturn Vec.last(this.handlers);\n\t}\n\n\t// call these methods when an external event (e.g. menu/button) triggers a cut/copy/paste event\n\tpublic triggerCopy(andCut:boolean):void\n\t{\n\t\tif (this.currentHandler().copyEvent(andCut, this)) return;\n\t\tdocument.execCommand(andCut ? 'cut' : 'copy');\n\t}\n\tpublic triggerPaste():void\n\t{\n\t\tif (this.currentHandler().pasteEvent(this)) return;\n\t\tdocument.execCommand('paste');\n\t}\n\n\t// optional fall through, if the main handler can't figure it out\n\tpublic triggerBackupPaste:() => void = null;\n\n\t// fetches the content currently on the clipboard; note that for the web implementation, this is disallowed for\n\t// security reasons, but in desktop mode it is allowed (see canAlwaysGet below)\n\tpublic getString():string {return null;}\n\n\t// call this when we want to poll the clipboard at an arbitrary time (check canAlwaysGet to see if this is possible)\n\tpublic async getStringDirect():Promise<string> {return null;}\n\n\t// places the clipboard content with the indicated string; this is allowed at any time\n\tpublic setString(str:string):void {}\n\tpublic setImage(blob:Blob):void {}\n\n\t// places HTML content onto the clipboard, if available\n\tpublic canSetHTML():boolean {return false;}\n\tpublic setHTML(html:string):void {}\n\n\t// returns true if it is possible to fetch from the clipboard anytime (false when running in a web browser)\n\tpublic canAlwaysGet():boolean {return false;}\n\n\t// instantiate the downloading of a string, with a given default filename\n\tpublic downloadString(str:string, fn:string):void {}\n}\n\n/*\n\tClipboard handler that should be used when the browser is the runtime target, which presents a much more restricted clipboard\n\tuse pattern (for security reasons). The action-trapping actions are installed once for the whole documented, and from that point\n\tthey can either be trapped or allowed to fall back to the default action.\n*/\n\nexport class ClipboardProxyWeb extends ClipboardProxy\n{\n\tprivate lastContent:string = null;\n\tprivate fakeTextArea:HTMLTextAreaElement = null; // for temporarily bogarting the clipboard\n\tprivate busy = false; // need to block trapping during the copy workaround\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tdocument.addEventListener('copy', (event:ClipboardEvent) =>\n\t\t{\n\t\t\tif (this.busy) return null;\n\t\t\tif (this.currentHandler()?.copyEvent(false, this))\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('cut', (event:ClipboardEvent) =>\n\t\t{\n\t\t\tif (this.busy) return null;\n\t\t\tif (this.currentHandler()?.copyEvent(true, this))\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('paste', (event:ClipboardEvent) =>\n\t\t{\n\t\t\t// this is the only time when the clipboard is allowed to be interrogated, so stash the content so the handler can access it\n\t\t\tlet wnd = window as any;\n\t\t\tthis.lastContent = null;\n\t\t\tif (wnd.clipboardData && wnd.clipboardData.getData) this.lastContent = wnd.clipboardData.getData('Text');\n\t\t\telse if (event.clipboardData && event.clipboardData.getData) this.lastContent = event.clipboardData.getData('text/plain');\n\n\t\t\tlet consumed = this.currentHandler()?.pasteEvent(this);\n\n\t\t\tthis.lastContent = null;\n\n\t\t\tif (consumed)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic getString():string\n\t{\n\t\treturn this.lastContent;\n\t}\n\tpublic setString(str:string):void\n\t{\n\t\t// the default method for putting text on the clipboard involves making a fake hidden control, which is real\n\t\t// nasty: if the cleaner approach works, defer to that in preference\n\t\tlet fallbackWorkaround = () =>\n\t\t{\n\t\t\tif (this.fakeTextArea == null)\n\t\t\t{\n\t\t\t\tthis.fakeTextArea = document.createElement('textarea');\n\t\t\t\tthis.fakeTextArea.style.fontSize = '12pt';\n\t\t\t\tthis.fakeTextArea.style.border = '0';\n\t\t\t\tthis.fakeTextArea.style.padding = '0';\n\t\t\t\tthis.fakeTextArea.style.margin = '0';\n\t\t\t\tthis.fakeTextArea.style.position = 'fixed';\n\t\t\t\tthis.fakeTextArea.style['left'] = '-9999px';\n\t\t\t\tthis.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n\t\t\t\tthis.fakeTextArea.setAttribute('readonly', '');\n\t\t\t\tdocument.body.appendChild(this.fakeTextArea);\n\t\t\t}\n\t\t\tthis.fakeTextArea.value = str;\n\t\t\tthis.fakeTextArea.select();\n\n\t\t\t// disable event trapping, then issue the standard copy\n\t\t\tthis.busy = true;\n\t\t\tdocument.execCommand('copy');\n\t\t\tthis.busy = false;\n\t\t};\n\n\t\t// favour the explicit clipboard API, if allowed\n\t\tif (navigator.clipboard)\n\t\t{\n\t\t\tnavigator.clipboard.writeText(str).then(() => {}, fallbackWorkaround);\n\t\t}\n\t\telse fallbackWorkaround();\n\t}\n\tpublic setImage(blob:Blob):void\n\t{\n\t\tlet item = new ClipboardItem({'image/png': blob});\n\t\tthis.busy = true;\n\t\t(async () =>\n\t\t{\n\t\t\tawait navigator.clipboard.write([item]);\n\t\t\tthis.busy = false;\n\t\t})();\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {hasInlineCSS, installInlineCSS, Theme} from '../util/Theme';\nimport {colourCode} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tOptionList: a replacement for the ghetto native HTML radio buttons. Can be used in either horizontal or vertical mode. Rendering\n\tstyle looks like several custom buttons that are joined together, and the current one is highlighted and unclickable. For\n\tvertical mode, slots are reserved so that text can be added to the right each option.\n\n\tNote that there is always one index selected. It is\n\n\tContent:\n\t\t.options: array of strings for use as labels\n\t\t.isVertical: boolean (default: false)\n\t\t.selidx: selected option (0 .. options.length-1)\n\t\t.buttonDiv1, .buttonDiv2: arrays of DOM elements, one for each option\n\t\t.auxCell: vertical only; a list of <td> DOM elements for optional associated content\n*/\n\nexport class OptionList extends Widget\n{\n\tpublic padding = 6; // pixels\n\tpublic htmlLabels = false; // switch this on if the labels are HTML rather than text\n\tpublic numCols = 0; // optional: if 0, everything is on one line\n\n\tprivate selidx = 0;\n\tprivate buttonDiv:DOM[] = [];\n\tprivate auxCell:DOM[] = [];\n\tprivate isDisabled:boolean[] = null;\n\n\tpublic callbackSelect:(idx:number, source?:OptionList) => void = null;\n\n\tconstructor(public options:string[], private isVertical:boolean = false)\n\t{\n\t\tsuper();\n\t\tif (options.length == 0) throw 'molsync.ui.OptionList: must provide a list of option labels.';\n\n\t\tif (!hasInlineCSS('option')) installInlineCSS('option', this.composeCSS());\n\t}\n\n\t// control over selected index\n\tpublic getSelectedIndex():number\n\t{\n\t\treturn this.selidx;\n\t}\n\tpublic getSelectedValue():string\n\t{\n\t\treturn this.options[this.selidx];\n\t}\n\n\t// requests an \"auxiliary cell\" for a vertical control, into which additional information may be placed\n\tpublic getAuxiliaryCell(idx:number):Element\n\t{\n\t\treturn this.auxCell[idx].el;\n\t}\n\n\t// provide the change of state handler\n\tpublic onSelect(callback:(idx:number, source?:OptionList) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// optionally set some of the formats to being disabled\n\tpublic setDisabled(isDisabled:boolean[]):void\n\t{\n\t\tthis.isDisabled = isDisabled;\n\t\tthis.updateButtons();\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.contentDOM.css({'display': 'block', 'baseline-shift': '1.5em'});\n\n\t\tthis.buttonDiv = [];\n\t\tthis.auxCell = [];\n\n\t\tlet table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n\t\tlet tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n\n\t\tfor (let n = 0; n < this.options.length; n++)\n\t\t{\n\t\t\tif (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0)) tr = dom('<tr/>').appendTo(table);\n\t\t\tlet td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n\t\t\tlet div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n\t\t\tdiv.css({'padding': `${this.padding}px`});\n\n\t\t\tdiv.onClick(() => this.clickButton(n));\n\n\t\t\tthis.buttonDiv.push(div);\n\n\t\t\tif (this.isVertical)\n\t\t\t{\n\t\t\t\ttd = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n\t\t\t\tthis.auxCell.push(td);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateButtons();\n\t}\n\n\t// perform some checks before rendering\n\tpublic clickButton(idx:number):void\n\t{\n\t\tif (idx == this.selidx) return;\n\t\tif (this.isDisabled && this.isDisabled[idx]) return;\n\n\t\tthis.setSelectedIndex(idx);\n\n\t\tif (this.callbackSelect) this.callbackSelect(idx, this);\n\t}\n\n\t// change selected index, update widgets\n\tpublic setSelectedIndex(idx:number):void\n\t{\n\t\tif (this.selidx == idx) return;\n\t\tthis.selidx = idx;\n\t\tthis.updateButtons();\n\t}\n\tpublic setSelectedValue(val:string):void\n\t{\n\t\tlet idx = this.options.indexOf(val);\n\t\tif (idx >= 0) this.setSelectedIndex(idx);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// updates selection state of buttons, either first time or after change\n\tprivate updateButtons():void\n\t{\n\t\tfor (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++)\n\t\t{\n\t\t\tlet div = this.buttonDiv[n];\n\n\t\t\tlet txt = this.options[n];\n\t\t\tif (txt.length == 0 && n == this.selidx) div.setText('\\u00A0\\u2716\\u00A0');\n\t\t\telse if (txt.length == 0) div.setText('\\u00A0\\u00A0\\u00A0');\n\t\t\telse if (this.htmlLabels) div.setHTML(txt);\n\t\t\telse div.setText(txt);\n\n\t\t\tdiv.removeClass('wmk-option-unselected wmk-option-selected');\n\n\t\t\tif (this.isDisabled && this.isDisabled[n]) div.addClass('wmk-option-disabled');\n\t\t\telse if (n != this.selidx) div.addClass('wmk-option-unselected');\n\t\t\telse div.addClass('wmk-option-selected');\n\t\t}\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\t\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t\treturn `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-disabled\n\t\t\t{\n\t\t\t\tcolor: #C0C0C0;\n\t\t\t\tcursor: not-allowed;\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {hasInlineCSS, installInlineCSS, Theme} from '../util/Theme';\nimport {colourCode} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tTabBar: a series of option buttons with a common area underneath it, of which just one can be selected & visible.\n*/\n\nexport class TabBar extends Widget\n{\n\tpublic unionHeight = false; // if true, height of tab bar will be set to the maximum of all components\n\n\tprivate selidx = 0;\n\tprivate buttonDiv:DOM[] = [];\n\tprivate panelDiv:DOM[] = [];\n\tprivate padding = 6; // pixels\n\n\tpublic callbackSelect:(idx:number, source?:TabBar) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(public options:string[])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('tabbar')) installInlineCSS('tabbar', this.composeCSS());\n\t}\n\n\tpublic onSelect(callback:(idx:number, source?:TabBar) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// control over selected index\n\tpublic getSelectedIndex():number\n\t{\n\t\treturn this.selidx;\n\t}\n\tpublic getSelectedValue():string\n\t{\n\t\treturn this.options[this.selidx];\n\t}\n\n\t// return the panel: each of these needs to be individually filled\n\tpublic getPanelDOM(idxOrName:number | string):DOM\n\t{\n\t\tlet idx = typeof idxOrName == 'number' ? idxOrName as number : this.options.indexOf(idxOrName);\n\t\tif (idx < 0) return null;\n\t\treturn this.panelDiv[idx];\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tlet columns = '[start] 1fr ';\n\t\tfor (let n = 0; n < this.options.length; n++) columns += '[btn' + n + '] auto ';\n\t\tcolumns += '[btnX] 1fr [end]';\n\t\tgrid.css({'grid-template-columns': columns});\n\n\t\tlet underline = dom('<div/>').appendTo(grid);\n\t\tunderline.css({'grid-column': 'start / end', 'grid-row': '1', 'height': '100%'});\n\t\tunderline.css({'border-bottom': '1px solid #C0C0C0'});\n\n\t\tfor (let n = 0; n < this.options.length; n++)\n\t\t{\n\t\t\tlet outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n\t\t\toutline.css({'grid-column': 'btn' + n, 'grid-row': '1'});\n\t\t\tlet btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n\t\t\tbtn.css({'padding': `${this.padding}px`});\n\t\t\tbtn.onClick(() => this.clickButton(n));\n\t\t\tthis.buttonDiv.push(btn);\n\n\t\t\tlet panel = dom('<div/>').appendTo(grid);\n\t\t\tpanel.css({'grid-column': 'start / end', 'grid-row': '2'});\n\t\t\tpanel.css({'align-self': 'start', 'justify-self': 'center', 'width': '100%'});\n\t\t\tthis.panelDiv.push(panel);\n\t\t}\n\n\t\tthis.updateButtons();\n\t}\n\n\t// tab-button clicked, so change content\n\tpublic clickButton(idx:number):void\n\t{\n\t\tif (idx == this.selidx) return;\n\n\t\tthis.setSelectedIndex(idx);\n\n\t\tif (this.callbackSelect) this.callbackSelect(idx, this);\n\t}\n\n\t// change selected index, update widgets\n\tpublic setSelectedIndex(idx:number):void\n\t{\n\t\tif (this.selidx == idx) return;\n\t\tthis.selidx = idx;\n\n\t\tlet dom = this.contentDOM;\n\t\tdom.setCSS('min-width', `${dom.width()}px`);\n\t\t\n\t\tthis.updateButtons();\n\t}\n\tpublic setSelectedValue(val:string):void\n\t{\n\t\tlet idx = this.options.indexOf(val);\n\t\tif (idx >= 0) this.setSelectedIndex(idx);\n\t}\n\tpublic rotateSelected(dir:number):void\n\t{\n\t\tthis.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// updates selection state of buttons, either first time or after change\n\tprivate updateButtons():void\n\t{\n\t\tfor (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++)\n\t\t{\n\t\t\tlet div = this.buttonDiv[n];\n\n\t\t\tlet txt = this.options[n];\n\t\t\tif (txt.length == 0 && n == this.selidx) div.setText('\\u00A0\\u2716\\u00A0');\n\t\t\telse if (txt.length == 0) div.setText('\\u00A0\\u00A0\\u00A0');\n\t\t\telse div.setText(txt);\n\n\t\t\tdiv.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n\n\t\t\tif (n != this.selidx)\n\t\t\t\tdiv.addClass('wmk-tabbar-unselected');\n\t\t\telse\n\t\t\t\tdiv.addClass('wmk-tabbar-selected');\n\n\t\t\tif (this.unionHeight)\n\t\t\t\tthis.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n\t\t\telse\n\t\t\t\tthis.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n\t\t}\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\t\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t\treturn `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\n\n/*\n\tSupporting widget for editing extra/transient fields, from either atoms or bonds.\n*/\n\nexport class ExtraFieldsWidget extends Widget\n{\n\tprivate divFields:DOM;\n\n\tconstructor(private fields:string[])\n\t{\n\t\tsuper();\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divFields = dom('<div/>').appendTo(this.contentDOM);\n\t\tthis.fillTable();\n\n\t\tlet divButtons = dom('<div/>').appendTo(this.contentDOM).css({'text-align': 'center'});\n\t\tlet btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n\t\tbtnExtra.onClick(() =>\n\t\t{\n\t\t\tthis.fields.push(Molecule.PREFIX_EXTRA);\n\t\t\tthis.fillTable();\n\t\t});\n\t\t//divButtons.append(' ');\n\t\tlet btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({'margin-left': '0.5em'});\n\t\tbtnTransient.onClick(() =>\n\t\t{\n\t\t\tthis.fields.push(Molecule.PREFIX_TRANSIENT);\n\t\t\tthis.fillTable();\n\t\t});\n\t}\n\n\tpublic getExtraFields():string[]\n\t{\n\t\tlet extra:string[] = [];\n\t\tfor (let field of this.fields) if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1) extra.push(field);\n\t\treturn extra;\n\t}\n\n\tpublic getTransientFields():string[]\n\t{\n\t\tlet transient:string[] = [];\n\t\tfor (let field of this.fields) if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1) transient.push(field);\n\t\treturn transient;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate fillTable():void\n\t{\n\t\tthis.divFields.empty();\n\t\tif (this.fields.length == 0) return;\n\n\t\tlet table = dom('<table/>').appendTo(this.divFields).css({'width': '100%'});\n\t\tlet tr = dom('<tr/>').appendTo(table);\n\t\tdom('<td/>').appendTo(tr).css({'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline'}).setText('Type');\n\t\tdom('<td/>').appendTo(tr).css({'font-weight': 'bold', 'text-decoration': 'underline'}).setText('Value');\n\n\t\tfor (let n = 0; n < this.fields.length; n++)\n\t\t{\n\t\t\tlet strType = '?', strValue = '';\n\t\t\tif (this.fields[n].length > 0)\n\t\t\t{\n\t\t\t\tstrType = this.fields[n].charAt(0);\n\t\t\t\tstrValue = this.fields[n].substring(1);\n\t\t\t}\n\n\t\t\ttr = dom('<tr/>').appendTo(table);\n\t\t\tlet tdType = dom('<td/>').appendTo(tr).css({'text-align': 'right'}), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n\n\t\t\tdom('<span/>').appendTo(tdType).css({'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0'}).setText(strType);\n\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(tdValue).css({'width': '100%', 'font': 'inherit'});\n\t\t\tinput.setValue(strValue);\n\t\t\tinput.onInput(() => {this.fields[n] = strType + input.getValue();});\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({'margin-left': '0.5em'});\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.fields.splice(n, 1);\n\t\t\t\tthis.fillTable();\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tInteractive periodic table for picking elements.\n*/\n\n/* eslint-disable no-multi-spaces, comma-spacing */\nconst POSITION_TABLE_Y =\n[\n\t1,                                1,\n\t2,2,                    2,2,2,2,2,2,\n\t3,3,                    3,3,3,3,3,3,\n\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\t6,6,\n\t\t\t\t\t\t\t\t8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,\n\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t7,7,\n\t\t\t\t\t\t\t\t9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,\n\t\t7,7,7,7,7,7,7,7,7,7\n];\nconst POSITION_TABLE_X =\n[\n\t1,                                        18,\n\t1,2,                       13,14,15,16,17,18,\n\t1,2,                       13,14,15,16,17,18,\n\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,\n\t\t\t\t\t\t\t\t3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,\n\t\t3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,\n\t\t\t\t\t\t\t\t3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,\n\t\t3,4,5,6,7,8,9,10,11,12\n];\n\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\n\nexport class PeriodicTableWidget extends Widget\n{\n\tprivate callbackSelect:(element:string) => void;\n\tprivate callbackDoubleClick:() => void;\n\n\tprivate divList:DOM[] = [];\n\tprivate selectedAtno:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tinstallInlineCSS('periodictable', CSS_PERIODICTABLE);\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'gap': '1px'});\n\t\t//grid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\t//grid.css({'grid-template-columns': '[title] auto [value] auto [end]'});\n\n\t\tlet row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n\t\tlet col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n\t\tlet num = row.length;\n\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(grid);\n\t\t\tdiv.css({'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2`});\n\t\t\tdiv.addClass('wmk-periodictable-element');\n\n\t\t\tlet blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n\t\t\tif (blk == 1) div.addClass('wmk-periodictable-block1');\n\t\t\telse if (blk == 2) div.addClass('wmk-periodictable-block2');\n\t\t\telse if (blk == 3) div.addClass('wmk-periodictable-block3');\n\t\t\telse if (blk == 4) div.addClass('wmk-periodictable-block4');\n\n\t\t\tlet el = Chemistry.ELEMENTS[n + 1];\n\t\t\tdiv.setText(el);\n\t\t\tthis.divList.push(div);\n\n\t\t\tdiv.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.changeElement(el);\n\t\t\t\tthis.callbackSelect(el);\n\t\t\t});\n\t\t\tdiv.onDblClick((event) =>\n\t\t\t{\n\t\t\t\tthis.callbackDoubleClick();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onSelect(callback:(element:string) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\tpublic onDoubleClick(callback:() => void):void\n\t{\n\t\tthis.callbackDoubleClick = callback;\n\t}\n\n\t// set visible selection to the given element, or nothing if it's not in the list\n\tpublic changeElement(element:string):void\n\t{\n\t\tlet atno = Chemistry.ELEMENTS.indexOf(element);\n\t\tthis.selectedAtno = [atno];\n\t\tthis.updateSelected();\n\t\t/*if (atno == this.selectedAtno) return;\n\t\tif (this.selectedAtno > 0) this.divList[this.selectedAtno - 1].removeClass('wmk-periodictable-selected');\n\t\tthis.selectedAtno = atno;\n\t\tif (this.selectedAtno > 0) this.divList[this.selectedAtno - 1].addClass('wmk-periodictable-selected');*/\n\t}\n\n\tpublic setSelectedElements(elementList:string[]):void\n\t{\n\t\tthis.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n\t\tthis.updateSelected();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate updateSelected():void\n\t{\n\t\tfor (let n = 1; n <= this.divList.length; n++)\n\t\t{\n\t\t\tif (this.selectedAtno.includes(n))\n\t\t\t\tthis.divList[n - 1].addClass('wmk-periodictable-selected');\n\t\t\telse\n\t\t\t\tthis.divList[n - 1].removeClass('wmk-periodictable-selected');\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {OptionList} from '../ui/OptionList';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {Vec} from '../util/Vec';\n\n/*\n\tSupporting widget for editing query fields, for an atom or a bond.\n*/\n\nexport class QueryFieldsWidget extends Widget\n{\n\tprivate inputCharges:DOM;\n\tprivate optAromatic:OptionList;\n\tprivate optUnsaturated:OptionList;\n\tprivate chkNotElements:DOM;\n\tprivate inputElements:DOM;\n\tprivate chkNotRingSizes:DOM;\n\tprivate inputRingSizes:DOM;\n\tprivate optRingBlock:OptionList;\n\tprivate inputNumRings:DOM;\n\tprivate inputRingBonds:DOM;\n\tprivate inputAdjacency:DOM;\n\tprivate inputBondSums:DOM;\n\tprivate inputValences:DOM;\n\tprivate inputHydrogens:DOM;\n\tprivate inputIsotopes:DOM;\n\t//private chkSubFrags:DOM; !! ... include & exclude mutually compatible? because they can be queries...\n\t//private divQSubFrags:!!\n\tprivate inputOrders:DOM;\n\n\tconstructor(private mol:Molecule, private atom:number, private bond:number)\n\t{\n\t\tsuper();\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[title] auto [value] auto [end]'});\n\n\t\tlet row = 0;\n\n\t\tlet makeInput = ():DOM =>\n\t\t{\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(grid).css({'grid-area': `${row} / value`});\n\t\t\treturn input;\n\t\t};\n\t\tlet makeToggleInput = ():[DOM, DOM] =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`, 'dispkay': 'flex'});\n\t\t\tlet lbl = dom('<label/>').appendTo(div).css({'margin-right': '0.5em'});\n\t\t\tlet chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n\t\t\tlbl.appendText('Not');\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(div).css({'flex-grow': '1'});\n\t\t\treturn [chk, input];\n\t\t};\n\n\t\tif (this.atom > 0)\n\t\t{\n\t\t\tdom('<div>Charges</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputCharges = makeInput();\n\n\t\t\tdom('<div>Aromatic</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optAromatic.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div>Unsaturated</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optUnsaturated.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div>Elements</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotElements, this.inputElements] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Sizes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Block</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optRingBlock.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div># Small Rings</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputNumRings = makeInput();\n\n\t\t\tdom('<div># Ring Bonds</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputRingBonds = makeInput();\n\n\t\t\tdom('<div>Adjacency</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputAdjacency = makeInput();\n\n\t\t\tdom('<div>Bond Sums</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputBondSums = makeInput();\n\n\t\t\tdom('<div>Valences</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputValences = makeInput();\n\n\t\t\tdom('<div>Hydrogens</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputHydrogens = makeInput();\n\n\t\t\tdom('<div>Isotopes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputIsotopes = makeInput();\n\n\t\t\t// !!! FRAGMENTS...\n\n\t\t\tthis.setupAtom();\n\t\t}\n\t\telse // this.bond > 0\n\t\t{\n\t\t\tdom('<div>Ring Sizes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Block</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optRingBlock.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div># Small Rings</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputNumRings = makeInput();\n\n\t\t\tdom('<div>Bond Orders</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputOrders = makeInput();\n\n\t\t\tthis.setupBond();\n\t\t}\n\t}\n\n\tpublic updateAtom():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tQueryUtil.deleteQueryAtomAll(mol, atom);\n\n\t\tlet chg = this.splitNumbers(this.inputCharges.getValue());\n\t\tif (chg) QueryUtil.setQueryAtomCharges(mol, atom, chg);\n\n\t\tlet arom = this.optAromatic.getSelectedIndex();\n\t\tif (arom > 0) QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n\n\t\tlet unsat = this.optUnsaturated.getSelectedIndex();\n\t\tif (unsat > 0) QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n\n\t\tlet elem = this.splitStrings(this.inputElements.getValue());\n\t\tif (elem)\n\t\t{\n\t\t\tif (!this.chkNotElements.elInput.checked)\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, elem);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n\t\t}\n\n\t\tlet ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n\t\tif (ringsz)\n\t\t{\n\t\t\tif (!this.chkNotRingSizes.elInput.checked)\n\t\t\t\tQueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n\t\t}\n\n\t\tlet ringblk = this.optRingBlock.getSelectedIndex();\n\t\tif (ringblk > 0) QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n\n\t\tlet nring = this.splitNumbers(this.inputNumRings.getValue());\n\t\tif (nring) QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n\n\t\tlet rbc = this.splitNumbers(this.inputRingBonds.getValue());\n\t\tif (rbc) QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n\n\t\tlet adj = this.splitNumbers(this.inputAdjacency.getValue());\n\t\tif (adj) QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n\n\t\tlet bond = this.splitNumbers(this.inputBondSums.getValue());\n\t\tif (bond) QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n\n\t\tlet val = this.splitNumbers(this.inputValences.getValue());\n\t\tif (val) QueryUtil.setQueryAtomValences(mol, atom, val);\n\n\t\tlet hyd = this.splitNumbers(this.inputHydrogens.getValue());\n\t\tif (hyd) QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n\n\t\tlet iso = this.splitNumbers(this.inputIsotopes.getValue());\n\t\tif (iso) QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n\n\t\t// !! FRAGMENTS\n\t}\n\n\tpublic updateBond():void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tQueryUtil.deleteQueryBondAll(mol, bond);\n\n\t\tlet ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n\t\tif (ringsz)\n\t\t{\n\t\t\tif (!this.chkNotRingSizes.elInput.checked)\n\t\t\t\tQueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n\t\t}\n\n\t\tlet ringblk = this.optRingBlock.getSelectedIndex();\n\t\tif (ringblk > 0) QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n\n\t\tlet nring = this.splitNumbers(this.inputNumRings.getValue());\n\t\tif (nring) QueryUtil.setQueryBondNumRings(mol, bond, nring);\n\n\t\tlet order = this.splitNumbers(this.inputOrders.getValue());\n\t\tif (order) QueryUtil.setQueryBondOrders(mol, bond, order);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate setupAtom():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tlet chg = QueryUtil.queryAtomCharges(mol, atom);\n\t\tlet arom = QueryUtil.queryAtomAromatic(mol, atom);\n\t\tlet unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n\t\tlet elem = QueryUtil.queryAtomElements(mol, atom);\n\t\tlet elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n\t\tlet ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n\t\tlet ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n\t\tlet ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n\t\tlet nring = QueryUtil.queryAtomNumRings(mol, atom);\n\t\tlet rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n\t\tlet adj = QueryUtil.queryAtomAdjacency(mol, atom);\n\t\tlet bond = QueryUtil.queryAtomBondSums(mol, atom);\n\t\tlet val = QueryUtil.queryAtomValences(mol, atom);\n\t\tlet hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n\t\tlet iso = QueryUtil.queryAtomIsotope(mol, atom);\n\t\tlet frag = QueryUtil.queryAtomSubFrags(mol, atom);\n\t\tlet fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n\n\t\tthis.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n\t\tthis.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n\t\tthis.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n\t\tthis.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n\t\tthis.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n\t\tthis.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n\t\tthis.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n\t\tthis.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n\t\tthis.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n\t\tthis.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n\t\tthis.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n\t\tthis.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n\t\tthis.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n\t\tthis.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n\t\tthis.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n\n\t\t// TODO: frag/fragNot\n\t}\n\n\tprivate setupBond():void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n\t\tlet ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n\t\tlet ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n\t\tlet nring = QueryUtil.queryBondNumRings(mol, bond);\n\t\tlet order = QueryUtil.queryBondOrders(mol, bond);\n\n\t\tthis.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n\t\tthis.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n\t\tthis.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n\t\tthis.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n\t\tthis.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n\t}\n\n\tprivate splitStrings(str:string):string[]\n\t{\n\t\tlet list:string[] = [];\n\t\tif (str) for (let bit of str.split(/[\\s\\,\\;]+/)) if (bit) list.push(bit);\n\t\treturn list.length ? list : null;\n\t}\n\tprivate splitNumbers(str:string):number[]\n\t{\n\t\tlet list:number[] = [];\n\t\tif (str) for (let bit of str.split(/[\\s\\,\\;]+/))\n\t\t{\n\t\t\tif (bit.startsWith('+')) bit = bit.substring(1);\n\t\t\tlet num = parseInt(bit);\n\t\t\tif (!isNaN(num)) list.push(num);\n\t\t}\n\t\treturn list.length ? list : null;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer, AbbrevContainerFrag} from '../data/AbbrevContainer';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {Dialog} from '../dialog/Dialog';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {TabBar} from '../ui/TabBar';\nimport {dom, DOM} from '../util/dom';\nimport {Theme} from '../util/Theme';\nimport {angleDiffPos, colourCode, DEGRAD, KeyCode, norm_xy, RADDEG} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ExtraFieldsWidget} from './ExtraFieldsWidget';\nimport {GeomWidget, GeomWidgetSelection, GeomWidgetSelType, GeomWidgetType} from './GeomWidget';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {PeriodicTableWidget} from './PeriodicTableWidget';\nimport {QueryFieldsWidget} from './QueryFieldsWidget';\n\n/*\n\tOptions for editing a single atom within a molecule.\n*/\n\ninterface EditAtomAbbrev\n{\n\ttr:DOM;\n\tidx:number;\n\tbgcol:string;\n}\n\nexport class EditAtom extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\tpublic newX = 0;\n\tpublic newY = 0;\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate tabs:TabBar = null;\n\n\tprivate inputSymbol:DOM;\n\tprivate inputCharge:DOM;\n\tprivate inputUnpaired:DOM;\n\tprivate optionHydrogen:OptionList;\n\tprivate inputHydrogen:DOM;\n\tprivate optionIsotope:OptionList;\n\tprivate inputIsotope:DOM;\n\tprivate inputMapping:DOM;\n\tprivate inputIndex:DOM;\n\tprivate periodicWidget:PeriodicTableWidget;\n\n\tprivate abbrevList:AbbrevContainerFrag[] = null;\n\tprivate inputAbbrevSearch:DOM;\n\tprivate tableAbbrev:DOM;\n\tprivate svgAbbrev:string[] = null;\n\tprivate abbrevEntries:EditAtomAbbrev[];\n\tprivate abbrevIndices:number[] = [];\n\tprivate currentAbbrev = -1;\n\n\tprivate inputGeom1:DOM;\n\tprivate inputGeom2:DOM;\n\tprivate geomWidget:GeomWidget;\n\tprivate refGeom1:string;\n\tprivate refGeom2:string;\n\n\tprivate queryWidget:QueryFieldsWidget;\n\tprivate fieldsWidget:ExtraFieldsWidget;\n\n\tconstructor(mol:Molecule, public atom:number, private proxyClip:ClipboardProxy, private callbackApply:(source?:EditAtom) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Edit Atom';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tif (this.atom > 0)\n\t\t{\n\t\t\tthis.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n\t\t\tthis.tabs.render(body);\n\t\t\tthis.tabs.onSelect((idx) => this.selectedTab(idx));\n\n\t\t\tthis.populateAtom(this.tabs.getPanelDOM('Atom'));\n\t\t\tthis.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n\t\t\tif (this.atom > 0) this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n\t\t\tthis.populateQuery(this.tabs.getPanelDOM('Query'));\n\t\t\tthis.populateExtra(this.tabs.getPanelDOM('Extra'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.populateAtom(body);\n\t\t}\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tif (event.key == KeyCode.Enter) this.applyChanges();\n\t\t\t\telse if (event.key == KeyCode.Escape) this.close();\n\t\t\t\telse if (event.key == KeyCode.PageUp)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(-1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse if (event.key == KeyCode.PageDown)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tthis.mol.keepTransient = true;\n\n\t\tthis.updateMolecule();\n\t\tlet selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n\t\tif (selTab == 'Abbreviation') this.updateAbbrev();\n\t\tif (selTab == 'Geometry') this.updateGeometry();\n\t\tif (selTab == 'Query') this.updateQuery();\n\t\tif (selTab == 'Extra') this.updateExtra();\n\n\t\tthis.mol.keepTransient = false;\n\n\t\tif (this.callbackApply) this.callbackApply(this);\n\t}\n\n\tprivate populateAtom(panel:DOM):void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(panel);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n\t\tthis.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n\t\tthis.inputSymbol.css({'grid-area': '1 / col1 / auto / col4}'});\n\t\tthis.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n\t\tthis.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputCharge.css({'grid-area': '2 / col1'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n\t\tthis.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputUnpaired.css({'grid-area': '2 / col3'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n\t\tthis.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n\t\tthis.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n\t\tthis.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n\t\tthis.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n\t\tthis.inputHydrogen.css({'grid-area': '3 / col3'});\n\t\tthis.inputHydrogen.elInput.disabled = true;\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n\t\tthis.optionIsotope = new OptionList(['Natural', 'Enriched']);\n\t\tthis.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n\t\tthis.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n\t\tthis.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputIsotope.css({'grid-area': '4 / col3'});\n\t\tthis.inputIsotope.elInput.disabled = true;\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n\t\tthis.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputMapping.css({'grid-area': '5 / col1'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n\t\tthis.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n\t\tthis.inputIndex.css({'grid-area': '5 / col3'});\n\n\t\tlet divPeriodic = dom('<div/>').appendTo(grid).css({'grid-area': '6 / start / 6 / end'});\n\t\tthis.periodicWidget = new PeriodicTableWidget();\n\t\tthis.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n\t\tthis.periodicWidget.onDoubleClick(() => this.applyChanges());\n\t\tthis.periodicWidget.render(divPeriodic);\n\n\t\tconst mol = this.mol, atom = this.atom;\n\t\tif (atom > 0)\n\t\t{\n\t\t\tthis.inputSymbol.setValue(mol.atomElement(atom));\n\t\t\tthis.inputCharge.setValue(mol.atomCharge(atom).toString());\n\t\t\tthis.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n\n\t\t\tlet hc = mol.atomHExplicit(atom);\n\t\t\tif (hc == Molecule.HEXPLICIT_UNKNOWN)\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(0);\n\t\t\t\tthis.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = true;\n\t\t\t}\n\t\t\telse if (hc <= 4)\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(hc + 1);\n\t\t\t\tthis.inputHydrogen.setValue(hc.toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(6);\n\t\t\t\tthis.inputHydrogen.setValue(hc.toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = false;\n\t\t\t}\n\t\t\t//this.optionHydrogen.setSelectedIndex(mol.atomHExplicit(atom) == Molecule.HEXPLICIT_UNKNOWN ? 0 : 1);\n\t\t\t//if (mol.atomHExplicit(atom) != Molecule.HEXPLICIT_UNKNOWN) this.inputHydrogen.val(mol.atomHExplicit(atom).toString());\n\n\t\t\tthis.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n\t\t\tif (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL) this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n\t\t\tthis.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n\n\t\t\tthis.inputMapping.setValue(mol.atomMapNum(atom).toString());\n\t\t\tthis.inputIndex.setValue(atom.toString());\n\n\t\t\tthis.periodicWidget.changeElement(mol.atomElement(atom));\n\t\t}\n\t}\n\n\tprivate populateAbbreviation(panel:DOM):void\n\t{\n\t\tlet divFlex = dom('<div/>').appendTo(panel).css({'display': 'flex', 'align-items': 'flex-start'});\n\t\tdivFlex.css({'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll'});\n\n\t\tlet spanSearch = dom('<div/>').appendTo(divFlex).css({'margin-right': '0.5em', 'flex': '0 0'});\n\t\tlet spanList = dom('<div/>').appendTo(divFlex).css({'flex': '1 1 100%'});\n\n\t\tthis.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n\t\tthis.inputAbbrevSearch.setAttr('placeholder', 'Search');\n\t\tlet lastSearch = '';\n\t\tthis.inputAbbrevSearch.onKeyDown((event) =>\n\t\t{\n\t\t\tif (event.key == KeyCode.Up) this.cycleAbbreviation(-1);\n\t\t\telse if (event.key == KeyCode.Down) this.cycleAbbreviation(1);\n\t\t});\n\t\tthis.inputAbbrevSearch.onInput(() =>\n\t\t{\n\t\t\tlet search = this.inputAbbrevSearch.getValue();\n\t\t\tif (search == lastSearch) return;\n\t\t\tlastSearch = search;\n\t\t\tthis.fillAbbreviations();\n\t\t});\n\n\t\tlet divButtons = dom('<div/>').appendTo(spanSearch).css({'margin-top': '0.5em'});\n\t\tlet btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n\t\tbtnClear.onClick(() =>\n\t\t{\n\t\t\tthis.selectAbbreviation(-1);\n\t\t\tif (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom)) this.applyChanges();\n\t\t});\n\n\t\tthis.tableAbbrev = dom('<table/>').appendTo(spanList).css({'border-collapse': 'collapse', 'width': '100%'});\n\t\tthis.fillAbbreviations();\n\t}\n\n\tprivate populateGeometry(panel:DOM):void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tlet divContainer1 = dom('<div/>').appendTo(panel).css({'text-align': 'center'});\n\t\tlet divContainer2 = dom('<div/>').appendTo(divContainer1).css({'display': 'inline-block'});\n\t\tlet grid = dom('<div/>').appendTo(divContainer2);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tthis.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n\t\tthis.geomWidget.render(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col0 / auto / col4', 'text-align': 'center'}));\n\n\t\tlet label1 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'});\n\t\tthis.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col1'});\n\t\tlet label2 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col2'});\n\t\tthis.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col3'});\n\n\t\tthis.geomWidget.callbackSelect = (sel:GeomWidgetSelection) =>\n\t\t{\n\t\t\tlet atoms = this.geomWidget.selectionAtoms(sel);\n\t\t\tif (sel.type == GeomWidgetSelType.Position)\n\t\t\t{\n\t\t\t\tlabel1.setText('Position X');\n\t\t\t\tlabel2.setText('Y');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n\t\t\t}\n\t\t\telse if (sel.type == GeomWidgetSelType.Link)\n\t\t\t{\n\t\t\t\tlet dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n\t\t\t\tlabel1.setText('Distance');\n\t\t\t\tlabel2.setText('Angle');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n\t\t\t}\n\t\t\telse if (sel.type == GeomWidgetSelType.Torsion)\n\t\t\t{\n\t\t\t\tlet cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n\t\t\t\tlet th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n\t\t\t\tlet th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n\t\t\t\tlabel1.setText('Angle');\n\t\t\t\tlabel2.setText('');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = '');\n\t\t\t}\n\t\t\tlabel2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n\t\t\tthis.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n\t\t};\n\t\tthis.geomWidget.callbackSelect(this.geomWidget.selected); // trigger initial definition\n\t}\n\n\tprivate populateQuery(panel:DOM):void\n\t{\n\t\tthis.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n\t\tthis.queryWidget.render(panel);\n\t}\n\n\tprivate populateExtra(panel:DOM):void\n\t{\n\t\tlet fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n\t\tthis.fieldsWidget = new ExtraFieldsWidget(fields);\n\t\tthis.fieldsWidget.render(panel);\n\t}\n\n\t// read everything back in from the dialog objects\n\tprivate updateMolecule():void\n\t{\n\t\tlet {mol, atom} = this;\n\n\t\tif (atom == 0) atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n\n\t\tlet sym = this.inputSymbol.getValue();\n\t\tif (sym != '') mol.setAtomElement(atom, sym);\n\n\t\tlet chg = parseInt(this.inputCharge.getValue());\n\t\tif (chg > -20 && chg < 20) mol.setAtomCharge(atom, chg);\n\n\t\tlet unp = parseInt(this.inputUnpaired.getValue());\n\t\tif (unp >= 0 && unp < 20) mol.setAtomUnpaired(atom, unp);\n\n\t\tlet hcidx = this.optionHydrogen.getSelectedIndex();\n\t\tif (hcidx == 0) mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n\t\telse if (hcidx <= 5) mol.setAtomHExplicit(atom, hcidx - 1);\n\t\telse\n\t\t{\n\t\t\tlet hyd = parseInt(this.inputHydrogen.getValue());\n\t\t\tif (hyd >= 0 && hyd < 20) mol.setAtomHExplicit(atom, hyd);\n\t\t}\n\n\t\tif (this.optionIsotope.getSelectedIndex() == 1)\n\t\t{\n\t\t\tlet iso = parseInt(this.inputIsotope.getValue());\n\t\t\tif (iso >= 0 && iso < 300) mol.setAtomIsotope(atom, iso);\n\t\t}\n\t\telse mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n\n\t\tlet map = parseInt(this.inputMapping.getValue());\n\t\tif (!isNaN(map)) mol.setAtomMapNum(atom, map);\n\t}\n\n\tprivate updateAbbrev():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tif (this.currentAbbrev < 0)\n\t\t{\n\t\t\tlet el = mol.atomElement(atom);\n\t\t\tMolUtil.clearAbbrev(mol, atom); // (resets the element)\n\t\t\tmol.setAtomElement(atom, el);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet abbrev = this.abbrevList[this.currentAbbrev];\n\t\t\tmol.setAtomElement(atom, abbrev.name);\n\t\t\tMolUtil.setAbbrev(mol, atom, abbrev.frag);\n\t\t}\n\t}\n\n\tprivate updateGeometry():void\n\t{\n\t\tlet strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n\t\tif (this.refGeom1 == strval1 && this.refGeom2 == strval2) return;\n\n\t\tconst {mol} = this;\n\t\tlet sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n\n\t\tif (sel.type == GeomWidgetSelType.Position)\n\t\t{\n\t\t\tlet x = parseFloat(strval1), y = parseFloat(strval2);\n\t\t\tif (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6) return; // non-sane\n\t\t\tmol.setAtomPos(atoms[0], x, y);\n\t\t}\n\t\telse if (sel.type == GeomWidgetSelType.Link)\n\t\t{\n\t\t\tif (this.refGeom1 != strval1)\n\t\t\t{\n\t\t\t\tlet dist = parseFloat(strval1);\n\t\t\t\tif (isNaN(dist) || Math.abs(dist) > 100) return; // non-sane\n\t\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tmask[atoms[1] - 1] = true;\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.BondDist, {dist});\n\t\t\t\tmolact.execute();\n\t\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (this.refGeom2 != strval2)\n\t\t\t{\n\t\t\t\tlet angle = parseFloat(strval2);\n\t\t\t\tif (isNaN(angle)) return; // non-sane\n\t\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tmask[atoms[1] - 1] = true;\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.AlignAngle, {angle: angle * DEGRAD});\n\t\t\t\tmolact.execute();\n\t\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (sel.type == GeomWidgetSelType.Torsion)\n\t\t{\n\t\t\tlet angle = parseFloat(strval1);\n\t\t\tif (isNaN(angle)) return; // non-sane\n\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\tfor (let a of atoms) mask[a - 1] = true;\n\t\t\tlet instate:SketchState = {mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask};\n\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, {angle: angle * DEGRAD});\n\t\t\tmolact.execute();\n\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate updateQuery():void\n\t{\n\t\tthis.queryWidget.updateAtom();\n\t}\n\n\tprivate updateExtra():void\n\t{\n\t\tthis.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n\t\tthis.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n\t}\n\n\t// enumerate all abbreviations compatible with the search; it will go into self-callback mode if the abbreviations need to be loaded\n\tprivate fillAbbreviations():void\n\t{\n\t\tif (AbbrevContainer.needsSetup())\n\t\t{\n\t\t\tsetTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tableAbbrev.empty();\n\n\t\tAbbrevContainer.main.submitMolecule(this.mol, true);\n\t\tthis.abbrevList = AbbrevContainer.main.getAbbrevs();\n\t\tif (!this.svgAbbrev)\n\t\t{\n\t\t\tthis.svgAbbrev = [];\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(10);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\t\tfor (let abbrev of this.abbrevList)\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\t\t\t\tlet mol = abbrev.frag.clone();\n\t\t\t\teffects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n\t\t\t\teffects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomElement(n, 'C');\n\t\t\t\t\teffects.atomCircleSz[n - 1] = 0.2;\n\t\t\t\t\teffects.atomCircleCol[n - 1] = 0x00C000;\n\t\t\t\t}\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\t\t\t\t// !! max size\n\t\t\t\tlet gfx = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\t\tgfx.normalise();\n\t\t\t\tthis.svgAbbrev.push(gfx.createSVG());\n\t\t\t}\n\n\t\t\t// see if the current abbreviation matches anything\n\t\t\tconst {mol, atom} = this;\n\t\t\tif (atom > 0 && MolUtil.hasAbbrev(mol, atom))\n\t\t\t{\n\t\t\t\tlet name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n\t\t\t\tfor (let n = 0; n < this.abbrevList.length; n++) if (name == this.abbrevList[n].name)\n\t\t\t\t{\n\t\t\t\t\t// NOTE: just going by name & basic molecule formula; using sketchMappable fails because layout can vary\n\t\t\t\t\t//if (CoordUtil.sketchMappable(abbrevs[n].frag, MolUtil.getAbbrev(mol, atom))) this.currentAbbrev = n;\n\t\t\t\t\tif (mf == MolUtil.molecularFormula(this.abbrevList[n].frag)) this.currentAbbrev = n;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet tr = dom('<tr/>').appendTo(this.tableAbbrev);\n\t\ttr.appendHTML('<td><u>Label</u></td>');\n\t\ttr.appendHTML('<td><u>Structure</u></td>');\n\n\t\tthis.abbrevEntries = [];\n\t\tthis.abbrevIndices = [];\n\t\tlet search = this.inputAbbrevSearch.getValue().toLowerCase();\n\n\t\tfor (let n = 0; n < this.abbrevList.length; n++)\n\t\t{\n\t\t\tif (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search)) continue;\n\n\t\t\tlet entry:EditAtomAbbrev =\n\t\t\t{\n\t\t\t\ttr: dom('<tr/>').appendTo(this.tableAbbrev),\n\t\t\t\tidx: n,\n\t\t\t\tbgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n\t\t\t};\n\t\t\tentry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n\t\t\tlet tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n\t\t\ttdLabel.setHTML(this.abbrevList[n].nameHTML);\n\n\t\t\tdom(this.svgAbbrev[n]).appendTo(tdStruct).css({'display': 'block', 'pointer-events': 'none'});\n\n\t\t\tentry.tr.css({'cursor': 'pointer'});\n\t\t\tentry.tr.onClick(() => this.selectAbbreviation(n));\n\t\t\tentry.tr.onDblClick((event) => this.applyChanges());\n\n\t\t\tthis.abbrevEntries.push(entry);\n\t\t\tthis.abbrevIndices.push(n);\n\t\t}\n\t}\n\n\t// change currently selected abbreviation\n\tprivate selectAbbreviation(idx:number):void\n\t{\n\t\tif (this.currentAbbrev == idx) return;\n\t\tthis.currentAbbrev = idx;\n\n\t\tfor (let entry of this.abbrevEntries)\n\t\t{\n\t\t\tentry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n\t\t\tif (this.currentAbbrev == entry.idx) entry.tr.el.scrollIntoView({'block': 'nearest'});\n\t\t}\n\t}\n\n\t// move abbreviation selection up or down\n\tprivate cycleAbbreviation(dir:number):void\n\t{\n\t\tlet sz = this.abbrevIndices.length;\n\t\tif (sz == 0) return;\n\n\t\tlet idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n\t\tif (idx < 0)\n\t\t{\n\t\t\tif (dir < 0) idx = sz - 1; else idx = 0;\n\t\t}\n\t\telse idx = (idx + sz + dir) % sz;\n\n\t\tthis.selectAbbreviation(this.abbrevIndices[idx]);\n\t}\n\n\tprivate selectedTab(idx:number):void\n\t{\n\t\tif (idx == 0) this.inputSymbol.grabFocus();\n\t\telse if (idx == 1) this.inputAbbrevSearch.grabFocus();\n\t\telse if (idx == 2) this.inputGeom1.grabFocus();\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Dialog} from '../dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {TabBar} from '../ui/TabBar';\nimport {dom, DOM} from '../util/dom';\nimport {KeyCode, norm_xy} from '../util/util';\nimport {ExtraFieldsWidget} from './ExtraFieldsWidget';\nimport {GeomWidget, GeomWidgetSelection, GeomWidgetSelType, GeomWidgetType} from './GeomWidget';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {QueryFieldsWidget} from './QueryFieldsWidget';\n\n/*\n\tOptions for editing a single bond within a molecule.\n*/\n\nexport class EditBond extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate tabs:TabBar;\n\n\tprivate optionOrder:OptionList;\n\tprivate optionStereo:OptionList;\n\tprivate inputFrom:DOM;\n\tprivate inputTo:DOM;\n\tprivate inputIndex:DOM;\n\n\tprivate inputGeom1:DOM;\n\tprivate geomWidget:GeomWidget;\n\tprivate refGeom1:string;\n\n\tprivate queryWidget:QueryFieldsWidget;\n\tprivate fieldsWidget:ExtraFieldsWidget;\n\n\tconstructor(mol:Molecule, public bond:number, private proxyClip:ClipboardProxy, private callbackApply:(source?:EditBond) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Edit Bond';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tthis.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n\t\tthis.tabs.render(body);\n\t\tthis.tabs.onSelect((idx) => this.selectedTab(idx));\n\n\t\tthis.populateBond(this.tabs.getPanelDOM('Bond'));\n\t\tthis.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n\t\tthis.populateQuery(this.tabs.getPanelDOM('Query'));\n\t\tthis.populateExtra(this.tabs.getPanelDOM('Extra'));\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tif (event.key == KeyCode.Enter) this.applyChanges();\n\t\t\t\telse if (event.key == KeyCode.Escape) this.close();\n\t\t\t\telse if (event.key == KeyCode.PageUp)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(-1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse if (event.key == KeyCode.PageDown)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tthis.mol.keepTransient = true;\n\n\t\tthis.updateMolecule();\n\t\tif (this.tabs.getSelectedValue() == 'Geometry') this.updateGeometry();\n\t\tif (this.tabs.getSelectedValue() == 'Query') this.updateQuery();\n\t\tif (this.tabs.getSelectedValue() == 'Extra') this.updateExtra();\n\n\t\tthis.mol.keepTransient = false;\n\n\t\tif (this.callbackApply) this.callbackApply(this);\n\t}\n\n\tprivate populateBond(panel:DOM):void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet grid = dom('<div/>').appendTo(panel);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col0'}).setText('Order');\n\t\tlet ordersHTML:string[] = [];\n\t\tfor (let o = 0; o <= 4; o++) ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n\t\tthis.optionOrder = new OptionList(ordersHTML);\n\t\tthis.optionOrder.htmlLabels = true;\n\t\tthis.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n\t\tthis.optionOrder.render(dom('<div/>').appendTo(grid).css({'grid-column': 'col1 / col4', 'grid-row': '1'}));\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'}).setText('Stereo');\n\t\tthis.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n\t\tthis.optionStereo.setSelectedIndex(mol.bondType(bond));\n\t\tthis.optionStereo.render(dom('<div/>').appendTo(grid).css({'grid-column': 'col1 / col4', 'grid-row': '2'}));\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '3 / col0'}).setText('From');\n\t\tthis.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '3 / col1', 'font': 'inherit'});\n\t\tthis.inputFrom.elInput.readOnly = true;\n\t\tthis.inputFrom.setValue(mol.bondFrom(bond).toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '3 / col2'}).setText('To');\n\t\tthis.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '3 / col3', 'font': 'inherit'});\n\t\tthis.inputTo.elInput.readOnly = true;\n\t\tthis.inputTo.setValue(mol.bondTo(bond).toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '4 / col2'}).setText('Index');\n\t\tthis.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '4 / col3', 'font': 'inherit'});\n\t\tthis.inputIndex.elInput.readOnly = true;\n\t\tthis.inputIndex.setValue(bond.toString());\n\t}\n\n\tprivate populateGeometry(panel:DOM):void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet divContainer1 = dom('<div/>').appendTo(panel).css({'text-align': 'center'});\n\t\tlet divContainer2 = dom('<div/>').appendTo(divContainer1).css({'display': 'inline-block'});\n\t\tlet grid = dom('<div/>').appendTo(divContainer2);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2]'});\n\n\t\tthis.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n\t\tthis.geomWidget.render(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col0 / auto / col2', 'text-align': 'center'}));\n\n\t\tlet label1 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'});\n\t\tthis.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col1'});\n\n\t\tthis.geomWidget.callbackSelect = (sel:GeomWidgetSelection) =>\n\t\t{\n\t\t\tif (sel.type == GeomWidgetSelType.Link)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n\t\t\t\tlet dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n\t\t\t\tlabel1.setText('Distance');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n\t\t\t}\n\t\t};\n\t\tthis.geomWidget.callbackSelect(this.geomWidget.selected); // trigger initial definition\n\t}\n\n\tprivate populateQuery(panel:DOM):void\n\t{\n\t\tthis.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n\t\tthis.queryWidget.render(panel);\n\t}\n\n\tprivate populateExtra(panel:DOM):void\n\t{\n\t\tlet fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n\t\tthis.fieldsWidget = new ExtraFieldsWidget(fields);\n\t\tthis.fieldsWidget.render(panel);\n\t}\n\n\t// read everything back in from the dialog objects\n\tprivate updateMolecule():void\n\t{\n\t\tlet {mol, bond} = this;\n\n\t\tmol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n\t\tmol.setBondType(bond, this.optionStereo.getSelectedIndex());\n\t}\n\n\tprivate updateGeometry():void\n\t{\n\t\tlet strval1 = this.inputGeom1.getValue();\n\t\tif (this.refGeom1 == strval1) return;\n\n\t\tconst {mol} = this;\n\t\tlet sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n\n\t\tif (sel.type == GeomWidgetSelType.Link)\n\t\t{\n\t\t\tif (this.refGeom1 != strval1)\n\t\t\t{\n\t\t\t\tlet dist = parseFloat(strval1);\n\t\t\t\tif (isNaN(dist) || Math.abs(dist) > 100) return; // non-sane\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.BondDist, {dist});\n\t\t\t\tmolact.execute();\n\t\t\t\tthis.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateQuery():void\n\t{\n\t\tthis.queryWidget.updateBond();\n\t}\n\n\tprivate updateExtra():void\n\t{\n\t\tthis.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n\t\tthis.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n\t}\n\n\tprivate selectedTab(idx:number):void\n\t{\n\t\tif (idx == 0) this.inputFrom.grabFocus();\n\t\telse if (idx == 1) this.inputGeom1.grabFocus();\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {Dialog} from '../dialog/Dialog';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {dom, DOM} from '../util/dom';\nimport {Vec} from '../util/Vec';\n\n/*\n\tEditing a new or existing polymer block.\n*/\n\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx:number):string {return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1);}\nfunction indexToBondLabel(idx:number):string {return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1);}\n\nexport class EditPolymer extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate btnRemove:DOM;\n\tprivate optionConnect:OptionList = null;\n\tprivate optionBondConn:OptionList = null;\n\tprivate divPreview:DOM;\n\n\tprivate polymer:PolymerBlock;\n\tprivate currentID = 0;\n\tprivate unit:PolymerBlockUnit = null;\n\n\tprivate borderAtoms:number[] = []; // subset of atoms that have a bond going to the outside\n\tprivate outBonds:number[] = []; // list of bonds going to the outside\n\tprivate outAtoms:number[] = []; // sorted in same order as bonds\n\n\tprivate umap:number[];\n\tprivate umol:Molecule;\n\n\tconstructor(mol:Molecule, public atoms:number[], private proxyClip:ClipboardProxy, private callbackApply:(source?:EditPolymer) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Polymer Block';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\n\t\tthis.polymer = new PolymerBlock(this.mol);\n\t\tatoms = Vec.sorted(atoms);\n\n\t\tfor (let id of this.polymer.getIDList())\n\t\t{\n\t\t\tlet look = this.polymer.getUnit(id);\n\t\t\tif (Vec.equals(atoms, look.atoms))\n\t\t\t{\n\t\t\t\tthis.currentID = id;\n\t\t\t\tthis.unit = look;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.unit) this.unit = new PolymerBlockUnit(atoms);\n\n\t\tlet umol = this.umol = this.mol.clone();\n\t\tlet mask = Vec.booleanArray(false, this.umol.numAtoms);\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n\t\t\tif (in1 || in2) mask[bfr - 1] = mask[bto - 1] = true;\n\t\t\tif (in1 && !in2)\n\t\t\t{\n\t\t\t\tthis.borderAtoms.push(bfr);\n\t\t\t\tthis.outBonds.push(n);\n\t\t\t\tthis.outAtoms.push(bto);\n\t\t\t}\n\t\t\tif (in2 && !in1)\n\t\t\t{\n\t\t\t\tthis.borderAtoms.push(bto);\n\t\t\t\tthis.outBonds.push(n);\n\t\t\t\tthis.outAtoms.push(bfr);\n\t\t\t}\n\t\t}\n\t\tthis.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n\n\t\tthis.umap = Vec.maskMap(mask);\n\t\tthis.umol = MolUtil.subgraphMask(this.umol, mask);\n\t\tnew PolymerBlock(this.umol).removeAll();\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tif (this.currentID == 0) this.btnApply.setText('Create');\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tif (this.currentID > 0)\n\t\t{\n\t\t\tthis.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\t\tthis.btnRemove.onClick(() => this.applyRemove());\n\t\t}\n\n\t\tlet grid = dom('<div/>').appendTo(body);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]'});\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col0'}).setText('# Atoms');\n\t\tlet inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col1'}));\n\t\tinputNAtoms.elInput.readOnly = true;\n\t\tinputNAtoms.setValue(this.unit.atoms.length.toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col2'}).setText('Out-bonds');\n\t\tlet inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col3'}));\n\t\tinputNBond.elInput.readOnly = true;\n\t\tinputNBond.setValue(this.outBonds.length.toString());\n\n\t\tlet row = 1;\n\t\tif (this.outBonds.length == 2)\n\t\t{\n\t\t\trow++;\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`}).setText('Connectivity');\n\t\t\tthis.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n\t\t\tthis.optionConnect.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / col4`}));\n\t\t\tif (this.unit.connect == PolymerBlockConnectivity.HeadToTail) this.optionConnect.setSelectedIndex(1);\n\t\t\telse if (this.unit.connect == PolymerBlockConnectivity.HeadToHead) this.optionConnect.setSelectedIndex(2);\n\t\t\telse if (this.unit.connect == PolymerBlockConnectivity.Random) this.optionConnect.setSelectedIndex(3);\n\t\t}\n\t\tif (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4)\n\t\t{\n\t\t\trow++;\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`}).setText('2x2 Connectivity');\n\t\t\tthis.populate2x2Conn(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / end`}));\n\t\t}\n\n\t\tlet getList = (str:string):number[] =>\n\t\t{\n\t\t\tif (!str) return null;\n\t\t\tlet list:number[] = [];\n\t\t\tfor (let bit of str.split(','))\n\t\t\t{\n\t\t\t\tlet v = parseInt(bit);\n\t\t\t\tif (v > 0) list.push(v); else return undefined;\n\t\t\t}\n\t\t\treturn list;\n\t\t};\n\n\t\tfor (let n = 0; n < this.borderAtoms.length; n++)\n\t\t{\n\t\t\trow++;\n\t\t\tlet domLabel = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em'});\n\t\t\tif (n == 0) domLabel.setText('Name ');\n\t\t\tdom('<span/>').appendTo(domLabel).css({'color': '#008000'}).setText(indexToAtomLabel(n + 1));\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / end`, 'width': '100%'}));\n\n\t\t\tlet atom = this.borderAtoms[n];\n\t\t\tlet nvals = this.unit.atomName.get(atom);\n\t\t\tif (nvals) input.setValue(nvals.join(','));\n\t\t\tinput.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(input.getValue());\n\t\t\t\tif (list !== undefined) this.unit.atomName.set(atom, list);\n\t\t\t});\n\t\t}\n\t\tfor (let n = 0; n < this.outAtoms.length; n++)\n\t\t{\n\t\t\trow++;\n\t\t\tlet domLabel = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em'});\n\t\t\tif (n == 0) domLabel.setText('Link ');\n\t\t\tdom('<span/>').appendTo(domLabel).css({'color': '#800080'}).setText(indexToBondLabel(n + 1));\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1`}).setText('Include');\n\t\t\tlet inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col2`, 'width': '100%'}));\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col3`}).setText('Exclude');\n\t\t\tlet inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col4`, 'width': '100%'}));\n\n\t\t\tlet bond = this.outBonds[n];\n\t\t\tlet ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n\t\t\tif (ivals) inputIncl.setValue(ivals.join(','));\n\t\t\tif (evals) inputExcl.setValue(evals.join(','));\n\t\t\tinputIncl.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(inputIncl.getValue());\n\t\t\t\tif (list !== undefined) this.unit.bondIncl.set(bond, list);\n\t\t\t});\n\t\t\tinputExcl.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(inputExcl.getValue());\n\t\t\t\tif (list !== undefined) this.unit.bondExcl.set(bond, list);\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tthis.populateUncap(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center'}));\n\n\t\trow++;\n\t\tthis.divPreview = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center'});\n\t\tthis.renderUnit();\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tlet keyCode = event.keyCode || event.which;\n\t\t\t\tif (keyCode == 13) this.applyChanges();\n\t\t\t\tif (keyCode == 27) this.close();\n\t\t\t});\n\t\t}\n\n\t\t//setTimeout(() => inputNAtoms.focus(), 1);\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populate2x2Conn(div:DOM):void\n\t{\n\t\tconst perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n\n\t\tlet bondConnOptions:number[][] = [null];\n\t\tlet optionList = ['None'];\n\t\tlet selidx = 0;\n\t\tfor (let perm of perms)\n\t\t{\n\t\t\tlet bonds = Vec.idxGet(this.outBonds, perm);\n\t\t\tif (Vec.equals(bonds, this.unit.bondConn)) selidx = optionList.length;\n\t\t\tbondConnOptions.push(bonds);\n\t\t\t//optionList.push(`${this.outAtoms[perm[0]]},${this.outAtoms[perm[1]]}:${this.outAtoms[perm[2]]},${this.outAtoms[perm[3]]}`);\n\t\t\toptionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n\t\t}\n\n\t\tthis.optionBondConn = new OptionList(optionList);\n\t\tthis.optionBondConn.setSelectedIndex(selidx);\n\t\tthis.optionBondConn.render(div);\n\t\tthis.optionBondConn.onSelect((idx) =>\n\t\t{\n\t\t\tthis.unit.bondConn = bondConnOptions[idx];\n\t\t\tthis.renderUnit();\n\t\t});\n\t}\n\n\t// list out each outgoing atom that's terminal and could be converted into '*': if any, make a button for that\n\tprivate populateUncap(div:DOM):void\n\t{\n\t\tlet uncapAtoms:number[] = [];\n\t\tskip: for (let a of this.outAtoms) if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*')\n\t\t{\n\t\t\tfor (let unit of this.polymer.getUnits()) if (unit.atoms.includes(a)) continue skip;\n\t\t\tuncapAtoms.push(a);\n\t\t}\n\t\tif (uncapAtoms.length == 0) return;\n\n\t\tlet btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n\t\tbtnUncap.onClick(() =>\n\t\t{\n\t\t\tbtnUncap.elInput.disabled = true;\n\t\t\tfor (let a of uncapAtoms) this.mol.setAtomElement(a, '*');\n\t\t});\n\t}\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tif (this.optionConnect)\n\t\t{\n\t\t\tlet sel = this.optionConnect.getSelectedIndex();\n\t\t\tif (sel == 0) this.unit.connect = null;\n\t\t\telse if (sel == 1) this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n\t\t\telse if (sel == 2) this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n\t\t\telse if (sel == 3) this.unit.connect = PolymerBlockConnectivity.Random;\n\t\t}\n\n\t\tif (this.currentID) this.polymer.removeUnit(this.currentID);\n\n\t\tthis.currentID = this.polymer.createUnit(this.unit.clone());\n\n\t\tthis.polymer.rewriteMolecule(); // housekeeping\n\t\tthis.callbackApply(this);\n\t}\n\n\tprivate applyRemove():void\n\t{\n\t\tif (this.currentID) this.polymer.removeUnit(this.currentID);\n\t\tthis.callbackApply(this);\n\t}\n\n\tprivate renderUnit():void\n\t{\n\t\tlet umol = this.umol.clone();\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tlet effects = new RenderEffects();\n\t\teffects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n\t\teffects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n\t\teffects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n\t\teffects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n\t\teffects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n\n\t\tlet borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n\t\tlet outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n\n\t\tfor (let n = 1; n <= umol.numAtoms; n++)\n\t\t{\n\t\t\tlet bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n\t\t\tif (bidx >= 0)\n\t\t\t{\n\t\t\t\teffects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1); //(bidx + 1).toString();\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x008000;\n\t\t\t\teffects.atomDecoSize[n - 1] = 0.5;\n\t\t\t}\n\t\t\tif (oidx >= 0)\n\t\t\t{\n\t\t\t\tumol.setAtomCharge(n, 0);\n\t\t\t\tumol.setAtomUnpaired(n, 0);\n\t\t\t\tumol.setAtomIsotope(n, 0);\n\t\t\t\teffects.atomCircleSz[n - 1] = 0.1;\n\t\t\t\teffects.atomCircleCol[n - 1] = 0xFF00FF;\n\t\t\t\teffects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1); //(oidx + 1).toString();\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x800080;\n\t\t\t\teffects.atomDecoSize[n - 1] = 0.5;\n\t\t\t\tumol.setAtomElement(n, 'C');\n\t\t\t}\n\t\t}\n\t\tlet layout = new ArrangeMolecule(umol, measure, policy, effects);\n\t\tlayout.arrange();\n\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\tlet gfx = new MetaVector();\n\n\t\tif (this.unit.bondConn)\n\t\t{\n\t\t\tconst LINES:[number, number, number, number, boolean][] =\n\t\t\t[\n\t\t\t\t[0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n\t\t\t\t[0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n\t\t\t];\n\t\t\tfor (let [i1, i2, col, sz, circle] of LINES)\n\t\t\t{\n\t\t\t\tlet a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n\t\t\t\tlet a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n\t\t\t\tlet p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n\t\t\t\tgfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n\t\t\t\tif (circle)\n\t\t\t\t{\n\t\t\t\t\tfor (let f of [0.2, 0.4, 0.6, 0.8])\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n\t\t\t\t\t\tgfx.drawOval(mx, my, 2, 2, col, sz, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnew DrawMolecule(layout, gfx).draw();\n\n\t\tgfx.normalise();\n\n\t\tthis.divPreview.empty();\n\t\tdom(gfx.createSVG()).appendTo(this.divPreview).css({'pointer-events': 'none'});\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer} from '../data/AbbrevContainer';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ButtonBank} from '../ui/ButtonBank';\nimport {ActivityType, MoleculeActivity} from './MoleculeActivity';\n\n/*\n\tTemplateBank: template list... either the top-level list of template groups, or a single folder full of templates.\n*/\n\ninterface GroupTemplates\n{\n\tgroups:string[];\n\ttitles:string[];\n\tpreview:any[];\n}\n\ninterface TemplateStructs\n{\n\tmolecules:string[];\n\tnames:string[];\n\tabbrev:string[];\n\tmnemonic:string[];\n\tpreview:MetaVector[];\n}\n\nexport class TemplateBank extends ButtonBank\n{\n\tprivate static resourceList:string[] = [];\n\tprivate static resourceData:DataSheet[] = []; // templates are derived from these\n\tprivate subgroups:GroupTemplates = null;\n\tprivate templates:TemplateStructs = null;\n\n\tconstructor(protected owner:any, protected group?:string)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic init()\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 10;\n\t\tpolicy.data.lineSize *= 1.5;\n\t\tpolicy.data.bondSep *= 1.5;\n\n\t\tif (TemplateBank.resourceData.length == 0) this.loadResourceData();\n\n\t\tif (this.group == null)\n\t\t\tthis.prepareSubGroups();\n\t\telse\n\t\t\tthis.prepareTemplates();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tif (this.subgroups == null && this.templates == null) return;\n\n\t\tthis.buttons = [];\n\n\t\tif (this.group == null)\n\t\t\tthis.populateGroups();\n\t\telse\n\t\t\tthis.populateTemplates();\n\t}\n\n\t// build a list of template groups, based on the webservice results\n\tprivate populateGroups():void\n\t{\n\t\tlet groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n\n\t\tfor (let n = 0; n < groups.length; n++)\n\t\t{\n\t\t\tthis.buttons.push({id: groups[n], metavec: preview[n], helpText: titles[n]});\n\t\t}\n\t}\n\n\t// build a list of template structures, based on the webservice results\n\tprivate populateTemplates():void\n\t{\n\t\tlet names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n\n\t\tfor (let n = 0 ; n < names.length; n++)\n\t\t{\n\t\t\tthis.buttons.push({id: n.toString(), metavec: preview[n], helpText: names[n]});\n\t\t\t// !! do something with abbrev & mnemonic\n\t\t}\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string)\n\t{\n\t\tif (this.group == null)\n\t\t{\n\t\t\tthis.buttonView.pushBank(new TemplateBank(this.owner, id));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet idx = parseInt(id);\n\t\t\tlet param = {fragNative: this.templates.molecules[idx]};\n\t\t\tnew MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n\t\t}\n\t}\n\n\t// loads up the resource datasheets one at a time, and stashes them in the static container\n\tprivate loadResourceData():void\n\t{\n\t\tfor (let key of AbbrevContainer.getTemplateKeys())\n\t\t{\n\t\t\tlet dsstr = AbbrevContainer.getTemplateData(key);\n\t\t\tTemplateBank.resourceList.push(key);\n\t\t\tTemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n\t\t}\n\t}\n\n\t// use the resource data to prepare button icons for the template groups\n\tprivate prepareSubGroups():void\n\t{\n\t\tthis.subgroups = {groups: TemplateBank.resourceList, titles: [], preview: []};\n\t\tlet sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 10;\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let ds of TemplateBank.resourceData)\n\t\t{\n\t\t\tthis.subgroups.titles.push(ds.title);\n\n\t\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tfor (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++)\n\t\t\t{\n\t\t\t\tlet mol = ds.getMolecule(n, colMol);\n\t\t\t\tif (MolUtil.isBlank(mol)) continue;\n\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\t\t\t\tlet col = (idx % 2), row = Math.floor(idx / 2);\n\t\t\t\tlayout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\tmetavec.width = sz;\n\t\t\tmetavec.height = sz;\n\n\t\t\tthis.subgroups.preview.push(metavec);\n\t\t}\n\t\tthis.buttonView.refreshBank();\n\t}\n\n\t// use the resource data to prepare pictures for each of the templates\n\tprivate prepareTemplates():void\n\t{\n\t\tlet idx = TemplateBank.resourceList.indexOf(this.group);\n\t\tlet ds = TemplateBank.resourceData[idx];\n\n\t\tthis.templates = {molecules: [], names: [], abbrev: [], mnemonic: [], preview: []};\n\n\t\tlet sz = this.buttonView.idealSize;\n\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 12;\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tlet colMol = ds.findColByName('Molecule');\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colAbbrev = ds.findColByName('Abbrev');\n\t\tlet colMnemonic = ds.findColByName('Mnemonic');\n\n\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(n, colMol);\n\t\t\tthis.templates.molecules.push(mol.toString());\n\t\t\tthis.templates.names.push(ds.getString(n, colName));\n\t\t\tthis.templates.abbrev.push(ds.getString(n, colAbbrev));\n\t\t\tthis.templates.mnemonic.push(ds.getString(n, colMnemonic));\n\n\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, sz, sz, 2);\n\t\t\tlet metavec = new MetaVector();\n\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\tmetavec.width = sz;\n\t\t\tmetavec.height = sz;\n\t\t\tthis.templates.preview.push(metavec);\n\t\t}\n\n\t\tthis.buttonView.refreshBank();\n\t}\n}\n\nimport svgGenericAccept from '@reswmk/img/actions/GenericAccept.svg';\nimport svgTemplatePrev from '@reswmk/img/actions/TemplatePrev.svg';\nimport svgTemplateNext from '@reswmk/img/actions/TemplateNext.svg';\nimport {KeyCode} from '../util/util';\n\nexport class FusionBank extends ButtonBank\n{\n\tconstructor(protected owner:any)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic update():void\n\t{\n\t\tthis.buttons = [];\n\n\t\t/*this.buttons.push({id: 'accept', imageFN: 'GenericAccept', helpText: 'Apply this template.'});\n\t\tthis.buttons.push({id: 'prev', imageFN: 'TemplatePrev', helpText: 'Show previous fusion option.'});\n\t\tthis.buttons.push({id: 'next', imageFN: 'TemplateNext', helpText: 'Show next fusion option.'});*/\n\t\tthis.buttons.push({id: 'accept', svg: svgGenericAccept, helpText: 'Apply this template.'});\n\t\tthis.buttons.push({id: 'prev', svg: svgTemplatePrev, helpText: 'Show previous fusion option.'});\n\t\tthis.buttons.push({id: 'next', svg: svgTemplateNext, helpText: 'Show next fusion option.'});\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string)\n\t{\n\t\tif (id == 'accept') this.owner.templateAccept();\n\t\telse if (id == 'prev') this.owner.templateRotate(-1);\n\t\telse if (id == 'next') this.owner.templateRotate(1);\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\tif (event.key == KeyCode.Enter)\n\t\t{\n\t\t\tthis.owner.templateAccept();\n\t\t\treturn true;\n\t\t}\n\t\telse if (event.key == KeyCode.Left || event.key == KeyCode.Up)\n\t\t{\n\t\t\tthis.owner.templateRotate(-1);\n\t\t\treturn true;\n\t\t}\n\t\telse if (event.key == KeyCode.Right || event.key == KeyCode.Down)\n\t\t{\n\t\t\tthis.owner.templateRotate(1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic bankClosed()\n\t{\n\t\tthis.owner.clearPermutations();\n\t}\n}\n\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"GenericAccept.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 300.71429,39.285714 C 221.40032,73.699762 164.28823,126.10076 120,210 C 82.667331,182.4368 64.188257,170.57196 8.5714286,174.28571 C 88.702873,232.3286 116.45809,273.89571 131.42857,295 C 138.61324,305.12842 189.62059,127.77256 300.71429,39.285714 z \\\"\\n       id=\\\"path3211\\\"\\n       sodipodi:nodetypes=\\\"cccsc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplatePrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplatePrev.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 130,40 L 130,110 L 310,110 L 310,210 L 130,210 C 130,210 130,280 130,280 L 10,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplateNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplateNext.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 L 190,40 L 190,110 L 10,110 L 10,210 L 190,210 C 190,210 190,280 190,280 L 310,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ButtonBank, ButtonBankItem} from '../ui/ButtonBank';\n\n/*\n\tToolBank: buttons for the Sketcher main command bank.\n*/\n\nexport enum ToolBankItem\n{\n\tArrow = 'arrow',\n\tRotate = 'rotate',\n\tPan = 'pan',\n\tDrag = 'drag',\n\tErasor = 'erasor',\n\tBondOrder0 = 'bond:Order0',\n\tBondOrder1 = 'bond:Order1',\n\tBondOrder2 = 'bond:Order2',\n\tBondOrder3 = 'bond:Order3',\n\tBondUnknown = 'bond:Unknown',\n\tBondInclined = 'bond:Inclined',\n\tBondDeclined = 'bond:Declined',\n\tRingAliph = 'ringAliph',\n\tRingArom = 'ringArom',\n\tAtomPlus = 'atomPlus',\n\tAtomMinus = 'atomMinus',\n\n\tBondPfx = 'bond:',\n\tElementPfx = 'element:',\n}\n\nimport svgToolSelect from '@reswmk/img/actions/ToolSelect.svg';\nimport svgToolRotate from '@reswmk/img/actions/ToolRotate.svg';\nimport svgToolPan from '@reswmk/img/actions/ToolPan.svg';\nimport svgToolDrag from '@reswmk/img/actions/ToolDrag.svg';\nimport svgToolErasor from '@reswmk/img/actions/ToolErasor.svg';\nimport svgBondZero from '@reswmk/img/actions/BondZero.svg';\nimport svgBondOne from '@reswmk/img/actions/BondOne.svg';\nimport svgBondTwo from '@reswmk/img/actions/BondTwo.svg';\nimport svgBondThree from '@reswmk/img/actions/BondThree.svg';\nimport svgBondSquig from '@reswmk/img/actions/BondSquig.svg';\nimport svgBondUp from '@reswmk/img/actions/BondUp.svg';\nimport svgBondDown from '@reswmk/img/actions/BondDown.svg';\nimport svgToolRing from '@reswmk/img/actions/ToolRing.svg';\nimport svgToolArom from '@reswmk/img/actions/ToolArom.svg';\nimport svgAtomPlus from '@reswmk/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '@reswmk/img/actions/AtomMinus.svg';\n\nconst TOOLS_MAIN:ButtonBankItem[] =\n[\n\t{id: ToolBankItem.Arrow, svg: svgToolSelect, helpText: 'Selection tool.', mnemonic: 'Escape'},\n\t{id: ToolBankItem.Rotate, svg: svgToolRotate, helpText: 'Rotate subject atoms.', mnemonic: ''},\n\t{id: ToolBankItem.Pan, svg: svgToolPan, helpText: 'Pan the viewport around the screen.', mnemonic: ''},\n\t{id: ToolBankItem.Drag, svg: svgToolDrag, helpText: 'Drag selected atoms to new positions.', mnemonic: ''},\n\t{id: ToolBankItem.Erasor, svg: svgToolErasor, helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete'},\n\t{id: ToolBankItem.BondOrder0, svg: svgBondZero, helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')'},\n\t{id: ToolBankItem.BondOrder1, svg: svgBondOne, helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!'},\n\t{id: ToolBankItem.BondOrder2, svg: svgBondTwo, helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@'},\n\t{id: ToolBankItem.BondOrder3, svg: svgBondThree, helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#'},\n\t{id: ToolBankItem.BondUnknown, svg: svgBondSquig, helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$'},\n\t{id: ToolBankItem.BondInclined, svg: svgBondUp, helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%'},\n\t{id: ToolBankItem.BondDeclined, svg: svgBondDown, helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^'},\n\t{id: ToolBankItem.RingAliph, svg: svgToolRing, helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&'},\n\t{id: ToolBankItem.RingArom, svg: svgToolArom, helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*'},\n\t{id: ToolBankItem.AtomPlus, svg: svgAtomPlus, helpText: 'Increase charge on atom.', mnemonic: ''},\n\t{id: ToolBankItem.AtomMinus, svg: svgAtomMinus, helpText: 'Decrease charge on atom.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'A', text: 'A', helpText: 'Pick other element.', mnemonic: ''}\n];\n\nexport class ToolBank extends ButtonBank\n{\n\tconstructor(protected owner:any)\n\t{\n\t\tsuper();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tfor (let btn of TOOLS_MAIN) this.buttons.push(btn);\n\n\t\tthis.buttonView.setSelectedButton('arrow');\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string):void\n\t{\n\t\tthis.buttonView.setSelectedButton(id);\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('Claim/Command['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\n\t\tfor (let item of TOOLS_MAIN)\n\t\t{\n\t\t\tif (ButtonBank.matchKey(event, item.mnemonic, item.key))\n\t\t\t{\n\t\t\t\tthis.hitButton(item.id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"50\\\"\\n   height=\\\"50\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"8.64\\\"\\n     inkscape:cx=\\\"22.280093\\\"\\n     inkscape:cy=\\\"25\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,-270)\\\">\\n    <g\\n       transform=\\\"matrix(2.2470395,0,0,2.2470395,1.4827876,-402.18041)\\\"\\n       id=\\\"layer1-1\\\"\\n       inkscape:label=\\\"Layer 1\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke-width:0.77823228;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <path\\n         sodipodi:nodetypes=\\\"cccccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4141\\\"\\n         d=\\\"m 3.994178,302.40331 0.011839,13.60146 4.8493426,-3.53325 4.1221284,5.65757 3.232895,-2.3555 -4.122128,-5.65757 4.849343,-3.53325 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.77823228;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-140.47866\\\"\\n     inkscape:cy=\\\"198.69435\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.55773544;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 68.562496,210.12948 A 34.671101,35.243633 0 0 0 33.890833,245.37285 34.671101,35.243633 0 0 0 68.562496,280.6189 34.671101,35.243633 0 0 0 103.23417,245.37285 34.671101,35.243633 0 0 0 68.562496,210.12948 Z m 0.09935,11.02044 A 23.336319,23.721675 0 0 1 91.999068,244.87094 23.336319,23.721675 0 0 1 68.66185,268.59197 23.336319,23.721675 0 0 1 45.324633,244.87094 23.336319,23.721675 0 0 1 68.66185,221.14992 Z\\\"\\n       id=\\\"path4237\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10.40872955;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.40872949, 20.81745898;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n       d=\\\"M 177.52863,34.919161 68.562276,246.38095 l 224.866844,0\\\"\\n       id=\\\"path5210\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:6.99123812px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 128.10545,149.71269 c 28.70161,15.31171 49.84665,42.14544 57.45499,89.61956\\\"\\n       id=\\\"path5212\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:129.6784668px;line-height:125%;font-family:Sans;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4750\\\">\\n      <path\\n         d=\\\"m 230.101,96.949874 q 4.93893,0 8.7381,2.026226 3.79918,1.96291 6.33196,5.76208 2.53278,3.79917 3.79917,9.3713 1.32971,5.5088 1.32971,12.60059 0,8.16822 -1.83626,18.48931 -3.92582,22.35181 -12.41064,33.05281 -8.4215,10.63769 -21.08541,10.63769 -4.81229,0 -8.42151,-1.89959 -3.54589,-1.9629 -5.88871,-5.63544 -2.34283,-3.73585 -3.5459,-9.0547 -1.13975,-5.31884 -1.13975,-12.09403 0,-4.49569 0.44323,-9.49794 0.50656,-5.00224 1.51967,-10.57436 3.92582,-22.22517 12.03072,-32.6729 8.16822,-10.511046 20.13562,-10.511046 z m -0.44323,5.065566 q -4.1791,0 -7.21843,2.53278 -2.97602,2.53278 -5.31885,7.40839 -2.2795,4.87561 -4.05245,11.9674 -1.70963,7.09179 -3.29262,16.20981 l 27.67065,0 q 0.88648,-5.69876 1.39303,-10.70101 0.50656,-5.06556 0.50656,-9.3713 0,-4.17909 -0.56988,-7.53502 -0.50655,-3.35594 -1.64631,-5.63544 -1.13975,-2.34283 -2.97602,-3.60922 -1.83626,-1.26639 -4.49568,-1.26639 z m -20.83214,43.6905 q -1.01311,6.142 -1.58299,11.6508 -0.56988,5.44548 -0.56988,10.06781 0,3.73585 0.44324,6.77519 0.44324,3.03934 1.45635,5.19221 1.01311,2.15286 2.65942,3.35593 1.64631,1.13976 3.98913,1.13976 4.11578,0 7.34507,-2.59611 3.29262,-2.5961 5.8254,-7.47171 2.59611,-4.93892 4.55901,-12.03071 1.96291,-7.09179 3.5459,-16.08317 l -27.67065,0 z\\\"\\n         style=\\\"font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman,  Italic'\\\"\\n         id=\\\"path4147\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolPan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-33.40249\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4759\\\"\\n       transform=\\\"matrix(1.1035479,0,0,1.1035479,259.85038,18.296497)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4753\\\"\\n         d=\\\"m -92.02537,30.740234 c 2.45111,0 4.90206,1.015331 6.93164,3.044922 l 3.06836,3.06836 0,41.93164 0,41.931644 4.95508,0 4.95508,0 0.35742,-12.1875 0.35742,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.80664,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.06836,3.06836 0,27.27148 c 0,29.8793 -0.11379,30.57518 -9.17774,55.85742 -2.44343,6.81549 -4.81894,15.39361 -5.27734,19.0625 l -0.83398,6.67188 -34.67188,0 -34.67187,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.06836,-3.06836 c 2.02959,-2.029591 4.48053,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1\\\" />\\n      <path\\n         id=\\\"path4746\\\"\\n         d=\\\"m -92.042969,21.097656 c -4.169447,0.0083 -8.343911,1.22813 -11.527341,3.65625 -2.46099,1.877091 -5.19972,5.050631 -6.08594,7.052735 -1.43274,3.23679 -2.35022,3.702655 -8.29102,4.195312 -7.08275,0.587357 -11.48476,3.067017 -15.875,8.943359 -2.45502,3.286042 -2.59594,5.308607 -2.9414,42.654297 l -0.36133,39.205081 -6.51367,-3.03125 c -3.58178,-1.66763 -8.07753,-3.03792 -9.99024,-3.04492 -5.12526,-0.018 -11.35175,2.95887 -14.46289,6.91406 -5.99633,7.62309 -5.04663,14.71933 3.375,25.21289 3.63938,4.53475 8.11406,12.47823 11.34571,20.13672 3.20064,7.58499 7.30372,14.88134 10.25,18.22851 7.87832,8.95023 10.19097,15.56933 10.84765,31.0586 l 0.56836,13.4375 44.839846,0 44.839843,0 0,-7.83985 c 0,-8.54888 2.179562,-17.0333 9.544922,-37.16015 l 4.802735,-13.125 0.429687,-29.375 c 0.27731,-18.93033 -0.05681,-31.00119 -0.939453,-33.94727 -1.80016,-6.00858 -8.806804,-12.06842 -15.121094,-13.07812 -2.73207,-0.43687 -4.966797,-1.437874 -4.966797,-2.224613 0,-0.78674 -1.694735,-3.485705 -3.765625,-5.998047 -4.1349,-5.016353 -10.661225,-7.804379 -16.328125,-6.972656 l -3.65625,0.537109 0,-24.90625 c 0,-27.98198 -0.682675,-30.943484 -8.515625,-36.917969 -3.16682,-2.415449 -7.332505,-3.619648 -11.501953,-3.611328 z m 0.01758,9.642578 c 2.451114,0 4.902056,1.015331 6.931641,3.044922 l 3.068359,3.06836 0,41.93164 0,41.931644 4.955079,0 4.955078,0 0.357422,-12.1875 0.357421,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.806641,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.068359,3.06836 0,27.27148 c 0,29.8793 -0.113784,30.57518 -9.177734,55.85742 -2.44343,6.81549 -4.818944,15.39361 -5.277344,19.0625 l -0.833984,6.67188 -34.671875,0 -34.671874,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.068361,-3.06836 c 2.02959,-2.029591 4.480527,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#000000\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolDrag.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-114.21469\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1\\\"\\n       d=\\\"m 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.19399,7.39813 -20.84853,13.90316 -21.45454,14.45564 -2.60452,2.37443 -3.5731,7.35066 -2.11169,10.84917 1.53903,3.68433 5.1482,6.08608 9.17291,6.10418 2.01671,0.009 3.87187,-0.81214 17.31315,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.75771,-9.96772 -10.09659,-10.26003 -12.52407,-10.80327 -5.52754,-1.23701 -10.96573,2.29848 -11.76838,7.6509 -0.47382,3.15968 0.52816,6.22712 3.57739,10.95165 3.38012,5.23721 8.36183,15.07942 15.73019,31.07758 7.08217,15.37679 13.71422,28.52253 18.13559,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z\\\"\\n       id=\\\"path4722\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:#000000\\\"\\n       d=\\\"m 134.82466,273.41608 c -5.80862,-1.6108 -10.46095,-4.72519 -16.43545,-11.00231 -4.85695,-5.10295 -8.32243,-9.82569 -13.32153,-18.15452 -3.8183,-6.36155 -13.189163,-25.03627 -18.811557,-37.48861 -5.584843,-12.36919 -11.331247,-23.79278 -14.54321,-28.91127 -3.912906,-6.23548 -4.932004,-8.94395 -5.221532,-13.87741 -0.19007,-3.23866 -0.05317,-4.45531 0.776431,-6.90035 1.08983,-3.21196 2.809606,-5.97011 5.039937,-8.08297 l 1.411555,-1.3372 -2.283176,-2.05276 c -1.524641,-1.37079 -2.855587,-3.21098 -4.00614,-5.53896 -1.531867,-3.09952 -1.7437,-3.96029 -1.90992,-7.76077 -0.22887,-5.23296 0.550666,-8.26182 3.113499,-12.09739 2.180307,-3.26308 0.464333,-2.01174 26.409189,-19.25824 l 21.047404,-13.990971 14.57128,-0.138947 14.57127,-0.138934 1.29094,-1.811486 c 1.75423,-2.461626 4.69929,-4.797698 7.99299,-6.340171 2.47779,-1.160367 3.23542,-1.284647 7.83155,-1.284647 4.7443,0 5.29556,0.09812 8.15223,1.451665 1.68511,0.79842 3.88953,2.197638 4.8987,3.109366 l 1.83486,1.65768 1.34612,-1.406005 c 0.74038,-0.773306 2.8792,-2.163939 4.75294,-3.0903 3.00627,-1.486274 3.90363,-1.705716 7.63257,-1.866503 4.07983,-0.175908 6.07109,0.212155 10.12368,1.972955 0.75135,0.326463 0.80951,-0.165369 0.80951,-6.844982 0,-3.9582 0.2308,-8.299812 0.51286,-9.648026 1.20526,-5.76068 5.29243,-10.78836 10.94834,-13.467677 2.9094,-1.37824 3.43841,-1.473312 8.19847,-1.473312 4.76549,0 5.28676,0.09403 8.21474,1.48093 4.15609,1.968702 7.82558,5.494965 9.71781,9.338492 l 1.49582,3.038319 0.12085,79.570454 c 0.13305,87.59899 0.26376,83.15726 -2.70887,92.04841 -3.74053,11.18789 -11.68774,21.81638 -22.64435,30.2842 -4.65481,3.59747 -11.28374,7.68197 -15.47744,9.53662 l -2.56783,1.13562 -30.40146,-0.0414 c -22.76429,-0.031 -30.92439,-0.18638 -32.48308,-0.61863 z M 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.193992,7.39813 -20.848528,13.90316 -21.454536,14.45564 -2.604526,2.37443 -3.573104,7.35066 -2.111693,10.84917 1.539032,3.68433 5.148195,6.08608 9.172907,6.10418 2.016712,0.009 3.871872,-0.81214 17.313152,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.757714,-9.96772 -10.096591,-10.26003 -12.524074,-10.80327 -5.527533,-1.23701 -10.965729,2.29848 -11.768371,7.6509 -0.473825,3.15968 0.52816,6.22712 3.577384,10.95165 3.380116,5.23721 8.361832,15.07942 15.730189,31.07758 7.082172,15.37679 13.714222,28.52253 18.135592,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z M 112.90759,139.5978 c -0.21058,-0.21058 -4.68064,1.97376 -11.17695,5.46172 l -4.182758,2.24578 7.652108,7.94148 7.65211,7.94149 0.12373,-11.69925 c 0.0681,-6.43459 0.0373,-11.78563 -0.0682,-11.89122 z\\\"\\n       id=\\\"path4716\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"RetroErasor.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective16\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"101.20996\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1387\\\"\\n     inkscape:window-height=\\\"856\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2983\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3805\\\"\\n       transform=\\\"matrix(0.95048511,0,0,0.95048511,-7.209769,-44.503179)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3021\\\"\\n         d=\\\"m 30,220 0,80 130,0 0,-80 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3029\\\"\\n         d=\\\"m 30,220 60,-30 130,0 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3031\\\"\\n         d=\\\"m 90,190 120,-60 120,0 -110,60\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3033\\\"\\n         d=\\\"m 160,220 60,-30 0,80 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3035\\\"\\n         d=\\\"m 220,190 0,80 110,-60 0,-80\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"195.90214\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolArom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"19.717178\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n    <circle\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4138\\\"\\n       cx=\\\"160\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"73.650795\\\" />\\n  </g>\\n</svg>\\n\";","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Experiment, ExperimentEntry} from '../aspect/Experiment';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {QuantityCalc, QuantityCalcComp, QuantityCalcStat} from '../rxn/QuantityCalc';\nimport {ArrangeExperiment} from '../gfx/ArrangeExperiment';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawExperiment} from '../gfx/DrawExperiment';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector, TextAlign} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {DOM, dom} from '../util/dom';\nimport {escapeHTML, formatDouble, fromUTF8, htmlToRGB} from '../util/util';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded reaction: renders a single reaction Experiment entry (can be multistep). Various formats are acceptable, but only one\n\treaction is applicable; a datasheet with many reactions will only show the first one.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n\t\tformat: MIME, or shortcuts for \"datasheet\" (... and others?)\n\t\tencoding: raw by default, but can be set to \"base64\"\n\t\tfacet: one of 'header', 'scheme', 'quantity' or 'metrics' (default is 'scheme')\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n        padding: number of pixels to space around the content\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n\t\ttight: if true, reduces the padding underneath\n\t\tstoichiometry: if false, doesn't display non-unit stoichiometry\n\t\tannotations: if true, adds annotations for component types\n\t\tmaximumwidth: optionally constrain the width in pixels (guideline only)\n\t\trow: row of first step (default 0)\n\n    ... these ones TBD\n\t\t(option to limitW/H?)\n\n        (parameters to control interactivity?)\n*/\n\nexport enum EmbedReactionFacet\n{\n\tHEADER = 'header',\n\tSCHEME = 'scheme',\n\tQUANTITY = 'quantity',\n\tMETRICS = 'metrics'\n}\n\nexport class EmbedReaction extends EmbedChemistry\n{\n\tprivate row = 0;\n\tprivate entry:ExperimentEntry = null;\n\tprivate failmsg = '';\n\tprivate tight = false;\n\tprivate facet = 'scheme';\n\tprivate limitTotalW = 800;\n\tprivate includeStoich = true;\n\tprivate includeAnnot = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private datastr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tif (options.encoding == 'base64') datastr = fromUTF8(atob(datastr.trim()));\n\n\t\tlet xs:Experiment = null;\n\t\tif (options.format == 'datasheet' || options.format == 'chemical/x-datasheet')\n\t\t{\n\t\t\tlet ds = DataSheetStream.readXML(datastr);\n\t\t\tif (ds == null) {this.failmsg = 'Unable to parse raw XML datasheet.'; return;}\n\t\t\tif (Experiment.isExperiment(ds)) xs = new Experiment(ds);\n\t\t}\n\t\t// (... else MDL formats ...)\n\t\telse // free for all\n\t\t{\n\t\t\t// (same as explicit DS for now: but later add MDL formats)\n\t\t\tlet ds = DataSheetStream.readXML(datastr);\n\t\t\tif (ds == null) {this.failmsg = 'Unable to parse raw XML datasheet.'; return;}\n\t\t\tif (Experiment.isExperiment(ds)) xs = new Experiment(ds);\n\t\t}\n\n\t\tif (xs == null) {this.failmsg = 'Unable to instantiate Experiment aspect.'; return;}\n\t\tif (xs.ds.numRows == 0) {this.failmsg = 'Experiment datasheet has no rows.'; return;}\n\n\t\tif (options.row) this.row = options.row;\n\t\tif (this.row < 0 || this.row >= xs.ds.numRows) {this.failmsg = 'Requested row ' + this.row + ' out of bounds.'; return;}\n\t\tthis.entry = xs.getEntry(this.row);\n\n\t\tif (options.facet) this.facet = options.facet;\n\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\t\tif (options.maximumwidth > 0) this.limitTotalW = options.maximumwidth;\n\t\tif (options.stoichiometry == false || options.stoichiometry == 'false') this.includeStoich = true;\n\t\tif (options.annotations == true || options.annotations == 'true') this.includeAnnot = true;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM;\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (this.entry != null)\n\t\t{\n\t\t\tif (this.facet == EmbedReactionFacet.HEADER) this.renderHeader(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.SCHEME) this.renderScheme(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.QUANTITY) this.renderQuantity(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.METRICS) this.renderMetrics(span);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Failure to acquire data: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span).css({'line-height': '1.1'});\n\t\t\tpre.setText(this.datastr);\n\t\t\tconsole.log('Unparseable datasheet source string:\\n[' + this.datastr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// display summary information from the header\n\tprivate renderHeader(span:DOM):void\n\t{\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet titles = ['Title', 'Created', 'Modified', 'DOI'];\n\t\tfor (let n = 0; n < 4; n++)\n\t\t{\n\t\t\tif (n == 3 && !this.entry.doi) continue;\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\tth.css({'white-space': 'nowrap', 'font-weight': '600', 'color': 'black', 'text-align': 'left', 'vertical-align': 'middle'});\n\t\t\tth.css({'padding': '0.2em 0.5em 0.2em 0.5em', 'border': '1px solid #D0D0D0'});\n\t\t\tth.setText(titles[n]);\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'vertical-align': 'middle'});\n\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\tif (!this.entry.title) td.setCSS('font-style', 'italic');\n\t\t\t\ttd.setText(this.entry.title ? this.entry.title : '(none)');\n\t\t\t}\n\t\t\telse if (n == 1 || n == 2)\n\t\t\t{\n\t\t\t\tlet date = n == 1 ? this.entry.createDate : this.entry.modifyDate;\n\t\t\t\tif (date == null) td.setCSS('font-style', 'italic');\n\t\t\t\ttd.setText(date == null ? '(none)' : date.toLocaleString());\n\t\t\t}\n\t\t\telse if (n == 3)\n\t\t\t{\n\t\t\t\tlet url = this.doiToLink(this.entry.doi);\n\n\t\t\t\tif (url != null && (url.startsWith('http://') || url.startsWith('https://')))\n\t\t\t\t{\n\t\t\t\t\tlet ahref = dom('<a target=\"_blank\"/>').appendTo(td);\n\t\t\t\t\tahref.setAttr('href', url);\n\t\t\t\t\tahref.setText(this.entry.doi);\n\t\t\t\t}\n\t\t\t\telse td.setText(this.entry.doi);\n\t\t\t}\n\t\t}\n\t}\n\n\t// render the schema, using preferred chemist-style diagram\n\tprivate renderScheme(span:DOM):void\n\t{\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeExperiment(this.entry, measure, this.policy);\n\t\tlayout.limitTotalW = this.limitTotalW;\n\t\tlayout.includeStoich = this.includeStoich;\n\t\tlayout.includeAnnot = this.includeAnnot;\n\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawExperiment(layout, metavec).draw();\n\t\tmetavec.normalise();\n\t\tlet svg = dom(metavec.createSVG()).appendTo(span);\n\t}\n\n\t// render all the quantities by listing out each component in a table\n\tprivate renderQuantity(span:DOM):void\n\t{\n\t\tlet quant = new QuantityCalc(this.entry);\n\t\tquant.calculate();\n\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\tfor (let n = 0; n < quant.numQuantities; n++)\n\t\t{\n\t\t\tlet qc = quant.getQuantity(n);\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'center', 'vertical-align': 'middle'});\n\t\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t\t{\n\t\t\t\tlet layout = new ArrangeMolecule(qc.comp.mol, measure, this.policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tlet metavec = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t\tmetavec.normalise();\n\t\t\t\tlet svg = dom(metavec.createSVG()).appendTo(td);\n\t\t\t}\n\n\t\t\ttd = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'left', 'vertical-align': 'top'});\n\n\t\t\tthis.renderComponentText(td, qc);\n\t\t}\n\t}\n\n\t// renders lines representing the component's text-like properties\n\tprivate renderComponentText(parent:DOM, qc:QuantityCalcComp)\n\t{\n\t\tlet title:string[] = [], content:string[] = [];\n\n\t\tif (qc.comp.name)\n\t\t{\n\t\t\ttitle.push('Name');\n\t\t\tcontent.push('<i>' + escapeHTML(qc.comp.name) + '</i>');\n\t\t}\n\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t{\n\t\t\tlet mw = MolUtil.molecularWeight(qc.comp.mol);\n\t\t\ttitle.push('Weight');\n\t\t\tcontent.push(mw.toFixed(4));\n\n\t\t\tlet mf = MolUtil.molecularFormula(qc.comp.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n\t\t\ttitle.push('Formula');\n\t\t\tcontent.push(mf);\n\t\t}\n\t\tif (qc.valueEquiv > 0)\n\t\t{\n\t\t\tlet text = qc.valueEquiv.toString(), stat = qc.statEquiv;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Stoichiometry');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueMass > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatMass(qc.valueMass), stat = qc.statMass;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Mass');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueVolume > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatVolume(qc.valueVolume), stat = qc.statVolume;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Volume');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueMoles > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatMoles(qc.valueMoles), stat = qc.statMoles;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Moles');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueDensity > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatDensity(qc.valueDensity), stat = qc.statDensity;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Density');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueConc > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatConc(qc.valueConc), stat = qc.statConc;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Concentration');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueYield > 0 && !qc.comp.waste)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatPercent(qc.valueYield), stat = qc.statYield;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Yield');\n\t\t\tcontent.push(text);\n\t\t}\n\n\t\tfor (let n = 0; n < title.length; n++)\n\t\t{\n\t\t\tlet p = dom('<p/>').appendTo(parent);\n\t\t\tp.setCSS('margin', '0.1em');\n\t\t\tp.append(dom('<b>' + title[n] + '</b>'));\n\t\t\tp.appendText(': ');\n\t\t\tp.appendHTML(content[n]);\n\t\t}\n\t}\n\n\t// display calculated green chemistry metrics\n\tprivate renderMetrics(span:DOM):void\n\t{\n\t\tlet quant = new QuantityCalc(this.entry);\n\t\tquant.calculate();\n\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\t// display overall summary totals\n\t\tif (quant.numGreenMetrics > 0) for (let n = 0; n < 3; n++)\n\t\t{\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\tth.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'font-weight': 'bold'});\n\t\t\tth.css({'text-align': 'right', 'vertical-align': 'middle', 'white-space': 'nowrap'});\n\t\t\tth.setText(n == 0 ? 'All Reactants' : n == 1 ? 'All Products' : /* n == 2 */ 'All Waste');\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'white-space': 'nowrap'});\n\t\t\ttd.css({'text-align': 'left', 'vertical-align': 'middle'});\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassReact(), 'g') + ' = ' + this.sumQuant(quant.getAllMassReact(), 'g', true));\n\t\t\t}\n\t\t\telse if (n == 1)\n\t\t\t{\n\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassProd(), 'g') + ' = ' + this.sumQuant(quant.getAllMassProd(), 'g', true));\n\t\t\t}\n\t\t\telse if (n == 2)\n\t\t\t{\n\t\t\t\tif (quant.getAllMassWaste().length > 0)\n\t\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassWaste(), 'g') + ' = ' + this.sumQuant(quant.getAllMassWaste(), 'g', false));\n\t\t\t\telse\n\t\t\t\t\ttd.setText('none');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tr = dom('<tr/>').appendTo(table);\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.setText('No metrics to show.');\n\t\t}\n\n\t\t// show each relevant entity (i.e. products)\n\t\tfor (let n = 0; n < quant.numGreenMetrics; n++)\n\t\t{\n\t\t\tlet gm = quant.getGreenMetrics(n);\n\t\t\tlet qc = quant.getQuantity(gm.idx);\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'center', 'vertical-align': 'middle'});\n\t\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t\t{\n\t\t\t\tlet layout = new ArrangeMolecule(qc.comp.mol, measure, this.policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tlet metavec = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t\tmetavec.normalise();\n\t\t\t\tdom(metavec.createSVG()).appendTo(td);\n\t\t\t}\n\n\t\t\ttd = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'text-align': 'left', 'vertical-align': 'top'});\n\n\t\t\tlet pmi1 = this.combineQuant(gm.massReact, 'g'), pmi2 = this.combineQuant(gm.massProd, 'g');\n\t\t\tlet pmi3 = this.sumQuantExt(gm.massReact, gm.massProd, 1, Number.NaN, null);\n\t\t\tlet vg = this.drawTotals('PMI', pmi1, pmi2, pmi3);\n\t\t\tvg.normalise();\n\t\t\tlet para = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\n\t\t\tlet ef1 = this.combineQuant(gm.massWaste, 'g'), ef2 = this.combineQuant(gm.massProd, 'g');\n\t\t\tlet ef3 = this.sumQuantExt(gm.massWaste, gm.massProd, 1, Number.NaN, null);\n\t\t\tvg = this.drawTotals('E-factor', ef1, ef2, ef3);\n\t\t\tvg.normalise();\n\t\t\tpara = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\n\t\t\tlet ae1 = this.combineQuant(gm.molwProd, null), ae2 = this.combineQuant(gm.molwReact, null);\n\t\t\tlet ae3 = this.sumQuantExt(gm.molwProd, gm.molwReact, 100, 100, '%');\n\t\t\tvg = this.drawTotals('Atom-E', ae1, ae2, ae3);\n\t\t\tvg.normalise();\n\t\t\tpara = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\t\t}\n\t}\n\n\t// strings together a bunch of values with a separator & units\n\tprivate combineQuant(values:number[], units:string):string\n\t{\n\t\tif (values.length == 0) return '?';\n\n\t\tlet str = '';\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ' + ';\n\t\t\tif (values[n] == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tstr += '?';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr += formatDouble(values[n], 4);\n\t\t\t\tif (units) str += ' ' + units;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\t// sums a bunch of values, with optional units\n\tprivate sumQuant(values:number[], units:string, requireSomething:boolean):string\n\t{\n\t\tif (values.length == 0) return requireSomething ? '?' : '0';\n\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tif (values[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum += values[n];\n\t\t}\n\t\tlet ret = formatDouble(sum, 4);\n\t\tif (units) ret += ' ' + units;\n\t\treturn ret;\n\t}\n\tprivate sumQuantExt(numer:number[], denom:number[], mul:number, max:number, units:string):string\n\t{\n\t\tif (numer.length == 0 || denom.length == 0) return '?';\n\t\tlet sum1 = 0, sum2 = 0;\n\t\tfor (let n = 0; n < numer.length; n++)\n\t\t{\n\t\t\tif (numer[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum1 += numer[n];\n\t\t}\n\t\tfor (let n = 0; n < denom.length; n++)\n\t\t{\n\t\t\tif (denom[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum2 += denom[n];\n\t\t}\n\t\tif (sum2 <= 0) return '?';\n\t\tlet val = mul * sum1 / sum2;\n\t\tif (!Number.isNaN(max)) val = Math.min(val, max);\n\n\t\tlet ret = formatDouble(val, 4);\n\t\tif (units) ret += ' ' + units;\n\t\treturn ret;\n\t}\n\n\t// renders green metrics as a formula\n\tprivate drawTotals(heading:string, over:string, under:string, answer:string):MetaVector\n\t{\n\t\tlet vg = new MetaVector();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\tlet sep = ' = ';\n\t\tlet fsz = this.policy.data.pointScale * 0.8;\n\t\tlet wadHeading = measure.measureText(heading, fsz);\n\t\tlet wadOver = measure.measureText(over, fsz), wadUnder = measure.measureText(under, fsz);\n\t\tlet wadAnswer = measure.measureText(answer, fsz);\n\t\tlet wadSep = measure.measureText(sep, fsz);\n\n\t\tlet x = 0;\n\t\tvg.drawText(x, 0, heading, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadHeading[0];\n\t\tvg.drawText(x, 0, sep, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadSep[0];\n\n\t\tvg.drawText(x, 0, answer, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadAnswer[0];\n\t\tvg.drawText(x, 0, sep, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadSep[0];\n\n\t\tlet lw = Math.max(wadOver[0], wadUnder[0]);\n\t\tvg.drawLine(x, 0, x + lw, 0, 0x000000, 1);\n\t\tvg.drawText(x + 0.5 * lw, -2, over, fsz, 0x000000, TextAlign.Centre | TextAlign.Bottom);\n\t\tvg.drawText(x + 0.5 * lw, 2, under, fsz, 0x000000, TextAlign.Centre | TextAlign.Top);\n\t\t//x += lw;\n\n\t\treturn vg;\n\t}\n\n\t// turns a DOI (or whatever got stuffed into the placeholder) into a clickable link, if possible\n\tprivate static PTN_DOI1 = /^doi:(\\d+\\.\\d+\\/.*)$/;\n\tprivate static PTN_DOI2 = /^(\\d+\\.\\d+\\/.*)$/;\n\tprivate static PTN_ISBN = /^(\\d+-\\d+-\\d+-\\d+-\\d+)$/;\n\tprivate doiToLink(doi:string):string\n\t{\n\t\tif (doi.startsWith('http://') || doi.startsWith('https://')) return doi;\n\n\t\tlet m = EmbedReaction.PTN_DOI1.exec(doi);\n\t\tif (m) return 'http://dx.doi.org/' + m[1];\n\t\tm = EmbedReaction.PTN_DOI2.exec(doi);\n\t\tif (m) return 'http://dx.doi.org/' + m[1];\n\n\t\t// note: there doesn't seem to be a way to turn an ISBN into a URL, which is rather unfortunate\n\t\tm = EmbedReaction.PTN_ISBN.exec(doi);\n\t\tif (m) return 'ISBN: ' + m[1];\n\n\t\treturn null; // fail\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {GuidelineSprout, SketchUtil} from '../mol/SketchUtil';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ButtonView, ButtonViewPosition} from '../ui/ButtonView';\nimport {ClipboardProxy} from '../ui/ClipboardProxy';\nimport {MenuProxy} from '../ui/MenuProxy';\nimport {angleDiff, clone, DEGRAD, eventCoords, KeyCode, norm2_xy, norm_xy, RADDEG, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CommandBank} from './CommandBank';\nimport {ContextSketch} from './ContextSketch';\nimport {DraggingTool, DrawCanvas, DrawCanvasDecoration} from './DrawCanvas';\nimport {EditAtom} from './EditAtom';\nimport {EditBond} from './EditBond';\nimport {EditPolymer} from './EditPolymer';\nimport {ActivityType, MoleculeActivity, SketchState, TemplatePermutation} from './MoleculeActivity';\nimport {FusionBank, TemplateBank} from './TemplateBank';\nimport {ToolBank, ToolBankItem} from './ToolBank';\n\n/*\n\tSketcher: a very heavyweight widget that provides 2D structure editing for a molecule.\n*/\n\nexport interface SketcherPlugins\n{\n\tcallbackSpecialPaste?:(str:string) => Promise<Molecule>; // define this to add special layer for clipboard interpretation\n\tcallbackComposeFragment?:(sketcher:Sketcher) => void; // define this to activate when \"composition\" is requested\n\tcallbackAsyncNameToStructure?:(name:string) => Promise<Molecule>;\n}\n\nexport class Sketcher extends DrawCanvas\n{\n\t// callbacks\n\tpublic callbackChangeMolecule:(mol:Molecule) => void;\n\tpublic plugins:SketcherPlugins = {};\n\n\tpublic inDialog = false; // set to true while a modal dialog is open\n\tpublic initialFocus = true; // normally want to bogart the focus upon creation, but not always\n\n\t// tweakable properties\n\tpublic useToolBank = true;\n\tpublic lowerToolBank = false;\n\tpublic useCommandBank = true;\n\tpublic lowerCommandBank = false;\n\tpublic useTemplateBank = true;\n\tpublic lowerTemplateBank = false;\n\tpublic debugOutput:any = undefined;\n\n\tprivate beenSetup = false;\n\tprivate undoStack:SketchState[] = [];\n\tprivate redoStack:SketchState[] = [];\n\tprivate fadeWatermark = 0;\n\tprivate toolView:ButtonView = null;\n\tprivate commandView:ButtonView = null;\n\tprivate templateView:ButtonView = null;\n\n\tprivate proxyClip:ClipboardProxy = null;\n\tprivate proxyMenu:MenuProxy = null;\n\tprivate static UNDO_SIZE = 20;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t// the sketcher needs to know what size to be, prior to rendering\n\tpublic setSize(width:number, height:number):void\n\t{\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t// takes an instance of molsync.data.Molecule as the content; note that it is not cloned - the caller must do this if\n\t// it could be modified elsewhere; note that the 'withStashUndo' parameter is a flag, which defaults to _false_, because\n\t// this function is usually used for things like initial state; during-edit modifications are more typically done via\n\t// the setState(..) function\n\tpublic defineMolecule(mol:Molecule, withAutoScale = true, withStashUndo = false, keepSelect = false):void\n\t{\n\t\tif (mol.compareTo(this.mol) == 0) return;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.stopTemplateFusion();\n\n\t\tthis.mol = mol.clone();\n\t\tif (this.callbackChangeMolecule) this.callbackChangeMolecule(this.mol);\n\n\t\t// note: inefficient; make it compute on demand\n\t\tthis.guidelines = [];\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tfor (let sprout of SketchUtil.guidelineSprouts(this.mol, n)) this.guidelines.push(sprout);\n\t\t}\n\n\t\tif (!this.beenSetup) return;\n\n\t\tif (!keepSelect)\n\t\t{\n\t\t\tthis.currentAtom = this.currentBond = 0;\n\t\t\tthis.selectedMask = null;\n\t\t}\n\t\tthis.stereo = null;\n\t\tthis.hoverAtom = 0;\n\t\tthis.hoverBond = 0;\n\n\t\tif (!withAutoScale)\n\t\t\tthis.renderMolecule();\n\t\telse\n\t\t\tthis.autoScale();\n\t}\n\n\t// provides the mechanism for interacting with the clipboard (which is quite different for web vs. app mode)\n\tpublic defineClipboard(proxy:ClipboardProxy):void\n\t{\n\t\tthis.proxyClip = proxy;\n\t}\n\tpublic defineContext(proxy:MenuProxy):void\n\t{\n\t\tthis.proxyMenu = proxy;\n\t}\n\n\t// define the molecule as a SketchEl-formatted string\n\tpublic defineMoleculeString(molsk:string, withAutoScale:boolean, withStashUndo:boolean):void\n\t{\n\t\tthis.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n\t}\n\n\t// provides a rendering policy; the parameter should be a RenderPolicy object; note that it is not cloned\n\tpublic defineRenderPolicy(policy:RenderPolicy):void\n\t{\n\t\tthis.policy = policy;\n\t\tthis.pointScale = policy.data.pointScale;\n\t}\n\n\t// defines the colours used for border & background; note that a border of MetaVector.NOCOLOUR is an instruction to not have one\n\tpublic defineBackground(borderCol?:number, borderRad?:number, bgCol?:number):void\n\t{\n\t\tif (borderCol != null) this.border = borderCol;\n\t\tif (borderRad != null) this.borderRadius = borderRad;\n\t\tif (bgCol != null) this.background = bgCol;\n\t}\n\n\t// zappy zap\n\tpublic clearMolecule():void {this.defineMolecule(new Molecule(), true, true);}\n\n\t// retrieves a copy of the molecule\n\tpublic getMolecule():Molecule {return this.mol.clone();}\n\n\t// instantiates the widget: any of the immutable setup properties are now cast in stone\n\tpublic setup(callback:() => void):void\n\t{\n\t\tthis.beenSetup = true;\n\t\tif (this.mol == null) this.mol = new Molecule();\n\t\tif (this.policy == null)\n\t\t{\n\t\t\tthis.policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tthis.pointScale = this.policy.data.pointScale;\n\t\t}\n\n\t\tthis.layoutMolecule();\n\t\tthis.centreAndShrink();\n\t\tthis.redrawMetaVector();\n\n\t\tif (callback) callback();\n\t}\n\tpublic async setupAsync():Promise<void>\n\t{\n\t\treturn new Promise<void>((resolve) => this.setup(() => resolve()));\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.centreAndShrink();\n\t\tthis.redraw();\n\n\t\t// create the buttonviews\n\t\tlet reserveHeight = 0;\n\t\tif (this.useCommandBank)\n\t\t{\n\t\t\tthis.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n\t\t\tif (this.lowerCommandBank) this.commandView.lowerBank();\n\t\t\t// (put this back) this.commandView.lowerBank();\n\t\t\tthis.commandView.setHasBigButtons(false);\n\t\t\tthis.commandView.pushBank(new CommandBank(this));\n\t\t\tthis.commandView.render(this.container);\n\t\t\treserveHeight = this.commandView.height;\n\t\t}\n\t\tif (this.useToolBank)\n\t\t{\n\t\t\tthis.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n\t\t\tif (this.lowerToolBank) this.toolView.lowerBank();\n\t\t\tthis.toolView.setHasBigButtons(false);\n\t\t\tthis.toolView.pushBank(new ToolBank(this));\n\t\t\tthis.toolView.render(this.container);\n\t\t}\n\t\tif (this.useTemplateBank)\n\t\t{\n\t\t\tthis.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n\t\t\tif (this.lowerTemplateBank) this.templateView.lowerBank();\n\t\t\tthis.templateView.setHasBigButtons(true); // big buttons for templates is a good thing\n\t\t\tthis.templateView.pushBank(new TemplateBank(this, null));\n\t\t\tthis.templateView.render(this.container);\n\t\t}\n\n\t\t// setup all the interactive events\n\t\tthis.container.onClick((event) => this.mouseClick(event));\n\t\tthis.container.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tthis.container.onMouseDown((event) => this.mouseDown(event));\n\t\tthis.container.onMouseUp((event) => this.mouseUp(event));\n\t\tthis.container.onMouseOver((event) => this.mouseOver(event));\n\t\tthis.container.onMouseLeave((event) => this.mouseOut(event));\n\t\tthis.container.onMouseMove((event) => this.mouseMove(event));\n\t\tthis.container.onKeyPress((event) => this.keyPressed(event));\n\t\tthis.container.onKeyDown((event) => this.keyDown(event));\n\t\tthis.container.onKeyUp((event) => this.keyUp(event));\n\t\tthis.container.onTouchStart((event) => this.touchStart(event));\n\t\tthis.container.onTouchMove((event) => this.touchMove(event));\n\t\tthis.container.onTouchCancel((event) => this.touchCancel(event));\n\t\tthis.container.onTouchEnd((event) => this.touchEnd(event));\n\t\tthis.contentDOM.onContextMenu((event:MouseEvent) => this.contextMenu(event));\n\n\t\t// setup the wheel handler\n\t\t/* ...\n\t\tlet mwh = new goog.events.MouseWheelHandler(this.container);\n\t\tgoog.events.listen(mwh, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, this.mouseWheel, false, this);\n\t\t*/\n\n\t\t// setup drop events\n\t\tthis.container.el.addEventListener('dragover', (event:DragEvent) =>\n\t\t{\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tevent.dataTransfer.dropEffect = 'copy';\n\t\t});\n\t\tthis.container.el.addEventListener('drop', (event:DragEvent) =>\n\t\t{\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tthis.dropInto(event.dataTransfer);\n\t\t});\n\n\t\tif (this.initialFocus) this.grabFocus();\n\t}\n\n\t// viewing options: changing any of them triggers a redraw\n\tpublic get decoration():DrawCanvasDecoration {return this.viewOpt.decoration;}\n\tpublic set decoration(decoration:DrawCanvasDecoration) {if (this.viewOpt.decoration != decoration) {this.viewOpt.decoration = decoration; this.renderMolecule();}}\n\tpublic get showOxState():boolean {return this.viewOpt.showOxState;}\n\tpublic set showOxState(showOxState:boolean) {if (this.viewOpt.showOxState != showOxState) {this.viewOpt.showOxState = showOxState; this.renderMolecule();}}\n\tpublic get showQuery():boolean {return this.viewOpt.showQuery;}\n\tpublic set showQuery(showQuery:boolean) {if (this.viewOpt.showQuery != showQuery) {this.viewOpt.showQuery = showQuery; this.renderMolecule();}}\n\tpublic get showArtifacts():boolean {return this.viewOpt.showArtifacts;}\n\tpublic set showArtifacts(showArtifacts:boolean) {if (this.viewOpt.showArtifacts != showArtifacts) {this.viewOpt.showArtifacts = showArtifacts; this.renderMolecule();}}\n\n\t// change the size of the sketcher after instantiation\n\tpublic changeSize(width:number, height:number):void\n\t{\n\t\tif (width == this.width && height == this.height) return;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tfor (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver])\n\t\t{\n\t\t\twidget.css({'width': `${width}px`, 'height': `${height}px`});\n\t\t}\n\n\t\tfor (let btnv of [this.commandView, this.toolView, this.templateView]) if (btnv)\n\t\t{\n\t\t\tbtnv.setParentSize(width, height);\n\t\t\tbtnv.refreshBank();\n\t\t}\n\n\t\tthis.autoScale();\n\t}\n\n\t// displays a message, which may be an error or just something helpful\n\tpublic showMessage(msg:string, isError:boolean = false):void\n\t{\n\t\tlet watermark = ++this.fadeWatermark;\n\n\t\tthis.divMessage.css({'color': isError ? '#FF0000' : '#008000'});\n\t\tthis.divMessage.setText(msg);\n\t\tlet szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n\t\tlet szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n\t\tlet szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n\t\tthis.divMessage.css({'left': szLeft + 'px'});\n\t\tthis.divMessage.css({'width': (this.width - szLeft - szRight) + 'px'});\n\t\tthis.divMessage.css({'height': (this.height - szBottom) + 'px'});\n\n\t\twindow.setTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.fadeWatermark) this.divMessage.setText('');\n\t\t}, 5000);\n\t}\n\n\t// boots the message immediately\n\tpublic clearMessage()\n\t{\n\t\tif (this.divMessage.getText() == '') return;\n\t\tthis.fadeWatermark++;\n\t\tthis.divMessage.setText('');\n\t}\n\n\t// rescales and aligns to the middle of the screen\n\tpublic autoScale()\n\t{\n\t\t// note: this is inefficient; can just scale the primitives...\n\n\t\tthis.pointScale = this.policy.data.pointScale;\n\n\t\tthis.layoutMolecule();\n\t\tthis.centreAndShrink();\n\t\tthis.redrawMetaVector();\n\t\tthis.layoutTemplatePerm();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// returns true if there are any selected atoms\n\tpublic anySelected():boolean\n\t{\n\t\tif (this.selectedMask == null) return false;\n\t\tfor (let n = 0; n < this.selectedMask.length; n++) if (this.selectedMask[n]) return true;\n\t\treturn false;\n\t}\n\n\t// changes selection state for atom\n\tpublic setSelected(atom:number, sel:boolean):void\n\t{\n\t\tif (this.selectedMask == null)\n\t\t{\n\t\t\tthis.selectedMask = new Array(this.mol.numAtoms);\n\t\t\tfor (let n = this.selectedMask.length - 1; n >= 0; n--) this.selectedMask[n] = false;\n\t\t}\n\t\twhile (this.selectedMask.length < this.mol.numAtoms) {this.selectedMask.push(false);}\n\t\tthis.selectedMask[atom - 1] = sel;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenience: sets current and redraws\n\tprivate changeCurrentAtom(atom:number):void\n\t{\n\t\tif (this.currentAtom == atom) return;\n\t\tthis.currentAtom = atom;\n\t\tthis.currentBond = 0;\n\t\tthis.delayedRedraw();\n\t}\n\tprivate changeCurrentBond(bond:number):void\n\t{\n\t\tif (this.currentBond == bond) return;\n\t\tthis.currentBond = bond;\n\t\tthis.currentAtom = 0;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// select & current are zapped\n\tpublic clearSubject():void\n\t{\n\t\tif (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask)) return;\n\t\tthis.currentAtom = 0;\n\t\tthis.currentBond = 0;\n\t\tthis.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tthis.delayedRedraw();\n\t}\n\n\t// sets the current state; see getState() function above for the format of the object; the 'withStashUndo' parameter is a\n\t// flag, which defaults to true: determines whether the current state will be pushed onto the undo-stack before making the change\n\tpublic setState(state:SketchState, withStashUndo:boolean = true):void\n\t{\n\t\tthis.stopTemplateFusion();\n\n\t\tif (state.mol != null) this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n\t\tif (state.currentAtom >= 0) this.currentAtom = state.currentAtom;\n\t\tif (state.currentBond >= 0) this.currentBond = state.currentBond;\n\t\tif (state.selectedMask != null) this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n\n\t\tthis.delayedRedraw();\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mol.numAtoms == 0) return; // don't put empty stuff at the beginning\n\t\tlet state = this.getState();\n\n\t\tthis.undoStack.push(state);\n\t\twhile (this.undoStack.length > Sketcher.UNDO_SIZE)\n\t\t{\n\t\t\tthis.undoStack.splice(0, 1);\n\t\t}\n\t\tthis.redoStack = [];\n\t}\n\n\t// a bunch of template fusion permutations has arrived: display the first one, and allow them to be traversed\n\tpublic setPermutations(perms:TemplatePermutation[]):void\n\t{\n\t\tthis.templatePerms = perms;\n\t\tthis.pickTemplatePermutation(0);\n\t\tthis.fusionBank = new FusionBank(this);\n\t\tthis.templateView.pushBank(this.fusionBank);\n\n\t\tif (this.mol.numAtoms == 0) this.centreAndShrink();\n\t}\n\n\t// stop fusing templates, and clear out the fusion bank as well\n\tpublic stopTemplateFusion():void\n\t{\n\t\tif (this.fusionBank != null) this.templateView.popBank();\n\t}\n\n\t// get rid of the template overlay\n\tpublic clearPermutations()\n\t{\n\t\tif (this.templatePerms == null) return;\n\t\tthis.templatePerms = null;\n\t\tthis.delayedRedraw();\n\t\tthis.fusionBank = null;\n\t}\n\n\t// accept the current template permutation: make it the new molecule\n\tpublic templateAccept():void\n\t{\n\t\tlet mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n\t\tthis.templateView.popBank();\n\t\tthis.defineMolecule(mol, false, true, false);\n\t}\n\n\t// rotate the template display up or down\n\tpublic templateRotate(dir:number)\n\t{\n\t\tlet idx = (this.currentPerm + dir) % this.templatePerms.length;\n\t\tif (idx < 0) idx += this.templatePerms.length;\n\t\tthis.pickTemplatePermutation(idx);\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tlet state = this.getState();\n\t\tthis.redoStack.push(state);\n\t\tthis.setState(this.undoStack.pop(), false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tlet state = this.getState();\n\t\tthis.undoStack.push(state);\n\t\tthis.setState(this.redoStack.pop(), false);\n\t}\n\n\t// copying to clipboard: sticks the content in several different places, for subsequent recall\n\tpublic performCopy(mol?:Molecule):void\n\t{\n\t\tif (!mol) mol = this.getMolecule();\n\n\t\tif (this.proxyClip) this.proxyClip.setString(mol.toString());\n\t}\n\n\t// perform a more surgical copy/cut operation\n\tpublic performCopySelection(andCut:boolean):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n\t}\n\n\t// pasting from clipboard, initiated by the user via non-system commands: this can't necessarily grab the system\n\t// clipboard, so have to get a bit more creative\n\tpublic performPaste():void\n\t{\n\t\t// see if we have access to the system clipboard\n\t\tif (this.proxyClip && this.proxyClip.canAlwaysGet())\n\t\t{\n\t\t\tlet txt = this.proxyClip.getString();\n\t\t\tthis.pasteText(txt);\n\t\t}\n\t}\n\n\t// executes an arbitrary activity on the current molecule/selection state\n\tpublic performActivity(activity:ActivityType, param:Record<string, any> = {}):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), activity, param, this).execute();\n\t}\n\n\t// zooms in or out, depending on the magnifier\n\tpublic zoom(mag:number)\n\t{\n\t\tlet cx = 0.5 * this.width, cy = 0.5 * this.height;\n\t\tlet newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n\t\tif (newScale == this.pointScale) return;\n\n\t\tthis.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n\t\tthis.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n\t\tthis.pointScale = newScale;\n\n\t\t// --- begin inefficient: rewrite this to just transform the constituents...\n\t\tthis.layoutMolecule();\n\t\tthis.redrawMetaVector();\n\t\tthis.layoutTemplatePerm();\n\t\t// --- end inefficient\n\n\t\tthis.delayedRedraw();\n\t}\n\n\t// bring up the interactive editing mode for current object, if any\n\tpublic editCurrent():void\n\t{\n\t\tif (this.currentBond > 0)\n\t\t\tthis.editBond(this.currentBond);\n\t\telse\n\t\t\tthis.editAtom(this.currentAtom);\n\t}\n\n\t// pasted text from clipboard (can be activated from outside the widget, so is public)\n\tpublic pasteText(str:string):void\n\t{\n\t\tconst pasteLocal = () =>\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\tlet ds = DataSheetStream.readXML(str);\n\t\t\t\tif (ds)\n\t\t\t\t{\n\t\t\t\t\touter: for (let r = 0; r < ds.numRows; r++) for (let c = 0; c < ds.numCols; c++) if (ds.colType(c) == DataSheetColumn.Molecule && ds.notNull(r, c))\n\t\t\t\t\t{\n\t\t\t\t\t\tmol = ds.getMolecule(r, c);\n\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mol != null) this.pasteMolecule(mol);\n\t\t\telse alert('Text from clipboard is not a valid molecule.');\n\t\t};\n\n\t\tif (this.plugins.callbackSpecialPaste)\n\t\t{\n\t\t\t(async () =>\n\t\t\t{\n\t\t\t\tlet mol = await this.plugins.callbackSpecialPaste(str);\n\t\t\t\tif (mol)\n\t\t\t\t\tthis.pasteMolecule(mol);\n\t\t\t\telse\n\t\t\t\t\tpasteLocal();\n\t\t\t})();\n\t\t}\n\t\telse pasteLocal();\n\t}\n\tpublic pasteMolecule(mol:Molecule):void\n\t{\n\t\tif (this.mol.numAtoms == 0)\n\t\t{\n\t\t\tthis.defineMolecule(mol, true, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal for pasting query-only features\n\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, {qmol: mol});\n\t\tmolact.execute();\n\t\tif (molact.output.mol)\n\t\t{\n\t\t\tthis.defineMolecule(molact.output.mol, false, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\tlet param = {fragNative: mol.toString()};\n\t\tnew MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n\t}\n\n\t// changes the template permutation: if necessary requests the layout, and redraws the screen\n\tpublic pickTemplatePermutation(idx:number)\n\t{\n\t\tlet perm = this.templatePerms[idx];\n\t\tthis.currentPerm = idx;\n\n\t\tthis.layoutTemplatePerm();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// bring up the dialog for converting the subject atoms into a polymer block repeating unit\n\tpublic performPolymerBlock(atoms:number[]):void\n\t{\n\t\tlet dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\n\t// ensure that focus is happening\n\tpublic grabFocus():void\n\t{\n\t\tthis.container.grabFocus();\n\t}\n\n\t// returns true if the sketcher is focused; the display of focus is not visible, but it is still recorded\n\tpublic hasFocus():boolean\n\t{\n\t\treturn this.container.hasFocus();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// redetermines the offset and scale so that the molecular structure fits cleanly\n\tprivate centreAndShrink():void\n\t{\n\t\tif (this.mol.numAtoms == 0 || this.layout == null)\n\t\t{\n\t\t\tthis.offsetX = 0.5 * this.width;\n\t\t\tthis.offsetY = 0.5 * this.height;\n\t\t\tthis.pointScale = this.policy.data.pointScale;\n\t\t\treturn;\n\t\t}\n\n\t\tlet bounds = this.layout.determineBoundary(0);\n\n\t\tlet limW = this.width - 6, limH = this.height - 6;\n\t\tlet natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n\n\t\tlet scale = 1;\n\t\tif (natW > limW)\n\t\t{\n\t\t\tlet down = limW / natW;\n\t\t\tscale *= down;\n\t\t\tnatW *= down;\n\t\t\tnatH *= down;\n\t\t}\n\t\tif (natH > limH)\n\t\t{\n\t\t\tlet down = limH / natH;\n\t\t\tscale *= down;\n\t\t\tnatW *= down;\n\t\t\tnatH *= down;\n\t\t}\n\n\t\tif (scale < 1)\n\t\t{\n\t\t\tthis.pointScale *= scale;\n\t\t\tthis.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n\t\t\tthis.layout.scaleEverything(scale);\n\t\t\tbounds = this.layout.determineBoundary(0);\n\t\t}\n\n\t\tlet dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n\t\tthis.offsetX += dx;\n\t\tthis.offsetY += dy;\n\t\tthis.layout.offsetEverything(dx, dy);\n\t}\n\n\t// creates the template permutation rendering object using the same transform as the main molecule\n\tprivate layoutTemplatePerm():void\n\t{\n\t\tif (this.currentPerm < 0 || this.templatePerms == null) return;\n\t\tlet perm = this.templatePerms[this.currentPerm];\n\n\t\tlet tpolicy = new RenderPolicy(this.policy.data);\n\t\ttpolicy.data.foreground = 0x808080;\n\t\ttpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n\t\tfor (let n in tpolicy.data.atomCols) tpolicy.data.atomCols[n] = 0x808080;\n\n\t\tlet effects = new RenderEffects();\n\t\tlet layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n\t\tlayout.arrange();\n\t\tperm.metavec = new MetaVector();\n\t\tnew DrawMolecule(layout, perm.metavec).draw();\n\t}\n\n\t// re-render the molecule into its graphical state buffers, then trigger a delayed re-splat onto the canvas; this is useful when the molecule\n\t// is to be displayed differently even though the molecule itself has not actually changed\n\tprivate renderMolecule():void\n\t{\n\t\tthis.layoutMolecule();\n\t\tthis.redrawMetaVector();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// locates a molecular object at the given position: returns N for atom, -N for bond, 0 for nothing, or null for not-on-canvas (e.g. button banks)\n\tprotected pickObjectCanvas(x:number, y:number):number\n\t{\n\t\tif (this.layout == null) return 0;\n\n\t\t// if the position is over a buttonview, return zero (yes, this does happen)\n\t\tif (this.toolView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n\t\t\tif (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\t\tif (this.commandView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n\t\t\tif (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\t\tif (this.templateView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n\t\t\tif (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\n\t\treturn super.pickObjectCanvas(x, y);\n\t}\n\n\t// response to some mouse event: hovering cursor restated\n\tprivate updateHoverCursor(x:number, y:number):void\n\t{\n\t\tlet tool = this.toolView ? this.toolView.selectedButton : '';\n\t\tlet toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n\n\t\tlet mouseObj = 0;\n\n\t\tif (this.dragType == DraggingTool.None && toolApplies)\n\t\t{\n\t\t\tmouseObj = this.pickObject(x, y);\n\t\t}\n\t\tlet mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n\n\t\tlet abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n\t\tlet abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n\n\t\tif (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond)\n\t\t{\n\t\t\tthis.hoverAtom = mouseAtom;\n\t\t\tthis.hoverBond = mouseBond;\n\t\t\tif (abbrevThen != abbrevNow)\n\t\t\t{\n\t\t\t\tthis.layoutMolecule();\n\t\t\t\tthis.redrawMetaVector();\n\t\t\t}\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// looks through the current list of available guidelines, and picks out the sprouting(s) that relate to the clicked atom, if any\n\tprivate determineDragGuide(order:number):GuidelineSprout[]\n\t{\n\t\t// special deal: if no atom clicked, create a fake one with 30 degree angles from the click position\n\t\tif (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0)\n\t\t{\n\t\t\tlet g:GuidelineSprout =\n\t\t\t{\n\t\t\t\tatom: this.opAtom,\n\t\t\t\torders: [order],\n\t\t\t\tx: [],\n\t\t\t\ty: [],\n\t\t\t\tsourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n\t\t\t\tsourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n\t\t\t\tdestX: [],\n\t\t\t\tdestY: []\n\t\t\t};\n\n\t\t\tlet mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n\t\t\tlet my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n\t\t\tfor (let n = 0; n < 12; n++)\n\t\t\t{\n\t\t\t\tlet theta = TWOPI * n / 12;\n\t\t\t\tlet dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n\t\t\t\tg.x.push(mx + dx);\n\t\t\t\tg.y.push(my + dy);\n\t\t\t\tg.destX.push(g.sourceX + dx * this.pointScale);\n\t\t\t\tg.destY.push(g.sourceY - dy * this.pointScale);\n\t\t\t}\n\n\t\t\treturn [g];\n\t\t}\n\n\t\tif (this.guidelines == null) return null;\n\n\t\tlet best:GuidelineSprout = null, single:GuidelineSprout = null;\n\t\tfor (let n = 0; n < this.guidelines.length; n++)\n\t\t{\n\t\t\tlet g = this.guidelines[n];\n\t\t\tif (g.atom != this.opAtom) continue;\n\t\t\tif (g.orders.indexOf(order) >= 0) {best = g; break;}\n\t\t\tif (g.orders.indexOf(1) >= 0) single = g;\n\t\t}\n\t\tif (best == null) best = single;\n\t\tif (best == null) return [];\n\n\t\tlet g = clone(best) as GuidelineSprout;\n\t\tg.sourceX = this.angToX(this.mol.atomX(g.atom));\n\t\tg.sourceY = this.angToY(this.mol.atomY(g.atom));\n\t\tg.destX = [];\n\t\tg.destY = [];\n\t\tfor (let n = 0; n < g.x.length; n++)\n\t\t{\n\t\t\tg.destX.push(this.angToX(g.x[n]));\n\t\t\tg.destY.push(this.angToY(g.y[n]));\n\t\t}\n\t\treturn [g];\n\t}\n\n\t// activates drag guidelines for moving atoms - this is anything besides the atoms that are being moved\n\tprivate determineMoveGuide():GuidelineSprout[]\n\t{\n\t\tlet subj = this.subjectAtoms(false, true);\n\t\tif (subj.length == 0 || subj.length == this.mol.numAtoms) return null;\n\n\t\tlet guides:GuidelineSprout[] = [];\n\t\tfor (let n = 0; n < this.guidelines.length; n++)\n\t\t{\n\t\t\tlet g = this.guidelines[n];\n\t\t\tif (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0) continue;\n\n\t\t\tg = clone(g) as GuidelineSprout;\n\t\t\tg.sourceX = this.angToX(this.mol.atomX(g.atom));\n\t\t\tg.sourceY = this.angToY(this.mol.atomY(g.atom));\n\t\t\tg.destX = [];\n\t\t\tg.destY = [];\n\t\t\tfor (let i = 0; i < g.x.length; i++)\n\t\t\t{\n\t\t\t\tg.destX.push(this.angToX(g.x[i]));\n\t\t\t\tg.destY.push(this.angToY(g.y[i]));\n\t\t\t}\n\t\t\tguides.push(g);\n\t\t}\n\t\treturn guides;\n\t}\n\n\t// interactively edit the given atom/bond\n\tprivate editAtom(atom:number):void\n\t{\n\t\tlet dlg = new EditAtom(this.mol, atom, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tif (atom == 0 && this.mol.numAtoms > 0)\n\t\t{\n\t\t\tlet box = this.mol.boundary();\n\t\t\tdlg.newX = box.maxX() + Molecule.IDEALBOND;\n\t\t\tdlg.newY = box.midY();\n\t\t}\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\tprivate editBond(bond:number):void\n\t{\n\t\tif (bond == 0) return;\n\n\t\tlet dlg = new EditBond(this.mol, bond, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\n\t// move the current selection in one of the cardinal directions\n\tprivate hitArrowKey(dx:number, dy:number):void\n\t{\n\t\tlet watermark = ++this.cursorWatermark;\n\t\tthis.cursorDX += dx;\n\t\tthis.cursorDY += dy;\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.cursorWatermark) this.cursorJumpDirection();\n\t\t}, 100);\n\t}\n\n\t// given the direction of the cursor offset, try to move the current position in that direction\n\tprivate cursorJumpDirection():void\n\t{\n\t\tlet theta = Math.atan2(this.cursorDY, this.cursorDX);\n\t\tif (this.currentAtom > 0) this.jumpFromCurrentAtom(theta);\n\t\telse if (this.currentBond > 0) this.jumpFromCurrentBond(theta);\n\t\telse this.jumpFromNowhere(theta);\n\n\t\tthis.cursorDX = 0;\n\t\tthis.cursorDY = 0;\n\t\tthis.cursorWatermark = 0;\n\t}\n\tprivate jumpFromCurrentAtom(theta:number):void\n\t{\n\t\t// see if we can follow a bond\n\t\tlet adj = this.mol.atomAdjList(this.currentAtom);\n\t\tlet closest = 0, closestDelta = Number.MAX_VALUE;\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n\t\t\tlet adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n\t\t\tif (delta < 35.0 * DEGRAD && delta < closestDelta) [closest, closestDelta] = [a, delta];\n\t\t}\n\t\tif (closest > 0)\n\t\t{\n\t\t\tthis.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n\t\t\treturn;\n\t\t}\n\n\t\t// no bond to hop onto, so try jumping across a chasm\n\t\tlet best = 0, bestScore = Number.MIN_VALUE;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (n != this.currentAtom && adj.indexOf(n) < 0)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n\t\t\tlet adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n\t\t\tif (delta > 45.0 * DEGRAD) continue; // must be in the cone\n\t\t\tlet cosdelta = Math.cos(delta);\n\t\t\tlet score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n\t\t\tif (score > bestScore) [best, bestScore] = [n, score];\n\t\t}\n\t\tif (best > 0) this.changeCurrentAtom(best);\n\t}\n\tprivate jumpFromCurrentBond(theta:number):void\n\t{\n\t\tlet [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n\t\tlet bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n\t\tif (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD) this.changeCurrentAtom(bto);\n\t\tif (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD) this.changeCurrentAtom(bfr);\n\t\t//  (otherwise do nothing)\n\t}\n\tprivate jumpFromNowhere(theta:number):void\n\t{\n\t\tif (this.mol.numAtoms == 0) return;\n\t\tif (this.mol.numAtoms == 1) {this.changeCurrentAtom(1); return;}\n\n\t\tlet cx = 0, cy = 0;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) {cx += this.mol.atomX(n); cy += this.mol.atomY(n);}\n\t\tlet inv = 1.0 / this.mol.numAtoms;\n\t\tcx *= inv; cy *= inv;\n\n\t\tlet best = 0, bestScore = Number.MIN_VALUE;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n\t\t\tlet cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n\t\t\tlet score = cosdelta * norm_xy(dx, dy);\n\t\t\tif (score > bestScore) [best, bestScore] = [n, score];\n\t\t}\n\t\tif (best > 0) this.changeCurrentAtom(best);\n\t}\n\n\t// manufactures a ring of given size based on context\n\tprivate createRing(rsz:number, aromatic:boolean):void\n\t{\n\t\tconst {mol} = this;\n\t\tlet rx:number[] = null, ry:number[] = null;\n\t\tif (this.currentAtom > 0)\n\t\t{\n\t\t\tlet dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n\t\t\tlet x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n\t\t\tfor (let a of adj)\n\t\t\t{\n\t\t\t\tdx -= mol.atomX(a) - x0;\n\t\t\t\tdy -= mol.atomY(a) - y0;\n\t\t\t}\n\t\t\tif (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001)\n\t\t\t{\n\t\t\t\tif (adj.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n\t\t\t\t\tVec.sort(theta);\n\t\t\t\t\tlet best = Number.POSITIVE_INFINITY;\n\t\t\t\t\tfor (let n = 0; n < theta.length; n++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n\t\t\t\t\t\tlet lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n\t\t\t\t\t\tif (score < best) [best, dx, dy] = [score, lx, ly];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse [dx, dy] = [1, 0];\n\t\t\t}\n\t\t\t[rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n\t\t}\n\t\telse if (this.currentBond > 0)\n\t\t{\n\t\t\tlet a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n\t\t\tlet x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n\t\t\tlet [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n\t\t\t[rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet x = 0, y = 0;\n\t\t\tif (mol.numAtoms > 0)\n\t\t\t{\n\t\t\t\tlet bound = mol.boundary();\n\t\t\t\t[x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n\t\t\t}\n\t\t\t[rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n\t\t}\n\n\t\tif (!rx) return;\n\n\t\tlet param:any =\n\t\t{\n\t\t\tringX: rx,\n\t\t\tringY: ry,\n\t\t\taromatic: aromatic\n\t\t};\n\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n\t\tmolact.execute();\n\t}\n\n\t// get sprout direction ready\n\tprivate ctrlArrowKey(dx:number, dy:number):void\n\t{\n\t\tlet watermark = ++this.cursorWatermark;\n\t\tthis.cursorDX += dx;\n\t\tthis.cursorDY += dy;\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.cursorWatermark)\n\t\t\t{\n\t\t\t\tthis.sproutDirection(this.cursorDX, this.cursorDY);\n\t\t\t\tthis.cursorDX = this.cursorDY = 0;\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\t// starting with the current atom, creates a new bond jumping outward\n\tprivate sproutDirection(deltaX:number, deltaY:number):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), ActivityType.SproutDirection, {deltaX, deltaY}, this).execute();\n\t}\n\n\tprivate launchComposeFragment():void\n\t{\n\t\tconst {callbackComposeFragment} = this.plugins;\n\t\tif (!callbackComposeFragment || this.inDialog) return;\n\t\tcallbackComposeFragment(this);\n\t}\n\n\t// --------------------------------------- toolkit events ---------------------------------------\n\n\t// event responses\n\tprivate mouseClick(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tthis.grabFocus(); // just in case it wasn't already\n\t\treturn false;\n\t}\n\tprivate mouseDoubleClick(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tif (this.toolView.selectedButton != ToolBankItem.Arrow) return;\n\n\t\tlet xy = eventCoords(event, this.container);\n\t\tlet clickObj = this.pickObject(xy[0], xy[1]);\n\t\tif (clickObj > 0)\n\t\t{\n\t\t\tlet atom = clickObj;\n\t\t\tthis.editAtom(atom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet bond = -clickObj;\n\t\t\tthis.editBond(bond);\n\t\t}\n\t\treturn false;\n\t}\n\tprivate mouseDown(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tthis.clearMessage();\n\n\t\tif (event.ctrlKey && !event.shiftKey && !event.altKey)\n\t\t{\n\t\t\tthis.contextMenu(event);\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n\n\t\treturn false;\n\t}\n\tprivate mouseUp(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.interactEnd(x, y);\n\n\t\treturn false;\n\t}\n\tprivate mouseOver(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\t\tthis.updateLasso(x, y);\n\t\treturn false;\n\t}\n\tprivate mouseOut(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\t\tthis.updateLasso(x, y);\n\t\treturn false;\n\t}\n\tprivate mouseMove(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\n\t\tif (this.dragType == DraggingTool.None) return; // mouse button isn't pressed\n\n\t\tthis.interactDrag(x, y);\n\n\t\treturn false;\n\t}\n\n\tprivate keyPressed(event:KeyboardEvent):void\n\t{\n\t\t// placeholder\n\t}\n\tprivate keyDown(event:KeyboardEvent):void\n\t{\n\t\tlet key = event.key;\n\n\t\t// special deal for the escape key: if any bank needs to be popped, consume it\n\t\tif (key == KeyCode.Escape)\n\t\t{\n\t\t\tfor (let view of [this.templateView, this.commandView, this.toolView]) if (view != null && view.stackSize > 1)\n\t\t\t{\n\t\t\t\tview.popBank();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : ''); // (meta==cmd on mac; alt=opt on mac)\n\t\tlet nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n\n\t\t// console.log(`Sketcher/Key:${key} Mod:${mod} Date:${new Date()}`);\n\n\t\tif (this.toolView != null && this.toolView.topBank.claimKey(event)) {}\n\t\telse if (this.commandView != null && this.commandView.topBank.claimKey(event)) {}\n\t\telse if (this.templateView != null && this.templateView.topBank.claimKey(event)) {}\n\t\telse if (key == KeyCode.Enter) this.editCurrent();\n\t\telse if (key == KeyCode.Left && nomod) this.hitArrowKey(-1, 0);\n\t\telse if (key == KeyCode.Right && nomod) this.hitArrowKey(1, 0);\n\t\telse if (key == KeyCode.Up && nomod) this.hitArrowKey(0, 1);\n\t\telse if (key == KeyCode.Down && nomod) this.hitArrowKey(0, -1);\n\t\telse if (key == 'z' && mod == 'C') this.performUndo();\n\t\telse if (key == 'Z' && mod == 'SC') this.performRedo();\n\t\telse if (key == 'z' && nomod) this.toolView.cycleSelected(-1);\n\t\telse if (key == 'x' && nomod) this.toolView.cycleSelected(1);\n\t\telse if (key == '#' && mod == 'SC') this.createRing(3, false);\n\t\telse if (key == '$' && mod == 'SC') this.createRing(4, false);\n\t\telse if (key == '%' && mod == 'SC') this.createRing(5, false);\n\t\telse if (key == '^' && mod == 'SC') this.createRing(6, false);\n\t\telse if (key == '&' && mod == 'SC') this.createRing(7, false);\n\t\telse if (key == '3' && mod == 'CA') this.createRing(3, true);\n\t\telse if (key == '4' && mod == 'CA') this.createRing(4, true);\n\t\telse if (key == '5' && mod == 'CA') this.createRing(5, true);\n\t\telse if (key == '6' && mod == 'CA') this.createRing(6, true);\n\t\telse if (key == '7' && mod == 'CA') this.createRing(7, true);\n\t\telse if (key == 'c' && mod == 'C' && this.proxyClip) this.proxyClip.triggerCopy(false);\n\t\telse if (key == 'x' && mod == 'C' && this.proxyClip) this.proxyClip.triggerCopy(true);\n\t\telse if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet()) this.proxyClip.triggerPaste();\n\t\telse if (key == KeyCode.Left && mod == 'C') this.ctrlArrowKey(-1, 0);\n\t\telse if (key == KeyCode.Right && mod == 'C') this.ctrlArrowKey(1, 0);\n\t\telse if (key == KeyCode.Up && mod == 'C') this.ctrlArrowKey(0, 1);\n\t\telse if (key == KeyCode.Down && mod == 'C') this.ctrlArrowKey(0, -1);\n\t\telse if (key == '1' && mod == 'C') this.sproutDirection(-1, -1);\n\t\telse if (key == '2' && mod == 'C') this.sproutDirection(0, -1);\n\t\telse if (key == '3' && mod == 'C') this.sproutDirection(1, -1);\n\t\telse if (key == '4' && mod == 'C') this.sproutDirection(-1, 0);\n\t\telse if (key == '6' && mod == 'C') this.sproutDirection(1, 0);\n\t\telse if (key == '7' && mod == 'C') this.sproutDirection(-1, 1);\n\t\telse if (key == '8' && mod == 'C') this.sproutDirection(0, 1);\n\t\telse if (key == '9' && mod == 'C') this.sproutDirection(1, 1);\n\t\telse if (key == '`' && nomod) this.launchComposeFragment();\n\t\telse return; // allow the key to percolate upward\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\tprivate keyUp(event:KeyboardEvent):void\n\t{\n\t\t// ..\n\t}\n\tprivate touchStart(event:TouchEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event.touches[0], this.container);\n\t\tif (this.pickObjectCanvas(x, y) == null) return; // defer to an overlaying widget\n\n\t\tthis.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n\t\tevent.preventDefault();\n\t}\n\tprivate touchMove(event:TouchEvent):void\n\t{\n\t\tif (this.dragType != DraggingTool.None)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event.touches[0], this.container);\n\t\t\tthis.interactDrag(x, y);\n\t\t}\n\n\t\tevent.preventDefault(); // prevents panning around the place\n\t}\n\tprivate touchCancel(event:TouchEvent):void\n\t{\n\t\t//event.preventDefault();\n\t}\n\tprivate touchEnd(event:TouchEvent):void\n\t{\n\t\tif (this.dragType != DraggingTool.None)\n\t\t{\n\t\t\tlet [x, y] = [this.mouseX, this.mouseY]; // end events have 0 touches, so use last known\n\t\t\tthis.interactEnd(x, y);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\tprivate mouseWheel(event:MouseEvent):void\n\t{\n\t\t/* maybe reinstate? not sure...\n\t\tlet xy = eventCoords(event, this.container);\n\t\tlet newScale = this.scale * (1 - event.deltaY * 0.1);\n\t\tnewScale = Math.min(10, Math.max(0.1, newScale));\n\t\tlet newOX = xy[0] - (newScale / this.scale) * (xy[0] - this.offsetX);\n\t\tlet newOY = xy[1] - (newScale / this.scale) * (xy[1] - this.offsetY);\n\n\t\tthis.scale = newScale;\n\t\tthis.offsetX = newOX;\n\t\tthis.offsetY = newOY;\n\n\t\tthis.delayedRedraw();\n\n\t\tevent.stopPropagation = true;\n\t\t*/\n\t}\n\tprivate contextMenu(event:MouseEvent):void\n\t{\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.dragType = DraggingTool.None;\n\n\t\tif (!this.proxyMenu) return;\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tif (clickObj > 0) this.changeCurrentAtom(clickObj);\n\t\telse if (clickObj < 0) this.changeCurrentBond(-clickObj);\n\t\tlet state = this.getState();\n\n\t\tlet ctx = new ContextSketch(state, this, this.proxyClip);\n\t\tlet menu = ctx.populate();\n\t\tthis.proxyMenu.openContextMenu(menu, event);\n\t}\n\n\t// the mouse/touch sequence began\n\tprivate interactStart(x:number, y:number, shiftKey:boolean, ctrlKey:boolean, altKey:boolean):void\n\t{\n\t\tthis.dragType = DraggingTool.Press;\n\t\tthis.opBudged = false;\n\t\tthis.dragGuides = null;\n\n\t\tthis.mouseX = x;\n\t\tthis.mouseY = y;\n\t\tthis.clickX = x;\n\t\tthis.clickY = y;\n\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tthis.opAtom = clickObj > 0 ? clickObj : 0;\n\t\tthis.opBond = clickObj < 0 ? -clickObj : 0;\n\t\tthis.opShift = shiftKey;\n\t\tthis.opCtrl = ctrlKey;\n\t\tthis.opAlt = altKey;\n\n\t\tlet tool = '';\n\t\tif (this.toolView != null) tool = this.toolView.selectedButton;\n\n\t\tif (tool == ToolBankItem.Arrow)\n\t\t{\n\t\t\t// special key modifiers for the arrow tool:\n\t\t\t//\t\tCTRL: open context menu\n\t\t\t//\t\tSHIFT: toggle selection of object [see mouseClick]\n\t\t\t//\t\tALT: enter pan-mode\n\t\t\t//\t\tALT+CTRL: enter zoom mode\n\t\t\tif (!this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Press;\n\t\t\t}\n\t\t\t//else if (!this.opShift && this.opCtrl && !this.opAlt) (done already)\n\t\t\telse if (!this.opShift && !this.opCtrl && this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Pan;\n\t\t\t}\n\t\t\telse if (!this.opShift && this.opCtrl && this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Zoom;\n\t\t\t}\n\t\t}\n\t\telse if (tool == ToolBankItem.Rotate)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Rotate;\n\t\t\tthis.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n\t\t}\n\t\telse if (tool == ToolBankItem.Pan)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Pan;\n\t\t}\n\t\telse if (tool == ToolBankItem.Drag)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Move;\n\t\t\tif (this.opAtom > 0) this.dragGuides = this.determineMoveGuide();\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse if (tool == ToolBankItem.Erasor)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Erasor;\n\t\t\tthis.lassoX = [x];\n\t\t\tthis.lassoY = [y];\n\t\t\tthis.lassoMask = [];\n\t\t}\n\t\telse if (tool == ToolBankItem.RingAliph)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Ring;\n\t\t\tthis.toolRingArom = false;\n\t\t\tthis.toolRingFreeform = this.opShift;\n\t\t}\n\t\telse if (tool == ToolBankItem.RingArom)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Ring;\n\t\t\tthis.toolRingArom = true;\n\t\t\tthis.toolRingFreeform = this.opShift;\n\t\t}\n\t\telse if (tool == ToolBankItem.AtomPlus)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Charge;\n\t\t\tthis.toolChargeDelta = 1;\n\t\t}\n\t\telse if (tool == ToolBankItem.AtomMinus)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Charge;\n\t\t\tthis.toolChargeDelta = -1;\n\t\t}\n\t\telse if (tool.startsWith(ToolBankItem.BondPfx))\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Bond;\n\t\t\tthis.toolBondOrder = 1;\n\t\t\tthis.toolBondType = Molecule.BONDTYPE_NORMAL;\n\n\t\t\tif (tool == ToolBankItem.BondOrder0) this.toolBondOrder = 0;\n\t\t\telse if (tool == ToolBankItem.BondOrder2) this.toolBondOrder = 2;\n\t\t\telse if (tool == ToolBankItem.BondOrder3) this.toolBondOrder = 3;\n\t\t\telse if (tool == ToolBankItem.BondUnknown) this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n\t\t\telse if (tool == ToolBankItem.BondInclined) this.toolBondType = Molecule.BONDTYPE_INCLINED;\n\t\t\telse if (tool == ToolBankItem.BondDeclined) this.toolBondType = Molecule.BONDTYPE_DECLINED;\n\n\t\t\t// drag-from-bond is only a thing when polymers are involved\n\t\t\tif (this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n\t\t\t\tfor (let poly of new PolymerBlock(this.mol).getUnits())\n\t\t\t\t{\n\t\t\t\t\tlet in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n\t\t\t\t\tif ((in1 && !in2) || (in2 && !in1)) {inPoly = true; break;}\n\t\t\t\t}\n\t\t\t\tif (inPoly)\n\t\t\t\t{\n\t\t\t\t\tthis.toolBondOrder = 0;\n\t\t\t\t\tthis.toolBondType = Molecule.BONDTYPE_NORMAL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.opBond == 0) this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n\t\t}\n\t\telse if (tool.startsWith(ToolBankItem.ElementPfx))\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Atom;\n\t\t\tthis.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n\t\t\tthis.dragGuides = this.determineDragGuide(1);\n\t\t}\n\t}\n\n\t// the mouse/touch was moved to a new position, respond accordingly\n\tprotected interactDrag(x:number, y:number)\n\t{\n\t\t// once the mouse has moved more than a few pixels, it fips into \"drag mode\" rather than \"click mode\"\n\t\tif (!this.opBudged)\n\t\t{\n\t\t\tlet dx = x - this.clickX, dy = y - this.clickY;\n\t\t\tif (dx * dx + dy * dy > 2 * 2) this.opBudged = true;\n\t\t}\n\n\t\t// switch lasso mode on if it becomes an open drag\n\t\tif (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Lasso;\n\t\t\tthis.lassoX = [x];\n\t\t\tthis.lassoY = [y];\n\t\t\tthis.lassoMask = [];\n\t\t}\n\n\t\t// update the various dragging-already tools\n\t\tif (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tthis.updateLasso(x, y);\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Pan)\n\t\t{\n\t\t\tlet dx = x - this.mouseX, dy = y - this.mouseY;\n\n\t\t\tif (dx != 0 || dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.layout.offsetEverything(dx, dy);\n\t\t\t\tthis.metavec.transformPrimitives(dx, dy, 1, 1);\n\n\t\t\t\tif (this.currentPerm >= 0 && this.templatePerms != null)\n\t\t\t\t{\n\t\t\t\t\tlet perm = this.templatePerms[this.currentPerm];\n\t\t\t\t\t//perm.layout.offsetEverything(dx, dy);\n\t\t\t\t\tperm.metavec.transformPrimitives(dx, dy, 1, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Zoom)\n\t\t{\n\t\t\tlet dy = y - this.mouseY;\n\n\t\t\tif (dy != 0)\n\t\t\t{\n\t\t\t\tdy = Math.min(50, Math.max(-50, dy));\n\t\t\t\tlet newScale = this.pointScale * (1 - dy * 0.01);\n\t\t\t\tnewScale = Math.min(10, Math.max(0.1, newScale));\n\t\t\t\tlet newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n\t\t\t\tlet newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n\n\t\t\t\tthis.pointScale = newScale;\n\t\t\t\tthis.offsetX = newOX;\n\t\t\t\tthis.offsetY = newOY;\n\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Rotate ||\n\t\t\t\tthis.dragType == DraggingTool.Move ||\n\t\t\t\tthis.dragType == DraggingTool.Atom ||\n\t\t\t\tthis.dragType == DraggingTool.Bond ||\n\t\t\t\tthis.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// the mouse/touch interaction completed, respond accordingly\n\tprivate interactEnd(x:number, y:number):void\n\t{\n\t\tif (this.opBudged)\n\t\t\tthis.interactEndDrag(x, y);\n\t\telse\n\t\t\tthis.interactEndClick(x, y);\n\n\t\tthis.dragType = DraggingTool.None;\n\t\tthis.lassoX = null;\n\t\tthis.lassoY = null;\n\t\tthis.lassoMask = null;\n\t\tthis.dragGuides = null;\n\t\tthis.delayedRedraw();\n\t}\n\tprivate interactEndClick(x:number, y:number):void\n\t{\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tlet clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n\n\t\tif (this.dragType == DraggingTool.Press)\n\t\t{\n\t\t\t// special key modifiers for the arrow tool:\n\t\t\t//\t\tCTRL: open context menu [see mouseDown]\n\t\t\t//\t\tSHIFT: toggle selection of object\n\t\t\t//\t\tALT: enter pan-mode [see mouseDown]\n\t\t\t//\t\tALT+CTRL: enter zoom mode [see mouseDown]\n\n\t\t\tif (!this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tif (clickAtom == 0 && clickBond == 0)\n\t\t\t\t{\n\t\t\t\t\tif (Vec.anyTrue(this.selectedMask)) this.selectedMask = null;\n\t\t\t\t\telse if (this.currentAtom > 0) this.currentAtom = 0;\n\t\t\t\t\telse if (this.currentBond > 0) this.currentBond = 0;\n\t\t\t\t}\n\t\t\t\telse if (clickAtom != this.currentAtom || clickBond != this.currentBond)\n\t\t\t\t{\n\t\t\t\t\tthis.currentAtom = clickAtom;\n\t\t\t\t\tthis.currentBond = clickBond;\n\t\t\t\t}\n\t\t\t\telse if (clickAtom == 0 && clickBond == 0 && this.anySelected())\n\t\t\t\t{\n\t\t\t\t\tthis.selectedMask = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tif (clickAtom > 0) this.setSelected(clickAtom, !this.getSelected(clickAtom));\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tif (clickObj == 0)\n\t\t\t{\n\t\t\t\tif (Vec.anyTrue(this.selectedMask)) this.selectedMask = null;\n\t\t\t\telse if (this.currentAtom > 0) this.currentAtom = 0;\n\t\t\t\telse if (this.currentBond > 0) this.currentBond = 0;\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tif (this.opAtom > 0 || this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\t'currentAtom': this.opAtom,\n\t\t\t\t\t'currentBond': this.opBond,\n\t\t\t\t\t'selectedMask': [] as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Atom)\n\t\t{\n\t\t\tlet element = this.toolAtomSymbol;\n\t\t\tif (element == 'A')\n\t\t\t{\n\t\t\t\tlet dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () =>\n\t\t\t\t{\n\t\t\t\t\tlet autoscale = this.mol.numAtoms == 0;\n\t\t\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, autoscale, true);\n\t\t\t\t\tdlg.close();\n\t\t\t\t});\n\t\t\t\tif (this.opAtom == 0)\n\t\t\t\t{\n\t\t\t\t\tdlg.newX = this.xToAng(this.clickX);\n\t\t\t\t\tdlg.newY = this.yToAng(this.clickY);\n\t\t\t\t}\n\t\t\t\tdlg.callbackClose = () =>\n\t\t\t\t{\n\t\t\t\t\tthis.inDialog = false;\n\t\t\t\t\tthis.grabFocus();\n\t\t\t\t};\n\t\t\t\tthis.inDialog = true;\n\t\t\t\tdlg.open();\n\t\t\t}\n\t\t\telse if (element)\n\t\t\t{\n\t\t\t\tlet param:any = {element, keepAbbrev: true};\n\t\t\t\tif (this.opAtom == 0)\n\t\t\t\t{\n\t\t\t\t\tlet x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n\t\t\t\t\tif (this.mol.numAtoms == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.offsetX = this.clickX;\n\t\t\t\t\t\tthis.offsetY = this.clickY;\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t\tparam.positionX = x;\n\t\t\t\t\tparam.positionY = y;\n\t\t\t\t}\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\t\tcurrentBond: 0,\n\t\t\t\t\tselectedMask: null as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Charge)\n\t\t{\n\t\t\tif (this.opAtom > 0 || this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\t\tcurrentBond: this.opBond,\n\t\t\t\t\tselectedMask: null as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Charge, {delta: this.toolChargeDelta}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet state =\n\t\t\t{\n\t\t\t\t...this.getState(),\n\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\tcurrentBond: this.opBond,\n\t\t\t\tselectedMask: null as boolean[]\n\t\t\t};\n\t\t\tlet molact:MoleculeActivity;\n\t\t\tif (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n\t\t\t\tmolact = new MoleculeActivity(state, ActivityType.BondOrder, {order: this.toolBondOrder}, this);\n\t\t\telse\n\t\t\t\tmolact = new MoleculeActivity(state, ActivityType.BondType, {type: this.toolBondType}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t}\n\tprivate interactEndDrag(x:number, y:number):void\n\t{\n\t\tif (this.dragType == DraggingTool.Lasso)\n\t\t{\n\t\t\tif (this.lassoX.length >= 2)\n\t\t\t{\n\t\t\t\tthis.calculateLassoMask();\n\t\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (this.getLassoed(n) && !this.getSelected(n)) this.setSelected(n, true);\n\t\t\t}\n\n\t\t\tthis.lassoX = null;\n\t\t\tthis.lassoY = null;\n\t\t\tthis.lassoMask = null;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tlet any = false;\n\t\t\tfor (let n = 0; n < this.lassoMask.length; n++) if (this.lassoMask[n]) {any = true; break;}\n\t\t\tif (any)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: 0,\n\t\t\t\t\tcurrentBond: 0,\n\t\t\t\t\tselectedMask: this.lassoMask\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Rotate)\n\t\t{\n\t\t\tlet [x0, y0, theta, magnitude] = this.determineDragTheta();\n\t\t\tlet degrees = -theta * RADDEG;\n\t\t\tlet mx = this.xToAng(x0), my = this.yToAng(y0);\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, {theta: degrees, centreX: mx, centreY: my}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tlet [dx, dy] = this.determineMoveDelta();\n\t\t\tlet scale = this.pointScale;\n\t\t\t// note: in a future iteration, make the 'Move' action do rotate-snap-rebond, and call it during the mousemove, to give dynamic feedback\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Move, {refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tlet [ringX, ringY] = this.determineFauxRing();\n\t\t\tif (ringX != null)\n\t\t\t{\n\t\t\t\tlet param:any =\n\t\t\t\t{\n\t\t\t\t\tringX: ringX,\n\t\t\t\t\tringY: ringY,\n\t\t\t\t\taromatic: this.toolRingArom\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Atom && this.opAtom > 0)\n\t\t{\n\t\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\t\t\tlet snapTo = this.snapToGuide(x2, y2);\n\t\t\tif (snapTo != null) [x2, y2] = snapTo;\n\n\t\t\tlet param:any =\n\t\t\t{\n\t\t\t\torder: 1,\n\t\t\t\ttype: Molecule.BONDTYPE_NORMAL,\n\t\t\t\telement: this.toolAtomSymbol,\n\t\t\t\tx1: this.mol.atomX(this.opAtom),\n\t\t\t\ty1: this.mol.atomY(this.opAtom),\n\t\t\t\tx2: this.xToAng(x2),\n\t\t\t\ty2: this.yToAng(y2)\n\t\t\t};\n\n\t\t\tif (this.toolAtomSymbol == 'A') param.element = window.prompt('Enter element symbol:', '');\n\t\t\tif (param.element != '')\n\t\t\t{\n\t\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\t\t\tlet snapTo = this.snapToGuide(x2, y2);\n\t\t\tif (snapTo != null)\n\t\t\t{\n\t\t\t\t[x2, y2] = snapTo;\n\t\t\t\tif (this.opBond > 0)\n\t\t\t\t{\n\t\t\t\t\tlet toObj = this.pickObject(x2, y2, {noAtoms: true});\n\t\t\t\t\tif (toObj < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.connectPolymerBlock(this.opBond, -toObj);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet param:any =\n\t\t\t{\n\t\t\t\torder: this.toolBondOrder,\n\t\t\t\ttype: this.toolBondType,\n\t\t\t\telement: 'C',\n\t\t\t\tx1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n\t\t\t\ty1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n\t\t\t\tx2: this.xToAng(x2),\n\t\t\t\ty2: this.yToAng(y2)\n\t\t\t};\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n\t\t\tmolact.execute();\n\t\t}\n\t}\n\n\t// something was dragged into the sketcher area\n\tprivate dropInto(transfer:DataTransfer):void\n\t{\n\t\tlet items = transfer.items, files = transfer.files;\n\n\t\tconst SUFFIXES = ['.el', '.mol'];\n\t\tconst MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n\n\t\t//console.log('DROP-INTO: items=' +  items.length + ', files=' + files.length);\n\n\t\tfor (let n = 0; n < items.length; n++)\n\t\t{\n\t\t\tif (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0)\n\t\t\t{\n\t\t\t\titems[n].getAsString((str:string) =>\n\t\t\t\t{\n\t\t\t\t\tlet mol = Molecule.fromString(str);\n\t\t\t\t\tif (mol != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// (maybe do an intelligent append/paste, using the coordinates, rather than blowing it away?)\n\t\t\t\t\t\tthis.defineMolecule(mol, true, true, true);\n\t\t\t\t\t}\n\t\t\t\t\telse console.log('Dragged data is not a SketchEl molecule: ' + str);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//console.log('ITEMS['+n+']: ' + items[n].kind+',type='+items[n].type);\n\t\t}\n\t\tfor (let n = 0; n < files.length; n++)\n\t\t{\n\t\t\tfor (let sfx of SUFFIXES) if (files[n].name.endsWith(sfx))\n\t\t\t{\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.onload = (event) =>\n\t\t\t\t{\n\t\t\t\t\tlet str = reader.result;\n\t\t\t\t\tlet mol = MoleculeStream.readUnknown(str.toString());\n\t\t\t\t\tif (mol != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// (maybe do an intelligent append/paste, using the coordinates, rather than blowing it away?)\n\t\t\t\t\t\tthis.defineMolecule(mol, true, true);\n\t\t\t\t\t}\n\t\t\t\t\telse console.log('Dragged file is not a recognised molecule: ' + str);\n\t\t\t\t};\n\t\t\t\treader.readAsText(files[n]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//console.log('DRAGFILE['+n+']: ' + files[n].name+',sz='+files[n].size+',type='+files[n].type);\n\t\t}\n\t}\n\n\t// special case when dragging a 0-order bond between two atoms in a polymer block: add to the opt-in naming list rather than making a bond\n\tprivate connectPolymerBlock(bond1:number, bond2:number):boolean\n\t{\n\t\tlet [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n\n\t\tlet state = this.getState();\n\t\tlet polymer = new PolymerBlock(state.mol);\n\n\t\tlet poly1:PolymerBlockUnit = null, poly2:PolymerBlockUnit = null;\n\t\tlet highName = 0;\n\t\tfor (let poly of polymer.getUnits())\n\t\t{\n\t\t\tif (!poly1 || poly.atoms.length < poly1.atoms.length)\n\t\t\t{\n\t\t\t\tlet ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n\t\t\t\tif (ina && !inb) poly1 = poly;\n\t\t\t\telse if (inb && !ina) [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n\t\t\t}\n\t\t\tif (!poly2 || poly.atoms.length < poly2.atoms.length)\n\t\t\t{\n\t\t\t\tlet ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n\t\t\t\tif (ina && !inb) poly2 = poly;\n\t\t\t\telse if (inb && !ina) [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n\t\t\t}\n\n\t\t\tfor (let nameList of poly.atomName.values()) highName = Math.max(highName, Vec.max(nameList));\n\t\t}\n\t\tif (!poly1 || !poly2) return false;\n\n\t\t//console.log('BONDS:'+[bond1,bond2]+' ATOMS:'+[atomIn1,atomOut1]+' '+[atomIn2,atomOut2]);\n\n\t\tlet name1 = Vec.first(poly1.atomName.get(atomIn1));\n\t\tif (!name1)\n\t\t{\n\t\t\tname1 = ++highName;\n\t\t\tpoly1.atomName.set(atomIn1, [name1]);\n\t\t}\n\t\tlet name2 = Vec.first(poly2.atomName.get(atomIn2));\n\t\tif (!name2)\n\t\t{\n\t\t\tname2 = ++highName;\n\t\t\tpoly2.atomName.set(atomIn2, [name2]);\n\t\t}\n\n\t\tpoly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n\t\tpoly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n\n\t\tpolymer.rewriteMolecule();\n\t\tthis.setState(state);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Sketcher} from '../sketcher/Sketcher';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {MenuProxy} from '../ui/MenuProxy';\nimport {dom, DOM} from '../util/dom';\nimport {Dialog} from './Dialog';\n\n/*\n\tProvides a wrapper dialog for the editing of a molecule.\n*/\n\nexport class EditCompound extends Dialog\n{\n\tprotected btnClear:DOM;\n\tprotected btnCopy:DOM;\n\tprotected btnSave:DOM;\n\tprotected sketcher = new Sketcher();\n\n\tprivate proxyClip:ClipboardProxy = null;\n\tprivate proxyMenu:MenuProxy = null;\n\n\tprivate callbackSave:(source?:EditCompound) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mol:Molecule, parent:any= null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.title = 'Edit Compound';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\tpublic onSave(callback:(source?:EditCompound) => void)\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\n\tpublic getMolecule():Molecule {return this.sketcher.getMolecule();}\n\tpublic getSketcher():Sketcher {return this.sketcher;}\n\n\tpublic defineClipboard(proxy:ClipboardProxy):void\n\t{\n\t\tthis.proxyClip = proxy;\n\n\t\tlet handler = new ClipboardProxyHandler();\n\t\thandler.copyEvent = (andCut:boolean, proxy:ClipboardProxy):boolean =>\n\t\t{\n\t\t\tthis.sketcher.performCopySelection(andCut);\n\t\t\treturn true;\n\t\t};\n\t\thandler.pasteEvent = (proxy:ClipboardProxy):boolean =>\n\t\t{\n\t\t\tthis.sketcher.pasteText(proxy.getString());\n\t\t\treturn true;\n\t\t};\n\t\tproxy.pushHandler(handler);\n\t\tthis.sketcher.defineClipboard(proxy);\n\t}\n\n\tpublic defineContext(proxy:MenuProxy):void\n\t{\n\t\tthis.proxyMenu = proxy;\n\t\tthis.sketcher.defineContext(this.proxyMenu);\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\n\t\tsuper.close();\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnClear.onClick(() => this.sketcher.clearMolecule());\n\n\t\tthis.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnCopy.onClick(() => this.actionCopy());\n\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\t\tthis.domClose.css({'margin-left': '0.5em'});\n\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnSave.onClick(() => {if (this.callbackSave) this.callbackSave(this);});\n\n\t\tlet skw = 800, skh = 650;\n\t\tlet skdiv = dom('<div/>').appendTo(body).css({'width': `${skw}px`, 'height': `${skh}px`});\n\n\t\tthis.sketcher.setSize(skw, skh);\n\t\tthis.sketcher.defineMolecule(this.mol);\n\t\tthis.sketcher.setup(() => this.sketcher.render(skdiv));\n\t}\n\n\tpublic actionCopy():void\n\t{\n\t\tthis.sketcher.performCopySelection(false);\n\t}\n\tpublic actionCut():void\n\t{\n\t\tthis.sketcher.performCopySelection(true);\n\t}\n\tpublic actionPaste():void\n\t{\n\t\tthis.sketcher.performPaste();\n\t}\n\tpublic actionUndo():void\n\t{\n\t\tthis.sketcher.performUndo();\n\t}\n\tpublic actionRedo():void\n\t{\n\t\tthis.sketcher.performRedo();\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {fltEqual} from '../util/util';\n\n/*\n\tDetermines a series of numeric labels to describe an axis, and makes sure all these labels fit within the given width.\n\tThe min & max is described in the units of spacing along the axis, i.e. if this is a log scale, the numbers should be\n\tpost-log. The caller provides a function to transform the axis units back to the original units (e.g. log to pre-log).\n\tThe caller also provides a width measurement for the text. The full capabilities are appropriate for labelling an X-axis;\n\tfor a Y-axis, typically set the textWidth function to the height of the standard font.\n*/\n\nexport interface AxisLabellerNotch\n{\n\tlabel:string; // what precisely to display (null = just a notch, no label)\n\tvalue:number; // value in the original space\n\tpos:number; // axis position of notch, and the centre of the text label\n}\n\nexport class AxisLabeller\n{\n\tpublic notches:AxisLabellerNotch[] = [];\n\n\tconstructor(private width:number, private minVal:number, private maxVal:number,\n\t\t\t\tpublic textWidth?:(str:string) => number, public inverse?:(val:number) => number)\n\t{\n\t}\n\n\t// performs the calculation: after completion, the notches property should be interrogated for the results\n\tpublic calculate():void\n\t{\n\t\tif (this.minVal == this.maxVal)\n\t\t{\n\t\t\tthis.notches.push(\n\t\t\t{\n\t\t\t\tlabel: this.minVal.toString(),\n\t\t\t\tvalue: this.minVal,\n\t\t\t\tpos: 0.5 * this.width\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = this.width, minVal = this.minVal, maxVal = this.maxVal;\n\t\tconst range = maxVal - minVal, invRange = 1.0 / range;\n\n\t\tlet position = (val:number):number => width * (val - minVal) * invRange;\n\n\t\t// find boundaries by rounding the minimum & maximum values, such that they can be squeezed into the edge zones of the axis\n\t\tlet loT:number = null, hiT:number = null;\n\t\tconst bumpLess = 1 - 1E-5, bumpMore = 1 + 1E-5;\n\t\tgot: for (let outer = 1E-10; outer <= 1E11; outer *= 10) for (let inner of [0.2, 0.5, 1])\n\t\t{\n\t\t\tlet mag = outer * inner, inv = 1.0 / mag;\n\n\t\t\tlet t1 = Math.floor(minVal * mag * bumpLess) * inv, t2 = Math.round(minVal * mag) * inv, t3 = Math.ceil(minVal * mag * bumpMore) * inv;\n\t\t\tlet t4 = Math.floor(maxVal * mag * bumpLess) * inv, t5 = Math.round(maxVal * mag) * inv, t6 = Math.ceil(maxVal * mag * bumpMore) * inv;\n\t\t\tlet p1 = position(t1), p2 = position(t2), p3 = position(t3);\n\t\t\tlet p4 = position(t4), p5 = position(t5), p6 = position(t6);\n\n\t\t\tif ((fltEqual(p1, 0) || p1 >= 0) && p1 <= 0.1 * width) loT = t1;\n\t\t\telse if ((fltEqual(p2, 0) || p2 >= 0) && p2 <= 0.1 * width) loT = t2;\n\t\t\telse if ((fltEqual(p3, 0) || p3 >= 0) && p3 <= 0.1 * width) loT = t3;\n\t\t\telse continue;\n\n\t\t\tif (p6 >= 0.9 * width && (fltEqual(p6, width) || p6 <= width)) hiT = t6;\n\t\t\telse if (p5 >= 0.9 * width && (fltEqual(p5, width) || p5 <= width)) hiT = t5;\n\t\t\telse if (p4 >= 0.9 * width && (fltEqual(p4, width) || p4 <= width)) hiT = t4;\n\t\t\telse continue;\n\n\t\t\t// (record the mag, for subsequent spacing purposes?)\n\t\t\tbreak got;\n\t\t}\n\n\t\tif (loT == null || hiT == null) return; // should be very rare\n\n\t\t// NOTE: this is incomplete; but putting in two anchor points is better than nothing\n\n\t\tlet loVal = this.inverse(loT), hiVal = this.inverse(hiT);\n\t\tthis.notches.push(\n\t\t{\n\t\t\tlabel: this.formatNumber(loVal),\n\t\t\tvalue: loVal,\n\t\t\tpos: position(loT)\n\t\t});\n\t\tthis.notches.push(\n\t\t{\n\t\t\tlabel: this.formatNumber(hiVal),\n\t\t\tvalue: hiVal,\n\t\t\tpos: position(hiT)\n\t\t});\n\t}\n\n\t// ------------ private methods ------------\n\n\t// round to a reasonable number of significant figures, then eliminate the cruft\n\tprivate formatNumber(num:number):string\n\t{\n\t\tlet str = num.toPrecision(4);\n\t\tstr = str.replace(/^(-?\\d+)\\.0+$/, '$1');\n\t\tstr = str.replace(/^(-?\\d+\\.0*[1-9]+)0+$/, '$1');\n\t\tstr = str.replace(/^(-?\\d+)\\.0+(e[\\+\\-]\\d+)$/, '$1$2');\n\t\tstr = str.replace(/^(-?\\d+\\.0*[1-9]+)0+(e[\\+\\-]\\d+)$/, '$1$2');\n\t\treturn str;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {colourCanvas} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tBase class for various kinds of \"embedded\" chemistry display objects, such as molecules/reactions/collections. These are intended to be largely\n\tstatic displays that are dynamically manufactured from embedded content, e.g. upgrading a WordPress \"shortcode\" with a molecular structure to\n\ta picture of the molecule.\n*/\n\nexport class EmbedChemistry extends Widget\n{\n\tpublic padding = 4;\n\tpublic borderCol = 0xD0D0D0;\n\tpublic borderRadius = 8; // for rounded rects\n\tpublic backgroundCol1 = 0xFFFFFF;\n\tpublic backgroundCol2 = 0xF0F0F0;\n\tpublic policy:RenderPolicy = RenderPolicy.defaultColourOnWhite();\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t// convenience for setting up backdrop\n\tpublic clearBackground() {this.backgroundCol1 = null; this.backgroundCol2 = null;}\n\tpublic setBackground(bg:number) {this.backgroundCol1 = bg; this.backgroundCol2 = null;}\n\tpublic setBackgroundGradient(bg1:number, bg2:number) {this.backgroundCol1 = bg1; this.backgroundCol2 = bg2;}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tif (this.borderCol != null) content.setCSS('border', '1px solid ' + colourCanvas(this.borderCol));\n\t\tif (this.borderRadius > 0) content.setCSS('border-radius', this.borderRadius + 'px');\n\n\t\tlet bg1 = this.backgroundCol1, bg2 = this.backgroundCol2;\n\t\tif (bg1 != null && bg2 != null)\n\t\t{\n\t\t\tlet cols = colourCanvas(bg1) + ',' + colourCanvas(bg2);\n\t\t\tcontent.setCSS('background-image', 'linear-gradient(to bottom right, ' + cols + ')');\n\t\t}\n\t\telse if (bg1 != null)\n\t\t{\n\t\t\tcontent.setCSS('background-color', colourCanvas(bg1));\n\t\t}\n\n\t\tcontent.css({'padding': this.padding + 'px', 'margin': '0'});\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Aspect} from '../aspect/Aspect';\nimport {AspectList} from '../aspect/AspectList';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MDLSDFReader} from '../io/MDLReader';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {DOM, dom} from '../util/dom';\nimport {fromUTF8, htmlToRGB} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded collection: obtains a datasheet representation and displays it as a group of molecules, primitive datatypes, and/or higher\n\torder datastructures controlled by aspects.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n        format: MIME, or shortcuts for \"datasheet\" or \"sdfile\"\n\t\tencoding: raw by default, but can be set to \"base64\"\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n        padding: number of pixels to space around the content\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n\t\ttight: if true, reduces the padding underneath\n\n    ... these ones TBD\n        source: URL of some kind - grab the data from there (wherever user directory is)\n\n        (parameters to control interactivity?)\n*/\n\ninterface EmbedCollectionColumn\n{\n\tname:string;\n\taspect:Aspect; // null for primitive\n\ttype:string; // if aspect, either 'text' or 'graphic'\n\tidx:number; // primitive: column#; aspect: text/graphic rendering #\n}\n\nexport class EmbedCollection extends EmbedChemistry\n{\n\tprivate ds:DataSheet = null;\n\tprivate failmsg = '';\n\tprivate tight = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private datastr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tif (options.encoding == 'base64') datastr = fromUTF8(atob(datastr.trim()));\n\n\t\tlet ds:DataSheet = null, name:string = options.name;\n\t\tif (options.format == 'datasheet' || options.format == 'chemical/x-datasheet')\n\t\t{\n\t\t\tds = DataSheetStream.readXML(datastr);\n\t\t}\n\t\telse if (options.format == 'sdfile' || options.format == 'chemical/x-mdl-sdfile')\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet mdl = new MDLSDFReader(datastr);\n\t\t\t\tds = mdl.parse();\n\t\t\t}\n\t\t\tcatch (ex) {this.failmsg = ex;}\n\t\t}\n\t\telse // free for all\n\t\t{\n\t\t\ttry {ds = DataSheetStream.readXML(datastr);}\n\t\t\tcatch (ex) {}\n\t\t\tif (ds == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLSDFReader(datastr);\n\t\t\t\t\tds = mdl.parse();\n\t\t\t\t}\n\t\t\t\tcatch (ex) {} // (silent when not forcing a type)\n\t\t\t}\n\t\t}\n\n\t\tif (ds == null) return;\n\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\n\t\tthis.ds = ds;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM, ds = this.ds, policy = this.policy;\n\t\t\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (ds != null)\n\t\t{\n\t\t\tlet aspects = new AspectList(ds).enumerate();\n\t\t\tlet columns:EmbedCollectionColumn[] = this.determineColumns(aspects);\n\n\t\t\tlet table = dom('<table/>').appendTo(span);\n\t\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\t\t\tfor (let n = 0; n < columns.length; n++)\n\t\t\t{\n\t\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\t\tth.css({'white-space': 'nowrap', 'font-weight': '600', 'text-decoration': 'underline', 'text-align': 'center'});\n\t\t\t\tth.css({'padding': '0.2em 0.5em 0.2em 0.5em', 'color': 'black', 'border': '0'});\n\t\t\t\tth.setText(columns[n].name);\n\t\t\t}\n\n\t\t\tfor (let row = 0; row < ds.numRows;)\n\t\t\t{\n\t\t\t\tlet blksz = 1;\n\t\t\t\tfor (let aspect of aspects) blksz = Math.max(blksz, aspect.rowBlockCount(row));\n\n\t\t\t\ttr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\t\t\t\tfor (let col = 0; col < columns.length; col++)\n\t\t\t\t{\n\t\t\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'vertical-align': 'middle'});\n\t\t\t\t\tlet spec = columns[col];\n\t\t\t\t\tif (spec.aspect == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (ds.isNull(row, spec.idx)) td.setText(' ');\n\t\t\t\t\t\telse if (ds.colType(spec.idx) == DataSheetColumn.Molecule) this.renderMolecule(td, row, spec.idx);\n\t\t\t\t\t\telse this.renderPrimitive(td, row, spec.idx);\n\t\t\t\t\t}\n\t\t\t\t\telse if (spec.type == 'text') this.renderTextAspect(td, row, spec.aspect, spec.idx);\n\t\t\t\t\telse if (spec.type == 'graphic') this.renderGraphicAspect(td, row, spec.aspect, spec.idx);\n\t\t\t\t}\n\n\t\t\t\trow += blksz;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Unable to parse datasheet: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span);\n\t\t\tpre.css({'line-height': '1.1'});\n\t\t\tpre.setText(this.datastr);\n\t\t\tconsole.log('Unparseable datasheet source string:\\n[' + this.datastr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assemble list of columns to use for the actual table: for a plain datasheet this is basically the sheet's own structure;\n\t// when aspects are involved, these can be switched out for dynamically produced text & graphics\n\tprivate determineColumns(aspects:Aspect[]):EmbedCollectionColumn[]\n\t{\n\t\tlet ds = this.ds;\n\t\tlet columns:EmbedCollectionColumn[] = [];\n\n\t\tlet reserved = Vec.booleanArray(false, ds.numCols);\n\t\tlet names:string[] = [];\n\t\tfor (let n = 0; n < ds.numCols; n++) names.push(ds.colName(n));\n\n\t\tfor (let aspect of aspects)\n\t\t{\n\t\t\t// NOTE: fetching of titles is very inefficient; redesign aspect, or cache row 0 for later use\n\t\t\tif (ds.numRows > 0) for (let n = 0, num = aspect.numTextRenderings(0); n < num; n++)\n\t\t\t{\n\t\t\t\tlet title = aspect.produceTextRendering(0, n).name;\n\t\t\t\tcolumns.push({'name': title, 'aspect': aspect, 'type': 'text', 'idx': n});\n\t\t\t}\n\t\t\tif (ds.numRows > 0) for (let n = 0, num = aspect.numGraphicRenderings(0); n < num; n++)\n\t\t\t{\n\t\t\t\tlet title = aspect.produceGraphicRendering(0, n, this.policy).name;\n\t\t\t\tcolumns.push({'name': title, 'aspect': aspect, 'type': 'graphic', 'idx': n});\n\t\t\t}\n\n\t\t\tlet claimed = aspect.areColumnsReserved(names);\n\t\t\tfor (let n = 0; n < names.length; n++) reserved[n] = reserved[n] || claimed[n];\n\t\t}\n\n\t\tfor (let n = 0; n < ds.numCols; n++) if (!reserved[n] && ds.colType(n) != DataSheetColumn.Extend)\n\t\t{\n\t\t\tcolumns.push({'name': ds.colName(n), 'aspect': null, 'type': null, 'idx': n});\n\t\t}\n\n\t\t// TODO: reordering based on occurrence in natural order? right now aspects all go first; collect up a parallel\n\t\t// 'pri' array which is col# for primitives, and first occurrence in column name list for aspects; use to sort\n\n\t\treturn columns;\n\t}\n\n\t// rendering specifics for individual cells\n\tprivate renderPrimitive(td:DOM, row:number, col:number):void\n\t{\n\t\tlet txt = '', ct = this.ds.colType(col), align = 'center';\n\t\tif (ct == DataSheetColumn.String) {txt = this.ds.getString(row, col); align = 'left';}\n\t\telse if (ct == DataSheetColumn.Integer) txt = this.ds.getInteger(row, col).toString();\n\t\telse if (ct == DataSheetColumn.Real) txt = this.ds.getReal(row, col).toString();\n\t\telse if (ct == DataSheetColumn.Boolean) txt = this.ds.getBoolean(row, col) ? 'true' : 'false';\n\t\ttd.setText(txt);\n\t\ttd.css({'text-align': align});\n\t}\n\tprivate renderMolecule(td:DOM, row:number, col:number):void\n\t{\n\t\ttd.css({'text-align': 'center'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeMolecule(this.ds.getMolecule(row, col), measure, this.policy, effects);\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawMolecule(layout, metavec).draw();\n\t\tmetavec.normalise();\n\t\tdom(metavec.createSVG()).appendTo(td);\n\t}\n\tprivate renderTextAspect(td:DOM, row:number, aspect:Aspect, idx:number):void\n\t{\n\t\tlet rend = aspect.produceTextRendering(row, idx);\n\t\tif (!rend.text) td.setText(' ');\n\t\telse if (rend.type == Aspect.TEXT_PLAIN) td.setText(rend.text);\n\t\telse if (rend.type == Aspect.TEXT_LINK)\n\t\t{\n\t\t\tlet ahref = dom('<a target=\"_blank\"/>').appendTo(td);\n\t\t\tahref.setAttr('href', rend.text);\n\t\t\tahref.setText(rend.text);\n\t\t}\n\t\telse if (rend.type == Aspect.TEXT_HTML) td.setHTML(rend.text);\n\t}\n\tprivate renderGraphicAspect(td:DOM, row:number, aspect:Aspect, idx:number):void\n\t{\n\t\tlet metavec = aspect.produceGraphicRendering(row, idx, this.policy).metavec;\n\t\tif (metavec == null) {td.setText(' '); return;}\n\n\t\ttd.css({'text-align': 'center'});\n\t\tmetavec.normalise();\n\t\tdom(metavec.createSVG()).appendTo(td);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {MDLMOLReader} from '../io/MDLReader';\nimport {Molecule} from '../mol/Molecule';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {dom} from '../util/dom';\nimport {Size} from '../util/Geom';\nimport {DEGRAD, htmlToRGB} from '../util/util';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded molecule: displays a single molecular structure, with a variety of available rendering options. The structure display is static\n\tand read-only, but it can be extracted in data format. It is rendered as SVG, so that it looks good when rendered for print quality.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n        format: MIME, or shortcuts for \"molfile\" or \"sketchel\"\n        name: null/default = if molfile pull it out and display; blank = show nothing; text = show that\n        invert: boolean; inverts the coordinates (applied before rotation)\n        rotate: degrees to rotate molecule\n        padding: number of pixels to space around the molecule\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n        width, height: optional, either one (used as a maximum)\n        box: specific size to stick with (comma-separated)\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n\t\ttight: if true, reduces the padding underneath\n\n    ... these ones TBD\n        source: URL of some kind - grab the data from there (wherever user directory is)\n\n        (parameters to control interactivity?)\n*/\n\nexport class EmbedMolecule extends EmbedChemistry\n{\n\tprivate mol:Molecule = null;\n\tprivate name = '';\n\tprivate failmsg = '';\n\tprivate maxWidth = 0;\n\tprivate maxHeight = 0;\n\tprivate boxSize:Size = null;\n\tprivate tight = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private molstr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tlet mol:Molecule = null, name:string = options.name;\n\t\tif (options.format == 'sketchel' || options.format == 'chemical/x-sketchel')\n\t\t{\n\t\t\tmol = Molecule.fromString(molstr);\n\t\t}\n\t\telse if (options.format == 'molfile' || options.format == 'chemical/x-mdl-molfile')\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\tmol = mdl.parse();\n\t\t\t\tif (mol != null && name == null) name = mdl.molName;\n\t\t\t}\n\t\t\tcatch (ex) {this.failmsg = ex;}\n\t\t}\n\t\telse // free for all\n\t\t{\n\t\t\tmol = Molecule.fromString(molstr);\n\t\t\tif (mol == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\t\tmol = mdl.parse();\n\t\t\t\t\tif (mol != null && name == null) name = mdl.molName;\n\t\t\t\t}\n\t\t\t\tcatch (ex) {} // (silent when not forcing a type)\n\t\t\t}\n\t\t}\n\n\t\tif (mol == null) return;\n\n\t\tif (options.invert) mol = CoordUtil.mirrorImage(mol);\n\t\tif (options.rotate) CoordUtil.rotateMolecule(mol, options.rotate * DEGRAD);\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.width) this.maxWidth = options.width;\n\t\tif (options.height) this.maxHeight = options.height;\n\t\tif (options.box)\n\t\t{\n\t\t\tlet box:string = options.box, comma = box.indexOf(',');\n\t\t\tthis.boxSize = new Size(parseInt(box.substring(0, comma)), parseInt(box.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\n\t\tthis.mol = mol;\n\t\tthis.name = name;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM, mol = this.mol, policy = this.policy;\n\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (mol != null && mol.numAtoms > 0)\n\t\t{\n\t\t\tspan.setCSS('text-align', 'center');\n\n\t\t\tlet effects = new RenderEffects();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\tlayout.arrange();\n\n\t\t\tif (this.boxSize) layout.squeezeInto(0, 0, this.boxSize.w, this.boxSize.h);\n\t\t\telse if (this.maxWidth > 0 || this.maxHeight > 0)\n\t\t\t{\n\t\t\t\tlet bounds = layout.determineBoundary();\n\t\t\t\tlet w = bounds[2] - bounds[0], h = bounds[3] - bounds[1];\n\t\t\t\tlet limW = this.maxWidth == 0 ? w : Math.min(w, this.maxWidth);\n\t\t\t\tlet limH = this.maxHeight == 0 ? h : Math.min(h, this.maxHeight);\n\t\t\t\tif (limW != w || limH != h) layout.squeezeInto(0, 0, limW, limH);\n\t\t\t}\n\n\t\t\tlet metavec = new MetaVector();\n\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\tif (this.boxSize == null)\n\t\t\t\tmetavec.normalise();\n\t\t\telse\n\t\t\t\tmetavec.setSize(this.boxSize.w, this.boxSize.h);\n\n\t\t\tlet svg = dom(metavec.createSVG()).appendTo(span);\n\n\t\t\tif (this.name)\n\t\t\t{\n\t\t\t\tlet p = dom('<p/>').appendTo(span);\n\t\t\t\tp.css({'padding': '0.2em 0 0 0', 'margin': '0', 'width': '100%', 'color': '#606060', 'line-height': '1'});\n\t\t\t\tp.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\t\t\tp.setText(this.name);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Unable to parse molecule: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span);\n\t\t\tpre.css({'line-height': '1.1'});\n\t\t\tpre.setText(this.molstr);\n\t\t\tconsole.log('Unparseable molecule source string:\\n[' + this.molstr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM, domLegacy} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\nimport {empiricalScrollerSize, setBoundaryPixels} from '../util/util';\nimport {clearTooltip} from './Tooltip';\n\n/*\n\tPopup: a semi-transient widget that appears onscreen above all of the rest of the content. Clicking outside of the popup's\n\tarea dismisses it, but moving the mouse around does not. Functionally it's like a cross between a dialog and a tooltip.\n\n\tTo provide content, either subclass and override the populate() method, or provide a callback.\n*/\n\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\n\nexport class Popup\n{\n\tprivate parent:DOM;\n\n\t// content information that can be accessed after opening\n\tprotected domObscureBackground:DOM; // grey covering banner\t\n\tprotected domObscureForeground:DOM;\n\tprotected domPanelBoundary:DOM; // the dialog outline itself\n\tprotected domBody:DOM; // the main area, for content\n\n\tpublic popupBackground = 'white';\n\tpublic obscureOpacity = 0.2;\n\tpublic zindex:number = null; // optionally the use of zindex, to ensure it goes on top (usually not necessary)\n\tpublic callbackClose:(source?:Popup) => void = null;\n\tpublic callbackPopulate:(source?:Popup) => void = null;\n\n\tconstructor(parent:any)\n\t{\n\t\tthis.parent = domLegacy(parent);\n\n\t\tinstallInlineCSS('popup', CSS_POPUP);\n\t}\n\n\tpublic onClose(callback:(source?:Popup) => void)\n\t{\n\t\tthis.callbackClose = callback;\n\t}\n\n\t// creates all the DOM objects and shows the dialog; details such as title should be setup before calling this\n\tpublic open():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet body = dom(document.body);\n\n\t\t//let zindex = 21000;\n\n\t\tlet bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n\t\tbg.css({'position': 'fixed'/*, 'z-index': zindex*/});\n\t\tbg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tbg.css({'background-color': 'black', 'opacity': this.obscureOpacity});\n\n\t\tlet fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n\t\tfg.css({'position': 'fixed'/*, 'z-index': zindex + 1*/});\n\t\tfg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tfg.onClick(() => this.close());\n\n\t\tif (this.zindex > 0)\n\t\t{\n\t\t\tbg.setCSS('z-index', this.zindex);\n\t\t\tfg.setCSS('z-index', this.zindex + 1);\n\t\t}\n\n\t\tlet pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({'visibility': 'hidden'});\n\t\tpb.onClick((event:MouseEvent) => event.stopPropagation()); // don't let the click percolate upward to the close event\n\t\tpb.css({'background-color': this.popupBackground, 'border': '1px solid black'});\n\t\tpb.css({'position': 'absolute', 'overflow': 'auto'});\n\n\t\tthis.domBody = dom('<div/>').appendTo(pb).css({'padding': '5px'});\n\n\t\t//bg.show();\n\n\t\tthis.populate();\n\t\tthis.positionAndShow();\n\t}\n\n\t// closes and hides the dialog\n\tpublic close():void\n\t{\n\t\tclearTooltip();\n\n\t\tthis.domPanelBoundary.remove();\n\t\tthis.domObscureBackground.remove();\n\t\tthis.domObscureForeground.remove();\n\n\t\tif (this.callbackClose) this.callbackClose(this);\n\n\t\tclearTooltip();\n\t}\n\n\t// sizes may have changed, so adjust if necessary\n\tpublic bump():void\n\t{\n\t\tthis.positionAndShow();\n\t}\n\n\t// use this to obtain the parts of the dialog box intended for modification\n\tpublic bodyDOM():DOM {return this.domBody;}\n\n\t// either subclass and override this, or provide the callback\n\tprotected populate():void\n\t{\n\t\tif (this.callbackPopulate)\n\t\t\tthis.callbackPopulate(this);\n\t\telse\n\t\t\tthis.bodyDOM().setText('Empty popup.');\n\t}\n\n\t// have this called when the size may have changed, and need to update position\n\tprivate positionAndShow():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet winW = window.innerWidth, winH = window.innerHeight;\n\t\tconst GAP = 2;\n\t\tlet client = this.parent.el.getBoundingClientRect();\n\t\tlet wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n\n\t\tlet pb = this.domPanelBoundary;\n\n\t\tlet maxW = Math.max(wx1, winW - wx2) - 4;\n\t\tpb.css({'max-width': maxW + 'px'});\n\n\t\tlet scrollSize = empiricalScrollerSize();\n\n\t\tlet setPosition = ():void =>\n\t\t{\n\t\t\t//let popW = pb.width(), popH = pb.height();\n\t\t\tlet popW = this.domBody.width(), popH = this.domBody.height();\n\t\t\tlet posX = 0, posY = 0;\n\n\t\t\tif (wy2 + GAP + popH < winH) posY = wy2 + GAP;\n\t\t\telse if (wy1 - GAP - popH > 0) posY = wy1 - GAP - popH;\n\t\t\telse if (winH - wy2 > wy1)\n\t\t\t{\n\t\t\t\tposY = wy2 + GAP;\n\t\t\t\tpopH = winH - posY - GAP;\n\t\t\t}\n\t\t\telse // wy1 >= winH - wy2\n\t\t\t{\n\t\t\t\tposY = GAP;\n\t\t\t\tpopH = wy1 - posY - GAP;\n\t\t\t}\n\n\t\t\tif (pb.height() > popH) popW += scrollSize.w + 10;\n\n\t\t\tif (wx1 + popW < winW) posX = wx1;\n\t\t\telse if (popW < wx2) posX = wx2 - popW;\n\n\t\t\tsetBoundaryPixels(pb, posX, posY, popW, popH);\n\t\t\tpb.css({'visibility': 'visible'});\n\t\t};\n\n\t\tsetTimeout(() => setPosition());\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom} from '../util/dom';\nimport {eventCoords, setBoundaryPixels} from '../util/util';\nimport {Popup} from './Popup';\n\n/*\n\tProxy functionality for menus, particularly the context menu.\n*/\n\nexport interface MenuProxyContext\n{\n\tlabel:string;\n\tclick?:() => void;\n\tsubMenu?:MenuProxyContext[];\n\taccelerator?:string;\n}\n\nexport interface MenuProxyOptions\n{\n\tcallbackClose?:() => void;\n\toverrideObscureOpacity?:number;\n}\n\nexport class MenuProxy\n{\n\t// override this with true when the context menu is available\n\tpublic hasContextMenu():boolean {return false;}\n\tpublic openContextMenu(menuItems:MenuProxyContext[], event:MouseEvent, opt?:MenuProxyOptions):void {}\n}\n\n/*\n\tContext menu handler that is compatible with a vanilla web page. It is similar but not identical to the system context\n\tmenu, which is the preferred option for Electron-based apps.\n*/\n\nexport class MenuProxyWeb extends MenuProxy\n{\n\tpublic hasContextMenu():boolean {return true;}\n\tpublic openContextMenu(menuItems:MenuProxyContext[], event:MouseEvent, opt?:MenuProxyOptions):void\n\t{\n\t\tlet [x, y] = eventCoords(event, document.body);\n\t\t//let x = event.screenX, y = event.screenY;\n\t\tlet divCursor = dom('<div/>').appendTo(document.body).css({'position': 'absolute', 'user-select': 'none'});\n\t\tsetBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n\t\tlet currentFocus = dom(document.activeElement);\n\t\tlet popup = new Popup(divCursor);\n\t\tif (opt?.overrideObscureOpacity != null) popup.obscureOpacity = opt?.overrideObscureOpacity;\n \t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tpopup.bodyDOM().css({'user-select': 'none', 'font-size': '16px'});\n\t\t\tfor (let menuItem of menuItems)\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(popup.bodyDOM());\n\t\t\t\tif (menuItem == null)\n\t\t\t\t{\n\t\t\t\t\tdiv.appendHTML('<hr/>');\n\t\t\t\t}\n\t\t\t\telse if (menuItem.subMenu)\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(menuItem.label + ' \\u{25B8}');\n\t\t\t\t\tdiv.css({'cursor': 'pointer'});\n\t\t\t\t\tlet fcn = (event:MouseEvent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tpopup.close();\n\t\t\t\t\t\tthis.openContextMenu(menuItem.subMenu, event);\n\t\t\t\t\t};\n\t\t\t\t\tdiv.onClick(fcn);\n\t\t\t\t\tdiv.onContextMenu(fcn);\n\t\t\t\t}\n\t\t\t\telse if (menuItem.click)\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(menuItem.label);\n\t\t\t\t\tdiv.onMouseEnter(() => {div.css({'background-color': '#D0D0D0'});});\n\t\t\t\t\tdiv.onMouseLeave(() => {div.css({'background-color': 'transparent'});});\n\t\t\t\t\tdiv.css({'cursor': 'pointer'});\n\t\t\t\t\tdiv.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tpopup.close();\n\t\t\t\t\t\tmenuItem.click();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.css({'color': '#808080'});\n\t\t\t\t\tdiv.setText(menuItem.label);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tpopup.callbackClose = () =>\n\t\t{\n\t\t\tdivCursor.remove();\n\t\t\tcurrentFocus.grabFocus();\n\t\t\tif (opt?.callbackClose) opt?.callbackClose();\n\t\t};\n\t\tpopup.open();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from './Vec';\n\n/*\n\tPseudorandom number generator. Uses an implementation of linear congruential generator.\n*/\n\nexport class Random\n{\n\tprivate m = 0x8000000;\n\tprivate invMN = 1.0 / (this.m - 1);\n\tprivate a = 1103515245;\n\tprivate c = 5425153011;\n\tprivate state:number;\n\n\tconstructor(private seed:number = null)\n\t{\n\t\tif (seed == null)\n\t\t\tthis.state = Math.floor(Math.random() * (this.m - 1));\n\t\telse\n\t\t\tthis.state = seed;\n  \t}\n\n\t// returns a positive 31-bit integer\n\tpublic next():number\n\t{\n\t\tthis.state = (this.a * this.state + this.c) % this.m;\n\t\treturn this.state;\n\t}\n\n\t// returns an integer between 0 and max-1\n\tpublic int(max:number):number\n\t{\n\t\treturn max <= 0 ? 0 : this.next() % max;\n\t}\n\n\t// returns a floating point integer between 0 and 1\n\tpublic float():number\n\t{\n\t\treturn this.next() * this.invMN;\n\t}\n\n\t// returns a number between 0 and length-1 of the given array\n\tpublic index(arr:any[]):number\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\treturn this.int(arr.length);\n\t}\n\n\t// returns a randomly selected element from an array\n\tpublic peek<T>(arr:T[]):T\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\treturn arr[this.int(arr.length)];\n\t}\n\n\t// returns a randomly selected element from an array, and also removes it\n\tpublic pull<T>(arr:T[]):T\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\tlet idx = this.int(arr.length), val = arr[idx];\n\t\tarr.splice(idx, 1);\n\t\treturn val;\n\t}\n}\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Vec","isBlank","arr","length","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","callback","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","slice","append","item","push","prepend","unshift","concat","arr1","arr2","remove","idx","splice","flatten","mtx","ret","vec","transpose","sz1","sz2","anyArray","j","i","equals","n","equivalent","len1","compareTo","sz","Math","max","booleanArray","val","Array","fill","numberArray","stringArray","genericArray","genericBlankArrays","numberMatrix","dim1","dim2","funcArray","func","first","last","min","Number","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","constructor","sum","t","add","sub","mul","neg","setTo","addTo","mulBy","setToArray","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","b","v1","v2","sorted","this","sortedUnique","unique","uniqueUnstable","from","Set","uniqueStable","set","has","delete","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","p","parityIdentity","parityOrder","src","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","m","s","A","fromArray","clone","numRows","numCols","X","C","norm1","f","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","k","Arowi","rank","SingularValueDecomposition","cond","trace","identity","toString","lines","row","JSON","stringify","join","nu","U","V","e","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","r","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","ceil","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","sqr","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","norm2_xy","repTri","repEdge","traceOutline","Map","e1","e2","e3","edgePairs","entry","entries","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","d","norm_xy","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","id","orient","x","y","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","dx","dy","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","minArray","maxArray","phase","x1","y1","x2","y2","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","realEqual","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","fltEqual","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","theta","angleNorm","angleDiffPos","PI","angleDiff","idxSortAngles","pop","uniqueAngles","ang","thetaObtuse","th1","th2","dth","emergentAngle","bottom","behind","delta","TWOPI","dotProduct","crossProduct","affineIdentity","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","h","magnitude2","magnitude","dist2","dz","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","rad","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","RollingBall","latest","direction","visited","roll","bestIdx","bestDelta","bestTheta","next","sequencePos","posList","Pos","sequenceXY","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","w","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","getSize","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","nodeText","el","text","child","childNodes","nodeType","nodeValue","childText","parent","tagName","findElement","appendElement","name","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","nextSibling","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","firstChild","removeChild","node","nodeName","findChildElements","list","childElements","dom","DOM","parse","domLegacy","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","tag","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","ref","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","str","getCSS","style","getPropertyValue","setCSS","setProperty","css","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","attr","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","isArray","toggleClass","width","height","offset","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","size","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","safeInt","def","startsWith","parseInt","substring","isNaN","safeFloat","parseFloat","newElement","domNew","addText","plural","formatDouble","sigfig","toPrecision","endsWith","htmlToRGB","col","charAt","colourCode","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","blendRGB","fract","rgb1","rgb2","rgb3","R","G","r1","b1","r2","b2","f1","f2","round","r3","g3","b3","formatDate","date","day","getDate","mon","getMonth","year","getFullYear","isDef","notDef","eventCoords","event","container","pageX","pageY","getBoundaryPixelsDOM","getOffsetPixelsDOM","offsetLeft","offsetTop","getViewportSize","window","innerWidth","innerHeight","body","clientWidth","clientHeight","norm_xyz","norm2_xyz","signum","invZ","randomInt","random","INV_TWOPI","DEGRAD","RADDEG","th","findNode","findNodes","pathRoundedRect","path","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","coordsRoundedRect","drawLine","ctx","beginPath","stroke","ASCENT_FUDGE","fontSansSerif","ascent","pixelDensity","devicePixelRatio","data","result","deepClone","escapeHTML","map","replace","orBlank","dictValues","zip","toUTF8","stripe","charcode","charCodeAt","String","fromCharCode","fromUTF8","charCode","jsonPrettyPrint","json","trim","ch","indent","orig","repeat","KeyCode","readTextURL","url","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onload","response","onerror","send","postJSONURL","params","txt","snippet","yieldDOM","pause","seconds","staticScrollerSize","empiricalScrollerSize","outer","inner","stringSimilarityPermutations","str1","str2","ch1","ch2","len2","levenshteinDistance","cost","lev1","lev2","lev3","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromMoleculeMask","adj","atomAdjList","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","current","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","watermark","calculateGravity","wght","wmod","calculateShortestPath","MAX_SAFE_INTEGER","prev","alt","adjacencyMatrix","distanceMatrix","psize","capacity","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","hasAnyArtifacts","hasAny","getPathBlocks","keys","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","type","pick","overlap","removeAll","bits","requireRing","values","areneAtoms","best","bsum","inkeys","POLYMERBLOCK_EXTRA_POLYMER","POLYMERBLOCK_SPECIAL_UNCAPPED","PolymerBlockConnectivity","Geometry","ForeignMoleculeTransient","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","includes","unit","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","subBits","in1","in2","bonds","order","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","SketchUtil","placeNewAtom","boundary","IDEALBOND","addAtom","placeNewFragment","frag","dirX","dirY","score","mbox","fbox","vx","vy","fragPosScore","iscore","setAtomPos","atomX","atomY","ox","oy","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","div","omask","CoordUtil","overlappingAtomMask","chopmask","mx","MolUtil","arrayAtomX","my","arrayAtomY","remap","div1","div2","OVERLAP_THRESHOLD_SQ","oldN","newN","exotic","atomUnpaired","atomIsotope","ISOTOPE_NATURAL","hasAbbrev","setBondFrom","setBondTo","deleteAtomAndBonds","removeDuplicateBonds","mergeFragmentsMask","setAtomHExplicit","setAtomUnpaired","setAtomCharge","matchAngleGeometry","geom","match","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","atomBondAngles","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bondInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","rotateBond","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","atomAtPoint","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","congestionPoint","overlapsAtom","joinOverlappingAtoms","groups","groupX","groupY","adjb","atomAdjBonds","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","base","x0","y0","th3","th4","addBond","allViableDirections","bndang","proposeNewRing","rsz","snap","chunk","positionSimpleRing","proposeAtomRing","thsnap","angs","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","hasAnyAbbrev","getAbbrev","fromString","setAbbrev","attidx","ABBREV_ATTACHMENT","swapAtoms","setBondOrder","validateAbbrevs","clearAbbrev","setAtomIsotope","convertToAbbrev","srcmask","abbrevName","molidx","convertToAbbrevIndex","junction","polymerExtra","fragidx","maskmol","maskfrag","bondType","BONDTYPE_NORMAL","nadj","setAtomElement","setAtomMapNum","setAtomTransient","newmol","newatom","expandAbbrevs","alignCoords","expandOneAbbrev","expandedAbbrevs","atomMapNum","expandOneAbbrevFrag","connBond","connType","BONDTYPE_INCLINED","BONDTYPE_DECLINED","vx1","vy1","vx2","vy2","rotateMolecule","translateMolecule","setBondType","setBondFromTo","deleteBond","invidx","keepTransient","atomTransient","setBondTransient","bondTransient","subgraphWithAttachments","xmask","xmol","afact1","afact2","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","bt","arrayAtomMapNum","mapnum","removeMappings","withoutMappings","dupped","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","elements","atomHydrogens","formula","molecularWeight","mw","iso","an","elementAtomicNumber","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","HYVALENCE_EL","createHydrogens","position","atomVec3","is3D","atomZ","atomOxidationState","nonMetal","oxstate","bo","bondOther","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","my1","mx2","my2","bestdsq","j1","j2","sketchMappable","thresh","threshSQ","d1","overlappingAtomList","approach","congestionMolecule","rotateAtoms","angleNeighbours","mergeAtoms","normaliseBondDistances","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","setAtomX","alignOrientFlip","deltaA","deltaB","dthA","dthB","scoreA","scoreB","setAtomY","atomIsWeirdLinear","ForeignMolecule","noteAromaticAtoms","AtomAromatic","noteAromaticBonds","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","filter","tr","AtomExplicitValence","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","some","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","comma","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","stash","createRacemic","createRelative","removeRacemic","removeRelative","hasWedge","BONDTYPE_UNKNOWN","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","line","version","parseV3000","z","chg","stereo","hyd","setAtomZ","setIs3D","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","appendBondTransient","superatoms","mixtures","anum","stype","index","bracketType","mix","sup","templateClass","connectType","minRep","maxRep","nbr1","nbr2","logic","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","AtomSCSRClass","undefined","options","hcount","usedValence","unp","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","rglist","unpackList","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","stereoGroup","withoutQuotes","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","subsumed","poly","b4","header","mdl","segments","seg","depth","quote","bit","MDLSDFReader","ds","DataSheet","upcastColumns","parseStream","upcastStringColumns","appendColumn","colName","rn","appendRow","setMolecule","setString","str3","changeColumnName","colDescr","title","cn","findColByName","setToNull","colType","allnull","allreal","allint","allbool","isNull","getString","lc","toLowerCase","int","changeColumnType","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","write","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","partialAbbrevExpansion","prepareSgroups","atomList1","atomList2","intrpad","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","rpad","toFixed","qhyd","mdlValence","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","optVal","ma","dat","bestSize","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","firstColOfType","getMolecule","wtr","notNull","ct","getInteger","getReal","getBoolean","escape","writeKeyVals","keyvals","multiline","kv","readNextChunk","term","mandatory","end","Error","escaped","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","readNativeLegacy","MSG_PREMATURE","MSG_UNEXPECTED","parseIntHard","parseFloatHard","applyAtomProperty","appendAtomExtra","applyBondProperty","appendBondExtra","lnum","chunkEl","chunkX","chunkY","chunkFrom","chunkTo","chunkOrder","hdr","skUnescape","frto","writeNative","formatV2Elements","writeNativeLegacy","roundedNumber","typ","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","transi","HYVALENCE_VAL","adjBonds","atomExplicit","atomRingBlock","buildGraph","buildRingID","atomConnComp","buildConnComp","tx1","tx2","getAtomCloned","getBondCloned","setAtom","curr","setBond","modifyAtoms","lambda","modifyAtomsIndices","atomIndices","modifyBonds","modifyBondsIndices","bondIndices","findAtomMatch","findBondMatch","findAllAtoms","findAllBonds","mapAtoms","mapBonds","mapAtomsIndices","mapBondsIndices","comp","DataSheetColumn","PREFIX_EXTRA","PREFIX_TRANSIENT","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","descr","getExtend","getObject","datum","getMoleculeClone","getMoleculeBlank","setObject","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","insertColumn","deleteColumn","newType","oldType","incompatible","ensureColumn","reorderColumns","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","toInt","toReal","Aspect","allowModify","subordinateCodes","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","policy","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AspectList","present","absent","codes","instantiate","supp","enumerate","aspects","aspectName","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","super","setup","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","getName","COLNAME_NAME","COLNAME_VALUE","NaN","getError","COLNAME_ERROR","err","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","error","rel","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","BayesianSourceModel","colNameMolecule","colNameValue","thresholdValue","thresholdRelation","folding","noteField","noteTitle","noteOrigin","noteComment","BayesianSource","isBayesianSource","getModels","models","setModels","BayesianPredictionModel","BayesianPredictionOutcome","BayesianPrediction","isBayesianPrediction","colMolecule","colRaw","colScaled","colArcTan","colDomain","colAtoms","isOffTarget","getOutcome","model","outcome","raw","scaled","arctan","domain","strAtoms","setOutcome","MeasurementData","isMeasurementData","fields","effectHeader","ensureFields","rename","fldidx","newName","oldName","sfx","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","field","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","colidx","uri","defnURI","resv","colField","BinaryDataField","BinaryData","isBinaryData","getFields","setFields","getDestValue","getSourceValue","colNameSource","colNameDest","ExperimentMetaType","ExperimentMetaApplic","ExperimentMetaValue","ExperimentMetaRoleType","QuantityCalcRole","QuantityCalcStat","RenderMnemonicType","BLineType","ArrangeComponentType","ArrangeComponentAnnot","TextAlign","PrimClass","ExperimentComponentType","MixtureAttributeType","DotPathBond","DotPathCharge","ExperimentMeta","unpackMeta","vtype","VALUES","Optional","l1","l2","localeCompare","packMeta","withMetaKey","metastr","describeMeta","formatFloat","maxSigFig","digits","log10","Role","Pressure","TurnoverNumber","EnantiomericExcess","Time","mins","Heat","Light","APPLICABILITY","Reagent","Reactant","Product","Step","NAMES","UNITS","QuantityCalcComp","step","role","molw","valueEquiv","statEquiv","valueMass","QuantityCalc","UNSPECIFIED","statMass","valueVolume","statVolume","valueMoles","statMoles","valueDensity","statDensity","valueConc","statConc","valueYield","statYield","GreenMetrics","massReact","massProd","massWaste","massProdWaste","molwReact","molwProd","impliedWaste","isStoichZero","stoich","isStoichUnity","numer","denom","extractStoichFraction","extractStoichValue","stoichAsRatio","stoichFractAsRatio","MAX_DENOM","RATIO_FRACT","whole","resid","bestDiff","bestOver","bestUnder","impliedReagentStoich","reagent","products","pstoich","rmol","highest","total","pmol","pcount","rcount","componentRatio","reactants","steps","den","reagents","bigDenom","ratioReactants","ratioReagents","ratioProducts","quantities","primaryMoles","idxPrimary","idxYield","allMassReact","allMassProd","allMassWaste","greenMetrics","calculate","classifyTypes","calculateSomething","qc","waste","calculateGreenMetrics","numQuantities","getQuantity","getAllQuantities","numGreenMetrics","getGreenMetrics","getAllGreenMetrics","getAllMassReact","getAllMassProd","getAllMassWaste","findComponent","formatMolWeight","formatMass","formatVolume","formatMoles","formatDensity","formatConc","formatPercent","formatEquiv","equiv","primary","mass","volume","moles","density","conc","yield","calcMoles","closeEnough","isSoln","calcVolume","hasRef","numSteps","primaryCounts","primaryEquivs","refMoles","prodMolar","yld","calcYield","gm","value1","value2","ratio","PseudoEmbedding","bondMask","crossings","calculateCrossings","maskCross","bond1","bond2","higher","crossRblk","maskComp","connectMaskedComponents","ccgrp","embedComponent","imask","gmol","maskNever","amask","newZ","seedFromInternalWedges","seedFromExternalWedges","seedFromPerspective","seedFromDensity","ucount","normaliseHeights","expandOutward","ncount","cross","updateCrossing","success","avgdist","maxdist","highIdx","highCongest","congest","prevZ","mark","bfr1","bto1","bfr2","bto2","idx3","idx4","x1a","y1a","x1b","y1b","x2a","y2a","x2b","y2b","xy","dx1","dy1","dx2","dy2","ext1","ext2","z1a","z1b","z2a","z1","z2","FitRotatedEllipse","margin","stop","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","sanity","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","measureText","main","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","foreground","background","atomCols","defaultBlackOnWhite","pixPerAng","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonics","encoded","items","details","coords","serialise","coord","packWithCoords","packWithoutCoords","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","unsplitLines","wantArtifacts","wantCrossings","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","setWantCrossings","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","head","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","emb","resolveLineCrossings","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","getUnsplitLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","padding","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","oth","bth","boxOverlaps","pointmask","linemask","wx1","wy1","wx2","wy2","bondHigher","bondLower","TYPES","stashOriginals","linesHigher","linesLower","ix","iy","pt","isRegular","regDist","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","ArrangeComponent","annot","None","monochromeColour","metaInfo","srcIdx","leftNumer","leftDenom","fszText","fszLeft","ArrangeExperiment","components","limitTotalW","limitTotalH","limitStructW","limitStructH","includeReagents","includeNames","includeStoich","includeAnnot","includeBlank","includeDetails","includeAtomMap","colourAtomMap","allowVertical","fauxComponents","extraText","includeExtraText","createComponents","xc","Plus","Arrow","lw","lh","COMP_GAP_LEFT","COMP_ANNOT_SIZE","bend","vert","trial","arrangeComponents","scoreArrangement","numComponents","getComponent","getComponents","scaleComponents","modScale","toExpType","compType","createSegregator","createReactant","createBlank","any","createReagent","createStepMeta","createProduct","fc","createFauxComponent","wordWrapName","supplementText","slash","Primary","Implied","Waste","meta","StepNote","colour","comps","bendStep","vertComp","blkMain","blkArrow","szMain","szArrow","midMain","midArrow","gatherBlock","arrangeMainBlock","findMidBlock","bent","arrangeVerticalArrowBlock","arrangeHorizontalArrowBlock","midH","arrowX","originateBlock","lowX","block","arrow","mid","arrowPlaced","minLimW","limW","wrap","nclean","wsz","trimLeft","tryLines","tryClean","OutlineMeasurement","offsetX","offsetY","invScale","xToAng","yToAng","pixelCoord","exec","SpoolSVG","prettyPrint","spool","inc","dec","MetaVector","types","prims","charMissing","lowY","highX","highY","charMask","primClass","Text","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","layout","vg","mnemonics","getMetaVector","getLayout","draw","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","radius","nudge","DrawExperiment","preDrawComponent","preDrawMolecule","postDrawMolecule","molDrawn","drawSymbolArrow","drawSymbolPlus","drawComponent","totalH","stoichPos","wad1","wad2","lx","useW","drawAnnotation","baseY","usePolicy","arrmol","calculateMoleculeBaseline","drawArrow","inset","quart","headsz","linesz","hx","ExperimentComponent","ExperimentStep","ExperimentEntry","createDate","modifyDate","doi","getTime","Experiment","isExperiment","CODE_RXN","CODE_YLD","COLUMN_DESCRIPTIONS","COLNAME_EXPERIMENT_TITLE","COLNAME_EXPERIMENT_CREATEDATE","COLNAME_EXPERIMENT_MODIFYDATE","COLNAME_EXPERIMENT_DOI","COLNAME_EXPERIMENT_META","COLNAME_STEP_META","COLNAME_REACTANT_MOL","COLNAME_REACTANT_NAME","COLNAME_REACTANT_STOICH","COLNAME_REACTANT_MASS","COLNAME_REACTANT_VOLUME","COLNAME_REACTANT_MOLES","COLNAME_REACTANT_DENSITY","COLNAME_REACTANT_CONC","COLNAME_REACTANT_PRIMARY","COLNAME_REACTANT_META","COLNAME_REAGENT_MOL","COLNAME_REAGENT_NAME","COLNAME_REAGENT_EQUIV","COLNAME_REAGENT_MASS","COLNAME_REAGENT_VOLUME","COLNAME_REAGENT_MOLES","COLNAME_REAGENT_DENSITY","COLNAME_REAGENT_CONC","COLNAME_REAGENT_META","COLNAME_PRODUCT_MOL","COLNAME_PRODUCT_NAME","COLNAME_PRODUCT_STOICH","COLNAME_PRODUCT_MASS","COLNAME_PRODUCT_VOLUME","COLNAME_PRODUCT_MOLES","COLNAME_PRODUCT_DENSITY","COLNAME_PRODUCT_CONC","COLNAME_PRODUCT_YIELD","COLNAME_PRODUCT_WASTE","COLNAME_PRODUCT_META","isFirstStep","numberOfSteps","getEntry","Date","nreactants","nproducts","nreagents","countComponents","fetchReactant","fetchProduct","fetchReagent","setEntry","putEntry","addEntry","insertEntry","deleteEntry","idxRxn","idxYld","idxExp","extRxn","extYld","extExp","parseReactionMetaData","NAME_RXN","NAME_YLD","forceColumn","forceReactantColumns","forceReagentColumns","forceProductColumns","suffix","useName","preactants","pproducts","preagents","oldSteps","newSteps","curTime","ALL_COLUMN_LITERALS","ALL_COLUMN_PREFIXES","metavec","Mixture","isMixture","attributes","column","info","SARTable","isSARTable","construct","locked","scaffold","substNames","substituents","subst","colConstruct","colLocked","colScaffold","colSubst","createSubstituents","tobeAdded","DESCR_SUBSTITUENT","isAttachment","metadata","DESCR_CONSTRUCT","DESCR_LOCKED","DESCR_SCAFFOLD","used","reserved","RENDER_CONSTRUCT","m1","m2","RENDER_SCAFFOLD","isDefined","RENDER_SUBSTITUENT","sname","scaff","DotPath","maskBlock","getBondOrders","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","create","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","hash","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","hashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","BayesianModel","classType","numActive","inHash","training","activity","contribs","lowThresh","highThresh","invRange","estimates","rocX","rocY","rocType","rocAUC","trainingSize","trainingActives","atomicSlopeA","atomicInterceptB","truthTP","truthFP","truthTN","truthFN","precision","recall","specificity","statF1","statKappa","statMCC","noteComments","addMolecule","build","invSz","P_AT","hashStr","AT","Pcorr","P","log","predictMolecule","predictFP","scalePredictor","pred","scaleArcTan","INVPI","atan","calculateOverlap","calculateOverlapFP","calculateAtomPredictors","atomic","predHashes","cover","determineCoverage","invN","stdDev","validateLeaveOneOut","singleLeaveOneOut","calculateROC","calculateTruth","validateFiveFold","validateNfold","validateThreeFold","clearTraining","fpname","comment","deserialise","readLine","PTN_HASHLINE","RegExp","exclActive","exclSet","invSzN","nsegs","segContribs","buildPartial","estimatePartial","ih","segContrib","thresholds","rocT","posTrue","posFalse","ipos","invPos","invNeg","calibrateThresholds","gx","gy","DIST","actual","predicted","TP","FP","TN","FN","invSize","P0","Pe","mccOver","mccUnder","midThresh","idxX","idxY","approvedHashes","collectFP","BuildSMILES","generate","walkSequence","findLinks","assemble","invseq","inPlay","cur","smiles","NON_ESCAPED","DataSheetStream","readXML","root","summary","extRoot","extList","colList","rowidx","readJSON","writeXML","extension","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_SOURCE","AbbrevContainer","abbrevs","getTemplateKeys","getTemplateData","needsSetup","setupData","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","post","FormatList","FMT_NATIVE","FMT_XMLDS","FMT_MDLMOL","FMT_MDLSDF","FMT_MDLRDF","FMT_MDLRXN","GFX_PNG","GFX_PNGZIP","GFX_SVG","GFX_SVGZIP","GFX_PDF","GFX_PDFZIP","GFX_EPS","GFX_HTML","GFX_OPENDOC_ODG","GFX_OPENDOC_ODT","GFX_OPENDOC_ODS","GFX_OOXML_DOCX","GFX_OOXML_XLSX","FORMAT_DESCR","FORMAT_EXTN","FORMAT_MIMETYPE","globalInstance","ONTOLOGY_SOURCE","OntologyTree","getOntologyKeys","getOntologyData","roots","mapTerms","alreadyLoaded","init","loadFromString","getRoots","hasTerm","getBranch","getBranchList","accumulate","branch","loadContent","termList","debugString","emit","Theme","initWebMolKit","resourcePath","RESOURCE_URL","installInlineCSS","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","composeMainCSS","BASE_URL","cssTagsInstalled","hasInlineCSS","CSS_TOOLTIP","globalTooltip","globalPopWatermark","addTooltip","bodyHTML","titleHTML","widget","tooltip","Tooltip","addTooltipPromise","bodyCallback","raiseToolTip","avoid","clearTooltip","domTooltip","raise","class","zindex","zIndex","hasTitle","hasBody","winW","winH","boundDiv","popW","popH","posX","posY","setPosition","checkParent","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","beenClosed","callbackClose","callbackShown","onClose","onShown","bg","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","populate","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","Widget","contentDOM","domContent","tagType","render","ButtonViewPosition","ActivityType","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","stack","display","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","mnemonic","keyText","imageFN","oldWidth","oldHeight","isSubMenu","path1","path2","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","batch","resolveClashes","ligAtom","mchg","lchg","idxAttach","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","srcidx","sourceIndex","permuteAtom","timeStart","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","MoleculeActivity","input","param","owner","toClipboard","output","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","_","fragmask","fusion","isVertical","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","btn","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","menu","accelerator","click","editCurrent","maybeAppend","canAlwaysGet","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","activ","molact","DraggingTool","DrawCanvasDecoration","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","pair","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","GeomWidgetType","GeomWidgetSelType","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","ClipboardProxy","handlers","triggerBackupPaste","pushHandler","handler","popHandler","currentHandler","triggerCopy","execCommand","triggerPaste","getStringDirect","setImage","blob","canSetHTML","downloadString","fn","ClipboardProxyWeb","lastContent","fakeTextArea","busy","wnd","clipboardData","consumed","fallbackWorkaround","scrollTop","select","clipboard","writeText","then","ClipboardItem","OptionList","htmlLabels","selidx","buttonDiv","auxCell","isDisabled","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","setDisabled","updateButtons","table","td","clickButton","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","outline","panel","rotateSelected","ExtraFieldsWidget","divFields","fillTable","divButtons","getExtraFields","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","selected","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","hiX","loY","hiY","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","divFlex","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umol","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","ToolBankItem","TOOLS_MAIN","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","EmbedReactionFacet","Sketcher","plugins","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","callbackSpecialPaste","dlg","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","bound","ctrlArrowKey","sproutDirection","launchComposeFragment","callbackComposeFragment","clickObj","interactStart","interactEnd","interactDrag","view","nomod","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","files","SUFFIXES","MIMES","getAsString","console","reader","FileReader","readAsText","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","EditCompound","callbackSave","onSave","getSketcher","btnClear","btnCopy","actionCopy","btnSave","skdiv","actionCut","actionPaste","actionUndo","actionRedo","AxisLabeller","minVal","maxVal","textWidth","inverse","notches","loT","hiT","bumpLess","bumpMore","t3","t4","t5","t6","p3","p4","p5","p6","loVal","hiVal","formatNumber","EmbedChemistry","backgroundCol1","backgroundCol2","clearBackground","setBackground","setBackgroundGradient","bg1","bg2","cols","EmbedCollection","datastr","failmsg","tight","encoding","atob","format","scheme","span","determineColumns","blksz","aspect","spec","renderPrimitive","renderTextAspect","renderGraphicAspect","claimed","rend","ahref","EmbedMolecule","boxSize","invert","EmbedReaction","facet","xs","maximumwidth","stoichiometry","annotations","HEADER","renderHeader","SCHEME","renderScheme","QUANTITY","renderQuantity","METRICS","renderMetrics","toLocaleString","doiToLink","quant","renderComponentText","stat","combineQuant","sumQuant","pmi1","pmi2","pmi3","sumQuantExt","drawTotals","para","ef1","ef2","ef3","ae1","ae2","ae3","requireSomething","sum1","sum2","heading","over","under","answer","sep","wadHeading","wadOver","wadUnder","wadAnswer","wadSep","PTN_DOI1","PTN_DOI2","PTN_ISBN","Popup","popupBackground","obscureOpacity","callbackPopulate","positionAndShow","client","scrollSize","MenuProxy","hasContextMenu","menuItems","MenuProxyWeb","divCursor","currentFocus","popup","overrideObscureOpacity","menuItem","fcn","seed","invMN","float","peek","pull"],"sourceRoot":""}