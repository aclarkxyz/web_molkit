{"version":3,"file":"webmolkit-validate.js","mappings":"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G,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YAC/I,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;SAC1D,CAAC;QACK,gBAAW,GAClB;YACC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAChJ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAChJ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACnJ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;YACpJ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAClJ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAChJ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,E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KAAK,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC;YAChJ,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,KAAK,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC;YAChJ,CAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC;YACzH,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC,EAAE,EAAC,GAAG,EAAC,KAAK,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,GA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AAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACjJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;SAC1I,CAAC;QACK,YAAO,GACd;YACC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChpJ,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ;YAC/I,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ;YACpJ,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAChpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACpJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACpE,CAAC;QACK,WAAM,GACb;YACC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAClJ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YACnJ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;YAClJ,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACnJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;YACpJ,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;YAChJ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YACpJ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,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AACd,mBAAS,GAAG,CAAC,CAAC;AACd,mBAAS,GAAG,CAAC,CAAC;AACd,mBAAS,GAAG,CAAC,CAAC;AACd,mBAAS,GAAG,CAAC,CAAC;AACd,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,mBAAS,GAAG,EAAE,CAAC;AACf,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAA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","sources":["webpack://WebMolKit/./res/data/ontology/units.onto","webpack://WebMolKit/./res/data/templates/aminoacids.ds","webpack://WebMolKit/./res/data/templates/biomolecules.ds","webpack://WebMolKit/./res/data/templates/cagecmplx.ds","webpack://WebMolKit/./res/data/templates/crownethers.ds","webpack://WebMolKit/./res/data/templates/funcgrp.ds","webpack://WebMolKit/./res/data/templates/largerings.ds","webpack://WebMolKit/./res/data/templates/ligbident.ds","webpack://WebMolKit/./res/data/templates/ligmonodent.ds","webpack://WebMolKit/./res/data/templates/ligmultident.ds","webpack://WebMolKit/./res/data/templates/ligtrident.ds","webpack://WebMolKit/./res/data/templates/nonplrings.ds","webpack://WebMolKit/./res/data/templates/protgrp.ds","webpack://WebMolKit/./res/data/templates/rings.ds","webpack://WebMolKit/./res/data/templates/saccharides.ds","webpack://WebMolKit/./res/data/templates/termgrp.ds","webpack://WebMolKit/./res/img/actions/AtomAbbrev.svg","webpack://WebMolKit/./res/img/actions/AtomClearAbbrev.svg","webpack://WebMolKit/./res/img/actions/AtomDBlock.svg","webpack://WebMolKit/./res/img/actions/AtomExpandAbbrev.svg","webpack://WebMolKit/./res/img/actions/AtomFBlock.svg","webpack://WebMolKit/./res/img/actions/AtomFormula.svg","webpack://WebMolKit/./res/img/actions/AtomInline.svg","webpack://WebMolKit/./res/img/actions/AtomMinus.svg","webpack://WebMolKit/./res/img/actions/AtomNoble.svg","webpack://WebMolKit/./res/img/actions/AtomPBlock.svg","webpack://WebMolKit/./res/img/actions/AtomPlus.svg","webpack://WebMolKit/./res/img/actions/AtomSBlock.svg","webpack://WebMolKit/./res/img/actions/BondAddTwo.svg","webpack://WebMolKit/./res/img/actions/BondArtifactArene.svg","webpack://WebMolKit/./res/img/actions/BondArtifactClear.svg","webpack://WebMolKit/./res/img/actions/BondArtifactPath.svg","webpack://WebMolKit/./res/img/actions/BondArtifactRing.svg","webpack://WebMolKit/./res/img/actions/BondDown.svg","webpack://WebMolKit/./res/img/actions/BondFour.svg","webpack://WebMolKit/./res/img/actions/BondInsert.svg","webpack://WebMolKit/./res/img/actions/BondLinear.svg","webpack://WebMolKit/./res/img/actions/BondMetalLigate.svg","webpack://WebMolKit/./res/img/actions/BondOcta1.svg","webpack://WebMolKit/./res/img/actions/BondOcta2.svg","webpack://WebMolKit/./res/img/actions/BondOne.svg","webpack://WebMolKit/./res/img/actions/BondPolymer.svg","webpack://WebMolKit/./res/img/actions/BondQAny.svg","webpack://WebMolKit/./res/img/actions/BondRotate.svg","webpack://WebMolKit/./res/img/actions/BondSqPlan.svg","webpack://WebMolKit/./res/img/actions/BondSquig.svg","webpack://WebMolKit/./res/img/actions/BondSwitch.svg","webpack://WebMolKit/./res/img/actions/BondTetra1.svg","webpack://WebMolKit/./res/img/actions/BondTetra2.svg","webpack://WebMolKit/./res/img/actions/BondThree.svg","webpack://WebMolKit/./res/img/actions/BondTrigonal.svg","webpack://WebMolKit/./res/img/actions/BondTwo.svg","webpack://WebMolKit/./res/img/actions/BondUp.svg","webpack://WebMolKit/./res/img/actions/BondZero.svg","webpack://WebMolKit/./res/img/actions/GenericAccept.svg","webpack://WebMolKit/./res/img/actions/MainAtom.svg","webpack://WebMolKit/./res/img/actions/MainBond.svg","webpack://WebMolKit/./res/img/actions/MainCopy.svg","webpack://WebMolKit/./res/img/actions/MainCut.svg","webpack://WebMolKit/./res/img/actions/MainDelete.svg","webpack://WebMolKit/./res/img/actions/MainMove.svg","webpack://WebMolKit/./res/img/actions/MainNew.svg","webpack://WebMolKit/./res/img/actions/MainPaste.svg","webpack://WebMolKit/./res/img/actions/MainRedo.svg","webpack://WebMolKit/./res/img/actions/MainSelAll.svg","webpack://WebMolKit/./res/img/actions/MainSelNext.svg","webpack://WebMolKit/./res/img/actions/MainSelNone.svg","webpack://WebMolKit/./res/img/actions/MainSelPrev.svg","webpack://WebMolKit/./res/img/actions/MainSelSide.svg","webpack://WebMolKit/./res/img/actions/MainSelect.svg","webpack://WebMolKit/./res/img/actions/MainUndo.svg","webpack://WebMolKit/./res/img/actions/MainZoomFit.svg","webpack://WebMolKit/./res/img/actions/MainZoomIn.svg","webpack://WebMolKit/./res/img/actions/MainZoomOut.svg","webpack://WebMolKit/./res/img/actions/MoveDown.svg","webpack://WebMolKit/./res/img/actions/MoveDownFar.svg","webpack://WebMolKit/./res/img/actions/MoveDownLots.svg","webpack://WebMolKit/./res/img/actions/MoveGrow.svg","webpack://WebMolKit/./res/img/actions/MoveHFlip.svg","webpack://WebMolKit/./res/img/actions/MoveJoin.svg","webpack://WebMolKit/./res/img/actions/MoveLeft.svg","webpack://WebMolKit/./res/img/actions/MoveLeftFar.svg","webpack://WebMolKit/./res/img/actions/MoveLeftLots.svg","webpack://WebMolKit/./res/img/actions/MoveRight.svg","webpack://WebMolKit/./res/img/actions/MoveRightFar.svg","webpack://WebMolKit/./res/img/actions/MoveRightLots.svg","webpack://WebMolKit/./res/img/actions/MoveRotM01.svg","webpack://WebMolKit/./res/img/actions/MoveRotM05.svg","webpack://WebMolKit/./res/img/actions/MoveRotM15.svg","webpack://WebMolKit/./res/img/actions/MoveRotM30.svg","webpack://WebMolKit/./res/img/actions/MoveRotP01.svg","webpack://WebMolKit/./res/img/actions/MoveRotP05.svg","webpack://WebMolKit/./res/img/actions/MoveRotP15.svg","webpack://WebMolKit/./res/img/actions/MoveRotP30.svg","webpack://WebMolKit/./res/img/actions/MoveShrink.svg","webpack://WebMolKit/./res/img/actions/MoveUp.svg","webpack://WebMolKit/./res/img/actions/MoveUpFar.svg","webpack://WebMolKit/./res/img/actions/MoveUpLots.svg","webpack://WebMolKit/./res/img/actions/MoveVFlip.svg","webpack://WebMolKit/./res/img/actions/SelectionChain.svg","webpack://WebMolKit/./res/img/actions/SelectionCurElement.svg","webpack://WebMolKit/./res/img/actions/SelectionGrow.svg","webpack://WebMolKit/./res/img/actions/SelectionRingBlk.svg","webpack://WebMolKit/./res/img/actions/SelectionShrink.svg","webpack://WebMolKit/./res/img/actions/SelectionSmRing.svg","webpack://WebMolKit/./res/img/actions/SelectionToggle.svg","webpack://WebMolKit/./res/img/actions/SelectionUncurrent.svg","webpack://WebMolKit/./res/img/actions/TemplateNext.svg","webpack://WebMolKit/./res/img/actions/TemplatePrev.svg","webpack://WebMolKit/./res/img/actions/ToolArom.svg","webpack://WebMolKit/./res/img/actions/ToolDrag.svg","webpack://WebMolKit/./res/img/actions/ToolErasor.svg","webpack://WebMolKit/./res/img/actions/ToolPan.svg","webpack://WebMolKit/./res/img/actions/ToolRing.svg","webpack://WebMolKit/./res/img/actions/ToolRotate.svg","webpack://WebMolKit/./res/img/actions/ToolSelect.svg","webpack://WebMolKit/./dist/index-src.ts","webpack://WebMolKit/./src/aspect/Aspect.ts","webpack://WebMolKit/./src/aspect/AspectList.ts","webpack://WebMolKit/./src/aspect/AssayProvenance.ts","webpack://WebMolKit/./src/aspect/BayesianPrediction.ts","webpack://WebMolKit/./src/aspect/BayesianSource.ts","webpack://WebMolKit/./src/aspect/BinaryData.ts","webpack://WebMolKit/./src/aspect/Experiment.ts","webpack://WebMolKit/./src/aspect/MeasurementData.ts","webpack://WebMolKit/./src/aspect/Mixture.ts","webpack://WebMolKit/./src/aspect/SARTable.ts","webpack://WebMolKit/./src/calc/BayesianModel.ts","webpack://WebMolKit/./src/calc/BuildSMILES.ts","webpack://WebMolKit/./src/calc/CircularFingerprints.ts","webpack://WebMolKit/./src/calc/ResonanceRemover.ts","webpack://WebMolKit/./src/data/AbbrevContainer.ts","webpack://WebMolKit/./src/data/FormatList.ts","webpack://WebMolKit/./src/data/OntologyTree.ts","webpack://WebMolKit/./src/dialog/Dialog.ts","webpack://WebMolKit/./src/dialog/EditCompound.ts","webpack://WebMolKit/./src/ds/DataSheet.ts","webpack://WebMolKit/./src/gfx/ArrangeExperiment.ts","webpack://WebMolKit/./src/gfx/ArrangeMeasurement.ts","webpack://WebMolKit/./src/gfx/ArrangeMolecule.ts","webpack://WebMolKit/./src/gfx/AxisLabeller.ts","webpack://WebMolKit/./src/gfx/DrawExperiment.ts","webpack://WebMolKit/./src/gfx/DrawMolecule.ts","webpack://WebMolKit/./src/gfx/FontData.ts","webpack://WebMolKit/./src/gfx/MetaVector.ts","webpack://WebMolKit/./src/gfx/Rendering.ts","webpack://WebMolKit/./src/io/DataSheetStream.ts","webpack://WebMolKit/./src/io/MDLReader.ts","webpack://WebMolKit/./src/io/MDLWriter.ts","webpack://WebMolKit/./src/io/MoleculeStream.ts","webpack://WebMolKit/./src/mol/BondArtifact.ts","webpack://WebMolKit/./src/mol/Chemistry.ts","webpack://WebMolKit/./src/mol/CoordUtil.ts","webpack://WebMolKit/./src/mol/DotPath.ts","webpack://WebMolKit/./src/mol/ForeignMolecule.ts","webpack://WebMolKit/./src/mol/Graph.ts","webpack://WebMolKit/./src/mol/MetaMolecule.ts","webpack://WebMolKit/./src/mol/MolUtil.ts","webpack://WebMolKit/./src/mol/Molecule.ts","webpack://WebMolKit/./src/mol/PolymerBlock.ts","webpack://WebMolKit/./src/mol/QueryUtil.ts","webpack://WebMolKit/./src/mol/SketchUtil.ts","webpack://WebMolKit/./src/mol/StereoGroup.ts","webpack://WebMolKit/./src/mol/Stereochemistry.ts","webpack://WebMolKit/./src/rxn/ExperimentMeta.ts","webpack://WebMolKit/./src/rxn/QuantityCalc.ts","webpack://WebMolKit/./src/sketcher/CommandBank.ts","webpack://WebMolKit/./src/sketcher/ContextSketch.ts","webpack://WebMolKit/./src/sketcher/DrawCanvas.ts","webpack://WebMolKit/./src/sketcher/EditAtom.ts","webpack://WebMolKit/./src/sketcher/EditBond.ts","webpack://WebMolKit/./src/sketcher/EditPolymer.ts","webpack://WebMolKit/./src/sketcher/ExtraFieldsWidget.ts","webpack://WebMolKit/./src/sketcher/GeomWidget.ts","webpack://WebMolKit/./src/sketcher/MetalLigate.ts","webpack://WebMolKit/./src/sketcher/MoleculeActivity.ts","webpack://WebMolKit/./src/sketcher/PeriodicTableWidget.ts","webpack://WebMolKit/./src/sketcher/QueryFieldsWidget.ts","webpack://WebMolKit/./src/sketcher/Sketcher.ts","webpack://WebMolKit/./src/sketcher/TemplateBank.ts","webpack://WebMolKit/./src/sketcher/TemplateFusion.ts","webpack://WebMolKit/./src/sketcher/ToolBank.ts","webpack://WebMolKit/./src/ui/ButtonBank.ts","webpack://WebMolKit/./src/ui/ButtonView.ts","webpack://WebMolKit/./src/ui/ClipboardProxy.ts","webpack://WebMolKit/./src/ui/EmbedChemistry.ts","webpack://WebMolKit/./src/ui/EmbedCollection.ts","webpack://WebMolKit/./src/ui/EmbedMolecule.ts","webpack://WebMolKit/./src/ui/EmbedReaction.ts","webpack://WebMolKit/./src/ui/MenuProxy.ts","webpack://WebMolKit/./src/ui/OptionList.ts","webpack://WebMolKit/./src/ui/Popup.ts","webpack://WebMolKit/./src/ui/TabBar.ts","webpack://WebMolKit/./src/ui/Tooltip.ts","webpack://WebMolKit/./src/ui/Widget.ts","webpack://WebMolKit/./src/util/FitRotatedEllipse.ts","webpack://WebMolKit/./src/util/Geom.ts","webpack://WebMolKit/./src/util/Matrix.ts","webpack://WebMolKit/./src/util/Random.ts","webpack://WebMolKit/./src/util/Theme.ts","webpack://WebMolKit/./src/util/Triangulation2D.ts","webpack://WebMolKit/./src/util/Vec.ts","webpack://WebMolKit/./src/util/XML.ts","webpack://WebMolKit/./src/util/dom.ts","webpack://WebMolKit/./src/util/util.ts","webpack://WebMolKit/./val/src/Validation.ts","webpack://WebMolKit/./val/src/ValidationHeadlessBasic.ts","webpack://WebMolKit/./val/src/ValidationHeadlessMolecule.ts","webpack://WebMolKit/./val/src/ValidationHeadlessReaction.ts","webpack://WebMolKit/./val/src/WebValExec.ts","webpack://WebMolKit/webpack/bootstrap","webpack://WebMolKit/webpack/runtime/define property getters","webpack://WebMolKit/webpack/runtime/hasOwnProperty shorthand","webpack://WebMolKit/webpack/runtime/make namespace object","webpack://WebMolKit/./dist/index-val.ts"],"sourcesContent":["export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 70,181.11523 13.227539,0 16.743164,44.64844 16.831057,-44.64844 13.22754,0 0,65.61036 -8.65723,0 0,-57.61231 -16.91894,45 -8.920903,0 -16.918946,-45 0,57.61231 -8.613281,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7008\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 109.11328,107.96387 q 2.85645,0.96679 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 l 9.00879,17.92969 -9.53613,0 -8.39356,-16.83106 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.305668,-2.15332 l -9.667969,0 0,27.7295 -8.876953,0 0,-65.610356 20.039062,0 q 11.249998,0 16.787108,4.702149 5.53711,4.702148 5.53711,14.194336 0,6.196289 -2.90039,10.283201 -2.85644,4.08692 -8.34961,5.66895 z m -22.236327,-27.553714 0,23.291014 11.162109,0 q 6.416018,0 9.667968,-2.94433 3.2959,-2.988285 3.2959,-8.745121 0,-5.756836 -3.2959,-8.657227 -3.25195,-2.944336 -9.667968,-2.944336 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7017\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 191.65039,72 9.53613,0 16.30371,24.389648 L 233.88184,72 l 9.53613,0 -21.09375,31.50879 22.5,34.10156 -9.53613,0 -18.45704,-27.90527 -18.58886,27.90527 -9.58008,0 23.42285,-35.02441 L 191.65039,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7014\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 200,180.38965 8.87695,0 0,58.13965 31.94825,0 0,7.4707 -40.8252,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7011\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomClearAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"80.025296\\\"\\n     inkscape:cy=\\\"157.96178\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4716\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4718\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4720\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 80,255 265,55\\\"\\n       id=\\\"path4714\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomDBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 73.413235,217.96387 q 2.856445,0.96679 5.537109,4.13086 2.724609,3.16406 5.449219,8.70117 l 9.008789,17.92969 -9.536133,0 -8.393555,-16.83106 q -3.251953,-6.5918 -6.328125,-8.74512 -3.032226,-2.15332 -8.305664,-2.15332 l -9.667968,0 0,27.7295 -8.876954,0 0,-65.61036 20.039063,0 q 11.25,0 16.787109,4.70215 5.53711,4.70215 5.53711,14.19434 0,6.19629 -2.900391,10.2832 -2.856445,4.08692 -8.349609,5.66895 z m -22.236328,-27.55371 0,23.29101 11.162109,0 q 6.416016,0 9.667969,-2.94433 3.295898,-2.98829 3.295898,-8.74512 0,-5.75684 -3.295898,-8.65723 -3.251953,-2.94433 -9.667969,-2.94433 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6988\\\" />\\n      <path\\n         d=\\\"m 99.648586,229.30176 0,-29.79492 8.085934,0 0,29.4873 q 0,6.98731 2.72461,10.50293 2.72461,3.47168 8.17383,3.47168 6.54785,0 10.32715,-4.1748 3.82324,-4.17481 3.82324,-11.38184 l 0,-27.90527 8.08594,0 0,49.21875 -8.08594,0 0,-7.5586 q -2.94433,4.48242 -6.85547,6.67969 Q 122.0607,250 116.91909,250 q -8.48144,0 -12.87597,-5.27344 -4.394534,-5.27344 -4.394534,-15.4248 z m 20.346684,-30.98145 0,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6990\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 48,73.115234 37.705078,0 0,7.470703 -28.828125,0 0,19.335938 26.015625,0 0,7.470705 -26.015625,0 0,31.33301 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7003\\\" />\\n      <path\\n         d=\\\"m 136.68164,112.09473 0,3.95507 -37.177734,0 q 0.527344,8.34961 5.009764,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35058,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.676755,-6.85547 -6.855469,-6.85547 -6.855469,-18.54492 0,-12.08496 6.503906,-19.160157 6.547848,-7.119141 17.622068,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60351,-3.955078 -9.58008,-3.955078 -6.76757,0 -10.85449,3.823242 -4.04297,3.823247 -4.658202,10.766607 l 28.828122,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7005\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 229.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6998\\\" />\\n      <path\\n         d=\\\"m 262.46484,94.060547 q -6.5039,0 -10.2832,5.097656 -3.7793,5.053707 -3.7793,13.886717 0,8.83301 3.73536,13.93067 3.77929,5.05371 10.32714,5.05371 6.45996,0 10.23926,-5.09766 3.7793,-5.09766 3.7793,-13.88672 0,-8.74512 -3.7793,-13.842772 -3.7793,-5.141601 -10.23926,-5.141601 z m 0,-6.855469 q 10.54688,0 16.56739,6.855469 6.0205,6.855473 6.0205,18.984373 0,12.08496 -6.0205,18.98438 -6.02051,6.85547 -16.56739,6.85547 -10.59082,0 -16.61132,-6.85547 -5.97657,-6.89942 -5.97657,-18.98438 0,-12.1289 5.97657,-18.984373 6.0205,-6.855469 16.61132,-6.855469 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7000\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 211.11328,219.23828 q 2.85645,0.9668 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 L 231.1084,250 l -9.53613,0 -8.39356,-16.83105 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.30567,-2.15332 l -9.66797,0 0,27.72949 -8.87695,0 0,-65.61035 20.03906,0 q 11.25,0 16.78711,4.70215 5.53711,4.70215 5.53711,14.19433 0,6.19629 -2.90039,10.28321 -2.85644,4.08691 -8.34961,5.66894 z m -22.23633,-27.55371 0,23.29102 11.16211,0 q 6.41602,0 9.66797,-2.94434 3.2959,-2.98828 3.2959,-8.74512 0,-5.75683 -3.2959,-8.65722 -3.25195,-2.94434 -9.66797,-2.94434 l -11.16211,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6993\\\" />\\n      <path\\n         d=\\\"m 283.13965,220.29297 0,29.70703 -8.08594,0 0,-29.44336 q 0,-6.9873 -2.72461,-10.45898 -2.72461,-3.47168 -8.17383,-3.47168 -6.54785,0 -10.32715,4.1748 -3.77929,4.17481 -3.77929,11.38184 l 0,27.81738 -8.12988,0 0,-68.37891 8.12988,0 0,26.80664 q 2.90039,-4.43847 6.81152,-6.63574 3.95508,-2.19726 9.09668,-2.19726 8.48145,0 12.83203,5.27343 4.35059,5.2295 4.35059,15.42481 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6995\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomExpandAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.9625\\\"\\n     inkscape:cx=\\\"167.64331\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-midpoints=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#929292;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,202 -6.20029,-21.88337 -26.74634,0 L 97.263545,202 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4723\\\" />\\n      <path\\n         d=\\\"m 211.84729,168.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4725\\\" />\\n      <path\\n         d=\\\"m 252.57467,202 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,202 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4727\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,164.47283 63.562761,0\\\"\\n       id=\\\"path2916\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       id=\\\"path4449\\\"\\n       d=\\\"M 209.1153,300.40828 165.33392,216.00234\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"M 165.33392,98.40828 209.1153,14.00234\\\"\\n       id=\\\"path4451\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"81.839927\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1680\\\"\\n     inkscape:window-height=\\\"974\\\"\\n     inkscape:window-x=\\\"96\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 68.82914,189.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004882,65.61036 -9.228515,0 -5.976563,-16.83106 -29.575195,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6970\\\" />\\n      <path\\n         d=\\\"m 141.91019,199.39648 0,7.5586 q -3.42773,-1.88965 -6.89941,-2.8125 -3.42773,-0.9668 -6.94336,-0.9668 -7.86621,0 -12.2168,5.00977 -4.35058,4.96582 -4.35058,13.97461 0,9.00879 4.35058,14.01855 4.35059,4.96582 12.2168,4.96582 3.51563,0 6.94336,-0.92285 3.47168,-0.9668 6.89941,-2.85645 l 0,7.47071 q -3.38378,1.58203 -7.03125,2.37304 Q 131.27543,248 127.18851,248 q -11.11816,0 -17.66601,-6.9873 -6.54785,-6.98731 -6.54785,-18.85254 0,-12.04102 6.59179,-18.94043 6.63575,-6.89942 18.14942,-6.89942 3.73535,0 7.29492,0.79102 3.55957,0.74707 6.89941,2.28515 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6972\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 50,73.115234 8.876953,0 0,58.139646 31.948242,0 0,7.47071 -40.825195,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6983\\\" />\\n      <path\\n         d=\\\"m 122.11426,113.98438 q -9.79981,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64648 0,4.30664 2.8125,6.85547 2.85644,2.50488 7.73437,2.50488 6.72364,0 10.76661,-4.74609 4.08691,-4.79004 4.08691,-12.7002 l 0,-1.80175 -8.04199,0 z m 16.12793,-3.33985 0,28.08106 -8.08594,0 0,-7.47071 q -2.76855,4.48242 -6.89941,6.63574 Q 119.12598,140 113.14941,140 q -7.55859,0 -12.04101,-4.21875 -4.438478,-4.2627 -4.438478,-11.38184 0,-8.30566 5.537108,-12.52441 5.58106,-4.21875 16.61133,-4.21875 l 11.33789,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613277 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21777,1.010742 -3.99903,1.010743 -7.69043,3.032227 l 0,-7.470703 q 4.43847,-1.713867 8.61328,-2.548828 4.1748,-0.878907 8.12988,-0.878907 10.67871,0 15.95215,5.53711 5.27344,5.537109 5.27344,16.787108 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6985\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 233.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6978\\\" />\\n      <path\\n         d=\\\"m 289.49219,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.65821,10.766601 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6980\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 194.98926,184.38965 8.9209,0 0,39.8584 q 0,10.54687 3.82324,15.20507 3.82324,4.61426 12.39258,4.61426 8.52539,0 12.34863,-4.61426 3.82324,-4.6582 3.82324,-15.20507 l 0,-39.8584 8.9209,0 0,40.95703 q 0,12.83203 -6.37207,19.37988 -6.32813,6.54785 -18.7207,6.54785 -12.43653,0 -18.8086,-6.54785 -6.32812,-6.54785 -6.32812,-19.37988 l 0,-40.95703 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6975\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFormula.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3645\\\"\\n       cx=\\\"165\\\"\\n       cy=\\\"160\\\"\\n       fx=\\\"165\\\"\\n       fy=\\\"160\\\"\\n       r=\\\"130\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.80769231,0,30.769231)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.1503782\\\"\\n     inkscape:cx=\\\"147.23233\\\"\\n     inkscape:cy=\\\"155.47208\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <rect\\n       style=\\\"fill:url(#radialGradient3645);fill-opacity:1.0;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"rect2865\\\"\\n       width=\\\"250\\\"\\n       height=\\\"200\\\"\\n       x=\\\"40\\\"\\n       y=\\\"60\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 103.57242,189.11313 q 4.13353,0 7.17288,-1.39811 3.03936,-1.45889 5.2277,-3.7688 2.24912,-2.30991 3.70801,-5.22769 1.45889,-2.91778 2.43149,-5.89635 l 12.76529,5.89635 q -1.51967,4.61982 -4.01195,9.05728 -2.49227,4.43746 -6.26107,7.84154 -3.70802,3.40408 -8.87492,5.53163 -5.16691,2.06676 -12.15743,2.06676 -9.118068,0 -15.804652,-3.2825 -6.625797,-3.34329 -11.002471,-9.23965 -4.376673,-5.95713 -6.504223,-14.10261 -2.066762,-8.14548 -2.066762,-17.81063 0,-10.02988 2.066762,-18.11456 2.12755,-8.08469 6.382649,-13.7379 4.315886,-5.71399 10.880896,-8.75334 6.56501,-3.10015 15.439931,-3.10015 6.86895,0 12.03585,1.76283 5.16691,1.76283 8.87492,4.98455 3.76881,3.16093 6.20029,7.5376 2.49227,4.31589 3.89038,9.54358 l -12.94766,4.31589 q -0.66866,-2.73543 -2.12755,-5.2277 -1.45889,-2.55306 -3.70802,-4.49825 -2.18833,-1.94518 -5.1669,-3.10014 -2.97857,-1.21574 -6.74737,-1.21574 -5.349271,0 -9.178861,2.12755 -3.829589,2.06676 -6.321861,5.95714 -2.431485,3.89037 -3.647228,9.36121 -1.154955,5.41006 -1.154955,12.15743 0,6.68658 1.154955,12.279 1.215743,5.53163 3.708015,9.54358 2.492272,4.01195 6.382649,6.26107 3.890376,2.24913 9.361216,2.24913 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4157\\\" />\\n      <path\\n         d=\\\"m 218.21695,202 0,-36.71543 -30.57592,0 0,36.71543 -14.71049,0 0,-85.64907 14.71049,0 0,34.10158 30.57592,0 0,-34.10158 14.71049,0 0,85.64907 -14.71049,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4159\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2857\\\">\\n      <path\\n         d=\\\"m 162.47581,218.36884 -8.86336,-16.78472 -8.90617,16.78472 -10.53327,0 13.9159,-23.93535 -13.23081,-22.3939 10.66172,0 8.09263,15.15763 8.09263,-15.15763 10.70454,0 -13.23081,22.26544 14.00154,24.06381 -10.70454,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4162\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2861\\\">\\n      <path\\n         d=\\\"m 260.83842,220.80946 q -1.37018,4.06772 -2.78318,7.02217 -1.41299,2.95446 -3.12572,4.88127 -1.66991,1.96964 -3.81082,2.91164 -2.09809,0.942 -4.92408,0.942 -1.54146,0 -3.16855,-0.12846 -1.58427,-0.12845 -3.04009,-0.42818 l 0,-8.56363 q 0.68509,0.12845 1.66991,0.21409 1.02764,0.12845 1.71273,0.12845 1.45581,0 2.56909,-0.38536 1.15609,-0.38536 2.05527,-1.28454 0.89918,-0.89918 1.66991,-2.39782 0.81354,-1.49864 1.54145,-3.768 l 0.64227,-2.05527 -15.02917,-45.85824 10.44763,0 5.95172,21.7088 q 0,0 0.42818,1.58427 l 0.68509,2.56909 0.77073,2.99727 0.72791,2.99727 q 0.34255,1.45582 0.55664,2.56909 0.25691,1.11328 0.38536,1.58427 0.0856,-0.47099 0.29973,-1.58427 l 0.55663,-2.48345 0.64227,-2.91163 0.6851,-2.95446 0.55663,-2.52627 q 0.25691,-1.15609 0.42818,-1.66991 l 5.60918,-21.88007 10.31918,0 -15.02918,48.76988 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4165\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomInline.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"72.356688\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4152\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4154\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4156\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomMinus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomMinus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective9\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"59.813669\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"467\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2815\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60591986,0,0,0.60381033,62.403623,63.530598)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12.95214939;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 96.131868,160.58706 129.596922,-0.4623\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomNoble.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 71.928711,191.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004878,65.61036 -9.228511,0 -5.976562,-16.83106 -29.575196,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6950\\\" />\\n      <path\\n         d=\\\"m 139.69238,207.06543 q -1.3623,-0.79102 -2.98828,-1.14258 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48243 -3.64746,4.43847 -3.64746,12.78808 l 0,25.92774 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63574,-6.63574 4.08692,-2.19727 9.93164,-2.19727 0.83496,0 1.84571,0.13184 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6952\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 40,73.115234 8.876953,0 0,26.894536 32.255859,0 0,-26.894536 8.876954,0 0,65.610356 -8.876954,0 0,-31.24512 -32.255859,0 0,31.24512 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6965\\\" />\\n      <path\\n         d=\\\"m 149.42383,112.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.160157 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823247 -4.6582,10.766607 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6967\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 184.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6960\\\" />\\n      <path\\n         d=\\\"m 293.88672,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.6582,10.766601 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6962\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 180,184.38965 8.87695,0 0,27.72949 29.44336,-27.72949 11.42578,0 -32.56347,30.58594 L 232.0752,250 l -11.68946,0 -31.50879,-31.59668 0,31.59668 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6955\\\" />\\n      <path\\n         d=\\\"m 267.23145,208.33984 q -1.36231,-0.79101 -2.98829,-1.14257 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48242 -3.64746,4.43848 -3.64746,12.78809 l 0,25.92773 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63575,-6.63574 4.08691,-2.19726 9.93164,-2.19726 0.83496,0 1.8457,0.13183 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6957\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 107.33105,183.26855 0,8.65723 q -5.05371,-2.41699 -9.536128,-3.60351 -4.482422,-1.18653 -8.657227,-1.18653 -7.250976,0 -11.206054,2.8125 -3.911133,2.8125 -3.911133,7.99805 0,4.35058 2.592773,6.5918 2.636719,2.19726 9.931641,3.55957 l 5.361328,1.09863 q 9.93164,1.88965 14.63379,6.67969 4.74609,4.74609 4.74609,12.74414 0,9.53613 -6.41601,14.458 Q 98.498047,248 86.149414,248 q -4.658203,0 -9.931641,-1.05469 -5.229492,-1.05469 -10.854492,-3.12011 l 0,-9.14063 q 5.405274,3.03223 10.590821,4.57031 5.185546,1.53809 10.195312,1.53809 7.602539,0 11.733398,-2.98828 4.130858,-2.98828 4.130858,-8.52539 0,-4.83399 -2.988279,-7.5586 -2.944336,-2.72461 -9.711914,-4.08691 l -5.405274,-1.05469 q -9.931641,-1.97754 -14.370117,-6.19629 -4.438477,-4.21875 -4.438477,-11.7334 0,-8.70117 6.108399,-13.71093 6.152344,-5.00977 16.918945,-5.00977 4.614258,0 9.404297,0.83496 4.79004,0.83496 9.7998,2.50488 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n      <path\\n         d=\\\"m 124.77734,197.50684 8.08594,0 0,49.21875 -8.08594,0 0,-49.21875 z m 0,-19.16016 8.08594,0 0,10.23926 -8.08594,0 0,-10.23926 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6944\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 84.876953,107.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590816,-2.94433 3.47168,-2.98828 3.47168,-9.09668 0,-6.15235 -3.47168,-9.05274 -3.42773,-2.94433 -10.590816,-2.94433 l -14.238281,0 z m 0,-26.982424 0,19.775394 13.139649,0 q 6.503908,0 9.667968,-2.416995 3.20801,-2.460938 3.20801,-7.470703 0,-4.965821 -3.20801,-7.426758 -3.16406,-2.460938 -9.667968,-2.460938 l -13.139649,0 z M 76,73.115234 l 22.675781,0 q 10.151369,0 15.644529,4.21875 5.49317,4.21875 5.49317,11.997071 0,6.020507 -2.8125,9.580078 -2.8125,3.559567 -8.26172,4.438477 6.54785,1.40625 10.15137,5.88867 3.64746,4.43848 3.64746,11.11817 0,8.78906 -5.97657,13.5791 -5.97656,4.79004 -17.006833,4.79004 l -23.554687,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 210.74316,80.745117 -12.04101,32.651363 24.12597,0 -12.08496,-32.651363 z M 205.7334,72 l 10.06347,0 25.00489,65.61035 -9.22852,0 -5.97656,-16.83105 -29.5752,0 -5.97656,16.83105 -9.36035,0 L 205.7334,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 281.36328,89.841797 0,7.646484 q -3.42773,-1.757812 -7.11914,-2.636719 -3.69141,-0.878906 -7.64648,-0.878906 -6.02051,0 -9.05274,1.845703 -2.98828,1.845703 -2.98828,5.537111 0,2.8125 2.15332,4.43848 2.15332,1.58203 8.65723,3.03222 l 2.76855,0.61524 q 8.61328,1.8457 12.2168,5.22949 3.64746,3.33984 3.64746,9.36035 0,6.85547 -5.44922,10.85449 -5.40527,3.99903 -14.89746,3.99903 -3.95508,0 -8.26172,-0.79102 -4.26269,-0.74707 -9.00879,-2.28516 l 0,-8.34961 q 4.48242,2.32911 8.83301,3.51563 4.35059,1.14258 8.61328,1.14258 5.71289,0 8.78906,-1.9336 3.07618,-1.97754 3.07618,-5.53711 0,-3.29589 -2.24122,-5.05371 -2.19726,-1.75781 -9.71191,-3.38379 l -2.8125,-0.65918 q -7.51465,-1.58203 -10.85449,-4.83398 -3.33985,-3.2959 -3.33985,-9.00879 0,-6.943358 4.92188,-10.722655 4.92187,-3.779297 13.97461,-3.779297 4.48242,0 8.4375,0.65918 3.95508,0.659179 7.29492,1.977539 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 190.87695,189.68457 0,24.65332 11.16211,0 q 6.19629,0 9.58008,-3.20801 3.38379,-3.20801 3.38379,-9.14062 0,-5.88867 -3.38379,-9.09668 -3.38379,-3.20801 -9.58008,-3.20801 l -11.16211,0 z M 182,182.38965 l 20.03906,0 q 11.03028,0 16.65528,5.00976 5.66894,4.96582 5.66894,14.58985 0,9.71191 -5.66894,14.67773 -5.625,4.96582 -16.65528,4.96582 l -11.16211,0 0,26.36719 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n      <path\\n         d=\\\"m 271.29687,223.43457 q 0,-8.9209 -3.6914,-13.97461 -3.64746,-5.09766 -10.06348,-5.09766 -6.41601,0 -10.10742,5.09766 -3.64746,5.05371 -3.64746,13.97461 0,8.9209 3.64746,14.01855 3.69141,5.05372 10.10742,5.05372 6.41602,0 10.06348,-5.05372 3.6914,-5.09765 3.6914,-14.01855 z m -27.50976,-17.18262 q 2.54883,-4.39453 6.41601,-6.5039 3.91114,-2.15332 9.31641,-2.15332 8.96484,0 14.5459,7.11914 5.625,7.11914 5.625,18.7207 0,11.60156 -5.625,18.7207 -5.58106,7.11914 -14.5459,7.11914 -5.40527,0 -9.31641,-2.10937 -3.86718,-2.15332 -6.41601,-6.54785 l 0,7.38281 -8.12988,0 0,-68.37891 8.12988,0 0,26.63086 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6939\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPlus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomPlus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective10\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-64.472045\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2818\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60145026,0,0,0.6014321,63.123549,63.556079)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 91.367971,160.26223 230.74482,159.73468\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 160.52478,90.246356 0.53163,138.246984\\\"\\n       id=\\\"path3756\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomSBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"98.625641\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1447\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 52.876953,215.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590821,-2.94433 3.471679,-2.98828 3.471679,-9.09668 0,-6.15235 -3.471679,-9.05274 -3.427735,-2.94433 -10.590821,-2.94433 l -14.238281,0 z m 0,-26.98242 0,19.77539 13.139649,0 q 6.503906,0 9.667968,-2.417 3.208008,-2.46093 3.208008,-7.4707 0,-4.96582 -3.208008,-7.42676 -3.164062,-2.46093 -9.667968,-2.46093 l -13.139649,0 z M 44,181.11523 l 22.675781,0 q 10.151367,0 15.644531,4.21875 5.493165,4.21875 5.493165,11.99707 0,6.02051 -2.8125,9.58008 -2.8125,3.55957 -8.261719,4.43848 6.547851,1.40625 10.151367,5.88867 3.647461,4.43848 3.647461,11.11817 0,8.78906 -5.976563,13.5791 -5.976562,4.79004 -17.006836,4.79004 l -23.554687,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6940\\\" />\\n      <path\\n         d=\\\"m 147.44727,220.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52636,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77735,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.16016 6.54785,-7.11914 17.62207,-7.11914 9.93164,0 15.68847,6.41602 5.80079,6.37207 5.80079,17.3584 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.59082 -3.60352,-3.95508 -9.58008,-3.95508 -6.76758,0 -10.85449,3.82324 -4.04297,3.82325 -4.65821,10.7666 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 64,73.115234 8.876953,0 0,58.139646 31.948247,0 0,7.47071 -40.8252,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6945\\\" />\\n      <path\\n         d=\\\"m 113.74609,89.506836 8.08594,0 0,49.218754 -8.08594,0 0,-49.218754 z m 0,-19.160156 8.08594,0 0,10.239257 -8.08594,0 0,-10.239257 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 178.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 268.15527,112.86914 q -9.7998,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64649 0,4.30664 2.8125,6.85546 2.85645,2.50489 7.73438,2.50489 6.72363,0 10.7666,-4.7461 4.08692,-4.79004 4.08692,-12.70019 l 0,-1.80176 -8.042,0 z m 16.12793,-3.33984 0,28.08105 -8.08593,0 0,-7.4707 q -2.76856,4.48242 -6.89942,6.63574 -4.13086,2.10938 -10.10742,2.10938 -7.55859,0 -12.04102,-4.21875 -4.43847,-4.2627 -4.43847,-11.38184 0,-8.30566 5.53711,-12.52441 5.58105,-4.21875 16.61132,-4.21875 l 11.3379,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613281 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21778,1.010742 -3.99902,1.010742 -7.69043,3.032227 l 0,-7.470704 q 4.43848,-1.713867 8.61328,-2.548828 4.17481,-0.878906 8.12989,-0.878906 10.67871,0 15.95215,5.537109 5.27343,5.53711 5.27343,16.787113 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 174,184.38965 13.22754,0 16.74316,44.64844 16.83106,-44.64844 13.22754,0 0,65.61035 -8.65723,0 0,-57.6123 -16.91895,45 -8.92089,0 -16.91895,-45 0,57.6123 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text2248\\\">\\n      <path\\n         d=\\\"m 275.90332,226.09863 q 0,-8.78906 -3.64746,-13.62304 -3.60352,-4.83399 -10.15137,-4.83399 -6.5039,0 -10.15137,4.83399 -3.60351,4.83398 -3.60351,13.62304 0,8.74512 3.60351,13.5791 3.64747,4.83399 10.15137,4.83399 6.54785,0 10.15137,-4.83399 3.64746,-4.83398 3.64746,-13.5791 z m 8.08594,19.07227 q 0,12.56836 -5.58106,18.67676 Q 272.82715,270 261.31348,270 q -4.2627,0 -8.042,-0.65918 -3.77929,-0.61523 -7.33886,-1.93359 l 0,-7.86621 q 3.55957,1.93359 7.03125,2.85644 3.47168,0.92285 7.07519,0.92285 7.9541,0 11.90918,-4.1748 3.95508,-4.13086 3.95508,-12.52442 l 0,-3.99902 q -2.50488,4.35059 -6.41602,6.50391 -3.91113,2.15332 -9.36035,2.15332 -9.05273,0 -14.58984,-6.89942 Q 240,237.48047 240,226.09863 q 0,-11.42578 5.53711,-18.32519 5.53711,-6.89942 14.58984,-6.89942 5.44922,0 9.36035,2.15332 3.91114,2.15332 6.41602,6.50391 l 0,-7.4707 8.08594,0 0,43.11035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6929\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAddTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2948\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"92.512755\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1421\\\"\\n     inkscape:window-height=\\\"893\\\"\\n     inkscape:window-x=\\\"278\\\"\\n     inkscape:window-y=\\\"110\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:2.00970001\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"m 140.71429,135 a 8.9285717,9.2857141 0 1 1 -17.85714,0 8.9285717,9.2857141 0 1 1 17.85714,0 z\\\"\\n       transform=\\\"matrix(0,1.9791656,-1.9030439,0,400.81202,-104.81214)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,130.35436 51.64564,35.560356\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 176.5625,165.59375 a 9.6254627,9.6254627 0 0 0 -3.875,18.3125 L 280,237 a 9.6254627,9.6254627 0 1 0 8.53125,-17.25 l -107.3125,-53.09375 a 9.6254627,9.6254627 0 0 0 -4.65625,-1.0625 z\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,181.56035 51.64564,276.35436\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 283.65625,72.625 a 9.6254627,9.6254627 0 0 0 -4.34375,1.0625 l -107.34375,53.125 a 9.6254627,9.6254627 0 1 0 8.53125,17.25 l 107.34375,-53.125 a 9.6254627,9.6254627 0 0 0 -4.1875,-18.3125 z\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactArene.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <path\\n       edge=\\\"none\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       id=\\\"char45\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-12.077558\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4369\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"79.874969\\\"\\n         y1=\\\"53.341728\\\"\\n         x2=\\\"42.383801\\\"\\n         y2=\\\"124.96636\\\"\\n         id=\\\"line4253\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"42.383801\\\"\\n         y1=\\\"124.96636\\\"\\n         x2=\\\"159.32974\\\"\\n         y2=\\\"157.25311\\\"\\n         id=\\\"line4255\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"159.32974\\\"\\n         y1=\\\"157.25311\\\"\\n         x2=\\\"277.61575\\\"\\n         y2=\\\"130.34207\\\"\\n         id=\\\"line4257\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"277.61575\\\"\\n         y1=\\\"130.34207\\\"\\n         x2=\\\"243.44348\\\"\\n         y2=\\\"57.081509\\\"\\n         id=\\\"line4259\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"243.44348\\\"\\n         y1=\\\"57.081509\\\"\\n         x2=\\\"79.874969\\\"\\n         y2=\\\"53.341728\\\"\\n         id=\\\"line4261\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <line\\n       style=\\\"stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"line4275\\\"\\n       y2=\\\"104.59695\\\"\\n       x2=\\\"160.5295\\\"\\n       y1=\\\"208.16769\\\"\\n       x1=\\\"160.5295\\\" />\\n    <ellipse\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:39\\\"\\n       id=\\\"ellipse4281\\\"\\n       ry=\\\"28.668024\\\"\\n       rx=\\\"69.736992\\\"\\n       cy=\\\"100.79803\\\"\\n       cx=\\\"160\\\" />\\n    <use\\n       height=\\\"100%\\\"\\n       width=\\\"100%\\\"\\n       y=\\\"0\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       xlink:href=\\\"#char45\\\"\\n       x=\\\"0\\\"\\n       id=\\\"use4287\\\"\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,128.5194,269.61687)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactClear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"109.54685\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:13.15014392\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"121.49729\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 131.71573,131.71573 56.56854,56.56854\\\"\\n       id=\\\"path4142\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 188.28427,131.71573 -56.56854,56.56854\\\"\\n       id=\\\"path4144\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactPath.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"161.66868\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4206\\\"\\n       transform=\\\"matrix(1.1572994,0,0,1.1572994,-14.188294,6.2718173)\\\"\\n       style=\\\"stroke-width:6.91264508;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"35.082012\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4180\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"265.94345\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4182\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:6\\\"\\n       d=\\\"m 60,210 c 90,-70 110,-70 200,0\\\"\\n       id=\\\"path4210\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"14.186408\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4271\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       transform=\\\"translate(27.870353,1.568337)\\\">\\n      <line\\n         x1=\\\"132.12965\\\"\\n         y1=\\\"38.988956\\\"\\n         x2=\\\"17.069948\\\"\\n         y2=\\\"122.58849\\\"\\n         id=\\\"line4215\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"17.069948\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"61.017296\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4217\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"61.017296\\\"\\n         y1=\\\"257.85382\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4219\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4221\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"132.12965\\\"\\n         y2=\\\"38.988956\\\"\\n         id=\\\"line4223\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:24;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"66.571121\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 40.382649,165.00403 L 40.382649,155.19597\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 100,174.2408 L 100,144.59666\\\"\\n       id=\\\"path3712\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,184.32705 L 160,134.74379\\\"\\n       id=\\\"path3714\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280,204.78908 L 280,115.08664\\\"\\n       id=\\\"path3716\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 220,195.22384 L 220,125.64966\\\"\\n       id=\\\"path3718\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondFour.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondFour.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,180 L 39.961095,180\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,219.98053 L 39.941666,219.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,139.98053 L 39.941663,139.98053\\\"\\n       id=\\\"path3576\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,99.980529 L 39.941665,99.980529\\\"\\n       id=\\\"path3578\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondInsert.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2958\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"103.22259\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1204\\\"\\n     inkscape:window-height=\\\"925\\\"\\n     inkscape:window-x=\\\"508\\\"\\n     inkscape:window-y=\\\"54\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4800\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 113.39098,158.69004 53.078266,263.15473\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 299.98723,58.483019 240.10753,162.19765\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"M 116.5625 151.3125 A 9.6254923 9.6254923 0 0 0 111.09375 152.90625 A 9.6254923 9.6254923 0 0 0 116.53125 170.53125 L 159.75 170.5625 C 158.10087 167.65453 157.15625 164.30057 157.15625 160.71875 C 157.15625 157.31663 158.0016 154.11729 159.5 151.3125 L 116.5625 151.3125 z M 194.78125 151.3125 C 196.27965 154.11729 197.15625 157.31663 197.15625 160.71875 C 197.15625 164.30057 196.18038 167.65453 194.53125 170.5625 L 236.28125 170.59375 A 9.6321508 9.6321508 0 0 0 236.28125 151.3125 L 194.78125 151.3125 z \\\"\\n       id=\\\"path4284\\\" />\\n    <path\\n       transform=\\\"translate(157.71429,141.42857)\\\"\\n       d=\\\"M 40,20 A 20,20 0 1 1 0,20 20,20 0 1 1 40,20 z\\\"\\n       sodipodi:ry=\\\"20\\\"\\n       sodipodi:rx=\\\"20\\\"\\n       sodipodi:cy=\\\"20\\\"\\n       sodipodi:cx=\\\"20\\\"\\n       id=\\\"path3660\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:9;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondLinear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondMetalLigate.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-height=\\\"943\\\"\\n     inkscape:window-width=\\\"1650\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"146.31871\\\"\\n     inkscape:cx=\\\"74.452978\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <use\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,127.98962,187.61498)\\\"\\n       id=\\\"use4287\\\"\\n       x=\\\"0\\\"\\n       xlink:href=\\\"#char45\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       y=\\\"0\\\"\\n       width=\\\"100%\\\"\\n       height=\\\"100%\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path850\\\"\\n       d=\\\"M 160,110 V 20\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,300 V 210\\\"\\n       id=\\\"path852\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 205,135 282.94228,90\\\"\\n       id=\\\"path854\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path856\\\"\\n       d=\\\"m 205,185 77.94228,45\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 37.05772,90 115,135\\\"\\n       id=\\\"path858\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path860\\\"\\n       d=\\\"M 37.05772,230 115,185\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOcta2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905712,230.35583 L 132.37547,173.62453\\\"\\n       id=\\\"path2305\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.12226,146.50851 L 293.59202,89.777207\\\"\\n       id=\\\"path2505\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905714,89.62453 L 132.37547,146.35583\\\"\\n       id=\\\"path2507\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.55084,173.92006 L 294.02059,230.65136\\\"\\n       id=\\\"path2509\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 182.07157,136.65434 L 268.37547,53.62453\\\"\\n       id=\\\"path2303\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 52.07157,264.65433 L 138.37547,181.62453\\\"\\n       id=\\\"path2305\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOne.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondPolymer.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"56\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-width=\\\"1864\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"163.33901\\\"\\n     inkscape:cx=\\\"23.277781\\\"\\n     inkscape:zoom=\\\"0.35\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <text\\n       id=\\\"text844\\\"\\n       y=\\\"296.98486\\\"\\n       x=\\\"241.67216\\\"\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.43909\\\"\\n       xml:space=\\\"preserve\\\"><tspan\\n         style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;stroke-width:2.43909\\\"\\n         y=\\\"296.98486\\\"\\n         x=\\\"241.67216\\\"\\n         id=\\\"tspan842\\\"\\n         sodipodi:role=\\\"line\\\">n</tspan></text>\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       id=\\\"path846\\\"\\n       d=\\\"M 110,30 H 50 v 260 h 60\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 164,30 h 60 v 260 h -60\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"1.0.2 (1.0.2+r75+1)\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAny.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.36294465\\\"\\n     inkscape:cx=\\\"-23.567935\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1023\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:document-rotation=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       cx=\\\"20.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <circle\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       id=\\\"path3746\\\"\\n       cx=\\\"60.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 150,160 H 100\\\"\\n       id=\\\"path838\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,140 H 180\\\"\\n       id=\\\"path840\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,180 H 180\\\"\\n       id=\\\"path842\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,120 H 260\\\"\\n       id=\\\"path844\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 H 260\\\"\\n       id=\\\"path846\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,200 H 260\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#4a8be0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"229.81367\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1859\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4149\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4477\\\"\\n       transform=\\\"translate(-6.9348763,2.361824)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3132\\\"\\n         d=\\\"m 285.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 285.375,15.59375 Z\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans';text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate\\\" />\\n      <circle\\n         r=\\\"17.671122\\\"\\n         cy=\\\"160\\\"\\n         cx=\\\"216\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         id=\\\"path2160\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3152\\\"\\n         d=\\\"M 201.61589,160 63.97327,160\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         id=\\\"path3158\\\"\\n         d=\\\"M 285.41813,293.9522 225.1533,170.90493\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <circle\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n         id=\\\"circle4151\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         cx=\\\"56\\\"\\n         cy=\\\"160\\\"\\n         r=\\\"17.671122\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"ccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4155\\\"\\n         d=\\\"m 110,140 c 0,-30 10,-80 36,-80 24,0 34,60 34,100 0,40 -10.12741,99.49035 -34,100 -26,0 -36,-48.6 -36,-78.6\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#ffffff;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4475\\\"\\n         d=\\\"m 110,175 -15,25 30,0 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSqPlan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSquig.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSquig.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.70939255;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 13.854696,160 C 23.404427,145.60525 31.644659,120.73451 42.883757,119.8547 C 52.560111,118.19483 66.522178,143.90673 71.912818,160 C 82.300825,178.10026 83.522733,199.152 100.94188,200.1453 C 119.40219,200.81786 121.80479,177.7981 129.97094,160 C 137.74367,142.33593 144.46966,118.67452 159,119.8547 C 175.82856,118.93206 179.97706,143.36954 188.02906,160 C 196.14175,177.45474 205.82635,200.76232 217.05812,200.1453 C 231.09125,199.83385 237.2755,175.9758 246.08718,160 C 254.09821,142.34457 263.95628,119.88399 275.11624,119.8547 C 289.09333,120.33425 295.4277,143.74196 304.1453,160 L 304.1453,160 L 304.1453,160\\\"\\n       id=\\\"path3749\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondSwitch.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1215\\\"\\n     inkscape:window-height=\\\"839\\\"\\n     inkscape:window-x=\\\"145\\\"\\n     inkscape:window-y=\\\"105\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294119;stroke:#000000;stroke-width:8;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 225.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 225.375,15.59375 z\\\"\\n       id=\\\"path3132\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-104.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.61589,160 L 63.973265,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 225.41813,293.9522 L 165.1533,170.90493\\\"\\n       id=\\\"path3158\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 197.79178,142.41668 C 208.33227,154.9762 208.33227,166.6984 197.79178,177.58331\\\"\\n       id=\\\"path3134\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 213.88997,98.458413 C 237.84561,141.99804 237.84561,183.02576 213.88997,221.54158\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.584;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send);fill-opacity:1\\\"\\n       d=\\\"M 238.03726,63.291789 C 275.40805,126.92663 275.40805,191.39877 238.03726,256.70821\\\"\\n       id=\\\"path3140\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"148.55302\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-96.82577,-80.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 138.34073,193.65927 L 43.546726,268.25545\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 236.37547,43.62453 L 183.2535,150.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 189.54672,193.65927 L 284.34073,268.25545\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 90.29616,44.33351 L 143.41813,151.66649\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTetra2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"146.11708\\\"\\n     inkscape:cy=\\\"127.88711\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 256.37547,43.62453 L 176.82086,133.14201\\\"\\n       id=\\\"path2233\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 255.17914,276.37547 L 175.62453,186.85799\\\"\\n       id=\\\"path2235\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondThree.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTwo.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,199.98053 L 39.941666,199.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,119.98053 L 39.941663,119.98053\\\"\\n       id=\\\"path3576\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTrigonal.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-82.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 148.66986,160 L 28.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 248.37547,27.62453 L 195.2535,134.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 247.41813,293.9522 L 194.29616,186.61922\\\"\\n       id=\\\"path3158\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOne.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,140 L 39.961095,140\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,179.98053 L 39.941666,179.98053\\\"\\n       id=\\\"path3574\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#000000;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 300,100 L 300,220.71429 L 10,160 z \\\"\\n       id=\\\"path3610\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondZero.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4517786\\\"\\n     inkscape:cx=\\\"160\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1390\\\"\\n     inkscape:window-height=\\\"1119\\\"\\n     inkscape:window-x=\\\"422\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3742\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,132.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,-17.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3746\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,32.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,82.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3748\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,232.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3750\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3752\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,182.5,-8.75)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"GenericAccept.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 300.71429,39.285714 C 221.40032,73.699762 164.28823,126.10076 120,210 C 82.667331,182.4368 64.188257,170.57196 8.5714286,174.28571 C 88.702873,232.3286 116.45809,273.89571 131.42857,295 C 138.61324,305.12842 189.62059,127.77256 300.71429,39.285714 z \\\"\\n       id=\\\"path3211\\\"\\n       sodipodi:nodetypes=\\\"cccsc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainAtom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2848\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"48.145029\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"597\\\"\\n     inkscape:window-y=\\\"53\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:0.99991798;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path2173\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-191.02317,-104.15694)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3146\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.63132,-160.28246)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3148\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-123.67417,-89.452119)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3150\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-189.79433,-79.64646)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.5817451;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.5559432,-0.9629219,0.8671851,0.5006696,-82.679852,232.98137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174519;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3160\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-0.5559432,-0.962922,0.8671851,-0.5006694,98.56249,410.307)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3166\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,177.55034,-16.166303)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,147.55034,143.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainBond.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"479\\\"\\n     inkscape:window-y=\\\"21\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3182\\\"\\n       transform=\\\"translate(11.909887,59.760501)\\\">\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-112.32262,-38.207236)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-101.73514,-67.347684)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-77.354923,-30.572473)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-111.6846,-25.481361)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3188\\\"\\n       transform=\\\"translate(-15.161547,-19.009179)\\\">\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,428.39405,40.562444)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3174\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,417.80657,11.421996)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3176\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,393.42635,48.197207)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3178\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,427.75603,53.288319)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3180\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-1.3630223e-8,-1.1150628,0.8671872,4.2624012e-8,9.4810906,343.88434)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3195\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,-60.492046,52.100836)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3197\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,107.50794,52.100828)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,89.896893,-11.387448)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-12.449661,159.8337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-74.103107,22.612552)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3204\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,179.55034,179.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCopy.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective26\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3630\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1\\\"\\n     inkscape:cx=\\\"103.77793\\\"\\n     inkscape:cy=\\\"88.169551\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2832\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.5;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 47.647496,250.03858 46.764383,-103.11546 0,-29.46156 -62.352511,0 0,-29.46156 L 110,88 C 94.411879,88 85.058997,73.26922 85.058997,58.538439 c 0,-14.73078 9.352882,-29.46156 24.941003,-29.46156 l 15.58814,0 c 15.58811,0 24.94098,14.73078 24.94098,29.46156 C 150.52912,73.26922 141.17625,88 125.58814,88 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46156 46.76439,103.11546 -37.41152,0 -31.17624,-73.65389 -34.293883,73.65389 -37.411501,0 z\\\"\\n       id=\\\"path3606-1\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 148.05936,290.03859 46.76439,-103.11546 0,-29.46157 -62.35252,0 0,-29.46156 77.94063,0 c -15.58811,0 -24.941,-14.73077 -24.941,-29.46156 0,-14.73078 9.35289,-29.46156 24.941,-29.46156 l 15.58814,0 c 15.58811,0 24.941,14.73078 24.941,29.46156 C 250.941,113.26923 241.58811,128 226,128 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46157 46.76439,103.11546 -37.4115,0 -31.17626,-73.6539 -34.29388,73.6539 -37.4115,0 z\\\"\\n       id=\\\"path3606\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective13\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"2.8284272\\\"\\n     inkscape:cx=\\\"170.6097\\\"\\n     inkscape:cy=\\\"215.55961\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.93447638;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.84431,4.0536087 c -0.29508,0.00449 -0.58207,0.030042 -0.87522,0.060857 -0.0514,-0.00404 -0.10482,0.00322 -0.15629,0 -0.26793,-0.016729 -0.54407,-0.036361 -0.8127,-0.030428 -2.52061,0.055258 -5.00989,1.1162381 -6.75172,2.8907158 -1.74182,1.7744777 -2.71473,4.2405775 -2.65692,6.6942895 L 149.90429,134.04453 47.472011,85.328366 45.346471,83.624365 c -1.676342,-1.065683 -3.687289,-1.624994 -5.688946,-1.582287 -0.143902,0.003 -0.294356,0.02089 -0.437611,0.03043 -0.397202,-0.03723 -0.78889,-0.04182 -1.187802,-0.03043 -4.295438,0.112766 -8.28419,3.359535 -9.158577,7.455004 -0.874388,4.09547 1.451553,8.636997 5.345108,10.406581 l 0.562644,0.273857 109.840403,68.03832 c 1.67488,1.03918 3.67355,1.56833 5.6577,1.52143 l 0.46886,43.99973 c 0.005,0.64693 0.10661,1.28576 0.25007,1.91701 -8.81541,5.38078 -15.33495,12.77739 -19.41119,21.75644 -5.08278,11.19622 -6.52603,24.62804 -5.15756,39.98316 0.0144,0.14281 0.0352,0.28499 0.0625,0.426 1.83482,10.3447 4.15972,19.71772 9.34612,26.95973 5.16099,7.20651 13.78411,11.64917 24.97511,11.13687 l 0,0.0304 c 18.09365,-0.39567 30.45126,-6.60038 37.25946,-16.7053 6.80821,-10.10493 8.17398,-23.08912 7.65819,-37.0316 -0.007,-0.1017 -0.0175,-0.20319 -0.0312,-0.30428 -1.7739,-18.11192 -9.59128,-28.87305 -18.53596,-35.54059 -6.03478,-4.49844 -12.34072,-7.3741 -17.56696,-10.01101 0.27934,-0.90435 0.41844,-1.85482 0.40635,-2.79942 l -0.53139,-49.32475 46.69938,22.21288 c 0.083,0.0395 0.16586,0.0847 0.25006,0.1217 -3.31001,17.14209 2.79839,30.23586 11.78424,40.2266 0.34773,0.39526 0.76108,0.73572 1.21906,1.00414 11.30221,6.4521 20.79655,6.99911 28.38221,4.41215 7.58567,-2.58696 13.73725,-4.92629 18.81728,-10.68044 6.76902,-5.94633 9.04203,-16.49269 9.90878,-25.01229 0.11784,-10.04709 -5.59112,-21.3058 -20.88032,-28.75502 -0.45188,-0.22178 -0.93854,-0.37626 -1.43786,-0.45643 -6.30082,-1.02286 -12.65323,-2.0926 -18.97357,-1.94743 -2.10678,0.0484 -4.22421,0.23694 -6.3141,0.60857 -4.21959,0.75035 -8.31043,2.4329 -12.00305,5.17287 -0.69153,-0.62747 -1.46297,-1.14863 -2.3131,-1.55187 l -42.94844,-20.41753 c 1.1306,-1.8011 1.65144,-3.95307 1.43786,-6.05529 L 169.94063,12.999613 c -0.20349,-2.429755 -1.39886,-4.7794669 -3.25082,-6.4204317 -1.85197,-1.6409647 -4.34143,-2.5562438 -6.8455,-2.5255726 z m -9.59618,163.9492313 0,0 z m 111.55959,12.82428 c 8.34066,2.98048 12.80146,8.83371 12.7225,15.56559 -0.52192,14.16651 -10.39975,21.02728 -20.03685,22.62502 -4.93943,1.6845 -12.73755,-0.57732 -17.22364,-5.22544 -4.30437,-5.36245 -8.22528,-12.25024 -4.56467,-27.41058 6.00237,-10.50581 21.04796,-10.76963 29.10266,-5.55459 z m -101.33825,50.22103 c 9.69468,-0.0714 19.13216,5.11216 24.59899,13.04553 8.86571,10.18835 10.08761,40.94213 0.62719,47.7922 -10.21171,9.37645 -27.6858,12.97759 -37.42521,3.78947 -3.54224,-4.94619 -6.12245,-9.52873 -7.86958,-19.28591 -2.56041,-21.47176 7.13036,-43.01402 20.06861,-45.34129 z\\\"\\n       id=\\\"path3256\\\"\\n       sodipodi:nodetypes=\\\"cssssccccssssccccccsccsccsccscccccccscccssscccccsccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainDelete.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       d=\\\"M 159.65625 30.71875 C 88.093395 30.71875 30 88.487677 30 159.65625 C 30 230.82482 88.093395 288.56252 159.65625 288.5625 C 231.2191 288.5625 289.28125 230.82482 289.28125 159.65625 C 289.28125 88.487677 231.2191 30.71875 159.65625 30.71875 z M 157.84375 72 C 158.59438 71.985792 159.33922 71.994392 160.09375 72 C 176.61399 72.122789 194.05818 77.018142 211.4375 88.5625 L 86.4375 213.5625 C 60.537368 184.56234 69.685666 120.89857 96.4375 96.4375 C 113.21391 82.331272 134.57422 72.440433 157.84375 72 z M 235.53125 110.625 C 261.43138 139.62516 252.28307 203.32017 225.53125 227.78125 C 196.3648 252.30549 153.31112 264.04188 110.53125 235.625 L 235.53125 110.625 z \\\"\\n       id=\\\"path3281\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainMove.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainMove.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"198.18854\\\"\\n     inkscape:cy=\\\"129.1885\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 130,130 L 70,130 L 70,100 L 10,160 L 70,220 L 70,190 L 130,190 L 130,250 L 100,250 L 160,310 L 220,250 L 190,250 L 190,190 L 250,190 L 250,220 L 310,160 L 250,100 L 250,130 L 190,130 L 190,70 L 220,70 L 160,10 L 100,70 L 130,70 L 130,130 z \\\"\\n       id=\\\"path4831\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainNew.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainNew.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3748\\\">\\n      <stop\\n         id=\\\"stop3750\\\"\\n         offset=\\\"0\\\"\\n         style=\\\"stop-color:#b1b1b1;stop-opacity:1;\\\" />\\n      <stop\\n         id=\\\"stop3752\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#f8f8f8;stop-opacity:1;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3732\\\">\\n      <stop\\n         style=\\\"stop-color:#2c2c2c;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3734\\\" />\\n      <stop\\n         style=\\\"stop-color:#aaaaaa;stop-opacity:0.75294119;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3736\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3724\\\">\\n      <stop\\n         style=\\\"stop-color:#888888;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3726\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3728\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3302\\\">\\n      <stop\\n         style=\\\"stop-color:#9d9d9d;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3304\\\" />\\n      <stop\\n         style=\\\"stop-color:#dfdfdf;stop-opacity:1;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3306\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       id=\\\"perspective2858\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2919\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3732\\\"\\n       id=\\\"radialGradient3738\\\"\\n       cx=\\\"162.18814\\\"\\n       cy=\\\"173.88938\\\"\\n       fx=\\\"162.18814\\\"\\n       fy=\\\"173.88938\\\"\\n       r=\\\"121.40368\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.99372304,0,1.0914969)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3748\\\"\\n       id=\\\"radialGradient3746\\\"\\n       cx=\\\"159.69394\\\"\\n       cy=\\\"159.28571\\\"\\n       fx=\\\"159.69394\\\"\\n       fy=\\\"159.28571\\\"\\n       r=\\\"155.90823\\\"\\n       gradientTransform=\\\"matrix(1,0,0,1.0019631,0,-0.31268812)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"51.002171\\\"\\n     inkscape:cy=\\\"165.43111\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1283\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"23\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3738);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 70.323695,204.27689 C 41.841631,206.80461 27.43488,166.54249 59.305446,137.55529 49.873891,113.58226 39.63241,89.128318 90.523819,87.361033 106.27301,49.269942 126.50785,43.380107 172.54857,70.221535 c 24.08035,-4.949896 54.09769,-38.514586 71.00648,30.606245 42.5116,9.78214 51.34305,33.15299 23.87288,77.12773 16.04417,28.54308 14.43112,49.54596 -18.36375,56.92763 0.70405,25.67554 0.0649,50.80591 -47.13361,31.8305 -27.699,35.95486 -57.19689,38.30078 -88.146,-3.67275 -34.966493,0.38164 -56.960187,2.40605 -43.460875,-58.764 z\\\"\\n       id=\\\"path2948\\\"\\n       sodipodi:nodetypes=\\\"cccccccccc\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3746);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 77.05707,182.24039 C 63.933812,160.98392 31.572476,151.75124 4.2142019,139.39165 30.679923,141.54169 57.327987,144.60344 81.954069,137.55529 72.559539,108.605 63.929901,79.569724 37.881073,52.469912 c 24.509908,20.813833 50.021015,38.957802 80.188367,44.68512 4.8179,-29.638769 8.20842,-60.229129 7.3455,-93.6551159 7.91156,33.7919259 24.82706,63.0818819 44.073,91.2066169 18.18443,-22.393883 31.73946,-46.639529 40.40025,-72.842869 -3.97926,28.157749 -6.10209,56.315497 1.22425,84.473246 30.1815,-5.53135 54.99364,-18.221839 79.57624,-31.218376 -21.4992,23.026775 -42.89749,46.093916 -55.09124,72.842866 25.48741,8.04662 52.18744,10.03009 79.57624,8.56974 -29.54737,11.57525 -58.76632,23.25998 -77.12774,38.56388 12.53395,26.2048 32.69325,46.69059 52.64274,67.33374 -25.06648,-10.42451 -44.73179,-24.08972 -78.35199,-29.38199 -3.69624,29.59544 5.33453,54.10007 10.40613,80.18837 -17.43375,-21.93842 -27.4327,-46.35509 -60.60037,-63.04887 -35.09654,11.6295 -42.37898,40.95888 -58.15188,64.88524 4.3981,-26.75973 7.48188,-53.95757 0.61212,-84.47325 -28.70497,-0.76993 -55.11896,14.49699 -82.02474,26.32138 19.90929,-22.09375 43.397129,-38.46182 54.47912,-74.67925 z\\\"\\n       id=\\\"path2950\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccccccccccc\\\" />\\n    <g\\n       id=\\\"g2933\\\"\\n       transform=\\\"matrix(0.66308916,0,0,0.66308916,51.085812,66.604893)\\\">\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-168.76512,-87.437593)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8-5\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.1158,-189.26245)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-9\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-231.66709,-98.469883)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-99.709926,-156.21097)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-189.70992,-49.068112)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-133.68722,-145.69101)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-209.20179,-147.34435)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-148.68722,-55.691026)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-198.80993,-119.18415)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-93.487486,-110.91579)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-7\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-152.05893,-154.48722)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-144.70993,-87.639533)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-2\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-104.52421,-89.184173)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPaste.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"174.19811\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#646169;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 49.497473,254.94617 C 47.825874,262.83305 36.201583,261.20579 30.405591,265.55278 C 28.322858,267.11483 31.539377,271.49006 29.698484,273.33095 C 26.809794,276.21964 14.54002,280.60096 21.213203,283.93756 C 25.917942,286.28992 18.777684,290.61571 16.970562,292.42284 C 16.407185,292.98621 11.862619,303.34583 10.606601,305.85786 C 8.8718742,309.32732 0.66378058,311.62811 -1.4142135,312.22183 C -5.3815501,313.35535 -6.7727732,317.67427 -2.1213203,320 C 4.7353319,323.42833 10.071931,322.29954 16.970562,320 C 21.596201,318.45812 26.669572,317.77844 31.112698,320 C 36.578588,322.73295 50.364949,320 56.568541,320 C 62.249059,320 67.612413,321.41421 73.539103,321.41421 C 78.147222,321.41421 83.161272,321.90643 86.974132,320 C 87.233912,319.87011 86.176512,316.99055 84.852811,314.34315 C 84.737012,314.11155 86.869217,308.51143 84.852811,305.15076 C 82.266966,300.84102 73.174191,304.07874 70.003569,300.90812 C 68.147372,299.05192 69.987876,293.16133 71.417783,290.30152 C 71.59232,289.95244 65.401454,280.15842 65.053822,279.69491 C 63.028881,276.99499 57.766096,271.20963 63.639609,271.20963 C 66.398433,271.20963 65.234252,265.89903 66.468036,263.43146 C 68.386098,259.59534 68.589356,257.469 68.589356,252.82486 C 68.589356,252.05846 63.356113,251.15582 62.225395,250.70354 C 60.461018,249.99779 62.861998,252.89536 61.518288,254.23907 C 60.546463,255.2109 50.675985,254.23907 49.497473,254.94617 z \\\"\\n       id=\\\"path3196\\\"\\n       sodipodi:nodetypes=\\\"cssssssssssssssssssssssc\\\" />\\n    <path\\n       style=\\\"fill:#c5c2c2;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 53.8295,185.43081 C 48.117551,230.16693 94.90917,267.3379 133.61555,268.32077 C 162.93137,153.99105 110.3127,171.17033 53.8295,185.43081 z \\\"\\n       id=\\\"path3188\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 182.96729,2.557079 L 54.035294,186.04372 C 85.905043,179.15842 144.16417,242.05257 133.15455,268.24096 L 321.426,146.40224 C 302.97323,72.703226 258.08103,23.582864 182.96729,2.557079 z \\\"\\n       id=\\\"path3184\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#030303;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 86.523375,220.41621 L 50.5,255.09065 C 61.048111,255.62428 64.617354,261.18692 64.369775,269.5 L 100.39315,234.82557 C 100.05192,225.90076 96.35526,220.20575 86.523375,220.41621 z \\\"\\n       id=\\\"path3190\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.76067,103.45156 L 152.49269,163.67952 L 212.07438,184.96328 L 259.56663,143.19171 L 249.13583,87.282865 L 189.09687,58.210192 L 141.76067,103.45156 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3277\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,110.7288,43.297737)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,63.614871,89.09596)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,170.91744,72.502614)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,74.104227,147.90424)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,132.84879,169.84315)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,180.61948,128.82311)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainRedo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"16.170725\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 124.537,12.690252 90,50 -90,49.999998 0,-12.8125 c -20.29664,12.07637 -33.75,34.2109 -33.75,59.78125 0,38.68907 30.81093,69.5 69.5,69.5 38.68907,0 69.53125,-30.81093 69.53125,-69.5 -0.0934,-6.60391 2.559,-13.20451 7.196,-17.90755 4.637,-4.70304 11.19944,-7.4485 17.804,-7.4485 6.60457,0 13.16701,2.74546 17.804,7.4485 4.637,4.70304 7.2894,11.30364 7.196,17.90755 0,65.71107 -53.82018,119.5 -119.53125,119.5 -65.71107,0 -119.5,-53.78892 -119.5,-119.5 0,-53.27576 35.34828,-98.733461 83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelAll.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 76.36753,113.52483 L 77.074637,213.93399 L 167.5843,264.84567 L 255.97265,210.39845 L 254.55843,117.06036 L 165.46298,53.420751 L 76.36753,113.52483 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-248.04603,-85.05335)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-337.35469,-26.947524)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-159.19783,-25.889527)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-336.95273,70.72442)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-246.2033,123.92331)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-158.39386,69.713238)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.59123,4.5160638)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-266.7094,126.04463)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.49437,124.16046)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelNone.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 76.36753,113.52483 0.707107,100.40916 88.509663,50.91168 90.38835,-54.44722 -1.41422,-93.33809 -89.09545,-59.639609 -89.09545,56.104079 z\\\"\\n       id=\\\"path3251\\\"\\n       sodipodi:nodetypes=\\\"ccccccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-241.68207,-85.517816)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.86079,-84.223172)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.45883,29.712228)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionSide.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"199.96541\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 48.664209,245.16396 L 108.91547,160.16396 L 50.664209,75.163966\\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 108.7868,160.70711 L 226.16295,161.41421\\\"\\n       id=\\\"path2170\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 283.22481,77.213358 L 226.68065,159.21336 L 284.22481,241.21336\\\"\\n       id=\\\"path3271\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,165.10228,132.56626)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-343.98648,267.653)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.132419,130.55198)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,164.75661,294.92979)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-341.57497,437.10883)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.803983,299.05197)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-283.31663,352.18587)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,107.42818,214.60137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-10.218211,214.29461)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1.89162562, 18.91625616;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       d=\\\"M 30.44335,26.729064 L 30.44335,291.55665 L 295.27094,291.55665 L 295.27094,26.729064 L 30.44335,26.729064 z \\\"\\n       id=\\\"path3343\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 89.051436,52.692713 L 80.264142,218.75776 L 136.18329,186.31714 L 190.50474,269.73586 L 246.42389,237.29525 L 192.10243,153.87653 L 248.02157,121.43591 L 89.051436,52.692713 z \\\"\\n       id=\\\"path3345\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainUndo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"163.14968\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 196.07064,12.690252 -90,50 90,49.999998 0,-12.8125 c 20.29664,12.07637 33.75,34.2109 33.75,59.78125 0,38.68907 -30.81093,69.5 -69.5,69.5 -38.68907,0 -69.531254,-30.81093 -69.531254,-69.5 0.0934,-6.60391 -2.559001,-13.20451 -7.195999,-17.90755 -4.636997,-4.70304 -11.199433,-7.4485 -17.804001,-7.4485 -6.604568,0 -13.167004,2.74546 -17.804001,7.4485 -4.636998,4.70304 -7.289395,11.30364 -7.195999,17.90755 0,65.71107 53.82018,119.5 119.531254,119.5 65.71107,0 119.5,-53.78892 119.5,-119.5 0,-53.27576 -35.34828,-98.733461 -83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomFit.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomFit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective60\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"282.47425\\\"\\n     inkscape:cy=\\\"140.55244\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1478\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#dddddd;fill-opacity:0.5;stroke:#000000;stroke-width:10.00008255000000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4971\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.8709386,0,0,0.8950109,23.61288,16.185766)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:10.44176006px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4835\\\">\\n      <path\\n         d=\\\"m 70.985713,183.23596 11.216734,0 0,-38.71472 L 70,146.96852 l 0,-6.25418 12.134467,-2.44728 6.866001,0 0,44.9689 11.216732,0 0,5.77832 -29.231487,0 0,-5.77832 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4188\\\" />\\n      <path\\n         d=\\\"m 128.80288,142.78774 q -5.30246,0 -7.98768,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68522,5.20049 7.98768,5.20049 5.33644,0 7.98767,-5.20049 2.68522,-5.23447 2.68522,-15.66944 0,-10.46895 -2.68522,-15.66943 -2.65123,-5.23448 -7.98767,-5.23448 z m 0,-5.43842 q 8.53151,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 137.33439,190 128.80288,190 q -8.53152,0 -13.0522,-6.73005 -4.4867,-6.76403 -4.4867,-19.5783 0,-12.84825 4.4867,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4190\\\" />\\n      <path\\n         d=\\\"m 173.12597,142.78774 q -5.30246,0 -7.98767,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68521,5.20049 7.98767,5.20049 5.33645,0 7.98768,-5.20049 2.68521,-5.23447 2.68521,-15.66944 0,-10.46895 -2.68521,-15.66943 -2.65123,-5.23448 -7.98768,-5.23448 z m 0,-5.43842 q 8.53152,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 181.65749,190 173.12597,190 q -8.53152,0 -13.0522,-6.73005 -4.48669,-6.76403 -4.48669,-19.5783 0,-12.84825 4.48669,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4192\\\" />\\n      <path\\n         d=\\\"m 245.93277,166.68278 q -2.95713,0 -4.65664,2.51527 -1.66551,2.51527 -1.66551,7.00196 0,4.41872 1.66551,6.96797 1.69951,2.51527 4.65664,2.51527 2.88916,0 4.55468,-2.51527 1.6995,-2.54925 1.6995,-6.96797 0,-4.4527 -1.6995,-6.96797 -1.66552,-2.54926 -4.55468,-2.54926 z m 0,-4.31674 q 5.37044,0 8.53152,3.73891 3.16108,3.73891 3.16108,10.09506 0,6.35615 -3.19507,10.09506 Q 251.26922,190 245.93277,190 q -5.43841,0 -8.59949,-3.70493 -3.16108,-3.73891 -3.16108,-10.09506 0,-6.39014 3.16108,-10.09506 3.19507,-3.73891 8.59949,-3.73891 z m -35.07778,-20.69997 q -2.92315,0 -4.62266,2.54926 -1.66551,2.51526 -1.66551,6.93398 0,4.48669 1.66551,7.00196 1.66552,2.51527 4.62266,2.51527 2.95714,0 4.62265,-2.51527 1.69951,-2.51527 1.69951,-7.00196 0,-4.38473 -1.69951,-6.93398 -1.6995,-2.54926 -4.62265,-2.54926 z m 30.69306,-4.31675 5.43842,0 L 215.23971,190 l -5.43842,0 31.74676,-52.65068 z m -30.69306,0 q 5.37043,0 8.5655,3.73892 3.19507,3.70492 3.19507,10.06107 0,6.42413 -3.19507,10.12905 -3.16108,3.70492 -8.5655,3.70492 -5.40443,0 -8.56551,-3.70492 -3.12709,-3.73891 -3.12709,-10.12905 0,-6.32216 3.16108,-10.06107 3.16108,-3.73892 8.53152,-3.73892 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4194\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4967\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.981039,0,0,1.0003176,5.8435029,-5.0472616e-2)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomIn.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomIn.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3766\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"184.61711\\\"\\n     inkscape:cy=\\\"128.35938\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3768\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\"\\n         style=\\\"stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000;stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.791;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.9337,7.3957969 c -1.22836,0.017783 -2.44251,0.5361707 -3.31003,1.4132395 L 127.99649,37.675208 c -1.32116,1.336065 -1.7593,3.488685 -1.0437,5.231992 0.71562,1.743309 2.54225,2.973143 4.41336,2.976825 l 23.85599,0 0,32.594718 c -19.03094,1.043649 -36.29578,8.792862 -49.59062,20.927974 L 81.596615,75.50192 98.593999,58.603182 c 1.337912,-1.329214 1.784181,-3.508978 1.073521,-5.262062 -0.710656,-1.753085 -2.535151,-2.973199 -4.413356,-2.976825 l -40.46571,-0.270619 c -0.158907,-0.0079 -0.318211,-0.0079 -0.477119,0 -2.335535,0.221972 -4.319354,2.415492 -4.323896,4.780958 l -0.298201,40.803535 c -0.01994,1.896771 1.188724,3.743885 2.922358,4.480271 1.733635,0.73639 3.886482,0.31711 5.218495,-1.022343 L 74.797659,82.237359 98.922018,106.26244 c -11.630556,13.42652 -19.014244,30.73454 -19.949562,49.73401 l -33.487834,0 0,-24.05515 c 9.54e-4,-2.56989 -2.372929,-4.89108 -4.920297,-4.81103 -1.198278,0.0406 -2.374437,0.55669 -3.220558,1.41324 L 8.7165889,157.40968 c -1.7614043,1.78077 -1.7614043,5.01481 0,6.79558 l 28.6271781,28.86618 c 1.325004,1.33218 3.4598,1.77398 5.188676,1.0524 1.728876,-0.72158 2.948527,-2.56345 2.952179,-4.4502 l 0,-24.05515 33.607114,0 c 1.240981,18.80865 8.766006,35.88989 20.486319,49.10257 L 76.169379,238.65594 59.171991,221.75718 c -1.335156,-1.31903 -3.467046,-1.72624 -5.188676,-0.99227 -1.72163,0.73398 -2.930541,2.56544 -2.922358,4.4502 l 0.26838,40.83362 c 0.01573,2.5291 2.322811,4.81236 4.830836,4.78095 l 40.465711,-0.30069 c 1.873236,-0.0154 3.680176,-1.25616 4.383526,-3.00689 0.70337,-1.75074 0.26095,-3.90631 -1.073508,-5.232 L 82.968334,245.39136 106.3472,221.48657 c 13.35681,11.91347 30.59938,19.44988 49.56079,20.32659 l 0,32.38424 -23.85597,0 c -1.87113,0.004 -3.69775,1.23352 -4.41337,2.97683 -0.71561,1.7433 -0.27746,3.89593 1.0437,5.23198 l 28.62718,28.86618 c 1.76603,1.7761 4.97329,1.7761 6.73932,0 l 28.62718,-28.86618 c 1.32117,-1.33605 1.75932,-3.48868 1.0437,-5.23198 -0.71562,-1.74331 -2.54224,-2.97314 -4.41336,-2.97683 l -23.85599,0 0,-32.50452 c 18.91988,-1.36942 36.01699,-9.38124 49.11351,-21.70975 l 23.67706,25.97954 -16.99739,16.89874 c -1.33789,1.32921 -1.78418,3.50897 -1.07351,5.26207 0.71065,1.75307 2.53515,2.97319 4.41336,2.97682 l 40.4657,0.27062 c 2.49814,0.0155 4.7852,-2.26196 4.80102,-4.78097 l 0.29821,-40.80352 c 0.009,-1.88477 -1.20074,-3.71624 -2.92237,-4.45021 -1.72162,-0.73397 -3.85353,-0.32678 -5.18866,0.99227 l -16.9974,16.89875 -23.8858,-26.19004 c 11.5936,-13.79235 18.76194,-31.49959 19.23388,-50.87663 l 34.11406,0 0,24.05514 c -0.008,1.89176 1.19113,3.72124 2.92236,4.45021 1.73125,0.72896 3.88998,0.31342 5.21849,-1.02234 l 28.62718,-28.86617 c 1.77918,-1.78291 1.77918,-5.04275 0,-6.82565 L 282.6429,125.08559 c -0.90259,-0.91262 -2.1811,-1.43496 -3.45912,-1.41325 -2.46815,0.047 -4.68191,2.32184 -4.68173,4.81103 l 0,24.05515 -34.44207,0 c -1.6396,-17.98221 -9.04936,-34.27895 -20.33723,-46.99774 l 23.40868,-24.536247 16.99739,16.898738 c 1.33515,1.319049 3.46704,1.726245 5.18867,0.992274 1.72162,-0.73397 2.93055,-2.565432 2.92236,-4.4502 L 267.97148,53.61174 c -0.0313,-2.519034 -2.33266,-4.782323 -4.83084,-4.750891 l -40.46571,0.270621 c -1.87323,0.01535 -3.68017,1.256162 -4.38354,3.006893 -0.70337,1.750731 -0.26095,3.906314 1.07352,5.231992 L 236.36229,74.269093 212.95361,98.7452 C 199.918,87.125675 183.17867,79.683488 164.76453,78.508812 l 0,-32.624787 23.85598,0 c 1.87112,-0.0037 3.69774,-1.233516 4.41336,-2.976825 0.71561,-1.743307 0.27747,-3.895927 -1.0437,-5.231992 L 163.36299,8.8090364 C 162.46736,7.9036606 161.20183,7.3821292 159.9337,7.3957969 z m -0.29821,90.1767151 c 37.68702,2.849578 62.29024,31.065418 61.69754,62.543368 -0.66052,35.07958 -25.42255,62.86092 -61.69754,62.54337 -33.68472,-0.29486 -64.464992,-23.49428 -63.576187,-62.54337 0.890095,-39.10566 27.382967,-61.739358 63.576187,-62.543368 z\\\"\\n       id=\\\"path4847\\\"\\n       sodipodi:nodetypes=\\\"cccsccccccscccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsssc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomOut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomOut.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3832\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"154.5481\\\"\\n     inkscape:cy=\\\"146.35603\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3854\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.25 10 C 77.278938 10 10.71875 76.943918 10.71875 159.21875 C 10.71875 241.49357 77.278938 308.40625 159.25 308.40625 C 241.22106 308.40625 307.84375 241.49357 307.84375 159.21875 C 307.84375 76.943918 241.22106 10 159.25 10 z M 155.875 27.59375 C 155.91666 27.592693 155.95833 27.594768 156 27.59375 L 156 61.4375 L 131 61.4375 C 129.03915 61.4413 127.12493 62.719466 126.375 64.53125 C 125.62507 66.343035 126.08423 68.580206 127.46875 69.96875 L 157.46875 99.96875 C 159.32168 101.83325 162.70957 101.83325 164.5625 99.96875 L 194.5625 69.96875 C 195.95072 68.576522 196.3826 66.314253 195.625 64.5 C 194.8674 62.685746 192.96606 61.429035 191 61.4375 L 166 61.4375 L 166 27.71875 C 233.43435 31.142779 287.33666 85.620853 290.1875 153.5625 L 258.4375 153.5625 L 258.4375 128.5625 C 258.4385 125.89168 255.95078 123.47931 253.28125 123.5625 C 252.02551 123.6047 250.79295 124.14106 249.90625 125.03125 L 219.90625 155.03125 C 218.06038 156.88197 218.06038 160.24303 219.90625 162.09375 L 249.90625 192.09375 C 251.29479 193.47827 253.53196 193.93743 255.34375 193.1875 C 257.15553 192.43757 258.43367 190.52335 258.4375 188.5625 L 258.4375 163.5625 L 290.25 163.5625 C 288.03607 232.42829 233.36911 287.73364 165.0625 290.71875 L 165.0625 260 L 190.0625 260 C 192.03598 260.009 193.96634 258.73069 194.71875 256.90625 C 195.47117 255.08181 194.99955 252.82257 193.59375 251.4375 L 163.59375 221.4375 C 162.64999 220.50778 161.3246 219.97762 160 220 C 158.71699 220.0103 157.44542 220.53722 156.53125 221.4375 L 126.53125 251.4375 C 125.12545 252.82257 124.65383 255.08181 125.40625 256.90625 C 126.15866 258.73069 128.08902 260.00857 130.0625 260 L 155.0625 260 L 155.0625 290.78125 C 86.483864 288.62253 31.34883 233.7369 28.40625 165 L 62.15625 165 L 62.15625 190 C 62.16005 191.96085 63.438216 193.84382 65.25 194.59375 C 67.061785 195.34368 69.298956 194.91577 70.6875 193.53125 L 100.6875 163.53125 C 102.53337 161.68053 102.53337 158.31947 100.6875 156.46875 L 70.6875 126.46875 C 69.741627 125.52028 68.401813 124.97743 67.0625 125 C 64.475993 125.0488 62.156049 127.41303 62.15625 130 L 62.15625 155 L 28.34375 155 C 30.519811 85.260706 86.399976 29.356768 155.875 27.59375 z \\\"\\n       id=\\\"path4847\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"75\\\"\\n     inkscape:window-y=\\\"20\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,275.05896 L 57.691929,170.69538 L 114.0424,170.69538 L 114.0424,43.728529 L 205.58038,43.691929 L 206.19198,170.01769 L 261.8795,170.69538 L 159.78571,275.05896 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"585\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.03675,297.27002 c 30.31102,-5.50801 30.31102,-22.03203 0,-27.54004 l -202.073498,0 c -30.311025,5.50801 -30.311025,22.03203 0,27.54004 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.90621,296.36358 262,192 57.812425,192 159.90621,296.36358 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0855802,0.3993744,-0.3209242,0.8723369,29.825633,-21.800103)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.5044248,0,148.84954)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 152.85714,282.85714 C 77.754858,282.29557 25.677197,216.09197 13.571429,143.57143 C 7.347206,39.401886 96.731177,13.499887 162.85714,13.571429 C 250.16174,20.445262 307.17949,64.110107 303.57143,149.28571 C 297.04861,249.7588 215.23148,282.68932 152.85714,282.85714 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-rule:evenodd;stroke:#000000;stroke-width:9.40279675;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1.0\\\"\\n       d=\\\"M 149.94872,284.7014 C 135.35088,292.38351 123.55941,301.69213 120.41569,316.01289 L 191.72717,314.1342 C 180.3414,303.88155 170.53007,293.35515 149.94872,284.7014 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveHFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 100,70 L 100,130 L 220,130 L 220,70 L 310,160 L 220,250 L 220,190 L 100,190 L 100,250 L 10,160 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveJoin.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 310,160\\\"\\n       id=\\\"path2161\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       id=\\\"path2163\\\"\\n       sodipodi:cx=\\\"160.35715\\\"\\n       sodipodi:cy=\\\"160.71428\\\"\\n       sodipodi:rx=\\\"10.357142\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"M 170.71429 160.71428 A 10.357142 10 0 1 1  150,160.71428 A 10.357142 10 0 1 1  170.71429 160.71428 z\\\"\\n       transform=\\\"matrix(1.9310346,0,0,2,-149.65519,-161.42855)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10.5;stroke-miterlimit:4;stroke-dasharray:10.5, 21;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"159.64285\\\"\\n       sodipodi:rx=\\\"40\\\"\\n       sodipodi:ry=\\\"39.642857\\\"\\n       d=\\\"M 200 159.64285 A 40 39.642857 0 1 1  120,159.64285 A 40 39.642857 0 1 1  200 159.64285 z\\\"\\n       transform=\\\"matrix(0.8835172,0,0,0.8914768,18.63725,17.682092)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeft.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 44.102199,159.37544 L 148.46578,57.281659 L 148.46578,113.63213 L 275.43263,113.63213 L 275.46923,205.17011 L 149.14347,205.78171 L 148.46578,261.46923 L 44.102199,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.42203379;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 24.849388,259.83188 c 5.515594,29.96228 22.062373,29.96228 27.577967,0 l 0,-199.748559 c -5.515594,-29.962283 -22.062373,-29.962283 -27.577967,0 l 0,199.748559 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 63.63642,159.74331 168,57.64953 168,114 l 126.96685,0 0.0366,91.53798 -126.32576,0.6116 L 168,261.8371 63.63642,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 25.63642,160.09378 130,58 130,262.18757 25.63642,160.09378 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 64.102199,159.37544 168.46578,57.281659 l 0,56.350471 126.96685,0 0.0366,91.53798 -126.32576,0.6116 -0.67769,55.68752 L 64.102199,159.37544 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRight.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 275.46923,159.37544 L 171.10565,57.281659 L 171.10565,113.63213 L 44.138799,113.63213 L 44.102199,205.17011 L 170.42796,205.78171 L 171.10565,261.46923 L 275.46923,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2839\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 295.57464,260.99435 c -5.50801,30.31102 -22.03203,30.31102 -27.54004,0 l 0,-202.073498 c 5.50801,-30.311025 22.03203,-30.311025 27.54004,0 l 0,202.073498 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 256.36358,159.74331 152,57.64953 152,114 l -126.96685,0 -0.0366,91.53798 126.32576,0.6116 L 152,261.8371 256.36358,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 296,160 191.63642,57.90622 l 0,204.18757 L 296,160 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 257.46923,159.37544 153.10565,57.281659 l 0,56.350471 -126.966851,0 -0.0366,91.53798 126.325761,0.6116 0.67769,55.68752 104.36358,-102.09379 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1644\\\"\\n     inkscape:window-height=\\\"898\\\"\\n     inkscape:window-x=\\\"154\\\"\\n     inkscape:window-y=\\\"90\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.82715322,0,0,0.82715322,1.6734456,-2.9378058)\\\">\\n      <path\\n         d=\\\"m -2.0231386,38.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8041\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,57.239336 13.123642,0 0,-45.296452 -14.276932,2.863341 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8043\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,8.6818581 q -3.181489,0 -5.368763,2.2270419 -2.187274,2.187274 -2.187274,5.368763 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.368763 -2.187271,-2.2270419 -5.328991,-2.2270419 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563988 0.91468,2.266811 0.91468,4.891539 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.328994 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8045\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,286,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 34,181.00001 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 162,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162,179.00001 219.85714,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 162,179.00001 110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162.57143,180.57143 169,20 l -7,-1 0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-138.16008\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8064\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 32.217638,2.6254595 31.53651,0 0,6.7606643 -24.179317,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942154,0 15.748371,5.4483 5.806218,5.4483 5.806218,14.754156 0,9.584236 -5.965292,14.91323 -5.965292,5.289226 -16.822124,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857555,-0.636298 -7.993491,-1.908893 l 0,-8.073029 q 3.579175,1.948662 7.396962,2.903109 3.817787,0.954446 8.073029,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442516,0.715836 -3.181489,0.715835 -6.522052,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8066\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,6.6818581 q -3.181489,0 -5.368763,2.2270424 -2.187274,2.1872735 -2.187274,5.3687625 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.3687625 -2.187271,-2.2270424 -5.328991,-2.2270424 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.3289939 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8068\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 180.85714,22.142854 163,19.999997 163.57143,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-133.16007\\\"\\n     inkscape:cy=\\\"148.99555\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 202.28571,24.285714 163,20 l 0.57143,161.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8071\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,55.239336 13.123642,0 0,-45.2964516 -14.276932,2.8633406 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8073\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 84.075912,2.6254595 31.536508,0 0,6.7606643 -24.179314,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942158,0 15.748368,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.822125,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857556,-0.636298 -7.993492,-1.908893 l 0,-8.073029 q 3.579176,1.948662 7.396963,2.903109 3.817786,0.954446 8.073028,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442515,0.715836 -3.181489,0.715835 -6.522053,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8075\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8077\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"152.55422\\\"\\n     inkscape:cy=\\\"163.97182\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180.71428 244.42857,33.571428 163,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8048\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 56.476492,29.986266 q 5.766449,1.232827 8.987707,5.130151 3.261026,3.897324 3.261026,9.624005 0,8.788863 -6.044829,13.600866 -6.04483,4.812002 -17.180041,4.812002 -3.73825,0 -7.715112,-0.755604 -3.937092,-0.715835 -8.152565,-2.187274 l 0,-7.754879 q 3.340563,1.948662 7.317425,2.942877 3.976861,0.994215 8.31164,0.994215 7.556037,0 11.493129,-2.982646 3.976862,-2.982646 3.976862,-8.669557 0,-5.249457 -3.698481,-8.192335 -3.658713,-2.982646 -10.220534,-2.982646 l -6.919739,0 0,-6.60159 7.237888,0 q 5.925523,0 9.067244,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.261026,-6.999276 -3.221258,-2.4656537 -9.266087,-2.4656537 -3.300795,0 -7.078813,0.715835 -3.778019,0.7158351 -8.311641,2.2270427 l 0,-7.1583508 q 4.573391,-1.2725956 8.550252,-1.9088935 4.01663,-0.6362978 7.556037,-0.6362978 9.146781,0 14.475775,4.1757045 5.328995,4.1359358 5.328995,11.2147486 0,4.931309 -2.823572,8.351409 -2.823572,3.380333 -8.03326,4.692697 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8050\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 101.17642,7.9146851 q -6.203908,0 -9.345628,6.1243669 -3.101952,6.084598 -3.101952,18.333331 0,12.208964 3.101952,18.333331 3.14172,6.084598 9.345628,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124367 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243669 -9.34562,-6.1243669 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741859 5.28922,22.9067219 0,14.992767 -5.28922,22.906721 -5.24946,7.874186 -15.23138,7.874186 -9.981926,0 -15.271152,-7.874186 -5.249457,-7.913954 -5.249457,-22.906721 0,-15.032536 5.249457,-22.9067219 5.289226,-7.9139542 15.271152,-7.9139542 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8052\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8054\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-2.4457843\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1468\\\"\\n     inkscape:window-height=\\\"892\\\"\\n     inkscape:window-x=\\\"267\\\"\\n     inkscape:window-y=\\\"87\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8189\\\"\\n       transform=\\\"matrix(0.82715321,0,0,0.82715321,58.222329,-1.8743271)\\\">\\n      <path\\n         d=\\\"m 210.48975,15.472333 0,15.230468 15.23046,0 0,4.648438 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648438 15.23047,0 0,-15.230468 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8057\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 241.75504,55.953626 13.12364,0 0,-45.296451 -14.27693,2.86334 0,-7.3174247 14.19739,-2.8633402 8.03326,0 0,52.6138759 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8059\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.87362,7.3961487 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872739 -2.18727,5.3687629 0,3.14172 2.18727,5.328994 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328994 0,-3.141721 -2.22704,-5.3687629 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563982 0.91468,2.266811 0.91468,4.89154 0,5.249457 -3.69849,8.908169 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579175 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289943 3.65872,-9.0274754 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8061\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(35,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 287,181.00001 -250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 159,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159,179.00001 101.14286,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 159,179.00001 -110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 158.42857,180.57143 152,20 l 7,-1 -0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"63.2685\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8172\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.934934,-1.0275628)\\\">\\n      <path\\n         d=\\\"m 209.48975,15.04897 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8080\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.44267,2.3397425 31.53651,0 0,6.7606643 -24.17931,0 0,14.5553132 q 1.74981,-0.59653 3.49963,-0.87491 1.74982,-0.318149 3.49964,-0.318149 9.94216,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.82213,5.289226 -3.73824,0 -7.63557,-0.636298 -3.85755,-0.636298 -7.99349,-1.908893 l 0,-8.073029 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715836 -3.18148,0.715835 -6.52205,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8082\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.87362,6.3961411 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942153 2.34635,0.9544468 4.0564,2.783803 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8084\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 142.14286,22.142854 160,19.999997 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"108.98279\\\"\\n     inkscape:cy=\\\"152.56698\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showguides=\\\"false\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 120.71429,24.285714 160,20 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8177\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,64.049971,-1.0275659)\\\">\\n      <path\\n         d=\\\"m 157.48975,14.472329 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8087\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 188.75504,54.953622 13.12364,0 0,-45.2964508 -14.27693,2.8633398 0,-7.3174245 14.19739,-2.8633402 8.03326,0 0,52.6138757 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8089\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.30095,2.3397463 31.53651,0 0,6.7606643 -24.17932,0 0,14.5553124 q 1.74982,-0.596529 3.49964,-0.874909 1.74982,-0.318149 3.49964,-0.318149 9.94215,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.9653,14.91323 -5.96529,5.289226 -16.82212,5.289226 -3.73825,0 -7.63557,-0.636298 -3.85756,-0.636298 -7.99349,-1.908894 l 0,-8.073028 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618944 4.01663,-3.618943 4.01663,-9.822847 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715835 -3.18149,0.715835 -6.52205,2.227043 l 0,-29.8264607 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8091\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.73189,6.3961449 q -3.18149,0 -5.36876,2.2270424 -2.18728,2.1872737 -2.18728,5.3687627 0,3.141721 2.18728,5.328994 2.18727,2.147506 5.36876,2.147506 3.18149,0 5.36876,-2.147506 2.18728,-2.187273 2.18728,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18728,-2.2270424 -5.329,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89154,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74403,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.98771,3.618944 -5.36876,0 -8.94793,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65871,-9.0274752 3.65872,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8093\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"12.554216\\\"\\n     inkscape:cy=\\\"162.54324\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:3,9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 160,180.71428 78.571427,33.571428 160,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8183\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.136667,-0.79565869)\\\">\\n      <path\\n         d=\\\"m 158.61496,14.226381 0,15.230469 15.23047,0 0,4.648437 -15.23047,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8096\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 212.82674,29.414836 q 5.76645,1.232827 8.98771,5.130151 3.26102,3.897324 3.26102,9.624004 0,8.788864 -6.04483,13.600866 -6.04483,4.812003 -17.18004,4.812003 -3.73825,0 -7.71511,-0.755604 -3.93709,-0.715835 -8.15256,-2.187274 l 0,-7.75488 q 3.34056,1.948663 7.31742,2.942878 3.97686,0.994215 8.31164,0.994215 7.55604,0 11.49313,-2.982646 3.97686,-2.982646 3.97686,-8.669558 0,-5.249457 -3.69848,-8.192334 -3.65871,-2.982646 -10.22053,-2.982646 l -6.91974,0 0,-6.60159 7.23789,0 q 5.92552,0 9.06724,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.26103,-6.999276 -3.22125,-2.4656539 -9.26608,-2.4656539 -3.3008,0 -7.07882,0.715835 -3.77801,0.7158351 -8.31164,2.2270419 l 0,-7.15835 q 4.57339,-1.2725957 8.55026,-1.9088935 4.01663,-0.6362978 7.55603,-0.6362978 9.14678,0 14.47578,4.1757045 5.32899,4.1359358 5.32899,11.2147488 0,4.931308 -2.82357,8.351409 -2.82357,3.380332 -8.03326,4.692697 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8098\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 257.52667,7.3432549 q -6.20391,0 -9.34563,6.1243661 -3.10195,6.084598 -3.10195,18.333331 0,12.208965 3.10195,18.333331 3.14172,6.084598 9.34563,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124366 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243661 -9.34562,-6.1243661 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741851 5.28922,22.9067211 0,14.992768 -5.28922,22.906722 -5.24946,7.874186 -15.23138,7.874186 -9.98193,0 -15.27115,-7.874186 -5.24946,-7.913954 -5.24946,-22.906722 0,-15.032536 5.24946,-22.9067211 5.28922,-7.9139542 15.27115,-7.9139542 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8100\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.85711,6.1104279 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872737 -2.18727,5.3687627 0,3.141721 2.18727,5.328994 2.18728,2.147506 5.36877,2.147506 3.18148,0 5.36876,-2.147506 2.18727,-2.187273 2.18727,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65872,-9.0274752 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8102\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0943065,0.3182308,-0.3235039,0.6950983,44.992262,22.609241)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1.0080384,0,0,0.4019374,14.926879,158.58684)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.96230125;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 169.01275,265.3672 C 93.306764,264.91973 184.09594,254.28496 171.89287,196.49891 C 136.81751,116.90916 48.312987,78.904811 130.8513,57.624012 C 173.1434,48.101242 249.69276,67.159794 188.4535,112.26331 C 168.91776,123.45431 278.69027,247.58954 169.01275,265.3672 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55.442114\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.42706966;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 166.08095,266.83675 C 151.36577,272.95804 139.47952,280.37536 136.31052,291.78647 L 208.19524,290.28949 C 196.71794,282.11994 186.82775,273.73226 166.08095,266.83675 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 110,226 L 83.571429,243.85714\\\"\\n       id=\\\"path3224\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 90,176 L 57.857143,183.14286\\\"\\n       id=\\\"path3226\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,116 L 50,116\\\"\\n       id=\\\"path3228\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,56 L 50,36\\\"\\n       id=\\\"path3230\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,56 L 260,46\\\"\\n       id=\\\"path3232\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,116 L 265.71429,116\\\"\\n       id=\\\"path3234\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,166 L 275,171\\\"\\n       id=\\\"path3236\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,226 L 270,246\\\"\\n       id=\\\"path3238\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 120,36 L 110,6\\\"\\n       id=\\\"path3240\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 180,36 L 190,6\\\"\\n       id=\\\"path3242\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,43.691929 L 57.691929,148.05551 L 114.0424,148.05551 L 114.0424,275.02236 L 205.58038,275.05896 L 206.19198,148.7332 L 261.8795,148.05551 L 159.78571,43.691929 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.25104,24.788943 c 30.31102,5.508007 30.31102,22.032027 0,27.540034 l -202.073498,0 c -30.311025,-5.508007 -30.311025,-22.032027 0,-27.540034 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,64 -102.093781,104.36358 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 160,64 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,26 102.09379,104.36358 -204.18757,0 L 160,26 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,61.691929 57.691929,166.05551 l 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 159.78571,61.691929 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveVFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,10 L 250,100 L 190,100 L 190,220 L 250,220 L 160,310 L 70,220 L 130,220 L 130,100 L 70,100 L 160,10 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionChain.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3810\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.621464,0,0,2.621464,4.540555,48.791192)\\\">\\n      <line\\n         id=\\\"line3812\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3814\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3816\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3818\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3820\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3822\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3824\\\"\\n         y2=\\\"31.999731\\\"\\n         x2=\\\"79.942604\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3826\\\"\\n         y2=\\\"46.999462\\\"\\n         x2=\\\"105.92352\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n      <line\\n         id=\\\"line3828\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"79.942299\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3885\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-171.09202,33.69748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,158.10549,34.777218)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,405.75369,116.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3889\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-141.7775,-40.634342)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,48.105487,74.777215)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,295.75368,156.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-196.12626,-147.6538)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionCurElement.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-30.914228\\\"\\n     inkscape:cy=\\\"168.99852\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <ellipse\\n       ry=\\\"45.784992\\\"\\n       rx=\\\"47.872509\\\"\\n       cy=\\\"170\\\"\\n       cx=\\\"160.1275\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5.40349102;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841\\\"\\n       transform=\\\"translate(-1.19968,0)\\\">\\n      <path\\n         d=\\\"m 162.0258,144.65547 -10.63798,28.84679 21.31479,0 -10.67681,-28.84679 z m -4.42602,-7.72612 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         id=\\\"path4196\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4\\\"\\n       cx=\\\"255.71176\\\"\\n       cy=\\\"259.69077\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1\\\">\\n      <path\\n         d=\\\"m 257.17732,233.76078 -10.63798,28.84678 21.31479,0 -10.67681,-28.84678 z m -4.42602,-7.72613 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4190\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-9\\\"\\n       cx=\\\"62.127495\\\"\\n       cy=\\\"260\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-4\\\">\\n      <path\\n         d=\\\"m 63.593049,234.07001 -10.637981,28.84679 21.314787,0 -10.676806,-28.84679 z m -4.426021,-7.72612 8.890868,0 22.091281,57.96534 -8.153197,0 -5.280166,-14.86987 -26.129055,0 -5.280166,14.86987 -8.269671,0 22.130106,-57.96534 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4187\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-5\\\"\\n       cx=\\\"160.1275\\\"\\n       cy=\\\"60\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-5\\\"\\n       transform=\\\"translate(-1.49992,0)\\\">\\n      <path\\n         d=\\\"m 161.59305,34.070018 -10.63798,28.846788 21.31479,0 -10.67681,-28.846788 z m -4.42602,-7.726125 8.89087,0 22.09128,57.965349 -8.1532,0 -5.28017,-14.869878 -26.12905,0 -5.28017,14.869878 -8.26967,0 22.13011,-57.965349 z\\\"\\n         id=\\\"path4193\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionRingBlk.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3937\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.4899701,0,0,2.4899701,26.948713,30.700421)\\\">\\n      <line\\n         id=\\\"line3939\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3941\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3943\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3945\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3947\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3949\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3951\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3953\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3955\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"79.942001\\\" />\\n      <line\\n         id=\\\"line3957\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3959\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3961\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"27.9795\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3963\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"79.941498\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"79.942001\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-81.933097,-38.115125)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-7\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.7766,109.10718)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-1\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-2\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17313,72.504683)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-3\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-1\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17314,-1.722748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-68\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-6\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.77659,-38.895518)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-8\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-27\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.06844,-3.787902)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-9\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-54\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-12\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.75682,71.934407)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-33\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-4\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-13\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-82.048668,108.41879)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-77\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-18.028899,71.246022)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-93\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-19\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-17.340514,-3.217626)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionSmRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4170\\\"\\n       inkscape:persp3d-origin=\\\"54 : 21.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 32 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 32 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-0\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4150\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9029405,0,0,2.9029405,4.6189711,81.382589)\\\">\\n      <line\\n         id=\\\"line4152\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4154\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4156\\\"\\n         y2=\\\"62\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4158\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"62\\\"\\n         x1=\\\"53.98\\\" />\\n      <line\\n         id=\\\"line4160\\\"\\n         y2=\\\"17\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4162\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4164\\\"\\n         y2=\\\"2.000165\\\"\\n         x2=\\\"2.0191426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4166\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"105.9426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-255.281,-36.286753)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-6\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,-79.76244)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-8\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-103.88435,-36.613327)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-9\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-104.66888,51.903875)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-00\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-6\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-3\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,92.833999)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-9\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-4\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-254.51397,52.038479)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-4\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-60\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionToggle.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c -46.9442,0 -85,-38.0558 -85,-85 0,-46.9442 38.0558,-85 85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n    <path\\n       style=\\\"fill:#000000;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c 46.9442,0 85,-38.0558 85,-85 0,-46.9442 -38.0558,-85 -85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1-7\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionUncurrent.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-40.106616\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1850\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"70\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"M 160 74 C 113.0558 74 75 112.0558 75 159 C 75 205.9442 113.0558 244 160 244 C 206.9442 244 245 205.9442 245 159 C 245 112.0558 206.9442 74 160 74 z \\\"\\n       id=\\\"path2875-1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplateNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplateNext.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 L 190,40 L 190,110 L 10,110 L 10,210 L 190,210 C 190,210 190,280 190,280 L 310,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplatePrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplatePrev.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 130,40 L 130,110 L 310,110 L 310,210 L 130,210 C 130,210 130,280 130,280 L 10,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolArom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"19.717178\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n    <circle\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4138\\\"\\n       cx=\\\"160\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"73.650795\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolDrag.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-114.21469\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1\\\"\\n       d=\\\"m 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.19399,7.39813 -20.84853,13.90316 -21.45454,14.45564 -2.60452,2.37443 -3.5731,7.35066 -2.11169,10.84917 1.53903,3.68433 5.1482,6.08608 9.17291,6.10418 2.01671,0.009 3.87187,-0.81214 17.31315,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.75771,-9.96772 -10.09659,-10.26003 -12.52407,-10.80327 -5.52754,-1.23701 -10.96573,2.29848 -11.76838,7.6509 -0.47382,3.15968 0.52816,6.22712 3.57739,10.95165 3.38012,5.23721 8.36183,15.07942 15.73019,31.07758 7.08217,15.37679 13.71422,28.52253 18.13559,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z\\\"\\n       id=\\\"path4722\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:#000000\\\"\\n       d=\\\"m 134.82466,273.41608 c -5.80862,-1.6108 -10.46095,-4.72519 -16.43545,-11.00231 -4.85695,-5.10295 -8.32243,-9.82569 -13.32153,-18.15452 -3.8183,-6.36155 -13.189163,-25.03627 -18.811557,-37.48861 -5.584843,-12.36919 -11.331247,-23.79278 -14.54321,-28.91127 -3.912906,-6.23548 -4.932004,-8.94395 -5.221532,-13.87741 -0.19007,-3.23866 -0.05317,-4.45531 0.776431,-6.90035 1.08983,-3.21196 2.809606,-5.97011 5.039937,-8.08297 l 1.411555,-1.3372 -2.283176,-2.05276 c -1.524641,-1.37079 -2.855587,-3.21098 -4.00614,-5.53896 -1.531867,-3.09952 -1.7437,-3.96029 -1.90992,-7.76077 -0.22887,-5.23296 0.550666,-8.26182 3.113499,-12.09739 2.180307,-3.26308 0.464333,-2.01174 26.409189,-19.25824 l 21.047404,-13.990971 14.57128,-0.138947 14.57127,-0.138934 1.29094,-1.811486 c 1.75423,-2.461626 4.69929,-4.797698 7.99299,-6.340171 2.47779,-1.160367 3.23542,-1.284647 7.83155,-1.284647 4.7443,0 5.29556,0.09812 8.15223,1.451665 1.68511,0.79842 3.88953,2.197638 4.8987,3.109366 l 1.83486,1.65768 1.34612,-1.406005 c 0.74038,-0.773306 2.8792,-2.163939 4.75294,-3.0903 3.00627,-1.486274 3.90363,-1.705716 7.63257,-1.866503 4.07983,-0.175908 6.07109,0.212155 10.12368,1.972955 0.75135,0.326463 0.80951,-0.165369 0.80951,-6.844982 0,-3.9582 0.2308,-8.299812 0.51286,-9.648026 1.20526,-5.76068 5.29243,-10.78836 10.94834,-13.467677 2.9094,-1.37824 3.43841,-1.473312 8.19847,-1.473312 4.76549,0 5.28676,0.09403 8.21474,1.48093 4.15609,1.968702 7.82558,5.494965 9.71781,9.338492 l 1.49582,3.038319 0.12085,79.570454 c 0.13305,87.59899 0.26376,83.15726 -2.70887,92.04841 -3.74053,11.18789 -11.68774,21.81638 -22.64435,30.2842 -4.65481,3.59747 -11.28374,7.68197 -15.47744,9.53662 l -2.56783,1.13562 -30.40146,-0.0414 c -22.76429,-0.031 -30.92439,-0.18638 -32.48308,-0.61863 z M 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.193992,7.39813 -20.848528,13.90316 -21.454536,14.45564 -2.604526,2.37443 -3.573104,7.35066 -2.111693,10.84917 1.539032,3.68433 5.148195,6.08608 9.172907,6.10418 2.016712,0.009 3.871872,-0.81214 17.313152,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.757714,-9.96772 -10.096591,-10.26003 -12.524074,-10.80327 -5.527533,-1.23701 -10.965729,2.29848 -11.768371,7.6509 -0.473825,3.15968 0.52816,6.22712 3.577384,10.95165 3.380116,5.23721 8.361832,15.07942 15.730189,31.07758 7.082172,15.37679 13.714222,28.52253 18.135592,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z M 112.90759,139.5978 c -0.21058,-0.21058 -4.68064,1.97376 -11.17695,5.46172 l -4.182758,2.24578 7.652108,7.94148 7.65211,7.94149 0.12373,-11.69925 c 0.0681,-6.43459 0.0373,-11.78563 -0.0682,-11.89122 z\\\"\\n       id=\\\"path4716\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"RetroErasor.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective16\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"101.20996\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1387\\\"\\n     inkscape:window-height=\\\"856\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2983\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3805\\\"\\n       transform=\\\"matrix(0.95048511,0,0,0.95048511,-7.209769,-44.503179)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3021\\\"\\n         d=\\\"m 30,220 0,80 130,0 0,-80 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3029\\\"\\n         d=\\\"m 30,220 60,-30 130,0 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3031\\\"\\n         d=\\\"m 90,190 120,-60 120,0 -110,60\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3033\\\"\\n         d=\\\"m 160,220 60,-30 0,80 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3035\\\"\\n         d=\\\"m 220,190 0,80 110,-60 0,-80\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolPan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-33.40249\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4759\\\"\\n       transform=\\\"matrix(1.1035479,0,0,1.1035479,259.85038,18.296497)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4753\\\"\\n         d=\\\"m -92.02537,30.740234 c 2.45111,0 4.90206,1.015331 6.93164,3.044922 l 3.06836,3.06836 0,41.93164 0,41.931644 4.95508,0 4.95508,0 0.35742,-12.1875 0.35742,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.80664,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.06836,3.06836 0,27.27148 c 0,29.8793 -0.11379,30.57518 -9.17774,55.85742 -2.44343,6.81549 -4.81894,15.39361 -5.27734,19.0625 l -0.83398,6.67188 -34.67188,0 -34.67187,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.06836,-3.06836 c 2.02959,-2.029591 4.48053,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1\\\" />\\n      <path\\n         id=\\\"path4746\\\"\\n         d=\\\"m -92.042969,21.097656 c -4.169447,0.0083 -8.343911,1.22813 -11.527341,3.65625 -2.46099,1.877091 -5.19972,5.050631 -6.08594,7.052735 -1.43274,3.23679 -2.35022,3.702655 -8.29102,4.195312 -7.08275,0.587357 -11.48476,3.067017 -15.875,8.943359 -2.45502,3.286042 -2.59594,5.308607 -2.9414,42.654297 l -0.36133,39.205081 -6.51367,-3.03125 c -3.58178,-1.66763 -8.07753,-3.03792 -9.99024,-3.04492 -5.12526,-0.018 -11.35175,2.95887 -14.46289,6.91406 -5.99633,7.62309 -5.04663,14.71933 3.375,25.21289 3.63938,4.53475 8.11406,12.47823 11.34571,20.13672 3.20064,7.58499 7.30372,14.88134 10.25,18.22851 7.87832,8.95023 10.19097,15.56933 10.84765,31.0586 l 0.56836,13.4375 44.839846,0 44.839843,0 0,-7.83985 c 0,-8.54888 2.179562,-17.0333 9.544922,-37.16015 l 4.802735,-13.125 0.429687,-29.375 c 0.27731,-18.93033 -0.05681,-31.00119 -0.939453,-33.94727 -1.80016,-6.00858 -8.806804,-12.06842 -15.121094,-13.07812 -2.73207,-0.43687 -4.966797,-1.437874 -4.966797,-2.224613 0,-0.78674 -1.694735,-3.485705 -3.765625,-5.998047 -4.1349,-5.016353 -10.661225,-7.804379 -16.328125,-6.972656 l -3.65625,0.537109 0,-24.90625 c 0,-27.98198 -0.682675,-30.943484 -8.515625,-36.917969 -3.16682,-2.415449 -7.332505,-3.619648 -11.501953,-3.611328 z m 0.01758,9.642578 c 2.451114,0 4.902056,1.015331 6.931641,3.044922 l 3.068359,3.06836 0,41.93164 0,41.931644 4.955079,0 4.955078,0 0.357422,-12.1875 0.357421,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.806641,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.068359,3.06836 0,27.27148 c 0,29.8793 -0.113784,30.57518 -9.177734,55.85742 -2.44343,6.81549 -4.818944,15.39361 -5.277344,19.0625 l -0.833984,6.67188 -34.671875,0 -34.671874,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.068361,-3.06836 c 2.02959,-2.029591 4.480527,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#000000\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"195.90214\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-140.47866\\\"\\n     inkscape:cy=\\\"198.69435\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.55773544;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 68.562496,210.12948 A 34.671101,35.243633 0 0 0 33.890833,245.37285 34.671101,35.243633 0 0 0 68.562496,280.6189 34.671101,35.243633 0 0 0 103.23417,245.37285 34.671101,35.243633 0 0 0 68.562496,210.12948 Z m 0.09935,11.02044 A 23.336319,23.721675 0 0 1 91.999068,244.87094 23.336319,23.721675 0 0 1 68.66185,268.59197 23.336319,23.721675 0 0 1 45.324633,244.87094 23.336319,23.721675 0 0 1 68.66185,221.14992 Z\\\"\\n       id=\\\"path4237\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10.40872955;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.40872949, 20.81745898;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n       d=\\\"M 177.52863,34.919161 68.562276,246.38095 l 224.866844,0\\\"\\n       id=\\\"path5210\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:6.99123812px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 128.10545,149.71269 c 28.70161,15.31171 49.84665,42.14544 57.45499,89.61956\\\"\\n       id=\\\"path5212\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:129.6784668px;line-height:125%;font-family:Sans;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4750\\\">\\n      <path\\n         d=\\\"m 230.101,96.949874 q 4.93893,0 8.7381,2.026226 3.79918,1.96291 6.33196,5.76208 2.53278,3.79917 3.79917,9.3713 1.32971,5.5088 1.32971,12.60059 0,8.16822 -1.83626,18.48931 -3.92582,22.35181 -12.41064,33.05281 -8.4215,10.63769 -21.08541,10.63769 -4.81229,0 -8.42151,-1.89959 -3.54589,-1.9629 -5.88871,-5.63544 -2.34283,-3.73585 -3.5459,-9.0547 -1.13975,-5.31884 -1.13975,-12.09403 0,-4.49569 0.44323,-9.49794 0.50656,-5.00224 1.51967,-10.57436 3.92582,-22.22517 12.03072,-32.6729 8.16822,-10.511046 20.13562,-10.511046 z m -0.44323,5.065566 q -4.1791,0 -7.21843,2.53278 -2.97602,2.53278 -5.31885,7.40839 -2.2795,4.87561 -4.05245,11.9674 -1.70963,7.09179 -3.29262,16.20981 l 27.67065,0 q 0.88648,-5.69876 1.39303,-10.70101 0.50656,-5.06556 0.50656,-9.3713 0,-4.17909 -0.56988,-7.53502 -0.50655,-3.35594 -1.64631,-5.63544 -1.13975,-2.34283 -2.97602,-3.60922 -1.83626,-1.26639 -4.49568,-1.26639 z m -20.83214,43.6905 q -1.01311,6.142 -1.58299,11.6508 -0.56988,5.44548 -0.56988,10.06781 0,3.73585 0.44324,6.77519 0.44324,3.03934 1.45635,5.19221 1.01311,2.15286 2.65942,3.35593 1.64631,1.13976 3.98913,1.13976 4.11578,0 7.34507,-2.59611 3.29262,-2.5961 5.8254,-7.47171 2.59611,-4.93892 4.55901,-12.03071 1.96291,-7.09179 3.5459,-16.08317 l -27.67065,0 z\\\"\\n         style=\\\"font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman,  Italic'\\\"\\n         id=\\\"path4147\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"50\\\"\\n   height=\\\"50\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"8.64\\\"\\n     inkscape:cx=\\\"22.280093\\\"\\n     inkscape:cy=\\\"25\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,-270)\\\">\\n    <g\\n       transform=\\\"matrix(2.2470395,0,0,2.2470395,1.4827876,-402.18041)\\\"\\n       id=\\\"layer1-1\\\"\\n       inkscape:label=\\\"Layer 1\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke-width:0.77823228;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <path\\n         sodipodi:nodetypes=\\\"cccccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4141\\\"\\n         d=\\\"m 3.994178,302.40331 0.011839,13.60146 4.8493426,-3.53325 4.1221284,5.65757 3.232895,-2.3555 -4.122128,-5.65757 4.849343,-3.53325 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.77823228;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export * from '../src/aspect/Aspect';\nexport * from '../src/aspect/AspectList';\nexport * from '../src/aspect/AssayProvenance';\nexport * from '../src/aspect/BayesianPrediction';\nexport * from '../src/aspect/BayesianSource';\nexport * from '../src/aspect/BinaryData';\nexport * from '../src/aspect/Experiment';\nexport * from '../src/aspect/MeasurementData';\nexport * from '../src/aspect/Mixture';\nexport * from '../src/aspect/SARTable';\n\nexport * from '../src/calc/BayesianModel';\nexport * from '../src/calc/BuildSMILES';\nexport * from '../src/calc/CircularFingerprints';\nexport * from '../src/calc/ResonanceRemover';\n\nexport * from '../src/data/AbbrevContainer';\nexport * from '../src/data/FormatList';\nexport * from '../src/data/OntologyTree';\n\nexport * from '../src/dialog/Dialog';\nexport * from '../src/dialog/EditCompound';\n\nexport * from '../src/ds/DataSheet';\n\nexport * from '../src/gfx/ArrangeExperiment';\nexport * from '../src/gfx/ArrangeMeasurement';\nexport * from '../src/gfx/ArrangeMolecule';\nexport * from '../src/gfx/AxisLabeller';\nexport * from '../src/gfx/DrawExperiment';\nexport * from '../src/gfx/DrawMolecule';\nexport * from '../src/gfx/FontData';\nexport * from '../src/gfx/MetaVector';\nexport * from '../src/gfx/Rendering';\n\nexport * from '../src/io/DataSheetStream';\nexport * from '../src/io/MDLReader';\nexport * from '../src/io/MDLWriter';\nexport * from '../src/io/MoleculeStream';\n\nexport * from '../src/mol/BondArtifact';\nexport * from '../src/mol/Chemistry';\nexport * from '../src/mol/CoordUtil';\nexport * from '../src/mol/DotPath';\nexport * from '../src/mol/ForeignMolecule';\nexport * from '../src/mol/Graph';\nexport * from '../src/mol/MetaMolecule';\nexport * from '../src/mol/MolUtil';\nexport * from '../src/mol/Molecule';\nexport * from '../src/mol/PolymerBlock';\nexport * from '../src/mol/QueryUtil';\nexport * from '../src/mol/SketchUtil';\nexport * from '../src/mol/Stereochemistry';\n\nexport * from '../src/rxn/ExperimentMeta';\nexport * from '../src/rxn/QuantityCalc';\n\nexport * from '../src/sketcher/CommandBank';\nexport * from '../src/sketcher/ContextSketch';\nexport * from '../src/sketcher/DrawCanvas';\nexport * from '../src/sketcher/EditAtom';\nexport * from '../src/sketcher/EditBond';\nexport * from '../src/sketcher/EditPolymer';\nexport * from '../src/sketcher/ExtraFieldsWidget';\nexport * from '../src/sketcher/GeomWidget';\nexport * from '../src/sketcher/MetalLigate';\nexport * from '../src/sketcher/MoleculeActivity';\nexport * from '../src/sketcher/PeriodicTableWidget';\nexport * from '../src/sketcher/QueryFieldsWidget';\nexport * from '../src/sketcher/Sketcher';\nexport * from '../src/sketcher/TemplateBank';\nexport * from '../src/sketcher/TemplateFusion';\nexport * from '../src/sketcher/ToolBank';\n\nexport * from '../src/ui/ButtonBank';\nexport * from '../src/ui/ButtonView';\nexport * from '../src/ui/ClipboardProxy';\nexport * from '../src/ui/EmbedChemistry';\nexport * from '../src/ui/EmbedCollection';\nexport * from '../src/ui/EmbedMolecule';\nexport * from '../src/ui/EmbedReaction';\nexport * from '../src/ui/MenuProxy';\nexport * from '../src/ui/OptionList';\nexport * from '../src/ui/Popup';\nexport * from '../src/ui/TabBar';\nexport * from '../src/ui/Tooltip';\nexport * from '../src/ui/Widget';\n\nexport * from '../src/util/Geom';\nexport * from '../src/util/Matrix';\nexport * from '../src/util/Random';\nexport * from '../src/util/Theme';\nexport * from '../src/util/Triangulation2D';\nexport * from '../src/util/Vec';\nexport * from '../src/util/XML';\nexport * from '../src/util/dom';\nexport * from '../src/util/util';","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\n\n/*\n\tAbstract base class for all \"Aspects\".\n\n\tAn aspect is a piece of functionality that sits on top of an existing datasheet and provides an extra layer of\n\tinterpretation. The scalar datatypes used by datasheets are very basic, and can be used or abused with relatively\n\tlittle implied structure.\n\n\tAspects can be created explicitly in code, and they will be handed a datasheet instance to operate on. They are\n\texpected to install whatever metadata they need, within the constructor (e.g. extensions, and additional fields).\n\n\tIf the aspect installs an extension which is given the type \"org.mmi.aspect.{something}\", then it is possible for the\n\taspect to be installed automatically at key points (by the AspectList class), as long as the class named\n\t\"com.mmi.core.aspect.{something\"} or \"com.mmi.aspect.{something}\" can be found (note the switch from 'org' to 'com').\n\n\tAn aspect must always be pessimistic about the integrity of its data. DataSheets can be modified by non-aspect-aware\n\teditors. On creation it must be prepared to create its metadata/necessary fields from scratch, or to repair _any_ kind of\n\tcorruption performed by an external process. Implementation of certain methods in the Aspect class can help to\n\tprevent these conflicts, but they should not be relied on.\n*/\n\nexport interface AspectTextRendering\n{\n\tname:string;\n\tdescr:string;\n\ttext:string;\n\ttype:number; // one of Aspect.TEXT_*\n}\nexport interface AspectGraphicRendering\n{\n\tname:string;\n\tmetavec:MetaVector;\n}\n\nexport abstract class Aspect\n{\n\tpublic ds:DataSheet;\n\tprotected allowModify = true; // if set to false, aspect is not allowed to modify any part of the header\n\n\t// usually provide an existing datasheet with the aspect already installed; if not, it will be added (as long as\n\t// modification is allowed); if no datasheet, creates a blank one\n\tconstructor(public code:string, ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tthis.ds = ds ? ds : new DataSheet();\n\t\tif (allowModify != null) this.allowModify = allowModify;\n\t}\n\n\t// must return a simple, short string describing the aspect\n\tpublic abstract plainHeading():string;\n\n\t// if the aspect wants to \"claim\" any column names (whether they exist or not) for its own purposes - nominally both\n\t// rendering and editing - it should override this method and return true; various implementations may or may not choose\n\t// to honour this\n\tpublic isColumnReserved(colName:string):boolean {return false;}\n\n\t// a bulk version of above: override this only if is overhead per determination\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet resMask = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++) resMask[n] = this.isColumnReserved(colNames[n]);\n\t\treturn resMask;\n\t}\n\n\t// some aspects reserve multiple rows as a \"block\" (e.g. multistep reaction experiments); the following two methods must\n\t// be overidden to achieve this: a row must be able to indicate whether it is the beginning of a block; and the block size\n\t// must be countable; the default implementation implies each row is a singleton; note that both of these methods are\n\t// required, because the implied results may be inconsistent with inconsistent datasheets (e.g. streams)\n\tpublic rowFirstBlock(row:number):boolean {return true;}\n\tpublic rowBlockCount(row:number):number {return 1;}\n\n\t// given another aspect (presumed to be the same type), make sure the parameters of the current aspect are such that it can\n\t// accommodate data from the new one; various header settings and columns must be modified as necessary\n\tpublic aspectUnion(other:Aspect):void {}\n\n\t// provides an opportunity to carry out modifications on a newly added row, which is intended to represent a new unit entity - the aspect may need\n\t// to setup some defaults\n\tpublic initiateNewRow(row:number):void {}\n\n\t// companion to above: returns a list of rows that can be considered blank because they are auto-created\n\tpublic columnEffectivelyBlank(row:number):string[] {return [];}\n\n\t// rendering:\n\t//\t\tan aspect may optionally volunteer to provide some static visualisation data to describe itself; this balances\n\t//\t\tout against the aspect's ability to reserve columns, which typically means that they will not be displayed; the\n\t//\t\tnumber and types of renderings can vary from row to row\n\n\t// text rendering: this is analogous to a pseudocolumn, and so name & description may optionally be manufactured as well\n\t// as text content\n\tpublic static TEXT_PLAIN = 0;\n\tpublic static TEXT_LINK = 1;\n\tpublic static TEXT_HTML = 2;\n\n\tpublic numTextRenderings(row:number):number {return 0;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering {return null;}\n\n\t// graphical rendering: the caller must provide a vector graphics context, into which will be drawn a visual representation\n\t// of the rendering; a render policy is provided, and the implementation is expected make use of it (e.g. scale, foreground\n\t// colour); the returned object provides additional metadata: the vector graphics builder object is typically the\n\t// same object as provided as the parameter\n\tpublic numGraphicRenderings(row:number):number {return 0;}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering {return null;}\n\n\t// header rendering: some number of text items that describe the datasheet overall; these are typically {name:value} pairs, which\n\t// are shown at the beginning of the datasheet, and supplement the universal title & description fields\n\tpublic numHeaderRenderings():number {return 0;}\n\tpublic produceHeaderRendering(idx:number):AspectTextRendering {return null;}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {Aspect} from './Aspect';\n\n/*\n\tThe AspectList class is used as a way to fetch all of the recognised aspects that are installed within a given datasheet, without\n\thaving to manually invoke each of the classes individually. Each aspect that is implemented within the toolkit needs to be added\n\texplicitly here, if it is going to get automatically considered during routine operations (e.g. rendering arbitrary datasheets).\n*/\n\ninterface SupportedAspect\n{\n\tcode:string;\n\tname:string;\n\tclassdef:any;\n}\nlet supportedAspects:Record<string, SupportedAspect> = {}; // code-to-definition\n\n//\teach aspect has to call this method globally as early as possible in order to be recognised; e.g.\n//\t\tclass CustomAspect extends Aspect {...}\n//\t\tregisterAspect(CustomAspect);\nexport function registerAspect(classdef:any):void\n{\n\tlet code = classdef.CODE as string, name = classdef.NAME as string;\n\tsupportedAspects[code] = {code, name, classdef};\n}\n\nexport class AspectList\n{\n\tconstructor(public ds:DataSheet)\n\t{\n\t}\n\n\t// returns two arrays: the first is a list of aspect codes that exist within the datasheet's header already; the second is a list of\n\t// codes from the recognised list that are not; note that any aspects that are not in either of these lists are missing because they're\n\t// not encoded within this class, which means that they're probably not supported at all by this toolkit\n\tpublic list():[string[], string[]]\n\t{\n\t\tlet present:string[] = [], absent:string[] = [];\n\n\t\tlet codes = new Set<string>();\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) codes.add(this.ds.getExtType(n));\n\n\t\tfor (let code in supportedAspects) if (codes.has(code)) present.push(code); else absent.push(code);\n\n\t\treturn [present, absent];\n\t}\n\n\t// instantiates an aspect by creating the class instance that matches the given code; if the code is not in the supported list,\n\t// returns null; note that calling this function takes action that can modify the datasheet: it will be inducted if it does not\n\t// already exist; if it does exist, it is given the chance to make corrective changes to the content\n\tpublic instantiate(code:string):Aspect\n\t{\n\t\tlet supp = supportedAspects[code];\n\t\tif (supp) return new supp.classdef(this.ds) as Aspect;\n\t\treturn null;\n\t}\n\n\t// goes through the header and instantiates every applicable aspect that is inducted (equivalent to using list & instantiate each)\n\tpublic enumerate():Aspect[]\n\t{\n\t\tlet aspects:Aspect[] = [];\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++)\n\t\t{\n\t\t\tlet code = this.ds.getExtType(n);\n\t\t\tif (supportedAspects[code]) aspects.push(this.instantiate(code));\n\t\t}\n\t\treturn aspects;\n\t}\n\n\t// fetches just the name of an aspect, without instantiating it\n\tpublic aspectName(code:string):string\n\t{\n\t\tlet supp = supportedAspects[code];\n\t\treturn supp ? supp.name : null;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect, AspectTextRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tAssayProvenance: informs that a datasheet originates from a distinct assay measurement of a particular\n\tbiological target or property, and that each row represents a compound and a measurement. There is some\n\tlatitude to the specifics of each row, but most of the information has defaults that are stored in the\n\theader.\n*/\n\nexport class AssayProvenanceHeader\n{\n\tpublic prefixes:Record<string, string> = {};\n\tpublic targetName = '';\n\tpublic targetURI = '';\n\tpublic organismName = '';\n\tpublic organismURI = '';\n\tpublic targetTypeName = '';\n\tpublic targetTypeURI = '';\n\tpublic cellName = '';\n\tpublic cellURI = '';\n\tpublic assayTypeName = '';\n\tpublic assayTypeURI = '';\n\tpublic assayDescription = '';\n\tpublic sourceName = '';\n\tpublic sourceURI = '';\n\tpublic sourceVersion = '';\n\tpublic documentName = '';\n\tpublic documentURI = '';\n\tpublic measureTypeName = '';\n\tpublic measureTypeURI = '';\n\tpublic unitNames:string[] = [];\n\tpublic unitURIs:string[] = [];\n}\n\nexport class AssayProvenance extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.AssayProvenance';\n\tpublic static NAME = 'Assay Provenance';\n\n\tpublic static COLNAME_MOLECULE = 'Molecule'; // molecule\n\tpublic static COLNAME_NAME = 'Name'; // string\n\tpublic static COLNAME_VALUE = 'Value'; // real\n\tpublic static COLNAME_ERROR = 'Error'; // real\n\tpublic static COLNAME_UNITS = 'Units'; // string\n\tpublic static COLNAME_RELATION = 'Relation'; // string\n\tpublic static COLNAME_SOURCEURI = 'SourceURI'; // string\n\n\t//\tprivate static final String[] RESERVED_COLUMNS = {COLNAME_MOLECULE, COLNAME_NAME, COLNAME_VALUE, COLNAME_ERROR, COLNAME_UNITS, COLNAME_RELATION, COLNAME_SOURCEURI};\n\n\t// convenient suggestions for unit URIs\n\tpublic static URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062'; // moles per litre (mol/L)\n\tpublic static URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063'; // milli-moles per litre\n\tpublic static URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064'; // micro-moles per litre\n\tpublic static URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065'; // nano-moles per litre\n\tpublic static URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066'; // pico-moles per litre\n\tpublic static URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101'; // log10 of mol/L\n\tpublic static URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102'; // -log10 of mol/L\n\tpublic static URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175'; // grams per litre (g/L)\n\tpublic static URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273'; // milligrams per litre\n\tpublic static URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275'; // micrograms per litre\n\tpublic static URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023'; // true/false\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isAssayProvenance(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == AssayProvenance.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(AssayProvenance.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():AssayProvenanceHeader\n\t{\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t\treturn this.parseMetaData(this.ds.getExtData(n));\n\t\treturn null;\n\t}\n\tpublic setHeader(header:AssayProvenanceHeader):void\n\t{\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n\t}\n\n\tpublic getMolecule(row:number):Molecule\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n\t\treturn col < 0 ? null : this.ds.getMolecule(row, col);\n\t}\n\tpublic getName(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getValue(row:number):number\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n\t\treturn col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n\t}\n\tpublic getError(row:number):number\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n\t\tif (col < 0) return null;\n\t\tif (this.ds.isNull(row, col)) return Number.NaN;\n\t\tlet err = this.ds.getReal(row, col);\n\t\tif (err <= 0) return Number.NaN;\n\t\treturn err;\n\t}\n\tpublic getUnits(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getRelation(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic getSourceURI(row:number):string\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n\t\treturn col < 0 ? null : this.ds.getString(row, col);\n\t}\n\tpublic setMolecule(row:number, v:Molecule):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n\t\tif (col >= 0) this.ds.setMolecule(row, col, v);\n\t}\n\tpublic setName(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setValue(row:number, v:number):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n\t\tif (col < 0) {}\n\t\telse if (Number.isNaN(v)) this.ds.setToNull(row, col);\n\t\telse this.ds.setReal(row, col, v);\n\t}\n\tpublic setError(row:number, v:number):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n\t\tif (col < 0) {}\n\t\telse if (Number.isNaN(v)) this.ds.setToNull(row, col);\n\t\telse this.ds.setReal(row, col, v);\n\t}\n\tpublic setUnits(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setRelation(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\tpublic setSourceURI(row:number, v:string):void\n\t{\n\t\tlet col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n\t\tif (col >= 0) this.ds.setString(row, col, v);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet header = new AssayProvenanceHeader();\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == AssayProvenance.CODE)\n\t\t{\n\t\t\theader = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, DataSheetColumn.Molecule, 'Molecular structure of compound being measured');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_NAME, DataSheetColumn.String, 'Name of compound');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, DataSheetColumn.Real, 'Measured value');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, DataSheetColumn.Real, 'Experimental error of measurement');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, DataSheetColumn.String, 'Units of measurement');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, DataSheetColumn.String, 'Relation: exact, greater or less');\n\t\t\tthis.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, DataSheetColumn.String, 'Source identifier for activity measurement');\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(header);\n\t\t\tthis.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):AssayProvenanceHeader\n\t{\n\t\tlet header = new AssayProvenanceHeader();\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('pfx:')) header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetName=')) header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetURI=')) header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('organismName=')) header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('organismURI=')) header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetTypeName=')) header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetTypeURI=')) header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('cellName=')) header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('cellURI=')) header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayTypeName=')) header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayTypeURI=')) header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('assayDescription=')) header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceName=')) header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceURI=')) header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('sourceVersion=')) header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('documentName=')) header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('documentURI=')) header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('measureTypeName=')) header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('measureTypeURI=')) header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('unit:'))\n\t\t\t{\n\t\t\t\theader.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n\t\t\t\theader.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n\t\t\t}\n\t\t}\n\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:AssayProvenanceHeader):string\n\t{\n\t\tlet content = '';\n\n\t\tfor (let pfx in header.prefixes) content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n\t\tcontent += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n\t\tcontent += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n\t\tcontent += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n\t\tcontent += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n\t\tcontent += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n\t\tcontent += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n\t\tcontent += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n\t\tcontent += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n\t\tcontent += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n\t\tcontent += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n\t\tcontent += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n\t\tcontent += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n\t\tcontent += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n\t\tcontent += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n\t\tcontent += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n\t\tcontent += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n\t\tcontent += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n\t\tcontent += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n\t\tfor (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n\t\t\tcontent += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n\n\t\treturn content;\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return AssayProvenance.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n\t\t\t\tcolName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n\t\t\t\tcolName == AssayProvenance.COLNAME_SOURCEURI;\n\t}\n\n\tpublic numTextRenderings(row:number):number {return 2;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering\n\t{\n\t\tlet header = this.getHeader();\n\n\t\tif (idx == 0)\n\t\t{\n\t\t\tlet tr:AspectTextRendering =\n\t\t\t{\n\t\t\t\tname: 'Activity',\n\t\t\t\tdescr: 'Activity measurement details for this record',\n\t\t\t\ttext: '',\n\t\t\t\ttype: Aspect.TEXT_PLAIN\n\t\t\t};\n\n\t\t\tlet val = this.getValue(row), error = this.getError(row);\n\t\t\tlet units = this.getUnits(row), rel = this.getRelation(row);\n\n\t\t\ttr.text = '';\n\t\t\tif (!Number.isNaN(val))\n\t\t\t{\n\t\t\t\tif (rel) tr.text += rel + ' ';\n\t\t\t\ttr.text += val;\n\t\t\t\tif (!Number.isNaN(error)) tr.text += ' \\u{00B1} ' + error;\n\t\t\t\tif (units) tr.text += ' ' + units;\n\t\t\t}\n\t\t\treturn tr;\n\t\t}\n\t\telse if (idx == 1)\n\t\t{\n\t\t\tlet tr:AspectTextRendering =\n\t\t\t{\n\t\t\t\tname: 'Source',\n\t\t\t\tdescr: 'Origin of the structure and activity measurement',\n\t\t\t\ttext: '',\n\t\t\t\ttype: Aspect.TEXT_LINK\n\t\t\t};\n\n\t\t\tlet url = this.getSourceURI(row);\n\t\t\tfor (let pfx in header.prefixes) if (url.startsWith(pfx + ':'))\n\t\t\t{\n\t\t\t\turl = header.prefixes[pfx] + url.substring(pfx.length + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttr.text = url;\n\t\t\treturn tr;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nregisterAspect(AssayProvenance);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {BayesianSource} from './BayesianSource';\n\n/*\n\tBayesian prediction: records some number of outcomes from Bayesian models, noting the columns that hold the predictions themselves and\n\tkeeping some metadata about each.\n*/\n\nexport class BayesianPredictionModel\n{\n\tpublic colMolecule:string;\n\tpublic colRaw:string;\n\tpublic colScaled:string;\n\tpublic colArcTan:string;\n\tpublic colDomain:string;\n\tpublic colAtoms:string;\n\tpublic name:string;\n\tpublic description:string;\n\tpublic targetName:string;\n\tpublic isOffTarget:boolean;\n}\n\nexport class BayesianPredictionOutcome\n{\n\tpublic raw:number;\n\tpublic scaled:number;\n\tpublic arctan:number;\n\tpublic domain:number;\n\tpublic atoms:number[];\n}\n\nexport class BayesianPrediction extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BayesianPrediction';\n\tpublic static NAME = 'Bayesian Prediction';\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as this aspect\n\tpublic static isBayesianPrediction(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BayesianPrediction.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BayesianPrediction.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\tpublic getModels():BayesianPredictionModel[]\n\t{\n\t\tlet content = '';\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianPrediction.CODE)\n\t\t{\n\t\t\tcontent = this.ds.getExtData(n);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet models:BayesianPredictionModel[] = [];\n\t\tlet m:BayesianPredictionModel = null;\n\n\t\tfor (let line of content.split('\\n'))\n\t\t{\n\t\t\tif (line == 'model:')\n\t\t\t{\n\t\t\t\tif (m != null) models.push(m);\n\t\t\t\tm = {} as BayesianPredictionModel;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (m == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colMolecule=')) m.colMolecule = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colRaw=')) m.colRaw = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colScaled=')) m.colScaled = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colArcTan=')) m.colArcTan = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colDomain=')) m.colDomain = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colAtoms=')) m.colAtoms = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('name=')) m.name = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('description=')) m.description = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('targetName=')) m.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('isOffTarget=')) m.isOffTarget = line.substring(eq + 1) == 'true';\n\t\t}\n\n\t\tif (m != null) models.push(m);\n\t\treturn models;\n\t}\n\tpublic setModels(models:BayesianPredictionModel[]):void\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let m of models)\n\t\t{\n\t\t\tlines.push('model:');\n\t\t\tlines.push('colMolecule=' + MoleculeStream.skEscape(m.colMolecule));\n\t\t\tlines.push('colRaw=' + MoleculeStream.skEscape(m.colRaw));\n\t\t\tlines.push('colScaled=' + MoleculeStream.skEscape(m.colScaled));\n\t\t\tlines.push('colArcTan=' + MoleculeStream.skEscape(m.colArcTan));\n\t\t\tlines.push('colDomain=' + MoleculeStream.skEscape(m.colDomain));\n\t\t\tlines.push('colAtoms=' + MoleculeStream.skEscape(m.colAtoms));\n\t\t\tlines.push('name=' + MoleculeStream.skEscape(m.name));\n\t\t\tlines.push('description=' + MoleculeStream.skEscape(m.description));\n\t\t\tlines.push('targetName=' + MoleculeStream.skEscape(m.targetName));\n\t\t\tlines.push('isOffTarget=' + m.isOffTarget);\n\t\t}\n\n\t\tlet content = lines.join('\\n');\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content.toString());\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension('BayesianPrediction', BayesianPrediction.CODE, content.toString());\n\t}\n\n\t// rowdata access\n\tpublic getOutcome(row:number, model:BayesianPredictionModel):BayesianPredictionOutcome\n\t{\n\t\tlet outcome = new BayesianPredictionOutcome();\n\t\toutcome.raw = this.ds.getReal(row, model.colRaw);\n\t\toutcome.scaled = this.ds.getReal(row, model.colScaled);\n\t\toutcome.arctan = this.ds.getReal(row, model.colArcTan);\n\t\toutcome.domain = this.ds.getReal(row, model.colDomain);\n\n\t\tlet strAtoms = this.ds.getString(row, model.colAtoms);\n\t\tif (strAtoms)\n\t\t{\n\t\t\toutcome.atoms = [];\n\t\t\tfor (let b of strAtoms.split(',')) outcome.atoms.push(parseFloat(b));\n\t\t}\n\n\t\treturn outcome;\n\t}\n\tpublic setOutcome(row:number, model:BayesianPredictionModel, outcome:BayesianPredictionOutcome):void\n\t{\n\t\tlet col = this.ds.findColByName(model.colRaw, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.raw);\n\n\t\tcol = this.ds.findColByName(model.colScaled, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.scaled);\n\n\t\tcol = this.ds.findColByName(model.colArcTan, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.arctan);\n\n\t\tcol = this.ds.findColByName(model.colDomain, DataSheetColumn.Real);\n\t\tif (col >= 0) this.ds.setReal(row, col, outcome.domain);\n\n\t\tcol = this.ds.findColByName(model.colAtoms, DataSheetColumn.String);\n\t\tif (col >= 0) this.ds.setString(row, col, outcome.atoms ? outcome.atoms.toString() : null);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tlet models = this.getModels();\n\t\t\tthis.setModels(models);\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BayesianSource.NAME;}\n}\n\nregisterAspect(BayesianPrediction);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tBayesianSource: tracks some number of numeric columns which can be used to create Bayesian models. Keeps track of various pre-processing\n\trequirements (e.g. threshold), parameters (e.g. folding) and metadata (e.g. description).\n*/\n\nexport class BayesianSourceModel\n{\n\tpublic colNameMolecule = ''; // where to grab the molecules from\n\tpublic colNameValue = ''; // name of column with numeric source content (integer/real/boolean)\n\tpublic thresholdValue = 0.5; // threshold for turning free numbers into booleans\n\tpublic thresholdRelation = '>='; // one of \"<\", \">\", \"<=\", \">=\"\n\t// (wouldn't it be a good idea to put the fingerprint type in here?)\n\tpublic folding = 0; // bitscale: 0=no folding, 2^n=folding into a bitmask range\n\tpublic noteField = ''; // field name for output model; defaults to value column name\n\tpublic noteTitle = ''; // model title: defaults to datasheet title\n\tpublic noteOrigin = ''; // model origin: defaults to filename\n\tpublic noteComment = ''; // totally optional, no default\n}\n\nexport class BayesianSource extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BayesianSource';\n\tpublic static NAME = 'Bayesian Source';\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as this aspect\n\tpublic static isBayesianSource(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BayesianSource.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BayesianSource.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getModels():BayesianSourceModel[]\n\t{\n\t\tlet content = '';\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tcontent = this.ds.getExtData(n);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet models:BayesianSourceModel[] = [];\n\t\tlet m:BayesianSourceModel = null;\n\n\t\tfor (let line of content.split('\\n'))\n\t\t{\n\t\t\tif (line == 'model:')\n\t\t\t{\n\t\t\t\tif (m != null) models.push(m);\n\t\t\t\tm = {} as BayesianSourceModel;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (m == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colNameMolecule=')) m.colNameMolecule = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colNameValue=')) m.colNameValue = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdValue=')) m.thresholdValue = parseFloat(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdRelation=')) m.thresholdRelation = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('folding=')) m.folding = parseInt(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteField=')) m.noteField = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteTitle=')) m.noteTitle = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteOrigin=')) m.noteOrigin = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('noteComment=')) m.noteComment = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t}\n\n\t\tif (m != null) models.push(m);\n\t\treturn models;\n\t}\n\tpublic setModels(models:BayesianSourceModel[]):void\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let m of models)\n\t\t{\n\t\t\tlines.push('model:');\n\t\t\tlines.push('colNameMolecule=' + MoleculeStream.skEscape(m.colNameMolecule));\n\t\t\tlines.push('colNameValue=' + MoleculeStream.skEscape(m.colNameValue));\n\t\t\tlines.push('thresholdValue=' + m.thresholdValue);\n\t\t\tlines.push('thresholdRelation=' + MoleculeStream.skEscape(m.thresholdRelation));\n\t\t\tlines.push('folding=%d' + m.folding);\n\t\t\tlines.push('noteField=' + MoleculeStream.skEscape(m.noteField));\n\t\t\tlines.push('noteTitle=' + MoleculeStream.skEscape(m.noteTitle));\n\t\t\tlines.push('noteOrigin=' + MoleculeStream.skEscape(m.noteOrigin));\n\t\t\tlines.push('noteComment=' + MoleculeStream.skEscape(m.noteComment));\n\t\t}\n\n\t\tlet content = lines.join('\\n');\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == BayesianSource.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content.toString());\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension('BayesianSource', BayesianSource.CODE, content.toString());\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tif (this.allowModify)\n\t\t{\n\t\t\tlet models = this.getModels();\n\t\t\tthis.setModels(models);\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BayesianSource.NAME;}\n}\n\nregisterAspect(BayesianSource);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {deepClone} from '../util/util';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {MeasurementData} from './MeasurementData';\n\n/*\n\tBinaryData: describes how continuous numeric data can be transformed into a true/false value, which is often an effective way\n\tto describe data where the criteria & binary data are known, but the precursor data may or may not.\n*/\n\nexport class BinaryDataField\n{\n\tpublic colNameSource:string; // the input feed (should be numeric)\n\tpublic colNameDest:string; // output column: enforced to be boolean\n\tpublic thresholdValue:number; // threshold for turning free numbers into booleans\n\tpublic thresholdRelation:string; // one of \"<\", \">\", \"<=\", \">=\"\n}\n\nexport class BinaryData extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.BinaryData';\n\tpublic static NAME = 'Binary Data';\n\n\tprivate fields:BinaryDataField[] = [];\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isBinaryData(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == BinaryData.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(BinaryData.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getFields():BinaryDataField[]\n\t{\n\t\treturn deepClone(this.fields);\n\t}\n\tpublic setFields(fields:BinaryDataField[])\n\t{\n\t\tthis.fields = deepClone(fields);\n\t\tlet content = this.formatMetaData(fields);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t}\n\n\t// obtain the value, where destination takes precedence\n\tpublic getValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\tlet value = this.getDestValue(row, field);\n\t\tif (value != null) return value;\n\t\treturn this.getSourceValue(row, field);\n\t}\n\tpublic getSourceValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\tlet col = this.ds.findColByName(field.colNameSource);\n\t\tif (col < 0 || this.ds.isNull(row, col)) return null;\n\n\t\tlet ct = this.ds.colType(col);\n\t\tlet value = 0;\n\t\tif (ct == DataSheetColumn.Boolean) return this.ds.getBoolean(row, col);\n\t\telse if (ct == DataSheetColumn.Integer) value = this.ds.getInteger(row, col);\n\t\telse if (ct == DataSheetColumn.Real) value = this.ds.getReal(row, col);\n\t\telse return null;\n\n\t\tif (field.thresholdRelation == '>') return value > field.thresholdValue;\n\t\tif (field.thresholdRelation == '<') return value < field.thresholdValue;\n\t\tif (field.thresholdRelation == '>=') return value >= field.thresholdValue;\n\t\tif (field.thresholdRelation == '<=') return value <= field.thresholdValue;\n\t\treturn null;\n\t}\n\tpublic getDestValue(row:number, field:BinaryDataField):boolean\n\t{\n\t\treturn this.ds.getBoolean(row, field.colNameDest);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.fields = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.fields);\n\t\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):BinaryDataField[]\n\t{\n\t\tlet fields:BinaryDataField[] = [];\n\t\tlet f:BinaryDataField = null;\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tif (line == 'field:')\n\t\t\t{\n\t\t\t\tif (f != null) fields.push(f as BinaryDataField);\n\t\t\t\tf = {colNameSource: '', colNameDest: '', thresholdValue: 0.5, thresholdRelation: '>='};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (f == null) continue;\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\n\t\t\tif (line.startsWith('colNameSource=')) f.colNameSource = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('colNameDest=')) f.colNameDest = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdValue=')) f.thresholdValue = parseFloat(line.substring(eq + 1));\n\t\t\telse if (line.startsWith('thresholdRelation=')) f.thresholdRelation = MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t}\n\n\t\tif (f != null) fields.push(f);\n\n\t\treturn fields;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(fields:BinaryDataField[]):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let f of fields)\n\t\t{\n\t\t\tlines.push('field:');\n\t\t\tlines.push('colNameSource=' + MoleculeStream.skEscape(f.colNameSource));\n\t\t\tlines.push('colNameDest=' + MoleculeStream.skEscape(f.colNameDest));\n\t\t\tlines.push('thresholdValue=' + f.thresholdValue);\n\t\t\tlines.push('thresholdRelation=' + MoleculeStream.skEscape(f.thresholdRelation));\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return BinaryData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\t{return false;}\n}\n\nregisterAspect(BinaryData);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n///<reference path='Aspect.ts'/>\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {ArrangeExperiment} from '../gfx/ArrangeExperiment';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {DrawExperiment} from '../gfx/DrawExperiment';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectGraphicRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tExperiment aspect: transforms groups of rows from a datasheet into a collection of structures that make up a\n\tmultistep reaction, along with accompanying quantities and other miscellaneous information.\n*/\n\nexport enum ExperimentComponentType\n{\n\tReactant,\n\tReagent,\n\tProduct,\n}\n\nexport class ExperimentComponent\n{\n\tpublic mol:Molecule = null;\n\tpublic name = '';\n\tpublic stoich = '';\n\tpublic mass:number = null; // units: g\n\tpublic volume:number = null; // units: mL\n\tpublic moles:number = null; // units: mol\n\tpublic density:number = null; // units: g/mL\n\tpublic conc:number = null; // units: mol/L\n\tpublic yield:number = null; // products only; unit: %\n\tpublic primary = false; // reactants only\n\tpublic waste = false; // products only\n\tpublic equiv:number = null; // reagents only\n\tpublic meta = '';\n\n\tconstructor(mol?:Molecule, name?:string)\n\t{\n\t\tthis.mol = mol;\n\t\tif (name) this.name = name;\n\t}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentComponent\n\t{\n\t\tlet dup = new ExperimentComponent(this.mol, this.name);\n\t\tdup.stoich = this.stoich;\n\t\tdup.mass = this.mass;\n\t\tdup.volume = this.volume;\n\t\tdup.moles = this.moles;\n\t\tdup.density = this.density;\n\t\tdup.conc = this.conc;\n\t\tdup.yield = this.yield;\n\t\tdup.primary = this.primary;\n\t\tdup.waste = this.waste;\n\t\tdup.equiv = this.equiv;\n\t\tdup.meta = this.meta;\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentComponent):boolean\n\t{\n\t\tif (this.name != other.name) return false;\n\t\tif (this.stoich != other.stoich || this.mass != other.mass || this.volume != other.volume || this.moles != other.moles ||\n\t\t\tthis.density != other.density || this.conc != other.conc || this.yield != other.yield || this.primary != other.primary ||\n\t\t\tthis.waste != other.waste || this.equiv != other.equiv || this.meta != other.meta) return false;\n\t\tif (this.mol === other.mol) return true; // if literally the same\n\t\tif (this.mol == null || other.mol == null) return false;\n\t\treturn this.mol.compareTo(other.mol) == 0;\n\t}\n\n\tpublic isBlank():boolean\n\t{\n\t\treturn MolUtil.isBlank(this.mol) && !this.name;\n\t}\n}\n\nexport class ExperimentStep\n{\n\tpublic reactants:ExperimentComponent[] = []; // non-blank only for the first step\n\tpublic reagents:ExperimentComponent[] = [];\n\tpublic products:ExperimentComponent[] = [];\n\tpublic meta = '';\n\n\tconstructor() {}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentStep\n\t{\n\t\tlet dup = new ExperimentStep();\n\t\tfor (let c of this.reactants) dup.reactants.push(c.clone());\n\t\tfor (let c of this.reagents) dup.reagents.push(c.clone());\n\t\tfor (let c of this.products) dup.products.push(c.clone());\n\t\tdup.meta = this.meta;\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentStep):boolean\n\t{\n\t\tif (this.reactants.length != other.reactants.length) return false;\n\t\tif (this.reagents.length != other.reagents.length) return false;\n\t\tif (this.products.length != other.products.length) return false;\n\t\tif (this.meta != other.meta) return false;\n\t\tfor (let n = 0; n < this.reactants.length; n++) if (!this.reactants[n].equals(other.reactants[n])) return false;\n\t\tfor (let n = 0; n < this.reagents.length; n++) if (!this.reagents[n].equals(other.reagents[n])) return false;\n\t\tfor (let n = 0; n < this.products.length; n++) if (!this.products[n].equals(other.products[n])) return false;\n\t\treturn true;\n\t}\n}\n\nexport class ExperimentEntry\n{\n\tpublic title = '';\n\tpublic createDate:Date = null;\n\tpublic modifyDate:Date = null;\n\tpublic doi = '';\n\tpublic meta = '';\n\n\tpublic steps:ExperimentStep[] = [];\n\n\tconstructor() {}\n\n\t// makes a deep copy (assuming that molecules are treated as immutable)\n\tpublic clone():ExperimentEntry\n\t{\n\t\tlet dup = new ExperimentEntry();\n\t\tdup.title = this.title;\n\t\tdup.createDate = this.createDate;\n\t\tdup.modifyDate = this.modifyDate;\n\t\tdup.doi = this.doi;\n\t\tdup.meta = this.meta;\n\t\tfor (let s of this.steps) dup.steps.push(s.clone());\n\t\treturn dup;\n\t}\n\n\t// as above, but clones all the molecules too so they can be modified safely\n\tpublic deepClone():ExperimentEntry\n\t{\n\t\tlet dup = this.clone();\n\t\tfor (let step of dup.steps)\n\t\t{\n\t\t\tfor (let comp of step.reactants) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t\tfor (let comp of step.reagents) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t\tfor (let comp of step.products) if (comp.mol != null) comp.mol = comp.mol.clone();\n\t\t}\n\t\treturn dup;\n\t}\n\n\tpublic equals(other:ExperimentEntry):boolean\n\t{\n\t\tif (this.title != other.title) return false;\n\t\tlet d1 = this.createDate == null ? 0 : this.createDate.getTime(), d2 = other.createDate == null ? 0 : other.createDate.getTime();\n\t\tif (d1 != d2) return false;\n\t\tlet d3 = this.modifyDate == null ? 0 : this.modifyDate.getTime(), d4 = other.modifyDate == null ? 0 : other.modifyDate.getTime();\n\t\tif (d3 != d4) return false;\n\t\tif (this.doi != other.doi || this.meta != other.meta) return false;\n\t\tif (this.steps.length != other.steps.length) return false;\n\t\tfor (let n = 0; n < this.steps.length; n++) if (!this.steps[n].equals(other.steps[n])) return false;\n\t\treturn true;\n\t}\n\n\t// convenience: saves a switch\n\tpublic getComponent(step:number, type:ExperimentComponentType, idx:number):ExperimentComponent\n\t{\n\t\tif (type == ExperimentComponentType.Reactant) return this.steps[step].reactants[idx];\n\t\tif (type == ExperimentComponentType.Reagent) return this.steps[step].reagents[idx];\n\t\tif (type == ExperimentComponentType.Product) return this.steps[step].products[idx];\n\t\treturn new ExperimentComponent();\n\t}\n}\n\nexport class Experiment extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.Experiment';\n\tpublic static CODE_RXN = 'org.mmi.aspect.Reaction';\n\tpublic static CODE_YLD = 'org.mmi.aspect.Yield';\n\tpublic static NAME = 'Experiment';\n\tpublic static NAME_RXN = 'Reaction';\n\tpublic static NAME_YLD = 'Yield';\n\n\tpublic static COLNAME_EXPERIMENT_TITLE = 'ExperimentTitle';\n\tpublic static COLNAME_EXPERIMENT_CREATEDATE = 'ExperimentCreateDate';\n\tpublic static COLNAME_EXPERIMENT_MODIFYDATE = 'ExperimentModifyDate';\n\tpublic static COLNAME_EXPERIMENT_DOI = 'ExperimentDOI';\n\tpublic static COLNAME_EXPERIMENT_META = 'ExperimentMeta';\n\n\t// prefixes for Steps\n\tpublic static COLNAME_STEP_META = 'ExperimentStepMeta';\n\n\t// prefixes for Reactants\n\tpublic static COLNAME_REACTANT_MOL = 'ReactantMol';\n\tpublic static COLNAME_REACTANT_NAME = 'ReactantName';\n\tpublic static COLNAME_REACTANT_STOICH = 'ReactantStoich';\n\tpublic static COLNAME_REACTANT_MASS = 'ReactantMass';\n\tpublic static COLNAME_REACTANT_VOLUME = 'ReactantVolume';\n\tpublic static COLNAME_REACTANT_MOLES = 'ReactantMoles';\n\tpublic static COLNAME_REACTANT_DENSITY = 'ReactantDensity';\n\tpublic static COLNAME_REACTANT_CONC = 'ReactantConc';\n\tpublic static COLNAME_REACTANT_PRIMARY = 'ReactantPrimary';\n\tpublic static COLNAME_REACTANT_META = 'ReactantMeta';\n\n\t// prefixes for Reagents\n\tpublic static COLNAME_REAGENT_MOL = 'ReagentMol';\n\tpublic static COLNAME_REAGENT_NAME = 'ReagentName';\n\tpublic static COLNAME_REAGENT_EQUIV = 'ReagentEquiv';\n\tpublic static COLNAME_REAGENT_MASS = 'ReagentMass';\n\tpublic static COLNAME_REAGENT_VOLUME = 'ReagentVolume';\n\tpublic static COLNAME_REAGENT_MOLES = 'ReagentMoles';\n\tpublic static COLNAME_REAGENT_DENSITY = 'ReagentDensity';\n\tpublic static COLNAME_REAGENT_CONC = 'ReagentConc';\n\tpublic static COLNAME_REAGENT_META = 'ReagentMeta';\n\n\t// prefixes for Products\n\tpublic static COLNAME_PRODUCT_MOL = 'ProductMol';\n\tpublic static COLNAME_PRODUCT_NAME = 'ProductName';\n\tpublic static COLNAME_PRODUCT_STOICH = 'ProductStoich';\n\tpublic static COLNAME_PRODUCT_MASS = 'ProductMass';\n\tpublic static COLNAME_PRODUCT_VOLUME = 'ProductVolume';\n\tpublic static COLNAME_PRODUCT_MOLES = 'ProductMoles';\n\tpublic static COLNAME_PRODUCT_DENSITY = 'ProductDensity';\n\tpublic static COLNAME_PRODUCT_CONC = 'ProductConc';\n\tpublic static COLNAME_PRODUCT_YIELD = 'ProductYield';\n\tpublic static COLNAME_PRODUCT_WASTE = 'ProductWaste';\n\tpublic static COLNAME_PRODUCT_META = 'ProductMeta';\n\n\tpublic static COLUMN_DESCRIPTIONS:Record<string, string> = {};\n\n\tpublic static ALL_COLUMN_LITERALS =\n\t[\n\t\tExperiment.COLNAME_EXPERIMENT_TITLE,\n\t\tExperiment.COLNAME_EXPERIMENT_CREATEDATE,\n\t\tExperiment.COLNAME_EXPERIMENT_MODIFYDATE,\n\t\tExperiment.COLNAME_EXPERIMENT_DOI,\n\t\tExperiment.COLNAME_EXPERIMENT_META,\n\t\tExperiment.COLNAME_STEP_META,\n\t];\n\tpublic static ALL_COLUMN_PREFIXES =\n\t[\n\t\tExperiment.COLNAME_REACTANT_MOL,\n\t\tExperiment.COLNAME_REACTANT_NAME,\n\t\tExperiment.COLNAME_REACTANT_STOICH,\n\t\tExperiment.COLNAME_REACTANT_MASS,\n\t\tExperiment.COLNAME_REACTANT_VOLUME,\n\t\tExperiment.COLNAME_REACTANT_MOLES,\n\t\tExperiment.COLNAME_REACTANT_DENSITY,\n\t\tExperiment.COLNAME_REACTANT_CONC,\n\t\tExperiment.COLNAME_REACTANT_PRIMARY,\n\t\tExperiment.COLNAME_REACTANT_META,\n\t\tExperiment.COLNAME_REAGENT_MOL,\n\t\tExperiment.COLNAME_REAGENT_NAME,\n\t\tExperiment.COLNAME_REAGENT_EQUIV,\n\t\tExperiment.COLNAME_REAGENT_MASS,\n\t\tExperiment.COLNAME_REAGENT_VOLUME,\n\t\tExperiment.COLNAME_REAGENT_MOLES,\n\t\tExperiment.COLNAME_REAGENT_DENSITY,\n\t\tExperiment.COLNAME_REAGENT_CONC,\n\t\tExperiment.COLNAME_REAGENT_META,\n\t\tExperiment.COLNAME_PRODUCT_MOL,\n\t\tExperiment.COLNAME_PRODUCT_NAME,\n\t\tExperiment.COLNAME_PRODUCT_STOICH,\n\t\tExperiment.COLNAME_PRODUCT_MASS,\n\t\tExperiment.COLNAME_PRODUCT_VOLUME,\n\t\tExperiment.COLNAME_PRODUCT_MOLES,\n\t\tExperiment.COLNAME_PRODUCT_DENSITY,\n\t\tExperiment.COLNAME_PRODUCT_CONC,\n\t\tExperiment.COLNAME_PRODUCT_YIELD,\n\t\tExperiment.COLNAME_PRODUCT_WASTE,\n\t\tExperiment.COLNAME_PRODUCT_META,\n\t];\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isExperiment(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == Experiment.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(Experiment.CODE, ds, allowModify);\n\n\t\tif (Object.keys(Experiment.COLUMN_DESCRIPTIONS).length == 0)\n\t\t{\n\t\t\tlet v = Experiment.COLUMN_DESCRIPTIONS;\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_TITLE] = 'Title description for the experiment';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_CREATEDATE] = 'Date the experiment was created (seconds since 1970)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_MODIFYDATE] = 'Date the experiment was last modified (seconds since 1970)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_DOI] = 'Digital object identifiers (DOI) for the experiment (whitespace separated)';\n\t\t\tv[Experiment.COLNAME_EXPERIMENT_META] = 'Additional experiment metadata';\n\t\t\tv[Experiment.COLNAME_STEP_META] = 'Additional step metadata';\n\t\t\tv[Experiment.COLNAME_REACTANT_MOL] = 'Molecular structure of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_NAME] = 'Name of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_STOICH] = 'Stoichiometry of reactant';\n\t\t\tv[Experiment.COLNAME_REACTANT_MASS] = 'Mass quantity of reactant (g)';\n\t\t\tv[Experiment.COLNAME_REACTANT_VOLUME] = 'Volume quantity of reactant (mL)';\n\t\t\tv[Experiment.COLNAME_REACTANT_MOLES] = 'Molar quantity of reactant (mol)';\n\t\t\tv[Experiment.COLNAME_REACTANT_DENSITY] = 'Density of reactant (g/mL)';\n\t\t\tv[Experiment.COLNAME_REACTANT_CONC] = 'Concentration of reactant (mol/L)';\n\t\t\tv[Experiment.COLNAME_REACTANT_PRIMARY] = 'Whether the reactant is used for yield calculation';\n\t\t\tv[Experiment.COLNAME_REACTANT_META] = 'Additional reactant metadata';\n\t\t\tv[Experiment.COLNAME_REAGENT_MOL] = 'Molecular structure of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_NAME] = 'Name of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_EQUIV] = 'Molar equivalents of reagent';\n\t\t\tv[Experiment.COLNAME_REAGENT_MASS] = 'Mass quantity of reagent (g)';\n\t\t\tv[Experiment.COLNAME_REAGENT_VOLUME] = 'Volume quantity of reagent (mL)';\n\t\t\tv[Experiment.COLNAME_REAGENT_MOLES] = 'Molar quantity of reagent (mol)';\n\t\t\tv[Experiment.COLNAME_REAGENT_DENSITY] = 'Density of reagent (g/mL)';\n\t\t\tv[Experiment.COLNAME_REAGENT_CONC] = 'Concentration of reagent (mol/L)';\n\t\t\tv[Experiment.COLNAME_REAGENT_META] = 'Additional reagent metadata';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MOL] = 'Molecular structure of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_NAME] = 'Name of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_STOICH] = 'Stoichiometry of product';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MASS] = 'Mass quantity of reactant (g)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_VOLUME] = 'Volume quantity of reactant (mL)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_MOLES] = 'Molar quantity of reactant (mol)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_DENSITY] = 'Density of reactant (g/mL)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_CONC] = 'Concentration of reactant (mol/L)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_YIELD] = 'Yield of product (%)';\n\t\t\tv[Experiment.COLNAME_PRODUCT_WASTE] = 'Whether the product is an unwanted byproduct';\n\t\t\tv[Experiment.COLNAME_PRODUCT_META] = 'Additional product metadata';\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\t// returns true if the row is at the beginning of an experiment\n\tpublic isFirstStep(row:number):boolean\n\t{\n\t\tif (this.ds.notNull(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE)) return true;\n\t\tlet mol = this.ds.getMolecule(row, Experiment.COLNAME_REACTANT_MOL + '1');\n\t\tif (MolUtil.notBlank(mol)) return true;\n\t\tlet name = this.ds.getString(row, Experiment.COLNAME_REACTANT_NAME + '1');\n\t\tif (name) return true;\n\t\treturn false;\n\t}\n\n\t// starting at the given row, figure out how many rows (\"steps\") the reaction spans; always 1-or-more\n\tpublic numberOfSteps(row:number):number\n\t{\n\t\tif (row >= this.ds.numRows) return 0;\n\t\tlet steps = 1;\n\t\twhile (row + steps < this.ds.numRows)\n\t\t{\n\t\t\tif (this.isFirstStep(row + steps)) break;\n\t\t\tsteps++;\n\t\t}\n\t\treturn steps;\n\t}\n\n\t// data access\n\tpublic getEntry(row:number):ExperimentEntry\n\t{\n\t\tlet entry = new ExperimentEntry();\n\n\t\tlet title = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_TITLE);\n\t\tif (title) entry.title = title;\n\t\tlet createDate = this.ds.getReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE);\n\t\tif (createDate) entry.createDate = new Date(createDate * 1000);\n\t\tlet modifyDate = this.ds.getReal(row, Experiment.COLNAME_EXPERIMENT_MODIFYDATE);\n\t\tif (modifyDate) entry.modifyDate = new Date(modifyDate * 1000);\n\t\tlet doi = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_DOI);\n\t\tif (doi) entry.doi = doi;\n\t\tlet meta = this.ds.getString(row, Experiment.COLNAME_EXPERIMENT_META);\n\t\tif (meta) entry.meta = meta;\n\n\t\tlet [nreactants, nproducts, nreagents] = this.countComponents();\n\n\t\tfor (let pos = row; pos < this.ds.numRows; pos++)\n\t\t{\n\t\t\tif (pos > row && this.isFirstStep(pos)) break;\n\n\t\t\tlet step = new ExperimentStep();\n\t\t\tif (pos == row) for (let n = 1; n <= nreactants; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchReactant(pos, n);\n\t\t\t\tif (comp != null) step.reactants.push(comp); else break;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= nproducts; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchProduct(pos, n);\n\t\t\t\tif (comp != null) step.products.push(comp); else break;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= nreagents; n++)\n\t\t\t{\n\t\t\t\tlet comp = this.fetchReagent(pos, n);\n\t\t\t\tif (comp != null) step.reagents.push(comp); else break;\n\t\t\t}\n\t\t\tstep.meta = this.ds.getString(pos, Experiment.COLNAME_STEP_META);\n\n\t\t\tentry.steps.push(step);\n\t\t}\n\n\t\treturn entry;\n\t}\n\tpublic setEntry(row:number, entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(row, entry, true);\n\t}\n\tpublic addEntry(entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(this.ds.numRows, entry, false);\n\t}\n\tpublic insertEntry(row:number, entry:ExperimentEntry):void\n\t{\n\t\tthis.putEntry(row, entry, false);\n\t}\n\tpublic deleteEntry(row:number):void\n\t{\n\t\tlet nsteps = this.numberOfSteps(row);\n\t\tfor (let n = row + nsteps - 1; n >= row; n--) this.ds.deleteRow(n);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet ds = this.ds;\n\t\tlet idxRxn = -1, idxYld = -1, idxExp = -1;\n\t\tlet extRxn = '', extYld = '', extExp = '';\n\t\tfor (let n = 0; n < ds.numExtensions; n++)\n\t\t{\n\t\t\tif (ds.getExtType(n) == Experiment.CODE_RXN) {idxRxn = n; extRxn = ds.getExtData(n);}\n\t\t\telse if (ds.getExtType(n) == Experiment.CODE_YLD) {idxYld = n; extYld = ds.getExtData(n);}\n\t\t\telse if (ds.getExtType(n) == Experiment.CODE) {idxExp = n; extExp = ds.getExtData(n);}\n\t\t}\n\n\t\t// note: the implied Reaction aspect is the only metadata field that actually holds content\n\t\tlet [nreactants, nproducts, nreagents] = this.parseReactionMetaData(extRxn);\n\t\tlet meta = `nreactants=${nreactants}\\nnproducts=${nproducts}\\nnreagents=${nreagents}\\n`;\n\t\tif (idxRxn >= 0) ds.setExtData(idxRxn, meta); else ds.appendExtension(Experiment.NAME_RXN, Experiment.CODE_RXN, meta);\n\t\tif (idxYld >= 0) ds.setExtData(idxYld, ''); else ds.appendExtension(Experiment.NAME_YLD, Experiment.CODE_YLD, '');\n\t\tif (idxExp >= 0) ds.setExtData(idxExp, ''); else ds.appendExtension(Experiment.NAME, Experiment.CODE, '');\n\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_TITLE, DataSheetColumn.String);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_CREATEDATE, DataSheetColumn.Real);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_MODIFYDATE, DataSheetColumn.Real);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_DOI, DataSheetColumn.String);\n\t\tthis.forceColumn(Experiment.COLNAME_EXPERIMENT_META, DataSheetColumn.String);\n\n\t\tthis.forceColumn(Experiment.COLNAME_STEP_META, DataSheetColumn.String);\n\n\t\tfor (let n = 1; n <= nreactants; n++) this.forceReactantColumns(n);\n\t\tfor (let n = 1; n <= nreagents; n++) this.forceReagentColumns(n);\n\t\tfor (let n = 1; n <= nproducts; n++) this.forceProductColumns(n);\n\t}\n\n\t// force-adds respective groups of columns as necessary\n\tprivate forceColumn(colName:string, type:DataSheetColumn, suffix?:number):void\n\t{\n\t\tlet useName = colName + (suffix == null ? '' : suffix);\n\t\tthis.ds.ensureColumn(useName, type, Experiment.COLUMN_DESCRIPTIONS[colName]);\n\t}\n\tprivate forceReactantColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_STOICH, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_PRIMARY, DataSheetColumn.Boolean, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REACTANT_META, DataSheetColumn.String, suffix);\n\t}\n\tprivate forceReagentColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_EQUIV, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_REAGENT_META, DataSheetColumn.String, suffix);\n\t}\n\tprivate forceProductColumns(suffix:number):void\n\t{\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MOL, DataSheetColumn.Molecule, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_NAME, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_STOICH, DataSheetColumn.String, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MASS, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_VOLUME, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_MOLES, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_DENSITY, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_CONC, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_YIELD, DataSheetColumn.Real, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_WASTE, DataSheetColumn.Boolean, suffix);\n\t\tthis.forceColumn(Experiment.COLNAME_PRODUCT_META, DataSheetColumn.String, suffix);\n\t}\n\n\tprivate parseReactionMetaData(content:string):[number, number, number]\n\t{\n\t\tlet nreactants = 1, nproducts = 1, nreagents = 0;\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tif (line.startsWith('nreactants=')) nreactants = Math.max(nreactants, Math.min(100, parseInt(line.substring(11))));\n\t\t\telse if (line.startsWith('nproducts=')) nproducts = Math.max(nproducts, Math.min(100, parseInt(line.substring(10))));\n\t\t\telse if (line.startsWith('nreagents=')) nreagents = Math.max(nreagents, Math.min(100, parseInt(line.substring(10))));\n\t\t}\n\n\t\treturn [nreactants, nproducts, nreagents];\n\t}\n\n\t// more convenient version of above which scans the header; for routine use, post-setup\n\tprivate countComponents():[number, number, number]\n\t{\n\t\tlet nreactants = 0, nproducts = 0, nreagents = 0;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Experiment.CODE_RXN)\n\t\t{\n\t\t\t[nreactants, nproducts, nreagents] = this.parseReactionMetaData(this.ds.getExtData(n));\n\t\t\tbreak;\n\t\t}\n\t\treturn [nreactants, nproducts, nreagents];\n\t}\n\n\t// pulls out the respective component types from the underlying fields\n\tprivate fetchReactant(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_REACTANT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tlet stoich = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_STOICH}${idx}`);\n\t\tif (stoich) comp.stoich = stoich;\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_REACTANT_CONC}${idx}`);\n\t\tlet primary = this.ds.getBoolean(row, `${Experiment.COLNAME_REACTANT_PRIMARY}${idx}`);\n\t\tif (primary != null) comp.primary = primary;\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_REACTANT_META}${idx}`);\n\t\treturn comp;\n\t}\n\tprivate fetchProduct(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_PRODUCT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tlet stoich = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_STOICH}${idx}`);\n\t\tif (stoich) comp.stoich = stoich;\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_CONC}${idx}`);\n\t\tcomp.yield = this.ds.getReal(row, `${Experiment.COLNAME_PRODUCT_YIELD}${idx}`);\n\t\tlet waste = this.ds.getBoolean(row, `${Experiment.COLNAME_PRODUCT_WASTE}${idx}`);\n\t\tif (waste != null) comp.waste = waste;\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_PRODUCT_META}${idx}`);\n\t\treturn comp;\n\t}\n\tprivate fetchReagent(row:number, idx:number):ExperimentComponent\n\t{\n\t\tlet mol = this.ds.getMoleculeClone(row, `${Experiment.COLNAME_REAGENT_MOL}${idx}`);\n\t\tlet name = this.ds.getString(row, `${Experiment.COLNAME_REAGENT_NAME}${idx}`);\n\t\tif (MolUtil.isBlank(mol) && !name) return null;\n\n\t\tlet comp = new ExperimentComponent(mol, name);\n\t\tcomp.mass = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_MASS}${idx}`);\n\t\tcomp.volume = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_VOLUME}${idx}`);\n\t\tcomp.moles = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_MOLES}${idx}`);\n\t\tcomp.density = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_DENSITY}${idx}`);\n\t\tcomp.conc = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_CONC}${idx}`);\n\t\tcomp.equiv = this.ds.getReal(row, `${Experiment.COLNAME_REAGENT_EQUIV}${idx}`);\n\t\tcomp.meta = this.ds.getString(row, `${Experiment.COLNAME_REAGENT_META}${idx}`);\n\t\treturn comp;\n\t}\n\n\t// returns the list of operations needed to \"set\" an entry: this may involve adjusting columns, modifying extensions,\n\t// and deleting/inserting rows... as well as replacing cell content\n\tprivate putEntry(row:number, entry:ExperimentEntry, replace:boolean):void\n\t{\n\t\t// make sure the metadata is in place\n\t\tlet [preactants, pproducts, preagents] = this.countComponents();\n\t\tlet [nreactants, nproducts, nreagents] = [preactants, pproducts, preagents];\n\t\tfor (let step of entry.steps)\n\t\t{\n\t\t\tnreactants = Math.max(nreactants, step.reactants.length);\n\t\t\tnproducts = Math.max(nproducts, step.products.length);\n\t\t\tnreagents = Math.max(nreagents, step.reagents.length);\n\t\t}\n\t\tif (nreactants != preactants || nproducts != pproducts || nreagents != preagents)\n\t\t{\n\t\t\tlet meta = `nreactants=${nreactants}\\nnproducts=${nproducts}\\nnreagents=${nreagents}`;\n\t\t\tlet got = false;\n\t\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Experiment.CODE_RXN)\n\t\t\t{\n\t\t\t\tthis.ds.setExtData(n, meta);\n\t\t\t\tgot = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!got) this.ds.appendExtension(Experiment.NAME_RXN, Experiment.CODE_RXN, meta);\n\t\t}\n\n\t\t// make sure all columns are present and of the right type\n\t\tfor (let n = 1; n <= nreactants; n++) this.forceReactantColumns(n);\n\t\tfor (let n = 1; n <= nreagents; n++) this.forceReagentColumns(n);\n\t\tfor (let n = 1; n <= nproducts; n++) this.forceProductColumns(n);\n\n\t\t// sync up the number of steps, if necessary\n\t\tlet oldSteps = replace ? this.numberOfSteps(row) : 0, newSteps = entry.steps.length;\n\t\tif (oldSteps > newSteps)\n\t\t{\n\t\t\tfor (let n = newSteps; n < oldSteps; n++) this.ds.deleteRow(row + newSteps - 1);\n\t\t}\n\t\telse if (newSteps > oldSteps)\n\t\t{\n\t\t\tfor (let n = oldSteps; n < newSteps; n++) this.ds.insertRow(row + oldSteps);\n\t\t}\n\n\t\t// emit the header\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_TITLE, entry.title);\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE, entry.createDate == null ? null : entry.createDate.getTime() * 1E-3);\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_MODIFYDATE, entry.modifyDate == null ? null : entry.modifyDate.getTime() * 1E-3);\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_DOI, entry.doi);\n\t\tthis.ds.setString(row, Experiment.COLNAME_EXPERIMENT_META, entry.meta);\n\n\t\t// emit the steps and components\n\t\tfor (let s = 0; s < entry.steps.length; s++)\n\t\t{\n\t\t\tlet r = row + s, step = entry.steps[s];\n\t\t\tif (s == 0) for (let n = 0; n < step.reactants.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.reactants[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_REACTANT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_STOICH}${i}`, comp.stoich);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REACTANT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setBoolean(r, `${Experiment.COLNAME_REACTANT_PRIMARY}${i}`, comp.primary);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REACTANT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tfor (let n = 0; n < step.reagents.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.reagents[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_REAGENT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REAGENT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_EQUIV}${i}`, comp.equiv);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_REAGENT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_REAGENT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tfor (let n = 0; n < step.products.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = step.products[n], i = n + 1;\n\t\t\t\tthis.ds.setMolecule(r, `${Experiment.COLNAME_PRODUCT_MOL}${i}`, comp.mol);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_NAME}${i}`, comp.name);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_STOICH}${i}`, comp.stoich);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_MASS}${i}`, comp.mass);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_VOLUME}${i}`, comp.volume);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_MOLES}${i}`, comp.moles);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_DENSITY}${i}`, comp.density);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_CONC}${i}`, comp.conc);\n\t\t\t\tthis.ds.setReal(r, `${Experiment.COLNAME_PRODUCT_YIELD}${i}`, comp.yield);\n\t\t\t\tthis.ds.setBoolean(r, `${Experiment.COLNAME_PRODUCT_WASTE}${i}`, comp.waste);\n\t\t\t\tthis.ds.setString(r, `${Experiment.COLNAME_PRODUCT_META}${i}`, comp.meta);\n\t\t\t}\n\t\t\tthis.ds.setString(r, Experiment.COLNAME_STEP_META, step.meta);\n\t\t}\n\n\t\t// trash anything beyond the incoming limits\n\t\tfor (let s = 0; s < entry.steps.length; s++)\n\t\t{\n\t\t\tlet r = row + s;\n\t\t\tlet start = s > 0 ? 0 : entry.steps[s].reactants.length;\n\t\t\tfor (let n = start; n < nreactants; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_STOICH}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_PRIMARY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REACTANT_META}${i}`);\n\t\t\t}\n\t\t\tfor (let n = entry.steps[s].reagents.length; n < nreagents; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_EQUIV}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_REAGENT_META}${i}`);\n\t\t\t}\n\t\t\tfor (let n = entry.steps[s].products.length; n < nproducts; n++)\n\t\t\t{\n\t\t\t\tlet i = n + 1;\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MOL}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_NAME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_STOICH}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MASS}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_VOLUME}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_MOLES}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_DENSITY}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_CONC}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_WASTE}${i}`);\n\t\t\t\tthis.ds.setToNull(r, `${Experiment.COLNAME_PRODUCT_META}${i}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return Experiment.NAME;}\n\n\tpublic rowFirstBlock(row:number):boolean {return this.isFirstStep(row);}\n\tpublic rowBlockCount(row:number):number {return this.numberOfSteps(row);}\n\n\tpublic initiateNewRow(row:number):void\n\t{\n\t\tlet curTime = new Date().getTime() * 1E-3;\n\t\tthis.ds.setReal(row, Experiment.COLNAME_EXPERIMENT_CREATEDATE, curTime);\n\t}\n\n\tpublic columnEffectivelyBlank(row:number):string[]\n\t{\n\t\treturn [Experiment.COLNAME_EXPERIMENT_CREATEDATE];\n\t}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet resv = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++)\n\t\t{\n\t\t\tlet name = colNames[n];\n\t\t\tif (Experiment.ALL_COLUMN_LITERALS.indexOf(name) >= 0)\n\t\t\t{\n\t\t\t\tresv[n] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (let pfx of Experiment.ALL_COLUMN_PREFIXES) if (name.startsWith(pfx))\n\t\t\t{\n\t\t\t\tresv[n] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn resv;\n\t}\n\n\t// render the experiment in scheme form\n\t// TODO: other forms can be rendered (summary, metrics, quantity)\n\tpublic numGraphicRenderings(row:number):number {return 1;}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering\n\t{\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\tlet layout = new ArrangeExperiment(this.getEntry(row), measure, policy);\n\t\tlayout.limitTotalW = 50 * policy.data.pointScale;\n\t\tlayout.limitTotalH = 50 * policy.data.pointScale;\n\t\tlayout.includeStoich = true;\n\t\tlayout.includeAnnot = false;\n\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawExperiment(layout, metavec).draw();\n\t\tmetavec.normalise();\n\n\t\treturn {name: 'Scheme', metavec: metavec};\n\t}\n\n/*\topen override func numTextRenderings(row:Int) -> Int {return 1}\n\topen override func produceTextRendering(row:Int, idx:Int) -> (name:String, descr:String, text:String)\n\t{\n\t\tvar retName = \"\", retDescr = \"\", retText = \"\"\n\t\tdata.observe() {(ds:DataSheet) in (retName, retDescr, retText) = self.produceTextRendering(row:row, idx:idx, ds:ds)}\n\t\treturn (name:retName, descr:retDescr, text:retText)\n\t}\n\topen override func produceTextRendering(row:Int, idx:Int, ds:DataSheet) -> (name:String, descr:String, text:String)\n\t{\n\t\tassert(idx == 0, \"Invalid index to Experiment.produceTextRendering\")\n\n\t\tlet entry = getEntry(row, ds:ds)\n\t\tvar lines:[String] = []\n\n\t\tif !entry.title.isEmpty {lines.append(\"Title: \\(entry.title)\")}\n\n\t\tlet datefmt = DateFormatter()\n\t\tdatefmt.dateStyle = .medium\n\t\tdatefmt.timeStyle = .medium\n\n\t\tif let createDate = entry.createDate {lines.append(\"Created: \\(datefmt.string(from:createDate))\")}\n\t\tif let modifyDate = entry.modifyDate {lines.append(\"Modified: \\(datefmt.string(from:modifyDate))\")}\n\n\t\tif !entry.doi.isEmpty {lines.append(\"DOI: \\(entry.doi)\")}\n\n\t\tlet txt = lines.joined(separator:\"\\n\")\n\n\t\treturn (name:\"Header\", descr:\"Experiment description and metadata\", text:txt)\n\t}\n\n\topen override func numGraphicRenderings(row:Int) -> Int {return 3}\n\topen override func produceGraphicRendering(row:Int, idx:Int, policy:RenderPolicy, vg:VectorGfxBuilder) -> (name:String, vg:VectorGfxBuilder)\n\t{\n\t\tvar retName = \"\", retVG = vg\n\t\tdata.observe() {(ds:DataSheet) in (retName, retVG) = self.produceGraphicRendering(row:row, idx:idx, policy:policy, vg:vg, ds:ds)}\n\t\treturn (name:retName, vg:retVG)\n\t}\n\topen override func produceGraphicRendering(row:Int, idx:Int, policy:RenderPolicy, vg:VectorGfxBuilder, ds:DataSheet) -> (name:String, vg:VectorGfxBuilder)\n\t{\n\t\tif idx == Render.Scheme\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExperiment(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\n\t\t\tlayout.limitTotalW = 50 * policy.pointScale\n\t\t\tlayout.limitTotalH = 50 * policy.pointScale\n\t\t\tlayout.arrange()\n\n\t\t\t//vg.drawLine(x1:0, y1:0, x2:layout.width, y2:layout.height, colour:0xFF0000, thickness:1)\n\t\t\tlet vgexp = DrawExperiment(layout:layout, vg:vg)\n\t\t\tvgexp.draw()\n\n\t\t\treturn (name:\"Scheme\", vg:vg)\n\t\t}\n\t\telse if idx == Render.Quantity\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExpQuant(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\t\t\tlayout.idealAspect = 1.4\n\t\t\tlayout.arrange()\n\t\t\tlayout.render(vg)\n\t\t}\n\t\telse if idx == Render.Metrics\n\t\t{\n\t\t\tlet entry = getEntry(row, ds:ds)\n\t\t\tlet layout = ArrangeExpMetrics(entry:entry, measure:OutlineMeasurement(scale:policy.pointScale, yUp:false), policy:policy)\n\t\t\tlayout.idealAspect = 1.4\n\t\t\tlayout.arrange()\n\t\t\tlayout.render(vg)\n\t\t}\n\t\treturn (name:\"\", vg:vg)\n\t}*/\n}\n\nregisterAspect(Experiment);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectTextRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tMeasurement: provides some number of measurement fields, which augment an ordinary numeric field to add units,\n    modifier, error and overall metadata. This aspect is useful for collecting multiple columns of measurements such as\n    physical properties or assay readouts.\n*/\n\nexport interface MeasurementDataUnit\n{\n\tname:string;\n\turi:string;\n}\n\nexport interface MeasurementDataField\n{\n\tname:string;\n\tunits:string[];\n\tdefnURI:string[];\n}\n\nexport interface MeasurementDataHeader\n{\n\tunits:MeasurementDataUnit[];\n\tfields:MeasurementDataField[];\n}\n\nexport interface MeasurementDataValue\n{\n\tvalue:number;\n\terror:number;\n\tunits:string;\n\tmod:string;\n}\n\nexport class MeasurementData extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.MeasurementData';\n\tpublic static NAME = 'Measurement Data';\n\n\tpublic static SUFFIX_VALUE = '';\n\tpublic static SUFFIX_ERROR = '_error';\n\tpublic static SUFFIX_UNITS = '_units';\n\tpublic static SUFFIX_MOD = '_mod';\n\n\tprivate header:MeasurementDataHeader = {units: [], fields: []};\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata\n\tpublic static isMeasurementData(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == MeasurementData.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(MeasurementData.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():MeasurementDataHeader\n\t{\n\t\treturn this.header;\n\t}\n\tpublic setHeader(header:MeasurementDataHeader):void\n\t{\n\t\tthis.header = header;\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t}\n\n\t// applies the header, and also updates the columns if necessary\n\tpublic effectHeader(header:MeasurementDataHeader):void\n\t{\n\t\tthis.setHeader(header);\n\t\tthis.ensureFields();\n\t}\n\n\t// renames a field, updating both the header and the underlying columns\n\tpublic rename(fldidx:number, newName:string):void\n\t{\n\t\tlet oldName = this.header.fields[fldidx].name;\n\t\tif (oldName == newName) return;\n\n\t\tthis.header.fields[fldidx].name = newName;\n\t\tthis.setHeader(this.header);\n\n\t\tfor (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD])\n\t\t{\n\t\t\tlet col = this.ds.findColByName(oldName + sfx);\n\t\t\tif (col >= 0) this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n\t\t}\n\t}\n\n\t// return the list of columns that's reserved for just the indicated field\n\tpublic reservedColumns(fldidx:number):string[]\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\treturn [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n\t\t\t\tfieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n\t}\n\n\t// getting and setting values\n\tpublic getValue(row:number, fldidx:number):MeasurementDataValue\n\t{\n\t\treturn this.getValueField(row, this.header.fields[fldidx]);\n\t}\n\tpublic getValueField(row:number, field:MeasurementDataField):MeasurementDataValue\n\t{\n\t\tlet value:MeasurementDataValue = {value: Number.NaN, error: Number.NaN, units: '', mod: ''};\n\n\t\tlet colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0 && this.ds.notNull(row, colValue)) value.value = this.ds.getReal(row, colValue);\n\t\tif (colError >= 0 && this.ds.notNull(row, colError)) value.error = this.ds.getReal(row, colError);\n\t\tif (colUnits >= 0) value.units = this.ds.getString(row, colUnits);\n\t\tif (colMod >= 0) value.mod = this.ds.getString(row, colMod);\n\n\t\treturn value;\n\t}\n\n\tpublic setValue(row:number, fldidx:number, value:MeasurementDataValue):void\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\tlet colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0) if (isNaN(value.value)) this.ds.setToNull(row, colValue); else this.ds.setReal(row, colValue, value.value);\n\t\tif (colError >= 0) if (isNaN(value.error)) this.ds.setToNull(row, colError); else this.ds.setReal(row, colError, value.error);\n\t\tif (colUnits >= 0) this.ds.setString(row, colUnits, value.units);\n\t\tif (colMod >= 0) this.ds.setString(row, colMod, value.mod);\n\t}\n\n\tpublic clearValue(row:number, fldidx:number):void\n\t{\n\t\tlet fieldName = this.header.fields[fldidx].name;\n\t\tlet colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real);\n\t\tlet colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real);\n\t\tlet colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String);\n\t\tlet colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, DataSheetColumn.String);\n\n\t\tif (colValue >= 0) this.ds.setToNull(row, colValue);\n\t\tif (colError >= 0) this.ds.setToNull(row, colError);\n\t\tif (colUnits >= 0) this.ds.setToNull(row, colUnits);\n\t\tif (colMod >= 0) this.ds.setToNull(row, colMod);\n\t}\n\n\t// getting/setting description\n\tpublic getDescr(row:number, fldidx:number):string\n\t{\n\t\tlet col = this.ds.findColByName(this.header.fields[fldidx].name);\n\t\treturn col < 0 ? '' : this.ds.colDescr(col);\n\t}\n\tpublic setDescr(row:number, fldidx:number, descr:string):void\n\t{\n\t\tlet col = this.ds.findColByName(this.header.fields[fldidx].name);\n\t\tif (col >= 0) this.ds.changeColumnName(col, this.ds.colName(col), descr);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tthis.header = {units: [], fields: []};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == MeasurementData.CODE)\n\t\t{\n\t\t\tthis.header = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.ensureFields();\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.header);\n\t\t\tthis.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n\t\t}\n\t}\n\n\t// makes sure the fields mentioned in the header are available\n\tprivate ensureFields():void\n\t{\n\t\tfor (let f of this.header.fields)\n\t\t{\n\t\t\tlet descr = 'Measurement';\n\t\t\tlet colidx = this.ds.findColByName(f.name);\n\t\t\tif (colidx >= 0) descr = this.ds.colDescr(colidx);\n\n\t\t\tif (this.allowModify)\n\t\t\t{\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, DataSheetColumn.Real, descr);\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, DataSheetColumn.Real, 'Error');\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, DataSheetColumn.String, 'Units');\n\t\t\t\tthis.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, DataSheetColumn.String, 'Modifier');\n\t\t\t}\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):MeasurementDataHeader\n\t{\n\t\tlet header:MeasurementDataHeader = {units: [], fields: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('unit='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length >= 2) header.units.push({name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1])});\n\t\t\t}\n\t\t\telse if (line.startsWith('field='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tlet f:MeasurementDataField = {name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: []};\n\t\t\t\tfor (let n = 1; n < bits.length; n++) f.units.push(MoleculeStream.skUnescape(bits[n]));\n\t\t\t\theader.fields.push(f);\n\t\t\t}\n\t\t\telse if (line.startsWith('definition='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet f = header.fields.find((f) => f.name == bits[0]);\n\t\t\t\t\tif (!f) continue;\n\t\t\t\t\tfor (let n = 1; n < bits.length; n++) f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:MeasurementDataHeader):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let u of header.units)\n\t\t{\n\t\t\tlines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n\t\t}\n\t\tfor (let f of header.fields)\n\t\t{\n\t\t\tlet line = 'field=' + MoleculeStream.skEscape(f.name);\n\t\t\tfor (let u of f.units) line += ',' + MoleculeStream.skEscape(u);\n\t\t\tlines.push(line);\n\n\t\t\tif (Vec.notBlank(f.defnURI))\n\t\t\t{\n\t\t\t\tline = 'definition=' + MoleculeStream.skEscape(f.name);\n\t\t\t\tfor (let d of f.defnURI) line += ',' + MoleculeStream.skEscape(d);\n\t\t\t\tlines.push(line);\n\t\t\t}\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return MeasurementData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet names = new Set<string>();\n\t\tfor (let f of this.header.fields)\n\t\t{\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_VALUE);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_ERROR);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_UNITS);\n\t\t\tnames.add(f.name + MeasurementData.SUFFIX_MOD);\n\t\t}\n\t\tlet resv:boolean[] = [];\n\t\tfor (let col of colNames) resv.push(names.has(col));\n\t\treturn resv;\n\t}\n\n\tpublic numTextRenderings(row:number):number {return this.header.fields.length;}\n\tpublic produceTextRendering(row:number, idx:number):AspectTextRendering\n\t{\n\t\tlet field = this.header.fields[idx];\n\t\tlet colField = this.ds.findColByName(field.name);\n\n\t\tlet tr:AspectTextRendering =\n\t\t{\n\t\t\tname: field.name,\n\t\t\tdescr: colField < 0 ? '' : this.ds.colDescr(colField),\n\t\t\ttext: '',\n\t\t\ttype: Aspect.TEXT_PLAIN\n\t\t};\n\n\t\tlet datum = this.getValue(row, idx);\n\t\tif (!Number.isNaN(datum.value))\n\t\t{\n\t\t\tif (datum.mod) tr.text += datum.mod + ' ';\n\t\t\ttr.text += datum.value;\n\t\t\tif (!Number.isNaN(datum.error)) tr.text += ' \\u{00B1} ' + datum.error;\n\t\t\tif (datum.units) tr.text += ' ' + datum.units;\n\t\t}\n\t\treturn tr;\n\t}\n}\n\nregisterAspect(MeasurementData);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {DataSheet} from '../ds/DataSheet';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {Vec} from '../util/Vec';\nimport {Aspect} from './Aspect';\nimport {registerAspect} from './AspectList';\nimport {MeasurementData} from './MeasurementData';\n\n/*\n\tMixture: stores metadata about various columns such that they can be corralled into a hierarchical form that represents\n\ta mixed group of chemical substances, where individual components and branches have structure, name, quantity and various\n\tother properties when available. Designed to be compatible with the Mixfile format (https://github.com/cdd/mixtures) and\n\tIUPAC Mixtures InChI (MInChI) notation.\n*/\n\nexport enum MixtureAttributeType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\nexport interface MixtureAttribute\n{\n\tcolumn:string;\n\tposition:number[];\n\ttype:MixtureAttributeType;\n\tinfo?:string[];\n}\n\nexport interface MixtureHeader\n{\n\tattributes:MixtureAttribute[];\n}\n\nexport class Mixture extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.Mixture';\n\tpublic static NAME = 'Mixture';\n\n\tpublic static SUFFIX_VALUE = '';\n\tprivate header:MixtureHeader = {attributes: []};\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata\n\tpublic static isMixture(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == Mixture.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(Mixture.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getHeader():MixtureHeader\n\t{\n\t\treturn this.header;\n\t}\n\tpublic setHeader(header:MixtureHeader):void\n\t{\n\t\tthis.header = header;\n\t\tlet content = this.formatMetaData(header);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Mixture.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tthis.header = {attributes: []};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == Mixture.CODE)\n\t\t{\n\t\t\tthis.header = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!got && this.allowModify)\n\t\t{\n\t\t\tlet content = this.formatMetaData(this.header);\n\t\t\tthis.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):MixtureHeader\n\t{\n\t\tlet header:MixtureHeader = {attributes: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tif (eq < 0) continue;\n\t\t\tif (line.startsWith('attr='))\n\t\t\t{\n\t\t\t\tlet bits = line.substring(eq + 1).split(',');\n\t\t\t\tif (bits.length < 3) continue;\n\t\t\t\tlet column = MoleculeStream.skUnescape(bits[0]);\n\t\t\t\tlet position:number[] = [];\n\t\t\t\tif (bits[1] != '0') position = bits[1].split('.').map((str) => parseInt(str));\n\t\t\t\tlet type = bits[2] as MixtureAttributeType;\n\t\t\t\tlet info:string[] = [];\n\t\t\t\tfor (let n = 3; n < bits.length; n++) info.push(MoleculeStream.skUnescape(bits[n]));\n\n\t\t\t\theader.attributes.push({column, position, type, info});\n\t\t\t}\n\t\t}\n\t\treturn header;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(header:MixtureHeader):string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tfor (let a of header.attributes)\n\t\t{\n\t\t\tlet bits:string[] = [MoleculeStream.skEscape(a.column)];\n\t\t\tif (Vec.isBlank(a.position)) bits.push('0'); else bits.push(a.position.join('.'));\n\t\t\tbits.push(a.type);\n\t\t\tif (a.info) for (let str of a.info) bits.push(MoleculeStream.skEscape(str));\n\t\t\tlines.push('attr=' + bits.join(','));\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return MeasurementData.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet names = new Set<string>();\n\t\tfor (let a of this.header.attributes) names.add(a.column);\n\t\tlet resv:boolean[] = [];\n\t\tfor (let col of colNames) resv.push(names.has(col));\n\t\treturn resv;\n\t}\n}\n\nregisterAspect(Mixture);\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {Vec} from '../util/Vec';\nimport {Aspect, AspectGraphicRendering} from './Aspect';\nimport {registerAspect} from './AspectList';\n\n/*\n\tSAR Table: provides scaffold/substituent/molecule equivalence based on fragment placeholders (R-groups).\n\n\tNote that the aspect also includes the concept of \"fields\", with predefined units and ranges and rendering information. This\n\twas put to good effect in the eponymous mobile app, but is now deprecated: these information are stored as a pass-through for\n\tcompatibility purposes.\n*/\n\n// description of the overall structure of the aspect\ninterface SARTableFields\n{\n\t// column names for underlying content\n\tconstruct:string; // molecule\n\tlocked:string; // boolean\n\tscaffold:string; // molecule\n\tsubstituents:string[]; // molecule\n\n\t// additional configuration lines from the header, implemented as a passthrough: stored for compatibility, but not used anymore\n\tmetadata:string[];\n}\n\n// a single entry, in a workable form\ninterface SARTableEntry\n{\n\tconstruct:Molecule;\n\tlocked:boolean;\n\tscaffold:Molecule;\n\tsubstNames:string[];\n\tsubstituents:Molecule[];\n}\n\nexport class SARTable extends Aspect\n{\n\tpublic static CODE = 'org.mmi.aspect.SARTable';\n\tpublic static NAME = 'SAR Table';\n\n\tprivate static DESCR_CONSTRUCT = 'Structure of constructed molecule';\n\tprivate static DESCR_LOCKED = 'Whether constructed molecule should be rebuilt';\n\tprivate static DESCR_SCAFFOLD = 'Decorated core scaffold of molecule';\n\tprivate static DESCR_SUBSTITUENT = 'Substituent fragment to be attached to scaffold';\n\n\t// indices that can be used to request specific graphics\n\tpublic static RENDER_CONSTRUCT = 0;\n\tpublic static RENDER_SCAFFOLD = 1;\n\tpublic static RENDER_SUBSTITUENT = 2; // (and beyond)\n\n\t// ----------------- public methods -----------------\n\n\t// used to test if a datasheet has the appropriate metadata flagging it as a feedstock-containing datasheet\n\tpublic static isSARTable(ds:DataSheet):boolean\n\t{\n\t\tfor (let n = 0; n < ds.numExtensions; n++) if (ds.getExtType(n) == SARTable.CODE) return true;\n\t\treturn false;\n\t}\n\n\tconstructor(ds?:DataSheet, allowModify?:boolean)\n\t{\n\t\tsuper(SARTable.CODE, ds, allowModify);\n\t\tthis.setup();\n\t}\n\n\t// data access\n\tpublic getFields():SARTableFields\n\t{\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE) return this.parseMetaData(this.ds.getExtData(n));\n\t\treturn null;\n\t}\n\tpublic setFields(fields:SARTableFields):void\n\t{\n\t\tlet content = this.formatMetaData(fields);\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE)\n\t\t{\n\t\t\tthis.ds.setExtData(n, content);\n\t\t\treturn;\n\t\t}\n\t\tthis.ds.appendExtension(SARTable.NAME, SARTable.CODE, content);\n\t}\n\tpublic getEntry(row:number):SARTableEntry\n\t{\n\t\tlet fields = this.getFields();\n\t\tlet entry:SARTableEntry =\n\t\t{\n\t\t\tconstruct: this.ds.getMolecule(row, fields.construct),\n\t\t\tlocked: !!this.ds.getBoolean(row, fields.locked),\n\t\t\tscaffold: this.ds.getMolecule(row, fields.scaffold),\n\t\t\tsubstNames: [],\n\t\t\tsubstituents: []\n\t\t};\n\t\tfor (let subst of fields.substituents)\n\t\t{\n\t\t\tentry.substNames.push(subst);\n\t\t\tentry.substituents.push(this.ds.getMolecule(row, subst));\n\t\t}\n\t\treturn entry;\n\t}\n\tpublic setEntry(row:number, entry:SARTableEntry):void\n\t{\n\t\tlet fields = this.getFields();\n\n\t\tlet colConstruct = this.ds.findColByName(fields.construct, DataSheetColumn.Molecule);\n\t\tif (colConstruct >= 0) this.ds.setMolecule(row, colConstruct, entry.construct);\n\n\t\tlet colLocked = this.ds.findColByName(fields.locked, DataSheetColumn.Boolean);\n\t\tif (colLocked >= 0) this.ds.setBoolean(row, colLocked, entry.locked);\n\n\t\tlet colScaffold = this.ds.findColByName(fields.scaffold, DataSheetColumn.Molecule);\n\t\tif (colScaffold >= 0) this.ds.setMolecule(row, colScaffold, entry.scaffold);\n\n\t\tfor (let n = 0; n < fields.substituents.length; n++)\n\t\t{\n\t\t\tlet colSubst = this.ds.findColByName(fields.substituents[n], DataSheetColumn.Molecule);\n\t\t\tif (colSubst >= 0) this.ds.setMolecule(row, colSubst, entry.substituents[n]);\n\t\t}\n\t}\n\n\t// goes through the list of substituent names, and makes sure that each of them is referred to in the extensions, and also that the\n\t// underlying column exists\n\tpublic createSubstituents(tobeAdded:string[]):void\n\t{\n\t\tif (tobeAdded.length == 0) return;\n\n\t\tlet fields = this.getFields();\n\t\tlet modified = false;\n\t\tfor (let name of tobeAdded) if (fields.substituents.indexOf(name) < 0)\n\t\t{\n\t\t\tfields.substituents.push(name);\n\t\t\tthis.ds.ensureColumn(name, DataSheetColumn.Molecule, SARTable.DESCR_SUBSTITUENT);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) this.setFields(fields);\n\t}\n\n\t// general purpose: returns true if an atom is considered to be an attachment placeholder\n\tpublic static isAttachment(mol:Molecule, atom:number):boolean\n\t{\n\t\treturn mol.atomicNumber(atom) == 0 && !MolUtil.hasAbbrev(mol, atom) && mol.atomAdjCount(atom) == 1;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// workhorse for the constructor\n\tprivate setup():void\n\t{\n\t\tthis.parseAndCorrect();\n\t}\n\n\t// assuming that the underlying datasheet definitely is a datasheet, makes any necessary corrections to force it into compliance\n\tprivate parseAndCorrect():void\n\t{\n\t\tlet fields:SARTableFields =\n\t\t{\n\t\t\tconstruct: 'Molecule',\n\t\t\tlocked: 'Molecule_locked',\n\t\t\tscaffold: 'Scaffold',\n\t\t\tsubstituents: [],\n\t\t\tmetadata: []\n\t\t};\n\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.ds.numExtensions; n++) if (this.ds.getExtType(n) == SARTable.CODE)\n\t\t{\n\t\t\tfields = this.parseMetaData(this.ds.getExtData(n));\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.ds.ensureColumn(fields.construct, DataSheetColumn.Molecule, SARTable.DESCR_CONSTRUCT);\n\t\tthis.ds.ensureColumn(fields.locked, DataSheetColumn.Boolean, SARTable.DESCR_LOCKED);\n\t\tthis.ds.ensureColumn(fields.scaffold, DataSheetColumn.Molecule, SARTable.DESCR_SCAFFOLD);\n\t\tfor (let subst of fields.substituents) this.ds.ensureColumn(subst, DataSheetColumn.Molecule, SARTable.DESCR_SUBSTITUENT);\n\n\t\tif (!got)\n\t\t{\n\t\t\tlet content = this.formatMetaData(fields);\n\t\t\tthis.ds.appendExtension(SARTable.NAME, SARTable.CODE, content);\n\t\t}\n\t}\n\n\t// interprets the string metadata from the extensions\n\tprivate parseMetaData(content:string):SARTableFields\n\t{\n\t\tlet fields:SARTableFields = {construct: null, locked: null, scaffold: null, substituents: [], metadata: []};\n\n\t\tfor (let line of content.split(/\\r?\\n/))\n\t\t{\n\t\t\tlet pos = line.indexOf('=');\n\t\t\tif (pos < 0) continue;\n\t\t\tlet key = line.substring(0, pos), val = line.substring(pos + 1);\n\t\t\tif (key == 'field')\n\t\t\t{\n\t\t\t\tlet bits = val.split(',');\n\t\t\t\tif (bits.length >= 3)\n\t\t\t\t{\n\t\t\t\t\tlet type = bits[0], name = MoleculeStream.skUnescape(bits[1]);\n\t\t\t\t\tif (type == 'construct')\n\t\t\t\t\t{\n\t\t\t\t\t\tfields.construct = name;\n\t\t\t\t\t\tfields.locked = name + '_locked';\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == 'scaffold') {fields.scaffold = name; continue;}\n\t\t\t\t\telse if (type == 'substituent') {fields.substituents.push(name); continue;}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfields.metadata.push(line);\n\t\t}\n\n\t\treturn fields;\n\t}\n\n\t// deserialises the header metadata\n\tprivate formatMetaData(fields:SARTableFields):string\n\t{\n\t\tlet content = '';\n\t\tcontent += 'field=construct,' + MoleculeStream.skEscape(fields.construct) + ',\\n';\n\t\tcontent += 'field=scaffold,' + MoleculeStream.skEscape(fields.scaffold) + ',\\n';\n\t\tfor (let subst of fields.substituents) content += 'field=substituent,' + MoleculeStream.skEscape(subst) + ',\\n';\n\t\tfor (let meta of fields.metadata) content += meta + '\\n';\n\t\treturn content;\n\t}\n\n\t// ------------------ aspect implementation --------------------\n\n\tpublic plainHeading():string {return SARTable.NAME;}\n\n\tpublic isColumnReserved(colName:string):boolean\n\t{\n\t\treturn this.areColumnsReserved([colName])[0];\n\t}\n\n\tpublic areColumnsReserved(colNames:string[]):boolean[]\n\t{\n\t\tlet fields = this.getFields();\n\t\tlet used = new Set<string>();\n\t\tused.add(fields.construct);\n\t\tused.add(fields.locked);\n\t\tused.add(fields.scaffold);\n\t\tfor (let subst of fields.substituents) used.add(subst);\n\n\t\tlet reserved = Vec.booleanArray(false, colNames.length);\n\t\tfor (let n = 0; n < colNames.length; n++) reserved[n] = used.has(colNames[n]);\n\t\treturn reserved;\n\t}\n\n\tpublic numGraphicRenderings(row:number):number\n\t{\n\t\tlet fields = this.getFields();\n\t\treturn 2 + fields.substituents.length;\n\t}\n\tpublic produceGraphicRendering(row:number, idx:number, policy:RenderPolicy):AspectGraphicRendering\n\t{\n\t\tlet fields = this.getFields(), ds = this.ds;\n\n\t\tif (idx == SARTable.RENDER_CONSTRUCT)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(row, fields.construct);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// recolour the core scaffold, and add boundary notation\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) > 0) effects.colAtom[n] = 0x096E6F;\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tlet m1 = mol.atomMapNum(mol.bondFrom(n)), m2 = mol.atomMapNum(mol.bondTo(n));\n\t\t\t\t\tif (m1 > 0 && m2 > 0) effects.colBond[n] = 0x096E6F;\n\t\t\t\t\telse if (m1 > 0 || m2 > 0) effects.dottedBondCross[n] = 0x606060;\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse metavec.drawText(0, 0, '?', 15, 0x000000);\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: fields.construct, metavec: metavec};\n\t\t}\n\t\telse if (idx == SARTable.RENDER_SCAFFOLD)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(row, fields.scaffold);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// decorate substituents: different display depending on whether matching substituents are available\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (SARTable.isAttachment(mol, n))\n\t\t\t\t{\n\t\t\t\t\tlet isDefined = false;\n\t\t\t\t\tlet el = mol.atomElement(n);\n\t\t\t\t\touter: for (let colName of fields.substituents)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subst = ds.getMolecule(row, colName);\n\t\t\t\t\t\tif (subst != null) for (let i = 1; i <= subst.numAtoms; i++)\n\t\t\t\t\t\t\tif (subst.atomElement(i) == el || (subst.atomElement(i) == 'R' && el == colName))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisDefined = true;\n\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\teffects.colAtom[n] = isDefined ? 0x096E6F : 0xFF0000;\n\t\t\t\t\teffects.dottedRectOutline[n] = isDefined ? 0x808080 : 0xFF0000;\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse metavec.drawText(0, 0, '?', 15, 0x000000);\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: fields.scaffold, metavec: metavec};\n\t\t}\n\t\telse if (idx >= SARTable.RENDER_SUBSTITUENT && idx < SARTable.RENDER_SUBSTITUENT + fields.substituents.length)\n\t\t{\n\t\t\tlet sidx = idx - SARTable.RENDER_SUBSTITUENT, sname = fields.substituents[sidx];\n\t\t\tlet mol = ds.getMolecule(row, sname);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\n\t\t\t\t// decorated substituents\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (SARTable.isAttachment(mol, n))\n\t\t\t\t{\n\t\t\t\t\teffects.colAtom[n] = 0x096E6F;\n\t\t\t\t\teffects.dottedRectOutline[n] = 0x808080;\n\t\t\t\t\t// (different colours if the attachments don't line up? or just leave it?)\n\t\t\t\t}\n\n\t\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// empty substituents get decorated in some way, depending on whether absence is justified\n\t\t\t\tlet txt = '?';\n\t\t\t\tlet scaff = ds.getMolecule(row, fields.scaffold);\n\t\t\t\tif (MolUtil.notBlank(scaff))\n\t\t\t\t{\n\t\t\t\t\ttxt = 'n/a';\n\t\t\t\t\tfor (let n = 1; n <= scaff.numAtoms; n++) if (scaff.atomElement(n) == sname) {txt = '?'; break;}\n\t\t\t\t\tif (txt == '?') for (let n = 0; n < fields.substituents.length; n++) if (n != sidx)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subst = ds.getMolecule(row, fields.substituents[n]);\n\t\t\t\t\t\tif (MolUtil.notBlank(subst))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let i = 1; i <= subst.numAtoms; i++) if (subst.atomElement(i) == sname) {txt = 'n/a'; break;} // multidentate\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmetavec.drawText(0, 0, txt, 15, 0x000000);\n\t\t\t}\n\n\t\t\tmetavec.normalise();\n\t\t\treturn {name: sname, metavec: metavec};\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nregisterAspect(SARTable);\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {norm2_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CircularFingerprints, CircularFP} from './CircularFingerprints';\n\n/*\n\tA specialisation of the BayesianModel class, which operates exclusively on Circular (ECFP/FCFP) fingerprints.\n\tProvides convenience methods for feeding in raw molecules to create a model, and also serialisation/deserialisation\n\tfeatures allowing models to be stored and recreated with known properties.\n\n\tThe class is designed to operate with fairly large input sizes, but it does need to hold onto all of the calculated\n\tfingerprint lists so that the final build operation can calculate calibration metrics.\n\n\tIt can operate with any degree of fingerprint folding, including none at all (but this means that there is a diabolical\n\tcase that could get very memory intensive).\n\n\tFolding is optional: 0 means that all hash codes are retained (worst case scenario: 4 billion). If folding,\n\tmust be an exponent of two (e.g. 1024, 2048, 4096, etc.) In practice, ROC curves for recalling single properties\n\ttend to hit diminishing returns above folding sizes of about 1024.\n\n\tSerialisation format is:\n\n\t\tBayesian!({fptype},{folding},{low},{high})\n\t\t{hashidx1}={contribution1}\n\t\t{hashidx2}={contribution2}\n\t\t...\n\t\t!End\n\n\tRecommended file extension is \".bayesian\", MIME type is \"chemistry/x-bayesian\"\n\n\tWhere {fptype} is ECFP0/2/4/6 or FCFP0/2/4/6.\n\n\t{low} and {high} are the boundaries of the response value for the training set.\n*/\n\nexport class BayesianModel\n{\n\t// incoming hash codes: actual values, and subsumed values are {#active,#total}\n\tprivate numActive = 0;\n\tprivate inHash:{[id:number] : number[]} = {};\n\tprivate training:number[][] = [];\n\tprivate activity:boolean[] = [];\n\n\t// built model: contributions for each hash code\n\tprivate contribs:{[id:number] : number} = {};\n\tprivate lowThresh = 0;\n\tprivate highThresh = 0;\n\tprivate range = 0;\n\tprivate invRange = 0;\n\n\t// self-validation metrics: can optionally be calculated after a build\n\tprivate estimates:number[] = null;\n\tpublic rocX:number[] = null; // between 0..1, and rounded to modest precision\n\tpublic rocY:number[] = null;\n\tpublic rocType:string = null;\n\tpublic rocAUC = Number.NaN;\n\tpublic trainingSize = 0; // these are serialised, while the actual training set is not\n\tpublic trainingActives = 0;\n\tpublic atomicSlopeA = Number.NaN; // calibration for atomic predictors (to get into [-1,1])\n\tpublic atomicInterceptB = Number.NaN;\n\n\t// truth-table and derived metrics\n\tpublic truthTP = 0;\n\tpublic truthFP = 0;\n\tpublic truthTN = 0;\n\tpublic truthFN = 0;\n\tpublic precision = Number.NaN;\n\tpublic recall = Number.NaN;\n\tpublic specificity = Number.NaN;\n\tpublic statF1 = Number.NaN;\n\tpublic statKappa = Number.NaN;\n\tpublic statMCC = Number.NaN;\n\n\t// optional text attributes (serialisable)\n\tpublic noteTitle:string = null;\n\tpublic noteOrigin:string = null;\n\tpublic noteField:string = null;\n\tpublic noteComments:string[] = null;\n\n\t// ----------------- public methods -----------------\n\n\t// instantiate: must pick a class, which is one of the CircularFingerprints.CLASS_* constants\n\tconstructor(public classType:number, public folding?:number)\n\t{\n\t\tif (this.folding == null) this.folding = 0;\n\t}\n\n\t// creates fingerprints for the indicated molecule, and adds them into the Bayesian inputs; note that for performance purposes, it is allowed to provide precomputed\n\t// hash codes, but the caller must ensure that they are calculated according to the same schema\n\tpublic addMolecule(mol:Molecule, active:boolean, hashes?:number[])\n\t{\n\t\tif (MolUtil.isBlank(mol) && hashes == null) throw 'Molecule cannot be blank or null.';\n\n\t\tif (hashes == null)\n\t\t{\n\t\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\t\tcirc.calculate();\n\t\t\thashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\t}\n\n\t\tif (active) this.numActive++;\n\t\tthis.training.push(hashes);\n\t\tthis.activity.push(active);\n\t\tfor (let h of hashes)\n\t\t{\n\t\t\tlet stash = this.inHash[h];\n\t\t\tif (stash == null) stash = [0, 0];\n\t\t\tif (active) stash[0]++;\n\t\t\tstash[1]++;\n\t\t\tthis.inHash[h] = stash;\n\t\t}\n\t}\n\n\t// turns the incoming hashes into fingerprint contributions, which makes up a model that can be used to predict\n\t// newly submitted structures\n\tpublic build():void\n\t{\n\t\tthis.trainingSize = this.training.length; // for posterity\n\t\tthis.trainingActives = this.numActive;\n\n\t\tthis.contribs = [];\n\n\t\tconst sz = this.training.length;\n\t\tconst invSz = 1.0 / sz;\n\t\tconst P_AT = this.numActive * invSz;\n\n\t\tfor (let hashStr in this.inHash)\n\t\t{\n\t\t\tlet hash = parseInt(hashStr);\n\t\t\tconst AT = this.inHash[hash];\n\t\t\tconst A = AT[0], T = AT[1];\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tthis.contribs[hash] = P;\n\t\t}\n\n\t\tthis.lowThresh = Number.POSITIVE_INFINITY;\n\t\tthis.highThresh = Number.NEGATIVE_INFINITY;\n\t\tfor (let fp of this.training)\n\t\t{\n\t\t\tlet val = 0;\n\t\t\tfor (let hash of fp) val += this.contribs[hash];\n\t\t\tthis.lowThresh = Math.min(this.lowThresh, val);\n\t\t\tthis.highThresh = Math.max(this.highThresh, val);\n\t\t}\n\t\tthis.range = this.highThresh - this.lowThresh;\n\t\tthis.invRange = this.range > 0 ? 1 / this.range : 0;\n\t}\n\n\t// calculates fingerprints for a molecule, and returns the predictor value\n\tpublic predictMolecule(mol:Molecule):number\n\t{\n\t\tif (MolUtil.isBlank(mol)) throw 'Molecule cannot be blank or null.';\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\tcirc.calculate();\n\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\treturn this.predictFP(hashes);\n\t}\n\n\t// perform the prediction, given the precomputed hash codes; this may be called from outside of the class for performance reasons, but the caller\n\t// must take care to ensure that the same fingerprint scheme is used, and that the hash codes are ordered\n\tpublic predictFP(hashes:number[]):number\n\t{\n\t\tlet val = 0;\n\t\tfor (let h of hashes)\n\t\t{\n\t\t\tlet c = this.contribs[h];\n\t\t\tif (c != null) val += c;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// converts the predictor (as calculated above) into a value that is scaled and translated into a range that can be used as a probability: most values\n\t// will fall between 0..1, though some out-of-domain cases will exceed this range and may have to be capped\n\tpublic scalePredictor(pred:number):number\n\t{\n\t\t// special case: if there is no differentiation scale, it's either above or below (typically happens with tiny models)\n\t\tif (this.range == 0) return pred >= this.highThresh ? 1 : 0;\n\t\treturn (pred - this.lowThresh) * this.invRange;\n\t}\n\n\t// while the scaled predictor (above) is generally between 0..1 (\"probability-like\"), results can go out of bounds; using the arctan\n\t// function scales it so that the centroid is the same (0.5), but lower/higher values approach 0 or 1 as asymptotes; this is a useful\n\t// way of keeping it within the range without resorting to capping, and has another handy effect of allowing known results to be stored\n\t// in the same field (i.e. 0=known inactive, 1=known active, because these values cannot otherwise be reached)\n\tpublic scaleArcTan(scaled:number):number\n\t{\n\t\tconst INVPI = 1.0 / Math.PI;\n\t\treturn Math.atan(2 * scaled - 1) * INVPI + 0.5;\n\t}\n\n\t// figure out the proportion of a molecule's fingerprints are represented in the model\n\tpublic calculateOverlap(mol:Molecule):number\n\t{\n\t\tif (MolUtil.isBlank(mol)) throw 'Molecule cannot be blank or null.';\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\t\tcirc.calculate();\n\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\treturn this.calculateOverlapFP(hashes);\n\t}\n\n\tpublic calculateOverlapFP(hashes:number[]):number\n\t{\n\t\tif (hashes.length == 0) return 0;\n\t\tlet count = 0.0;\n\t\tfor (let h of hashes) if (this.contribs[h] != null) count++;\n\t\treturn hashes.length == 1 ? count : count / hashes.length;\n\t}\n\n\t// builds an array of contribution values per atom; the scale is: 0=neutral, -1=very inactive, 1=very active (but not capped)\n\tpublic calculateAtomPredictors(mol:Molecule):number[]\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet atomic = Vec.numberArray(0, na); // (default of zero: is this the best call?)\n\n\t\t// sum the contributions: for each fingerprint that is defined, smear the contribution equally over all of the atoms that were involved in\n\t\t// a fingerprint with that hash code\n\t\tlet predHashes = new Set<number>();\n\t\tlet cover = this.determineCoverage(mol, predHashes);\n\t\tfor (let h in cover)\n\t\t{\n\t\t\tlet c = this.contribs[h];\n\t\t\tif (c == null) continue;\n\t\t\tlet mask = cover[h];\n\t\t\tlet msz = Vec.maskCount(mask);\n\t\t\tlet invSz = 1.0 / msz;\n\t\t\tfor (let n = 0; n < na; n++) if (mask[n]) atomic[n] += c * invSz;\n\t\t}\n\n\t\t// special deal: if there is a calibration for atomic values, apply that and be done with it\n\t\tif (!isNaN(this.atomicSlopeA))\n\t\t{\n\t\t\tfor (let n = 0; n < na; n++) atomic[n] = (this.atomicSlopeA * atomic[n]) + this.atomicInterceptB;\n\t\t\treturn atomic;\n\t\t}\n\n\t\t// double duty: use the same source material to add up the numeric predictor as well (note that the \"coverage\" hashes are not necessarily\n\t\t// the same as the approved list)\n\t\tlet pred = 0;\n\t\tfor (let h of predHashes)\n\t\t{\n\t\t\tlet c = this.contribs[h as any];\n\t\t\tif (c != null) pred += c;\n\t\t}\n\n\t\t// adjust the contributions to an average of zero, with a fixed standard deviation\n\t\tconst SCALE_STDDEV_TO = 0.25;\n\t\tconst invN = 1.0 / na;\n\t\tVec.addTo(atomic, -Vec.sum(atomic) * invN);\n\t\tlet stdDev = 0;\n\t\tfor (let a of atomic) stdDev += a * a;\n\t\tstdDev = Math.sqrt(stdDev * invN);\n\n\t\tif (stdDev > 1E-3) Vec.mulBy(atomic, SCALE_STDDEV_TO / stdDev);\n\n\t\t// shunt it up so that it is centred around the overal predictor, in the same zero-centred space\n\t\tlet scaled = (this.scalePredictor(pred) - 0.5) * 2; // adjusted to the [-1,1] space\n\t\tif (scaled < -1) scaled = -1; else if (scaled > 1) scaled = 1;\n\t\tVec.addTo(atomic, scaled);\n\t\treturn atomic;\n\t}\n\n\t// produces an ROC validation set using the training data, in leave-one-out fashion; note that this is very slow, and scales to O(N^2) relative\n\t// to the size of the training set, so should only be used for small collections\n\tpublic validateLeaveOneOut():void\n\t{\n\t\tconst sz = this.training.length;\n\t\tthis.estimates = [];\n\t\tfor (let n = 0; n < sz; n++) this.estimates.push(this.singleLeaveOneOut(n));\n\t\tthis.calculateROC();\n\t\tthis.calculateTruth();\n\t\tthis.rocType = 'leave-one-out';\n\t}\n\n\t// produces ROC validation, except using an N-pass split, which is much faster than leave-one-out, and is appropriate for reasonably big datasets\n\tpublic validateFiveFold():void\n\t{\n\t\tthis.rocType = 'five-fold';\n\t\tthis.validateNfold(5);\n\t}\n\n\tpublic validateThreeFold():void\n\t{\n\t\tthis.rocType = 'three-fold';\n\t\tthis.validateNfold(3);\n\t}\n\n\t// clears content from the training set (since it can be a memory hog)\n\tpublic clearTraining():void\n\t{\n\t\tthis.training = [];\n\t\tthis.activity = [];\n\t}\n\n\t// turns the model into a serialised ASCII string format\n\tpublic serialise():string\n\t{\n\t\tlet lines:string[] = [];\n\n\t\tlet fpname = this.classType == CircularFingerprints.CLASS_ECFP0 ? 'ECFP0' : this.classType == CircularFingerprints.CLASS_ECFP2 ? 'ECFP2'\n\t\t\t\t   : this.classType == CircularFingerprints.CLASS_ECFP4 ? 'ECFP4' : this.classType == CircularFingerprints.CLASS_ECFP6 ? 'ECFP6'\n\t\t\t\t   : '?';\n\n\t\tlines.push('Bayesian!(' + fpname + ',' + this.folding + ',' + this.lowThresh + ',' + this.highThresh + ')');\n\n\t\t// primary payload: the bit contributions\n\t\tlet sorted:number[] = [];\n\t\tfor (let hash in this.contribs) sorted.push(parseInt(hash));\n\t\tVec.sort(sorted);\n\t\tfor (let hash of sorted)\n\t\t{\n\t\t\tconst c = this.contribs[hash];\n\t\t\tlines.push(hash + '=' + c);\n\t\t}\n\n\t\t// other information\n\t\tlines.push('training:size=' + this.trainingSize);\n\t\tlines.push('training:actives=' + this.trainingActives);\n\n\t\tif (!Number.isNaN(this.rocAUC)) lines.push('roc:auc=' + this.rocAUC);\n\t\tif (this.rocType != null) lines.push('roc:type=' + this.rocType);\n\t\tif (this.rocX != null && this.rocY != null)\n\t\t{\n\t\t\tlet x = 'roc:x=';\n\t\t\tfor (let n = 0; n < this.rocX.length; n++) x += (n == 0 ? '' : ',') + this.rocX[n];\n\t\t\tlines.push(x);\n\n\t\t\tlet y = 'roc:y=';\n\t\t\tfor (let n = 0; n < this.rocY.length; n++) y += (n == 0 ? '' : ',') + this.rocY[n];\n\t\t\tlines.push(y);\n\t\t}\n\n\t\tif (this.truthTP > 0 || this.truthFP > 0 || this.truthTN > 0 || this.truthFP > 0)\n\t\t{\n\t\t\tlines.push('truth:TP=' + this.truthTP);\n\t\t\tlines.push('truth:FP=' + this.truthFP);\n\t\t\tlines.push('truth:TN=' + this.truthTN);\n\t\t\tlines.push('truth:FN=' + this.truthFN);\n\t\t\tlines.push('truth:precision=' + this.precision);\n\t\t\tlines.push('truth:recall=' + this.recall);\n\t\t\tlines.push('truth:specificity=' + this.specificity);\n\t\t\tlines.push('truth:F1=' + this.statF1);\n\t\t\tlines.push('truth:kappa=' + this.statKappa);\n\t\t\tlines.push('truth:MCC=' + this.statMCC);\n\t\t}\n\n\t\tif (!isNaN(this.atomicSlopeA) && !isNaN(this.atomicInterceptB))\n\t\t{\n\t\t\tlines.push('atomic:slope=' + this.atomicSlopeA);\n\t\t\tlines.push('atomic:intercept=' + this.atomicInterceptB);\n\t\t}\n\n\t\t// notes: freeform user text\n\t\tif (this.noteTitle) lines.push('note:title=' + this.noteTitle);\n\t\tif (this.noteOrigin) lines.push('note:origin=' + this.noteOrigin);\n\t\tif (this.noteField) lines.push('note:field=' + this.noteField);\n\t\tif (this.noteComments) for (let comment of this.noteComments) lines.push('note:comment=' + comment);\n\n\t\tlines.push('!End');\n\n\t\treturn lines.join('\\n');\n\t}\n\n\t// transforms string back into model, if possible\n\tpublic static deserialise(str:string):BayesianModel\n\t{\n\t\tlet lines = str.split('\\n'), lnum = 0;\n\t\tfunction readLine() {return lnum >= lines.length ? null : lines[lnum++].trim();}\n\n\t\tlet line = readLine();\n\t\tif (line == null || !line.startsWith('Bayesian!(') || !line.endsWith(')')) throw 'Not a serialised Bayesian model.';\n\t\tlet bits = line.substring(10, line.length - 1).split(',');\n\t\tif (bits.length < 4) throw 'Invalid header content';\n\n\t\tlet classType = bits[0] == 'ECFP0' ? CircularFingerprints.CLASS_ECFP0 : bits[0] == 'ECFP2' ? CircularFingerprints.CLASS_ECFP2\n\t\t\t\t\t  : bits[0] == 'ECFP4' ? CircularFingerprints.CLASS_ECFP4 : bits[0] == 'ECFP6' ? CircularFingerprints.CLASS_ECFP6\n\t\t\t\t\t  : 0;\n\t\tif (classType == 0) throw 'Unknown fingerprint type: ' + bits[0];\n\n\t\tlet folding = parseInt(bits[1]);\n\t\tif (folding > 0) for (let f = folding; f > 0; f = f >> 1)\n\t\t{\n\t\t\tif ((f & 1) == 1 && f != 1)\n\t\t\t{\n\t\t\t\tfolding = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (folding < 0) throw 'Fingerprint folding ' + bits[1] + ' invalid: must be 0 or power of 2.';\n\n\t\tlet model = new BayesianModel(classType, folding);\n\t\tmodel.lowThresh = parseFloat(bits[2]);\n\t\tmodel.highThresh = parseFloat(bits[3]);\n\t\tmodel.range = model.highThresh - model.lowThresh;\n\t\tmodel.invRange = model.range > 0 ? 1 / model.range : 0;\n\n\t\tconst PTN_HASHLINE = new RegExp('^(-?\\\\d+)=([\\\\d\\\\.Ee-]+)');\n\n\t\twhile (true)\n\t\t{\n\t\t\tline = readLine();\n\t\t\tif (line == null) throw 'Missing correct terminator line.';\n\t\t\tif (line == '!End') break;\n\n\t\t\tlet match = PTN_HASHLINE.exec(line);\n\t\t\tif (match != null)\n\t\t\t{\n\t\t\t\tlet hash = parseInt(match[1]);\n\t\t\t\tlet c = parseFloat(match[2]);\n\t\t\t\tmodel.contribs[hash] = c;\n\t\t\t}\n\t\t\telse if (line.startsWith('training:size=')) model.trainingSize = parseInt(line.substring(14));\n\t\t\telse if (line.startsWith('training:actives=')) model.trainingActives = parseInt(line.substring(17));\n\t\t\telse if (line.startsWith('roc:auc=')) model.rocAUC = parseFloat(line.substring(8));\n\t\t\telse if (line.startsWith('roc:type=')) model.rocType = line.substring(9);\n\t\t\telse if (line.startsWith('roc:x='))\n\t\t\t{\n\t\t\t\tmodel.rocX = [];\n\t\t\t\tfor (let s of line.substring(6).split(',')) model.rocX.push(parseFloat(s));\n\t\t\t}\n\t\t\telse if (line.startsWith('roc:y='))\n\t\t\t{\n\t\t\t\tmodel.rocY = [];\n\t\t\t\tfor (let s of line.substring(6).split(',')) model.rocY.push(parseFloat(s));\n\t\t\t}\n\t\t\telse if (line.startsWith('truth:TP=')) model.truthTP = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:FP=')) model.truthFP = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:TN=')) model.truthTN = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:FN=')) model.truthFN = parseInt(line.substring(9), 0);\n\t\t\telse if (line.startsWith('truth:precision=')) model.precision = parseFloat(line.substring(16));\n\t\t\telse if (line.startsWith('truth:recall=')) model.recall = parseFloat(line.substring(13));\n\t\t\telse if (line.startsWith('truth:specificity=')) model.specificity = parseFloat(line.substring(18));\n\t\t\telse if (line.startsWith('truth:F1=')) model.statF1 = parseFloat(line.substring(9));\n\t\t\telse if (line.startsWith('truth:kappa=')) model.statKappa = parseFloat(line.substring(12));\n\t\t\telse if (line.startsWith('truth:MCC=')) model.statMCC = parseFloat(line.substring(10));\n\t\t\telse if (line.startsWith('atomic:slope=')) model.atomicSlopeA = parseFloat(line.substring(13));\n\t\t\telse if (line.startsWith('atomic:intercept=')) model.atomicInterceptB = parseFloat(line.substring(17));\n\t\t\telse if (line.startsWith('note:title=')) model.noteTitle = line.substring(11);\n\t\t\telse if (line.startsWith('note:origin=')) model.noteOrigin = line.substring(12);\n\t\t\telse if (line.startsWith('note:field=')) model.noteField = line.substring(11);\n\t\t\telse if (line.startsWith('note:comment='))\n\t\t\t{\n\t\t\t\tif (model.noteComments == null) model.noteComments = [];\n\t\t\t\tmodel.noteComments.push(line.substring(13));\n\t\t\t}\n\t\t}\n\n\t\treturn model;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// estimate leave-one-out predictor for a given training entry\n\tprivate singleLeaveOneOut(idx:number):number\n\t{\n\t\tlet exclActive = this.activity[idx];\n\t\tlet exclSet = new Set<number>();\n\t\tfor (let fp of this.training[idx]) exclSet.add(fp);\n\n\t\tconst sz = this.training.length, szN = sz - 1;\n\t\tconst invSzN = 1.0 / szN;\n\t\tconst activeN = exclActive ? this.numActive - 1 : this.numActive;\n\t\tconst P_AT = activeN * invSzN;\n\n\t\tlet val = 0;\n\t\tfor (let hashStr in this.inHash)\n\t\t{\n\t\t\tconst hash = parseInt(hashStr);\n\t\t\tif (!exclSet.has(hash)) continue;\n\t\t\tconst AT = this.inHash[hash];\n\t\t\tconst A = AT[0] - (exclActive ? 1 : 0), T = AT[1] - 1;\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tval += P;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// validation with N segments\n\tprivate validateNfold(nsegs:number):void\n\t{\n\t\t// partition between active & inactive, just in case the mixture is heavily skewed\n\t\tconst sz = this.training.length;\n\t\tlet order = Vec.numberArray(0, sz);\n\t\tlet p = 0;\n\t\tfor (let n = 0; n < sz; n++) if (this.activity[n]) order[p++] = n;\n\t\tfor (let n = 0; n < sz; n++) if (!this.activity[n]) order[p++] = n;\n\n\t\t// build N separate contribution models: each one of them build from the entities that are *not* in the segment\n\t\tlet segContribs:{[id:number] : number}[] = [];\n\t\tfor (let n = 0; n < nsegs; n++) segContribs.push(this.buildPartial(order, n, nsegs));\n\n\t\t// use the separate models to estimate the cases that were not covered\n\t\tthis.estimates = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < sz; n++) this.estimates[order[n]] = this.estimatePartial(order, n, segContribs[n % nsegs]);\n\t\tthis.calculateROC();\n\t\tthis.calculateTruth();\n\t}\n\n\t// generates a contribution model based on all the training set for which (n%div)!=seg; e.g. for 5-fold, it would use the 80% of the training set\n\t// that is not implied by the current skein\n\tprivate buildPartial(order:number[], seg:number, div:number)\n\t{\n\t\tconst sz = this.training.length;\n\t\tlet na = 0, nt = 0;\n\t\tlet ih:{[id:number] : number[]} = {};\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n % div != seg)\n\t\t\t{\n\t\t\t\tconst active = this.activity[order[n]];\n\t\t\t\tif (active) na++;\n\t\t\t\tnt++;\n\t\t\t\tfor (let h of this.training[order[n]])\n\t\t\t\t{\n\t\t\t\t\tlet stash = ih[h];\n\t\t\t\t\tif (stash == null) stash = [0, 0];\n\t\t\t\t\tif (active) stash[0]++;\n\t\t\t\t\tstash[1]++;\n\t\t\t\t\tih[h] = stash;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet segContribs:{[id:number] : number} = {};\n\n\t\tconst invSz = 1.0 / nt;\n\t\tconst P_AT = na * invSz;\n\t\tfor (let hashStr in ih)\n\t\t{\n\t\t\tlet hash = parseInt(hashStr);\n\t\t\tconst AT = ih[hash];\n\t\t\tconst A = AT[0], T = AT[1];\n\t\t\tconst Pcorr = (A + 1) / (T * P_AT + 1);\n\t\t\tconst P = Math.log(Pcorr);\n\t\t\tsegContribs[hash] = P;\n\t\t}\n\n\t\treturn segContribs;\n\t}\n\n\t// using contributions build from some partial section of the training set, uses that to estimate for an untrained entry\n\tprivate estimatePartial(order:number[], idx:number, segContrib:{[id:number] : number}):number\n\t{\n\t\tlet val = 0;\n\t\tfor (let h of this.training[order[idx]])\n\t\t{\n\t\t\tlet c = segContrib[h];\n\t\t\tif (c != null) val += c;\n\t\t}\n\t\treturn val;\n\t}\n\n\t// assumes estimates already calculated, fills in the ROC data\n\tprivate calculateROC():void\n\t{\n\t\t// sort the available estimates, and take midpoints\n\t\tconst sz = this.training.length;\n\t\tlet idx = Vec.idxSort(this.estimates);\n\t\tlet thresholds:number[] = [];\n\t\tthresholds.push(this.lowThresh - 0.01 * this.range);\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tconst th1 = this.estimates[idx[n]], th2 = this.estimates[idx[n + 1]];\n\t\t\tif (th1 == th2) continue;\n\t\t\tthresholds.push(0.5 * (th1 + th2));\n\t\t}\n\t\tthresholds.push(this.highThresh + 0.01 * this.range);\n\n\t\t// x = false positives / actual negatives\n\t\t// y = true positives / actual positives\n\t\tthis.rocX = [];\n\t\tthis.rocY = [];\n\t\tlet rocT:number[] = [];\n\n\t\tlet posTrue = 0, posFalse = 0, ipos = 0;\n\t\tlet invPos = 1.0 / this.numActive, invNeg = 1.0 / (sz - this.numActive);\n\t\tfor (let n = 0; n < thresholds.length; n++)\n\t\t{\n\t\t\tconst th = thresholds[n];\n\t\t\tfor (; ipos < sz; ipos++)\n\t\t\t{\n\t\t\t\tif (th < this.estimates[idx[ipos]]) break;\n\t\t\t\tif (this.activity[idx[ipos]]) posTrue++;\n\t\t\t\telse posFalse++;\n\t\t\t}\n\t\t\tconst x = posFalse * invNeg;\n\t\t\tconst y = posTrue * invPos;\n\t\t\tconst rsz = rocT.length;\n\t\t\tif (rsz > 0 && x == this.rocX[rsz - 1] && y == this.rocY[rsz - 1]) continue;\n\n\t\t\tthis.rocX[rsz] = 1 - x;\n\t\t\tthis.rocY[rsz] = 1 - y;\n\t\t\trocT[rsz] = th;\n\t\t}\n\n\t\tthis.rocX = Vec.reverse(this.rocX);\n\t\tthis.rocY = Vec.reverse(this.rocY);\n\t\trocT = Vec.reverse(rocT);\n\n\t\tthis.calibrateThresholds(this.rocX, this.rocY, rocT);\n\n\t\t// calculate area-under-curve\n\t\tthis.rocAUC = 0;\n\t\tfor (let n = 0; n < rocT.length - 1; n++)\n\t\t{\n\t\t\tconst w = this.rocX[n + 1] - this.rocX[n], h = 0.5 * (this.rocY[n] + this.rocY[n + 1]);\n\t\t\tthis.rocAUC += w * h;\n\t\t}\n\n\t\t// collapse the {x,y} coords: no sensible reason to have huge number of points\n\t\tconst DIST = 0.002, DSQ = DIST * DIST;\n\t\tlet gx:number[] = [], gy:number[] = [];\n\t\tgx.push(this.rocX[0]);\n\t\tgy.push(this.rocY[0]);\n\t\tfor (let i = 1; i < rocT.length - 1; i++)\n\t\t{\n\t\t\tconst dx = this.rocX[i] - gx[gx.length - 1], dy = this.rocY[i] - gy[gy.length - 1];\n\t\t\tif (norm2_xy(dx, dy) < DSQ) continue;\n\t\t\tgx.push(this.rocX[i]);\n\t\t\tgy.push(this.rocY[i]);\n\t\t}\n\t\tgx.push(this.rocX[rocT.length - 1]);\n\t\tgy.push(this.rocY[rocT.length - 1]);\n\t}\n\n\t// builds the \"truth table\", which uses the calibration threshold to determine which side of the line each input molecule is on (with whichever\n\t// cross validation split was used for the ROC); from the 2x2 table, all the other metrics can also be derived\n\tprivate calculateTruth():void\n\t{\n\t\tlet thresh = 0.5 * (this.lowThresh + this.highThresh);\n\t\tthis.truthTP = this.truthFP = this.truthTN = this.truthFN = 0;\n\t\tfor (let n = 0; n < this.activity.length; n++)\n\t\t{\n\t\t\tlet actual = this.activity[n], predicted = this.estimates[n] >= thresh;\n\t\t\tif (actual && predicted) this.truthTP++;\n\t\t\telse if (!actual && predicted) this.truthFP++;\n\t\t\telse if (actual && !predicted) this.truthFN++;\n\t\t\telse if (!actual && !predicted) this.truthTN++;\n\t\t}\n\n\t\tconst TP = this.truthTP, FP = this.truthFP, TN = this.truthTN, FN = this.truthFN;\n\n\t\tlet invSize = 1.0 / this.activity.length;\n\n\t\t// calculate F1 score\n\t\tthis.precision = TP / (TP + FP);\n\t\tthis.recall = TP / (TP + FN);\n\t\tthis.specificity = TN / (TN + FP);\n\t\tthis.statF1 = 2 * (this.precision * this.recall) / (this.precision + this.recall);\n\n\t\t// calculate Cohen's kappa\n\t\tlet Pyes = (TP + FP) * invSize * (TP + FN) * invSize;\n\t\tlet Pno = (FP + TN) * invSize * (FN + TN) * invSize;\n\t\tlet P0 = (TP + TN) * invSize, Pe = Pyes + Pno;\n\t\tthis.statKappa = (P0 - Pe) / (1 - Pe);\n\n\t\t// calculate Matthews correlation coefficient\n\t\tlet mccOver = TP * TN - FP * FN;\n\t\tlet mccUnder = (TP + FP) * (TP + FN) * (TN + FP) * (TN + FN);\n\t\tthis.statMCC = mccOver / Math.sqrt(mccUnder);\n\t}\n\n\t// rederives the low/high thresholds, using ROC curve data: once the analysis is complete, the midpoint will be the optimum balance\n\tprivate calibrateThresholds(x:number[], y:number[], t:number[]):void\n\t{\n\t\tconst sz = t.length;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < sz; n++) if (y[n] - x[n] > y[idx] - x[idx]) idx = n;\n\t\tconst midThresh = t[idx];\n\t\tlet idxX = 0, idxY = sz - 1;\n\t\tfor (; idxX < idx - 1; idxX++) if (x[idxX] > 0) break;\n\t\tfor (; idxY > idx + 1; idxY--) if (y[idxY] < 1) break;\n\t\tlet delta = Math.min(t[idxX] - midThresh, midThresh - t[idxY]);\n\t\tthis.lowThresh = midThresh - delta;\n\t\tthis.highThresh = midThresh + delta;\n\t\tthis.range = 2 * delta;\n\t\tthis.invRange = this.range > 0 ? 1 / this.range : 0;\n\t}\n\n\t// reapplies the fingerprint generation for a molecule, given that the outgoing indices are known already; it uses this\n\t// information to generate a mask for each of the indices, which describes the atoms that could lead to the fingerprint's\n\t// creation (including all of the possible redundancies)\n\t// note that the \"approvedHashes\" parameter is optional; it will be used to gather the numeric indices of the hashes\n\t// that were approved, i.e. the normal fingerprint list; done for performance reasons, to avoid recalculating\n\tpublic determineCoverage(mol:Molecule, approvedHashes:Set<number>):{[id:number] : boolean[]}\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet cover:{[id:number] : boolean[]} = {};\n\t\tconst andBits = this.folding == 0 ? 0xFFFFFFFF : this.folding - 1;\n\n\t\tlet meta = MetaMolecule.createStrictRubric(mol);\n\t\tlet circ = new CircularFingerprints(meta, this.classType);\n\n\t\tlet collectFP = (fp:CircularFP):void =>\n\t\t{\n\t\t\tlet idx = fp.hashCode & andBits;\n\t\t\tif (this.contribs[idx] == null) return; // hash bit not in the model, so abandon it\n\t\t\tlet mask = cover[idx];\n\t\t\tif (mask == null)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, na);\n\t\t\t\tcover[idx] = mask;\n\t\t\t}\n\t\t\tfor (let a of fp.atoms) mask[a - 1] = true;\n\t\t};\n\t\tcirc.hookApplyNewFP = collectFP;\n\t\tcirc.hookConsiderNewFP = collectFP;\n\t\tcirc.calculate();\n\n\t\t// collect the \"approved\" hashes, i.e. the normal operation of the fingerprinter\n\t\tif (approvedHashes != null)\n\t\t{\n\t\t\tlet hashes = this.folding == 0 ? circ.getUniqueHashes() : circ.getFoldedHashes(this.folding);\n\t\t\tfor (let h of hashes) approvedHashes.add(h);\n\t\t}\n\n\t\treturn cover;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Molecule} from '../mol/Molecule';\nimport {Vec} from '../util/Vec';\n\n/*\n\tTurns a molecule into linear notation, following some of the SMILES string patterns. The output will be recognisable as a\n\tconnection table, but it should be noted that the conversion process is extremely lossy. There are only certain use cases\n\twhere this makes sense, mainly for interoperability purposes, e.g. pasting into an online searching tool, or embedding in a\n\ttext format where some molecule is better than none. The output can be made canonical by providing a set of priorities,\n\tbut this is optional, and there is no plan to sync with any of the existing schemes.\n\n\tSpecific deficiencies which could be addressed:\n\t\t- aromaticity is not used at all; the raw bond orders are encoded\n\t\t- stereochemistry is not encoded at all\n\t\t- no query to SMARTS translation\n*/\n\nexport class BuildSMILES\n{\n\tprivate seq:number[]; // the walk-order atom sequence\n\tprivate link:number[][]; // a list of the linking-codes between nonsequential atoms\n\tprivate conn:number[][]; // a list of the \"other atom\" indices corresponding to above\n\n\t// ------------------ public methods --------------------\n\n\t// note: pri is an optional parameter that can be used to specify the walk-order preference\n\tconstructor(private mol:Molecule, private pri:number[] = null)\n\t{\n\t}\n\n\t// performs the calculation, and returns the string\n\tpublic generate():string\n\t{\n\t\tif (this.mol.numAtoms == 0) return '';\n\n\t\tthis.walkSequence();\n\t\tthis.findLinks();\n\t\treturn this.assemble();\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// orders the atoms by walking down the list\n\tprivate walkSequence():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, pri = this.pri;\n\t\tthis.seq = [];\n\t\tlet visited = Vec.booleanArray(false, na);\n\n\t\tlet pos = 1;\n\t\tif (pri != null) pos = Vec.idxMin(pri) + 1;\n\n\t\tfor (let count = 0; count < na; count++)\n\t\t{\n\t\t\tthis.seq.push(pos);\n\t\t\tvisited[pos - 1] = true;\n\n\t\t\tif (count == na - 1) break; // last atom doesn't need a next\n\n\t\t\tlet adj = mol.atomAdjList(pos);\n\t\t\tlet cc = mol.atomConnComp(pos);\n\t\t\tpos = 0;\n\n\t\t\t// see if there is an un-visited neighbour\n\t\t\tfor (let n = 0; n < adj.length; n++) if (!visited[adj[n] - 1])\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = adj[n]; break;}\n\t\t\t\tif (pos == 0 || pri[adj[n] - 1] < pri[pos - 1]) pos = adj[n];\n\t\t\t}\n\t\t\tif (pos > 0) continue;\n\n\t\t\t// see if there is an un-visited atom in the same component\n\t\t\tfor (let n = 1; n <= na; n++) if (!visited[n - 1] && mol.atomConnComp(n) == cc)\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = n; break;}\n\t\t\t\tif (pos == 0 || pri[n - 1] < pri[pos - 1]) pos = n;\n\t\t\t}\n\t\t\tif (pos > 0) continue;\n\n\t\t\t// grab the next un-visited atom\n\t\t\tfor (let n = 1; n <= na; n++) if (!visited[n - 1])\n\t\t\t{\n\t\t\t\tif (pri == null) {pos = n; break;}\n\t\t\t\tif (pos == 0 || pri[n - 1] < pri[pos - 1]) pos = n;\n\t\t\t}\n\n\t\t\tif (pos == 0) throw 'Walk sequence failed.';\n\t\t}\n\t}\n\n\t// walks through the established sequence, and marks up bonds that do not follow the logical sequence; these need to be\n\t// assigned a connection number, between each of the atoms\n\tprivate findLinks():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, pri = this.pri, seq = this.seq;\n\t\tthis.link = [];\n\t\tthis.conn = [];\n\t\tfor (let n = 0; n < na; n++) {this.link.push([]); this.conn.push([]);}\n\n\t\tlet invseq = Vec.numberArray(0, na);\n\t\tfor (let n = 0; n < na; n++) invseq[seq[n] - 1] = n;\n\n\t\tlet inPlay = Vec.numberArray(-1, na + 1); // true if number is currently reserved for reconnection\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tlet prev = n > 0 ? seq[n - 1] : 0;\n\t\t\tlet cur = seq[n];\n\t\t\tlet next = n < na - 1 ? seq[n + 1] : 0;\n\n\t\t\tfor (let i = 1; i <= na; i++) if (inPlay[i] >= 0 && n > inPlay[i]) inPlay[i] = -1;\n\n\t\t\tlet adj = mol.atomAdjList(cur);\n\n\t\t\t// if we're using priorities, then the adjacency list needs to be sorted\n\t\t\tif (pri != null) for (let p = 0; p < adj.length - 1;)\n\t\t\t{\n\t\t\t\tif (invseq[adj[p] - 1] > invseq[adj[p + 1] - 1])\n\t\t\t\t{\n\t\t\t\t\tVec.swap(adj, p, p + 1);\n\t\t\t\t\tif (p > 0) p--;\n\t\t\t\t}\n\t\t\t\telse p++;\n\t\t\t}\n\n\t\t\t// generate all the obligatory links\n\t\t\tfor (let i = 0; i < adj.length; i++)\n\t\t\t{\n\t\t\t\tif (adj[i] == prev || adj[i] == next) continue; // these are on-sequence, so no need to connect\n\t\t\t\tlet nbr = adj[i];\n\t\t\t\tif (invseq[cur - 1] > invseq[nbr - 1]) continue; // avoid duplicates\n\n\t\t\t\tlet num = -1;\n\t\t\t\tfor (let j = 1; j <= na; j++) if (inPlay[j] < 0)\n\t\t\t\t{\n\t\t\t\t\tnum = j;\n\t\t\t\t\tinPlay[j] = Math.max(invseq[cur - 1], invseq[nbr - 1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.link[cur - 1].push(num);\n\t\t\t\tthis.conn[cur - 1].push(nbr);\n\n\t\t\t\tthis.link[nbr - 1].push(num);\n\t\t\t\tthis.conn[nbr - 1].push(cur);\n\t\t\t}\n\t\t}\n\t}\n\n\t// builds the SMILES string from the precomputed data\n\tprivate assemble():string\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, seq = this.seq, link = this.link, conn = this.conn;\n\n\t\tlet smiles = '';\n\n\t\tconst NON_ESCAPED = ['C', 'N', 'O', 'P', 'S'];\n\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tlet prev = n > 0 ? seq[n - 1] : 0, cur = seq[n];\n\t\t\tlet bidx = prev > 0 ? mol.findBond(prev, cur) : 0;\n\t\t\tif (prev > 0 && bidx == 0) smiles += '.';\n\t\t\tif (bidx > 0)\n\t\t\t{\n\t\t\t\tlet bo = mol.bondOrder(bidx);\n\t\t\t\tif (bo == 2) smiles += '=';\n\t\t\t\telse if (bo == 3) smiles += '#';\n\t\t\t}\n\n\t\t\tlet el = mol.atomElement(cur);\n\t\t\tif (Chemistry.ELEMENTS.indexOf(el) < 0) el = '*';\n\t\t\tlet chg = mol.atomCharge(cur);\n\t\t\tif (NON_ESCAPED.indexOf(el) >= 0 && chg == 0)\n\t\t\t{\n\t\t\t\tsmiles += el;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsmiles += '[' + el;\n\t\t\t\tif (chg > 0) smiles += '+' + chg;\n\t\t\t\tif (chg < 0) smiles += chg;\n\t\t\t\tsmiles += ']';\n\t\t\t}\n\n\t\t\tlet num = link[cur - 1];\n\t\t\tif (num != null) for (let i = 0; i < num.length; i++)\n\t\t\t{\n\t\t\t\tbidx = mol.findBond(cur, conn[cur - 1][i]);\n\t\t\t\tlet bo = mol.bondOrder(bidx);\n\t\t\t\tif (bo == 2) smiles += '=';\n\t\t\t\telse if (bo == 3) smiles += '#';\n\n\t\t\t\tif (num[i] < 10) smiles += num[i];\n\t\t\t\telse smiles += '%' + num[i];\n\t\t\t}\n\t\t}\n\n\t\treturn smiles;\n\t}\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {Permutation, Vec} from '../util/Vec';\n\n/*\n\tCircular fingerprints: for generating ECFP-2/4/6 and FCFP-2/4/6 fingerprints. These are described by:\n\n    \tOriginal proprietary version:\n    \t\tJ. Chem. Inf. Model., 50, 742–754 (2010)\n    \t\thttp://pubs.acs.org/doi/abs/10.1021/ci100050t\n\n    \tOpen source version (implemented in this module):\n    \t\tJ. Cheminf., 6:38 (2014)\n    \t\thttp://www.jcheminf.com/content/6/1/38\n\n\tNote that integer hashing is done using the CRC32 algorithm, using the Java CRC32 class, which is the same\n\tformula/parameters as used by PNG files, and described in: http://www.w3.org/TR/PNG/#D-CRCAppendix\n\n\tImplicit vs. explicit hydrogens are handled, i.e. it doesn't matter whether the incoming molecule is hydrogen\n\tsuppressed or not. However, inline abbreviations do need to be expanded out prior to doing the calculation.\n*/\n\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\nexport interface CircularFP\n{\n\thashCode:number;\n\titeration:number;\n\tatoms:number[];\n\tcentralAtom:number;\n}\n\nexport class CircularFingerprints\n{\n\tpublic static CLASS_ECFP0 = 0;\n\tpublic static CLASS_ECFP2 = 1;\n\tpublic static CLASS_ECFP4 = 2;\n\tpublic static CLASS_ECFP6 = 3;\n\n\t// plugins: interception of fingerprint addition\n\tpublic hookApplyNewFP:(newFP:CircularFP) => void = null;\n\tpublic hookConsiderNewFP:(newFP:CircularFP) => void = null;\n\n\tprivate identity:number[] = [];\n\tprivate resolvedChiral:boolean[] = [];\n\tprivate atomGroup:number[][] = [];\n\tprivate fplist:CircularFP[] = [];\n\tprivate amask:boolean[] = [];\n\tprivate atomAdj:number[][] = [];\n\tprivate bondAdj:number[][] = [];\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private meta:MetaMolecule, private kind:number)\n\t{\n\t\tmake_crc_table(); // (nop if already made)\n\t}\n\n\t// performs the calculation; after completion, the results may be fetched\n\tpublic calculate():void\n\t{\n\t\tlet mol = this.meta.mol, na = mol.numAtoms;\n\t\tthis.identity = Vec.numberArray(0, na);\n\t\tthis.resolvedChiral = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++) this.atomGroup.push([]);\n\n\t\t// setup the potential correction between explicit vs. implicit hydrogens, and the stashed adjacency list\n\t\tthis.amask = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tthis.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n\t\t\tthis.atomAdj.push([]);\n\t\t\tthis.bondAdj.push([]);\n\t\t}\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tif (!this.amask[n]) continue;\n\t\t\tthis.atomAdj[n] = mol.atomAdjList(n + 1);\n\t\t\tthis.bondAdj[n] = mol.atomAdjBonds(n + 1);\n\t\t\tfor (let i = this.atomAdj[n].length - 1; i >= 0; i--) if (!this.amask[this.atomAdj[n][i] - 1])\n\t\t\t{\n\t\t\t\tthis.atomAdj[n].splice(i, 1);\n\t\t\t\tthis.bondAdj[n].splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\t// seed the initial atom identities, at iteration zero\n\t\tfor (let n = 0; n < na; n++) if (this.amask[n])\n\t\t{\n\t\t\tthis.identity[n] = this.initialIdentityECFP(n + 1);\n\t\t\tthis.atomGroup[n] = [n + 1];\n\t\t\tthis.applyNewFP({hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1});\n\t\t}\n\t\tlet niter = this.kind; // (corresponds: numeric value is # iterations)\n\n\t\t// iterate outward\n\t\tfor (let iter = 1; iter <= niter; iter++)\n\t\t{\n\t\t\tlet newident = Vec.numberArray(0, na);\n\t\t\tfor (let n = 0; n < na; n++) if (this.amask[n]) newident[n] = this.circularIterate(iter, n + 1);\n\t\t\tthis.identity = newident;\n\n\t\t\tfor (let n = 0; n < na; n++) if (this.amask[n])\n\t\t\t{\n\t\t\t\tthis.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n\t\t\t\tthis.considerNewFP({hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1});\n\t\t\t}\n\t\t}\n\t}\n\n\t// convenience constructors; note that molecules should have abbreviations expanded out beforehand\n\tpublic static create(meta:Molecule | MetaMolecule, kind:number):CircularFingerprints\n\t{\n\t\tif (meta instanceof Molecule) meta = MetaMolecule.createStrictRubric(meta);\n\t\tlet circ = new CircularFingerprints(meta, kind);\n\t\tcirc.calculate();\n\t\treturn circ;\n\t}\n\n\t// access to the results/input content\n\tpublic getMolecule():Molecule {return this.meta.mol;}\n\tpublic get numFP():number {return this.fplist.length;}\n\tpublic getFP(idx:number):CircularFP {return this.fplist[idx];}\n\tpublic getFingerprints():CircularFP[] {return this.fplist.slice(0);}\n\n\t// pulls out just the unique instances of each hash code, and returns the sorted list\n\tpublic getUniqueHashes():number[]\n\t{\n\t\tlet hashes = new Set<number>();\n\t\tfor (let fp of this.fplist) hashes.add(fp.hashCode);\n\t\treturn Vec.sorted(Array.from(hashes));\n\t}\n\n\t// as above, except cuts off the bits to a certain folding; note that the folding size must be an exponent of 2\n\tpublic getFoldedHashes(maxBits:number):number[]\n\t{\n\t\tlet andBits = maxBits - 1;\n\t\tlet hashes = new Set<number>();\n\t\tfor (let fp of this.fplist) hashes.add(fp.hashCode & andBits);\n\t\treturn Vec.sorted(Array.from(hashes));\n\t}\n\n\t// calculates the Tanimoto coefficient for two lists of hash codes: these are assumed to be sorted and unique, which\n\t// allows the calculation to be done in O(N) time\n\tpublic static tanimoto(hash1:number[], hash2:number[]):number\n\t{\n\t\tlet shared = 0, total = 0;\n\t\tlet sz1 = hash1.length, sz2 = hash2.length;\n\t\tif (sz1 == 0 && sz2 == 0) return 0;\n\t\tlet i1 = 0, i2 = 0;\n\t\twhile (i1 < sz1 || i2 < sz2)\n\t\t{\n\t\t\tif (i1 == sz1) {total += sz2 - i2; break;}\n\t\t\tif (i2 == sz2) {total += sz1 - i1; break;}\n\t\t\tlet v1 = hash1[i1], v2 = hash2[i2];\n\t\t\tif (v1 == v2) {shared += 1; i1 += 1; i2 += 1;}\n\t\t\telse if (v1 < v2) i1 += 1; else i2 += 1;\n\t\t\ttotal += 1;\n\t\t}\n\t\treturn shared / total;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// calculates an integer number that stores the bit-packed identity of the given atom\n\tprivate initialIdentityECFP(atom:number):number\n\t{\n\t\tconst mol = this.meta.mol;\n\t\tlet adj = mol.atomAdjList(atom); // (note: want them all)\n\n\t\t/*\n\t\t\tAtom properties from the source reference:\n\t\t\t\t(1) number of heavy atom neighbours\n\t\t\t\t(2) atom degree: valence minus # hydrogens\n\t\t\t\t(3) atomic number\n\t\t\t\t(4) atom charge\n\t\t\t\t(5) number of hydrogen neighbours\n\t\t\t\t(6) whether the atom is in a ring\n\t\t*/\n\n\t\tlet nheavy = 0, nhydr = mol.atomHydrogens(atom);\n\t\tfor (let a of adj) if (mol.atomElement(a) == 'H') nhydr++; else nheavy++;\n\n\t\tlet atno = mol.atomicNumber(atom);\n\t\tlet degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n\t\tlet chg = mol.atomCharge(atom);\n\t\tlet inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n\n\t\tlet crc = start_crc();\n\t\tcrc = feed_crc(crc, (nheavy << 4) | degree);\n\t\tcrc = feed_crc(crc, atno);\n\t\tcrc = feed_crc(crc, chg + 0x80);\n\t\tcrc = feed_crc(crc, (nhydr << 4) | inring);\n\t\treturn end_crc(crc);\n\t}\n\n\t// takes the current identity values\n\tprivate circularIterate(iter:number, atom:number):number\n\t{\n\t\tlet adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n\n\t\t// build out a sequence, formulated as\n\t\t//     {iteration,original#, adj0-bondorder,adj0-identity, ..., [chiral?]}\n\t\tlet seq = Vec.numberArray(0, 2 + 2 * adj.length);\n\t\tseq[0] = iter;\n\t\tseq[1] = this.identity[atom - 1];\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tseq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n\t\t\tseq[2 * n + 3] = this.identity[adj[n] - 1];\n\t\t}\n\n\t\t// now sort the adjacencies by bond order first, then identity second\n\t\tlet p = 0;\n\t\twhile (p < adj.length - 1)\n\t\t{\n\t\t\tlet i = 2 + 2 * p;\n\t\t\tif (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3]))\n\t\t\t{\n\t\t\t\tVec.swap(seq, i, i + 2);\n\t\t\t\tVec.swap(seq, i + 1, i + 3);\n\t\t\t\tif (p > 0) p--;\n\t\t\t}\n\t\t\telse p++;\n\t\t}\n\n\t\t// roll it up into a hash code\n\t\tlet crc = start_crc();\n\t\tfor (let n = 0; n < seq.length; n += 2)\n\t\t{\n\t\t\tcrc = feed_crc(crc, seq[n]);\n\t\t\tlet v = seq[n + 1];\n\t\t\tcrc = feed_crc(crc, v >> 24);\n\t\t\tcrc = feed_crc(crc, (v >> 16) & 0xFF);\n\t\t\tcrc = feed_crc(crc, (v >> 8) & 0xFF);\n\t\t\tcrc = feed_crc(crc, v & 0xFF);\n\t\t}\n\n\t\t// chirality flag: one chance to resolve it\n\t\tif (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null)\n\t\t{\n\t\t\tlet ru = this.meta.rubricTetra[atom - 1];\n\t\t\tlet par =\n\t\t\t[\n\t\t\t\tru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n\t\t\t\tru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n\t\t\t\tru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n\t\t\t\tru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n\t\t\t];\n\t\t\tif (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3])\n\t\t\t{\n\t\t\t\t// add 1 or 2 to the end of the list, depending on the parity\n\t\t\t\tcrc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n\t\t\t\tthis.resolvedChiral[atom - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn end_crc(crc);\n\t}\n\n\t// takes a set of atom indices and adds all atoms that are adjacent to at least one of them; the resulting list of\n\t// atom indices is sorted\n\tprivate growAtoms(atoms:number[]):number[]\n\t{\n\t\tlet mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t{\n\t\t\tmask[atoms[n] - 1] = true;\n\t\t\tfor (let a of this.atomAdj[atoms[n] - 1]) mask[a - 1] = true;\n\t\t}\n\t\treturn Vec.add(Vec.maskIdx(mask), 1);\n\t}\n\n\t// add a new fingerprint, with no duplicate check (initial seed round); is only a separate function so it can be trapped\n\tprivate applyNewFP(newFP:CircularFP):void\n\t{\n\t\tif (this.hookConsiderNewFP) this.hookConsiderNewFP(newFP);\n\t\tif (this.hookApplyNewFP) this.hookApplyNewFP(newFP);\n\t\tthis.fplist.push(newFP);\n\t}\n\n\t// consider adding a new fingerprint: if it's a duplicate with regard to the atom list, either replace the match or\n\t// discard it\n\tprivate considerNewFP(newFP:CircularFP):void\n\t{\n\t\tif (this.hookConsiderNewFP) this.hookConsiderNewFP(newFP);\n\n\t\tlet hit = -1;\n\t\tlet fp:CircularFP = null;\n\t\tfor (let n = 0; n < this.fplist.length; n++)\n\t\t{\n\t\t\tlet lookFP = this.fplist[n];\n\t\t\tif (Vec.equals(lookFP.atoms, newFP.atoms)) {fp = lookFP; hit = n; break;}\n\t\t}\n\t\tif (hit < 0)\n\t\t{\n\t\t\tthis.fplist.push(newFP);\n\t\t\treturn;\n\t\t}\n\n\t\t// if the preexisting fingerprint is from an earlier iteration, or has a lower hashcode, discard\n\t\tif (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode) return;\n\n\t\tthis.fplist[hit] = newFP;\n\t\tif (this.hookApplyNewFP) this.hookApplyNewFP(newFP);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {Vec} from '../util/Vec';\n\n/*\n\tResonance bond removal: certain algorithms/file formats store alternating single/double bonds in resonance\n\tform, most commonly the bonds of aromatic rings. The native molecule format does not support resonance style\n\tbonds, so these must be localised (\"Kekule form\"). This algorithm can be used to post-process a molecule,\n\twith the help of a support array that indicates the bonds which were described as resonance (order=1.5).\n\n\tThe algorithm corrects for some SMILES-esque weirdness, e.g. \"aromatic\" rings with outgoing carbonyls, and\n\talso artifacts like hydrogen-specification used explicitly to correct for heteroatoms in not-really-aromatics.\n\n\tNOTE: the algorithm will probably barf on some boundary cases, e.g. fullerenes; the max iteration limit is\n\tthe primary method of protection against this.\n*/\n\nexport class ResonanceRemover\n{\n\tpublic maxIter = 1000;\n\tpublic bondOrders:number[] = []; // this is the deliverable output\n\tpublic tolerant = false; // if set to true, will fail silently\n\n\t// ------------------ public methods --------------------\n\n\t// setup: mol & resBonds have to be defined, but atomHyd can be null\n\tconstructor(private mol:Molecule, private resBonds:boolean[], private atomHyd:number[] = [])\n\t{\n\t\tthis.mol = mol;\n\t\tthis.resBonds = resBonds;\n\t\tthis.atomHyd = atomHyd;\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++) this.bondOrders.push(mol.bondOrder(n));\n\t}\n\n\t// runs the algorithm, and updates the replacement bond orders; critical failures throws a GraphFaultException, and\n\t// this includes running over max # of iterations as well as invalid/unsolvable resonance regions, so it should always\n\t// be explicitly checked by the caller\n\tpublic perform():void\n\t{\n\t\tconst {mol} = this;\n\n\t\tif (this.atomHyd == null)\n\t\t{\n\t\t\tthis.atomHyd = [];\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) this.atomHyd.push(mol.atomHExplicit(n));\n\t\t}\n\n\t\tthis.correctInputMask();\n\n\t\tlet g = new Graph(mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.resBonds[n - 1]) g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n\t\tlet cc = g.calculateComponentGroups();\n\n\t\tfor (let n = 0; n < cc.length; n++) if (cc[n].length >= 2) this.processComponent(cc[n]);\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// sometimes the incoming mask can include things like aromatic rings with emerging =O and valence-saturated heteroatoms\n\t// (you know who you are, SMILES): remove these from consideration\n\tprivate correctInputMask():void\n\t{\n\t\tconst {mol, atomHyd} = this;\n\t\tconst na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet exclude = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(n);\n\t\t\tlet val = atno == Chemistry.ELEMENT_C ? 4 :\n\t\t\t\tatno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n\t\t\t\tatno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n\t\t\tif (val < 0) {exclude[n - 1] = true; continue;}\n\n\t\t\tval += mol.atomCharge(n);\n\t\t\tif (atomHyd[n - 1] > 0) val -= atomHyd[n - 1];\n\t\t\tif (mol.atomAdjCount(n) >= val) exclude[n - 1] = true;\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++) if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1)\n\t\t{\n\t\t\texclude[mol.bondFrom(n) - 1] = true;\n\t\t\texclude[mol.bondTo(n) - 1] = true;\n\t\t}\n\n\t\tthis.resBonds = this.resBonds.slice(0);\n\t\tfor (let n = 0; n < nb; n++) if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1]))\n\t\t{\n\t\t\tthis.bondOrders[n] = 1;\n\t\t\tthis.resBonds[n] = false;\n\t\t}\n\t}\n\n\t// handle a subset; nodes are 0-based; returns true if any bonds were assigned\n\tprivate processComponent(nodes:number[]):void\n\t{\n\t\tconst {mol, resBonds, bondOrders, atomHyd} = this;\n\n\t\tlet sz = nodes.length;\n\t\tif (sz == 2)\n\t\t{\n\t\t\tlet b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n\t\t\tbondOrders[b - 1] = 2;\n\t\t\treturn;\n\t\t}\n\n\t\t// optional hydrogens: in cases where H-counts were not provided, need to consider divalent nitrogens as valid for either X2NH of X=N-X\n\t\tlet optionalH = Vec.booleanArray(false, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet i = nodes[n], a = i + 1;\n\t\t\toptionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n\t\t}\n\n\t\t// prepare graph metrics to assist the search\n\t\tlet g = new Graph(sz);\n\t\tlet gravity = g.calculateGravity();\n\t\tlet mask = Vec.idxMask(nodes, mol.numAtoms);\n\t\tlet bsz = 0;\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) bsz++;\n\t\tlet bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n\t\tbsz = 0;\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n\t\t{\n\t\t\tlet f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n\t\t\tbfr[bsz] = f;\n\t\t\tbto[bsz] = t;\n\t\t\tbgrav[bsz] = gravity[f] + gravity[t];\n\t\t\tbidx[bsz] = n;\n\t\t\tg.addEdge(f, t);\n\t\t\tbsz++;\n\t\t}\n\n\t\t// select the first bond\n\t\tlet seq = Vec.numberArray(0, bsz);\n\t\tseq[0] = Vec.idxMax(bgrav);\n\t\tlet visited = Vec.booleanArray(false, bsz);\n\t\tvisited[seq[0]] = true;\n\t\tfor (let i = 1; i < bsz; i++)\n\t\t{\n\t\t\tlet b = -1;\n\t\t\tfor (let j = i - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < bsz; n++)\n\t\t\t\t{\n\t\t\t\t\tif (!visited[n]) if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (b < 0 || bgrav[n] > bgrav[b]) b = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (b >= 0) break;\n\t\t\t}\n\t\t\tif (b < 0) throw 'Graph walk failed';\n\n\t\t\tseq[i] = b;\n\t\t\tvisited[b] = true;\n\t\t}\n\n\t\t// grow path candidates until something works\n\t\tlet paths:boolean[][] = [];\n\t\tpaths.push([true]);\n\t\tpaths.push([false]);\n\t\tlet result:boolean[] = null;\n\t\tlet resultCount = 0;\n\t\tlet definiteMatch = Math.ceil(0.5 * bsz); // once # double bonds >= ceil(#bonds/2), definitely locked on\n\n\t\tlet iter = 0;\n\t\twhile (paths.length > 0)\n\t\t{\n\t\t\tlet p = paths[0];\n\t\t\tlet p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n\t\t\tif (!this.validPath(p1, seq, bfr, bto, g, optionalH)) p1 = null;\n\t\t\tif (!this.validPath(p2, seq, bfr, bto, g, optionalH)) p2 = null;\n\n\t\t\tif (Vec.len(p1) == bsz)\n\t\t\t{\n\t\t\t\tlet c = Vec.maskCount(p1);\n\t\t\t\tif (c > resultCount)\n\t\t\t\t{\n\t\t\t\t\tresult = p1;\n\t\t\t\t\tresultCount = c;\n\t\t\t\t}\n\t\t\t\tp1 = null;\n\t\t\t}\n\t\t\tif (Vec.len(p2) == bsz)\n\t\t\t{\n\t\t\t\tlet c = Vec.maskCount(p2);\n\t\t\t\tif (c > resultCount)\n\t\t\t\t{\n\t\t\t\t\tresult = p2;\n\t\t\t\t\tresultCount = c;\n\t\t\t\t}\n\t\t\t\tp2 = null;\n\t\t\t}\n\t\t\tif (resultCount >= definiteMatch) break;\n\n\t\t\tif (p1 == null && p2 == null) paths.shift();\n\t\t\telse if (p1 != null && p2 != null)\n\t\t\t{\n\t\t\t\t// the {..,true} one goes in first\n\t\t\t\tpaths[0] = p1;\n\t\t\t\tpaths.splice(1, 0, p2);\n\t\t\t}\n\t\t\telse if (p1 != null) paths[0] = p1;\n\t\t\telse /* p2!=null */paths[0] = p2;\n\n\t\t\titer++;\n\t\t\tif (iter > this.maxIter)\n\t\t\t{\n\t\t\t\tif (result != null) break; // run with it\n\t\t\t\tif (this.tolerant) return;\n\t\t\t\tthrow 'Resonance localisation exceeded maximum iteration count';\n\t\t\t}\n\t\t}\n\n\t\tif (result == null)\n\t\t{\n\t\t\tif (this.tolerant) return;\n\t\t\tthrow 'Unable to find a solution to the resonance block.';\n\t\t}\n\t\tfor (let n = 0; n < bsz; n++) bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n\t}\n\n\t// for a path sequence (usually incomplete), determine whether it has any chance of success\n\tprivate validPath(path:boolean[], seq:number[], bfr:number[], bto:number[], g:Graph, optionalH:boolean[]):boolean\n\t{\n\t\tlet sz = g.numNodes;\n\t\tlet count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet a1 = bfr[seq[n]], a2 = bto[seq[n]];\n\t\t\tif (path[n])\n\t\t\t{\n\t\t\t\tcount2[a1]++;\n\t\t\t\tcount2[a2]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount1[a1]++;\n\t\t\t\tcount1[a2]++;\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (count2[n] > 1) return false; // can't have 2 double bonds on the same atom: fail\n\t\t\tif (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n)) return false; // no double bonds & no room for one: fail\n\t\t}\n\t\treturn true;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CircularFingerprints} from '../calc/CircularFingerprints';\nimport {Theme} from '../util/Theme';\nimport {DEGRAD, escapeHTML, norm_xy, readTextURL} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\nimport dsRings from '@reswmk/data/templates/rings.ds';\nimport dsTermGrp from '@reswmk/data/templates/termgrp.ds';\nimport dsFuncGrp from '@reswmk/data/templates/funcgrp.ds';\nimport dsProtGrp from '@reswmk/data/templates/protgrp.ds';\nimport dsNonPlRings from '@reswmk/data/templates/nonplrings.ds';\nimport dsLargeRings from '@reswmk/data/templates/largerings.ds';\nimport dsCrownEthers from '@reswmk/data/templates/crownethers.ds';\nimport dsLigMonodent from '@reswmk/data/templates/ligmonodent.ds';\nimport dsLigBident from '@reswmk/data/templates/ligbident.ds';\nimport dsLigTrident from '@reswmk/data/templates/ligtrident.ds';\nimport dsLigMultident from '@reswmk/data/templates/ligmultident.ds';\nimport dsCageCmplx from '@reswmk/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '@reswmk/data/templates/aminoacids.ds';\nimport dsBiomolecules from '@reswmk/data/templates/biomolecules.ds';\nimport dsSaccharides from '@reswmk/data/templates/saccharides.ds';\n\n/*export const TEMPLATE_FILES =\n[\n\t'rings',\n\t'termgrp',\n\t'funcgrp',\n\t'protgrp',\n\t'nonplrings',\n\t'largerings',\n\t'crownethers',\n\t'ligmonodent',\n\t'ligbident',\n\t'ligtrident',\n\t'ligmultident',\n\t'cagecmplx',\n\t'aminoacids',\n\t'biomolecules',\n\t'saccharides'\n];*/\nconst TEMPLATE_SOURCE:Record<string, string> =\n{\n\t'rings': dsRings,\n\t'termgrp': dsTermGrp,\n\t'funcgrp': dsFuncGrp,\n\t'protgrp': dsProtGrp,\n\t'nonplrings': dsNonPlRings,\n\t'largerings': dsLargeRings,\n\t'crownethers': dsCrownEthers,\n\t'ligmonodent': dsLigMonodent,\n\t'ligbident': dsLigBident,\n\t'ligtrident': dsLigTrident,\n\t'ligmultident': dsLigMultident,\n\t'cagecmplx': dsCageCmplx,\n\t'aminoacids': dsAminoAcids,\n\t'biomolecules': dsBiomolecules,\n\t'saccharides': dsSaccharides,\n};\n\n/*\n\tAbbreviation container: a singleton list of inline abbreviations which are initially bootstrapped from the available templates.\n*/\n\nexport interface AbbrevContainerFrag\n{\n\tname:string;\n\tfrag:Molecule;\n\tnameHTML:string; // label in HTML format, with sub & superscripts\n\tnameSearch:string; // label in lower case with formatting characters stripped\n}\n\nexport class AbbrevContainer\n{\n\tpublic static main:AbbrevContainer = null;\n\n\tprivate abbrevs:AbbrevContainerFrag[] = [];\n\n\t// ----------------- static methods -----------------\n\n\tpublic static getTemplateKeys():string[] {return Object.keys(TEMPLATE_SOURCE);}\n\tpublic static getTemplateData(key:string):string {return TEMPLATE_SOURCE[key];}\n\n\t// needs to be called once per lifecycle, in order to ensure that the necessary resources are loaded\n\tpublic static needsSetup() {return !this.main;}\n\tpublic static async setupData()\n\t{\n\t\tif (this.main) return;\n\n\t\t// if (!Theme.RESOURCE_URL) throw ('RPC resource URL not defined.');\n\n\t\tthis.main = new AbbrevContainer();\n\n\t\tfor (let key of this.getTemplateKeys())\n\t\t{\n\t\t\tlet dsstr =  this.getTemplateData(key);\n\t\t\tlet ds = DataSheetStream.readXML(dsstr);\n\n\t\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule), colAbbrev = ds.findColByName('Abbrev', DataSheetColumn.String);\n\t\t\tif (colMol < 0 || colAbbrev < 0) continue;\n\t\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t\t{\n\t\t\t\tlet frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n\t\t\t\tif (!frag || !name) continue;\n\n\t\t\t\tlet attcount = 0, firstConn = 0;\n\t\t\t\tfor (let i = 1; i <= frag.numAtoms; i++) if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT)\n\t\t\t\t{\n\t\t\t\t\tif (firstConn == 0) firstConn = i;\n\t\t\t\t\tfrag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n\t\t\t\t\tattcount++;\n\t\t\t\t}\n\t\t\t\tif (attcount != 1) continue; // (don't want abbreviations with two attachment points; they are sort of valid, but not appropriate for here)\n\t\t\t\tif (firstConn > 1) frag.swapAtoms(1, firstConn);\n\t\t\t\tthis.main.submitAbbreviation(name, frag);\n\t\t\t}\n\t\t}\n\t}\n\n\t// returns a shallow copy of the abbreviations (because the original list can grow in the meanwhile)\n\tpublic getAbbrevs():AbbrevContainerFrag[]\n\t{\n\t\treturn this.abbrevs.slice(0);\n\t}\n\n\t// adds an abbreviation explicitly to the collection, if not there already; returns control immediately (background thread)\n\tpublic submitAbbreviation(name:string, infrag:Molecule, promote:boolean = false):void\n\t{\n\t\tlet frag = infrag.clone();\n\t\tthis.submitFragment(name, frag, promote);\n\t}\n\n\t// pulls apart the contents of a molecule, looking for abbreviations; anything that is new gets added to the background; this function returns control immediately\n\tpublic submitMolecule(inmol:Molecule, promote:boolean = false):void\n\t{\n\t\tlet mol = inmol.clone();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet frag = MolUtil.getAbbrev(mol, n);\n\t\t\tif (!frag) continue;\n\t\t\tthis.submitFragment(mol.atomElement(n), frag, promote);\n\t\t}\n\t}\n\n\t// given that an atom has been turned into an abbreviation, searches through the list to see if the fragment structure matches anything; if so, borrows the name\n\t// and modifies the molecule accordingly\n\tpublic substituteAbbrevName(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet frag = MolUtil.getAbbrev(mol, atom);\n\t\tif (!frag) return false;\n\n\t\tlet fragExp = MolUtil.expandedAbbrevs(frag);\n\t\tlet fragMF = MolUtil.molecularFormula(fragExp);\n\t\tlet fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n\n\t\tfor (let abbrev of this.abbrevs) if (abbrev.frag.numAtoms == frag.numAtoms)\n\t\t{\n\t\t\tlet match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n\t\t\tif (!match)\n\t\t\t{\n\t\t\t\tlet afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n\t\t\t\tif (fragMF == MolUtil.molecularFormula(afragExp))\n\t\t\t\t{\n\t\t\t\t\tlet afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n\t\t\t\t\tif (Vec.equals(fragFP, afragFP)) match = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match)\n\t\t\t{\n\t\t\t\tmol.setAtomElement(atom, abbrev.name);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// considers the abbrevation for inclusion in the list; it is assumed that this is being called in a background thread, and also that 'frag' has already been\n\t// copied and is safely owned by this instance\n\tprivate submitFragment(name:string, frag:Molecule, promote:boolean):void\n\t{\n\t\tif (name == '?') return; // no thanks!\n\n\t\t// rotate the fragment so that the attachment (atom 1) is oriented \"west\"\n\t\tlet vx = 0, vy = 0;\n\t\tlet adj = frag.atomAdjList(1);\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tvx += frag.atomX(a) - frag.atomX(1);\n\t\t\tvy += frag.atomY(a) - frag.atomY(1);\n\t\t}\n\t\tif (adj.length > 1) {let inv = 1.0 / adj.length; vx *= inv; vy *= inv;}\n\t\tif (norm_xy(vx, vy) > 0.1 * 0.1)\n\t\t{\n\t\t\tlet theta = Math.atan2(vy, vx);\n\t\t\tif (Math.abs(theta) > 2 * DEGRAD) CoordUtil.rotateMolecule(frag, -theta);\n\t\t}\n\n\t\tlet hit = -1;\n\t\tfor (let n = 0; n < this.abbrevs.length; n++)\n\t\t{\n\t\t\tlet a = this.abbrevs[n];\n\t\t\tif (a.name != name) continue;\n\t\t\t// Q: what to do if same name but different thing? esp. if just a different orientation...\n\t\t\t//if a.frag.compareTo(frag) == 0 || CoordUtil.sketchMappable(mol1:frag, mol2:a.frag) {hit = n; break}\n\t\t\thit = n;\n\t\t\tbreak;\n\t\t}\n\n\t\tlet [html, search] = this.formatAbbrevLabel(name);\n\t\tlet abv:AbbrevContainerFrag = {name, frag, nameHTML: html, nameSearch: search};\n\t\tif (hit < 0)\n\t\t{\n\t\t\tif (promote) this.abbrevs.unshift(abv); else this.abbrevs.push(abv);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (promote && hit > 0)\n\t\t\t{\n\t\t\t\tthis.abbrevs.splice(hit, 1);\n\t\t\t\tthis.abbrevs.unshift(abv);\n\t\t\t}\n\t\t\telse this.abbrevs[hit] = abv;\n\t\t}\n\t}\n\n\t// prepare the HTML & searchable forms of an abbreviation label\n\tprivate formatAbbrevLabel(name:string):[string, string]\n\t{\n\t\tlet html = '', search = '';\n\n\t\tlet append = (bit:string, tag:string):void =>\n\t\t{\n\t\t\tif (tag) html += '<' + tag + '>';\n\t\t\thtml += escapeHTML(bit);\n\t\t\tsearch += bit;\n\t\t\tif (tag) html += '</' + tag + '>';\n\t\t};\n\n\t\tfor (let bit of name.split('|'))\n\t\t{\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tlet match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n\t\t\t\tif (!match) break;\n\t\t\t\tlet pre = match[1], mid = match[2], post = match[3];\n\t\t\t\tappend(pre, null);\n\t\t\t\tif (mid.startsWith('^')) append(mid.substring(1), 'sup'); else append(mid, 'sub');\n\t\t\t\tbit = post;\n\t\t\t}\n\t\t\tappend(bit, null);\n\t\t}\n\n\t\treturn [html, search.toLowerCase()];\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable key-spacing */\n\n/*\n\tProvides fixed constants for dataformats.\n\n\t(Note: presence in this file does not imply that they are all implemented yet)\n*/\n\nexport class FormatList\n{\n\tpublic static FMT_NATIVE = 'native'; // SketchEl molecule format\n\tpublic static FMT_XMLDS = 'xmlds'; // XML datasheet format\n\tpublic static FMT_MDLMOL = 'mdlmol'; // MDL MOLfile (slightly lossy)\n\tpublic static FMT_MDLSDF = 'mdlsdf'; // MDL SDfile (very lossy)\n\tpublic static FMT_MDLRDF = 'mdlrdf'; // MDL RDfile (very lossy)\n\tpublic static FMT_MDLRXN = 'mdlrxn'; // MDL RXNfile (extremely lossy)\n\n\tpublic static GFX_PNG = 'png'; // raster graphics (single image)\n\tpublic static GFX_PNGZIP = 'pngzip'; // zip file containing multiple PNG images\n\tpublic static GFX_SVG = 'svg'; // scalable vector graphics (single diagram)\n\tpublic static GFX_SVGZIP = 'svgzip'; // zip file containing multiple SVG diagrams\n\tpublic static GFX_PDF = 'pdf'; // portable document format (single diagram)\n\tpublic static GFX_PDFZIP = 'pdfzip'; // zip file containing multiple PDF diagrams\n\tpublic static GFX_EPS = 'eps'; // encapsulated postscript (single diagram)\n\tpublic static GFX_HTML = 'html'; // HTML file with embedded SVG diagrams\n\tpublic static GFX_OPENDOC_ODG = 'odg'; // OpenDocument: graphic (single)\n\tpublic static GFX_OPENDOC_ODT = 'odt'; // OpenDocument: text\n\tpublic static GFX_OPENDOC_ODS = 'ods'; // OpenDocument: spreadsheet\n\tpublic static GFX_OOXML_DOCX = 'docx'; // Microsoft Word XML\n\tpublic static GFX_OOXML_XLSX = 'xlsx'; // Microsoft Excel XML\n\n\tpublic static FORMAT_DESCR:Record<string, string> =\n\t{\n\t\t'native':\t'SketchEl Molecule',\n\t\t'xmlds':\t'DataSheet XML',\n\t\t'mdlmol':\t'MDL MOL (single molecule)',\n\t\t'mdlsdf':\t'MDL SDF (molecules + data)',\n\t\t'mdlrdf':\t'MDL RDF (reactions + data)',\n\t\t'mdlrxn':\t'MDL RXN (single reaction)',\n\n\t\t'png':\t\t'PNG image (raster)',\n\t\t'pngzip':\t'ZIP (multiple PNG files)',\n\t\t'svg':\t\t'SVG picture (vector)',\n\t\t'svgzip':\t'ZIP (multiple SVG files)',\n\t\t'pdf':\t\t'PDF diagram (vector)',\n\t\t'pdfzip':\t'ZIP (multiple PDF files)',\n\t\t'eps':\t\t'Encapsulated PostScript (vector)',\n\t\t'html':\t\t'HTML with embedded SVG',\n\t\t'odg':\t\t'OpenDocument Graphic',\n\t\t'odt':\t\t'OpenDocument Text',\n\t\t'ods':\t\t'OpenDocument SpreadSheet',\n\t\t'docx':\t\t'Microsoft Word',\n\t\t'xlsx':\t\t'Microsoft Excel'\n\t};\n\tpublic static FORMAT_EXTN:Record<string, string> =\n\t{\n\t\t'native':\t'.el',\n\t\t'xmlds':\t'.ds',\n\t\t'mdlmol':\t'.mol',\n\t\t'mdlsdf':\t'.sdf',\n\t\t'mdlrdf':\t'.rdf',\n\t\t'mdlrxn':\t'.rxn',\n\t\t'png':\t\t'.png',\n\t\t'pngzip':\t'_png.zip',\n\t\t'svg':\t\t'.svg',\n\t\t'svgzip':\t'_svg.zip',\n\t\t'pdf':\t\t'.pdf',\n\t\t'pdfzip':\t'_pdf.zip',\n\t\t'eps':\t\t'.eps',\n\t\t'html':\t\t'.html',\n\t\t'odg':\t\t'.odg',\n\t\t'odt':\t\t'.odt',\n\t\t'ods':\t\t'.ods',\n\t\t'docx':\t\t'.docx',\n\t\t'xlsx':\t\t'.xlsx'\n\t};\n\tpublic static FORMAT_MIMETYPE:Record<string, string> =\n\t{\n\t\t'native':\t'chemical/x-sketchel',\n\t\t'xmlds':\t'chemical/x-datasheet',\n\t\t'mdlmol':\t'chemical/x-mdl-molfile',\n\t\t'mdlsdf':\t'chemical/x-mdl-sdfile',\n\t\t'mdlrdf':\t'chemical/x-mdl-rdfile',\n\t\t'mdlrxn':\t'chemical/x-mdl-rxnfile',\n\t\t'png':\t\t'image/png',\n\t\t'pngzip':\t'application/zip',\n\t\t'svg':\t\t'image/png',\n\t\t'svgzip':\t'application/zip',\n\t\t'pdf':\t\t'application/pdf',\n\t\t'pdfzip':\t'application/zip',\n\t\t'eps':\t\t'image/eps',\n\t\t'html':\t\t'text/html',\n\t\t'odg':\t\t'application/vnd.oasis.opendocument.graphics',\n\t\t'odt':\t\t'application/vnd.oasis.opendocument.text',\n\t\t'ods':\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t'docx':\t\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t'xlsx':\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t};\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Theme} from '../util/Theme';\nimport {readTextURL} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tManages a tree of ontology (URI) terms, which is an extremely minimalist subset of the functionality of formats\n\tlike OWL. Each term belongs to a single hierarchy and its only property is a label. Content is loaded out of concise\n\ttext files (.onto) that are easy to curate manually.\n\n\tThe class should generally be used as a singleton, with individual items of content loaded into it permanently.\n\n\tThe source content consists of lines of the following form:\n\n\t\t{indentation} {uri} {label}\n\n\twhere {indentation} consists of zero-or-more dashes; the order and indentation level implies the tree structure. The {uri}\n\tis fully expanded, and by definition contains no whitespace. The {label} consumes the remainder of the line, and may contain\n\tany amount of spaces. Blank lines are ignored and comments start with #.\n\n\te.g.\n\t\t# arbitrary ontology\n\t\thttp://thing.com/something#THI_001 thing\n\t\t- http://thing.com/something#THI_002 subset of thing\n\t\t- - http://thing.com/something#THI_003 different kind of thing\n\n\tDuplicate terms are allowed, except for the root branches, which are collapsed into one. Loading an ontology source file\n\tmore than once is not recommended.\n*/\n\nlet globalInstance:OntologyTree = null;\n\n/*const ONTOLOGY_FILES =\n[\n\t'units'\n];*/\n\nimport ontoUnits from '@reswmk/data/ontology/units.onto';\n\nconst ONTOLOGY_SOURCE:Record<string, string> =\n{\n\t'units': ontoUnits,\n};\n\n\nexport interface OntologyTreeTerm\n{\n\turi:string;\n\tlabel:string;\n\tparent:OntologyTreeTerm;\n\tchildren:OntologyTreeTerm[];\n\tdepth:number;\n}\n\nexport class OntologyTree\n{\n\tpublic static get main():OntologyTree {return globalInstance;}\n\n\tprivate roots:OntologyTreeTerm[] = [];\n\tprivate mapTerms = new Map<string, OntologyTreeTerm[]>(); // uri-to-term(s)\n\n\tprivate alreadyLoaded = new Set<string>(); // prevent double-loading files\n\n\t// ----------------- static methods -----------------\n\n\tpublic static getOntologyKeys():string[] {return Object.keys(ONTOLOGY_SOURCE);}\n\tpublic static getOntologyData(key:string):string {return ONTOLOGY_SOURCE[key];}\n\n\t// ------------------ public methods --------------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// call this at least once during the early lifecycle: makes sure the default ontology files are loaded\n\tpublic static init():void\n\t{\n\t\tif (globalInstance) return;\n\t\tglobalInstance = new OntologyTree();\n\n\t\tfor (let key of this.getOntologyKeys())\n\t\t{\n\t\t\tglobalInstance.loadFromString(key, this.getOntologyData(key));\n\t\t}\n\t}\n\n\t// return a list of root branches; note that the list is not cloned at all\n\tpublic getRoots():OntologyTreeTerm[]\n\t{\n\t\treturn this.roots;\n\t}\n\n\t// queries the existence of a term: when returning a branch, not that it is not cloned\n\tpublic hasTerm(uri:string):boolean {return this.mapTerms.has(uri);}\n\tpublic getBranch(uri:string):OntologyTreeTerm[]\n\t{\n\t\treturn this.mapTerms.get(uri);\n\t}\n\n\t// fetches a branch, populating it into a flattened list that is ordered according to the tree hierarchy; this is a convenient\n\t// form for certain use cases, especially interactivity; the container array can be treated as a shallow copy\n\tpublic getBranchList(root:string | OntologyTreeTerm):OntologyTreeTerm[]\n\t{\n\t\tif (typeof root == 'string')\n\t\t{\n\t\t\tlet look = this.mapTerms.get(root);\n\t\t\tif (!look) throw `Unknown branch URI: ${root}`;\n\t\t\tif (look.length > 1) throw `Ambiguous branch URI occurs more than once: ${root}`;\n\t\t\troot = look[0];\n\t\t}\n\n\t\tlet list:OntologyTreeTerm[] = [];\n\t\tlet accumulate = (branch:OntologyTreeTerm):void =>\n\t\t{\n\t\t\tlist.push(branch);\n\t\t\tfor (let child of Vec.safeArray(branch.children)) accumulate(child);\n\t\t};\n\t\taccumulate(root as OntologyTreeTerm);\n\t\treturn list;\n\t}\n\n\t// fetches a file and loads it up; throws an exception if it didn't work\n\t/*public async loadFromURL(url:string):Promise<void>\n\t{\n\t\tif (this.alreadyLoaded.has(url)) return;\n\t\tthis.alreadyLoaded.add(url);\n\n\t\tlet text = await readTextURL(url);\n\t\tif (!text) throw `Resource not found: ${url}`;\n\t\tthis.loadContent(text);\n\t}*/\n\tpublic loadFromString(key:string, text:string):void\n\t{\n\t\tif (this.alreadyLoaded.has(key)) return;\n\t\tthis.alreadyLoaded.add(key);\n\t\tthis.loadContent(text);\n\t}\n\n\t// loads up a file containing ontology content (see comment at top); throws an exception if anything is invalid\n\tpublic loadContent(text:string):void\n\t{\n\t\tlet termList:OntologyTreeTerm[] = [];\n\t\tlet pos = 0;\n\t\tfor (let line of text.split(/\\n/))\n\t\t{\n\t\t\tpos++;\n\t\t\tline = line.trim();\n\t\t\tif (!line || line.startsWith('#')) continue;\n\n\t\t\tlet idx = line.indexOf('http');\n\t\t\tif (idx < 0) throw `Line ${pos} invalid, no URI term: ${line}`;\n\t\t\tlet depth = 0;\n\t\t\tfor (let n = 0; n < idx; n++) if (line.charAt(n) == '-') depth++;\n\n\t\t\tlet uri = line.substring(idx);\n\t\t\tidx = uri.indexOf(' ');\n\t\t\tif (idx < 0) throw `Line ${pos} invalid, no label: ${line}`;\n\t\t\tlet label = uri.substring(idx + 1);\n\t\t\turi = uri.substring(0, idx);\n\n\t\t\t// if this is a root term, and it already exists, borrow it\n\t\t\tlet term:OntologyTreeTerm = null;\n\t\t\tif (depth == 0) term = this.roots.find((look) => look.uri == uri);\n\n\t\t\tif (!term)\n\t\t\t{\n\t\t\t\tterm = {uri, label, 'parent': null, 'children': [], depth};\n\n\t\t\t\tif (depth == 0) this.roots.push(term);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (let n = termList.length - 1; n >= 0; n--) if (termList[n].depth == depth - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tterm.parent = termList[n];\n\t\t\t\t\t\ttermList[n].children.push(term);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!term.parent) throw `Line ${pos} invalid hierarchy, no parent found`;\n\t\t\t\t}\n\n\t\t\t\tlet list = this.mapTerms.get(uri);\n\t\t\t\tif (list) list.push(term); else this.mapTerms.set(uri, [term]);\n\t\t\t}\n\n\t\t\ttermList.push(term);\n\t\t}\n\t}\n\n\tpublic debugString(term:OntologyTreeTerm):string\n\t{\n\t\tlet lines:string[] = [];\n\t\tlet emit = (term:OntologyTreeTerm):void =>\n\t\t{\n\t\t\tlines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n\t\t\tfor (let child of term.children) emit(child);\n\t\t};\n\t\temit(term);\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------------ public methods --------------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {clearTooltip} from '../ui/Tooltip';\nimport {dom, DOM, domLegacy} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tDialog: base class for popup dialogs.\n*/\n\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\n\nexport class Dialog\n{\n\tprivate parent:DOM;\n\n\t// configuration parameters to modify before opening\n\tpublic minPortionWidth = 80; // percentage width of page to occupy\n\tpublic maxPortionWidth = 80; //  ...\n\tpublic maximumWidth = 0; // optional pixel-specific maximum\n\tpublic maximumHeight = 0;\n\tpublic minPortionHeight = 20; // minimum % vertical height, if too small\n\tpublic maxPortionHeight = 0; // optional % of vertical height allowed\n\tpublic topMargin = 50; // pixels to reserve along the top\n\tpublic title = 'Dialog';\n\tpublic allowScroller = true; // if true, vertical scrolling is enabled\n\tpublic zindex:number = null; // optionally the use of zindex, to ensure it goes on top (usually not necessary)\n\n\t// content information that can be accessed after opening\n\tprotected domObscureBackground:DOM; // grey covering banner\n\tprotected domObscureForeground:DOM; // transparent second cover\n\tprotected domPanelBoundary:DOM; // the dialog outline itself\n\tprotected domTitle:DOM; // section that contains the title and mini-buttons\n\tprotected domTitleButtons:DOM; // table cell where the top-right buttons go\n\tprotected domBody:DOM; // the main area, for content\n\tprotected domClose:DOM; // the close button, in case anyone wants to know\n\n\tpublic callbackClose:(source?:Dialog) => void = null;\n\tpublic callbackShown:(source?:Dialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(parent:any = null)\n\t{\n\t\tthis.parent = domLegacy(parent);\n\n\t\tinstallInlineCSS('dialog', CSS_DIALOG);\n\t}\n\n\tpublic onClose(callback:(source?:Dialog) => void)\n\t{\n\t\tthis.callbackClose = callback;\n\t}\n\n\tpublic onShown(callback:(source?:Dialog) => void)\n\t{\n\t\tthis.callbackShown = callback;\n\t}\n\n\t// creates all the DOM objects and shows the dialog; details such as title should be setup before calling this\n\tpublic open():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet body = this.parent || dom(document.body);\n\t\tbody.addClass('wmk-noscroll');\n\n\t\tlet bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n\t\tbg.css({'position': 'fixed'/*, 'z-index': zindex*/});\n\t\tbg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tbg.css({'background-color': 'black', 'opacity': 0.8});\n\t\tbg.onClick(() => this.close());\n\n\t\tlet fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n\t\tfg.css({'position': 'fixed'/*, 'z-index': zindex + 1*/});\n\t\tfg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\n\t\tif (this.zindex > 0)\n\t\t{\n\t\t\tbg.setCSS('z-index', this.zindex);\n\t\t\tfg.setCSS('z-index', this.zindex + 1);\n\t\t}\n\n\t\tlet pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n\t\tpb.css({'min-width': this.minPortionWidth + '%'});\n\t\tif (this.maximumWidth > 0) pb.css({'max-width': this.maximumWidth + 'px'});\n\t\telse if (this.maxPortionWidth != null) pb.css({'max-width': this.maxPortionWidth + '%'});\n\t\tif (this.maximumHeight > 0) pb.css({'max-height': this.maximumHeight + 'px'});\n\t\telse if (this.maxPortionHeight > 0) pb.css({'max-height': this.maxPortionHeight + 'vh'});\n\n\t\tpb.css({'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black'});\n\t\tpb.css({'position': 'absolute'});\n\t\tpb.css({'left': (50 - 0.5 * this.minPortionWidth) + '%'});\n\t\tpb.css({'top': this.topMargin + 'px'});\n\t\tpb.css({'min-height': this.minPortionHeight + '%'});\n\n\t\tlet divOuter = dom('<div/>').appendTo(pb).css({'display': 'flex'});\n\t\tdivOuter.css({'flex-direction': 'column', 'align-items': 'stretch'});\n\t\tif (this.maximumHeight > 0) divOuter.css({'max-height': this.maximumHeight + 'px'});\n\t\telse if (this.maxPortionHeight > 0) divOuter.css({'max-height': this.maxPortionHeight + 'vh'});\n\t\tlet tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n\t\ttdiv.css({'flex-shrink': '0', 'flex-grow': '0'});\n\t\ttdiv.css({'margin': '0', 'padding': '0'});\n\t\ttdiv.css({'background-color': '#F0F0F0'});\n\t\ttdiv.css({'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)'});\n\t\ttdiv.css({'border-bottom': '1px solid #C0C0C0'});\n\t\ttdiv.css({'border-radius': '6px 6px 0 0'});\n\n\t\tlet bdiv = dom('<div/>').appendTo(divOuter).css({'width': '100%'});\n\t\tbdiv.css({'flex-shrink': '1', 'flex-grow': '0'});\n\t\tif (this.allowScroller) bdiv.css({'overflow-y': 'auto'});\n\n\t\tthis.domBody = dom('<div/>').appendTo(bdiv).css({'padding': '0.5em'}); // (has to be nested, otherwise runs over)\n\n\t\tlet ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n\t\tttlTable.attr({'width': '100%'});\n\n\t\tlet tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({'padding': '0.5em'});\n\t\tlet ttl = dom('<font/>').appendTo(tdTitle).css({'font-size': '1.5em', 'font-weight': '600'});\n\t\tttl.setText(this.title);\n\n\t\tlet tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({'padding': '0.5em'});\n\t\tthis.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n\t\tthis.domClose.onClick(() => this.close());\n\n\t\tthis.populate();\n\n\t\tthis.repositionSize();\n\n\t\t/*bg.show();\n\t\tpb.show();*/\n\n\t\tif (this.callbackShown) this.callbackShown(this); // currently there's no delay so it's fine to just call it\n\t}\n\n\t// closes and hides the dialog\n\tpublic close():void\n\t{\n\t\tclearTooltip();\n\n\t\tthis.domObscureBackground.remove();\n\t\tthis.domObscureForeground.remove();\n\n\t\tlet body = this.parent || dom(document.body);\n\t\tbody.removeClass('wmk-noscroll');\n\n\t\tif (this.callbackClose) this.callbackClose(this);\n\t}\n\n\t// sizes may have changed, so adjust if necessary\n\tpublic bump():void\n\t{\n\t\tthis.repositionSize();\n\t}\n\n\t// use this to obtain the parts of the dialog box intended for modification\n\tpublic bodyDOM():DOM {return this.domBody;}\n\tpublic buttonsDOM():DOM {return this.domTitleButtons;}\n\n\t// override this function to create the content; this gets called right before the dialog box is shown\n\tprotected populate():void\n\t{\n\t\tthis.bodyDOM().setText('Empty dialog box.');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have this called when the size may have changed, and need to update position\n\tprivate repositionSize():void\n\t{\n\t\tlet docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n\t\tthis.domPanelBoundary.css({'left': (0.5 * (docW - dlgW)) + 'px'});\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Sketcher} from '../sketcher/Sketcher';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {MenuProxy} from '../ui/MenuProxy';\nimport {dom, DOM} from '../util/dom';\nimport {Dialog} from './Dialog';\n\n/*\n\tProvides a wrapper dialog for the editing of a molecule. The main feature is an instance of molsync.ui.EditMolecule, but it also adds\n\tvarious other widgets.\n*/\n\nexport class EditCompound extends Dialog\n{\n\tprotected btnClear:DOM;\n\tprotected btnCopy:DOM;\n\tprotected btnSave:DOM;\n\tprotected sketcher = new Sketcher();\n\n\tprivate proxyClip:ClipboardProxy = null;\n\tprivate proxyMenu:MenuProxy = null;\n\n\tprivate callbackSave:(source?:EditCompound) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mol:Molecule, parent:any= null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.title = 'Edit Compound';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\tpublic onSave(callback:(source?:EditCompound) => void)\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\n\tpublic getMolecule():Molecule {return this.sketcher.getMolecule();}\n\tpublic getSketcher():Sketcher {return this.sketcher;}\n\n\tpublic defineClipboard(proxy:ClipboardProxy):void\n\t{\n\t\tthis.proxyClip = proxy;\n\n\t\tlet handler = new ClipboardProxyHandler();\n\t\thandler.copyEvent = (andCut:boolean, proxy:ClipboardProxy):boolean =>\n\t\t{\n\t\t\tthis.sketcher.performCopySelection(andCut);\n\t\t\treturn true;\n\t\t};\n\t\thandler.pasteEvent = (proxy:ClipboardProxy):boolean =>\n\t\t{\n\t\t\tthis.sketcher.pasteText(proxy.getString());\n\t\t\treturn true;\n\t\t};\n\t\tproxy.pushHandler(handler);\n\t\tthis.sketcher.defineClipboard(proxy);\n\t}\n\n\tpublic defineContext(proxy:MenuProxy):void\n\t{\n\t\tthis.proxyMenu = proxy;\n\t\tthis.sketcher.defineContext(this.proxyMenu);\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\n\t\tsuper.close();\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnClear.onClick(() => this.sketcher.clearMolecule());\n\n\t\tthis.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnCopy.onClick(() => this.actionCopy());\n\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\t\tthis.domClose.css({'margin-left': '0.5em'});\n\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnSave.onClick(() => {if (this.callbackSave) this.callbackSave(this);});\n\n\t\tlet skw = 800, skh = 650;\n\t\tlet skdiv = dom('<div/>').appendTo(body).css({'width': `${skw}px`, 'height': `${skh}px`});\n\n\t\tthis.sketcher.setSize(skw, skh);\n\t\tthis.sketcher.defineMolecule(this.mol);\n\t\tthis.sketcher.setup(() => this.sketcher.render(skdiv));\n\t}\n\n\tpublic actionCopy():void\n\t{\n\t\tthis.sketcher.performCopySelection(false);\n\t}\n\tpublic actionCut():void\n\t{\n\t\tthis.sketcher.performCopySelection(true);\n\t}\n\tpublic actionPaste():void\n\t{\n\t\tthis.sketcher.performPaste();\n\t}\n\tpublic actionUndo():void\n\t{\n\t\tthis.sketcher.performUndo();\n\t}\n\tpublic actionRedo():void\n\t{\n\t\tthis.sketcher.performRedo();\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {deepClone, safeFloat, safeInt} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Molecule} from '../mol/Molecule';\n\n/*\n\tWraps an object representation of a datasheet with access functions that are analogous to the Java com.mmi.core.ds.DataSheet class.\n\n\tThe format of the data parameter is:\n\n\t\ttitle, description: string\n\t\tnumCols, numRows, numExtens: integer\n\t\tcolData: array of {name:string, type:string, descr:string}\n\t\trowData: matrix, rowData[row][col]=value\n\t\textData: array of {name:string, type:string, data:string}\n\n\tImportant differences to remember:\n\n\t- column types are represented as strings, not integers (see constants below)\n\t- molecules are represented as strings, in SketchEl format, not objects\n*/\n\nexport const enum DataSheetColumn\n{\n\tMolecule = 'molecule',\n\tString = 'string',\n\tReal = 'real',\n\tInteger = 'integer',\n\tBoolean = 'boolean',\n\tExtend = 'extend',\n}\n\ninterface DataSheetContentColumn\n{\n\tname:string;\n\ttype:DataSheetColumn;\n\tdescr:string;\n}\n\ninterface DataSheetContentExt\n{\n\tname:string;\n\ttype:string;\n\tdata:string;\n}\n\ninterface DataSheetContent\n{\n\ttitle?:string;\n\tdescription?:string;\n\tnumCols?:number;\n\tnumRows?:number;\n\tnumExtens?:number;\n\tcolData?:DataSheetContentColumn[];\n\trowData?:any[][];\n\textData?:DataSheetContentExt[];\n}\n\nexport class DataSheet\n{\n\tprivate data:DataSheetContent;\n\n\t// instantiates the data using a JSON-encoded datasheet; it may be null or empty\n\t// note: this class reserves the right to modify the data parameter; it is the caller's responsibility to ensure that there are no\n\t// troublesome references elsewhere\n\tconstructor(data?:any)\n\t{\n\t\tif (!data) data = {};\n\n\t\tif (!data.title) data.title = '';\n\t\tif (!data.description) data.description = '';\n\n\t\tif (data.numCols == null) data.numCols = Vec.len(data.colData);\n\t\tif (data.numRows == null) data.numRows = Vec.len(data.rowData);\n\t\tif (data.numExtens == null) data.numExtens = Vec.len(data.extData);\n\n\t\tif (data.colData == null) data.colData = [];\n\t\tif (data.rowData == null) data.rowData = [];\n\t\tif (data.extData == null) data.extData = [];\n\n\t\tthis.data = data;\n\t}\n\n\t// make a deep clone of the datasheet that can be safely modified without consequences\n\tpublic clone(withRows = true):DataSheet\n\t{\n\t\tlet {numCols, numRows, colData, rowData} = this.data;\n\t\tlet data:DataSheetContent =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: numCols,\n\t\t\tnumRows: withRows ? numRows : 0,\n\t\t\tnumExtens: this.data.numExtens,\n\t\t\tcolData: deepClone(colData),\n\t\t\trowData: withRows ? new Array(numRows) : [],\n\t\t\textData: deepClone(this.data.extData),\n\t\t};\n\t\tif (withRows) for (let r = 0; r < numRows; r++)\n\t\t{\n\t\t\tlet inRow = rowData[r], outRow:any[] = new Array(numCols);\n\t\t\tfor (let c = 0; c < numCols; c++)\n\t\t\t{\n\t\t\t\tif (inRow[c] != null && colData[c].type == DataSheetColumn.Molecule && inRow[c] instanceof Molecule)\n\t\t\t\t\toutRow[c] = (inRow[c] as Molecule).clone();\n\t\t\t\telse\n\t\t\t\t\toutRow[c] = inRow[c];\n\t\t\t}\n\t\t\tdata.rowData[r] = outRow;\n\t\t}\n\t\treturn new DataSheet(data);\n\t}\n\n\t// clone with more detailed control about what to include; note that null rowMask is a shortcut for empty\n\tpublic cloneMask(colMask:boolean[], rowMask:boolean[] = null, inclExtn:boolean = true):DataSheet\n\t{\n\t\tlet {numCols, numRows, colData, rowData} = this.data;\n\t\tlet data:DataSheetContent =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: Vec.maskCount(colMask),\n\t\t\tnumRows: rowMask ? Vec.maskCount(rowMask) : 0,\n\t\t\tnumExtens: inclExtn ? this.data.numExtens : 0,\n\t\t\tcolData: deepClone(Vec.maskGet(colData, colMask)),\n\t\t\trowData: [],\n\t\t\textData: inclExtn ? deepClone(this.data.extData) : [],\n\t\t};\n\n\t\tif (rowMask) for (let r = 0; r < numRows; r++) if (rowMask[r])\n\t\t{\n\t\t\tlet inRow = rowData[r], outRow:any[] = Vec.maskGet(inRow, colMask);\n\t\t\tdata.rowData.push(outRow);\n\t\t}\n\n\t\t// molecule instances need to be cloned explicitly\n\t\tconst {colData: outCols, rowData: outRows} = data;\n\t\tfor (let c = outCols.length - 1; c >= 0; c--) if (outCols[c].type == DataSheetColumn.Molecule)\n\t\t{\n\t\t\tfor (let r = outRows.length - 1; r >= 0; r--) if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n\t\t\t\toutRows[r][c] = (outRows[r][c] as Molecule).clone();\n\t\t}\n\n\t\treturn new DataSheet(data);\n\t}\n\n\t// returns the data upon which is class is based; this is in the correct format for sending to the server as a\n\t// \"JSON-formatted datasheet\", and is also suitable\n\tpublic getData():any\n\t{\n\t\treturn this.data;\n\t}\n\n\tpublic get numCols():number\n\t{\n\t\treturn this.data.numCols;\n\t}\n\tpublic get numRows():number\n\t{\n\t\treturn this.data.numRows;\n\t}\n\tpublic get title():string {return this.data.title;}\n\tpublic set title(title:string) {this.data.title = title;}\n\tpublic get description():string {return this.data.description;}\n\tpublic set description(description:string) {this.data.description = description;}\n\tpublic get numExtensions():number\n\t{\n\t\treturn this.data.numExtens;\n\t}\n\tpublic getExtName(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].name;\n\t}\n\tpublic getExtType(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].type;\n\t}\n\tpublic getExtData(idx:number):string\n\t{\n\t\treturn this.data.extData[idx].data;\n\t}\n\tpublic setExtName(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].name = val;\n\t}\n\tpublic setExtType(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].type = val;\n\t}\n\tpublic setExtData(idx:number, val:string):void\n\t{\n\t\tthis.data.extData[idx].data = val;\n\t}\n\tpublic appendExtension(name:string, type:string, data:string):number\n\t{\n\t\tthis.data.numExtens++;\n\t\tthis.data.extData.push({name, type, data});\n\t\treturn this.data.numExtens - 1;\n\t}\n\tpublic insertExtension(idx:number, name:string, type:string, data:string):void\n\t{\n\t\tthis.data.numExtens++;\n\t\tthis.data.extData.splice(idx, 0, {name, type, data});\n\t}\n\tpublic deleteExtension(idx:number):void\n\t{\n\t\tthis.data.extData.splice(idx, 1);\n\t\tthis.data.numExtens--;\n\t}\n\tpublic colName(col:number):string\n\t{\n\t\treturn this.data.colData[col].name;\n\t}\n\tpublic colType(col:number):DataSheetColumn\n\t{\n\t\treturn this.data.colData[col].type;\n\t}\n\tpublic colDescr(col:number):string\n\t{\n\t\treturn this.data.colData[col].descr;\n\t}\n\tpublic isNull(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col] == null;\n\t}\n\tpublic notNull(row:number, col:number | string):boolean\n\t{\n\t\treturn !this.isNull(row, col);\n\t}\n\tpublic isBlank(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col)) return true;\n\t\tlet ct = this.colType(col);\n\t\tif (ct == DataSheetColumn.Molecule) return this.getMolecule(row, col).numAtoms == 0;\n\t\tif (ct == DataSheetColumn.String) return this.getString(row, col).length == 0;\n\t\tif (ct == DataSheetColumn.Extend) return this.getExtend(row, col).length == 0;\n\t\treturn false;\n\t}\n\tpublic notBlank(row:number, col:number | string):boolean\n\t{\n\t\treturn !this.isBlank(row, col);\n\t}\n\n\tpublic getObject(row:number, col:number | string):any\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\treturn this.data.rowData[row][col];\n\t}\n\t// NOTE: the molecule object is a direct pointer, so be careful to clone before modifying frivolously\n\tpublic getMolecule(row:number, col:number | string):Molecule\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\tlet datum = this.data.rowData[row][col];\n\t\tif (datum == null) return null;\n\t\tif (typeof datum === 'string')\n\t\t{\n\t\t\tdatum = Molecule.fromString(datum);\n\t\t\tthis.data.rowData[row][col] = datum;\n\t\t}\n\t\treturn datum;\n\t}\n\tpublic getMoleculeClone(row:number, col:number | string):Molecule\n\t{\n\t\tlet mol = this.getMolecule(row, col);\n\t\treturn mol == null ? null : mol.clone();\n\t}\n\tpublic getMoleculeBlank(row:number, col:number | string):Molecule\n\t{\n\t\tlet mol = this.getMolecule(row, col);\n\t\treturn mol ? mol : new Molecule();\n\t}\n\tpublic getString(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\tlet str = this.data.rowData[row][col] as string;\n\t\treturn str == null ? '' : str;\n\t}\n\tpublic getInteger(row:number, col:number | string):number\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getReal(row:number, col:number | string):number\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getBoolean(row:number, col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic getExtend(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return null;\n\t\treturn this.data.rowData[row][col];\n\t}\n\tpublic setToNull(row:number, col:number | string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = null;\n\t}\n\tpublic setObject(row:number, col:number | string, val:any):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setMolecule(row:number, col:number | string, mol:Molecule):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = mol ? mol.clone() : null;\n\t}\n\tpublic setString(row:number, col:number | string, val:string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setInteger(row:number, col:number | string, val:number):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setReal(row:number, col:number | string, val:number):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setBoolean(row:number, col:number | string, val:boolean):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic setExtend(row:number, col:number | string, val:string):void\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (col < 0) return;\n\t\tthis.data.rowData[row][col] = val;\n\t}\n\tpublic isEqualMolecule(row:number, col:number | string, mol:Molecule):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (mol == null)) return false;\n\t\tif (mol == null) return true;\n\t\treturn this.getMolecule(row, col).compareTo(mol) == 0;\n\t}\n\tpublic isEqualString(row:number, col:number | string, val:string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null || val == '')) return false;\n\t\tif (val == null || val == '') return true;\n\t\treturn this.getString(row, col) == val;\n\t}\n\tpublic isEqualInteger(row:number, col:number | string, val:number):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getInteger(row, col) == val;\n\t}\n\tpublic isEqualReal(row:number, col:number | string, val:number):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getReal(row, col) == val;\n\t}\n\tpublic isEqualBoolean(row:number, col:number | string, val:boolean):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tif (this.isNull(row, col) != (val == null)) return false;\n\t\tif (val == null) return true;\n\t\treturn this.getBoolean(row, col) == val;\n\t}\n\tpublic appendColumn(name:string, type:DataSheetColumn, descr:string):number\n\t{\n\t\tthis.data.numCols++;\n\t\tthis.data.colData.push({name, type, descr});\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].push(null);\n\t\treturn this.data.numCols - 1;\n\t}\n\tpublic insertColumn(col:number, name:string, type:DataSheetColumn, descr:string):void\n\t{\n\t\tthis.data.numCols++;\n\t\tthis.data.colData.splice(col, 0, {name, type, descr});\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].splice(col, 0, null);\n\t}\n\tpublic deleteColumn(col:number):void\n\t{\n\t\tthis.data.numCols--;\n\t\tthis.data.colData.splice(col, 1);\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n].splice(col, 1);\n\t}\n\tpublic changeColumnName(col:number, name:string, descr:string):void\n\t{\n\t\tthis.data.colData[col].name = name;\n\t\tthis.data.colData[col].descr = descr;\n\t}\n\tpublic changeColumnType(col:number, newType:DataSheetColumn):void\n\t{\n\t\tlet oldType = this.colType(col);\n\t\tif (oldType == newType) return;\n\n\t\tlet incompatible = oldType == DataSheetColumn.Molecule || newType == DataSheetColumn.Molecule ||\n\t\t\t\t\t\t   oldType == DataSheetColumn.Extend || newType == DataSheetColumn.Extend;\n\n\t\tfor (let n = this.data.rowData.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet row = this.data.rowData[n];\n\t\t\tif (row[col] == null) continue;\n\t\t\tif (incompatible) {row[col] = null; continue;}\n\n\t\t\tlet val = '';\n\t\t\tif (oldType == DataSheetColumn.String) val = row[col] as string;\n\t\t\telse if (oldType == DataSheetColumn.Integer) val = (row[col] as number).toString();\n\t\t\telse if (oldType == DataSheetColumn.Real) val = (row[col] as number).toString();\n\t\t\telse if (oldType == DataSheetColumn.Boolean) val = row[col] as boolean ? 'true' : 'false';\n\n\t\t\trow[col] = null;\n\n\t\t\tif (newType == DataSheetColumn.String) row[col] = val;\n\t\t\telse if (newType == DataSheetColumn.Integer) {let num = parseInt(val); row[col] = isFinite(num) ? num : null;}\n\t\t\telse if (newType == DataSheetColumn.Real) {let num = parseFloat(val); row[col] = isFinite(num) ? num : null;}\n\t\t\telse if (newType == DataSheetColumn.Boolean) row[col] = val.toLowerCase() == 'true' ? true : false;\n\t\t}\n\n\t\tthis.data.colData[col].type = newType;\n\t}\n\tpublic ensureColumn(name:string, type:DataSheetColumn, descr:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].name == name)\n\t\t{\n\t\t\tif (this.data.colData[n].type != type) this.changeColumnType(n, type);\n\t\t\tthis.data.colData[n].descr = descr;\n\t\t\treturn n;\n\t\t}\n\t\treturn this.appendColumn(name, type, descr);\n\t}\n\tpublic reorderColumns(order:number[]):void\n\t{\n\t\tlet identity = true;\n\t\tfor (let n = 0; n < order.length - 1; n++) if (order[n] != order[n + 1] - 1) {identity = false; break;}\n\t\tif (identity) return; // nothing to do\n\n\t\tthis.data.colData = Vec.idxGet(this.data.colData, order);\n\t\tfor (let n = 0; n < this.data.numRows; n++) this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n\t}\n\tpublic appendRow():number\n\t{\n\t\tthis.data.numRows++;\n\t\tlet row = new Array();\n\t\tfor (let n = 0; n < this.data.numCols; n++) row.push(null);\n\t\tthis.data.rowData.push(row);\n\t\treturn this.data.numRows - 1;\n\t}\n\tpublic appendRowFrom(srcDS:DataSheet, row:number):number\n\t{\n\t\tthis.data.numRows++;\n\t\tthis.data.rowData.push(srcDS.data.rowData[row].slice(0));\n\t\treturn this.data.numRows - 1;\n\t}\n\tpublic insertRow(row:number):void\n\t{\n\t\tthis.data.numRows++;\n\t\tlet data = new Array();\n\t\tfor (let n = 0; n < this.data.numCols; n++) data.push(null);\n\t\tthis.data.rowData.splice(row, 0, data);\n\t}\n\tpublic deleteRow(row:number):void\n\t{\n\t\tthis.data.numRows--;\n\t\tthis.data.rowData.splice(row, 1);\n\t}\n\tpublic deleteAllRows():void\n\t{\n\t\tthis.data.numRows = 0;\n\t\tthis.data.rowData = new Array();\n\t}\n\tpublic moveRowUp(row:number):void\n\t{\n\t\tlet data = this.data.rowData[row];\n\t\tthis.data.rowData[row] = this.data.rowData[row - 1];\n\t\tthis.data.rowData[row - 1] = data;\n\t}\n\tpublic moveRowDown(row:number):void\n\t{\n\t\tlet data = this.data.rowData[row];\n\t\tthis.data.rowData[row] = this.data.rowData[row + 1];\n\t\tthis.data.rowData[row + 1] = data;\n\t}\n\tpublic swapRows(row1:number, row2:number):void\n\t{\n\t\tVec.swap(this.data.rowData, row1, row2);\n\t}\n\tpublic exciseSingleRow(row:number):DataSheet\n\t{\n\t\tlet newData =\n\t\t{\n\t\t\ttitle: this.data.title,\n\t\t\tdescription: this.data.description,\n\t\t\tnumCols: this.data.numCols,\n\t\t\tnumRows: 1,\n\t\t\tnumExtens: this.data.numExtens,\n\t\t\tcolData: this.data.colData.slice(0),\n\t\t\trowData: [this.data.rowData[row].slice(0)],\n\t\t\textData: this.data.extData.slice(0)\n\t\t};\n\t\treturn new DataSheet(newData);\n\t}\n\tpublic colIsPrimitive(col:number | string):boolean\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tlet ct = this.data.colData[col].type;\n\t\treturn ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n\t}\n\tpublic findColByName(name:string, type?:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].name == name)\n\t\t{\n\t\t\tif (type == null || this.data.colData[n].type == type) return n;\n\t\t}\n\t\treturn -1;\n\t}\n\tpublic firstColOfType(type:string):number\n\t{\n\t\tfor (let n = 0; n < this.data.numCols; n++) if (this.data.colData[n].type == type) return n;\n\t\treturn -1;\n\t}\n\n\t// bring in a cell from the contents of another datasheet's cell, making an honest attempt to convert the data\n\t// if the type is different; completely incompatible data equates to null\n\tpublic copyCell(toRow:number, toCol:number, fromDS:DataSheet, fromRow:number, fromCol:number):void\n\t{\n\t\tthis.setToNull(toRow, toCol);\n\t\tif (fromDS.isNull(fromRow, fromCol)) return;\n\t\tlet obj = fromDS.getObject(fromRow, fromCol);\n\t\tthis.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n\t}\n\n\t// when possibly converting between two column types, make sure that the object is compatible\n\tpublic static convertType(obj:any, fromType:DataSheetColumn, toType:DataSheetColumn):any\n\t{\n\t\tconst ft = fromType, tt = toType;\n\t\tif (obj == null || ft == tt || (typeof obj == 'string' && obj == '')) return obj;\n\n\t\tif (tt == DataSheetColumn.String)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.Integer) return obj.toString();\n\t\t\telse if (ft == DataSheetColumn.Real) return obj.toString();\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 'true' : 'false';\n\t\t}\n\t\telse if (tt == DataSheetColumn.Real)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return safeFloat(obj, null);\n\t\t\telse if (ft == DataSheetColumn.Integer) return obj;\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 1 : 0;\n\t\t}\n\t\telse if (tt == DataSheetColumn.Integer)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return safeInt(obj, null);\n\t\t\telse if (ft == DataSheetColumn.Real) return Math.round(obj);\n\t\t\telse if (ft == DataSheetColumn.Boolean) return obj ? 1 : 0;\n\t\t}\n\t\telse if (tt == DataSheetColumn.Boolean)\n\t\t{\n\t\t\tif (ft == DataSheetColumn.String) return (obj as string).toLowerCase() == 'true';\n\t\t\telse if (ft == DataSheetColumn.Integer) return obj > 0;\n\t\t\telse if (ft == DataSheetColumn.Real) return obj >= 0.5;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// converts a cell to a string by whatever means necessary (or returns null)\n\tpublic toString(row:number, col:number | string):string\n\t{\n\t\tif (typeof col === 'string') col = this.findColByName(col);\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : obj.toString();\n\t}\n\n\t// converts a cell to a number; returns null or NaN as appropriate\n\tpublic toInt(row:number, col:number):number\n\t{\n\t\tif (!this.colIsPrimitive(col)) return null;\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : parseInt(obj);\n\t}\n\tpublic toReal(row:number, col:number):number\n\t{\n\t\tif (!this.colIsPrimitive(col)) return null;\n\t\tlet obj = this.data.rowData[row][col];\n\t\treturn obj == null ? null : parseFloat(obj);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentComponent, ExperimentComponentType, ExperimentEntry} from '../aspect/Experiment';\nimport {ExperimentMeta, ExperimentMetaApplic} from '../rxn/ExperimentMeta';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {QuantityCalc} from '../rxn/QuantityCalc';\nimport {Box, Pos, Size} from '../util/Geom';\nimport {realEqual} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {ArrangeMolecule} from './ArrangeMolecule';\nimport {FontData} from './FontData';\nimport {RenderPolicy} from './Rendering';\n\n/*\n\tPerforms the layout of an experiment, which is a reaction that may be multistep, and contains a variety of\n\toptional annotations. The flow may be arranged from left-to-right or some combination of horizontal and vertical.\n\n\tThere are various tweaks for things that can be included or left out. The default settings reflect the default chemistry\n\trendering style, i.e. annotations and editing artifacts are not included.\n\n\tComponent characteristics such as quantities, and derived properties such as green metrics, are not a part of\n\tthe layout.\n*/\n\nexport enum ArrangeComponentType\n{\n\tArrow = 1, // side separator (horizontal or vertical)\n\tPlus = 2, // component separator\n\tReactant = 3, // primary reactant: molecule or name\n\tReagent = 4, // primary reagent: molecule or name\n\tProduct = 5, // primary product: molecule or name\n\tStepNote = 6, // additional information about the step (e.g. rxn conditions)\n}\n\nexport enum ArrangeComponentAnnot\n{\n\tNone = 0,\n\tPrimary = 1,\n\tWaste = 2,\n\tImplied = 3,\n}\n\nexport class ArrangeComponent\n{\n\tpublic type:ArrangeComponentType;\n\tpublic srcIdx:number; // index in underlying reactionsheet (i.e. reactants/reagents/products[srcIdx])\n\tpublic step:number;\t// which step it belongs to\n\tpublic side:number; // which side of the reaction (-1=left, 1=right, 0=middle)\n\tpublic mol:Molecule; // molecule content, if applicable\n\tpublic text:string[] = []; // text content, if applicable\n\tpublic leftNumer:string; // // to the left of the structure: may be {n}/{d} form\n\tpublic leftDenom:string;\n\tpublic fszText:number; // text font sizes, if applicable\n\tpublic fszLeft:number;\n\tpublic annot = ArrangeComponentAnnot.None; // annotation glyph on the right\n\tpublic monochromeColour:number = null; // cause the rendering to be done in a specific colour\n\tpublic metaInfo:Record<string, any> = null; // user-controlled\n\tpublic box = new Box(); // bounding box\n\tpublic padding:number; // how much padding around the outer boundary\n\n\tpublic clone():ArrangeComponent\n\t{\n\t\tlet dup = new ArrangeComponent();\n\t\tdup.type = this.type;\n\t\tdup.srcIdx = this.srcIdx;\n\t\tdup.step = this.step;\n\t\tdup.side = this.side;\n\t\tdup.mol = this.mol;\n\t\tdup.text = this.text;\n\t\tdup.leftNumer = this.leftNumer;\n\t\tdup.leftDenom = this.leftDenom;\n\t\tdup.fszText = this.fszText;\n\t\tdup.fszLeft = this.fszLeft;\n\t\tdup.annot = this.annot;\n\t\tdup.monochromeColour = this.monochromeColour;\n\t\tdup.metaInfo = this.metaInfo;\n\t\tdup.box = this.box.clone();\n\t\tdup.padding = this.padding;\n\t\treturn dup;\n\t}\n}\n\nconst PADDING = 0.25;\nconst PLUSSZ = 0.5;\nconst ARROW_W = 2;\nconst ARROW_H = 0.5;\nconst REAGENT_SCALE = 0.7;\nconst PLACEHOLDER_W = 2;\nconst PLACEHOLDER_H = 2;\n\nexport interface ArrangeExperimentFauxComponent\n{\n\tstep:number;\n\ttype:ArrangeComponentType;\n\tmol:Molecule;\n\tname?:string;\n\tannot?:ArrangeComponentAnnot;\n\tcolour?:number;\n\tmetaInfo?:any;\n}\n\nexport class ArrangeExperiment\n{\n\tpublic scale:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitTotalW = 1000;\n\tpublic limitTotalH = 1000;\n\tpublic limitStructW = 0;\n\tpublic limitStructH = 0;\n\tpublic includeReagents = true; // drawing of reagents alongside the arrow\n\tpublic includeNames = false; // including names of components alongside structures\n\tpublic includeStoich = true; // whether to include non-unity stoichiometry labels\n\tpublic includeAnnot = false; // whether to add annotations like primary/waste\n\tpublic includeBlank = false; // any section with no components gets a blank placeholder\n\tpublic includeDetails = false; // include information like yield, amount, metadata in the layout\n\tpublic includeAtomMap = false; // display atom mapping numbers\n\tpublic colourAtomMap = 0x9D1A76; // if above, use this colour\n\tpublic allowVertical = true; // permit vertical or bent arrangements\n\tpublic padding = 0;\n\tpublic fauxComponents:ArrangeExperimentFauxComponent[] = []; // extra components to add in by request\n\n\tpublic static COMP_GAP_LEFT = 0.5;\n\tpublic static COMP_ANNOT_SIZE = 1;\n\n\tprivate extraText:Record<string, string[]> = {}; // key {step:type:idx}\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public entry:ExperimentEntry, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.padding = PADDING * this.scale;\n\t}\n\n\t// optional text decoration to add to a particular component\n\tpublic includeExtraText(step:number, type:ExperimentComponentType, idx:number, txt:string):void\n\t{\n\t\tif (!txt) return;\n\t\tlet key = `${step}:${type}:${idx}`;\n\t\tthis.extraText[key] = Vec.append(this.extraText[key], txt);\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\n\t\tlet fszText = this.scale * this.policy.data.fontSize, fszLeft = this.scale * this.policy.data.fontSize * 1.5;\n\n\t\t// do an initial sizing of most of the components\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\tif (xc.type == ArrangeComponentType.Plus) xc.box = new Box(0, 0, this.scale * PLUSSZ, this.scale * PLUSSZ);\n\t\t\telse if (xc.type == ArrangeComponentType.Arrow) {} // directional\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet w = 0, h = 0;\n\t\t\t\tif (MolUtil.notBlank(xc.mol))\n\t\t\t\t{\n\t\t\t\t\tlet sz = Size.fromArray(ArrangeMolecule.guestimateSize(xc.mol, this.policy));\n\t\t\t\t\tif (xc.type == ArrangeComponentType.Reagent) sz.scaleBy(REAGENT_SCALE);\n\t\t\t\t\tif (xc.leftNumer)\n\t\t\t\t\t{\n\t\t\t\t\t\txc.fszLeft = fszLeft;\n\t\t\t\t\t\tlet wad = this.measure.measureText(xc.leftNumer, fszLeft);\n\t\t\t\t\t\tlet lw = wad[0], lh = wad[1] + wad[2];\n\t\t\t\t\t\tif (xc.leftDenom) lw = Math.max(lw, this.measure.measureText(xc.leftDenom, fszLeft)[0]);\n\t\t\t\t\t\tsz.w += lw + ArrangeExperiment.COMP_GAP_LEFT * lh; // lineHeight=some extra spacing\n\t\t\t\t\t\tsz.h = Math.max(sz.h, lh * (xc.leftDenom ? 2 : 1));\n\t\t\t\t\t}\n\t\t\t\t\tsz.fitInto(this.limitStructW, this.limitStructH);\n\t\t\t\t\tw = sz.w;\n\t\t\t\t\th = sz.h;\n\t\t\t\t}\n\t\t\t\tif (Vec.notBlank(xc.text))\n\t\t\t\t{\n\t\t\t\t\tif (MolUtil.notBlank(xc.mol)) h += 0.5 * fszText;\n\t\t\t\t\tfor (let line of xc.text)\n\t\t\t\t\t{\n\t\t\t\t\t\txc.fszText = fszText;\n\t\t\t\t\t\tlet wad = this.measure.measureText(line, fszText);\n\t\t\t\t\t\tw = Math.max(w, wad[0]);\n\t\t\t\t\t\th += wad[1] + wad[2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (xc.annot != 0) w += ArrangeExperiment.COMP_ANNOT_SIZE * this.scale;\n\t\t\t\tif ((MolUtil.isBlank(xc.mol) && !xc.text && this.includeBlank) || w == 0 || h == 0)\n\t\t\t\t{\n\t\t\t\t\tw = Math.max(w, PLACEHOLDER_W * this.scale);\n\t\t\t\t\th = Math.max(h, PLACEHOLDER_H * this.scale);\n\t\t\t\t}\n\t\t\t\txc.box = new Box(0, 0, w, h);\n\t\t\t}\n\n\t\t\t// give it breathing room\n\t\t\txc.padding = this.padding;\n\t\t\txc.box = new Box(0, 0, xc.box.w + 2 * this.padding, xc.box.h + 2 * this.padding);\n\t\t}\n\n\t\t// build several permutations; take the best one\n\t\t// note: bend=1 for completely vertical, bend=2 for switch after first step, bend=#steps+1 for linear\n\t\tif (this.allowVertical)\n\t\t{\n\t\t\tlet best:ArrangeComponent[] = null;\n\t\t\tlet bestScore = 0;\n\t\t\tfor (let bend = this.entry.steps.length + 1; bend >= 1; bend--) for (let vert = 0; vert <= 1; vert++)\n\t\t\t{\n\t\t\t\tlet trial:ArrangeComponent[] = [];\n\t\t\t\tfor (let xc of this.components) trial.push(xc.clone());\n\t\t\t\tthis.arrangeComponents(trial, bend, vert > 0);\n\n\t\t\t\tlet score = this.scoreArrangement(trial);\n\t\t\t\tif (best == null || score > bestScore)\n\t\t\t\t{\n\t\t\t\t\tbest = trial;\n\t\t\t\t\tbestScore = score;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.components = best;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.arrangeComponents(this.components, this.entry.steps.length + 1, false);\n\t\t}\n\n\t\t// ascertain the limits\n\t\tthis.width = this.height = 0;\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\tthis.width = Math.max(this.width, xc.box.maxX());\n\t\t\tthis.height = Math.max(this.height, xc.box.maxY());\n\t\t}\n\t}\n\n\t// access to content\n\tpublic get numComponents():number {return this.components.length;}\n\tpublic getComponent(idx:number):ArrangeComponent {return this.components[idx];}\n\tpublic getComponents():ArrangeComponent[] {return this.components;}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let xc of this.components)\n\t\t{\n\t\t\txc.box.scaleBy(modScale);\n\t\t\txc.fszText *= modScale;\n\t\t\txc.fszLeft *= modScale;\n\t\t\txc.padding *= modScale;\n\t\t}\n\t}\n\n\t// convenience: convert arrangment type to its experiment counterpart, if applicable\n\tpublic static toExpType(compType:ArrangeComponentType):ExperimentComponentType\n\t{\n\t\tif (compType == ArrangeComponentType.Reactant) return ExperimentComponentType.Reactant;\n\t\tif (compType == ArrangeComponentType.Reagent) return ExperimentComponentType.Reagent;\n\t\tif (compType == ArrangeComponentType.Product) return ExperimentComponentType.Product;\n\t\treturn null;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// step 0: the only place where reactants come from\n\t\tfor (let n = 0; n < this.entry.steps[0].reactants.length; n++)\n\t\t{\n\t\t\tif (n > 0) this.createSegregator(ArrangeComponentType.Plus, 0, -1);\n\t\t\tthis.createReactant(n, 0);\n\t\t}\n\t\tif (this.components.length == 0 && this.includeBlank) this.createBlank(ArrangeComponentType.Reactant, 0);\n\n\t\t// reagents & products for each step\n\t\tfor (let s = 0; s < this.entry.steps.length; s++)\n\t\t{\n\t\t\tthis.createSegregator(ArrangeComponentType.Arrow, s, 0);\n\t\t\tif (this.includeReagents)\n\t\t\t{\n\t\t\t\tlet any = false;\n\t\t\t\tfor (let n = 0; n < this.entry.steps[s].reagents.length; n++)\n\t\t\t\t{\n\t\t\t\t\tthis.createReagent(n, s);\n\t\t\t\t\tany = true;\n\t\t\t\t}\n\t\t\t\tif (!any && this.includeBlank) this.createBlank(ArrangeComponentType.Reagent, s);\n\t\t\t}\n\t\t\tif (this.includeDetails) this.createStepMeta(s);\n\n\t\t\tlet any = false;\n\t\t\tfor (let n = 0; n < this.entry.steps[s].products.length; n++)\n\t\t\t{\n\t\t\t\tif (n > 0) this.createSegregator(ArrangeComponentType.Plus, s, 1);\n\t\t\t\tthis.createProduct(n, s);\n\t\t\t\tany = true;\n\t\t\t}\n\t\t\tif (!any && this.includeBlank) this.createBlank(ArrangeComponentType.Product, s);\n\t\t}\n\n\t\t// faux-components\n\t\tfor (let fc of this.fauxComponents)\n\t\t{\n\t\t\tif (fc.type == ArrangeComponentType.Reactant) this.createSegregator(ArrangeComponentType.Plus, fc.step, -1);\n\t\t\telse if (fc.type == ArrangeComponentType.Product) this.createSegregator(ArrangeComponentType.Plus, fc.step, 1);\n\t\t\tthis.createFauxComponent(fc);\n\t\t}\n\t}\n\n\tprivate createReactant(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].reactants[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Reactant;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = -1;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (MolUtil.notBlank(comp.mol) && this.includeStoich && !QuantityCalc.isStoichZero(comp.stoich) && !QuantityCalc.isStoichUnity(comp.stoich))\n\t\t{\n\t\t\tlet slash = comp.stoich.indexOf('/');\n\t\t\tif (slash >= 0)\n\t\t\t{\n\t\t\t\txc.leftNumer = comp.stoich.substring(0, slash);\n\t\t\t\txc.leftDenom = comp.stoich.substring(slash + 1);\n\t\t\t}\n\t\t\telse xc.leftNumer = comp.stoich;\n\t\t}\n\t\tif (this.includeAnnot && MolUtil.notBlank(comp.mol) && comp.primary) xc.annot = ArrangeComponentAnnot.Primary;\n\n\t\tlet key = `${step}:${ExperimentComponentType.Reactant}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createReagent(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].reagents[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Reagent;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = 0;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (this.includeAnnot)\n\t\t{\n\t\t\tlet stoich = QuantityCalc.impliedReagentStoich(comp, this.entry.steps[step].products);\n\t\t\tif (stoich > 0) xc.annot = ArrangeComponentAnnot.Implied;\n\t\t\tif (stoich > 0 && stoich != 1)\n\t\t\t{\n\t\t\t\tif (realEqual(stoich, Math.round(stoich)))\n\t\t\t\t\txc.leftNumer = Math.round(stoich).toString();\n\t\t\t\telse\n\t\t\t\t\txc.leftNumer = stoich.toString(); // TODO: use ratio instead, this can be ugly\n\t\t\t}\n\t\t}\n\n\t\tlet key = `${step}:${ExperimentComponentType.Reagent}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createProduct(idx:number, step:number):void\n\t{\n\t\tlet comp = this.entry.steps[step].products[idx];\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.Product;\n\t\txc.srcIdx = idx;\n\t\txc.step = step;\n\t\txc.side = 1;\n\t\tif (MolUtil.notBlank(comp.mol)) xc.mol = comp.mol;\n\t\tif (comp.name && (this.includeNames || MolUtil.isBlank(comp.mol))) xc.text = this.wordWrapName(comp.name, xc.mol);\n\t\tif (this.includeDetails) this.supplementText(xc, comp);\n\n\t\tif (this.includeStoich && !QuantityCalc.isStoichZero(comp.stoich) && !QuantityCalc.isStoichUnity(comp.stoich))\n\t\t{\n\t\t\tlet slash = comp.stoich.indexOf('/');\n\t\t\tif (slash >= 0)\n\t\t\t{\n\t\t\t\txc.leftNumer = comp.stoich.substring(0, slash);\n\t\t\t\txc.leftDenom = comp.stoich.substring(slash + 1);\n\t\t\t}\n\t\t\telse xc.leftNumer = comp.stoich;\n\t\t}\n\t\tif (this.includeAnnot && MolUtil.notBlank(comp.mol) && comp.waste) xc.annot = ArrangeComponentAnnot.Waste;\n\n\t\tlet key = `${step}:${ExperimentComponentType.Product}:${idx}`;\n\t\txc.text.push(...(this.extraText[key] ?? []));\n\n\t\tthis.components.push(xc);\n\t}\n\tprivate createSegregator(type:ArrangeComponentType, step:number, side:number):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = type;\n\t\txc.step = step;\n\t\txc.side = side;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createStepMeta(step:number):void\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let [type, value] of ExperimentMeta.unpackMeta(this.entry.steps[step].meta))\n\t\t{\n\t\t\tif (!Vec.safeArray(ExperimentMeta.APPLICABILITY[type]).includes(ExperimentMetaApplic.Step)) continue;\n\t\t\tlet descr = ExperimentMeta.describeMeta(type, value);\n\t\t\tif (descr != null) lines.push(descr);\n\t\t}\n\t\tif (lines.length == 0) return;\n\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = ArrangeComponentType.StepNote;\n\t\txc.step = step;\n\t\txc.side = 0;\n\t\txc.text = lines;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createBlank(type:number, step:number):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = type;\n\t\txc.step = step;\n\t\txc.side = type == ArrangeComponentType.Reactant ? -1 : type == ArrangeComponentType.Product ? 1 : 0;\n\t\txc.srcIdx = -1;\n\t\tthis.components.push(xc);\n\t}\n\tprivate createFauxComponent(fc:ArrangeExperimentFauxComponent):void\n\t{\n\t\tlet xc = new ArrangeComponent();\n\t\txc.type = fc.type;\n\t\txc.srcIdx = -1;\n\t\txc.step = fc.step;\n\t\txc.side = fc.type == ArrangeComponentType.Reactant ? -1 : fc.type == ArrangeComponentType.Product ? 1 : 0;\n\t\txc.mol = fc.mol;\n\t\tif (fc.name) xc.text = [fc.name];\n\t\tif (fc.annot) xc.annot = fc.annot;\n\t\txc.monochromeColour = fc.colour;\n\t\txc.metaInfo = fc.metaInfo;\n\t\tthis.components.push(xc);\n\t}\n\n\tprivate arrangeComponents(comps:ArrangeComponent[], bendStep:number, vertComp:boolean):void\n\t{\n\t\tlet blkMain:ArrangeComponent[][] = [];\n\t\tlet blkArrow:ArrangeComponent[][] = [];\n\t\tlet szMain:Size[] = [], szArrow:Size[] = [];\n\t\tlet midMain:Pos[] = [], midArrow:Pos[] = [];\n\n\t\tblkMain.push(this.gatherBlock(comps, 0, -1));\n\t\tszMain.push(this.arrangeMainBlock(blkMain[0], vertComp));\n\t\tmidMain.push(this.findMidBlock(blkMain[0], szMain[0]));\n\n\t\tfor (let n = 0; n < this.entry.steps.length; n++)\n\t\t{\n\t\t\tlet bent = n + 1 >= bendStep;\n\n\t\t\tblkMain.push(this.gatherBlock(comps, n, 1));\n\t\t\tszMain.push(this.arrangeMainBlock(blkMain[n + 1], vertComp && !bent));\n\t\t\tmidMain.push(this.findMidBlock(blkMain[n + 1], szMain[n + 1]));\n\n\t\t\tblkArrow.push(this.gatherBlock(comps, n, 0));\n\t\t\tif (!bent)\n\t\t\t\tszArrow.push(this.arrangeHorizontalArrowBlock(blkArrow[n]));\n\t\t\telse\n\t\t\t\tszArrow.push(this.arrangeVerticalArrowBlock(blkArrow[n]));\n\t\t\tmidArrow.push(this.findMidBlock(blkArrow[n], szArrow[n]));\n\t\t}\n\n\t\t// part 1: arrange the first step(s) left-to-right\n\n\t\tlet midH = 0;\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tmidH = Math.max(midH, midMain[n].y);\n\t\t\tif (n > 0) midH = Math.max(midH, midArrow[n - 1].y);\n\t\t}\n\t\tlet sz = Size.zero();\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tsz.w += szMain[n].w;\n\t\t\tsz.h = Math.max(sz.h, midH + (szMain[n].h - midMain[n].y));\n\t\t\tif (n > 0)\n\t\t\t{\n\t\t\t\tsz.w += szArrow[n - 1].w;\n\t\t\t\tsz.h = Math.max(sz.h, midH + (szArrow[n - 1].h - midArrow[n - 1].y));\n\t\t\t}\n\t\t}\n\n\t\tlet x = 0, arrowX = 0;\n\t\tfor (let n = 0; n < bendStep; n++)\n\t\t{\n\t\t\tif (n > 0)\n\t\t\t{\n\t\t\t\tthis.originateBlock(blkArrow[n - 1], x, midH - midArrow[n - 1].y);\n\t\t\t\tx += szArrow[n - 1].w;\n\t\t\t}\n\n\t\t\tthis.originateBlock(blkMain[n], x, midH - midMain[n].y);\n\t\t\tarrowX = x + midMain[n].x;\n\t\t\tx += szMain[n].w;\n\t\t}\n\n\t\t// part 2: arrange the remaining steps top-down\n\n\t\tlet y = sz.h, lowX = 0;\n\t\tfor (let n = bendStep; n <= this.entry.steps.length; n++)\n\t\t{\n\t\t\tx = arrowX - midArrow[n - 1].x;\n\t\t\tlowX = Math.min(lowX, x);\n\t\t\tthis.originateBlock(blkArrow[n - 1], x, y);\n\t\t\ty += szArrow[n - 1].h;\n\t\t\tsz.w = Math.max(sz.w, x + szArrow[n - 1].w);\n\n\t\t\tx = arrowX - midMain[n].x;\n\t\t\tlowX = Math.min(lowX, x);\n\t\t\tthis.originateBlock(blkMain[n], x, y);\n\t\t\ty += szMain[n].h;\n\t\t\tsz.w = Math.max(sz.w, x + szMain[n].w);\n\t\t}\n\n\t\t// need to post-correct sometimes with wide products\n\t\tif (lowX < 0)\n\t\t{\n\t\t\tfor (let xc of comps) xc.box.x -= lowX;\n\t\t}\n\t}\n\n\t// enumerate blocks of specific type\n\tprivate gatherBlock(comps:ArrangeComponent[], step:number, side:number):ArrangeComponent[]\n\t{\n\t\tlet block:ArrangeComponent[] = [];\n\t\tfor (let xc of comps) if (xc.side == side && xc.step == step) block.push(xc);\n\t\treturn block;\n\t}\n\n\t// fit out all individual components, horizontally or vertically\n\tprivate arrangeMainBlock(block:ArrangeComponent[], vertComp:boolean):Size\n\t{\n\t\tlet sz = Size.zero();\n\t\tif (!vertComp)\n\t\t{\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\tsz.w += xc.box.w;\n\t\t\t\tsz.h = Math.max(sz.h, xc.box.h);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\tsz.w = Math.max(sz.w, xc.box.w);\n\t\t\t\tsz.h += xc.box.h;\n\t\t\t}\n\t\t}\n\n\t\tsz.w = Math.max(sz.w, this.scale * 2.0);\n\t\tsz.h = Math.max(sz.h, this.scale * 2.0);\n\n\t\tif (!vertComp)\n\t\t{\n\t\t\tlet x = 0;\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\txc.box.x = x;\n\t\t\t\txc.box.y = 0.5 * (sz.h - xc.box.h);\n\t\t\t\tx += xc.box.w;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet y = 0;\n\t\t\tfor (let xc of block)\n\t\t\t{\n\t\t\t\txc.box.x = 0.5 * (sz.w - xc.box.w);\n\t\t\t\txc.box.y = y;\n\t\t\t\ty += xc.box.h;\n\t\t\t}\n\t\t}\n\n\t\treturn sz;\n\t}\n\n\t// arrange an arrow, and the associated reagents\n\tprivate arrangeHorizontalArrowBlock(block:ArrangeComponent[]):Size\n\t{\n\t\tlet arrow:ArrangeComponent = null;\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tarrow = xc;\n\t\t\txc.box.w = ARROW_W * this.scale + 2 * xc.padding;\n\t\t\txc.box.h = ARROW_H * this.scale + 2 * xc.padding;\n\t\t}\n\n\t\tlet mid = block.length >> 1; // (could vote by height?)\n\n\t\tfor (let xc of block) arrow.box.w = Math.max(xc.box.w, arrow.box.w);\n\n\t\tlet sz = Size.zero();\n\n\t\tlet n = 0;\n\t\tlet y = 0;\n\t\tlet arrowPlaced = false;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\txc.box.x = 0.5 * (arrow.box.w - xc.box.w);\n\t\t\txc.box.y = y;\n\t\t\ty += xc.box.h;\n\n\t\t\tn++;\n\t\t\tif (n == mid)\n\t\t\t{\n\t\t\t\tarrow.box.x = 0;\n\t\t\t\tarrow.box.y = y;\n\t\t\t\ty += arrow.box.h;\n\t\t\t\tarrowPlaced = true;\n\t\t\t}\n\t\t}\n\t\tif (!arrowPlaced)\n\t\t{\n\t\t\tarrow.box.x = 0;\n\t\t\tarrow.box.y = y;\n\t\t\ty += arrow.box.h;\n\t\t}\n\t\tsz.w = arrow.box.w;\n\t\tsz.h = y;\n\n\t\treturn sz;\n\t}\n\n\tprivate arrangeVerticalArrowBlock(block:ArrangeComponent[]):Size\n\t{\n\t\tlet arrow:ArrangeComponent = null;\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tarrow = xc;\n\t\t\txc.box.w = ARROW_H * this.scale + 2 * xc.padding;\n\t\t\txc.box.h = ARROW_W * this.scale + 2 * xc.padding;\n\t\t}\n\n\t\tlet mid = block.length >> 1; // (could vote by height?)\n\n\t\tlet sz1 = Size.zero(), sz2 = Size.zero();\n\t\tlet n = 0;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tif (n < mid)\n\t\t\t{\n\t\t\t\tsz1.w = Math.max(sz1.w, xc.box.w);\n\t\t\t\tsz1.h += xc.box.h;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsz2.w = Math.max(sz2.w, xc.box.w);\n\t\t\t\tsz2.h += xc.box.h;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\n\t\tlet sz = new Size(sz1.w + sz2.w + arrow.box.w, Math.max(arrow.box.h, Math.max(sz1.h, sz2.h)));\n\t\tarrow.box = new Box(sz1.w, 0, arrow.box.w, sz.h);\n\n\t\tlet y1 = 0.5 * (sz.h - sz1.h), y2 = 0.5 * (sz.h - sz2.h);\n\t\tn = 0;\n\t\tfor (let xc of block) if (xc.type != ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tif (n < mid)\n\t\t\t{\n\t\t\t\txc.box.x = sz1.w - xc.box.w;\n\t\t\t\txc.box.y = y1;\n\t\t\t\ty1 += xc.box.h;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txc.box.x = sz.w - sz2.w;\n\t\t\t\txc.box.y = y2;\n\t\t\t\ty2 += xc.box.h;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\n\t\treturn sz;\n\t}\n\n\t// find the \"reference middle\" of a block, which is based on pluses and arrows\n\tprivate findMidBlock(block:ArrangeComponent[], sz:Size):Pos\n\t{\n\t\tlet count = 0;\n\t\tlet mid = Pos.zero();\n\t\tfor (let xc of block) if (xc.type == ArrangeComponentType.Plus || xc.type == ArrangeComponentType.Arrow)\n\t\t{\n\t\t\tmid.x += xc.box.midX();\n\t\t\tmid.y += xc.box.midY();\n\t\t\tcount++;\n\t\t}\n\t\tif (count == 0)\n\t\t{\n\t\t\tmid.x = 0.5 * sz.w;\n\t\t\tmid.y = 0.5 * sz.h;\n\t\t}\n\t\telse if (count > 1)\n\t\t{\n\t\t\tlet inv = 1.0 / count;\n\t\t\tmid.x *= inv;\n\t\t\tmid.y *= inv;\n\t\t}\n\t\treturn mid;\n\t}\n\n\t// determine how good a particular arrangement is\n\tprivate scoreArrangement(comps:ArrangeComponent[]):number\n\t{\n\t\tlet w = 0, h = 0;\n\t\tfor (let xc of comps)\n\t\t{\n\t\t\tw = Math.max(w, xc.box.maxX());\n\t\t\th = Math.max(h, xc.box.maxY());\n\t\t}\n\n\t\tlet score = 0;\n\n\t\t// want the width to be as close as possible to the limiting width\n\t\tscore -= Math.max(0, Math.abs(w - this.limitTotalW));\n\n\t\t// .. and height?\n\t\t//score -= Math.max(0, Math.abs(h - this.limitTotalH));\n\n\t\t// (anything else that matters?)\n\n\t\treturn score;\n\t}\n\n\t// moves all components in a block\n\tprivate originateBlock(block:ArrangeComponent[], x:number, y:number):void\n\t{\n\t\tfor (let xc of block)\n\t\t{\n\t\t\txc.box.x += x;\n\t\t\txc.box.y += y;\n\t\t}\n\t}\n\n\t// add in other text information about the comment, if desired\n\tprivate supplementText(xc:ArrangeComponent, comp:ExperimentComponent):void\n\t{\n\t\tif (comp.mass > 0) xc.text.push(QuantityCalc.formatMass(comp.mass));\n\t\tif (comp.volume > 0) xc.text.push(QuantityCalc.formatVolume(comp.volume));\n\t\tif (comp.moles > 0) xc.text.push(QuantityCalc.formatMoles(comp.moles));\n\t\t//if (comp.density > 0) xc.text.push(QuantityCalc.formatDensity(comp.density));\n\t\tif (comp.conc > 0) xc.text.push(QuantityCalc.formatConc(comp.conc));\n\t\tif (comp.yield != null && comp.yield >= 0) xc.text.push(QuantityCalc.formatPercent(comp.yield));\n\t\tif (comp.equiv > 0) xc.text.push(QuantityCalc.formatEquiv(comp.equiv));\n\n\t\tfor (let [type, value] of ExperimentMeta.unpackMeta(comp.meta))\n\t\t{\n\t\t\tlet descr = ExperimentMeta.describeMeta(type, value);\n\t\t\tif (descr) xc.text.push(descr);\n\t\t}\n\t}\n\n\tprivate wordWrapName(name:string, mol:Molecule):string[]\n\t{\n\t\tlet minLimW = 0;\n\t\tif (MolUtil.notBlank(mol)) minLimW = (mol.boundary().w + 2) * this.scale;\n\t\tlet limW = Math.max(minLimW, 10 * this.scale);\n\t\tlet fsz = this.scale * this.policy.data.fontSize;\n\n\t\tlet w = this.measure.measureText(name, fsz)[0];\n\t\tif (w < limW) return [name];\n\n\t\tlet wrap = ():[string[], number] =>\n\t\t{\n\t\t\tlet lines:string[] = [], residual = name, nclean = 0;\n\t\t\twhile (residual.length > 0)\n\t\t\t{\n\t\t\t\tlet wsz = FontData.measureWidths(residual, fsz);\n\t\t\t\tlet pos = 0;\n\t\t\t\twhile (pos < wsz.length && wsz[pos] < limW) pos++;\n\t\t\t\tfor (let n = pos; n > 5; n--)\n\t\t\t\t{\n\t\t\t\t\tif (residual[n] == ' ') {pos = n; nclean++; break;}\n\t\t\t\t\tif (wsz[n] < limW * 0.8) break;\n\t\t\t\t}\n\t\t\t\tlines.push(residual.substring(0, pos));\n\t\t\t\tresidual = residual.substring(pos).trimLeft();\n\t\t\t}\n\t\t\treturn [lines, nclean];\n\t\t};\n\n\t\tlet [lines, nclean] = wrap();\n\t\tfor (; limW > 50; limW -= fsz)\n\t\t{\n\t\t\tlet [tryLines, tryClean] = wrap();\n\t\t\tif (tryLines.length > lines.length) break;\n\t\t\tif (tryClean >= nclean) [lines, nclean] = [tryLines, tryClean];\n\t\t}\n\t\treturn lines;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {FontData} from './FontData';\n\n/*\n\tInterface for providing information about the device onto which a molecule is to be drawn, without it needing to\n\tknow what the device actually is.\n*/\n\nexport interface ArrangeMeasurement\n{\n\t// conversion between angstrom units of molecules, and device units\n\tscale():number;\n\tangToX(ax:number):number;\n\tangToY(ay:number):number;\n\txToAng(px:number):number;\n\tyToAng(py:number):number;\n\n\t// return true for math-style Y-axis, false for screen-style Y-axis\n\tyIsUp():boolean;\n\n\t// returns an array of 3 numbers: [ascent, descent, width]\n\tmeasureText(str:string, fontSize:number):number[];\n}\n\n// a suitable default which is useful for creating offline renderings\nexport class OutlineMeasurement implements ArrangeMeasurement\n{\n\tprivate invScale:number;\n\n\tconstructor(private offsetX:number, private offsetY:number, private pointScale:number)\n\t{\n\t\tthis.invScale = 1 / pointScale;\n\t}\n\n\tpublic scale():number {return this.pointScale;}\n\tpublic angToX(ax:number):number {return ax * this.pointScale + this.offsetX;}\n\tpublic angToY(ay:number):number {return ay * -this.pointScale + this.offsetY;}\n\tpublic xToAng(px:number):number {return (px - this.offsetX) * this.invScale;}\n\tpublic yToAng(py:number):number {return (py - this.offsetY) * -this.invScale;}\n\n\t// return true for math-style Y-axis, false for screen-style Y-axis\n\tpublic yIsUp():boolean {return false;}\n\n\t// returns an array of 3 numbers: [ascent, descent, width]\n\tpublic measureText(str:string, fontSize:number):number[] {return FontData.main.measureText(str, fontSize);}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2024 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Molecule} from '../mol/Molecule';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {FitRotatedEllipse} from '../util/FitRotatedEllipse';\nimport {Box, GeomUtil, Line, Oval, QuickHull} from '../util/Geom';\nimport {angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {FontData} from './FontData';\nimport {RenderEffects, RenderPolicy} from './Rendering';\n\n/*\n\tThe algorithm for examining the contents of a molecule representation, and converting this into graphics primitives\n\twhich are arranged on some virtual canvas, according to layout metrics. Most of the hard work of displaying a\n\tmolecular structure is done within this class.\n*/\n\nexport interface APoint\n{\n\tanum:number; // corresponds to molecule atom index\n\ttext:string; // the primary label, or null if invisible\n\tfsz:number; // font size for label\n\t//bold:boolean;\n\tcol:number;\n\toval:Oval;\n\trotation?:number; // degrees to rotate text\n}\n\nexport enum BLineType\n{\n\tNormal = 1, // a line segment; may be single bond, part of a multiple bond, or dissected bond\n\tInclined, // an up-wedge bond\n\tDeclined, // a down-wedge bond\n\tUnknown, // a squiggly bond\n\tDotted, // dotted line\n\tDotDir, // dotted line, with inclined destination\n\tIncDouble, // inclined destination, order=2\n\tIncTriple, // inclined destination, order=3\n\tIncQuadruple // inclined destination, order=4\n}\n\nexport interface BLine\n{\n\tbnum:number; // molecule bond index\n\tbfr:number;\n\tbto:number;\n\ttype:BLineType;\n\tline:Line;\n\tsize:number; // line or dot size, where it applies\n\thead:number; // the maximum width of a wedge-type bond\n\tcol:number;\n}\n\nexport interface XRing\n{\n\tatoms:number[];\n\tcx:number;\n\tcy:number;\n\trw:number;\n\trh:number;\n\ttheta:number;\n\tsize:number; // line size\n}\n\nexport interface XPath\n{\n\tatoms:number[];\n\tpx:number[];\n\tpy:number[];\n\tctrl:boolean[];\n\tsize:number; // line size\n}\n\nexport interface SpaceFiller\n{\n\tanum:number; // origin, if any\n\tbnum:number;\n\tbox:Box; // bounding limit\n\tpx:number[];\n\tpy:number[];\n}\n\n// try to avoid compressing bonds too much; simple-line bonds are more resilient than things like dotted lines\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\n\nexport class ArrangeMolecule\n{\n\tprivate scale:number; // extracted from the measurement instance: useful to note when it changes\n\n\t// extracts, for efficiency\n\tprivate bondSepPix:number;\n\tprivate lineSizePix:number;\n\tprivate fontSizePix:number;\n\tprivate ymul:number; // -1 if Y is up, +1 if it is down\n\n\t// the angstrom-to-ascent height is corrected by this factor\n\tprivate static FONT_CORRECT = 1.5;\n\n\t// note: the first {#atoms} entries in the points array correspond to the atoms - and likewise for the space array; anything\n\t// listed after that is arbitrary; the lines are not listed in any kind of order\n\tprivate points:APoint[] = [];\n\tprivate lines:BLine[] = [];\n\tprivate rings:XRing[] = [];\n\tprivate paths:XPath[] = [];\n\tprivate space:SpaceFiller[] = [];\n\n\t// bond artifacts: by default they are derived automatically, but can also be disabled; these properties are also used to\n\t// override the default rendering of atom/bond properties\n\tprivate wantArtifacts = true;\n\tprivate artifacts:BondArtifact = null;\n\tprivate bondOrder:number[] = []; // replacement bond orders; special case: -1 for do-not-draw\n\tprivate atomCharge:number[] = [];\n\tprivate atomUnpaired:number[] = [];\n\tprivate artifactCharge = new Map<object, number>();\n\tprivate artifactUnpaired = new Map<object, number>();\n\tprivate artifactFract = new Map<object, boolean>();// bond order < 1: replaces the bond itself\n\n\t// --------------------- static methods ---------------------\n\n\t// when it is necessary to define a boundary box in which to draw a molecule, the only way to get it right is to do a\n\t// full arrangement, but this is computationally intensive; this method is fast, and delivers an approximate estimate\n\tpublic static guestimateSize(mol:Molecule, policy:RenderPolicy, maxW?:number, maxH?:number):number[]\n\t{\n\t\tlet box = mol.boundary();\n\t\tlet minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n\t\tlet fontSize = policy.data.fontSize * this.FONT_CORRECT;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomExplicit(n))\n\t\t{\n\t\t\tlet numsym = 0;\n\t\t\tfor (let ch of mol.atomElement(n)) if (!'|{}^'.includes(ch)) numsym++;\n\t\t\tlet plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n\t\t\tconst aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n\t\t\tconst ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n\t\t\tconst ax = mol.atomX(n), ay = mol.atomY(n);\n\t\t\tminX = Math.min(minX, ax - aw);\n\t\t\tmaxX = Math.max(maxX, ax + aw);\n\t\t\tminY = Math.min(minY, ay - ah);\n\t\t\tmaxY = Math.max(maxY, ay + ah);\n\t\t}\n\t\tlet w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n\t\tlet h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n\t\tif (maxW > 0 && w > maxW) {h *= maxW / w; w = maxW;}\n\t\tif (maxH > 0 && h > maxH) {w *= maxH / h; h = maxH;}\n\t\treturn [w, h];\n\t}\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private mol:Molecule, private measure:ArrangeMeasurement, private policy:RenderPolicy,\n\t\t\t\tprivate effects:RenderEffects = new RenderEffects())\n\t{\n\t}\n\n\t// access to setup info\n\tpublic getMolecule():Molecule {return this.mol;}\n\tpublic getMeasure():ArrangeMeasurement {return this.measure;}\n\tpublic getPolicy():RenderPolicy {return this.policy;}\n\tpublic getEffects():RenderEffects {return this.effects;}\n\tpublic getScale():number {return this.scale;} // may be different from measure.scale() if modified after layout\n\n\t// bond artifacts: can decide whether they're to be derived, or provide them already\n\tpublic setWantArtifacts(want:boolean) {this.wantArtifacts = want;}\n\tpublic getArtifacts():BondArtifact {return this.artifacts;}\n\tpublic setArtifacts(artifacts:BondArtifact):void {this.artifacts = artifacts;}\n\n\t// the action method: call this before accessing any of the resultant data\n\tpublic arrange():void\n\t{\n\t\tconst {mol, measure, policy, effects} = this;\n\n\t\tthis.scale = measure.scale();\n\t\tthis.bondSepPix = policy.data.bondSep * measure.scale();\n\t\tthis.lineSizePix = policy.data.lineSize * measure.scale();\n\t\tthis.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n\t\tthis.ymul = measure.yIsUp() ? -1 : 1;\n\n\t\tlet artmask:boolean[] = null;\n\t\tif (this.wantArtifacts && this.artifacts == null)\n\t\t{\n\t\t\tthis.artifacts = new BondArtifact(mol);\n\n\t\t\tartmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\tfor (let path of this.artifacts.getResPaths()) for (let a of path.atoms) artmask[a - 1] = true;\n\t\t\tfor (let ring of this.artifacts.getResRings()) for (let a of ring.atoms) artmask[a - 1] = true;\n\t\t\tfor (let arene of this.artifacts.getArenes()) {artmask[arene.centre - 1] = true; for (let a of arene.atoms) artmask[a - 1] = true;}\n\t\t}\n\n\t\tthis.setupBondOrders();\n\n\t\t// fill in each of the atom centres\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\t// atom symbols which are more than 2 characters long are labels rather than elements, and get different treatment;\n\t\t\t// note we put in a null placeholder here, so that the points will be kept in their original atom order\n\t\t\tif (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0)\n\t\t\t{\n\t\t\t\tthis.points.push(null);\n\t\t\t\tthis.space.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// proceed with a regular atom symbol\n\t\t\tlet a:APoint =\n\t\t\t{\n\t\t\t\tanum: n,\n\t\t\t\ttext: /*this.effects.showCarbon ||*/ mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n\t\t\t\tfsz: this.fontSizePix,\n\t\t\t\tcol: this.policy.data.atomCols[mol.atomicNumber(n)],\n\t\t\t\toval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n\t\t\t};\n\t\t\tlet overCol = this.effects.colAtom[n];\n\t\t\tif (overCol) a.col = overCol;\n\n\t\t\t//if (policy.mappedColour >= 0 && mol.atomMapNum(n) > 0) a.col = policy.mappedColour;\n\n\t\t\t// decide whether this atom is to have a label\n\t\t\t//let explicit = mol.atomExplicit(n) /*|| this.effects.showCarbon;*/\n\t\t\t//if (explicit && /*!effects.showCarbon &&*/ mol.atomElement(n) == 'C' && !this.atomIsWeirdLinear(n)) explicit = !artmask[n - 1];\n\t\t\t//a.text = explicit ? mol.atomElement(n) : null;\n\t\t\tif (artmask && artmask[n - 1] && mol.atomElement(n) == 'C') a.text = null;\n\n\t\t\t// if it has a label, then how big\n\t\t\tif (a.text != null)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(a.text, a.fsz);\n\t\t\t\tconst PADDING = 1.1; // want a bit more room\n\t\t\t\ta.oval.rw = 0.5 * wad[0] * PADDING;\n\t\t\t\ta.oval.rh = 0.5 * wad[1] * PADDING;\n\t\t\t}\n\n\t\t\tthis.points.push(a);\n\t\t\tthis.space.push(this.computeSpacePoint(a));\n\t\t}\n\n\t\t// pick up the label-style elements, and deal with them\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (this.points[n - 1] == null) this.processLabel(n);\n\n\t\t// resolve the bonds which can be analyzed immediately\n\t\tlet bdbl = Vec.booleanArray(false, mol.numBonds); // gets set to true if bond is awaiting a double bond assignment\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n\t\t\tif (bo < 0) continue; // do not draw\n\n\t\t\tlet col = this.effects.colBond[n];\n\t\t\tif (!col) col = this.policy.data.foreground;\n\n\t\t\tbdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n\n\t\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\n\t\t\t // miniscule resolution: do not give it a bond line; and remove the double bond flag so it doesn't get processed later either\n\t\t\tif (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1)\n\t\t\t{\n\t\t\t\tbdbl[n - 1] = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// for non-double bonds, can add the constituents right away\n\t\t\tif (bdbl[n - 1]) continue;\n\n\t\t\tlet minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n\t\t\tlet xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n\t\t\tlet xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n\t\t\tthis.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n\n\t\t\tlet sz = this.lineSizePix, head = 0;\n\t\t\tlet qbonds = QueryUtil.queryBondOrders(mol, n);\n\t\t\tif (Vec.notBlank(qbonds))\n\t\t\t{\n\t\t\t\tVec.sort(qbonds);\n\t\t\t\tif (qbonds[0] == -1) {qbonds.splice(0, 1); qbonds.push(-1);}\n\t\t\t\tlet qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n\t\t\t\tlet oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n\t\t\t\tlet v = -0.5;\n\t\t\t\tfor (let i = 0; i < 2; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\tlet b:BLine =\n\t\t\t\t\t{\n\t\t\t\t\t\tbnum: n,\n\t\t\t\t\t\tbfr,\n\t\t\t\t\t\tbto,\n\t\t\t\t\t\ttype: BLineType.Dotted,\n\t\t\t\t\t\tline: new Line(lx1, ly1, lx2, ly2),\n\t\t\t\t\t\tsize: 0.5 * sz,\n\t\t\t\t\t\thead,\n\t\t\t\t\t\tcol: (col & 0xFFFFFF) | 0x80000000,\n\t\t\t\t\t};\n\t\t\t\t\tthis.lines.push(b);\n\t\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t\t}\n\n\t\t\t\tlet rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n\t\t\t\tif (rotation < -90 || rotation > 90) rotation += 180; // don't want text to be upside down\n\n\t\t\t\tlet a:APoint =\n\t\t\t\t{\n\t\t\t\t\tanum: 0,\n\t\t\t\t\ttext: qtxt,\n\t\t\t\t\tfsz: 0.35 * this.fontSizePix,\n\t\t\t\t\tcol,\n\t\t\t\t\toval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n\t\t\t\t\trotation\n\t\t\t\t};\n\t\t\t\tthis.points.push(a);\n\t\t\t\tthis.space.push(this.computeSpacePoint(a));\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet ltype = BLineType.Normal;\n\t\t\tif (bo == 1 && bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tltype = BLineType.Inclined;\n\t\t\t\thead = 0.15 * measure.scale();\n\t\t\t}\n\t\t\telse if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tltype = BLineType.Declined;\n\t\t\t\thead = 0.15 * measure.scale();\n\t\t\t}\n\t\t\telse if (bt == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tltype = BLineType.Unknown;\n\t\t\t\thead = 0.2 * measure.scale();\n\t\t\t}\n\t\t\telse if (bo == 0)\n\t\t\t{\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) ltype = BLineType.DotDir;\n\t\t\t\telse ltype = BLineType.Dotted;\n\t\t\t}\n\t\t\telse if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED))\n\t\t\t{\n\t\t\t\tltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n\t\t\t\thead = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n\t\t\t}\n\n\t\t\t// for dotted lines, back off intersections if non-terminal\n\t\t\tif (bo == 0)\n\t\t\t{\n\t\t\t\tlet dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n\t\t\t\tlet d = norm_xy(dx, dy), invD = 1 / d;\n\t\t\t\tlet ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n\t\t\t\tif (mol.atomAdjCount(bfr) > 1) {xy1[0] += ox; xy1[1] += oy;}\n\t\t\t\tif (mol.atomAdjCount(bto) > 1) {xy2[0] -= ox; xy2[1] -= oy;}\n\t\t\t}\n\n\t\t\t// for dotted/declined, swap the sides\n\t\t\tif (bo != 1 && bt == Molecule.BONDTYPE_DECLINED) [xy1, xy2] = [xy2, xy1];\n\n\t\t\t// for flat multi-order bonds, add multiple lines\n\t\t\tif (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN))\n\t\t\t{\n\t\t\t\tlet oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n\n\t\t\t\t// check the intersections for each individual line\n\t\t\t\tlet ext1 = 1, ext2 = 1;\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\text1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n\t\t\t\t}\n\t\t\t\txy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\text2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n\t\t\t\t}\n\t\t\t\txy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n\n\t\t\t\t// instantiate objects\n\t\t\t\tfor (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++)\n\t\t\t\t{\n\t\t\t\t\tlet lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n\t\t\t\t\tlet b:BLine =\n\t\t\t\t\t{\n\t\t\t\t\t\tbnum: n,\n\t\t\t\t\t\tbfr,\n\t\t\t\t\t\tbto,\n\t\t\t\t\t\ttype: ltype,\n\t\t\t\t\t\tline: new Line(lx1, ly1, lx2, ly2),\n\t\t\t\t\t\tsize: sz,\n\t\t\t\t\t\thead,\n\t\t\t\t\t\tcol\n\t\t\t\t\t};\n\t\t\t\t\tthis.lines.push(b);\n\t\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// just one line, of whatever style was determined\n\t\t\t\tlet b:BLine =\n\t\t\t\t{\n\t\t\t\t\tbnum: n,\n\t\t\t\t\tbfr,\n\t\t\t\t\tbto,\n\t\t\t\t\ttype: ltype,\n\t\t\t\t\tline: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n\t\t\t\t\tsize: sz,\n\t\t\t\t\thead,\n\t\t\t\t\tcol\n\t\t\t\t};\n\t\t\t\tthis.lines.push(b);\n\t\t\t\tthis.space.push(this.computeSpaceLine(b));\n\t\t\t}\n\t\t}\n\n\t\t// process double bonds in rings\n\t\tlet rings = this.orderedRingList();\n\t\tfor (let i = 0; i < rings.length; i++)\n\t\t{\n\t\t\tfor (let j = 0; j < rings[i].length; j++)\n\t\t\t{\n\t\t\t\tlet k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n\t\t\t\tif (bdbl[k - 1])\n\t\t\t\t{\n\t\t\t\t\tthis.processDoubleBond(k, rings[i]);\n\t\t\t\t\tbdbl[k - 1] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// process all remaining double bonds\n\t\tfor (let i = 1; i <= mol.numBonds; i++) if (bdbl[i - 1]) this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n\n\t\t// place hydrogen labels as explicit \"atom centres\"\n\t\tlet hcount = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) hcount[n - 1] = /*!effects.showHydrogen ||*/ this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n\t\tfor (let n = 0; n < mol.numAtoms; n++) if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true)) hcount[n] = 0;\n\t\tfor (let n = 0; n < mol.numAtoms; n++) if (hcount[n] > 0) this.placeHydrogen(n, hcount[n], false);\n\n\t\t// look for atoms with isotope labels, and place them\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n\t\t{\n\t\t\tlet isostr = mol.atomIsotope(n).toString();\n\t\t\tlet col = policy.data.atomCols[mol.atomicNumber(n)];\n\t\t\tthis.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n\t\t}\n\n\t\t// do atomic charges/radical notation\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet str = '';\n\t\t\tlet chg = this.atomCharge[n - 1];\n\t\t\tif (chg == -1) str = '-';\n\t\t\telse if (chg == 1) str = '+';\n\t\t\telse if (chg < -1) str = Math.abs(chg) + '-';\n\t\t\telse if (chg > 1) str = chg + '+';\n\t\t\tfor (let i = this.atomUnpaired[n - 1]; i > 0; i--) str += '.';\n\t\t\tif (str.length == 0) continue;\n\t\t\tlet col = policy.data.atomCols[mol.atomicNumber(n)];\n\t\t\tthis.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n\t\t}\n\n\t\t// add in any explicitly user-requested decorations\n\t\tfor (let n = 0; n < effects.atomDecoText.length; n++)\n\t\t{\n\t\t\tlet txt = effects.atomDecoText[n];\n\t\t\tif (!txt) continue;\n\t\t\tthis.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n\t\t}\n\t\tfor (let n = 0; n < effects.bondDecoText.length; n++)\n\t\t{\n\t\t\tlet txt = effects.bondDecoText[n];\n\t\t\tif (!txt) continue;\n\t\t\tthis.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n\t\t}\n\n\t\t// atom circles need space reserved for them\n\t\tfor (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++) if (effects.atomCircleSz[n] > 0)\n\t\t{\n\t\t\tlet dw = effects.atomCircleSz[n] * this.scale;\n\t\t\tlet a = this.points[n];\n\t\t\tlet box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n\t\t\tlet spc:SpaceFiller =\n\t\t\t{\n\t\t\t\tanum: 0,\n\t\t\t\tbnum: 0,\n\t\t\t\tbox,\n\t\t\t\tpx: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n\t\t\t\tpy: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n\t\t\t};\n\t\t\tthis.space.push(spc);\n\t\t}\n\n\t\tif (this.artifacts != null)\n\t\t{\n\t\t\tfor (let path of this.artifacts.getResPaths())\n\t\t\t{\n\t\t\t\tthis.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n\t\t\t\tthis.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n\t\t\t}\n\t\t\tfor (let ring of this.artifacts.getResRings())\n\t\t\t{\n\t\t\t\tthis.createCircularRing(ring.atoms);\n\t\t\t\tthis.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n\t\t\t}\n\t\t\tfor (let arene of this.artifacts.getArenes())\n\t\t\t{\n\t\t\t\tlet isRing = arene.atoms.length > 2;\n\t\t\t\tif (isRing) for (let n = 0; n < arene.atoms.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n\t\t\t\t\tif (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {isRing = false; break;}\n\t\t\t\t}\n\t\t\t\tlet alkeneLike = arene.atoms.length == 2;\n\n\t\t\t\tthis.createBondCentroid(arene.centre, arene.atoms);\n\t\t\t\tif (!alkeneLike)\n\t\t\t\t{\n\t\t\t\t\tif (isRing) this.createCircularRing(arene.atoms); else this.createCurvedPath(arene.atoms, false, arene.centre);\n\t\t\t\t}\n\t\t\t\tthis.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n\t\t\t}\n\t\t}\n\n\t\t// perform a pseudo-embedding of the structure to resolve line-crossings\n/* ... to be done....\n\t\tPseudoEmbedding emb = new PseudoEmbedding(mol);\n\t\temb.calculateCrossings();\n\t\tfor (int n = 0; n < emb.numCrossings(); n++)\n\t\t{\n\t\t\tPseudoEmbedding.LineCrossing c = emb.getCrossing(n);\n\t\t\tif (c.higher == 1) resolveLineCrossings(c.bond1, c.bond2);\n\t\t\telse if (c.higher == 2) resolveLineCrossings(c.bond2, c.bond1);\n\t\t}*/\n\n\t\t// create polymer brackets\n\t\tlet polymers = new PolymerBlock(mol);\n\t\tfor (let id of polymers.getIDList()) this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n\t}\n\n   \t// access to atom information; it is valid to assume that {atomcentre}[N-1] matches {moleculeatom}[N], if N<=mol.numAtoms\n\tpublic numPoints():number {return this.points.length;}\n\tpublic getPoint(idx:number):APoint {return this.points[idx];}\n\tpublic getPoints():APoint[] {return this.points;}\n\n\t// access to bond information; it is _NOT_ valid to read anything into the indices; they do not correlate with bond numbers\n\tpublic numLines():number {return this.lines.length;}\n\tpublic getLine(idx:number):BLine {return this.lines[idx];}\n\tpublic getLines():BLine[] {return this.lines;}\n\n\t// access to extra ring/resonance information\n\tpublic numRings():number {return this.rings.length;}\n\tpublic getRing(idx:number):XRing {return this.rings[idx];}\n\tpublic getRings():XRing[] {return this.rings;}\n\tpublic numPaths():number {return this.paths.length;}\n\tpublic getPath(idx:number):XPath {return this.paths[idx];}\n\tpublic getPaths():XPath[] {return this.paths;}\n\n\t// access to space-fillers (useful for calculating bounding boxes)\n\tpublic numSpace():number {return this.space.length;}\n\tpublic getSpace(idx:number):SpaceFiller {return this.space[idx];}\n\tpublic getSpaces():SpaceFiller[] {return this.space;}\n\n\t// goes through all the objects and nudges them by the given offset\n\tpublic offsetEverything(dx:number, dy:number):void\n\t{\n\t\tfor (let a of this.points) a.oval.offsetBy(dx, dy);\n\t\tfor (let b of this.lines) b.line.offsetBy(dx, dy);\n\t\tfor (let r of this.rings)\n\t\t{\n\t\t\tr.cx += dx;\n\t\t\tr.cy += dy;\n\t\t}\n\t\tfor (let p of this.paths)\n\t\t{\n\t\t\tVec.addTo(p.px, dx);\n\t\t\tVec.addTo(p.py, dy);\n\t\t}\n\t\tfor (let spc of this.space)\n\t\t{\n\t\t\tspc.box.offsetBy(dx, dy);\n\t\t\tVec.addTo(spc.px, dx);\n\t\t\tVec.addTo(spc.py, dy);\n\t\t}\n\t}\n\n\t// ensure that the origin is at (0,0)\n\tpublic offsetOrigin():void\n\t{\n\t\tlet bounds = this.determineBoundary();\n\t\tif (bounds[0] != 0 || bounds[1] != 0) this.offsetEverything(-bounds[0], -bounds[1]);\n\t}\n\n\t// goes through all of the objects and scales them by the provided factor\n\tpublic scaleEverything(scaleBy:number):void\n\t{\n\t\tif (scaleBy == 1) return;\n\n\t\tthis.scale *= scaleBy;\n\t\tfor (let a of this.points)\n\t\t{\n\t\t\ta.oval.scaleBy(scaleBy);\n\t\t\ta.fsz *= scaleBy;\n\t\t}\n\t\tfor (let b of this.lines)\n\t\t{\n\t\t\tb.line.scaleBy(scaleBy);\n\t\t\tb.size *= scaleBy;\n\t\t\tb.head *= scaleBy;\n\t\t}\n\t\tfor (let r of this.rings)\n\t\t{\n\t\t\tr.cx *= scaleBy;\n\t\t\tr.cy *= scaleBy;\n\t\t\tr.rw *= scaleBy;\n\t\t\tr.rh *= scaleBy;\n\t\t\tr.size *= scaleBy;\n\t\t}\n\t\tfor (let p of this.paths)\n\t\t{\n\t\t\tVec.mulBy(p.px, scaleBy);\n\t\t\tVec.mulBy(p.py, scaleBy);\n\t\t\tp.size *= scaleBy;\n\t\t}\n\t\tfor (let spc of this.space)\n\t\t{\n\t\t\tspc.box.scaleBy(scaleBy);\n\t\t\tVec.mulBy(spc.px, scaleBy);\n\t\t\tVec.mulBy(spc.py, scaleBy);\n\t\t}\n\t}\n\n\t// goes through all of the primitives and works out {minX,minY,maxX,maxY}\n\tpublic determineBoundary(padding?:number):number[]\n\t{\n\t\tif (padding == null) padding = 0;\n\t\tif (this.space.length == 0) return [0, 0, 2 * padding, 2 * padding];\n\n\t\tlet bounds = Vec.numberArray(0, 4);\n\t\tlet spc = this.space[0];\n\t\tbounds[0] = spc.box.x;\n\t\tbounds[1] = spc.box.y;\n\t\tbounds[2] = spc.box.x + spc.box.w;\n\t\tbounds[3] = spc.box.y + spc.box.h;\n\n\t\tfor (let n = this.space.length - 1; n > 0; n--)\n\t\t{\n\t\t\tspc = this.space[n];\n\t\t\tbounds[0] = Math.min(bounds[0], spc.box.x);\n\t\t\tbounds[1] = Math.min(bounds[1], spc.box.y);\n\t\t\tbounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n\t\t\tbounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n\t\t}\n\n\t\t// !! factor in the boundary...\n\n\t\treturn bounds;\n\t}\n\tpublic determineBoundaryBox():Box\n\t{\n\t\tlet [x1, y1, x2, y2] = this.determineBoundary();\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\t// convenience method: determines the boundaries of the arrangement, and makes sure that it all fits into the given\n\t// box; will be scaled down if necessary, but not scaled up\n\tpublic squeezeInto(x:number, y:number, w:number, h:number, padding?:number):void\n\t{\n\t\tif (padding != null && padding > 0)\n\t\t{\n\t\t\tx += padding;\n\t\t\ty += padding;\n\t\t\tw -= 2 * padding;\n\t\t\th -= 2 * padding;\n\t\t}\n\t\tlet bounds = this.determineBoundary(0);\n\t\tlet bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n\t\tif (bw > w || bh > h)\n\t\t{\n\t\t\tlet downScale = 1;\n\t\t\tif (bw > w) downScale = w / bw;\n\t\t\tif (bh > h) downScale = Math.min(downScale, h / bh);\n\t\t\tthis.scaleEverything(downScale);\n\t\t\tVec.mulBy(bounds, downScale);\n\t\t}\n\t\tthis.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n\t}\n\n\t// if either boundary is greater than the given width/height, scales the objects down so that it fits; the origin is at (0,0) and the\n\t// size is as big as it needs to be\n\tpublic limitBounds(w:number, h:number):void\n\t{\n\t\tlet bounds = this.determineBoundary(0);\n\t\tif (bounds[0] == bounds[2] && bounds[1] == bounds[3]) return;\n\n\t\tlet scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n\t\tthis.offsetEverything(-bounds[0], -bounds[1]);\n\t\tthis.scaleEverything(scale);\n\t}\n\n\t// converts all drawing objects to a single colour\n\tpublic monochromate(col:number):void\n\t{\n\t\tfor (let a of this.points) a.col = col;\n\t\tfor (let b of this.lines) b.col = col;\n\t}\n\n\t// for a specific location, returns a measure of how \"congested\" it is; lower values mean that the point is generally far away\n\t// from things\n\tpublic spatialCongestion(x:number, y:number, thresh?:number):number\n\t{\n\t\tif (thresh == null) thresh = 0.001;\n\t\tlet congest = 0;\n\t\tfor (let n = 0; n < this.points.length; n++)\n\t\t{\n\t\t\tlet a = this.points[n];\n\t\t\tif (a == null) continue;\n\t\t\tlet dx = a.oval.cx - x, dy = a.oval.cy - y;\n\t\t\tcongest += 1 / (dx * dx + dy * dy + thresh);\n\t\t}\n\t\treturn congest;\n\t}\n\n\t// makes a moderately deep copy: the layout metrics can be tinkered with, but not the core ingredients\n\tpublic clone():ArrangeMolecule\n\t{\n\t\tlet dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n\t\tdup.scale = this.scale;\n\t\tdup.bondSepPix = this.bondSepPix;\n\t\tdup.lineSizePix = this.lineSizePix;\n\t\tdup.fontSizePix = this.fontSizePix;\n\t\tdup.ymul = this.ymul;\n\t\tfor (let a of this.points) dup.points.push(clone(a));\n\t\tfor (let b of this.lines) dup.lines.push(clone(b));\n\t\tfor (let s of this.space) dup.space.push(clone(s));\n\t\treturn dup;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// extract bond orders and other artifact-overriden content, and then overwrite them if an artifact applies\n\tprivate setupBondOrders():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\tfor (let n = 0; n < mol.numBonds; n++) this.bondOrder[n] = mol.bondOrder(n + 1);\n\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tthis.atomCharge[n] = mol.atomCharge(n + 1);\n\t\t\tthis.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n\t\t}\n\n\t\tlet delocalise = (obj:any, atoms:number[]) =>\n\t\t{\n\t\t\t// move charge/unpaired off the atoms and into the resonance system\n\t\t\tlet charge = 0, unpaired = 0;\n\t\t\tfor (let a of atoms)\n\t\t\t{\n\t\t\t\tcharge += this.atomCharge[a - 1];\n\t\t\t\tunpaired += this.atomUnpaired[a - 1];\n\t\t\t\tthis.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n\t\t\t}\n\t\t\tthis.artifactCharge.set(obj, charge);\n\t\t\tthis.artifactUnpaired.set(obj, unpaired);\n\n\t\t\t// any bonds sticking out of the resonance system are depicted as single lines\n\t\t\tfor (let a1 of atoms) for (let a2 of mol.atomAdjList(a1)) if (!atoms.includes(a2))\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(a1, a2);\n\t\t\t\tif (this.bondOrder[b - 1] >= 0) this.bondOrder[b - 1] = 1;\n\t\t\t}\n\t\t};\n\n\t\t// any bond that's affected by an artifact gets set to single-order for rendering purposes\n\t\tif (this.artifacts == null) return;\n\n\t\tfor (let path of this.artifacts.getResPaths())\n\t\t{\n\t\t\t// figure out if the average bond order is less than 1 (using the original values)\n\t\t\tlet charge = 0, unpaired = 0, orders = 0;\n\t\t\tfor (let n = 0; n < path.atoms.length; n++)\n\t\t\t{\n\t\t\t\tcharge += mol.atomCharge(path.atoms[n]);\n\t\t\t\tunpaired += mol.atomUnpaired(path.atoms[n]);\n\t\t\t\tlet b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\tif (b > 0) orders += mol.bondOrder(b);\n\t\t\t}\n\t\t\tlet fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n\t\t\tthis.artifactFract.set(path, fractional);\n\n\t\t\tfor (let n = 0; n < path.atoms.length - 1; n++)\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = fractional ? -1 : 1;\n\t\t\t}\n\t\t\tdelocalise(path, path.atoms);\n\t\t}\n\t\tfor (let ring of this.artifacts.getResRings())\n\t\t{\n\t\t\tfor (let n = 0; n < ring.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = 1;\n\t\t\t}\n\t\t\tdelocalise(ring, ring.atoms);\n\t\t}\n\t\tfor (let arene of this.artifacts.getArenes())\n\t\t{\n\t\t\tlet alkeneLike = arene.atoms.length == 2;\n\n\t\t\tfor (let n = 0; n < arene.atoms.length; n++)\n\t\t\t{\n\t\t\t\tif (!alkeneLike)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n\t\t\t\t\tif (b > 0) this.bondOrder[b - 1] = 1;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(arene.centre, arene.atoms[n]);\n\t\t\t\tif (b > 0) this.bondOrder[b - 1] = -1;\n\t\t\t}\n\t\t\tdelocalise(arene, arene.atoms);\n\t\t}\n\t}\n\n\t// for a given adjunct to an atom, find a suitable position for it, based on the provided direction (angdir, radians);\n\t// the placement algorithm will try pretty hard to find a suitable position which is close to the parent atom, not\n\t// overlapping anything, and projected in the requested direction\n\tprivate placeAdjunct(atom:number, str:string, fsz:number, col:number, angdir:number):void\n\t{\n\t\tlet wad = this.measure.measureText(str, fsz);\n\t\tlet a = this.points[atom - 1];\n\t\tlet cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n\n\t\t// special deal: carbenes with a zero bond\n\t\tif (str == '..')\n\t\t{\n\t\t\tlet zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n\t\t\tif (zeroBonds.length == 1)\n\t\t\t{\n\t\t\t\tlet zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n\t\t\t\tlet dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n\t\t\t\tlet r = fsz * 0.15;\n\t\t\t\tlet ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n\t\t\t\tlet ext = 1.2 * (rw + rh) * inv;\n\t\t\t\t[dx, dy] = [dx * ext, dy * ext];\n\n\t\t\t\tthis.points.push({anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r)});\n\t\t\t\tthis.points.push({anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r)});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = 0, bestDX = 0, bestDY = 0;\n\t\tlet px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n\t\tlet angThresh = 10; // angular threshold for short-circuiting\n\t\tlet shorted = false;\n\t\tfor (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale())\n\t\t{\n\t\t\tconst DELTA = 5 * DEGRAD;\n\t\t\tfor (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA) for (let s = -1; s <= 1; s += 2)\n\t\t\t{\n\t\t\t\tlet dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n\t\t\t\tlet dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, null, false);\n\t\t\t\tlet score = 10 * viol + Math.abs(dang) + 10 * ext;\n\n\t\t\t\tlet shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n\n\t\t\t\tif (bestScore == 0 || shortCircuit || score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t\tif (shortCircuit) {shorted = true; break;}\n\t\t\t}\n\n\t\t\tangThresh += 5;\n\t\t}\n\n\t\t// create a point for it\n\t\ta =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: str,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n\t\t};\n\t\tthis.points.push(a);\n\n\t\t// create a square spacefiller\n\t\t// TODO: spacefiller should use the glyph rather than just a box...\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n\t\t\tpy: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// deals with an atom symbol which is a label rather than an element/short token\n\tprivate processLabel(anum:number):void\n\t{\n\t\tlet ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n\n\t\t// decide whether the label goes on the left, or the right, or is centred\n\t\tlet left = 0, right = 0;\n\t\tlet adj = this.mol.atomAdjList(anum);\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tlet theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n\t\t\tif (theta >= -15 && theta <= 15) right += 3;\n\t\t\telse if (theta >= -85 && theta <= 85) right++;\n\t\t\telse if (theta > 85 && theta < 95) {} // orthogonal\n\t\t\telse if (theta < -85 && theta > -95) {} // orthogonal\n\t\t\telse if (theta > 165 || theta < -165) left += 3;\n\t\t\telse left++;\n\t\t}\n\n\t\tlet label = this.mol.atomElement(anum);\n\t\tlet ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n\n\t\tlet side = 0;\n\t\tif (left == 0 && right == 0 && ibar < 0 && ibrace < 0) {} // stay in middle\n\t\telse if (left < right) side = -1;\n\t\telse if (right < left) side = 1;\n\t\telse\n\t\t{\n\t\t\t// pick based on congestion; notice the bias toward placing on the right\n\t\t\t// !! if (spatialCongestion(ax-1,ay)<0.5f*spatialCongestion(ax+1,ay)) side=-1; else side=1;\n\t\t\tlet score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n\t\t\tlet score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n\t\t\tif (score1 < 0.5 * score2) side = -1; else side = 1;\n\t\t}\n\n\t\t// break up the label, if special characters are being used, and measure each\n\t\tlet chunks:string[] = null;\n\t\tlet position:number[] = null;\n\t\tlet primary:boolean[] = null;\n\t\tlet refchunk = 0;\n\n\t\tif (ibar < 0 && ibrace < 0) // one piece: it's simple\n\t\t{\n\t\t\tif (side == 0) chunks = [label];\n\t\t\telse if (side < 0)\n\t\t\t{\n\t\t\t\tchunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n\t\t\t\trefchunk = 1;\n\t\t\t}\n\t\t\telse chunks = [label.substring(0, 1), label.substring(1)];\n\t\t}\n\t\telse // multiple pieces: split it up\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tlet bpos:number[] = [];\n\t\t\tlet bpri:boolean[] = [];\n\n\t\t\tlet blocks:string[] = label.split('|');\n\t\t\tif (side < 0) blocks = Vec.reverse(blocks);\n\n\t\t\tlet buff = '';\n\t\t\tfor (let i = 0; i < blocks.length; i++)\n\t\t\t{\n\t\t\t\tlet isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n\n\t\t\t\tif (side < 0 && refchunk == 0 && i == blocks.length - 1) refchunk = bits.length;\n\t\t\t\tlet pos = 0;\n\t\t\t\tbuff = '';\n\t\t\t\tfor (let j = 0; j < blocks[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tlet ch = blocks[i].charAt(j);\n\t\t\t\t\tif (ch == '{' || ch == '}')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (buff.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbits.push(buff.toString());\n\t\t\t\t\t\t\tbpos.push(pos);\n\t\t\t\t\t\t\tbpri.push(isPrimary);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuff = '';\n\t\t\t\t\t\tpos = ch == '{' ? -1 : 0;\n\t\t\t\t\t}\n\t\t\t\t\t// NOTE: to do this, have to also protect the split by '|' part above...\n\t\t\t\t\t//else if (ch == '\\\\' && j < blocks[i].length() - 1) {buff.append(blocks[i].charAt(j + 1)); j++;}\n\t\t\t\t\telse if (ch == '^' && pos == -1 && buff.length == 0) pos = 1;\n\t\t\t\t\telse buff += ch;\n\t\t\t\t}\n\t\t\t\tif (buff.length > 0)\n\t\t\t\t{\n\t\t\t\t\tbits.push(buff.toString());\n\t\t\t\t\tbpos.push(pos);\n\t\t\t\t\tbpri.push(isPrimary);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchunks = bits;\n\t\t\tposition = bpos;\n\t\t\tprimary = bpri;\n\n\t\t\t// in case it leads with sub/superscript\n\t\t\twhile (refchunk < chunks.length - 1 && position[refchunk] != 0) refchunk++;\n\t\t}\n\n\t\tlet PADDING = 1.1;\n\t\tlet SSFRACT = 0.6;\n\n\t\tlet chunkw = Vec.numberArray(0, chunks.length);\n\t\tlet tw = 0;\n\t\tfor (let n = 0; n < chunks.length; n++)\n\t\t{\n\t\t\tchunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n\t\t\tif (position != null && position[n] != 0) chunkw[n] *= SSFRACT;\n\t\t\ttw += chunkw[n];\n\t\t}\n\n\t\tlet x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n\t\tfor (let n = 0; n < refchunk; n++) x -= chunkw[n];\n\t\tx -= 0.5 * chunkw[refchunk];\n\n\t\tfor (let n = 0; n < chunks.length; n++)\n\t\t{\n\t\t\tlet a:APoint =\n\t\t\t{\n\t\t\t\tanum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n\t\t\t\ttext: chunks[n],\n\t\t\t\tfsz: this.fontSizePix,\n\t\t\t\tcol: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n\t\t\t\toval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n\t\t\t};\n\n\t\t\tif (position != null && position[n] != 0)\n\t\t\t{\n\t\t\t\ta.fsz *= SSFRACT;\n\t\t\t\t//a.cy += a.fsz * 0.7f * (measure.yIsUp() ? -1 : 1);\n\n\t\t\t\tif (position[n] < 0)\n\t\t\t\t\ta.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n\t\t\t\telse\n\t\t\t\t\ta.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n\t\t\t}\n\t\t\tif (n == refchunk)\n\t\t\t{\n\t\t\t\tthis.points[anum - 1] = a;\n\t\t\t\tthis.space[anum - 1] = this.computeSpacePoint(a);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.points.push(a);\n\t\t\t\tthis.space.push(this.computeSpacePoint(a));\n\t\t\t}\n\n\t\t\tx += chunkw[n];\n\t\t}\n\t}\n\n\t// given that the position (X,Y) connects with atom N, and is part of a bond that connects at the other end\n\t// with (FX,FY), considers the possibility that a new (X,Y) may need to be calculated by backing up along the line;\n\t// the return value is the fraction the it needs to backup, i.e. 1 = don't change, <1 = needs to be shorter\n\tprivate backOffAtom(atom:number, x:number, y:number, fx:number, fy:number, minDist:number):number\n\t{\n\t\tif (x == fx && y == fy) return 1; // can happen when really small\n\n\t\tlet dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n\t\tconst bump = 0.1 * this.measure.scale();\n\t\tlet xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n\n\t\tlet ext = dist;\n\t\tlet active = false;\n\t\tfor (let spc of this.space) if (spc.anum == atom)\n\t\t{\n\t\t\tconst sz = spc.px.length;\n\t\t\tif (sz == 0) continue;\n\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < sz - 1 ? n + 1 : 0;\n\t\t\t\tlet x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n\t\t\t\tif (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2)) continue;\n\t\t\t\tlet xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n\n\t\t\t\tactive = true;\n\t\t\t\text = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n\t\t\t}\n\t\t}\n\n\t\tif (active)\n\t\t{\n\t\t\text = Math.max(minDist, ext - bump);\n\t\t\treturn ext / dist;\n\t\t}\n\t\telse return 1;\n\t}\n\n\t// as above, except returns {reduced distance squared, dx, dy}\n\tprivate backOffAtomDelta(atom:number, x:number, y:number, fx:number, fy:number, minDist:number):number[]\n\t{\n\t\tlet ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n\t\tif (ext >= 1) return null;\n\t\text = 1 - ext;\n\t\tlet dx = (fx - x) * ext, dy = (fy - y) * ext;\n\t\treturn [norm2_xy(dx, dy), dx, dy];\n\t}\n\n\t// applies the impact of the back-off extent, calculated above; returns new coordinates for [x,y]\n\tprivate shrinkBond(x:number, y:number, fx:number, fy:number, ext:number):number[]\n\t{\n\t\tif (ext == 1) return [x, y];\n\t\tlet dx = x - fx, dy = y - fy;\n\t\treturn [fx + ext * dx, fy + ext * dy];\n\t}\n\n\t// for bond begin/end points, compares the current distance to the original distance, to make sure that it hasn't been\n\t// squished below a certain length, which tends to render badly\n\tprivate ensureMinimumBondLength(xy1:number[], xy2:number[], x1:number, y1:number, x2:number, y2:number, minDist:number):void\n\t{\n\t\tlet dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n\t\tlet dsq = norm2_xy(dx, dy);\n\t\tminDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n\t\tif (dsq >= sqr(minDist - 0.0001)) return;\n\n\t\t// scale the bond back up to its minimum size\n\t\tlet d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n\t\tlet mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n\t\txy1[0] -= dx * mag1;\n\t\txy1[1] -= dy * mag1;\n\t\txy2[0] += dx * mag2;\n\t\txy2[1] += dy * mag2;\n\t}\n\n\t// produces a list of small rings, ordered in a terminal-first manner, which is to be used as the sequence for assigning sides\n\t// of bond orders\n\tprivate orderedRingList():number[][]\n\t{\n\t\tlet rings:number[][] = [];\n\t\tlet SIZE_ORDER = [6, 5, 7, 4, 3];\n\t\tfor (let i = 0; i < SIZE_ORDER.length; i++)\n\t\t{\n\t\t\tlet nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n\t\t\tfor (let j = 0; j < nring.length; j++) rings.push(nring[j]);\n\t\t}\n\t\tlet ringsz = rings.length;\n\n\t\t// for each atom add up the number of times it occurs in a small ring\n\t\tlet ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[n];\n\t\t\tfor (let i = 0; i < r.length; i++) ringbusy[r[i] - 1]++;\n\t\t}\n\n\t\t// score the rings by the sum of the busy quotient\n\t\tlet ringscore = Vec.numberArray(0, ringsz);\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[n];\n\t\t\tfor (let i = 0; i < r.length; i++) ringscore[n] += ringbusy[r[i] - 1];\n\t\t}\n\t\tlet ringorder = Vec.idxSort(ringscore);\n\n\t\t// count the number of double bonds in each ring, and use this to override the primary sort order (most=first)\n\t\tlet resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n\t\tfor (let n = 0; n < ringsz; n++)\n\t\t{\n\t\t\tlet r = rings[ringorder[n]];\n\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tlet j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n\t\t\t\tif (this.mol.bondOrder(j) == 2) resbcount[n]++;\n\t\t\t}\n\t\t\tmaxbcount = Math.max(maxbcount, resbcount[n]);\n\t\t}\n\n\t\tlet pos = 0, ret:number[][] = [];\n\t\tfor (let sz = maxbcount; sz >= 0; sz--)\n\t\t{\n\t\t\tfor (let n = 0; n < ringsz; n++) if (resbcount[n] == sz) ret.push(rings[ringorder[n]]);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t// convenience function which returns {ox,oy} which is orthogonal to the direction of the input vector, of magnitude D; the\n\t// direction of {ox,oy} is to the \"left\" of the input vector\n\tprivate orthogonalDelta(x1:number, y1:number, x2:number, y2:number, d:number):number[]\n\t{\n\t\tlet ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n\t\tlet sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n\t\treturn [ox * sc, oy * sc];\n\t}\n\n\t// given the guideline index of a double bond, and some information about the atoms which are on the \"important side\", creates\n\t// the appropriate line segments\n\tprivate processDoubleBond(idx:number, priority:number[]):void\n\t{\n\t\tlet bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n\t\tlet nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n\n\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\t\tlet oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n\n\t\tconst minDist = MINBOND_EXOTIC * this.measure.scale();\n\t\tlet dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n\n\t\t// count number of priority atoms on either side of the bond vector\n\t\tlet countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n\t\tlet idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n\t\tlet noshift = false; // true if definitely not alkene-ish\n\t\tfor (let n = 0; n < nfr.length; n++) if (nfr[n] != bto)\n\t\t{\n\t\t\tlet bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n\t\t\tif (bo == 0) continue;\n\t\t\tif (bo > 1) {noshift = true; break;}\n\n\t\t\tlet ispri = false;\n\t\t\tfor (let i = 0; i < (priority == null ? 0 : priority.length); i++) if (priority[i] == nfr[n]) ispri = true;\n\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n\t\t\tif (Math.abs(theta) * RADDEG > 175) {noshift = true; break;} // linear\n\n\t\t\tif (theta > 0)\n\t\t\t{\n\t\t\t\tif (ispri) countFLeft++;\n\t\t\t\tidxFLeft = nfr[n];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (ispri) countFRight++;\n\t\t\t\tidxFRight = nfr[n];\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < nto.length; n++) if (nto[n] != bfr)\n\t\t{\n\t\t\tlet bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n\t\t\tif (bo == 0) continue;\n\t\t\tif (bo > 1) {noshift = true; break;}\n\n\t\t\tlet ispri = false;\n\t\t\tfor (let i = 0; i < (priority == null ? 0 : priority.length); i++) if (priority[i] == nto[n]) ispri = true;\n\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n\t\t\tif (Math.abs(theta) * RADDEG > 175) {noshift = true; break;} // linear\n\n\t\t\tif (theta > 0)\n\t\t\t{\n\t\t\t\tif (ispri) countTLeft++;\n\t\t\t\tidxTLeft = nto[n];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (ispri) countTRight++;\n\t\t\t\tidxTRight = nto[n];\n\t\t\t}\n\t\t}\n\n\t\t// decide which side the bond should be shifted to, if either\n\t\tlet side = 0;\n\t\tif (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) {} // inappropriate\n\t\telse if (countFLeft > 0 && countFRight > 0) {} // ambiguous\n\t\telse if (countTLeft > 0 && countTRight > 0) {} // ambiguous\n\t\telse if (countFLeft > 0 || countTLeft > 0) side = 1; // left\n\t\telse if (countFRight > 0 || countTRight > 0) side = -1; // right\n\n\t\t// create the bond lines\n\n\t\tlet sz = this.lineSizePix;\n\t\tlet ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n\t\tlet bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n\n\t\t// side==0 means that the double bond straddles the line between the two points; !=0 means that the first line (A) is like a\n\t\t// regular single bond, while the second line is an adjunct off to one side\n\t\tif (side == 0)\n\t\t{\n\t\t\tax1 = x1 + 0.5 * oxy[0]; ay1 = y1 + 0.5 * oxy[1];\n\t\t\tax2 = x2 + 0.5 * oxy[0]; ay2 = y2 + 0.5 * oxy[1];\n\t\t\tbx1 = x1 - 0.5 * oxy[0]; by1 = y1 - 0.5 * oxy[1];\n\t\t\tbx2 = x2 - 0.5 * oxy[0]; by2 = y2 - 0.5 * oxy[1];\n\t\t}\n\t\telse if (side > 0)\n\t\t{\n\t\t\tbx1 = x1 + oxy[0]; by1 = y1 + oxy[1];\n\t\t\tbx2 = x2 + oxy[0]; by2 = y2 + oxy[1];\n\t\t\tif (nfr.length > 1 && this.points[bfr - 1].text == null) {bx1 += oxy[1]; by1 -= oxy[0];}\n\t\t\tif (nto.length > 1 && this.points[bto - 1].text == null) {bx2 -= oxy[1]; by2 += oxy[0];}\n\t\t}\n\t\telse if (side < 0)\n\t\t{\n\t\t\tbx1 = x1 - oxy[0]; by1 = y1 - oxy[1];\n\t\t\tbx2 = x2 - oxy[0]; by2 = y2 - oxy[1];\n\t\t\tif (nfr.length > 1 && this.points[bfr - 1].text == null) {bx1 += oxy[1]; by1 -= oxy[0];}\n\t\t\tif (nto.length > 1 && this.points[bto - 1].text == null) {bx2 -= oxy[1]; by2 += oxy[0];}\n\t\t}\n\n\t\t// if there's shifting happening, check to see if either end has a terminal heteroatom\n\t\tif (side != 0)\n\t\t{\n\t\t\tif (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null)\n\t\t\t{\n\t\t\t\tthis.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n\t\t\t}\n\t\t\tif (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null)\n\t\t\t{\n\t\t\t\tthis.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n\t\t\t}\n\t\t}\n\n\t\t// see if either of the lines approaches too close to something and, if so, back them both off by the same extent\n\t\tlet delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n\t\tif (delta1 != null || delta2 != null)\n\t\t{\n\t\t\tlet delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n\t\t\tax1 += delta[1];\n\t\t\tay1 += delta[2];\n\t\t\tbx1 += delta[1];\n\t\t\tby1 += delta[2];\n\t\t}\n\t\tlet delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n\t\tif (delta3 != null || delta4 != null)\n\t\t{\n\t\t\tlet delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n\t\t\tax2 += delta[1];\n\t\t\tay2 += delta[2];\n\t\t\tbx2 += delta[1];\n\t\t\tby2 += delta[2];\n\t\t}\n\n\t\t// if both sides are evenly balanced, want to make the double bonds intersect with their adjacent bonds\n\t\tif (side == 0 && !noshift)\n\t\t{\n\t\t\tlet xy:number[] = null;\n\t\t\tif (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx))\n\t\t\t{\n\t\t\t\txy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n\t\t\t\tif (xy != null) {ax1 = xy[0]; ay1 = xy[1];}\n\t\t\t\txy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n\t\t\t\tif (xy != null) {bx1 = xy[0]; by1 = xy[1];}\n\t\t\t}\n\t\t\tif (this.points[bto - 1].text == null && !this.mol.bondInRing(idx))\n\t\t\t{\n\t\t\t\txy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n\t\t\t\tif (xy != null) {ax2 = xy[0]; ay2 = xy[1];}\n\t\t\t\txy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n\t\t\t\tif (xy != null) {bx2 = xy[0]; by2 = xy[1];}\n\t\t\t}\n\t\t}\n\n\t\tlet lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n\t\tlet head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n\t\tlet col = this.effects.colBond[idx];\n\t\tif (!col) col = this.policy.data.foreground;\n\n\t\tlet b1:BLine =\n\t\t{\n\t\t\tbnum: idx,\n\t\t\tbfr,\n\t\t\tbto,\n\t\t\ttype: lt,\n\t\t\tline: new Line(ax1, ay1, ax2, ay2),\n\t\t\tsize: sz,\n\t\t\thead,\n\t\t\tcol\n\t\t};\n\t\tlet b2:BLine =\n\t\t{\n\t\t\tbnum: idx,\n\t\t\tbfr,\n\t\t\tbto,\n\t\t\ttype: lt,\n\t\t\tline: new Line(bx1, by1, bx2, by2),\n\t\t\tsize: sz,\n\t\t\thead,\n\t\t\tcol\n\t\t};\n\n\t\tthis.lines.push(b1);\n\t\tthis.lines.push(b2);\n\t\tthis.space.push(this.computeSpaceLine(b1));\n\t\tthis.space.push(this.computeSpaceLine(b2));\n\t}\n\n\t// for a point index (0-based), attempt to place some number of hydrogen atoms as a label (H, H2, H3, etc.); if the fussy\n\t// parameter is set, will insist on placing it in one of the 4 axial directions, starting with the atom's default preference;\n\t// will return false if this cannot be accomplished without stepping on something; if fussy is not enabled, will just try to\n\t// get it as close as possible\n\tprivate placeHydrogen(idx:number, hcount:number, fussy:boolean):boolean\n\t{\n\t\tlet font = FontData.main;\n\t\tconst SSFRACT = 0.6;\n\t\tconst GLYPH_H = font.getIndex('H');\n\n\t\tlet a = this.points[idx];\n\t\tlet emscale = a.fsz * font.INV_UNITS_PER_EM;\n\t\tlet sub = hcount >= 2 ? hcount.toString() : '';\n\n\t\t// create polygonal outline: start with the precomputed convex hull of the letter 'H', then grow as necessary\n\t\tlet outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n\n\t\tlet firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n\t\tfor (let n = 0; n < sub.length; n++)\n\t\t{\n\t\t\tlet ch = sub.charAt(n), g = font.getIndex(ch);\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\temw += font.getKerning('H', ch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet chp = sub.charAt(n - 1);\n\t\t\t\temw += font.getKerning(chp, ch) * SSFRACT;\n\t\t\t}\n\n\t\t\tlet extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n\t\t\tVec.addTo(extraX, emw / SSFRACT);\n\t\t\tVec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n\t\t\tVec.mulBy(extraX, SSFRACT);\n\t\t\tVec.mulBy(extraY, SSFRACT);\n\t\t\toutlineX = outlineX.concat(extraX);\n\t\t\toutlineY = outlineY.concat(extraY);\n\t\t\temw += font.HORIZ_ADV_X[g] * SSFRACT;\n\t\t}\n\n\t\t// if multiple, take the convex hull of all of the above\n\t\tif (sub.length > 0)\n\t\t{\n\t\t\tlet qh = new QuickHull(outlineX, outlineY, 0);\n\t\t\toutlineX = qh.hullX;\n\t\t\toutlineY = qh.hullY;\n\t\t}\n\n\t\t// transform the outline into the right position\n\t\tlet emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n\t\tfor (let n = 0; n < outlineX.length; n++)\n\t\t{\n\t\t\toutlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n\t\t\toutlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n\t\t}\n\n\t\t// for the \"fussy\" cases, only attempt the 4 axis-oriented directions\n\t\tlet dx = 0, dy = 0;\n\t\tlet srcWAD = this.measure.measureText(a.text, a.fsz);\n\t\tif (fussy)\n\t\t{\n\t\t\t// decide on the order: {0,1,2,3} is right,left,up,down; but priority can vary\n\t\t\tlet RIGHTLEFT = [0, 1, 2, 3];\n\t\t\tlet LEFTRIGHT = [1, 0, 2, 3];\n\t\t\tlet UPDOWN = [2, 3, 0, 1];\n\t\t\tlet DOWNUP = [3, 2, 0, 1];\n\t\t\tlet quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n\n\t\t\tif (adj.length == 0)\n\t\t\t{\n\t\t\t\tlet LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n\t\t\t\tif (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n\t\t\t\t\tLEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0) quad = LEFTRIGHT; // e.g. H2O, H2S\n\t\t\t\telse quad = RIGHTLEFT; // e.g. NH3, -OH\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet allLeft = true, allRight = true, allUp = true, allDown = true;\n\t\t\t\tconst ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n\t\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t\t{\n\t\t\t\t\tconst bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n\t\t\t\t\tif (bx > ax + 0.01) allLeft = false;\n\t\t\t\t\tif (bx < ax - 0.01) allRight = false;\n\t\t\t\t\tif (by < ay - 0.01) allUp = false;\n\t\t\t\t\tif (by > ay + 0.01) allDown = false;\n\t\t\t\t}\n\t\t\t\tif (allLeft) {}\n\t\t\t\telse if (allRight) quad = LEFTRIGHT;\n\t\t\t\telse if (allUp) quad = DOWNUP;\n\t\t\t\telse if (allDown) quad = UPDOWN;\n\t\t\t}\n\t\t\tfor (let n = 0; n < 4; n++)\n\t\t\t{\n\t\t\t\tlet tx = 0, ty = 0;\n\t\t\t\tif (quad[n] == 0) tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale; // right\n\t\t\t\telse if (quad[n] == 1) tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale; // left\n\t\t\t\telse if (quad[n] == 2) ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul; // up\n\t\t\t\telse if (quad[n] == 3) ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul; // down\n\n\t\t\t\t// if it can be placed without overlap, we'll take it\n\t\t\t\tVec.addTo(outlineX, tx);\n\t\t\t\tVec.addTo(outlineY, ty);\n\t\t\t\tlet viol = this.countPolyViolations(outlineX, outlineY, null, true);\n\t\t\t\tVec.addTo(outlineX, -tx);\n\t\t\t\tVec.addTo(outlineY, -ty);\n\n\t\t\t\tif (viol == 0)\n\t\t\t\t{\n\t\t\t\t\tdx = tx;\n\t\t\t\t\tdy = ty;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dx == 0 && dy == 0) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// for this one, we need a version of the outline polygon that's slightly bigger so it's not adjacent\n\t\t\tconst mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n\t\t\tconst mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n\t\t\tconst psz = outlineX.length;\n\n\t\t\tlet magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tmagPX[n] = (magPX[n] - cx) * mag + cx;\n\t\t\t\tmagPY[n] = (magPY[n] - cy) * mag + cy;\n\t\t\t}\n\n\t\t\t// do a circular sweep, with an extending radius; if at any extension there's a non-overlapping\n\t\t\tlet bestScore = 0, bestExt = 0, bestAng = 0;\n\t\t\tfor (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale())\n\t\t\t{\n\t\t\t\tlet anyNoClash = false;\n\n\t\t\t\tfor (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tlet tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n\t\t\t\t\tVec.addTo(magPX, tx);\n\t\t\t\t\tVec.addTo(magPY, ty);\n\t\t\t\t\tlet viol = this.countPolyViolations(magPX, magPY, null, false);\n\t\t\t\t\tVec.addTo(magPX, -tx);\n\t\t\t\t\tVec.addTo(magPY, -ty);\n\t\t\t\t\tif (viol == 0) anyNoClash = true;\n\t\t\t\t\tlet score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n\t\t\t\t\tif (bestScore == 0 || score < bestScore)\n\t\t\t\t\t{\n\t\t\t\t\t\tbestScore = score;\n\t\t\t\t\t\tbestExt = ext;\n\t\t\t\t\t\tbestAng = ang;\n\t\t\t\t\t\tdx = tx;\n\t\t\t\t\t\tdy = ty;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (anyNoClash) break;\n\t\t\t}\n\t\t}\n\n\t\t// apply the result\n\t\tlet wad = this.measure.measureText('H', a.fsz);\n\t\tconst PADDING = 1.1;\n\t\tlet ah:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: 'H',\n\t\t\tfsz: a.fsz,\n\t\t\tcol: a.col,\n\t\t\toval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n\t\t};\n\t\tthis.points.push(ah);\n\n\t\tif (sub.length > 0)\n\t\t{\n\t\t\tconst subFsz = SSFRACT * a.fsz;\n\t\t\twad = this.measure.measureText(sub, subFsz);\n\t\t\tlet an:APoint =\n\t\t\t{\n\t\t\t\tanum: 0,\n\t\t\t\ttext: sub,\n\t\t\t\tfsz: subFsz,\n\t\t\t\tcol: a.col,\n\t\t\t\toval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0],\n\t\t\t\t\t\t\t\t ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n\t\t\t};\n\t\t\tthis.points.push(an);\n\t\t}\n\n\t\t// the space-filler is for the H and its label\n\t\tVec.addTo(outlineX, dx);\n\t\tVec.addTo(outlineY, dy);\n\t\tlet minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n\t\t\tpx: outlineX,\n\t\t\tpy: outlineY\n\t\t};\n\t\tthis.space.push(spc);\n\n\t\treturn true;\n\t}\n\n\t// creates a \"space filling\" outline for a point, which provides sufficient detail to maneuvre other objects around it\n\tprivate computeSpacePoint(a:APoint):SpaceFiller\n\t{\n\t\tlet s:SpaceFiller =\n\t\t{\n\t\t\tanum: a.anum,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(),\n\t\t\tpx: [],\n\t\t\tpy: []\n\t\t};\n\n\t\tconst font = FontData.main;\n\t\tlet outlineX:number[] = [], outlineY:number[] = [];\n\t\tlet emw = 0, nglyphs = 0;\n\t\tif (a.text != null)\n\t\t{\n\t\t\tfor (let n = 0; n < a.text.length; n++)\n\t\t\t{\n\t\t\t\tlet ch1 = a.text.charAt(n);\n\t\t\t\tlet i = font.getIndex(ch1);\n\t\t\t\tif (i >= 0)\n\t\t\t\t{\n\t\t\t\t\tif (emw == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\toutlineX = font.getOutlineX(i);\n\t\t\t\t\t\toutlineY = font.getOutlineY(i);\n\t\t\t\t\t\tnglyphs = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n\t\t\t\t\t\tif (extraX.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tVec.addTo(extraX, emw);\n\t\t\t\t\t\t\toutlineX = outlineX.concat(extraX);\n\t\t\t\t\t\t\toutlineY = outlineY.concat(extraY);\n\t\t\t\t\t\t\tnglyphs++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\temw += font.HORIZ_ADV_X[i];\n\t\t\t\t}\n\t\t\t\telse emw += font.MISSING_HORZ;\n\n\t\t\t\tif (n < a.text.length - 1)\n\t\t\t\t{\n\t\t\t\t\tlet ch2 = a.text.charAt(n + 1);\n\t\t\t\t\temw += font.getKerning(ch1, ch2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (outlineX.length > 0)\n\t\t{\n\t\t\tif (nglyphs > 1)\n\t\t\t{\n\t\t\t\tlet qh = new QuickHull(outlineX, outlineY, 0);\n\t\t\t\toutlineX = qh.hullX;\n\t\t\t\toutlineY = qh.hullY;\n\t\t\t}\n\n\t\t\tlet emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n\t\t\tlet emscale = a.fsz * font.INV_UNITS_PER_EM;\n\t\t\tfor (let n = 0; n < outlineX.length; n++)\n\t\t\t{\n\t\t\t\toutlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n\t\t\t\toutlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n\t\t\t}\n\n\t\t\ts.px = outlineX;\n\t\t\ts.py = outlineY;\n\t\t\tlet minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n\t\t\ts.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts.box = Box.fromOval(a.oval);\n\t\t\tif (s.box.w > 0 && s.box.h > 0)\n\t\t\t{\n\t\t\t\ts.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n\t\t\t\ts.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n\t\t\t}\n\t\t}\n\n\t\treturn s;\n\t}\n\n\t// creates a \"space filling\" outline for a line, which may end up being described as a line segment or a polygon\n\tprivate computeSpaceLine(b:BLine):SpaceFiller\n\t{\n\t\tlet s:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: b.bnum,\n\t\t\tbox: new Box(),\n\t\t\tpx: [],\n\t\t\tpy: []\n\t\t};\n\t\tif (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir)\n\t\t{\n\t\t\t// line segment\n\t\t\ts.px = [b.line.x1, b.line.x2];\n\t\t\ts.py = [b.line.y1, b.line.y2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// create a wedge of fat-body outline\n\t\t\tconst dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n\t\t\tconst norm = b.head / Math.sqrt(dx * dx + dy * dy);\n\t\t\tconst ox = norm * dy, oy = -norm * dx;\n\n\t\t\tif (b.type == BLineType.Unknown)\n\t\t\t{\n\t\t\t\ts.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n\t\t\t\ts.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n\t\t\t\ts.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n\t\t\t}\n\t\t}\n\n\t\ts.box.x = Vec.min(s.px) - b.size;\n\t\ts.box.y = Vec.min(s.py) - b.size;\n\t\ts.box.w = Vec.max(s.px) - s.box.x + b.size;\n\t\ts.box.h = Vec.max(s.py) - s.box.y + b.size;\n\t\treturn s;\n\t}\n\n\t// adjusts the point, and associated spacefillers, for an atom\n\tprivate bumpAtomPosition(atom:number, dx:number, dy:number):void\n\t{\n\t\tlet p = this.points[atom - 1];\n\t\tp.oval.cx += dx;\n\t\tp.oval.cy += dy;\n\n\t\tfor (let n = this.space.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet s = this.space[n - 1];\n\t\t\tif (s == null || s.anum != atom) continue;\n\t\t\ts.box.x += dx;\n\t\t\ts.box.y += dy;\n\t\t\tVec.addTo(s.px, dx);\n\t\t\tVec.addTo(s.py, dy);\n\t\t}\n\t}\n\n\t// returns a subset of the space-filling outlines: only those whose bounding boxes match the supplied rectangle\n\tprivate spaceSubset(x:number, y:number, w:number, h:number):SpaceFiller[]\n\t{\n\t\tlet subset:SpaceFiller[] = [];\n\t\tfor (let s of this.space) if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h)) subset.push(s);\n\t\treturn subset;\n\t}\n\n\t// for a provided polygon, counts the number of times each of its lines intersects with the lines of one of the space-filling\n\t// polygons already placed; if the shortCircuit parameter is true, will return as soon as one is found\n\tprivate countPolyViolations(px:number[], py:number[], space:SpaceFiller[], shortCircuit:boolean):number\n\t{\n\t\tif (space == null) space = this.space;\n\n\t\tlet hits = 0;\n\t\tconst psz = px.length, nspc = space.length;\n\n\t\t// check for line-crossings first: this is the usual way that collisions happen\n\t\tlet pr = new Box(), sr = new Box();\n\t\tfor (let i1 = 0; i1 < psz; i1++)\n\t\t{\n\t\t\tlet i2 = i1 < psz - 1 ? i1 + 1 : 0;\n\t\t\tpr.x = Math.min(px[i1], px[i2]) - 1;\n\t\t\tpr.y = Math.min(py[i1], py[i2]) - 1;\n\t\t\tpr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n\t\t\tpr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n\n\t\t\tfor (let j = 0; j < nspc; j++)\n\t\t\t{\n\t\t\t\tlet spc = space[j];\n\t\t\t\tif (spc.px == null) continue;\n\t\t\t\tsr.x = spc.box.x - 1;\n\t\t\t\tsr.y = spc.box.y - 1;\n\t\t\t\tsr.w = spc.box.w + 1;\n\t\t\t\tsr.h = spc.box.h + 1;\n\t\t\t\tif (!pr.intersects(sr)) continue; // will eliminate almost everything\n\n\t\t\t\tlet ssz = spc.px.length;\n\t\t\t\tfor (let j1 = 0; j1 < ssz; j1++)\n\t\t\t\t{\n\t\t\t\t\tlet j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n\t\t\t\t\tsr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n\t\t\t\t\tsr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n\t\t\t\t\tsr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n\t\t\t\t\tsr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n\t\t\t\t\tif (!pr.intersects(sr)) continue; // almost everything else\n\n\t\t\t\t\tif (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\tbreak; // (no need to count all the lines in this spacefiller)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ssz == 1) break; // it's a line, not a polygon; one pass only\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now iterate over the spacefillers, and see if it's possible for either polygon to enclose the other\n\t\tpr.x = Vec.min(px);\n\t\tpr.y = Vec.min(py);\n\t\tpr.w = Vec.max(px) - pr.x;\n\t\tpr.h = Vec.max(py) - pr.y;\n\n\t\tfor (let n = nspc - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet spc = space[n];\n\t\t\tsr.x = spc.box.x;\n\t\t\tsr.y = spc.box.y;\n\t\t\tsr.w = spc.box.w;\n\t\t\tsr.h = spc.box.h;\n\t\t\tif (!pr.intersects(sr)) continue; // eliminates most\n\n\t\t\t// see if the spacefiller is inside the parameter polygon\n\t\t\tfor (let i = spc.px.length - 1; i >= 0; i--) if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py))\n\t\t\t{\n\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\thits++;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// see if the parameter polygon is inside the spacefiller\n\t\t\tfor (let i = 0; i < psz; i++) if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py))\n\t\t\t{\n\t\t\t\tif (shortCircuit) return 1;\n\t\t\t\thits++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn hits;\n\t}\n\n\t// considering any bonds between (bf,bt), given that 'bt' is the source of a double bond line at position (x,y) and heading\n\t// out in the direction (dx,dy), make sure that two lines are adjusted to their intersection position; the position of\n\t// the line involving 'bf' is modified directly, while the new position is returned as an array of [x,y], for the caller\n\t// to update\n\tprivate adjustBondPosition(bf:number, bt:number, x1:number, y1:number, x2:number, y2:number):number[]\n\t{\n\t\tif (bf == 0 || bt == 0) return null;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet b = this.lines[n];\n\t\t\tif (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL) continue;\n\n\t\t\tlet alt = false;\n\t\t\tif (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) {}\n\t\t\telse if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf) alt = true;\n\t\t\telse continue;\n\n\t\t\t// if lines are anywhere near parallel, don't do this\n\t\t\t//if (GeomUtil.areLinesParallel(b.x1,b.y1,b.x2,b.y2,x1,y1,x2,y2)) continue; (this is too precise)\n\t\t\tlet th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n\t\t\tif ((th > -5 && th < 5) || th > 175 || th < -175) continue;\n\n\t\t\tlet xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n\n\t\t\t// separate the non-double bond attachments (but only if not in a ring)\n\t\t\tif (this.mol.atomRingBlock(bt) == 0)\n\t\t\t{\n\t\t\t\tif (alt)\n\t\t\t\t\t{b.line.x1 = xy[0]; b.line.y1 = xy[1];}\n\t\t\t\telse\n\t\t\t\t\t{b.line.x2 = xy[0]; b.line.y2 = xy[1];}\n\t\t\t}\n\n\t\t\treturn xy;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// for the guideline index of a double bond, determines which side has weighting priority for the drawing of the bond;\n\t// assumes a chain-like bond (though it could still be in a large ring); a null/empty/ambiguous set implies that there\n\t// is no priority, and that the bond should not be drawn in a side-shifted manner...\n\tprivate priorityDoubleSubstit(idx:number):number[]\n\t{\n\t\tlet bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n\t\tlet nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n\t\tlet a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n\t\tlet x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n\t\tlet dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n\n\t\tlet idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n\n\t\tfor (let n = 0; n < nf.length; n++) if (nf[n] != bt)\n\t\t{\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n\t\t\tif (theta > 0) {if (idxFLeft != 0) return null; idxFLeft = nf[n];}\n\t\t\telse {if (idxFRight != 0) return null; idxFRight = nf[n];}\n\t\t}\n\t\tfor (let n = 0; n < nt.length; n++) if (nt[n] != bf)\n\t\t{\n\t\t\tlet theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n\t\t\tif (theta > 0) {if (idxTLeft != 0) return null; idxTLeft = nt[n];}\n\t\t\telse {if (idxTRight != 0) return null; idxTRight = nt[n];}\n\t\t}\n\n\t\tlet sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n\n\t\tif (sumFrom == 1 && sumTo == 0) return [idxFLeft > 0 ? idxFLeft : idxFRight];\n\t\tif (sumFrom == 0 && sumTo == 1) return [idxTLeft > 0 ? idxTLeft : idxTRight];\n\t\tif (sumFrom == 1 && sumTo == 1)\n\t\t{\n\t\t\t// cis? if so, then side is obvious\n\t\t\tif (idxFLeft > 0 && idxTLeft > 0) return [idxFLeft, idxTLeft];\n\t\t\tif (idxFRight > 0 && idxTRight > 0) return [idxFRight, idxTRight];\n\n\t\t\t// trans? either is fine, so go with congestion\n\t\t\tlet oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n\t\t\tlet congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n\t\t\tlet congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n\t\t\tif (congestLeft < congestRight) return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n\t\t\telse return [idxFRight > 0 ? idxFRight : idxTRight];\n\t\t}\n\t\tif (sumFrom == 2 && sumTo == 1)\n\t\t{\n\t\t\t// side with the majority\n\t\t\tif (idxTLeft == 0) return [idxFRight, idxTRight];\n\t\t\telse return [idxFLeft, idxTLeft];\n\t\t}\n\t\tif (sumFrom == 1 && sumTo == 2)\n\t\t{\n\t\t\t// side with the majority\n\t\t\tif (idxFLeft == 0) return [idxFRight, idxTRight];\n\t\t\telse return [idxFLeft, idxTLeft];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// adding additional non-core annotations, later on in the process; it is assumed that there is no directional preference\n\tprivate annotateAtom(atom:number, text:string, col:number, fsz:number):void\n\t{\n\t\tlet [tw, ta] = this.measure.measureText(text, fsz);\n\t\tlet a = this.points[atom - 1];\n\t\tlet cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n\n\t\tlet otherTheta:number[] = [];\n\t\tfor (let a of this.mol.atomAdjList(atom))\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\n\t\tlet minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n\t\tlet angsteps = 36, angsz = TWOPI / angsteps;\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n\t\tlet px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n\n\t\tlet limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n\t\tlet subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n\n\t\tfor (let step = 0; step < nsteps; step++)\n\t\t{\n\t\t\tlet ext = minExt + step * stepsz;\n\t\t\tfor (let ang = 0; ang < angsteps; ang++)\n\t\t\t{\n\t\t\t\tlet th = angsz * ang;\n\t\t\t\tlet dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, subSpace, false);\n\t\t\t\tlet score = viol * 1000;\n\t\t\t\tfor (let oth of otherTheta) score -= Math.abs(angleDiff(th, oth));\n\n\t\t\t\tif (score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestScore < 500) break;\n\t\t}\n\n\t\tlet x = cx + bestDX, y = cy + bestDY;\n\n\t\t// create a point for it\n\t\tlet an:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(x, y, rw, rh),\n\t\t};\n\t\tthis.points.push(an);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [x - rw, x + rw, x + rw, x - rw],\n\t\t\tpy: [y - rh, y - rh, y + rh, y + rh],\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\tprivate annotateBond(bond:number, text:string, col:number, fsz:number):void\n\t{\n\t\tlet [tw, ta] = this.measure.measureText(text, fsz);\n\t\tlet bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n\t\tlet a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n\t\tlet cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n\n\t\tlet bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n\t\tlet otherTheta:number[] = [bth, bth + Math.PI];\n\t\tfor (let a of this.mol.atomAdjList(bfr)) if (a != bto)\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\t\tfor (let a of this.mol.atomAdjList(bto)) if (a != bfr)\n\t\t{\n\t\t\tlet dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n\t\t\totherTheta.push(Math.atan2(dy, dx));\n\t\t}\n\n\t\tlet minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n\t\tlet angsteps = 36, angsz = TWOPI / angsteps;\n\n\t\t// begin the circular sweep\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n\t\tlet px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n\n\t\tlet limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n\t\tlet subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n\n\t\tfor (let step = 0; step < nsteps; step++)\n\t\t{\n\t\t\tlet ext = minExt + step * stepsz;\n\t\t\tfor (let ang = 0; ang < angsteps; ang++)\n\t\t\t{\n\t\t\t\tlet th = angsz * ang;\n\t\t\t\tlet dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n\t\t\t\tlet x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n\t\t\t\tpx[0] = x1; py[0] = y1;\n\t\t\t\tpx[1] = x2; py[1] = y1;\n\t\t\t\tpx[2] = x2; py[2] = y2;\n\t\t\t\tpx[3] = x1; py[3] = y2;\n\t\t\t\tlet viol = this.countPolyViolations(px, py, subSpace, false);\n\t\t\t\tlet score = viol * 1000;\n\t\t\t\tfor (let oth of otherTheta) score -= Math.abs(angleDiff(th, oth));\n\n\t\t\t\tif (score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDX = dx;\n\t\t\t\t\tbestDY = dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestScore < 500) break;\n\t\t}\n\n\t\tlet x = cx + bestDX, y = cy + bestDY;\n\n\t\t// create a point for it\n\t\tlet an:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext,\n\t\t\tfsz,\n\t\t\tcol,\n\t\t\toval: new Oval(x, y, rw, rh),\n\t\t};\n\t\tthis.points.push(an);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [x - rw, x + rw, x + rw, x - rw],\n\t\t\tpy: [y - rh, y - rh, y + rh, y + rh],\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// returns true if the indicated box intersects with any of the currently defined atom centres or bond lines; can optionally\n\t// pass masks for the points & lines which we could possibly care about\n\tprivate boxOverlaps(x:number, y:number, w:number, h:number, pointmask?:boolean[], linemask?:boolean[]):boolean\n\t{\n\t\tlet vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n\n\t\tfor (let n = 0; n < this.points.length; n++)\n\t\t{\n\t\t\tif (pointmask != null && !pointmask[n]) continue;\n\n\t\t\tlet a = this.points[n];\n\t\t\tlet wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n\n\t\t\t// test for any intersection of rectangles\n\t\t\tif (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2) continue; // no intersection of rectangles\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tif (linemask != null && !linemask[n]) continue;\n\n\t\t\tlet b = this.lines[n];\n\n\t\t\tlet wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n\n\t\t\t// test for any intersection with line's rectangle\n\t\t\tif (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2)) continue; // no intersection of rectangles\n\n\t\t\t// if either point is completely in the box, then fast-out\n\t\t\tif (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2) return true;\n\t\t\tif (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2) return true;\n\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2)) return true;\n\t\t\tif (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2)) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// given the predetermined fact that {bondHigher} crosses {bondLower} with the original coordinates, looks for\n\t// arranged lines matching these indices, so that they might be split up\n\tprivate resolveLineCrossings(bondHigher:number, bondLower:number):void\n\t{\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let i1 = 0; i1 < this.lines.length; i1++)\n\t\t\t{\n\t\t\t\tlet b1 = this.lines[i1];\n\t\t\t\tif (b1.bnum != bondHigher) continue;\n\t\t\t\tif (b1.type != BLineType.Normal && b1.type != BLineType.Dotted && b1.type != BLineType.DotDir) continue;\n\n\t\t\t\tfor (let i2 = 0; i2 < this.lines.length; i2++)\n\t\t\t\t{\n\t\t\t\t\tlet b2 = this.lines[i2];\n\t\t\t\t\t// note: b1 is on top, b2 is on bottom\n\n\t\t\t\t\tif (b2.bnum != bondLower) continue;\n\t\t\t\t\tif (b2.type == BLineType.DotDir) b2.type = BLineType.Dotted; // zap the directionality when splitting in two\n\t\t\t\t\tif (b2.type != BLineType.Normal && b2.type != BLineType.Dotted) continue;\n\n\t\t\t\t\t// make sure they don't share an atom\n\t\t\t\t\tif (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto) continue;\n\n\t\t\t\t\tif (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2)) continue;\n\t\t\t\t\tlet xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n\n\t\t\t\t\tlet dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n\t\t\t\t\tlet ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n\n\t\t\t\t\tlet dist = norm_xy(dx, dy);\n\t\t\t\t\tlet delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n\t\t\t\t\tif (ext > delta && ext < 1 - delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet b3:BLine =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbnum: b2.bnum,\n\t\t\t\t\t\t\tbfr: b2.bfr,\n\t\t\t\t\t\t\tbto: b2.bto,\n\t\t\t\t\t\t\ttype: b2.type,\n\t\t\t\t\t\t\tline: b2.line.clone(),\n\t\t\t\t\t\t\tsize: b2.size,\n\t\t\t\t\t\t\thead: b2.head,\n\t\t\t\t\t\t\tcol: b2.col\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.lines.push(b3);\n\t\t\t\t\t\tb2.line.x2 = b2.line.x1 + dx * (ext - delta);\n\t\t\t\t\t\tb2.line.y2 = b2.line.y1 + dy * (ext - delta);\n\t\t\t\t\t\tb3.line.x1 = b3.line.x1 + dx * (ext + delta);\n\t\t\t\t\t\tb3.line.y1 = b3.line.y1 + dy * (ext + delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (ext > delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tb2.line.x2 = b2.line.x1 + dx * (ext - delta);\n\t\t\t\t\t\tb2.line.y2 = b2.line.y1 + dy * (ext - delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (ext < 1 - delta)\n\t\t\t\t\t{\n\t\t\t\t\t\tb2.line.x1 = b2.line.x1 + dx * (ext + delta);\n\t\t\t\t\t\tb2.line.y1 = b2.line.y1 + dy * (ext + delta);\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// draw a circle at the interior of a group of atoms, as in, ring-style benzene\n\tprivate createCircularRing(atoms:number[]):void\n\t{\n\t\tlet px:number[] = new Array(atoms.length), py:number[] = new Array(atoms.length);\n\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t{\n\t\t\tlet pt = this.points[atoms[n] - 1];\n\t\t\tpx[n] = pt.oval.cx;\n\t\t\tpy[n] = pt.oval.cy;\n\t\t}\n\t\tlet cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n\n\t\tlet bx:number[] = [], by:number[] = [];\n\t\tlet isRegular = true;\n\t\tlet regDist = Number.NaN;\n\t\tconst FRACT = 0.7;\n\t\tfor (let a of atoms)\n\t\t{\n\t\t\tlet pt = this.points[a - 1];\n\t\t\tlet x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n\t\t\tbx.push(x1); by.push(y0);\n\t\t\tbx.push(x1); by.push(y1);\n\t\t\tbx.push(x1); by.push(y2);\n\t\t\tbx.push(x0); by.push(y1);\n\t\t\tbx.push(x0); by.push(y2);\n\t\t\tbx.push(x2); by.push(y0);\n\t\t\tbx.push(x2); by.push(y1);\n\t\t\tbx.push(x2); by.push(y2);\n\t\t\tlet dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n\t\t\tbx.push(FRACT * dist * Math.cos(theta));\n\t\t\tby.push(FRACT * dist * Math.sin(theta));\n\n\t\t\tfor (let b of this.mol.atomAdjList(a)) if (atoms.indexOf(b) >= 0)\n\t\t\t{\n\t\t\t\tlet pb = this.points[b - 1];\n\t\t\t\tlet mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n\t\t\t\tlet mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n\t\t\t\tbx.push(FRACT * mdist * Math.cos(mtheta));\n\t\t\t\tby.push(FRACT * mdist * Math.sin(mtheta));\n\t\t\t}\n\n\t\t\t// check if it's still considered regular\n\t\t\tif (!isRegular) {}\n\t\t\telse if (Number.isFinite(regDist)) {if (Math.abs(regDist - dist) > 1) isRegular = false;}\n\t\t\telse regDist = dist;\n\t\t}\n\n\t\tlet r:XRing = {atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0};\n\t\tif (isRegular)\n\t\t{\n\t\t\tr.rw = r.rh = GeomUtil.fitCircle(bx, by);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*let lowX = Vec.min(bx) - 10 * Vec.range(bx), highX = Vec.max(bx) + 10 * Vec.range(bx);\n\t\t\tlet lowY = Vec.min(by) - 10 * Vec.range(by), highY = Vec.max(by) + 10 * Vec.range(by);\n\t\t\tlet minX = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < atoms.length - 1 ? n + 1 : 0;\n\t\t\t\tlet p1 = this.points[atoms[n] - 1], p2 = this.points[atoms[nn] - 1];\n\t\t\t\tlet x1 = p1.oval.cx - cx - 0.1 * (p2.oval.cx - p1.oval.cx), y1 = p1.oval.cy - cy - 0.1 * (p2.oval.cy - p1.oval.cy);\n\t\t\t\tlet x2 = p2.oval.cx - cx + 0.1 * (p2.oval.cx - p1.oval.cx), y2 = p2.oval.cy - cy + 0.1 * (p2.oval.cy - p1.oval.cy);\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, lowX, 0, highX, 0))\n\t\t\t\t{\n\t\t\t\t\tlet xy = GeomUtil.lineIntersect(x1, y1, x2, y2, lowX, 0, highX, 0);\n\t\t\t\t\tminX = Math.min(minX, xy[0]);\n\t\t\t\t\tmaxX = Math.max(maxX, xy[0]);\n\t\t\t\t}\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, 0, lowY, 0, highY))\n\t\t\t\t{\n\t\t\t\t\tlet xy = GeomUtil.lineIntersect(x1, y1, x2, y2, 0, lowY, 0, highY);\n\t\t\t\t\tminY = Math.min(minY, xy[1]);\n\t\t\t\t\tmaxY = Math.max(maxY, xy[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet rwh = GeomUtil.fitEllipse(bx, by, minX, minY, maxX, maxY);\n\t\t\tr.rw = rwh[0];\n\t\t\tr.rh = rwh[1];*/\n\n\t\t\tlet mdist = 0;\n\t\t\tfor (let n = 0; n < atoms.length; n++) mdist += norm_xy(px[n] - cx, py[n] - cy);\n\t\t\tlet margin = mdist / atoms.length * (1 - FRACT);\n\t\t\tvar fit = new FitRotatedEllipse(px, py, margin);\n\t\t\tfit.calculate();\n\t\t\tr.cx = fit.cx;\n\t\t\tr.cy = fit.cy;\n\t\t\tr.rw = fit.rw;\n\t\t\tr.rh = fit.rh;\n\t\t\tr.theta = fit.theta;\n\t\t}\n\t\tr.size = this.lineSizePix;\n\t\tthis.rings.push(r);\n\t}\n\n\t// draw a continuous fractional bond for resonance-style paths\n\tprivate createCurvedPath(atoms:number[], fractional:boolean, extAtom:number):void\n\t{\n\t\tconst sz = atoms.length, szn = sz - 1;\n\t\tlet x:number[] = [], y:number[] = [], symbol:boolean[] = [];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet pt = this.points[atoms[n] - 1];\n\t\t\tx.push(pt.oval.cx);\n\t\t\ty.push(pt.oval.cy);\n\t\t\tsymbol.push(pt.text != null);\n\t\t}\n\n\t\t// calculate offsets that can be used (+/-) to put the fraction on one side of the path\n\t\tlet ox:number[] = [], oy:number[] = [];\n\t\tconst EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tlet dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n\t\t\tox.push(dy * invD);\n\t\t\toy.push(-dx * invD);\n\t\t}\n\n\t\t// create two paths with these offsets\n\t\tconst FAR = 1.2, CLOSE = 0.7;\n\t\tlet sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n\t\tconst capA = symbol[0] ? FAR : CLOSE;\n\t\tif (!fractional)\n\t\t{\n\t\t\tsx1[0] = x[0] + ox[0] * capA; sy1[0] = y[0] + oy[0] * capA;\n\t\t\tsx2[0] = x[0] - ox[0] * capA; sy2[0] = y[0] - oy[0] * capA;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst dx = -oy[0], dy = ox[0];\n\t\t\tsx1[0] = x[0] + dx * capA; sy1[0] = y[0] + dy * capA;\n\t\t\tsx2[0] = x[0] + dx * capA; sy2[0] = y[0] + dy * capA;\n\t\t}\n\n\t\tlet ncross1 = 0, ncross2 = 0;\n\t\tfor (let n = 1; n < sz - 1; n++)\n\t\t{\n\t\t\tconst fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n\t\t\tsx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]); sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n\t\t\tsx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]); sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n\n\t\t\t// every other bond \"crosses\" one side or the other\n\t\t\tfor (let a of this.mol.atomAdjList(atoms[n])) if (atoms.indexOf(a) < 0 && a != extAtom)\n\t\t\t{\n\t\t\t\tlet pt = this.points[a - 1];\n\t\t\t\tlet dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n\t\t\t\tlet dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n\t\t\t\tlet dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n\t\t\t\tif (dot1 > dot2) ncross1++; else ncross2++; // higher means that the vectors align, hence this is the crosser\n\t\t\t}\n\t\t}\n\n\t\tlet nn = sz - 1;\n\t\tlet capB = symbol[nn] ? FAR : CLOSE;\n\t\tif (!fractional)\n\t\t{\n\t\t\tsx1[nn] = x[nn] + ox[nn - 1] * capB; sy1[nn] = y[nn] + oy[nn - 1] * capB;\n\t\t\tsx2[nn] = x[nn] - ox[nn - 1] * capB; sy2[nn] = y[nn] - oy[nn - 1] * capB;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet dx = -oy[nn - 1], dy = ox[nn - 1];\n\t\t\tsx1[nn] = x[nn] - dx * capB; sy1[nn] = y[nn] - dy * capB;\n\t\t\tsx2[nn] = x[nn] - dx * capB; sy2[nn] = y[nn] - dy * capB;\n\t\t}\n\n\t\t// come up with a score for each one, and pick the best (shortest with fewest bond crossings)\n\t\tlet score1 = 0, score2 = 0;\n\t\tfor (let n = 0; n < sz - 1; n++)\n\t\t{\n\t\t\tscore1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n\t\t\tscore2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n\t\t}\n\t\tscore1 *= ncross1 + 1;\n\t\tscore2 *= ncross2 + 1;\n\n\t\tlet sx = score1 < score2 ? sx1 : sx2;\n\t\tlet sy = score1 < score2 ? sy1 : sy2;\n\n\t\tlet p:XPath = {atoms, px: null, py: null, ctrl: null, size: this.lineSizePix};\n\t\tthis.splineInterpolate(p, sx, sy);\n\t\tthis.paths.push(p);\n\n\t\t// NOTE: no spacefiller; consider adding one\n\t}\n\n\t// create a bond emerging from an atom to a centroid of multiple atoms\n\tprivate createBondCentroid(from:number, to:number[]):void\n\t{\n\t\tlet pt = this.points[from - 1];\n\t\tlet x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n\t\tfor (let a of to)\n\t\t{\n\t\t\tpt = this.points[a - 1];\n\t\t\tx2 += pt.oval.cx;\n\t\t\ty2 += pt.oval.cy;\n\t\t}\n\t\tx2 /= to.length; y2 /= to.length;\n\n\t\t// if the \"centroid\" is a point or line, don't want to hit the middle\n\t\tif (to.length <= 2)\n\t\t{\n\t\t\tx2 -= 0.1 * (x2 - x1);\n\t\t\ty2 -= 0.1 * (y2 - y1);\n\t\t}\n\n\t\tconst minDist = MINBOND_LINE * this.measure.scale();\n\t\tlet xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n\t\tthis.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n\n\t\tlet b:BLine =\n\t\t{\n\t\t\tbnum: 0,\n\t\t\tbfr: from,\n\t\t\tbto: 0,\n\t\t\ttype: BLineType.Normal,\n\t\t\tline: new Line(xy1[0], xy1[1], x2, y2),\n\t\t\tsize: this.lineSizePix,\n\t\t\thead: 0,\n\t\t\tcol: this.policy.data.foreground\n\t\t};\n\t\tthis.lines.push(b);\n\t\tthis.space.push(this.computeSpaceLine(b));\n\t}\n\n\t// turns a series of points into a smooth spline\n\tprivate splineInterpolate(path:XPath, x:number[], y:number[]):void\n\t{\n\t\tconst sz = x.length;\n\t\tconst scale = 0.25; // empirical\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\tlet dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n\t\t\t\tlet qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t\tpath.px = Vec.append(path.px, qx); path.py = Vec.append(path.py, qy); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t}\n\t\t\telse if (n == sz - 1)\n\t\t\t{\n\t\t\t\tlet dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n\t\t\t\tlet qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n\t\t\t\tpath.px = Vec.append(path.px, qx); path.py = Vec.append(path.py, qy); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n\t\t\t\tlet invD = invZ(norm_xy(dx, dy));\n\t\t\t\tdx *= invD; dy *= invD;\n\n\t\t\t\tlet d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n\t\t\t\tlet qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n\t\t\t\tlet qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n\n\t\t\t\tpath.px = Vec.append(path.px, qx1); path.py = Vec.append(path.py, qy1); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t\tpath.px = Vec.append(path.px, x[n]); path.py = Vec.append(path.py, y[n]); path.ctrl = Vec.append(path.ctrl, false);\n\t\t\t\tpath.px = Vec.append(path.px, qx2); path.py = Vec.append(path.py, qy2); path.ctrl = Vec.append(path.ctrl, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t// create a \"delocalised\" charge or unpaired state, which hovers in between a sequence of atoms that are resonance related\n\tprivate delocalisedAnnotation(atoms:number[], charge:number, unpaired:number):void\n\t{\n\t\tconst mol = this.mol;\n\n\t\tlet str = '';\n\t\tif (charge == -1) str = '-';\n\t\telse if (charge == 1) str = '+';\n\t\telse if (charge < -1) str = Math.abs(charge) + '-';\n\t\telse if (charge > 1) str = charge + '+';\n\t\tif (unpaired > 0) for (let n = 0; n < unpaired; n++) str += '.';\n\t\tif (str.length == 0) return;\n\n\t\t// find the least congested point; overall average is first\n\t\tconst sz = atoms.length;\n\t\tlet bestX = 0, bestY = 0;\n\t\tfor (let a of atoms) {bestX += mol.atomX(a); bestY += mol.atomY(a);}\n\t\tbestX /= sz; bestY /= sz;\n\t\tlet bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n\n\t\tfor (let n = 1; n < sz - 1; n++)\n\t\t{\n\t\t\tlet x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n\t\t\tlet score = CoordUtil.congestionPoint(mol, x, y);\n\t\t\tif (score < bestScore) {bestScore = score; bestX = x; bestY = y;}\n\t\t}\n\n\t\tlet fsz = 0.8 * this.fontSizePix;\n\t\tlet wad = this.measure.measureText(str, fsz);\n\t\tlet rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n\n\t\t// create a point for it\n\t\tlet a:APoint =\n\t\t{\n\t\t\tanum: 0,\n\t\t\ttext: str,\n\t\t\tfsz,\n\t\t\tcol: this.policy.data.foreground,\n\t\t\toval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n\t\t};\n\t\tthis.points.push(a);\n\n\t\t// create a square spacefiller\n\t\tlet spc:SpaceFiller =\n\t\t{\n\t\t\tanum: 0,\n\t\t\tbnum: 0,\n\t\t\tbox: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n\t\t\tpx: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n\t\t\tpy: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n\t\t};\n\t\tthis.space.push(spc);\n\t}\n\n\t// draw the brackets that are associated with a\n\tprivate processPolymerUnit(unit:PolymerBlockUnit, allUnits:PolymerBlockUnit[]):void\n\t{\n\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t{\n\t\t\tthis.processPolymerUnitPair(unit);\n\t\t\treturn;\n\t\t}\n\n\t\tinterface Bracket\n\t\t{\n\t\t\ta1?:number; // in-block atom\n\t\t\ta2?:number; // out-block atom\n\t\t\tx1?:number;\n\t\t\ty1?:number;\n\t\t\tx2?:number;\n\t\t\ty2?:number;\n\t\t\tshared?:boolean; // bond is shared with a block coming from the other direction\n\t\t\tnestOrder?:number; // if bond is nested within more than one block, nest/count stored information\n\t\t\tnestCount?:number; // ... on how to render them non-overlapping\n\t\t}\n\t\tlet brackets:Bracket[] = [];\n\n\t\tconst {mol, measure} = this;\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n\t\t\tlet in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n\t\t\tlet bracket:Bracket = null;\n\t\t\tif (in1 && !in2) bracket = {a1, a2};\n\t\t\telse if (in2 && !in1) bracket = {a1: a2, a2: a1};\n\t\t\telse continue;\n\n\t\t\tbracket.x1 = mol.atomX(bracket.a1);\n\t\t\tbracket.y1 = mol.atomY(bracket.a1);\n\t\t\tbracket.x2 = mol.atomX(bracket.a2);\n\t\t\tbracket.y2 = mol.atomY(bracket.a2);\n\n\t\t\tbracket.shared = false;\n\t\t\tfor (let other of allUnits) if (unit !== other && other.atoms.includes(bracket.a2))\n\t\t\t{\n\t\t\t\tbracket.shared = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n\t\t\tif (nestings.length > 1)\n\t\t\t{\n\t\t\t\tnestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n\t\t\t\tfor (let i = 0; i < nestings.length; i++) if (nestings[i] === unit) bracket.nestOrder = i;\n\t\t\t\tbracket.nestCount = nestings.length;\n\t\t\t}\n\n\t\t\tbrackets.push(bracket);\n\t\t}\n\n\t\tlet tagidx = 0;\n\t\tlet atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n\t\tlet minX = Vec.min(atomX), minY = Vec.min(atomY);\n\t\tlet maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n\t\tfor (let n = 1; n < brackets.length; n++)\n\t\t{\n\t\t\tlet b1 = brackets[tagidx], b2 = brackets[n];\n\t\t\tlet score1 = b1.x2 - minX - b1.y2 + minY;\n\t\t\tlet score2 = b2.x2 - minX - b2.y2 + minY;\n\t\t\tif (score2 > score1) tagidx = n;\n\t\t}\n\n\t\tlet isLinear = false, isOuter = false;\n\t\tif (brackets.length == 2)\n\t\t{\n\t\t\tlet left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n\t\t\tlet theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n\t\t\tlet theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n\t\t\tisLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n\t\t}\n\t\telse if (brackets.length == 0)\n\t\t{\n\t\t\tlet ym = 0.5 * (minY + maxY);\n\t\t\tbrackets.push({x1: minX, y1: ym, x2: minX - 1, y2: ym});\n\t\t\tbrackets.push({x1: maxX, y1: ym, x2: maxX + 1, y2: ym});\n\t\t\ttagidx = 1;\n\t\t\tisOuter = true;\n\t\t}\n\n\t\tlet bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n\n\t\tconst BASE_LINE = {bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground};\n\t\tconst BASE_TEXT = {anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground};\n\n\t\tfor (let n = 0; n < brackets.length; n++)\n\t\t{\n\t\t\tlet bracket = brackets[n];\n\t\t\tlet x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n\t\t\tlet x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n\t\t\tif (bracket.shared)\n\t\t\t{\n\t\t\t\tx2 -= (x2 - x1) * 0.1;\n\t\t\t\ty2 -= (y2 - y1) * 0.1;\n\t\t\t}\n\t\t\tif (bracket.nestCount > 1)\n\t\t\t{\n\t\t\t\tlet dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n\t\t\t\tx2 = x1 + dx * fract;\n\t\t\t\ty2 = y1 + dy * fract;\n\t\t\t}\n\t\t\tlet mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n\t\t\tif (isLinear)\n\t\t\t{\n\t\t\t\tx1 = x2 = mx;\n\t\t\t\ty1 = y2 = my;\n\t\t\t\tif (n == tagidx)\n\t\t\t\t\t{x1--; x2++;}\n\t\t\t\telse\n\t\t\t\t\t{x1++; x2--;}\n\t\t\t}\n\t\t\tlet invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n\t\t\tlet dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n\t\t\tlet ox = dy, oy = -dx;\n\n\t\t\tlet px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n\t\t\tlet px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n\t\t\tlet px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n\t\t\tlet px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n\n\t\t\tlet line1 = {...BASE_LINE, 'line': new Line(px1, py1, px2, py2)};\n\t\t\tlet line2 = {...BASE_LINE, 'line': new Line(px2, py2, px3, py3)};\n\t\t\tlet line3 = {...BASE_LINE, 'line': new Line(px3, py3, px4, py4)};\n\t\t\tthis.lines.push(line1);\n\t\t\tthis.lines.push(line2);\n\t\t\tthis.lines.push(line3);\n\t\t\tthis.space.push(this.computeSpaceLine(line1));\n\t\t\tthis.space.push(this.computeSpaceLine(line2));\n\t\t\tthis.space.push(this.computeSpaceLine(line3));\n\n\t\t\tif (n == tagidx)\n\t\t\t{\n\t\t\t\tlet xx:number, yy:number;\n\t\t\t\tif (bracket.shared)\n\t\t\t\t\t[xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n\t\t\t\telse\n\t\t\t\t\t[xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n\n\t\t\t\tlet pt1 = {...BASE_TEXT, 'text': 'n', 'oval': new Oval(xx, yy, 0, 0)};\n\t\t\t\tthis.points.push(pt1);\n\t\t\t\tthis.space.push(this.computeSpacePoint(pt1));\n\n\t\t\t\tif (unit.connect != null)\n\t\t\t\t{\n\t\t\t\t\tlet text = '?';\n\t\t\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) text = 'ht';\n\t\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) text = 'hh';\n\t\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) text = 'eu';\n\n\t\t\t\t\tif (bracket.shared)\n\t\t\t\t\t\t[xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n\t\t\t\t\telse\n\t\t\t\t\t\t[xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n\n\t\t\t\t\tlet pt2 = {...BASE_TEXT, 'text': text, 'oval': new Oval(xx, yy, 0, 0)};\n\t\t\t\t\tthis.points.push(pt2);\n\t\t\t\t\tthis.space.push(this.computeSpacePoint(pt2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// special case: 2x2, double-up the brackets\n\tprivate processPolymerUnitPair(unit:PolymerBlockUnit):void\n\t{\n\t\tconst {mol, measure} = this;\n\n\t\tlet xpos:number[] = [], ypos:number[] = [];\n\t\tfor (let b of unit.bondConn)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n\t\t\txpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n\t\t\typos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n\t\t}\n\n\t\tlet cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n\t\tlet bsz = 0.5 * this.scale;\n\t\tlet rx:number[] = [], ry:number[] = [];\n\n\t\tfor (let [i1, i2] of [[0, 1], [2, 3]])\n\t\t{\n\t\t\tlet dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n\t\t\t[dx, dy] = [dx * inv, dy * inv];\n\t\t\txpos[i1] -= 2 * dx;\n\t\t\typos[i1] -= 2 * dy;\n\t\t\txpos[i2] += 2 * dx;\n\t\t\typos[i2] += 2 * dy;\n\t\t\tlet ox = dy, oy = -dx;\n\t\t\tlet dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n\t\t\tlet dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n\t\t\tif (dsq2 < dsq1) [ox, oy] = [-ox, -oy];\n\t\t\trx.push(...[ox, ox]);\n\t\t\try.push(...[oy, oy]);\n\t\t}\n\n\t\tconst BASE_LINE = {bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground};\n\t\tconst BASE_TEXT = {anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground};\n\n\t\tlet drawLine = (x1:number, y1:number, x2:number, y2:number):void =>\n\t\t{\n\t\t\tlet line = {...BASE_LINE, 'line': new Line(x1, y1, x2, y2)};\n\t\t\tthis.lines.push(line);\n\t\t\tthis.space.push(this.computeSpaceLine(line));\n\t\t};\n\t\tlet drawText = (x:number, y:number, txt:string):void =>\n\t\t{\n\t\t\tlet pt = {...BASE_TEXT, 'text': txt, 'oval': new Oval(x, y, 0, 0)};\n\t\t\tthis.points.push(pt);\n\t\t\tthis.space.push(this.computeSpacePoint(pt));\n\t\t};\n\n\t\tdrawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n\t\tdrawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n\t\tdrawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n\n\t\tdrawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n\t\tdrawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n\t\tdrawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n\n\t\tlet xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n\t\tlet dist:number[] = [];\n\t\tfor (let n = 0; n < 4; n++) dist.push(xpos[n] - xmin + ypos[n] - ymin);\n\t\tlet idxN = Vec.idxMax(dist); // \"bottom right\" or equivalent\n\t\tdrawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n\n\t\tlet idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n\t\tdrawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n\t\tdrawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {fltEqual} from '../util/util';\n\n/*\n\tDetermines a series of numeric labels to describe an axis, and makes sure all these labels fit within the given width.\n\tThe min & max is described in the units of spacing along the axis, i.e. if this is a log scale, the numbers should be\n\tpost-log. The caller provides a function to transform the axis units back to the original units (e.g. log to pre-log).\n\tThe caller also provides a width measurement for the text. The full capabilities are appropriate for labelling an X-axis;\n\tfor a Y-axis, typically set the textWidth function to the height of the standard font.\n*/\n\nexport interface AxisLabellerNotch\n{\n\tlabel:string; // what precisely to display (null = just a notch, no label)\n\tvalue:number; // value in the original space\n\tpos:number; // axis position of notch, and the centre of the text label\n}\n\nexport class AxisLabeller\n{\n\tpublic notches:AxisLabellerNotch[] = [];\n\n\tconstructor(private width:number, private minVal:number, private maxVal:number,\n\t\t\t\tpublic textWidth?:(str:string) => number, public inverse?:(val:number) => number)\n\t{\n\t}\n\n\t// performs the calculation: after completion, the notches property should be interrogated for the results\n\tpublic calculate():void\n\t{\n\t\tif (this.minVal == this.maxVal)\n\t\t{\n\t\t\tthis.notches.push(\n\t\t\t{\n\t\t\t\tlabel: this.minVal.toString(),\n\t\t\t\tvalue: this.minVal,\n\t\t\t\tpos: 0.5 * this.width\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = this.width, minVal = this.minVal, maxVal = this.maxVal;\n\t\tconst range = maxVal - minVal, invRange = 1.0 / range;\n\n\t\tlet position = (val:number):number => width * (val - minVal) * invRange;\n\n\t\t// find boundaries by rounding the minimum & maximum values, such that they can be squeezed into the edge zones of the axis\n\t\tlet loT:number = null, hiT:number = null;\n\t\tconst bumpLess = 1 - 1E-5, bumpMore = 1 + 1E-5;\n\t\tgot: for (let outer = 1E-10; outer <= 1E11; outer *= 10) for (let inner of [0.2, 0.5, 1])\n\t\t{\n\t\t\tlet mag = outer * inner, inv = 1.0 / mag;\n\n\t\t\tlet t1 = Math.floor(minVal * mag * bumpLess) * inv, t2 = Math.round(minVal * mag) * inv, t3 = Math.ceil(minVal * mag * bumpMore) * inv;\n\t\t\tlet t4 = Math.floor(maxVal * mag * bumpLess) * inv, t5 = Math.round(maxVal * mag) * inv, t6 = Math.ceil(maxVal * mag * bumpMore) * inv;\n\t\t\tlet p1 = position(t1), p2 = position(t2), p3 = position(t3);\n\t\t\tlet p4 = position(t4), p5 = position(t5), p6 = position(t6);\n\n\t\t\tif ((fltEqual(p1, 0) || p1 >= 0) && p1 <= 0.1 * width) loT = t1;\n\t\t\telse if ((fltEqual(p2, 0) || p2 >= 0) && p2 <= 0.1 * width) loT = t2;\n\t\t\telse if ((fltEqual(p3, 0) || p3 >= 0) && p3 <= 0.1 * width) loT = t3;\n\t\t\telse continue;\n\n\t\t\tif (p6 >= 0.9 * width && (fltEqual(p6, width) || p6 <= width)) hiT = t6;\n\t\t\telse if (p5 >= 0.9 * width && (fltEqual(p5, width) || p5 <= width)) hiT = t5;\n\t\t\telse if (p4 >= 0.9 * width && (fltEqual(p4, width) || p4 <= width)) hiT = t4;\n\t\t\telse continue;\n\n\t\t\t// (record the mag, for subsequent spacing purposes?)\n\t\t\tbreak got;\n\t\t}\n\n\t\tif (loT == null || hiT == null) return; // should be very rare\n\n\t\t// NOTE: this is incomplete; but putting in two anchor points is better than nothing\n\n\t\tlet loVal = this.inverse(loT), hiVal = this.inverse(hiT);\n\t\tthis.notches.push(\n\t\t{\n\t\t\tlabel: this.formatNumber(loVal),\n\t\t\tvalue: loVal,\n\t\t\tpos: position(loT)\n\t\t});\n\t\tthis.notches.push(\n\t\t{\n\t\t\tlabel: this.formatNumber(hiVal),\n\t\t\tvalue: hiVal,\n\t\t\tpos: position(hiT)\n\t\t});\n\t}\n\n\t// ------------ private methods ------------\n\n\t// round to a reasonable number of significant figures, then eliminate the cruft\n\tprivate formatNumber(num:number):string\n\t{\n\t\tlet str = num.toPrecision(4);\n\t\tstr = str.replace(/^(-?\\d+)\\.0+$/, '$1');\n\t\tstr = str.replace(/^(-?\\d+\\.0*[1-9]+)0+$/, '$1');\n\t\tstr = str.replace(/^(-?\\d+)\\.0+(e[\\+\\-]\\d+)$/, '$1$2');\n\t\tstr = str.replace(/^(-?\\d+\\.0*[1-9]+)0+(e[\\+\\-]\\d+)$/, '$1$2');\n\t\treturn str;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentEntry} from '../aspect/Experiment';\nimport {MolUtil} from '../mol/MolUtil';\nimport {invZ, norm_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeComponent, ArrangeComponentAnnot, ArrangeComponentType, ArrangeExperiment} from './ArrangeExperiment';\nimport {ArrangeMeasurement} from './ArrangeMeasurement';\nimport {ArrangeMolecule} from './ArrangeMolecule';\nimport {DrawMolecule} from './DrawMolecule';\nimport {MetaVector, TextAlign} from './MetaVector';\nimport {RenderEffects, RenderPolicy} from './Rendering';\n\n/*\n\tControlling class for drawing a molecule in a vector graphics format: this turns an \"arranged molecule\" instance into the series of primitives that\n\tcan be mapped directly to a rendering engine or output format, as encapsulated by the VectorGfxBuilder subclasses.\n\n\tNote that in this implementation of rendering, only the molecule is drawn, without interactive effects. The constructor/draw/build sequence should be\n\tcalled only once during the lifetime of this object.\n*/\n\nexport class DrawExperiment\n{\n\tprivate entry:ExperimentEntry;\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// optional hooks to intercept rendering\n\tpublic preDrawComponent:(vg:MetaVector, idx:number, xc:ArrangeComponent) => void = null;\n\tpublic preDrawMolecule:(vg:MetaVector, idx:number, xc:ArrangeComponent, arrmol:ArrangeMolecule) => void = null;\n\tpublic postDrawMolecule:(vg:MetaVector, idx:number, xc:ArrangeComponent, arrmol:ArrangeMolecule) => void = null;\n\n\tpublic molDrawn:ArrangeMolecule[] = []; // useful to obtain later, sometimes\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeExperiment, private vg:MetaVector)\n\t{\n\t\tthis.entry = layout.entry;\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\t// debug: draw outlines of components\n\t\t//for (let xc of this.layout.components) this.vg.drawRect(xc.box.x, xc.box.y, xc.box.w, xc.box.h, MetaVector.NOCOLOUR, 0, 0xF0000000);\n\n\t\tthis.molDrawn = Vec.anyArray(null, this.layout.components.length);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet xc = this.layout.components[n];\n\t\t\tif (xc.type == ArrangeComponentType.Arrow) this.drawSymbolArrow(xc);\n\t\t\telse if (xc.type == ArrangeComponentType.Plus) this.drawSymbolPlus(xc);\n\t\t\telse this.drawComponent(n, xc);\n\t\t}\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawComponent(idx:number, xc:ArrangeComponent):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet bx = xc.box.x + xc.padding, by = xc.box.y + xc.padding;\n\t\tlet bw = xc.box.w - 2 * xc.padding, bh = xc.box.h - 2 * xc.padding;\n\n\t\tif (this.preDrawComponent) this.preDrawComponent(vg, idx, xc);\n\n\t\tif (xc.srcIdx < 0 && MolUtil.isBlank(xc.mol) && Vec.isBlank(xc.text))\n\t\t{\n\t\t\tlet fsz = 0.5 * bh;\n\t\t\tvg.drawText(bx + 0.5 * bw, by + 0.5 * bh, '?', fsz, policy.data.foreground, TextAlign.Centre | TextAlign.Middle);\n\t\t\treturn;\n\t\t}\n\n\t\t//vg.drawRect(bx, by, bw, bh, 0xFF0000, 2, null);\n\n\t\tif (Vec.notBlank(xc.text))\n\t\t{\n\t\t\tlet wad = this.measure.measureText('!', xc.fszText), th = wad[1] + wad[2];\n\t\t\tlet totalH = th * xc.text.length;\n\n\t\t\t//vg.drawRect(bx, by + bh - totalH, bw, totalH, 0x00FF00, 1, null);\n\n\t\t\tlet ty = by + bh - th * (xc.text.length - 1);\n\t\t\tfor (let line of xc.text)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line, xc.fszText);\n\t\t\t\t/* !! text has to be wrapped: need features for this, in some static module...\n\t\t\t\tif (tsz.width>limitBounds.width) tsz=textSizeWithin(xc.text,fontText,limitBounds,NSLineBreakByCharWrapping);\n\t\t\t\t... in DrawUtil\t*/\n\t\t\t\tvg.drawText(bx + 0.5 * bw, ty, line, xc.fszText, policy.data.foreground, TextAlign.Centre | TextAlign.Baseline);\n\t\t\t\tty += th;\n\t\t\t}\n\n\t\t\tbh -= totalH + 0.5 * xc.fszText;\n\t\t}\n\n\t\t//vg.drawRect(bx, by, bw, bh, 0x0000FF, 1, null);\n\n\t\tlet stoichPos:{tx?:number, th?:number, lx?:number, lw?:number} = {};\n\t\tif (xc.leftNumer)\n\t\t{\n\t\t\tlet wad1 = this.measure.measureText(xc.leftNumer, xc.fszLeft);\n\t\t\tif (!xc.leftDenom)\n\t\t\t{\n\t\t\t\tstoichPos.tx = bx;\n\t\t\t\tlet useW = wad1[0] + ArrangeExperiment.COMP_GAP_LEFT * (wad1[1] + wad1[2]);\n\t\t\t\tbx += useW;\n\t\t\t\tbw -= useW;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet wad2 = this.measure.measureText(xc.leftDenom, xc.fszLeft);\n\t\t\t\tlet tw = Math.max(wad1[0], wad2[0]);\n\t\t\t\tlet x = bx + 0.5 * tw, y = by + 0.5 * bh;\n\t\t\t\tstoichPos.tx = x;\n\t\t\t\tstoichPos.th = wad1[2];\n\t\t\t\tstoichPos.lx = bx;\n\t\t\t\tstoichPos.lw = tw;\n\t\t\t\tlet useW = tw + ArrangeExperiment.COMP_GAP_LEFT * (wad1[1] + wad1[2]);\n\t\t\t\tbx += useW;\n\t\t\t\tbw -= useW;\n\t\t\t}\n\t\t}\n\t\tif (xc.annot != 0)\n\t\t{\n\t\t\tlet aw = ArrangeExperiment.COMP_ANNOT_SIZE * this.scale;\n\t\t\tbw -= aw;\n\t\t\tthis.drawAnnotation(xc.annot, bx + bw, by, aw, bh);\n\t\t}\n\n\t\tlet baseY = by + 0.5 * bh;\n\t\tif (MolUtil.notBlank(xc.mol))\n\t\t{\n\t\t\tlet effects = new RenderEffects();\n\t\t\tif (this.layout.includeAtomMap)\n\t\t\t{\n\t\t\t\teffects.atomDecoText = Vec.stringArray('', xc.mol.numAtoms);\n\t\t\t\teffects.atomDecoCol = Vec.numberArray(this.layout.colourAtomMap, xc.mol.numAtoms);\n\t\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, xc.mol.numAtoms);\n\t\t\t\tfor (let n = 1; n <= xc.mol.numAtoms; n++) if (xc.mol.atomMapNum(n) > 0) effects.atomDecoText[n - 1] = xc.mol.atomMapNum(n).toString();\n\t\t\t}\n\n\t\t\tlet usePolicy = policy;\n\t\t\tif (xc.monochromeColour != null)\n\t\t\t{\n\t\t\t\tusePolicy = usePolicy.clone();\n\t\t\t\tusePolicy.data.foreground = xc.monochromeColour;\n\t\t\t\tusePolicy.data.atomCols = Vec.numberArray(xc.monochromeColour, usePolicy.data.atomCols.length);\n\t\t\t}\n\n\t\t\tlet arrmol = new ArrangeMolecule(xc.mol, this.layout.measure, usePolicy, effects);\n\t\t\tarrmol.arrange();\n\t\t\tarrmol.squeezeInto(bx, by, bw, bh, 0);\n\t\t\tbaseY = this.calculateMoleculeBaseline(arrmol) ?? baseY;\n\n\t\t\tif (this.preDrawMolecule) this.preDrawMolecule(vg, idx, xc, arrmol);\n\n\t\t\tlet drawmol = new DrawMolecule(arrmol, vg);\n\t\t\tdrawmol.draw();\n\n\t\t\tif (this.postDrawMolecule) this.postDrawMolecule(vg, idx, xc, arrmol);\n\n\t\t\tthis.molDrawn[idx] = arrmol;\n\t\t}\n\n\t\tif (xc.leftNumer && !xc.leftDenom)\n\t\t{\n\t\t\tvg.drawText(stoichPos.tx, baseY, xc.leftNumer, xc.fszLeft, policy.data.foreground, TextAlign.Left | TextAlign.Middle);\n\t\t}\n\t\telse if (xc.leftNumer && xc.leftDenom)\n\t\t{\n\t\t\tvg.drawText(stoichPos.tx, baseY, xc.leftNumer, xc.fszLeft, policy.data.foreground, TextAlign.Centre | TextAlign.Bottom);\n\t\t\tvg.drawText(stoichPos.tx, baseY + stoichPos.th, xc.leftDenom, xc.fszLeft, policy.data.foreground, TextAlign.Centre | TextAlign.Top);\n\t\t\tvg.drawLine(stoichPos.lx, baseY, stoichPos.lx + stoichPos.lw, baseY, policy.data.foreground, this.scale * 0.03);\n\t\t}\n\t}\n\tprivate drawSymbolArrow(xc:ArrangeComponent):void\n\t{\n\t\tlet bx = xc.box.x + xc.padding, by = xc.box.y + xc.padding;\n\t\tlet bw = xc.box.w - 2 * xc.padding, bh = xc.box.h - 2 * xc.padding;\n\n\t\tif (bw > bh)\n\t\t\tthis.drawArrow(bx, by + 0.5 * bh, bx + bw, by + 0.5 * bh, bh, this.policy.data.foreground, this.scale * 0.05);\n\t\telse\n\t\t\tthis.drawArrow(bx + 0.5 * bw, by, bx + 0.5 * bw, by + bh, bw, this.policy.data.foreground, this.scale * 0.05);\n\t}\n\tprivate drawSymbolPlus(xc:ArrangeComponent):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet x1 = xc.box.x + xc.padding, y1 = xc.box.y + xc.padding;\n\t\tlet x3 = x1 + xc.box.w - 2 * xc.padding, y3 = y1 + xc.box.h - 2 * xc.padding;\n\t\tlet x2 = 0.5 * (x1 + x3), y2 = 0.5 * (y1 + y3);\n\t\tlet lw = 0.2 * 0.5 * (x3 - x1 + y3 - y1);\n\n\t\tvg.drawLine(x1, y2, x3, y2, policy.data.foreground, lw);\n\t\tvg.drawLine(x2, y1, x2, y3, policy.data.foreground, lw);\n\t}\n\tprivate drawAnnotation(annot:number, bx:number, by:number, bw:number, bh:number):void\n\t{\n\t\tlet vg = this.vg, policy = this.policy;\n\t\tlet sz = bw, x2 = bx + bw, y2 = by + bh, x1 = x2 - sz, y1 = by;\n\t\tif (annot == ArrangeComponentAnnot.Primary) y2 = y1 + sz;\n\t\telse if (annot == ArrangeComponentAnnot.Waste) y1 = y2 - sz;\n\n\t\t//vg.drawRect(x1,y1,x2-x1,y2-y1,0x000000,1,NOCOLOUR);\n\n\t\tif (annot == ArrangeComponentAnnot.Primary)\n\t\t{\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ext = 0.25 * sz;\n\t\t\tlet px = [cx, cx + 0.866 * ext, cx + 0.866 * ext, cx, cx - 0.866 * ext, cx - 0.866 * ext];\n\t\t\tlet py = [cy - ext, cy - 0.5 * ext, cy + 0.5 * ext, cy + ext, cy + 0.5 * ext, cy - 0.5 * ext];\n\t\t\tlet lw = 0.05 * this.scale;\n\t\t\tvg.drawLine(px[0], py[0], px[3], py[3], policy.data.foreground, lw);\n\t\t\tvg.drawLine(px[1], py[1], px[4], py[4], policy.data.foreground, lw);\n\t\t\tvg.drawLine(px[2], py[2], px[5], py[5], policy.data.foreground, lw);\n\t\t\tlet inset = 0.1 * sz;\n\t\t\tvg.drawOval(x1 + 0.5 * sz, y1 + 0.5 * sz, 0.5 * sz - inset, 0.5 * sz - inset, policy.data.foreground, lw, MetaVector.NOCOLOUR);\n\t\t}\n\t\telse if (annot == ArrangeComponentAnnot.Waste)\n\t\t{\n\t\t\tlet cx = x1 + 0.7 * sz, cy = 0.5 * (y1 + y2), quart = 0.25 * sz;\n\t\t\tlet lw = 0.05 * this.scale;\n\n\t\t\tlet px = [x1 + 0.1 * sz, cx - quart, cx, cx, cx];\n\t\t\tlet py = [y1, y1, y1, cy - quart, cy];\n\t\t\tlet ctrl = [false, false, true, false, false];\n\t\t\tvg.drawPath(px, py, ctrl, false, policy.data.foreground, lw, MetaVector.NOCOLOUR, false);\n\n\t\t\tfor (let n = 0; n < 4; n++)\n\t\t\t{\n\t\t\t\tlet y = cy + n * 0.45 * sz * (1.0 / 3), dw = (3.1 - n) * 0.1 * sz;\n\t\t\t\tvg.drawLine(cx - dw, y, cx + dw, y, policy.data.foreground, lw);\n\t\t\t}\n\t\t}\n\t\telse if (annot == ArrangeComponentAnnot.Implied)\n\t\t{\n\t\t\tlet tw = 0.5 * sz, th = 0.75 * sz;\n\t\t\tlet cx = x2 - 0.5 * tw, cy = y1 + 0.5 * th;\n\t\t\tlet ty = y1 + 0.25 * th, dsz = sz * 0.1, hsz = 0.5 * dsz;\n\t\t\tlet lw = 0.05 * this.scale, fg = policy.data.foreground;\n\n\t\t\tvg.drawLine(cx, y1, cx, y1 + th, fg, lw);\n\t\t\tvg.drawLine(x2 - tw, ty, x2, ty, fg, lw);\n\t\t\tvg.drawLine(x2 - tw, cy, x2, cy, fg, lw);\n\t\t\tvg.drawOval(x2 - tw + hsz, y1 + th - hsz, hsz, hsz, 0, 0, fg);\n\t\t\tvg.drawOval(x2 - hsz, y1 + th - hsz, hsz, hsz, 0, 0, fg);\n\t\t}\n\t}\n\n\tprivate drawArrow(x1:number, y1:number, x2:number, y2:number, headsz:number, colour:number, linesz:number):void\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy));\n\t\tdx *= invD;\n\t\tdy *= invD;\n\t\tlet ox = dy, oy = -dx;\n\t\tlet hx = x2 - dx * headsz, hy = y2 - dy * headsz;\n\t\tlet px =\n\t\t[\n\t\t\tx1 + ox * 0.5 * linesz,\n\t\t\thx + ox * 0.5 * linesz,\n\t\t\thx + ox * 0.5 * headsz,\n\t\t\tx2,\n\t\t\thx - ox * 0.5 * headsz,\n\t\t\thx - ox * 0.5 * linesz,\n\t\t\tx1 - ox * 0.5 * linesz\n\t\t];\n\t\tlet py =\n\t\t[\n\t\t\ty1 + oy * 0.5 * linesz,\n\t\t\thy + oy * 0.5 * linesz,\n\t\t\thy + oy * 0.5 * headsz,\n\t\t\ty2,\n\t\t\thy - oy * 0.5 * headsz,\n\t\t\thy - oy * 0.5 * linesz,\n\t\t\ty1 - oy * 0.5 * linesz\n\t\t];\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, colour, true);\n\t}\n\n\t// finds a Y-position that runs through approximately the centre of the molecule, for purposes of sub-positioning; returns null if there's nothing\n\t// really meaningful\n\tprivate calculateMoleculeBaseline(arrmol:ArrangeMolecule):number\n\t{\n\t\tlet mol = arrmol.getMolecule();\n\t\tlet midY = mol.boundary().midY();\n\t\tlet ax = Number.POSITIVE_INFINITY, ay:number = null, baseY:number = null;\n\t\tconst TOLERANCE = 0.1;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tif (Math.abs(y - midY) < TOLERANCE && x < ax)\n\t\t\t{\n\t\t\t\t[ax, ay] = [x, y];\n\t\t\t\tbaseY = arrmol.getPoint(n - 1).oval.cy;\n\t\t\t}\n\t\t}\n\n\t\treturn baseY;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2024 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n    [PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, DEGRAD, invZ, norm2_xy, norm_xy} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ArrangeMolecule, BLine, BLineType} from './ArrangeMolecule';\nimport {MetaVector, TextAlign} from './MetaVector';\nimport {RenderEffects, RenderMnemonics, RenderMnemonicType, RenderPolicy} from './Rendering';\n\n/*\n    Controlling class for drawing a molecule in a vector graphics format: this turns an \"arranged molecule\" instance into the series of primitives that\n    can be mapped directly to a rendering engine or output format, as encapsulated by the VectorGfxBuilder subclasses.\n\n    Note that in this implementation of rendering, only the molecule is drawn, without interactive effects. The constructor/draw/build sequence should be\n    called only once during the lifetime of this object.\n*/\n\nexport class DrawMolecule\n{\n\tpublic mnemonics:RenderMnemonics = null; // set this externally to request\n\n\tprivate mol:Molecule;\n\tprivate policy:RenderPolicy;\n\tprivate effects:RenderEffects;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\tconstructor(private layout:ArrangeMolecule, private vg:MetaVector)\n\t{\n\t\tthis.mol = layout.getMolecule();\n\t\tthis.policy = layout.getPolicy();\n\t\tthis.effects = layout.getEffects();\n\t\tthis.scale = layout.getScale();\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// access to content\n\tpublic getMolecule():Molecule {return this.mol;}\n\tpublic getMetaVector():MetaVector {return this.vg;}\n\tpublic getLayout():ArrangeMolecule {return this.layout;}\n\tpublic getPolicy():RenderPolicy {return this.policy;}\n\tpublic getEffects():RenderEffects {return this.effects;}\n\n\t// renders the molecular structure\n\tpublic draw():void\n\t{\n\t\t// debugging: draw the \"space filling\" areas-to-avoid\n\t\tlet DRAW_SPACE = false;\n\t\tif (DRAW_SPACE)\n\t\t{\n\t\t\tlet bounds = this.layout.determineBoundary();\n\t\t\tthis.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n\t\t\tfor (let n = 0; n < this.layout.numSpace(); n++)\n\t\t\t{\n\t\t\t\tlet spc = this.layout.getSpace(n);\n\t\t\t\tthis.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n\t\t\t\tif (spc.px != null && spc.py != null && spc.px.length > 2) this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.drawUnderEffects();\n\n\t\t// emit the drawing elements as vector primitives\n\n\t\tlet {mol, layout, effects, policy, vg} = this;\n\n\t\t// special deal: bonds that are drawn together\n\t\tlet hideBonds = new Set<number>(effects.hideBonds);\n\t\tfor (let i = 1; i <= mol.numBonds; i++) if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i))\n\t\t{\n\t\t\tlet atom = mol.bondTo(i);\n\t\t\tif (layout.getPoint(atom - 1).text) continue; // invisible carbon only\n\t\t\tfor (let j of mol.atomAdjBonds(atom)) if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j))\n\t\t\t{\n\t\t\t\tlet b1 = layout.getLines().find((b) => b.bnum == i);\n\t\t\t\tlet b2 = layout.getLines().find((b) => b.bnum == j);\n\n\t\t\t\tlet th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n\t\t\t\tlet th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n\t\t\t\tif (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tthis.drawFusedWedge(b1, b2);\n\t\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n\t\t\t\t\thideBonds.add(i);\n\t\t\t\t\thideBonds.add(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < layout.numLines(); n++)\n\t\t{\n\t\t\tlet b = layout.getLine(n);\n\t\t\tif (hideBonds.has(b.bnum)) continue;\n\n\t\t\tif (b.type == BLineType.Normal)\n\t\t\t{\n\t\t\t\tvg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Inclined)\n\t\t\t{\n\t\t\t\tthis.drawBondInclined(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Declined)\n\t\t\t{\n\t\t\t\tthis.drawBondDeclined(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Unknown)\n\t\t\t{\n\t\t\t\tthis.drawBondUnknown(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.Dotted || b.type == BLineType.DotDir)\n\t\t\t{\n\t\t\t\tthis.drawBondDotted(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t\telse if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple)\n\t\t\t{\n\t\t\t\tthis.drawBondIncMulti(b);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n\t\t\t}\n\t\t}\n\n\t\tlet fg = policy.data.foreground;\n\t\tfor (let r of layout.getRings())\n\t\t{\n\t\t\tif (r.theta != 0)\n\t\t\t{\n\t\t\t\tvar bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n\t\t\t\tvg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n\t\t\t}\n\t\t}\n\t\tfor (let p of layout.getPaths())\n\t\t{\n\t\t\tvg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n\t\t}\n\n\t\tfor (let n = 0; n < layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = layout.getPoint(n);\n\t\t\tif (effects.hideAtoms.has(p.anum)) continue;\n\n\t\t\tlet txt = p.text;\n\t\t\tlet cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n\t\t\tif (txt == null)\n\t\t\t{\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n\t\t\t\tcontinue; // is a point, so do not draw anything\n\t\t\t}\n\t\t\tlet fsz = p.fsz;\n\t\t\tlet col = p.col;\n\n\t\t\twhile (txt.endsWith('.'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet r = fsz * 0.15;\n\t\t\t\tvg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n\n\t\t\t\tcx -= dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(0, txt.length - 1);\n\t\t\t}\n\t\t\twhile (txt.startsWith('+'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n\t\t\t\tvg.drawLine(x - r, y, x + r, y, col, lsz);\n\t\t\t\tvg.drawLine(x, y - r, x, y + r, col, lsz);\n\n\t\t\t\tcx += dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(1, txt.length);\n\t\t\t}\n\t\t\twhile (txt.startsWith('-'))\n\t\t\t{\n\t\t\t\tlet dw = rw / txt.length;\n\t\t\t\tlet x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n\t\t\t\tvg.drawLine(x - r, y, x + r, y, col, lsz);\n\n\t\t\t\tcx += dw;\n\t\t\t\trw -= dw;\n\t\t\t\ttxt = txt.substring(1, txt.length);\n\t\t\t}\n\t\t\tif (txt.length > 0)\n\t\t\t{\n\t\t\t\tvg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n\t\t\t\tthis.mnemonics?.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n\t\t\t}\n\t\t\telse this.mnemonics?.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n\t\t}\n\n\t\tthis.drawOverEffects();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate drawUnderEffects():void\n\t{\n\t\tlet mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n\n\t\tfor (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++)\n\t\t{\n\t\t\tif (effects.hideAtoms.has(n + 1)) continue;\n\n\t\t\tlet dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n\t\t\tlet a = layout.getPoint(n);\n\n\t\t\tlet rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n\t\t\tlet wdots = Math.ceil(2 * rw / (3 * dw));\n\t\t\tlet hdots = Math.ceil(2 * rh / (3 * dw));\n\t\t\tlet wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n\n\t\t\tfor (let i = 0; i <= wdots; i++)\n\t\t\t{\n\t\t\t\tlet x = a.oval.cx - rw + i * wspc;\n\t\t\t\tvg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\t\t\tfor (let i = 1; i < hdots; i++)\n\t\t\t{\n\t\t\t\tlet y = a.oval.cy - rh + i * hspc;\n\t\t\t\tvg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n\t\t}\n\n\t\tfor (let key in effects.dottedRectOutline)\n\t\t{\n\t\t\tlet atom = parseInt(key), col = effects.dottedRectOutline[key];\n\t\t\tlet a = layout.getPoint(atom - 1);\n\t\t\tlet rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n\t\t\tlet sz = 0.05 * scale;\n\t\t\tlet xdots = Math.max(1, Math.round(rw / (2 * sz)));\n\t\t\tlet ydots = Math.max(1, Math.round(rh / (2 * sz)));\n\t\t\tlet invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n\t\t\tfor (let n = 0; n <= xdots; n++)\n\t\t\t{\n\t\t\t\tlet x = a.oval.cx - rw + n * invX;\n\t\t\t\tvg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\t\t\tfor (let n = 1; n < ydots; n++)\n\t\t\t{\n\t\t\t\tlet y = a.oval.cy - rh + n * invY;\n\t\t\t\tvg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t\tvg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n\t\t}\n\n\t\tfor (let key in effects.dottedBondCross)\n\t\t{\n\t\t\tlet bond = parseInt(key), col = effects.dottedBondCross[key];\n\t\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n\t\t\tfor (let n = 0; n < layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet b = layout.getLine(n);\n\t\t\t\tif (b.bnum == bond)\n\t\t\t\t{\n\t\t\t\t\tx1 += b.line.x1; y1 += b.line.y1;\n\t\t\t\t\tx2 += b.line.x2; y2 += b.line.y2;\n\t\t\t\t\tbcount += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bcount > 1)\n\t\t\t{\n\t\t\t\tlet inv = 1 / bcount;\n\t\t\t\t[x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n\t\t\t}\n\n\t\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\t\tlet inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n\t\t\tfor (let p of [-2, -1, 1, 2])\n\t\t\t{\n\t\t\t\tlet x = cx + p * ox, y = cy + p * oy;\n\t\t\t\tvg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n\t\t\t}\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n\t\t}\n\t}\n\n\tprivate drawOverEffects():void\n\t{\n\t\tlet mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n\n\t\tfor (let a of effects.overlapAtoms)\n\t\t{\n\t\t\tlet p = layout.getPoint(a - 1);\n\t\t\tlet rad = scale * 0.2;\n\t\t\tvg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n\t\t\tvg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n\t\t}\n\n\t\tfor (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++) if (effects.atomCircleSz[n] > 0)\n\t\t{\n\t\t\tlet dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n\t\t\tlet p = layout.getPoint(n);\n\t\t\tvg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n\n\t\t\tthis.mnemonics?.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n\t\t}\n\t}\n\n\tprivate drawBondInclined(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet norm = head / Math.sqrt(dx * dx + dy * dy);\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tlet px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n\n\t\t// if endpoint is divalent, consider modifying the polygon shape\n\t\tif (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2)\n\t\t{\n\t\t\tlet other:BLine = null;\n\t\t\tfor (let n = 0; n < this.layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet o = this.layout.getLine(n);\n\t\t\t\tif (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto))\n\t\t\t\t{\n\t\t\t\t\tif (other != null) {other = null; break;} // must be only one\n\t\t\t\t\tother = o;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (other != null)\n\t\t\t{\n\t\t\t\tlet th1 = Math.atan2(y1 - y2, x1 - x2);\n\t\t\t\tlet th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n\t\t\t\tif (b.bto == other.bfr) th2 += Math.PI;\n\t\t\t\tlet diff = Math.abs(angleDiff(th1, th2));\n\t\t\t\tif (diff > 105 * DEGRAD && diff < 135 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tlet ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n\t\t\t\t\tlet ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n\t\t\t\t\tpx[1] = ixy1[0];\n\t\t\t\t\tpy[1] = ixy1[1];\n\t\t\t\t\tpx[2] = ixy2[0];\n\t\t\t\t\tpy[2] = ixy2[1];\n\n\t\t\t\t\t// extend slightly, to overlap the line\n\t\t\t\t\tlet dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n\t\t\t\t\tpx[1] += dx1 * inv1;\n\t\t\t\t\tpy[1] += dy1 * inv1;\n\t\t\t\t\tlet dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n\t\t\t\t\tpx[2] += dx2 * inv1;\n\t\t\t\t\tpy[2] += dy2 * inv1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if endpoint is trivalent, another modification is considered\n\t\tif (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3)\n\t\t{\n\t\t\tlet other1:BLine = null, other2:BLine = null;\n\t\t\tfor (let n = 0; n < this.layout.numLines(); n++)\n\t\t\t{\n\t\t\t\tlet o = this.layout.getLine(n);\n\t\t\t\tif (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto))\n\t\t\t\t{\n\t\t\t\t\tif (other1 == null) other1 = o;\n\t\t\t\t\telse if (other2 == null) other2 = o;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tother1 = other2 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (other1 != null && other2 != null)\n\t\t\t{\n\t\t\t\tlet th1 = Math.atan2(y1 - y2, x1 - x2);\n\t\t\t\tlet th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n\t\t\t\tlet th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n\t\t\t\tif (b.bto == other1.bfr) th2 += Math.PI;\n\t\t\t\tif (b.bto == other2.bfr) th3 += Math.PI;\n\t\t\t\tlet dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n\t\t\t\tlet dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n\t\t\t\tlet diff3 = Math.abs(angleDiff(th2, th3));\n\t\t\t\tif (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n\t\t\t\t\tdiff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n\t\t\t\t\tdiff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\tif (dth1 < 0) [other1, other2] = [other2, other1];\n\t\t\t\t\tlet ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n\t\t\t\t\tlet ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n\t\t\t\t\tpx = [x1, ixy1[0], x2, ixy2[0]];\n\t\t\t\t\tpy = [y1, ixy1[1], y2, ixy2[1]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n\t}\n\tprivate drawFusedWedge(b1:BLine, b2:BLine):void\n\t{\n\t\tconst terminalPoints = (b:BLine, other:BLine):{outerX:number, outerY:number, innerX:number, innerY:number} =>\n\t\t{\n\t\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\t\tlet norm = b.head / Math.sqrt(dx * dx + dy * dy);\n\t\t\tlet ox = norm * dy, oy = -norm * dx;\n\n\t\t\tlet tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n\t\t\tlet dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n\t\t\tlet dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n\t\t\tif (dsq1 > dsq2)\n\t\t\t\treturn {outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2};\n\t\t\telse\n\t\t\t\treturn {outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1};\n\t\t};\n\n\t\tlet u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n\n\t\tlet [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n\n\t\tlet px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n\t\tlet py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n\t\tthis.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n\t}\n\n\tprivate drawBondDeclined(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet ext = Math.sqrt(dx * dx + dy * dy);\n\t\tlet nsteps = Math.ceil(ext * 2.5 * this.invScale);\n\t\tlet norm = head / ext;\n\t\tlet ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n\t\tlet holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n\t\tfor (let i = 0; i <= nsteps + 1; i++)\n\t\t{\n\t\t\tlet cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n\t\t\tlet ix = ox * i * invSteps, iy = oy * i * invSteps;\n\t\t\tthis.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n\t\t}\n\t}\n\tprivate drawBondUnknown(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet ext = Math.sqrt(dx * dx + dy * dy);\n\t\tlet nsteps = Math.ceil(ext * 3.5 * this.invScale);\n\t\tlet norm = head / ext;\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tlet sz = 1 + 3 * (nsteps + 1);\n\t\tlet x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n\t\tx[0] = x1;\n\t\ty[0] = y1;\n\t\tctrl[0] = false;\n\n\t\tfor (let i = 0, j = 1; i <= nsteps; i++, j += 3)\n\t\t{\n\t\t\tlet ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n\t\t\tlet cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n\t\t\tlet bx = (ax + cx) / 2, by = (ay + cy) / 2;\n\t\t\tlet sign = i % 2 == 0 ? 1 : -1;\n\n\t\t\tx[j] = ax;\n\t\t\tx[j + 1] = bx + sign * ox;\n\t\t\tx[j + 2] = cx;\n\t\t\ty[j] = ay;\n\t\t\ty[j + 1] = by + sign * oy;\n\t\t\ty[j + 2] = cy;\n\t\t\tctrl[j] = true;\n\t\t\tctrl[j + 1] = true;\n\t\t\tctrl[j + 2] = false;\n\t\t}\n\t\tthis.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n\t}\n\tprivate drawBondDotted(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size;\n\n\t\tlet radius = size, dist = norm_xy(dx, dy);\n\t\tif (dist < 0.01) return;\n\t\tlet nudge = 0.5 * size / dist;\n\t\tx1 += nudge * dx;\n\t\ty1 += nudge * dy;\n\t\tx2 -= nudge * dx;\n\t\ty2 -= nudge * dy;\n\t\tdx = x2 - x1;\n\t\tdy = y2 - y1;\n\n\t\tlet nsteps = Math.ceil(0.2 * dist / radius);\n\t\tlet invSteps = 1.0 / (nsteps + 1);\n\t\tfor (let i = 0; i <= nsteps + 1; i++)\n\t\t{\n\t\t\tlet r = radius;\n\t\t\tif (b.type == BLineType.DotDir) r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n\t\t\tlet cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n\t\t\tthis.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n\t\t}\n\t}\n\tprivate drawBondIncMulti(b:BLine):void\n\t{\n\t\tlet x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet col = b.col;\n\t\tlet size = b.size, head = b.head;\n\n\t\tlet norm = head / Math.sqrt(dx * dx + dy * dy);\n\t\tlet ox = norm * dy, oy = -norm * dx;\n\t\tthis.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n\n\t\tif (b.type == BLineType.IncDouble)\n\t\t{\n\t\t\tthis.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n\t\t\tthis.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2019 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing */\n\n/*\n\tFontData: stores information about the general font, sufficient to recreate and layout every glyph.\n*/\n\nexport interface FontDataNativeOpt\n{\n\tbold?:boolean;\n\titalic?:boolean;\n}\n\nexport class FontData\n{\n\tpublic static main = new FontData();\n\n\tpublic UNITS_PER_EM = 2048;\n\tpublic INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n\tpublic PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n\tpublic ASCENT = 1638;\n\tpublic DESCENT = -410;\n\tpublic MISSING_HORZ = 2048;\n\tpublic MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n\tpublic ASCENT_FUDGE = 0.9;\n\tpublic UNICODE =\n\t[\n\t\t' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n\t\t'=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n\t\t'[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n\t\t'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n\t\t'\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n\t\t'\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n\t\t'\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n\t\t'\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n\t\t'\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n\t\t'\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n\t\t'\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n\t\t'\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n\t\t'\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n\t\t'\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n\t\t'\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n\t\t'\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n\t];\n\tpublic HORIZ_ADV_X =\n\t[\n\t\t720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n\t\t930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n\t\t1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n\t\t1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n\t\t1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n\t\t1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n\t\t1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n\t\t1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n\t\t1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n\t\t1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n\t\t1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n\t];\n\tpublic GLYPH_DATA =\n\t[\n\t\t'',\n\t\t'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n\t\t'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n\t\t'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n\t\t'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n\t\t'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n\t\t'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n\t\t'M386 1556l-43 -579h-136l-43 579h222z',\n\t\t'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n\t\t'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n\t\t'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n\t\t'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n\t\t'M575 285l-282 -655h-146l174 655h254z',\n\t\t'M777 561h-624v181h624v-181z',\n\t\t'M492 0h-239v285h239v-285z',\n\t\t'M860 1556l-717 -1860h-173l714 1860h176z',\n\t\t'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n\t\t'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n\t\t'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n\t\t'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n\t\t'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n\t\t'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n\t\t'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n\t\t'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n\t\t'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n\t\t'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n\t\t'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n\t\t'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n\t\t'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n\t\t'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n\t\t'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n\t\t'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n\t\t'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n\t\t'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n\t\t'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n\t\t'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n\t\t'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n\t\t'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n\t\t'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n\t\t'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n\t\t'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n\t\t'M1142 0h-942v1489h198v-1313h744v-176z',\n\t\t'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n\t\t'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n\t\t'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n\t\t'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n\t\t'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n\t\t'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n\t\t'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n\t\t'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n\t\t'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n\t\t'M960 -304h-173l-717 1860h176z',\n\t\t'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n\t\t'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n\t\t'M1306 -300h-1310v120h1310v-120z',\n\t\t'M762 1302h-149l-273 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n\t\t'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n\t\t'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n\t\t'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n\t\t'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n\t\t'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n\t\t'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n\t\t'M375 0h-188v1556h188v-1556z',\n\t\t'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n\t\t'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n\t\t'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n\t\t'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n\t\t'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n\t\t'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n\t\t'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n\t\t'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n\t\t'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n\t\t'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n\t\t'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n\t\t'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n\t\t'M552 -392h-174v1948h174v-1948z',\n\t\t'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n\t\t'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n\t\t'',\n\t\t'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n\t\t'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n\t\t'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n\t\t'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n\t\t'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n\t\t'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n\t\t'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n\t\t'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n\t\t'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n\t\t'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n\t\t'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n\t\t'M1456 57h-171v545h-1075v160h1246v-705z',\n\t\t'M777 561h-624v181h624v-181z',\n\t\t'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n\t\t'M1306 1668h-1305l-5 120h1310v-120z',\n\t\t'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n\t\t'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n\t\t'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n\t\t'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n\t\t'M963 1676l-273 -374h-149l179 374h243z',\n\t\t'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n\t\t'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n\t\t'M492 511h-239v283h239v-283z',\n\t\t'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n\t\t'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n\t\t'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n\t\t'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n\t\t'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n\t\t'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n\t\t'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n\t\t'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n\t\t'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n\t\t'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n\t\t'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n\t\t'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n\t\t'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n\t\t'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n\t\t'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n\t\t'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n\t\t'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n\t\t'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n\t\t'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n\t\t'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n\t\t'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n\t\t'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n\t\t'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n\t\t'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n\t\t'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n\t\t'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n\t\t'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n\t\t'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n\t\t'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n\t\t'M773 1676l-49 -384h-145l-49 384h243z',\n\t\t'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n\t\t'M585 832h-239v285h239v-285z',\n\t\t'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n\t\t'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n\t\t'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n\t\t'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n\t\t'M1162 1313h-764v-1313h-198v1489h962v-176z',\n\t\t'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n\t\t'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n\t\t'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n\t\t'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n\t\t'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n\t\t'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n\t\t'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n\t\t'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n\t\t'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n\t\t'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n\t\t'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n\t\t'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n\t\t'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n\t\t'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n\t\t'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n\t\t'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n\t\t'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n\t\t'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n\t\t'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n\t\t'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n\t\t'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n\t\t'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n\t\t'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n\t\t'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n\t\t'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n\t\t'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n\t\t'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n\t\t'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n\t\t'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n\t\t'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n\t\t'M375 0h-188v1117h188v-1117z',\n\t\t'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n\t\t'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n\t\t'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n\t\t'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n\t\t'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n\t\t'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n\t\t'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n\t\t'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n\t\t'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n\t\t'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n\t\t'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n\t\t'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n\t\t'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n\t\t'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n\t\t'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n\t\t'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n\t\t'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n\t\t'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n\t\t'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n\t\t'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n\t\t'M1456 572h-1236v160h1236v-160z',\n\t\t'M843 1489l-780 -1489h-165l780 1489h165z',\n\t\t'M492 511h-239v283h239v-283z',\n\t\t'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n\t\t'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n\t\t'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n\t\t'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n\t\t'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n\t\t'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n\t\t'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n\t];\n\tpublic OUTLINE_X =\n\t[\n\t\t[], [291,301,505,515], [168,211,729,772,554], [195,389,917,1364,1481,1481,1288,760,312,195],\n\t\t[155,604,722,1129.8,1160,1107,722,604,278.5,191.1,162,155], [149,172.3,242,630,1687,1844.3,1960,2031.3,2055,2031.8,1962,1575,517,359.8,244,172.8],\n\t\t[115,149.4,252.5,407.6,598,1555,1287,961.3,881,757.5,601,423.5,293,213.5,187], [164,207,343,386], [181,205.5,279,554,783,783,554,279,205.5],\n\t\t[147,376,651,724.5,749,724.5,651,376,147], [167,232,588,717,1073,1137,1137,1073,717,588,232,167], [210,755,921,1466,1466,921,755,210],\n\t\t[147,293,575,321], [153,777,777,153], [253,492,492,253], [-30,143,860,684],\n\t\t[137,167.9,260.5,420.1,652,881.4,1041.5,1135.6,1167,1136.1,1043.5,883.9,652,422,262,168.3], [278,1084,1084,780,625,278],\n\t\t[161,1169,1169,1106,1073.5,976,821.3,617,387.5,198,161], [167,364,608,830.5,1007,1111,1148,1117,1080,971,821,629,399.5,210,167],\n\t\t[77,790,982,1203,1203,982,798,77], [187,378,613,843.5,1015,1119,1157,1147,251,187],\n\t\t[137,183.5,316,475,675,875.1,1041.5,1153.6,1191,1046,965,866,542,315,179.5], [154,285,499,1173,1173,154],\n\t\t[122,157.9,265.5,433.6,651,859.6,1029.5,1142.4,1180,1140,1106.8,1007,851.5,651,456.8,300,196.5,162],\n\t\t[113,258,340,438,760,988,1122.5,1167,1121,990,829,629,429.5,263,150.5], [346,585,585,346], [230,376,658,585,346], [254,1408,1408,254],\n\t\t[245,1431,1431,245], [268,1422,1422,268], [160,406,610,970,1005,973.9,880.5,733.4,541,337.5,160],\n\t\t[176,240,419,692,1037,1210,1391,1714,1829.5,1870,1813.5,1651,1391,1041,701,426,243], [26,1374,832,568],\n\t\t[200,728,983.5,1168,1281,1323,1196,1159,1040,885,641,200], [115,169,319,549.5,844,1001.5,1134,1250.5,1350,1350,1084.5,845,546.5,317,167],\n\t\t[200,576,906.5,1134,1369.5,1458,1373,1136,918.5,572,200], [200,1181,1181,200], [200,398,1045,1151,1151,200],\n\t\t[115,171,330,577,896,1175.5,1442,1442,1441,1155.5,896,570.9,323.5,167.1], [200,1339,1339,200], [137,725,725,137],\n\t\t[44,178,306,486.6,626.5,716.1,746,746,233,44], [205,1397,1366,205], [200,1142,1142,398,200], [200,1526,1526,200], [200,1336,1336,200],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,398,1043,1139.5,1174,1127.5,996,831,604,200],\n\t\t[115,163.5,302,520.5,1010.5,1133.1,1290,1409.5,1528,1528,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,1432,1130.5,1004,842,617,200],\n\t\t[134,395.5,685,941.5,1128,1241.5,1282,1222,990,702,480.3,301,182.5,143,134], [0,532,730,1262,1262,0],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,178], [26,568,832,1374,238], [92,486,1546,1933,295], [68,1335,1336,80], [6,532,730,1254,225],\n\t\t[126,1288,1288,1266,160,126], [239,759,759,239], [70,787,960,246], [171,691,691,171], [186,383,1490,901,775], [-4,1306,1306,-4], [340,613,762,583],\n\t\t[104,130.3,209,325.5,465,1053,1053,1020,924,772.5,567,362,203], [185,679,866,1022,1128.5,1168,1139.4,1053.5,918.1,373,185],\n\t\t[105,145,258,431,653,832.5,1011,1011,841.5,653,430.1,255.5,142.6], [108,137.4,225.5,363.6,543,1091,1091,903,258,148.5],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,997.5,849.1,649,428.6,255.5,143.4], [68,195,383,716,786,786,693.5,580,415,294,68],\n\t\t[108,225,391.5,565,798.3,962,1058.8,1091,1091,602,417,259,148.5], [185,1119,1119,1095.3,1024,373,185], [175,187,375,387,387,175],\n\t\t[-62,47.5,153,304,421,496,521,533,533,321,100,-62], [193,1199,1161,381,193], [187,375,375,187], [185,1815,1815,1793.1,1727.5,1615.9,1456,735,185],\n\t\t[185,1119,1119,1095.3,1024,907.5,748,185], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,833.3,622,409.4,245.5,140.9],\n\t\t[185,373,1019,1129,1168,1139.9,1055.5,920.6,741,185], [108,137.6,226.5,365.1,903,1091,1091,602,414,259,149.5], [185,373,882,882,816,745,185],\n\t\t[110,283.5,511,706.9,856.5,951.4,983,939,768.5,566,372.5,230,143.5,115,110], [62,211.3,278,387.5,538,649.5,765,765,377,189,62],\n\t\t[177,201.5,275,392.5,549,1111,1111,177], [61,510,699,1151,265], [86,380,1299,1590,766], [60,1152,1152,64], [61,298,499,1151,265],\n\t\t[93,995,995,978,107,93], [173,588.9,672.5,800.9,963,1113,1113,963,800.9,672.5,588.9,173], [378,552,552,378],\n\t\t[187,337,499.1,627.5,711.1,1127,1127,711.1,627.5,499.1,337,187], [187,354,1125,1290,1401,1466.5,1489,1322,551,386,274,209.5], [], [291,515,505,301],\n\t\t[159,191.6,289.5,647,765,1120,1120,765,647,292.5,192.4], [137,1163,1163,1137,997,816,630.6,484.5,389.6,182,137],\n\t\t[138,247,1058,1168,1168,1055,249,138], [108,187,557,745,1115,1191,320], [378,552,552,378],\n\t\t[172,229,404.5,575,796,965,1063,1096,1128,1071,896,725,497.5,334,235,203], [346,958,958,346],\n\t\t[159,222.4,412.5,692.1,1024,1355.9,1635.5,1825.6,1889,1825.6,1635.5,1355.9,1024,692.1,412.5,222.4],\n\t\t[151,238.5,454,944,944,920.3,849,723.5,537,368,231], [166,716,1146,1146,716,166], [210,1285,1456,1456,210], [153,777,777,153],\n\t\t[159,222.4,412.5,692.1,1024,1355.9,1635.5,1825.6,1889,1825.6,1635.5,1355.9,1024,692.1,412.5,222.4], [-4,1,1306,1306],\n\t\t[154,183,270,399.3,555,710.8,840,927,956,927.1,840.5,711.4,555,399.3,270,183], [215,1461,1461,921,755,215],\n\t\t[207,967,967,911,887.6,817.5,544,369.5,211,207], [207,363.5,540,703,834,923,956,929,904.9,832.5,561,384.5,224,207], [541,690,963,720],\n\t\t[190,378,1124,1124,190], [137,168.5,595,1106,1106,640,425.3,267,169.5], [253,492,492,253], [353,456,551,788.5,857.1,880,877,872,719,353],\n\t\t[291,299,914,914,693,558,291], [121,150.6,239.5,378.6,559,734.3,874,965.5,996,965.5,874,734.3,559,378.6,239.5,150.6], [174,604,1154,1154,604,174],\n\t\t[171,465,1694,1857,1857,1694,1410,545,408,171], [171,465,1955,1955,1890,1805.5,1410,545,408,171], [140,555,1750,1913,1913,1750,1500,448,294,155,140],\n\t\t[113,144.1,237.5,384.6,577,782,958,958,712,508,147.5], [26,1374,862,683,440], [26,1374,955,712,533], [26,1374,1033,805,578,350],\n\t\t[26,1374,1119,990,541,367,288], [26,1374,1005,806,393], [26,1374,1049,1023.6,947.5,834.6,699,564,451,374.5,349], [14,1901,1901,608],\n\t\t[115,169,548,652.5,750,990.5,1350,1350,1084.5,845,546.5,317,167], [200,1181,1181,643,400,200], [200,1181,1181,993,750,200],\n\t\t[200,1181,1181,803,576,200], [200,1181,1181,1038,426,200], [137,725,725,389,146,137], [137,725,725,482,137], [93,137,725,776,548,321],\n\t\t[126,137,725,738,738,126], [14,210,586,916.5,1144,1379.5,1468,1383,1146,929,582,210,14], [200,1336,1336,1208,1079,630,456,200],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,753,510,163], [115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1083,840,303,163],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1136,908,681,453,163],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1207,1078,629,455,163],\n\t\t[112,160.5,299,517.5,803,1089.5,1307,1445.5,1495,1446.5,1108,909,496,160], [291,402,1274,1385,1385,1274,402,291],\n\t\t[115,120,252,1092.5,1310,1448.5,1498,1474,1342,806,521.5,303,163], [178,213.5,330,505,749,989,1169,1285.5,1321,1321,753,510,178],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,1073,830,178], [178,213.5,330,505,749,989,1169,1285.5,1321,1321,856,629,178],\n\t\t[178,213.5,330,505,749,989,1169,1285.5,1321,1321,1056,444,178], [6,532,730,1254,935,692], [200,398,1044,1139,1174,1127,997,398,200],\n\t\t[185,675,873.1,1029.5,1131.1,1165,1066,1037.4,951.5,819.9,654,470.5,321,221,185], [104,130.3,209,325.5,465,1053,1053,1020,559,316,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,934,691,203], [104,130.3,209,325.5,465,1053,1053,961,733,506,278,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,1038,909,460,286,207], [104,130.3,209,325.5,465,1053,1053,926,314,203],\n\t\t[104,130.3,209,325.5,465,1053,1053,956,930.6,854.5,741.6,606,471,358,281.5,256],\n\t\t[104,130.4,209.5,326.1,465,1433,1648.5,1833,1855,1855,1823.6,1729.5,1581.1,1387,564,360,202],\n\t\t[105,145,353,456,551,788.5,857.1,1011,1011,841.5,653,430.1,255.5,142.6], [106,145,262,448.5,696,904,1098,1120,1120,1089.4,997.5,580,337,143.4],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,960,717,255.5,143.4], [106,145,262,448.5,696,904,1098,1120,1120,1089.4,986,758,531,303,143.4],\n\t\t[106,145,262,448.5,696,904,1098,1120,1120,1089.4,951,339,143.4], [-21,187,375,401,222], [160,187,375,582,339], [-11,187,375,572,394,167],\n\t\t[5,187,375,557,557,5], [106,140.6,244.5,405.6,612,828.3,995,1101.5,1137,1004,938,263], [185,1119,1119,1075,946,497,323,244,185],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,553,310,140.9], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,933,690,245.5,140.9],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,963,735,508,280,140.9], [106,140.9,245.5,409.4,622,833.3,997,1102,1137,1038,909,460,286,207],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,928,729,316,140.9], [210,719,957,1466,1466,957,719,210],\n\t\t[93,203,833.3,997,1102,1137,1132,1021,409.4,245.5,140.9,106], [177,201.5,275,392.5,549,1111,1111,585,342,177],\n\t\t[177,201.5,275,392.5,549,1111,1111,945,702,177], [177,201.5,275,392.5,549,1111,1111,757,530,177], [177,201.5,275,392.5,549,1111,1111,955,343,177],\n\t\t[61,298,499,1151,928,685], [185,373,1019,1129,1168,1139.9,1055.5,920.6,373,185], [230,376,658,585,346], [530,579,724,773],\n\t\t[256,588,716,1048,1048,765,539,256], [7,26,1374,832], [346,585,585,346], [0,49,443,1424,1424,443], [0,49,443,1582,1582,443], [0,49,380,968,968,380],\n\t\t[0,49,354.5,493,711.5,997,1283.5,1501,1639.5,1689,1640.5,1501,1284.5,997], [0,49,815,1013,1537,289],\n\t\t[0,49,291,1751,1751,1701,1654.1,1513.5,1296.6,1021], [-53,187,375,615,615,379,183,-53], [26,1374,832,568],\n\t\t[200,728,983.5,1168,1281,1323,1196,1159,1040,885,641,200], [200,398,1162,1162,200], [26,1414,852,588], [200,1181,1181,200],\n\t\t[126,1288,1288,1266,160,126], [200,1339,1339,200], [115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163],\n\t\t[137,725,725,137], [205,1397,1366,205], [26,1378,822,582], [200,1526,1526,200], [200,1336,1336,200], [114,1215,1215,114],\n\t\t[115,163.5,302,520.5,806,1092.5,1310,1448.5,1498,1449.5,1310,1093.5,806,521.5,303,163], [200,1339,1339,200],\n\t\t[200,398,1043,1139.5,1174,1127.5,996,831,604,200], [118,1280,1280,1234,138,118], [0,532,730,1262,1262,0], [6,532,730,1254,225],\n\t\t[105,149.5,273,740,937,1404,1527.5,1572,1528.5,1410,937,740,267,148], [68,1335,1336,80], [179,219.5,338,793,990,1446,1563.5,1604,1604,179],\n\t\t[108,1568,1568,1518,1471.1,1330.5,1113.6,838,562.4,345.5,204.9,158,108], [126,137,725,738,738,126], [6,532,730,1254,939,740,327],\n\t\t[108,137.4,225.5,363.6,543,1091,1091,743,500,148.5], [109,152.5,265,417,578,796,1006,1006,961,721,478,191.5,144],\n\t\t[185,931,1119,1119,1095.3,802,559,185], [160,187,375,403], [177,207.8,300,448,646,846,994,1085.5,1116,1116,1043,760,534,251,177],\n\t\t[108,137.4,225.5,363.6,543,1091,1091,604,416.5,258,148.5], [185,373,1030.5,1131.4,1165,1084,1050,959,825.5,661,462.1,311.5,216.6,185],\n\t\t[61,506,694,1151,265], [106,140.6,244.5,408.6,624,837.1,1000.5,1104.4,1139,1049,239],\n\t\t[109,152.5,265,417,578,796,1006,1006,961,789,609,449,304,191.5,144], [108,135.8,219,646,825,937,982,942,198],\n\t\t[185,931,1119,1119,1095.3,1024,907.5,748,185], [137,159.5,219,382,639,896,1059,1118,1141,1118,1058,895.5,639,382.5,220,159.5], [187,375,375,187],\n\t\t[193,1192,1122,1085,1027,193], [61,1151,522,311], [185,373,1125,1125,185], [61,510,699,1151,265], [104,138.5,239,704,884,995.5,1041,957,133],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,997,833.3,622,409.4,245.5,140.9], [185,1120,1120,185],\n\t\t[185,373,1033.5,1137.4,1172,1140,1044,887.3,673,477.5,322,220.5,185], [105,146.5,261,685,862,971,1018,986,839,675,441.9,260.5,143.9],\n\t\t[106,140.5,244,407.8,623,832.9,996.5,1101.9,1295,1295,625,412,247,141.3], [10,414,602,1006,1006,10],\n\t\t[177,207.8,300,448,646,846,994,1085.5,1116,1116,177], [104,151,283,715,902,1342.5,1471.1,1514,1470.4,1339.5,1132.6,861,784.5,714,355,163],\n\t\t[48,1160,1149,59], [176,223.5,748,935,1459,1507,1507,176], [113,136.5,211,343.5,538,1128,1321.5,1455,1529.5,1553,1496,1295,371,170],\n\t\t[5,187,375,557,557,5], [177,207.8,300,448,646,846,994,1085.5,1116,1116,953,341,177],\n\t\t[106,140.9,245.5,409.4,622,833.3,997,1102,1137,1102,743,500,140.9], [177,207.8,300,448,646,846,994,1085.5,1116,1116,768,525,177],\n\t\t[113,136.5,211,343.5,538,1128,1321.5,1455,1529.5,1553,1496,955,712,170],\n\t\t[149,179.4,270.5,409.6,584,798.5,985,1106,1145,1130.5,1074,909.5,670,473.5,292], [50,1438,876,612], [144,344,1332,1532,1532,144],\n\t\t[187,1369,1369,1330,197,187], [220,1456,1456,220], [-102,63,843,678], [253,492,492,253], [134,755,857,1737,1570,134],\n\t\t[161,189.3,274,406.5,578,1435,1620.9,1764.5,1856.4,1887,1858.8,1774,1641.5,1470,613,430.3,286,192.3],\n\t\t[138,241.5,348,515.3,641,719,1168,1168,1063,954,786.3,661,583,138], [243,400,1070,1214,1320,1432,1431,1274,604,462.4,355.5,243],\n\t\t[245,566,719,1431,1431,1109,956,245], [254,1408,1408,254], [268,1422,1422,268]\n\t];\n\tpublic OUTLINE_Y =\n\t[\n\t\t[], [1489,0,0,1489], [1556,977,977,1556,1556], [421,0,0,421,932,1067,1489,1489,1067,556],\n\t\t[85,-361,-361,238.1,380,1231,1576,1576,1185,1071.5,935,283], [1075,880.5,743,0,-29,-1.8,80,217.8,413,607.5,745,1489,1517,1489.8,1408,1270.3],\n\t\t[409,230.9,90.5,-0.6,-31,0,909,1333.4,1432.5,1498.1,1520,1490,1412,1301.5,1174], [1556,977,977,1556], [572,286.3,31,-412,-412,1556,1556,1113,857.8],\n\t\t[-412,-412,31,286.3,572,857.8,1113,1556,1556], [886,776,630,630,777,887,1299,1409,1556,1556,1410,1300], [572,27,27,572,732,1277,1277,732],\n\t\t[-370,-370,285,285], [561,561,742,742], [0,0,285,285], [-304,-304,1556,1556],\n\t\t[743,400,159,16.5,-31,15.9,156.5,397.4,745,1084.9,1326.5,1470.9,1519,1471.6,1329.5,1088.1], [0,0,152,1494,1494,1286],\n\t\t[0,0,171,1110,1279.4,1409.5,1492.4,1520,1491,1427,209], [63,-1.5,-31,2.5,106,254,441,1161,1320,1436,1500,1520,1490.5,1426,272],\n\t\t[419,0,0,419,579,1489,1489,649], [56,-5.5,-31,6.5,114,274,473,1489,1489,267],\n\t\t[654,324,104,3,-31,4.9,112.5,276.9,483,1494,1512,1517,1453.5,1277,1005], [1314,0,0,1266,1489,1489],\n\t\t[411,233.5,91,-2.8,-34,-2,94,238.3,415,1144,1294.5,1416,1496.3,1523,1495,1411,1285,1131],\n\t\t[1005,-6,-23.5,-29,33,209,480,834,1171.5,1385,1485.5,1519,1483.3,1376,1211.8], [0,0,1117,1117], [-370,-370,285,1117,1117], [590,77,1227,714],\n\t\t[362,362,942,942], [77,590,714,1227], [1245,0,0,964.5,1139,1293.4,1414.5,1492.9,1519,1497.5,1449],\n\t\t[647,291,15,-162.5,-226,-218.5,-190,157,394,663,1013.5,1283,1457,1519,1452,1268,991.5], [0,0,1489,1489],\n\t\t[0,0,28,122,262,458,1155,1316.5,1427,1477,1489,1489], [743,402.5,161,18.5,-27,-13.5,19,63,108,1385,1487,1516,1465,1317,1072],\n\t\t[0,0,28,119,375,743,1118,1371,1457.5,1489,1489], [0,0,1489,1489], [0,0,717,1313,1489,1489],\n\t\t[746,405.5,163,19,-29,12.5,110,749,1382,1485.5,1516,1464.4,1309.5,1065.4], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[8,-12.5,-21,5.5,85,213.5,387,1489,1489,193], [0,0,1489,1489], [0,0,176,1489,1489], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,709,855.5,1039,1254,1396,1466.5,1489,1489],\n\t\t[744,415,172,21,-297.5,-369.1,-393,-386.5,-365,-183,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1280.5,1409,1471.5,1489,1489],\n\t\t[92,3,-27,9,109,253,425,1412,1486,1516,1486.1,1396.5,1260.1,1090,340], [1313,0,0,1313,1489,1489], [598,313,115,6,-31,4,115,315.5,598,1489,1489],\n\t\t[1489,0,0,1489,1489], [1489,0,0,1489,1489], [0,0,1489,1489], [1489,0,0,1489,1489], [0,0,176,1489,1489,184], [-392,-392,1556,1556],\n\t\t[1556,-304,-304,1556], [-392,-392,1556,1556], [682,682,684,1489,1489], [-300,-300,-180,-180], [1676,1302,1302,1676],\n\t\t[324,182.8,69,-6,-31,0,758,939,1058,1124.5,1144,1126,1093], [0,-31,8.5,127,315,567,812.8,996,1110,1556,1556],\n\t\t[557,300,118,10.5,-25,0,70,1050,1116,1143,1104,987,801.5], [550,306.8,123,7.5,-31,0,1556,1556,992,803],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1016,1115,1148,1107.8,987,797.8], [959,0,0,959,1374,1546,1560,1566,1539.4,1459.5,1117],\n\t\t[569,-375,-410.5,-423,-389.8,-290,-119.3,127,1117,1148,1108.5,998,817.5], [0,0,725,906,1039,1556,1556], [1304,0,0,1304,1499,1499],\n\t\t[-395,-415,-423,-398,-323,-199,-27,1304,1499,1499,1117,-216], [0,0,1117,1556,1556], [0,0,1556,1556], [0,0,725,902.9,1036.5,1120.1,1148,1148,1117],\n\t\t[0,0,725,906,1039,1120.8,1148,1117], [558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1108.4,1148,1108.4,989.5,802.4],\n\t\t[-412,-412,133,323.5,572,813.4,995.5,1109.9,1148,1117], [555,314.1,131.5,16.4,-412,-412,1117,1148,1108,995,809.5], [0,0,912,1105,1114.5,1117,1117],\n\t\t[67,2.5,-27,-2.5,71,182.8,322,1060,1119.5,1144,1116.5,1042,933,803,278], [959,189.8,70,1,-22,-13,10,1117,1438,1438,1117],\n\t\t[392,209.1,76.5,-4.1,-31,0,1117,1117], [1117,0,0,1117,1117], [1117,0,0,1117,1117], [0,0,1117,1117], [1117,-412,-412,1117,1117],\n\t\t[0,0,159,1117,1117,139], [504,-170.9,-292.5,-367.1,-392,-392,1556,1556,1531.1,1456.5,1334.9,660], [-392,-392,1556,1556],\n\t\t[-392,-392,-367.1,-292.5,-170.9,504,660,1334.9,1456.5,1531.1,1556,1556], [395,395,396,440,561,732,927,927,926,880.5,761,589.5], [], [0,0,1489,1489],\n\t\t[557,333.5,163,-361,-361,74,1046,1475,1475,948.5,775.9], [0,0,171,1467,1501,1518,1485.9,1389.5,1243.1,751,207],\n\t\t[258,145,147,257,1067,1176,1176,1066], [1489,426,0,0,426,1489,1489], [-392,-392,1556,1556],\n\t\t[533,-327,-371.5,-385,-358,-275,-156,-10,601,1462,1505,1519,1490,1411,1293.5,1147], [1304,1304,1499,1499],\n\t\t[655,323.1,43.5,-146.6,-210,-146.6,43.5,323.1,655,986.9,1266.5,1456.6,1520,1456.6,1266.5,986.9],\n\t\t[833,616,531,554,1192,1332.4,1435.5,1498.9,1520,1504,1475], [608,162,191,1113,1142,697], [602,57,57,762,762], [561,561,742,742],\n\t\t[655,323.1,43.5,-146.6,-210,-146.6,43.5,323.1,655,986.9,1266.5,1456.6,1520,1456.6,1266.5,986.9], [1788,1668,1668,1788],\n\t\t[1116,960.4,831.5,744.9,716,745,832,961,1116,1271,1400,1487,1516,1487,1400,1271], [179,179,917,1462,1462,917],\n\t\t[566,566,711,1237,1350.4,1440.5,1519,1501.5,1458,722], [585,542,527,543.5,595,685.5,817,1278,1374.5,1452,1520,1502.5,1458,764],\n\t\t[1302,1302,1676,1676], [-412,-412,0,1117,1117], [1050,866,-363,-363,1489,1489,1460,1373,1234.3], [511,511,794,794],\n\t\t[-397,-416,-423,-337,-232,-89,-25,20,20,-237], [1256,566,566,688,1493,1493,1368],\n\t\t[1025,820.1,663.5,564.1,531,563.4,660.5,816.4,1025,1233.8,1390,1487.5,1520,1486.8,1387,1230], [191,162,608,697,1142,1113],\n\t\t[1246,0,0,220,353,944,1489,1493,1493,1363], [1246,0,0,139,664,865,1489,1493,1493,1363], [598,0,0,220,353,944,1489,1517,1500,1456,773],\n\t\t[350,195.6,74.5,-3.9,-30,-10,40,244,1489,1489,523], [0,0,1675,2049,2049], [0,0,2049,2049,1675], [0,0,1670,2049,2049,1670],\n\t\t[0,0,1992,1992,1987,1910,1682], [0,0,1872,1872,1872], [0,0,1712,1843.5,1952,2024.8,2049,2024.8,1952,1843.5,1712], [0,0,1489,1489],\n\t\t[743,402.5,-397,-416,-423,-337,108,1385,1487,1516,1465,1317,1072], [0,0,1489,2049,2049,1489], [0,0,1489,2049,2049,1489], [0,0,1489,2049,2049,1489],\n\t\t[0,0,1489,1872,1872,1489], [0,0,1489,2049,2049,1489], [0,0,2049,2049,1489], [1670,0,0,1670,2049,2049], [1677,0,0,1677,1872,1872],\n\t\t[740,0,0,28,119,375,743,1118,1371,1457.5,1489,1489,883], [0,0,1489,1992,1992,1987,1910,1489],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1318,2049,2049,1070.5], [744,415,172,21,-31,20,172,414.5,744,1073,2049,2049,1318,1070.5],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1670,2049,2049,1670,1070.5], [744,415,172,21,-31,20,172,414.5,744,1073,1992,1992,1987,1910,1070.5],\n\t\t[744,415,172,21,-31,20,172,414.5,744,1073,1872,1872,1872,1070.5], [216,105,105,216,1088,1199,1199,1088],\n\t\t[744,-146,-146,20,172,414.5,744,1611,1611,1520,1468,1318,1070.5], [598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489],\n\t\t[598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489], [598,313,115,6,-31,4,115,315.5,598,1489,2049,2049,1489],\n\t\t[598,313,115,6,-31,4,115,315.5,598,1489,1872,1872,1489], [1489,0,0,1489,2049,2049], [0,0,469,610.5,787,992,1130,1489,1489],\n\t\t[0,-24,12.4,121.5,284.1,481,1241,1376,1479,1544.3,1566,1536.5,1449,1295.5,1080], [324,182.8,69,-6,-31,0,758,939,1676,1676,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1676,1676,1093], [324,182.8,69,-6,-31,0,758,1297,1676,1676,1297,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1619,1619,1614,1537,1309], [324,182.8,69,-6,-31,0,758,1499,1499,1093],\n\t\t[324,182.8,69,-6,-31,0,758,1630,1761.8,1871,1944.5,1969,1944.5,1871,1761.8,1630],\n\t\t[317,178.8,68,-4.8,-29,-26,3.5,68,559,641,861.3,1020,1116,1148,1146,1127,1093], [557,300,-397,-416,-423,-337,-232,70,1050,1116,1143,1104,987,801.5],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1016,1676,1676,797.8], [552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1676,1676,987,797.8],\n\t\t[552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1297,1676,1676,1297,797.8], [552,306.6,124.5,11.6,-26,1,68,539,641,856.3,1499,1499,797.8],\n\t\t[1676,0,0,1302,1676], [1302,0,0,1676,1676], [1297,0,0,1297,1676,1676], [1304,0,0,1304,1499,1499],\n\t\t[484,266.5,104,2.8,-31,12,141,351,637,1469,1566,1556], [0,0,725,1619,1619,1614,1537,1309,1117],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1676,1676,802.4], [558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1676,1676,989.5,802.4],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1297,1676,1676,1297,802.4], [558,313.8,127,8.5,-31,8.5,127,313.8,558,1619,1619,1614,1537,1309],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1499,1499,1499,802.4], [572,7,7,572,732,1297,1297,732],\n\t\t[-148,-148,8.5,127,313.8,558,1241,1241,1108.4,989.5,802.4,558], [392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117],\n\t\t[392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117], [392,209.1,76.5,-4.1,-31,0,1117,1676,1676,1117], [392,209.1,76.5,-4.1,-31,0,1117,1499,1499,1117],\n\t\t[1117,-412,-412,1117,1676,1676], [-412,-412,133,323.5,572,813.4,995.5,1109.9,1556,1556], [-370,-370,285,1117,1117], [1676,1292,1292,1676],\n\t\t[1304,1292,1292,1304,1499,1676,1676,1499], [1489,0,0,1489], [832,832,1117,1117], [1489,1105,0,0,1489,1489], [1489,1105,0,0,1489,1489],\n\t\t[1489,1105,0,0,1489,1489], [1489,1105,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520], [1489,1105,0,0,1489,1489],\n\t\t[1489,1105,0,0,174,894,1144.8,1345,1476.3,1520], [1304,0,0,1304,1499,1676,1676,1499], [0,0,1489,1489],\n\t\t[0,0,28,122,262,458,1155,1316.5,1427,1477,1489,1489], [0,0,1313,1489,1489], [0,0,1489,1489], [0,0,1489,1489], [0,0,176,1489,1489,184],\n\t\t[0,0,1489,1489], [744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1489,1489], [0,0,1489,1489], [0,0,1489,1489],\n\t\t[0,0,1489,1489], [0,0,1489,1489], [0,0,1489,1489], [744,415,172,21,-31,20,172,414.5,744,1073,1318,1467.5,1520,1468,1318,1070.5], [0,0,1489,1489],\n\t\t[0,0,709,855.5,1039,1254,1396,1466.5,1489,1489], [0,0,176,1489,1489,184], [1313,0,0,1313,1489,1489], [1489,0,0,1489,1489],\n\t\t[755,507,325,-16,-16,325,506.5,755,994,1171,1505,1505,1171,993], [0,0,1489,1489], [910,647,471,0,0,471,645.5,910,1489,1489],\n\t\t[0,0,174,894,1144.8,1345,1476.3,1520,1476.3,1345,1144.8,894,174], [1677,0,0,1677,1872,1872], [1489,0,0,1489,1872,1872,1872],\n\t\t[550,306.8,123,7.5,-31,0,1117,1676,1676,803], [306,148.5,46,-10,-26,-5,64,270,1083,1676,1676,986.5,839], [0,-412,-412,725,906,1676,1676,1117],\n\t\t[1676,0,0,1676], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1499,1676,1676,1499,1117], [550,306.8,123,7.5,-31,0,1117,1148,1108,992,803],\n\t\t[-412,-412,110,259.5,444,1195,1355,1467,1534.5,1556,1524.3,1429,1277.8,1078], [1117,-412,-412,1117,1117],\n\t\t[534,299.6,120.5,6.9,-31,7.8,124,308.3,551,1556,1556], [306,148.5,46,-10,-26,-5,64,270,1083,1127.5,1144,1128,1079,986.5,839],\n\t\t[463,262.3,118,-412,-412,-264.5,-96,1556,1556], [0,-412,-412,725,906,1039,1120.8,1148,1117],\n\t\t[768,451.5,241,37.5,-31,37.5,241,451.5,768,1073,1288,1487,1556,1487,1288,1073.5], [0,0,1117,1117], [0,0,1117,1118,1119,1117], [0,0,1556,1556],\n\t\t[-412,-412,0,1117,1117], [1117,0,0,1117,1117], [412,248.5,113,-412,-412,-265,-96,1556,1556],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,989.5,1108.4,1148,1108.4,989.5,802.4], [0,0,1117,1117],\n\t\t[-412,-412,148.5,340.9,577,821.5,1001,1111.3,1148,1115,1020,861.5,646], [549,299,129,-412,-412,-268,-96,1079,1124.5,1143,1102.5,981,792],\n\t\t[558,313.8,127,8.5,-31,7.5,123,308.8,952,1117,1148,1108.6,990.5,803.6], [952,0,0,952,1117,1117],\n\t\t[407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1117], [546,314,142,-412,-412,159,342.3,576,816.6,996.5,1108.6,1146,1145.5,1143,1117,842],\n\t\t[-412,-412,1117,1117], [446,248.5,-412,-412,248,446,1117,1117], [503,310.5,139,16.5,-30,-30,14.5,139,310.5,503,811.5,1117,1117,811.5],\n\t\t[1304,0,0,1304,1499,1499], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1499,1499,1117],\n\t\t[558,313.8,127,8.5,-31,8.5,127,313.8,558,802.4,1676,1676,802.4], [407,213.6,77.5,-3.1,-30,-2.6,79.5,216.1,407,1117,1676,1676,1117],\n\t\t[503,310.5,139,16.5,-30,-30,14.5,139,310.5,503,811.5,1676,1676,811.5], [424,240.1,94.5,-0.4,-32,17,190,493,837,1097,1286,1464.5,1519,1496.5,1430],\n\t\t[0,0,1489,1489], [1315,-193,-193,1315,1489,1489], [-189,-189,-13,1489,1489,2], [572,572,732,732], [0,0,1489,1489], [511,511,794,794],\n\t\t[842,-151,-151,1788,1788,981], [642,447.6,292.5,190.9,157,157,190.4,290.5,450.4,663,857.4,1012.5,1114.1,1148,1148,1114.5,1014,854],\n\t\t[-402,-417.5,-423,-395.5,-313,-179.8,1367,1545,1560.5,1566,1538.5,1456,1321.8,-224], [202,202,209,233.4,306.5,588,1104,1104,1097,1072.5,999,719],\n\t\t[362,27,27,362,942,1277,1277,942], [0,0,1393,910], [0,0,910,1393]\n\t];\n\tpublic KERN_C1 =\n\t[\n\t\t'\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n\t\t'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n\t\t'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n\t\t'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n\t\t'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n\t\t'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n\t\t'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n\t\t'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n\t\t'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n\t\t'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n\t\t'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n\t\t'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n\t];\n\tpublic KERN_C2 =\n\t[\n\t\t'\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n\t\t'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n\t\t'?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n\t\t'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n\t\t'.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n\t\t'\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n\t\t'\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n\t\t'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n\t\t'\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n\t\t'\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n\t\t'-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n\t\t'\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n\t\t'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n\t\t'-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n\t];\n\tpublic KERN_K =\n\t[\n\t\t100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n\t\t20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n\t\t50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n\t\t300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n\t\t220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n\t\t50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n\t\t100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n\t\t60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n\t\t10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n\t\t20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n\t];\n\n\tconstructor()\n\t{\n\t\tfor (let n = this.GLYPH_DATA.length - 1; n >= 0; n--) this.pathCache[n] = null;\n\t}\n\n\t// returns the advance value between two glyphs, with kerning included\n\t/*public getKerning(g1:number, g2:number):number\n\t{\n\t\tfor (let n = 0; n < this.GLYPH_COUNT; n++) if (this.KERN_G1[n] == g1 && this.KERN_G2[n] == g2) return this.KERN_K[n];\n\t\treturn 0;\n\t}*/\n\tpublic getKerning(ch1:string, ch2:string):number\n\t{\n\t\tconst sz = this.KERN_K.length;\n\t\tfor (let n = 0; n < sz; n++) if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2) return -this.KERN_K[n];\n\t\treturn 0;\n\t}\n\n\t// for text of a given size, returns [width,ascent,descent]; all of these numbers are positive; text drawing always uses\n\t// the left/baseline as the reference position\n\tpublic static measureText(txt:string, size:number):number[] {return this.main.measureText(txt, size);}\n\tpublic measureText(txt:string, size:number):number[]\n\t{\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size / font.UNITS_PER_EM;\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = this.getIndex(ch);\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t}\n\n\t\treturn [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n\t}\n\n\t// measurement of individual characters: an array of x offsets is returned (0, sz1, sz1+sz2, ...) with kernings\n\t// factored in; this is particularly useful for wordwrapping, as it avoids repeated calls; the size is one greater\n\t// than the string length, to capture the final position of the whole string\n\tpublic static measureWidths(txt:string, size:number):number[] {return this.main.measureWidths(txt, size);}\n\tpublic measureWidths(txt:string, size:number):number[]\n\t{\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size / font.UNITS_PER_EM;\n\t\tlet xpos = [0];\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = this.getIndex(ch);\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\txpos.push(dx * scale);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\n\t\t\txpos.push(dx * scale);\n\t\t}\n\t\treturn xpos;\n\t}\n\n\tprivate pathCache:Path2D[] = [];\n\tprivate pathMissing:Path2D = null;\n\n\t// convert the character into a glyph index\n\t// NOTE: might be faster with a binary search? indexOf is fairly quick though\n\tpublic getIndex(ch:string):number\n\t{\n\t\treturn this.UNICODE.indexOf(ch);\n\t}\n\n\t// returns the raw SVG glyph directly\n\tpublic getRawGlyph(idx:number):string\n\t{\n\t\treturn this.GLYPH_DATA[idx];\n\t}\n\n\t// returns canvas path object for the glyph (cached in case the constructor is rate limiting)\n\tpublic getGlyphPath(idx:number):Path2D\n\t{\n\t\tlet path = this.pathCache[idx];\n\t\tif (path != null) return path;\n\t\tpath = new Path2D(this.GLYPH_DATA[idx]);\n\t\tthis.pathCache[idx] = path;\n\t\treturn path;\n\t}\n\n\t// returns the glyph for \"unknown\"\n\tpublic getMissingPath():Path2D\n\t{\n\t\tif (!this.pathMissing) this.pathMissing = new Path2D(this.MISSING_DATA);\n\t\treturn this.pathMissing;\n\t}\n\n\t// grab duplicates of the points that make up the convex outline for the glyph\n\tpublic getOutlineX(idx:number):number[] {return this.OUTLINE_X[idx].slice(0);}\n\tpublic getOutlineY(idx:number):number[] {return this.OUTLINE_Y[idx].slice(0);}\n\n\t// ------------ special native-font methods ------------\n\n\tprivate ctxReference:CanvasRenderingContext2D = null;\n\n\t// must call this function before accessing native font measuring, because the only way to get access to the functionality is to have\n\t// a canvas object; manufacturing a fake one is a hacky workaround\n\tpublic initNativeFont(ctx?:CanvasRenderingContext2D):void\n\t{\n\t\tif (ctx == null && this.ctxReference) return;\n\t\tif (ctx == null)\n\t\t{\n\t\t\t/*let canvas = dom('<canvas/>').appendTo(document.body);\n\t\t\tthis.ctxReference = (canvas.el as HTMLCanvasElement).getContext('2d');\n\t\t\tcanvas.remove();*/\n\t\t\tlet canvas = new OffscreenCanvas(256, 256);\n\t\t\tthis.ctxReference = canvas.getContext('2d') as unknown as CanvasRenderingContext2D;\n\t\t}\n\t\telse this.ctxReference = ctx;\n\t}\n\n\tpublic static measureTextNative(txt:string, family:string, size:number, opt:FontDataNativeOpt = {}):number[]\n\t{\n\t\treturn this.main.measureTextNative(txt, family, size, opt);\n\t}\n\tpublic measureTextNative(txt:string, family:string, size:number, opt:FontDataNativeOpt = {}):number[]\n\t{\n\t\tif (!this.ctxReference) throw 'Calling measureTextNative without having called initNativeFont first';\n\t\tthis.ctxReference.save();\n\t\tlet pfx = '';\n\t\tif (opt.bold) pfx += 'bold ';\n\t\tif (opt.italic) pfx += 'italic ';\n\t\tthis.ctxReference.font = pfx + size + 'px ' + family;\n\t\tlet metrics = this.ctxReference.measureText(txt);\n\t\tthis.ctxReference.restore();\n\n\t\t// unfortunately the font-bounding values aren't implemented yet, and will come out as null; default to the same fudge-factors as built in font\n\t\t//return [metrics.width, metrics.fontBoundingBoxAscent, metrics.fontBoundingBoxDescent];\n\t\tconst FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n\t\treturn [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box} from '../util/Geom';\nimport {colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {FontData, FontDataNativeOpt} from './FontData';\n\n/*\n\tMetaVector: allows the construction of a set of drawing primitives of the most basic variety. These are collected together so that they can be analyzed,\n\te.g. finding the precise boundary, and optionally transformed or spooled into other such instances.\n\n\tRendering can be done by creating an SVG instance reflecting the content, or writing onto an HTML canvas using drawing primitives.\n\n\tSeparation of type & object is done in order to optimise SVG creation: when a lot of objects with the same characteristics (e.g. fill/outline) are consecutive,\n\tthis allows them to be grouped together without repeating unnecessary information.\n\n\tLine, Rect & Oval objects are fairly self-explanatory.\n\n\tText objects are handled unusually: they correspond to internally-defined paths, so they can be measured *precisely* without knowing the rendering context\n\tahead of time. This means that the font options are limited, but for most chemistry rendering tasks, this is not a dealbreaker.\n\n\tTextNative is to be used in cases where the font should match other renderings on the device, e.g. HTML text & MetaVector text should be drawn in the same\n\tway. The font is specified using the CSS style, which is the same for SVG & canvas. Measurement of the native text is done by making a fake invisible background\n\tcanvas which is specific to the current HTML environment. Rendering on another device does not guarantee the same metrics, so caution must be exercised.\n*/\n\nexport enum TextAlign\n{\n\tCentre = 0,\n\tLeft = 1,\n\tRight = 2,\n\tBaseline = 0,\n\tMiddle = 4,\n\tTop = 8,\n\tBottom = 16\n}\n\nenum PrimClass\n{\n\tLine = 1,\n\tRect = 2,\n\tOval = 3,\n\tPath = 4,\n\tText = 5,\n\tTextNative = 6,\n}\n\ninterface PrimBase\n{\n\tprimClass:PrimClass;\n\ttypeidx:number;\n}\ninterface TypeBase\n{\n\tprimClass:PrimClass;\n}\n\ninterface LinePrim extends PrimBase\n{\n\tx1:number;\n\ty1:number;\n\tx2:number;\n\ty2:number;\n}\ninterface LineType extends TypeBase\n{\n\tthickness:number;\n\tcolour:number;\n}\n\ninterface RectPrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\tw:number;\n\th:number;\n}\ninterface RectType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n}\n\ninterface OvalPrim extends PrimBase\n{\n\tcx:number;\n\tcy:number;\n\trw:number;\n\trh:number;\n}\ninterface OvalType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n}\n\ninterface PathPrim extends PrimBase\n{\n\tcount:number;\n\tx:number[];\n\ty:number[];\n\tctrl:boolean[];\n\tclosed:boolean;\n}\ninterface PathType extends TypeBase\n{\n\tedgeCol:number;\n\tfillCol:number;\n\tthickness:number;\n\thardEdge:boolean;\n}\n\ninterface TextPrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\ttxt:string;\n\tdirection:number;\n}\ninterface TextType extends TypeBase\n{\n\tsize:number;\n\tcolour:number;\n}\n\ninterface TextNativePrim extends PrimBase\n{\n\tx:number;\n\ty:number;\n\ttxt:string;\n}\ninterface TextNativeType extends TypeBase\n{\n\tfamily:string;\n\tsize:number;\n\tcolour:number;\n\topt:FontDataNativeOpt;\n}\n\nclass SpoolSVG\n{\n\tprivate lines:string[] = [];\n\tprivate depth = 0;\n\n\tconstructor(private prettyPrint:boolean) {}\n\tpublic spool(str:string) {if (str?.length > 0) this.lines.push(str);}\n\tpublic start(str:string):void\n\t{\n\t\tif (this.prettyPrint && this.depth > 0) this.lines.push('  '.repeat(this.depth));\n\t\tthis.spool(str);\n\t}\n\tpublic stop(str:string):void\n\t{\n\t\tthis.spool(str);\n\t\tif (this.prettyPrint) this.lines.push('\\n');\n\t}\n\tpublic whole(str:string):void\n\t{\n\t\tif (this.prettyPrint && this.depth > 0) this.lines.push('  '.repeat(this.depth));\n\t\tthis.spool(str);\n\t\tif (this.prettyPrint) this.lines.push('\\n');\n\n\t}\n\tpublic attr(key:string, val:string | number):void\n\t{\n\t\tif (typeof val == 'number')\n\t\t{\n\t\t\tval = val.toFixed(4);\n\t\t\tlet match = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val) ?? /^(.*)\\.0+$/.exec(val);\n\t\t\tif (match) val = match[1];\n\t\t}\n\t\tthis.spool(` ${key}=\"${val}\"`);\n\t}\n\tpublic inc():void {this.depth++;}\n\tpublic dec():void {this.depth--;}\n\tpublic toString():string {return this.lines.join('');}\n}\n\nexport class MetaVector\n{\n\t//private ONE_THIRD = 1.0 / 3;\n\n\tpublic static NOCOLOUR = -1;\n\n\tprivate types:TypeBase[] = [];\n\tprivate prims:PrimBase[] = [];\n\tprivate typeObj:TypeBase[];\n\tpublic width:number = 0;\n\tpublic height:number = 0;\n\tpublic offsetX = 0;\n\tpublic offsetY = 0;\n\tpublic scale = 1;\n\tpublic density = 1;\n\n\tprivate charMask:boolean[];\n\tprivate charMissing = false;\n\tprivate lowX:number = null;\n\tprivate lowY:number = null;\n\tprivate highX:number = null;\n\tprivate highY:number = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(vec?:any)\n\t{\n\t\tconst font = FontData.main;\n\n\t\tthis.charMask = Vec.booleanArray(false, font.UNICODE.length);\n\n\t\tif (vec != null)\n\t\t{\n\t\t\tif (vec.size != null)\n\t\t\t{\n\t\t\t\tthis.width = vec.size[0];\n\t\t\t\tthis.height = vec.size[1];\n\t\t\t}\n\t\t\tif (vec.types != null) this.types = vec.types;\n\t\t\tif (vec.prims != null) this.prims = vec.prims;\n\n\t\t\t// extract char-mask\n\t\t\tfor (let p of this.prims) if (p.primClass == PrimClass.Text)\n\t\t\t{\n\t\t\t\tlet {txt} = (p as TextPrim);\n\t\t\t\tfor (let n = 0; n < txt.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet i = font.getIndex(txt.charAt(n));\n\t\t\t\t\tif (i >= 0) this.charMask[i] = true; else this.charMissing = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// methods for adding a primitive (and possibly a type to go with it)\n\tpublic drawLine(x1:number, y1:number, x2:number, y2:number, colour:number, thickness:number):void\n\t{\n\t\tif (thickness == null) thickness = 1;\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Line, thickness, colour} as LineType);\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n\t\tthis.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n\n\t\tthis.prims.push({primClass: PrimClass.Line, typeidx, x1, y1, x2, y2} as LinePrim);\n\t}\n\tpublic drawRect(x:number, y:number, w:number, h:number, edgeCol:number, thickness:number, fillCol:number):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Rect, edgeCol, fillCol, thickness} as RectType);\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(x - bump, y - bump);\n\t\tthis.updateBounds(x + w + bump, y + h + bump);\n\n\t\tthis.prims.push({primClass: PrimClass.Rect, typeidx, x, y, w, h} as RectPrim);\n\t}\n\tpublic drawOval(cx:number, cy:number, rw:number, rh:number, edgeCol:number, thickness:number, fillCol:number):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\n\t\tconst bump = 0.5 * thickness;\n\t\tthis.updateBounds(cx - rw - bump, cy - rh - bump);\n\t\tthis.updateBounds(cx + rw + bump, cy + rh + bump);\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Oval, edgeCol, fillCol, thickness} as OvalType);\n\t\tthis.prims.push({primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh} as OvalPrim);\n\t}\n\tpublic drawPath(xpoints:number[], ypoints:number[], ctrlFlags:boolean[], isClosed:boolean,\n\t\t\t\t\tedgeCol:number, thickness:number, fillCol:number, hardEdge:boolean):void\n\t{\n\t\tif (edgeCol == null) edgeCol = MetaVector.NOCOLOUR;\n\t\tif (fillCol == null) fillCol = MetaVector.NOCOLOUR;\n\t\tif (thickness == null) thickness = 1;\n\t\tif (hardEdge == null) hardEdge = false;\n\n\t\tconst bump = 0.5 * thickness;\n\t\tfor (let n = 0; n < xpoints.length; n++)\n\t\t{\n\t\t\t// NOTE: treats control points as literals; this could cause glitches, but hasn't yet\n\t\t\tthis.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n\t\t\tif (bump != 0) this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n\t\t}\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge} as PathType);\n\t\tthis.prims.push({primClass: PrimClass.Path, typeidx, count: xpoints.length,\n\t\t\t\t\t\t x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed} as PathPrim);\n\t}\n\tpublic drawPoly(xpoints:number[], ypoints:number[], edgeCol:number, thickness:number, fillCol:number, hardEdge:boolean):void\n\t{\n\t\tthis.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n\t}\n\tpublic drawText(x:number, y:number, txt:string, size:number, colour:number, align?:number, direction?:number):void\n\t{\n\t\tif (align == null) align = TextAlign.Left | TextAlign.Baseline;\n\t\tif (direction == null) direction = 0;\n\n\t\tlet cosTheta = 1, sinTheta = 0;\n\t\tif (direction != 0) [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n\n\t\tconst font = FontData.main;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet i = font.getIndex(txt.charAt(n));\n\t\t\tif (i >= 0) this.charMask[i] = true; else this.charMissing = true;\n\t\t}\n\n\t\tlet metrics = font.measureText(txt, size);\n\t\tlet bx = 0, by = 0;\n\n\t\tlet dx = 0;\n\t\tif ((align & TextAlign.Left) != 0) {}\n\t\telse if ((align & TextAlign.Right) != 0) dx = -metrics[0];\n\t\telse /* centre */ dx = -0.5 * metrics[0];\n\t\tif (dx != 0)\n\t\t{\n\t\t\tbx += dx * cosTheta;\n\t\t\tby += dx * sinTheta;\n\t\t}\n\n\t\tlet dy = 0;\n\t\tif ((align & TextAlign.Middle) != 0) dy = 0.5 * metrics[1];\n\t\telse if ((align & TextAlign.Top) != 0) dy = metrics[1];\n\t\telse if ((align & TextAlign.Bottom) != 0) dy = -metrics[2];\n\t\t// else: baseline\n\t\tif (dy != 0)\n\t\t{\n\t\t\tbx -= dy * sinTheta;\n\t\t\tby += dy * cosTheta;\n\t\t}\n\n\t\t// mainstaking measurement of the boundaries (looks like overkill, but it really isn't)\n\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n\t\tlet tx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\t\t\tif (i >= 0)\n\t\t\t{\n\t\t\t\tlet outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n\t\t\t\tx1 = Math.min(x1, tx + Vec.min(outlineX));\n\t\t\t\tx2 = Math.max(x2, tx + Vec.max(outlineX));\n\t\t\t\ty1 = Math.min(y1, -Vec.max(outlineY));\n\t\t\t\ty2 = Math.max(y2, -Vec.min(outlineY));\n\n\t\t\t\ttx += font.HORIZ_ADV_X[i];\n\t\t\t\tif (n < txt.length - 1) tx += font.getKerning(ch, txt.charAt(n + 1));\n\n\t\t\t\t// !! TODO: compensate for direction if !0 and !baseline/left\n\t\t\t}\n\t\t\telse tx += font.MISSING_HORZ;\n\t\t}\n\t\tconst mscale = size * font.INV_UNITS_PER_EM;\n\t\tif (direction == 0)\n\t\t{\n\t\t\tthis.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n\t\t\tthis.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet rx1 = x1 * mscale, ry1 = y1 * mscale;\n\t\t\tlet rx2 = x2 * mscale, ry2 = y2 * mscale;\n\t\t\tthis.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n\t\t\tthis.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n\t\t}\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.Text, size, colour} as TextType);\n\t\tthis.prims.push({primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction} as TextPrim);\n\t}\n\n\t// render *native* text, which is defined by an HTML/CSS font specifier; this is different from the built-in text in that it presumes that the device\n\t// can locate the font at render-time, and that whatever methods were used to measure the font at draw-time are synced; this is a fair assumption when\n\t// creating graphics for immediate output to a canvas or inline-rendered SVG object, but anything else has to be taken on a case by case basis\n\tpublic drawTextNative(x:number, y:number, txt:string, fontFamily:string, fontSize:number, colour:number, align?:number, opt?:FontDataNativeOpt):void\n\t{\n\t\tif (!opt) opt = {};\n\n\t\tif (align == null) align = TextAlign.Left | TextAlign.Baseline;\n\t\tconst font = FontData.main;\n\n\t\tlet metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n\n\t\tif ((align & TextAlign.Left) != 0) {}\n\t\telse if ((align & TextAlign.Right) != 0) x -= metrics[0];\n\t\telse /* centre */ x -= 0.5 * metrics[0];\n\n\t\tif ((align & TextAlign.Middle) != 0) y += 0.5 * metrics[1];\n\t\telse if ((align & TextAlign.Top) != 0) y += metrics[1];\n\t\telse if ((align & TextAlign.Bottom) != 0) y -= metrics[2];\n\t\t// else: baseline\n\n\t\tthis.updateBounds(x, y - metrics[1]);\n\t\tthis.updateBounds(x + metrics[0], y + metrics[2]);\n\n\t\tlet typeidx = this.findOrCreateType({primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt} as TextNativeType);\n\t\tthis.prims.push({primClass: PrimClass.TextNative, typeidx, x, y, txt} as TextNativePrim);\n\t}\n\n\t// query the boundaries of the drawing, post factum\n\tpublic boundLowX():number {return this.lowX;}\n\tpublic boundLowY():number {return this.lowY;}\n\tpublic boundHighX():number {return this.highX;}\n\tpublic boundHighY():number {return this.highY;}\n\tpublic getBounds():Box {return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY);}\n\n\t// update width/height (this isn't done automatically, as it can be considered a parameter)\n\tpublic measure():void\n\t{\n\t\tthis.width = Math.ceil(this.highX - this.lowX);\n\t\tthis.height = Math.ceil(this.highY - this.lowY);\n\t}\n\n\t// for a metavector that has been drawn programmatically, makes sure that origin is (0,0) and that the size is set\n\tpublic normalise():void\n\t{\n\t\tif (this.lowX != 0 || this.lowY != 0) this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n\t\tthis.width = Math.ceil(this.highX - this.lowX);\n\t\tthis.height = Math.ceil(this.highY - this.lowY);\n\t}\n\n\t// convenience\n\tpublic setSize(width:number, height:number) {this.width = width; this.height = height;}\n\n\t// makes sure everything fits into the indicated box, scaling down if necessary (but not up)\n\tpublic transformIntoBox(box:Box):void\n\t{\n\t\tthis.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n\t\tlet nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n\t\tlet scale = 1;\n\t\tif (nw > box.w)\n\t\t{\n\t\t\tlet mod = box.w / nw;\n\t\t\tnw = box.w;\n\t\t\tnh *= mod;\n\t\t\tscale *= mod;\n\t\t}\n\t\tif (nh > box.h)\n\t\t{\n\t\t\tlet mod = box.h / nh;\n\t\t\tnh = box.h;\n\t\t\tnw *= mod;\n\t\t\tscale *= mod;\n\t\t}\n\t\tlet ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n\t\tthis.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n\t}\n\n\t// if the width/height of the content exceeds either of the indicated maximum dimensions, it is scaled down accordingly;\n\t// does not correct for the origin\n\tpublic scaleExtent(maxWidth:number, maxHeight:number):void\n\t{\n\t\tlet w = this.highX - this.lowX, h = this.highY - this.lowY;\n\t\tif (w <= maxWidth && h <= maxHeight) return; // already in bounds\n\t\tlet scale = Math.min(maxWidth / w, maxHeight / h);\n\t\tthis.transformPrimitives(0, 0, scale, scale);\n\t}\n\n\t// transforms the sizes and positions of the primitives; a transform of [0,0,1,1] is the identity; the position of each coordinate\n\t// is rescaled based on: p' = p*scale + offset\n\tpublic transformPrimitives(ox:number, oy:number, sw:number, sh:number):void\n\t{\n\t\tif (ox == 0 && oy == 0 && sw == 1 && sh == 1) return;\n\n\t\tfor (let a of this.prims)\n\t\t{\n\t\t\tconst type = a.primClass;\n\t\t\tif (type == PrimClass.Line)\n\t\t\t{\n\t\t\t\tlet line = a as LinePrim;\n\t\t\t\tline.x1 = ox + line.x1 * sw;\n\t\t\t\tline.y1 = oy + line.y1 * sh;\n\t\t\t\tline.x2 = ox + line.x2 * sw;\n\t\t\t\tline.y2 = oy + line.y2 * sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tlet rect = a as RectPrim;\n\t\t\t\trect.x = ox + rect.x * sw;\n\t\t\t\trect.y = oy + rect.y * sh;\n\t\t\t\trect.w = rect.w * sw;\n\t\t\t\trect.h = rect.h * sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tlet oval = a as OvalPrim;\n\t\t\t\toval.cx = ox + oval.cx * sw;\n\t\t\t\toval.cy = oy + oval.cy * sh;\n\t\t\t\toval.rw *= sw;\n\t\t\t\toval.rh *= sh;\n\t\t\t}\n\t\t\telse if (type == PrimClass.Path)\n\t\t\t{\n\t\t\t\tlet path = a as PathPrim;\n\t\t\t\tlet sz = path.count, px = path.x, py = path.y;\n\t\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t\t{\n\t\t\t\t\tpx[n] = ox + px[n] * sw;\n\t\t\t\t\tpy[n] = oy + py[n] * sh;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == PrimClass.Text || type == PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tlet text = a as TextPrim | TextNativePrim;\n\t\t\t\ttext.x = ox + text.x * sw;\n\t\t\t\ttext.y = oy + text.y * sh;\n\t\t\t}\n\t\t}\n\t\tlet swsh = 0.5 * (sw + sh);\n\t\tif (swsh != 1) for (let t of this.types)\n\t\t{\n\t\t\tconst type = t.primClass;\n\t\t\tif (type == PrimClass.Line) (t as LineType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Rect) (t as RectType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Oval) (t as OvalType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Path) (t as PathType).thickness *= swsh;\n\t\t\telse if (type == PrimClass.Text) (t as TextType).size *= swsh;\n\t\t\telse if (type == PrimClass.TextNative) (t as TextNativeType).size *= swsh;\n\t\t}\n\n\t\tthis.lowX = ox + this.lowX * sw;\n\t\tthis.lowY = oy + this.lowY * sh;\n\t\tthis.highX = ox + this.highX * sw;\n\t\tthis.highY = oy + this.highY * sh;\n\t}\n\n\t// renders the meta vector by creating a new canvas\n\tpublic renderInto(parent:any)\n\t{\n\t\tlet canvas = newElement(parent, 'canvas', {'width': this.width, 'height': this.height}) as HTMLCanvasElement;\n\t\tthis.renderCanvas(canvas);\n\t\treturn canvas;\n\t}\n\n\t// renders the meta vector into an existing canvas\n\tpublic renderCanvas(canvas:HTMLCanvasElement, clearFirst?:boolean)\n\t{\n\t\tlet ctx = canvas.getContext('2d');\n\t\tif (clearFirst) ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tlet w = this.width, h = this.height;\n\n\t\tthis.density = pixelDensity();\n\n\t\tcanvas.style.width = w + 'px';\n\t\tcanvas.style.height = h + 'px';\n\t\tcanvas.width = w * this.density;\n\t\tcanvas.height = h * this.density;\n\n\t\tthis.renderContext(ctx);\n\t}\n\n\t// renders the meta vector into a context (this is useful when there's stuff to draw above or below)\n\tpublic renderContext(ctx:CanvasRenderingContext2D)\n\t{\n\t\tctx.save();\n\t\tctx.scale(this.density, this.density);\n\n\t\tthis.typeObj = [];\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tlet t = this.types[n];\n\t\t\tif (t.primClass == PrimClass.Line) this.typeObj[n] = this.setupTypeLine(t as LineType);\n\t\t\telse if (t.primClass == PrimClass.Rect) this.typeObj[n] = this.setupTypeRect(t as RectType);\n\t\t\telse if (t.primClass == PrimClass.Oval) this.typeObj[n] = this.setupTypeOval(t as OvalType);\n\t\t\telse if (t.primClass == PrimClass.Path) this.typeObj[n] = this.setupTypePath(t as PathType);\n\t\t\telse if (t.primClass == PrimClass.Text) this.typeObj[n] = this.setupTypeText(t as TextType);\n\t\t\telse if (t.primClass == PrimClass.TextNative) this.typeObj[n] = this.setupTypeTextNative(t as TextNativeType);\n\t\t}\n\t\tfor (let n = 0; n < this.prims.length; n++)\n\t\t{\n\t\t\tlet p = this.prims[n];\n\t\t\tif (p.primClass == PrimClass.Line) this.renderLine(ctx, p as LinePrim);\n\t\t\telse if (p.primClass == PrimClass.Rect) this.renderRect(ctx, p as RectPrim);\n\t\t\telse if (p.primClass == PrimClass.Oval) this.renderOval(ctx, p as OvalPrim);\n\t\t\telse if (p.primClass == PrimClass.Path) this.renderPath(ctx, p as PathPrim);\n\t\t\telse if (p.primClass == PrimClass.Text) this.renderText(ctx, p as TextPrim);\n\t\t\telse if (p.primClass == PrimClass.TextNative) this.renderTextNative(ctx, p as TextNativePrim);\n\t\t}\n\n\t\tctx.restore();\n\t}\n\n\t// builds a new DOM containing an <svg> element, and everything underneath it is a representation of the graphic; the most common UI use case for this method is:\n\t//\t\t\tlet domSVG = dom(gfx.createSVG()).appendTo(div);\n\t//\t\t\tdomSVG.css({'display': 'block', 'pointer-events': 'none'});\n\t// note that setting the display style to 'block' prevents the layout from adding descender padding for baseline alignment, which is never useful; and disabling\n\t// pointer events for individual SVG elements is generally a good idea\n\tpublic createSVG(prettyPrint = false, withXlink = false):string\n\t{\n\t\tlet svg = new SpoolSVG(prettyPrint);\n\t\tsvg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n\t\tif (withXlink) svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\t\tsvg.attr('width', this.width);\n\t\tsvg.attr('height', this.height);\n\t\tsvg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tthis.renderSVG(svg, withXlink);\n\n\t\tsvg.dec();\n\t\tsvg.whole('</svg>');\n\t\treturn svg.toString();\n\t}\n\n\t// given a DOM that represents an <svg> element, or some sub-container (such as <g>), populates it with all of the\n\t// content from the graphic\n\tpublic renderSVG(svg:SpoolSVG, withXlink = false):void\n\t{\n\t\tthis.typeObj = [];\n\n\t\tconst font = FontData.main;\n\t\tsvg.whole('<defs>');\n\t\tsvg.inc();\n\t\tif (this.charMissing)\n\t\t{\n\t\t\tsvg.start('<path');\n\t\t\tsvg.attr('id', 'missing');\n\t\t\tsvg.attr('d', font.MISSING_DATA);\n\t\t\tsvg.attr('edge', 'none');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t\tfor (let n = 0; n < font.UNICODE.length; n++) if (this.charMask[n])\n\t\t{\n\t\t\tsvg.start('<path');\n\t\t\tsvg.attr('id', 'char' + n);\n\t\t\tsvg.attr('d', font.GLYPH_DATA[n]);\n\t\t\tsvg.attr('edge', 'none');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t\tsvg.dec();\n\t\tsvg.whole('</defs>');\n\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tlet t = this.types[n];\n\t\t\tif (t.primClass == PrimClass.Line) this.typeObj[n] = this.setupTypeLine(t as LineType);\n\t\t\telse if (t.primClass == PrimClass.Rect) this.typeObj[n] = this.setupTypeRect(t as RectType);\n\t\t\telse if (t.primClass == PrimClass.Oval) this.typeObj[n] = this.setupTypeOval(t as OvalType);\n\t\t\telse if (t.primClass == PrimClass.Path) this.typeObj[n] = this.setupTypePath(t as PathType);\n\t\t\telse if (t.primClass == PrimClass.Text) this.typeObj[n] = this.setupTypeText(t as TextType);\n\t\t\telse if (t.primClass == PrimClass.TextNative) this.typeObj[n] = this.setupTypeTextNative(t as TextNativeType);\n\t\t}\n\t\tfor (let n = 0; n < this.prims.length;)\n\t\t{\n\t\t\tlet p = this.prims[n], num = 1;\n\t\t\tif (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tfor (; n + num < this.prims.length; num++) if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx) break;\n\t\t\t}\n\t\t\tif (p.primClass == PrimClass.Line)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgLine1(svg, p as LinePrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgLineN(svg, this.prims.slice(n, n + num) as LinePrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgRect1(svg, p as RectPrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgRectN(svg, this.prims.slice(n, n + num) as RectPrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tif (num == 1)\n\t\t\t\t\tthis.svgOval1(svg, p as OvalPrim);\n\t\t\t\telse\n\t\t\t\t\tthis.svgOvalN(svg, this.prims.slice(n, n + num) as OvalPrim[]);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Path) this.svgPath(svg, p as PathPrim);\n\t\t\telse if (p.primClass == PrimClass.Text) this.svgText(svg, p as TextPrim, withXlink);\n\t\t\telse if (p.primClass == PrimClass.TextNative) this.svgTextNative(svg, p as TextNativePrim);\n\n\t\t\tn += num;\n\t\t}\n\t}\n\n\t// for duplication purposes: emits all the primitives into another builder instance\n\tpublic spool(into:MetaVector):void\n\t{\n\t\tfor (let p of this.prims)\n\t\t{\n\t\t\tif (p.primClass == PrimClass.Line)\n\t\t\t{\n\t\t\t\tlet {typeidx, x1, y1, x2, y2} = p as LinePrim;\n\t\t\t\tlet {thickness, colour} = this.types[typeidx] as LineType;\n\t\t\t\tinto.drawLine(x1, y1, x2, y2, colour, thickness);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Rect)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, w, h} = p as RectPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness} = this.types[typeidx] as RectType;\n\t\t\t\tinto.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Oval)\n\t\t\t{\n\t\t\t\tlet {typeidx, cx, cy, rw, rh} = p as OvalPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness} = this.types[typeidx] as OvalType;\n\t\t\t\tinto.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Path)\n\t\t\t{\n\t\t\t\tlet {typeidx, count, x, y, ctrl, closed} = p as PathPrim;\n\t\t\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.types[typeidx] as PathType;\n\t\t\t\tinto.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.Text)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, txt, direction} = p as TextPrim;\n\t\t\t\tlet {size, colour} = this.types[typeidx] as TextType;\n\t\t\t\tinto.drawText(x, y, txt, size, colour, null, direction);\n\t\t\t}\n\t\t\telse if (p.primClass == PrimClass.TextNative)\n\t\t\t{\n\t\t\t\tlet {typeidx, x, y, txt} = p as TextNativePrim;\n\t\t\t\tlet {family, size, colour} = this.types[typeidx] as TextNativeType;\n\t\t\t\tinto.drawTextNative(x, y, txt, family, size, colour);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// transform stored types into renderables\n\tpublic setupTypeLine(t:LineType):LineType\n\t{\n\t\tlet thickness = t.thickness * this.scale;\n\t\tlet colour = t.colour;\n\t\treturn {primClass: t.primClass, thickness, colour};\n\t}\n\tpublic setupTypeRect(t:RectType):RectType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness};\n\t}\n\tpublic setupTypeOval(t:OvalType):OvalType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness};\n\t}\n\tpublic setupTypePath(t:PathType):PathType\n\t{\n\t\tlet edgeCol = t.edgeCol;\n\t\tlet fillCol = t.fillCol;\n\t\tlet thickness = t.thickness * this.scale;\n\t\tlet hardEdge = t.hardEdge;\n\t\treturn {primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge};\n\t}\n\tpublic setupTypeText(t:TextType):TextType\n\t{\n\t\tlet size = t.size * this.scale;\n\t\tlet colour = t.colour;\n\t\treturn {primClass: t.primClass, colour, size};\n\t}\n\tpublic setupTypeTextNative(t:TextNativeType):TextNativeType\n\t{\n\t\tlet family = t.family;\n\t\tlet size = t.size * this.scale;\n\t\tlet colour = t.colour;\n\t\tlet opt = t.opt;\n\t\treturn {primClass: t.primClass, colour, family, size, opt};\n\t}\n\n\t// perform actual rendering for the primitives\n\tpublic renderLine(ctx:CanvasRenderingContext2D, line:LinePrim):void\n\t{\n\t\tlet {x1, y1, x2, y2} = line;\n\t\tlet {colour, thickness} = this.typeObj[line.typeidx] as LineType;\n\n\t\tx1 = this.offsetX + this.scale * x1;\n\t\ty1 = this.offsetY + this.scale * y1;\n\t\tx2 = this.offsetX + this.scale * x2;\n\t\ty2 = this.offsetY + this.scale * y2;\n\t\tif (colour != null)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.strokeStyle = colourCanvas(colour);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.lineCap = 'round';\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tpublic renderRect(ctx:CanvasRenderingContext2D, rect:RectPrim):void\n\t{\n\t\tlet {x, y, w, h} = rect;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rect.typeidx] as RectType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\t\tw *= this.scale;\n\t\th *= this.scale;\n\n\t\tif (fillCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fillRect(x, y, w, h);\n\t\t}\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.lineCap = 'square';\n\t\t\tctx.strokeRect(x, y, w, h);\n\t\t}\n\t}\n\tpublic renderOval(ctx:CanvasRenderingContext2D, oval:OvalPrim):void\n\t{\n\t\tlet {cx, cy, rw, rh} = oval;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[oval.typeidx] as OvalType;\n\n\t\tcx = this.offsetX + this.scale * cx;\n\t\tcy = this.offsetY + this.scale * cy;\n\t\trw *= this.scale;\n\t\trh *= this.scale;\n\n\t\tif (fillCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n\t\t\tctx.fill();\n\t\t}\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\tctx.lineWidth = thickness;\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tpublic renderPath(ctx:CanvasRenderingContext2D, path:PathPrim):void\n\t{\n\t\tlet {count, x, y, ctrl, closed} = path;\n\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.typeObj[path.typeidx] as PathType;\n\n\t\tx = [...x];\n\t\ty = [...y];\n\t\tfor (let n = 0; n < count; n++)\n\t\t{\n\t\t\tx[n] = this.offsetX + this.scale * x[n];\n\t\t\ty[n] = this.offsetY + this.scale * y[n];\n\t\t}\n\n\t\tfor (let layer = 1; layer <= 2; layer++)\n\t\t{\n\t\t\tif (layer == 1 && fillCol == MetaVector.NOCOLOUR) continue;\n\t\t\tif (layer == 2 && edgeCol == MetaVector.NOCOLOUR) continue;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x[0], y[0]);\n\t\t\tfor (let i = 1; i < count; i++)\n\t\t\t{\n\t\t\t\tif (!ctrl || !ctrl[i])\n\t\t\t\t{\n\t\t\t\t\tctx.lineTo(x[i], y[i]);\n\t\t\t\t}\n\t\t\t\telse if (i < count - 1 && !ctrl[i + 1])\n\t\t\t\t{\n\t\t\t\t\tctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if (i < count - 1 && !ctrl[i + 2])\n\t\t\t\t{\n\t\t\t\t\tctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed) ctx.closePath();\n\n\t\t\tif (layer == 1)\n\t\t\t{\n\t\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tctx.strokeStyle = colourCanvas(edgeCol);\n\t\t\t\tctx.lineWidth = thickness;\n\t\t\t\tctx.lineCap = hardEdge ? 'square' : 'round';\n\t\t\t\tctx.lineJoin = hardEdge ? 'miter' : 'round';\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t}\n\tprivate renderText(ctx:CanvasRenderingContext2D, text:TextPrim):void\n\t{\n\t\tlet {x, y, txt, direction} = text;\n\t\tlet {size, colour} = this.typeObj[text.typeidx] as TextType;\n\n\t\tlet fill = colourCanvas(colour);\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size * this.scale / font.UNITS_PER_EM;\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\t\t\tlet path:Path2D = null;\n\t\t\tif (i < 0)\n\t\t\t{\n\t\t\t\tdx += font.MISSING_HORZ;\n\t\t\t\tpath = font.getMissingPath();\n\t\t\t}\n\t\t\telse path = font.getGlyphPath(i);\n\n\t\t\tif (path)\n\t\t\t{\n\t\t\t\tctx.save();\n\t\t\t\tlet theta = direction != 0 ? direction * DEGRAD : 0;\n\t\t\t\tif (theta == 0)\n\t\t\t\t\tctx.translate(x + dx * scale, y);\n\t\t\t\telse\n\t\t\t\t\tctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n\t\t\t\tctx.scale(scale, -scale);\n\t\t\t\tif (theta != 0) ctx.rotate(-theta);\n\t\t\t\tctx.fillStyle = fill;\n\t\t\t\tctx.fill(path);\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t}\n\t}\n\tprivate renderTextNative(ctx:CanvasRenderingContext2D, text:TextNativePrim):void\n\t{\n\t\tlet {x, y, txt} = text;\n\t\tlet {size, colour, family, opt} = this.typeObj[text.typeidx] as TextNativeType;\n\n\t\tlet fill = colourCanvas(colour);\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tctx.save();\n\n\t\tlet pfx = '';\n\t\tif (opt.bold) pfx += 'bold ';\n\t\tif (opt.italic) pfx += 'italic ';\n\t\tctx.font = pfx + (size * this.scale) + 'px ' + family;\n\t\tctx.fillStyle = fill;\n\t\tctx.fillText(txt, x, y);\n\t\tctx.restore();\n\t}\n\n\t// create SVG object for each primitive\n\t// perform actual rendering for the primitives\n\tpublic svgLine1(svg:SpoolSVG, line:LinePrim):void\n\t{\n\t\tlet {x1, y1, x2, y2} = line;\n\t\tlet {colour, thickness} = this.typeObj[line.typeidx] as LineType;\n\n\t\tx1 = this.offsetX + this.scale * x1;\n\t\ty1 = this.offsetY + this.scale * y1;\n\t\tx2 = this.offsetX + this.scale * x2;\n\t\ty2 = this.offsetY + this.scale * y2;\n\n\t\tif (colour != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.start('<line');\n\t\t\tsvg.attr('x1', x1);\n\t\t\tsvg.attr('y1', y1);\n\t\t\tsvg.attr('x2', x2);\n\t\t\tsvg.attr('y2', y2);\n\t\t\tthis.defineSVGStroke(svg, colour);\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'round');\n\t\t\tsvg.stop('/>');\n\t\t}\n\t}\n\tpublic svgLineN(svg:SpoolSVG, lines:LinePrim[]):void\n\t{\n\t\tlet {colour, thickness} = this.typeObj[lines[0].typeidx] as LineType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, colour);\n\t\tsvg.attr('stroke-width', thickness);\n\t\tsvg.attr('stroke-linecap', 'round');\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let line of lines)\n\t\t{\n\t\t\tlet {x1, y1, x2, y2} = line;\n\n\t\t\tx1 = this.offsetX + this.scale * x1;\n\t\t\ty1 = this.offsetY + this.scale * y1;\n\t\t\tx2 = this.offsetX + this.scale * x2;\n\t\t\ty2 = this.offsetY + this.scale * y2;\n\n\t\t\tsvg.start('<line');\n\t\t\tsvg.attr('x1', x1);\n\t\t\tsvg.attr('y1', y1);\n\t\t\tsvg.attr('x2', x2);\n\t\t\tsvg.attr('y2', y2);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgRect1(svg:SpoolSVG, rect:RectPrim):void\n\t{\n\t\tlet {x, y, w, h} = rect;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rect.typeidx] as RectType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\t\tw *= this.scale;\n\t\th *= this.scale;\n\n\t\tsvg.start('<rect');\n\t\tsvg.attr('x', x);\n\t\tsvg.attr('y', y);\n\t\tsvg.attr('width', w);\n\t\tsvg.attr('height', h);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'square');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tpublic svgRectN(svg:SpoolSVG, rects:RectPrim[]):void\n\t{\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[rects[0].typeidx] as RectType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linecap', 'square');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let rect of rects)\n\t\t{\n\t\t\tlet {x, y, w, h} = rect;\n\n\t\t\tx = this.offsetX + this.scale * x;\n\t\t\ty = this.offsetY + this.scale * y;\n\t\t\tw *= this.scale;\n\t\t\th *= this.scale;\n\n\t\t\tsvg.start('<rect');\n\t\t\tsvg.attr('x', x);\n\t\t\tsvg.attr('y', y);\n\t\t\tsvg.attr('width', w);\n\t\t\tsvg.attr('height', h);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgOval1(svg:SpoolSVG, oval:OvalPrim):void\n\t{\n\t\tlet {cx, cy, rw, rh} = oval;\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[oval.typeidx] as OvalType;\n\n\t\tcx = this.offsetX + this.scale * cx;\n\t\tcy = this.offsetY + this.scale * cy;\n\t\trw *= this.scale;\n\t\trh *= this.scale;\n\n\t\tsvg.start('<ellipse');\n\t\tsvg.attr('cx', cx);\n\t\tsvg.attr('cy', cy);\n\t\tsvg.attr('rx', rw);\n\t\tsvg.attr('ry', rh);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tpublic svgOvalN(svg:SpoolSVG, ovals:OvalPrim[]):void\n\t{\n\t\tlet {edgeCol, fillCol, thickness} = this.typeObj[ovals[0].typeidx] as OvalType;\n\n\t\tsvg.start('<g');\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tfor (let oval of ovals)\n\t\t{\n\t\t\tlet {cx, cy, rw, rh} = oval;\n\n\t\t\tcx = this.offsetX + this.scale * cx;\n\t\t\tcy = this.offsetY + this.scale * cy;\n\t\t\trw *= this.scale;\n\t\t\trh *= this.scale;\n\n\t\t\tsvg.start('<ellipse');\n\t\t\tsvg.attr('cx', cx);\n\t\t\tsvg.attr('cy', cy);\n\t\t\tsvg.attr('rx', rw);\n\t\t\tsvg.attr('ry', rh);\n\t\t\tsvg.stop('/>');\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\t}\n\tpublic svgPath(svg:SpoolSVG, path:PathPrim):void\n\t{\n\t\tlet {count, x, y, ctrl, closed} = path;\n\t\tlet {edgeCol, fillCol, thickness, hardEdge} = this.typeObj[path.typeidx] as PathType;\n\n\t\tx = [...x];\n\t\ty = [...y];\n\t\tfor (let n = 0; n < count; n++)\n\t\t{\n\t\t\tx[n] = this.offsetX + this.scale * x[n];\n\t\t\ty[n] = this.offsetY + this.scale * y[n];\n\t\t}\n\n\t\tlet shape = 'M ' + x[0] + ' ' + y[0];\n\t\tlet n = 1;\n\t\twhile (n < count)\n\t\t{\n\t\t\tif (!ctrl || !ctrl[n])\n\t\t\t{\n\t\t\t\tshape += ' L ' + x[n] + ' ' + y[n];\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse if (ctrl[n] && n < count - 1 && !ctrl[n + 1])\n\t\t\t{\n\t\t\t\tshape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n\t\t\t\tn += 2;\n\t\t\t}\n\t\t\telse if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2])\n\t\t\t{\n\t\t\t\tshape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n\t\t\t\tn += 3;\n\t\t\t}\n\t\t\telse n++; // (dunno, so skip)\n\t\t}\n\t\tif (closed) shape += ' Z';\n\n\t\tsvg.start('<path');\n\t\tsvg.attr('d', shape);\n\n\t\tthis.defineSVGStroke(svg, edgeCol);\n\t\tif (edgeCol != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-width', thickness);\n\t\t\tsvg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n\t\t\tsvg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n\t\t}\n\t\tthis.defineSVGFill(svg, fillCol);\n\t\tsvg.stop('/>');\n\t}\n\tprivate svgText(svg:SpoolSVG, text:TextPrim, withXlink = true):void\n\t{\n\t\tlet {x, y, txt, direction} = text;\n\t\tlet {size, colour} = this.typeObj[text.typeidx] as TextType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet font = FontData.main;\n\n\t\tlet scale = size * this.scale / font.UNITS_PER_EM;\n\n\t\tif (direction != 0)\n\t\t{\n\t\t\tsvg.start('<g');\n\t\t\tsvg.attr('transform', `rotate(${direction},${x},${y})`);\n\t\t\tsvg.stop('>');\n\t\t\tsvg.inc();\n\t\t}\n\n\t\tsvg.start('<g');\n\t\tsvg.attr('transform', 'translate(' + x + ',' + y + ')');\n\t\tthis.defineSVGFill(svg, colour);\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tsvg.start('<g');\n\t\tsvg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n\t\tsvg.stop('>');\n\t\tsvg.inc();\n\n\t\tlet dx = 0;\n\t\tfor (let n = 0; n < txt.length; n++)\n\t\t{\n\t\t\tlet ch = txt.charAt(n);\n\t\t\tlet i = font.getIndex(ch);\n\n\t\t\tsvg.start('<use');\n\t\t\tlet ref = i < 0 ? '#missing' : '#char' + i;\n\t\t\tif (withXlink) svg.attr('xlink:href', ref); else svg.attr('href', ref);\n\t\t\tsvg.attr('x', dx);\n\t\t\tsvg.stop('/>');\n\n\t\t\tif (i >= 0)\n\t\t\t{\n\t\t\t\tdx += font.HORIZ_ADV_X[i];\n\t\t\t\tif (n < txt.length - 1) dx += font.getKerning(ch, txt.charAt(n + 1));\n\t\t\t}\n\t\t\telse dx += font.MISSING_HORZ;\n\t\t}\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\n\t\tsvg.dec();\n\t\tsvg.whole('</g>');\n\n\t\tif (direction != 0)\n\t\t{\n\t\t\tsvg.dec();\n\t\t\tsvg.whole('</g>');\n\t\t}\n\t}\n\tprivate svgTextNative(svg:SpoolSVG, text:TextNativePrim):void\n\t{\n\t\tlet {x, y, txt} = text;\n\t\tlet {size, colour, family, opt} = this.typeObj[text.typeidx] as TextNativeType;\n\n\t\tx = this.offsetX + this.scale * x;\n\t\ty = this.offsetY + this.scale * y;\n\n\t\tlet fill = colourCanvas(colour);\n\t\tlet style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n\t\tif (opt.bold) style += ' font-weight: bold;';\n\t\tif (opt.italic) style += ' font-style: italic;';\n\n\t\tconst escapeXML = (str:string):string =>\n\t\t{\n\t\t\treturn str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n\t\t};\n\n\t\tsvg.start('<text');\n\t\tsvg.attr('xml:space', 'preserve');\n\t\tsvg.attr('x', x);\n\t\tsvg.attr('y', y);\n\t\tsvg.attr('style', style);\n\t\tsvg.stop('>' + escapeXML(txt) + '</text>');\n\t}\n\n\t// utility for SVG\n\tprivate defineSVGStroke(svg:SpoolSVG, col:number):void\n\t{\n\t\tif (col == MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('stroke-opacity', '0');\n\t\t\treturn;\n\t\t}\n\t\tsvg.attr('stroke', colourCode(col));\n\t\tlet alpha = colourAlpha(col);\n\t\tif (alpha != 1) svg.attr('stroke-opacity', alpha);\n\t}\n\tprivate defineSVGFill(svg:SpoolSVG, col:number):void\n\t{\n\t\tif (col == MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tsvg.attr('fill-opacity', '0');\n\t\t\treturn;\n\t\t}\n\t\tsvg.attr('fill', colourCode(col));\n\t\tlet alpha = colourAlpha(col);\n\t\tif (alpha != 1) svg.attr('fill-opacity', alpha);\n\t}\n\n\t// for a type definition array, see if it exists in the list, and return that index - or if not, push it on\n\tprivate findOrCreateType(typeDef:TypeBase)\n\t{\n\t\tfor (let n = 0; n < this.types.length; n++)\n\t\t{\n\t\t\tif (this.types[n].primClass != typeDef.primClass) continue;\n\t\t\tlet keys = Object.keys(typeDef);\n\t\t\tlet match = keys.every((k) => (typeDef as any)[k] == (this.types[n] as any)[k]);\n\t\t\tif (match) return n;\n\t\t}\n\t\tthis.types.push(typeDef);\n\t\treturn this.types.length - 1;\n\t}\n\n\t// ensures boundaries move whenever something out of range is added\n\tprivate updateBounds(x:number, y:number):void\n\t{\n\t\tif (this.lowX == null)\n\t\t{\n\t\t\tthis.lowX = x;\n\t\t\tthis.lowY = y;\n\t\t\tthis.highX = x;\n\t\t\tthis.highY = y;\n\t\t\treturn;\n\t\t}\n\t\tthis.lowX = Math.min(this.lowX, x);\n\t\tthis.lowY = Math.min(this.lowY, y);\n\t\tthis.highX = Math.max(this.highX, x);\n\t\tthis.highY = Math.max(this.highY, y);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {clone} from '../util/util';\n\n/*\n\tRenderPolicy: controls the parameters of rendering for molecules (and some composites like reactions). These policies are\n\tgeneral, i.e. can apply to any instantiated molecule instance.\n*/\n\ninterface RenderData\n{\n\tname:string;\n\tpointScale:number;\n\tresolutionDPI:number;\n\tfontSize:number;\n\tlineSize:number;\n\tbondSep:number;\n\tdefaultPadding:number;\n\tforeground:number;\n\tbackground:number;\n\tatomCols:number[];\n}\n\nexport class RenderPolicy\n{\n\tpublic data:RenderData;\n\n\tconstructor(data?:RenderData)\n\t{\n\t\tif (!data)\n\t\t{\n\t\t\tdata =\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\tpointScale: 20,\n\t\t\t\tresolutionDPI: 100,\n\t\t\t\tfontSize: 0.65,\n\t\t\t\tlineSize: 0.075,\n\t\t\t\tbondSep: 0.2,\n\t\t\t\tdefaultPadding: 0.2,\n\t\t\t\tforeground: 0x000000,\n\t\t\t\tbackground: 0xFFFFFF,\n\t\t\t\tatomCols: new Array(112)\n\t\t\t};\n\t\t\tfor (let n = 0; n <= 111; n++) data.atomCols[n] = 0x000000;\n\t\t\tthis.data = data;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.data = clone(data) as RenderData;\n\t\t}\n\t}\n\n\tpublic clone():RenderPolicy {return new RenderPolicy(this.data);}\n\n\t// static methods for creating new default schemes\n\tpublic static defaultBlackOnWhite(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = new RenderPolicy();\n\t\tif (pixPerAng) policy.data.pointScale = pixPerAng;\n\t\treturn policy;\n\t}\n\tpublic static defaultWhiteOnBlack(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = new RenderPolicy();\n\t\tif (pixPerAng) policy.data.pointScale = pixPerAng;\n\t\tpolicy.data.foreground = 0xFFFFFF;\n\t\tpolicy.data.background = 0x000000;\n\t\tfor (let n = 0; n <= 111; n++) policy.data.atomCols[n] = 0xFFFFFF;\n\t\treturn policy;\n\t}\n\tpublic static defaultColourOnWhite(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n\t\tpolicy.data.atomCols[0] = 0x404040;\n\t\tpolicy.data.atomCols[1] = 0x808080;\n\t\tpolicy.data.atomCols[6] = 0x000000;\n\t\tpolicy.data.atomCols[7] = 0x0000FF;\n\t\tpolicy.data.atomCols[8] = 0xFF0000;\n\t\tpolicy.data.atomCols[9] = 0xFF8080;\n\t\tpolicy.data.atomCols[15] = 0xFF8000;\n\t\tpolicy.data.atomCols[16] = 0x808000;\n\t\tpolicy.data.atomCols[17] = 0x00C000;\n\t\tpolicy.data.atomCols[35] = 0xC04000;\n\t\treturn policy;\n\t}\n\tpublic static defaultColourOnBlack(pixPerAng?:number):RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n\t\tpolicy.data.atomCols[0] = 0xA0A0A0;\n\t\tpolicy.data.atomCols[1] = 0x808080;\n\t\tpolicy.data.atomCols[6] = 0xFFFFFF;\n\t\tpolicy.data.atomCols[7] = 0x4040FF;\n\t\tpolicy.data.atomCols[8] = 0xFF4040;\n\t\tpolicy.data.atomCols[9] = 0xFF8080;\n\t\tpolicy.data.atomCols[15] = 0xFF8000;\n\t\tpolicy.data.atomCols[16] = 0xFFFF00;\n\t\tpolicy.data.atomCols[17] = 0x40FF40;\n\t\tpolicy.data.atomCols[35] = 0xFF8040;\n\t\treturn policy;\n\t}\n\tpublic static defaultPrintedPublication():RenderPolicy\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite(9.6);\n\t\tpolicy.data.resolutionDPI = 600;\n\t\tpolicy.data.fontSize = 0.80;\n\t\tpolicy.data.bondSep = 0.27;\n\t\tpolicy.data.lineSize = 0.0625;\n\t\treturn policy;\n\t}\n}\n\n/*\n\tRenderEffects: provides the ability to request additional drawing effects for a specific molecule instance, in\n\taddition to the basic rendering.\n*/\n\nexport class RenderEffects\n{\n\t// optional replacement colours, by object index: to override defaults\n\tpublic colAtom:Record<number, number> = {};\n\tpublic colBond:Record<number, number> = {};\n\n\t// atoms that should be surrounded by a dotted rectangular outline (atom = colour)\n\tpublic dottedRectOutline:Record<number, number> = {};\n\n\t// bonds that should have a dotted line plotted across them (bond = colour)\n\tpublic dottedBondCross:Record<number, number> = {};\n\n\t// list of atom/bond indices to NOT draw\n\tpublic hideAtoms = new Set<number>();\n\tpublic hideBonds = new Set<number>();\n\n\t// rectangular frames to draw around atoms\n\tpublic atomFrameDotSz:number[] = [];\n\tpublic atomFrameCol:number[] = [];\n\n\t// solid dots to draw over top of atoms\n\tpublic atomCircleSz:number[] = [];\n\tpublic atomCircleCol:number[] = [];\n\n\t// atom & bond decoration: text to display, colour, and font size (in Angstrom units)\n\tpublic atomDecoText:string[] = [];\n\tpublic atomDecoCol:number[] = [];\n\tpublic atomDecoSize:number[] = [];\n\tpublic bondDecoText:string[] = [];\n\tpublic bondDecoCol:number[] = [];\n\tpublic bondDecoSize:number[] = [];\n\n\t// list of atom indices which are considered to be \"overlapping\", i.e. this is bad\n\tpublic overlapAtoms:number[] = [];\n}\n\n/*\n\tRenderMnemonics: a convenient container for recording information about a rendering process, which is useful for\n\tvalidation procedures.\n*/\n\nexport enum RenderMnemonicType\n{\n\tAtom = 'A',\n\tBond = 'B',\n\tArtifact = 'R',\n\tEffect = 'E',\n}\n\nexport interface RenderMnemonicItem\n{\n\ttype:RenderMnemonicType | string; // general category: known type or custom\n\tdetails:string; // arbitrary information about the payload, keep it concise, don't use the separator ('|')\n\tcoords?:number[];\n}\n\nexport class RenderMnemonics\n{\n\tpublic items:RenderMnemonicItem[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(encoded?:string)\n\t{\n\t\tlet lines = (encoded || '').split('&');\n\t\tfor (let line of lines)\n\t\t{\n\t\t\tlet bits = line.split('|');\n\t\t\tif (bits.length != 3) continue;\n\t\t\tlet item:RenderMnemonicItem =\n\t\t\t{\n\t\t\t\ttype: bits[0],\n\t\t\t\tdetails: bits[1],\n\t\t\t\tcoords: bits[2].split(',').map((str) => parseFloat(str)),\n\t\t\t};\n\t\t\tthis.items.push(item);\n\t\t}\n\t}\n\n\tpublic append(type:RenderMnemonicType | string, details:string, coords?:number[]):void\n\t{\n\t\tfor (let n = details.length - 1; n >= 0; n--) if (details[n] == '|' || details[n] == '&') details = details.substring(0, n) + details.substring(n + 1);\n\t\tthis.items.push({type, details, coords});\n\t}\n\n\tpublic serialise():string\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let item of this.items)\n\t\t{\n\t\t\tlet coords = (item.coords ?? []).map((coord) => coord.toFixed(1)).join(',');\n\t\t\tlines.push(`${item.type}|${item.details}|${coords}`);\n\t\t}\n\t\treturn lines.join('&');\n\t}\n\n\t// produce a quasi-human-readable representation of the mnemonics, so that two sets can be compared with each other;\n\t// a sans-coordinate version is provided as well, in case a rougher comparison is wanted\n\tpublic packWithCoords():string {return this.serialise();}\n\tpublic packWithoutCoords():string\n\t{\n\t\treturn this.items.map((item) => `${item.type}|${item.details}`).join('&');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {deepClone, findNode, findNodes, nodeText} from '../util/util';\nimport {XML} from '../util/XML';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from './MoleculeStream';\n\n/*\n\tSerialisation and deserialisation utilities for the DataSheet object.\n\n\tNote that the DataSheet class has a JSON property (.data) that is already suitable for sending back and forth\n\tbetween the server when a JSON-formatted datasheet is required.\n*/\n\nexport class DataSheetStream\n{\n\t// static method: reads in a string that is presumed to XML, and converts it to a datasheet, which is returned; returns null if\n\t// something went wrong\n\tpublic static readXML(strXML:string):DataSheet\n\t{\n\t\tlet xmlDoc:Document;\n\t\tif (XML.customParser)\n\t\t\txmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n\t\telse\n\t\t\txmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n\t\tif (xmlDoc == null) return null;\n\t\tlet root = xmlDoc.documentElement;\n\t\tif (root == null) return null;\n\n\t\tlet ds = new DataSheet();\n\n\t\t// overview\n\t\tlet summary = findNode(root, 'Summary');\n\t\tif (summary == null) return null;\n\t\tds.title = nodeText(findNode(summary, 'Title'));\n\t\tds.description = nodeText(findNode(summary, 'Description'));\n\n\t\t// extensions\n\t\tlet extRoot = findNode(root, 'Extension');\n\t\tif (extRoot != null)\n\t\t{\n\t\t\t//let extList=goog.dom.xml.selectNodes(extRoot,'Ext');\n\t\t\tlet extList = findNodes(extRoot, 'Ext');\n\t\t\tfor (let n = 0; n < extList.length; n++)\n\t\t\t{\n\t\t\t\tlet ext = extList[n];\n\t\t\t\t//ds.appendExtension(ext.attributes.name.value,ext.attributes.type.value,nodeText(ext));\n\t\t\t\tds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n\t\t\t}\n\t\t}\n\n\t\t// header: columns\n\t\tlet header = findNode(root, 'Header');\n\t\tlet numCols = parseInt(header.getAttribute('ncols'));//, numRows = parseInt(header.getAttribute('nrows'));\n\t\tlet colList = findNodes(header, 'Column');\n\t\tif (colList.length != numCols) return null;\n\t\tfor (let n = 0; n < numCols; n++)\n\t\t{\n\t\t\tlet col = colList[n];\n\t\t\tlet id = parseInt(col.getAttribute('id'));\n\t\t\tif (id != n + 1) return null;\n\t\t\tds.appendColumn(col.getAttribute('name'), col.getAttribute('type') as DataSheetColumn, nodeText(col));\n\t\t}\n\n\t\t// rows\n\t\tlet rowidx = 0;\n\t\tfor (let row of findNodes(findNode(root, 'Content'), 'Row'))\n\t\t{\n\t\t\tif (parseInt(row.getAttribute('id')) != rowidx + 1) return null;\n\n\t\t\tds.appendRow();\n\n\t\t\tfor (let col of findNodes(row, 'Cell'))\n\t\t\t{\n\t\t\t\tlet colidx = parseInt(col.getAttribute('id')) - 1;\n\t\t\t\tlet ct = ds.colType(colidx), val = nodeText(col);\n\n\t\t\t\tif (val == '') {}\n\t\t\t\telse if (ct == DataSheetColumn.Molecule) ds.setObject(rowidx, colidx, val);\n\t\t\t\telse if (ct == DataSheetColumn.String) ds.setString(rowidx, colidx, val);\n\t\t\t\telse if (ct == DataSheetColumn.Real) ds.setReal(rowidx, colidx, parseFloat(val));\n\t\t\t\telse if (ct == DataSheetColumn.Integer) ds.setInteger(rowidx, colidx, parseInt(val));\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n\t\t\t\telse if (ct == DataSheetColumn.Extend) ds.setExtend(rowidx, colidx, val);\n\n\t\t\t\tcol = col.nextElementSibling;\n\t\t\t\tcolidx++;\n\t\t\t}\n\n\t\t\trow = row.nextElementSibling;\n\t\t\trowidx++;\n\t\t}\n\n\t\treturn ds;\n\t}\n\n\t// instantiate with a JSON object, which is basically the title, description, columns, rows & extensions\n\tpublic static readJSON(json:Record<string, any>):DataSheet\n\t{\n\t\tif (!json.colData || !json.rowData) throw 'Not a JSON-formatted datasheet.';\n\t\treturn new DataSheet(deepClone(json));\n\t}\n\n\t// static method: converts a datasheet into an XML-formatted string\n\tpublic static writeXML(ds:DataSheet):string\n\t{\n\t\t//let xml = new DOMParser().parseFromString('<DataSheet/>', 'text/xml');\n\t\tlet xml:Document;\n\t\tif (XML.customParser)\n\t\t\txml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n\t\telse\n\t\t\txml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n\n\t\t// summary area\n\t\tlet summary = xml.createElement('Summary');\n\t\txml.documentElement.appendChild(summary);\n\t\tlet title = xml.createElement('Title'), descr = xml.createElement('Description');\n\t\tsummary.appendChild(title); title.appendChild(xml.createTextNode(ds.title));\n\t\tsummary.appendChild(descr); descr.appendChild(xml.createCDATASection(ds.description));\n\n\t\t// extras\n\t\tlet extension = xml.createElement('Extension');\n\t\txml.documentElement.appendChild(extension);\n\t\tfor (let n = 0; n < ds.numExtensions; n++)\n\t\t{\n\t\t\tlet ext = xml.createElement('Ext');\n\t\t\textension.appendChild(ext);\n\t\t\text.setAttribute('name', ds.getExtName(n));\n\t\t\text.setAttribute('type', ds.getExtType(n));\n\t\t\text.appendChild(xml.createCDATASection(ds.getExtData(n)));\n\t\t}\n\n\t\t// columns\n\t\tlet header = xml.createElement('Header');\n\t\txml.documentElement.appendChild(header);\n\t\theader.setAttribute('nrows', ds.numRows.toString());\n\t\theader.setAttribute('ncols', ds.numCols.toString());\n\t\tfor (let n = 0; n < ds.numCols; n++)\n\t\t{\n\t\t\tlet column = xml.createElement('Column');\n\t\t\theader.appendChild(column);\n\t\t\tcolumn.setAttribute('id', (n + 1).toString());\n\t\t\tcolumn.setAttribute('name', ds.colName(n));\n\t\t\tcolumn.setAttribute('type', ds.colType(n));\n\t\t\tcolumn.appendChild(xml.createTextNode(ds.colDescr(n)));\n\t\t}\n\n\t\t// rows\n\t\tlet content = xml.createElement('Content');\n\t\txml.documentElement.appendChild(content);\n\t\tfor (let r = 0; r < ds.numRows; r++)\n\t\t{\n\t\t\tlet row = xml.createElement('Row');\n\t\t\trow.setAttribute('id', (r + 1).toString());\n\t\t\tcontent.appendChild(row);\n\n\t\t\tfor (let c = 0; c < ds.numCols; c++)\n\t\t\t{\n\t\t\t\tlet cell = xml.createElement('Cell');\n\t\t\t\tcell.setAttribute('id', (c + 1).toString());\n\t\t\t\trow.appendChild(cell);\n\t\t\t\tlet ct = ds.colType(c);\n\n\t\t\t\tlet txtNode:Node = null;\n\t\t\t\tif (ds.isNull(r, c)) {}\n\t\t\t\telse if (ct == DataSheetColumn.Molecule)\n\t\t\t\t{\n\t\t\t\t\tlet obj = ds.getObject(r, c);\n\t\t\t\t\tif (obj instanceof Molecule) obj = MoleculeStream.writeNative(obj);\n\t\t\t\t\ttxtNode = xml.createCDATASection(obj as string);\n\t\t\t\t}\n\t\t\t\telse if (ct == DataSheetColumn.String) txtNode = xml.createCDATASection(ds.getString(r, c));\n\t\t\t\telse if (ct == DataSheetColumn.Real) txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Integer) txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n\t\t\t\telse if (ct == DataSheetColumn.Extend) txtNode = xml.createCDATASection(ds.getExtend(r, c));\n\n\t\t\t\tif (txtNode != null) cell.appendChild(txtNode);\n\t\t\t}\n\t\t}\n\n\t\tif (XML.customSerial)\n\t\t\treturn new XML.customSerial().serializeToString(xml.documentElement);\n\t\telse\n\t\t\treturn new XMLSerializer().serializeToString(xml.documentElement);\n\t}\n\n\t// make a serialisation-ready JSON object with the datasheet content of interest\n\tpublic static writeJSON(ds:DataSheet):any\n\t{\n\t\tlet data = (ds as any).data; // bogarting private member\n\n\t\tlet nrow = ds.numRows, ncol = ds.numCols;\n\t\tlet rowData:any[][] = new Array(nrow);\n\t\tfor (let n = 0; n < nrow; n++) rowData[n] = new Array(ncol);\n\t\tfor (let c = 0; c < ncol; c++)\n\t\t{\n\t\t\tlet doConvert = ds.colType(c) == DataSheetColumn.Molecule;\n\t\t\tfor (let r = 0; r < nrow; r++)\n\t\t\t{\n\t\t\t\tlet val = data.rowData[r][c];\n\t\t\t\tif (val != null && doConvert) val = val.toString(); // turns {mol-or-string} into {string}\n\t\t\t\trowData[r][c] = val;\n\t\t\t}\n\t\t}\n\n\t\tlet json =\n\t\t{\n\t\t\ttitle: data.title,\n\t\t\tdescription: data.description,\n\t\t\tcolData: deepClone(data.colData),\n\t\t\trowData: rowData,\n\t\t\textData: deepClone(data.extData),\n\t\t};\n\t\treturn json;\n\t}\n\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2024 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ResonanceRemover} from '../calc/ResonanceRemover';\nimport {Vec} from '../util/Vec';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {ForeignMolecule, ForeignMoleculeTemplateDefn, ForeignMoleculeTransient} from '../mol/ForeignMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {StereoGroup} from '../mol/StereoGroup';\n\n/* eslint-disable key-spacing */\n\n/*\n\tMDL Molfile reader: a somewhat flexible input parser that can turn V2000 and V3000 Molfiles into the internal molecule\n\trepresentation. The molfile format has several official variants, and a much larger number of mutant strains that\n\texist in the wild: mileage may vary. If the structure is unreadable, an exception will be thrown. For information on\n\tanything interesting that happened during the parsing process, consult the \"openmol\" member.\n\n\tMDL SDfile reader: doing the best it can to pull out the auxiliary fields in SDfiles, which can be abused in endless ways,\n\tbut one does one's best to deal with it.\n*/\n\n// valence options used by MDL/CTAB, which is much more promiscuous than the internal format\nexport const MDLMOL_VALENCE:Record<string, number[]> =\n{\n\t'H':  [1],\n\t'B':  [3],\n\t'C':  [4],\n\t'Si': [4],\n\t'N':  [3],\n\t'P':  [3, 5],\n\t'As': [3, 5],\n\t'O':  [2],\n\t'S':  [2, 4, 6],\n\t'Se': [2, 4, 6],\n\t'Te': [2, 4, 6],\n\t'F':  [1],\n\t'Cl': [1, 3, 5, 7],\n\t'Br': [1],\n\t'I':  [1, 3, 5, 7],\n\t'At': [1, 3, 5, 7],\n};\n\nexport interface MDLReaderLinkNode\n{\n\tatom:number;\n\tnbrs:number[];\n\tminRep:number;\n\tmaxRep:number;\n}\n\nexport interface MDLReaderGroupMixture\n{\n\tindex:number;\n\tparent:number;\n\ttype:string;\n\tatoms:number[];\n}\n\nexport interface MDLReaderSuperAtom\n{\n\tatoms:number[];\n\tname:string;\n\n\t// for polymers\n\tbracketType?:string;\n\tconnectType?:string;\n\tbonds?:number[];\n\tbondConn?:number[];\n\n\t// data groups\n\tvalue?:string;\n\tunit?:string;\n\tquery?:string;\n\n\t// for SCSR templates\n\ttemplateClass?:string;\n\tnatReplace?:string;\n\tattachPoints?:string[];\n}\n\nexport class MDLMOLReader\n{\n\t// options\n\tpublic parseHeader = true; // if on, the first 3 lines are the pre-ctab header\n\tpublic parseExtended = true; // if on, extended fields are parsed; otherwise legacy MDL\n\tpublic allowV3000 = true; // if on, will diverge to a separate track for V3000\n\tpublic considerRescale = true; // if on, bond lengths will be rescaled if they are funky\n\tpublic keepAromatic = false; // set this to retain \"type 4\" bonds and other queries, instead of de-rezzing\n\tpublic keepParity = false; // set this to bring in the \"parity\" labels for atoms\n\tpublic keepQuery = true; // set this to translate query-type properties into the native equivalent\n\n\t// deliverables\n\tpublic mol:Molecule = null; // the result (or partial result, if not successful)\n\tpublic molName = ''; // molecule name from the header, if any\n\tpublic overallStereoAbsolute = true; // from the counts block, overall true=interpret stereo as absolute; false=interpret as relative\n\n\t// hydrogen count & resonance bonds supposed to be query-only, but some software abuses them to get around the structural limitations\n\tpublic resBonds:boolean[] = null;\n\n\t// \"modern\" features of CTAB which are not part of the lowest common denominator\n\tpublic groupAttachAny = new Map<number, number[]>(); // bond -> list of atom indices\n\tpublic groupAttachAll = new Map<number, number[]>(); // ditto\n\tpublic groupStereoAbsolute:number[] = []; // atom centres that have absolute stereochemistry\n\tpublic groupStereoRacemic:number[][] = []; // blocks of atoms which are racemic\n\tpublic groupStereoRelative:number[][] = []; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tpublic groupLinkNodes:MDLReaderLinkNode[] = []; // so-called link nodes, aka repeating atom\n\tpublic groupMixtures:MDLReaderGroupMixture[] = []; // mixture collections, which may overlap\n\tpublic scsrTemplates:ForeignMoleculeTemplateDefn[] = null; // templates (SCSR = self-contained sequence representation)\n\n\tprivate pos = 0;\n\tprivate lines:string[];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(strData:string)\n\t{\n\t\tthis.lines = strData.split(/\\r?\\n/);\n\t}\n\n\t// perform the parsing operation, and populate the result fields\n\tpublic parse():Molecule\n\t{\n\t\tif (this.parseHeader)\n\t\t{\n\t\t\tthis.molName = this.lines[0];\n\t\t\tthis.pos = 3;\n\t\t}\n\t\tthis.parseCTAB();\n\t\treturn this.mol;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\tprivate nextLine():string\n\t{\n\t\tif (this.pos >= this.lines.length) throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n\t\treturn this.lines[this.pos++];\n\t}\n\n\t// pull out the main CTAB block: this is where the real action is\n\tprivate parseCTAB():void\n\t{\n\t\tthis.mol = new Molecule();\n\t\tthis.mol.keepTransient = true;\n\n\t\t// check out the counts line\n\t\tlet line = this.nextLine();\n\t\tlet version = line.length >= 39 ? line.substring(34, 39) : '';\n\t\tif (this.allowV3000 && version == 'V3000')\n\t\t{\n\t\t\tthis.parseV3000();\n\t\t\tthis.mol.keepTransient = false;\n\t\t\treturn;\n\t\t}\n\t\tif (version != 'V2000') throw 'Invalid MDL MOL: no Vx000 tag.';\n\n\t\tlet numAtoms = parseInt(line.substring(0, 3).trim());\n\t\tlet numBonds = parseInt(line.substring(3, 6).trim());\n\t\tif (line.length >= 15) this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n\n\t\t// read out each atom\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.length < 34) throw 'Invalid MDL MOL: atom line' + (n + 1);\n\n\t\t\tlet x = parseFloat(line.substring(0, 10).trim());\n\t\t\tlet y = parseFloat(line.substring(10, 20).trim());\n\t\t\tlet z = parseFloat(line.substring(20, 30).trim());\n\t\t\tlet el = line.substring(31, 34).trim();\n\t\t\tlet chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n\t\t\tlet stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n\t\t\tlet hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n\t\t\tlet val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n\t\t\tlet mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n\n\t\t\tif (chg >= 1 && chg <= 3) chg = 4 - chg;\n\t\t\telse if (chg == 4) {chg = 0; rad = 2;}\n\t\t\telse if (chg >= 5 && chg <= 7) chg = 4 - chg;\n\t\t\telse chg = 0;\n\n\t\t\tlet a = this.mol.addAtom(el, x, y, chg, rad);\n\t\t\tif (z != 0)\n\t\t\t{\n\t\t\t\tthis.mol.setAtomZ(a, z);\n\t\t\t\tthis.mol.setIs3D(true);\n\t\t\t}\n\t\t\tthis.mol.setAtomMapNum(a, mapnum);\n\n\t\t\tif (hyd > 0) QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n\n\t\t\tif (stereo > 0 && this.keepParity)\n\t\t\t{\n\t\t\t\tlet trans = this.mol.atomTransient(a);\n\t\t\t\tif (stereo == 1) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n\t\t\t\telse if (stereo == 2) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n\t\t\t\telse if (stereo == 3) this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n\t\t\t}\n\n\t\t\tif (val != 0) ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n\t\t}\n\n\t\t// read out each bond\n\t\tfor (let n = 0; n < numBonds; n++)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.length >= 9 && line.length < 12) line = line.substring(0, 9) + '  0';\n\t\t\tif (line.length < 12) throw 'Invalid MDL MOL: bond line' + (n + 1);\n\n\t\t\tlet bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n\t\t\tlet type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n\n\t\t\tif (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms) throw 'Invalid MDL MOL: bond line' + (n + 1);\n\n\t\t\tlet order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n\t\t\tlet style = Molecule.BONDTYPE_NORMAL;\n\t\t\tif (stereo == 1) style = Molecule.BONDTYPE_INCLINED;\n\t\t\telse if (stereo == 6) style = Molecule.BONDTYPE_DECLINED;\n\t\t\telse if (stereo == 3 || stereo == 4) style = Molecule.BONDTYPE_UNKNOWN;\n\n\t\t\tlet b = this.mol.addBond(bfr, bto, order, style);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n\n\t\t\tif (this.keepQuery)\n\t\t\t{\n\t\t\t\tif (type == 4) QueryUtil.setQueryBondOrders(this.mol, b, [-1]); // aromatic query type\n\t\t\t\telse if (type == 5) QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]); // single-or-double query type\n\t\t\t\telse if (type == 6) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]); // single-or-aromatic query type\n\t\t\t\telse if (type == 7) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]); // double-or-aromatic query type\n\t\t\t\telse if (type == 8) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]); // any\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// type \"4\" is special: it is defined to be a special query type to match aromatic bonds, but it is sometimes used\n\t\t\t\t// to store actual molecules; in this case, it is necessary to either \"deresonate\" the rings, or to stash the property\n\t\t\t\tif (type == 4)\n\t\t\t\t{\n\t\t\t\t\tif (this.keepAromatic) this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.resBonds == null) this.resBonds = Vec.booleanArray(false, numBonds);\n\t\t\t\t\t\tthis.resBonds[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// examine anything in the M-block\n\t\tconst MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7,\n\t\t\t  MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n\t\tlet resPaths = new Map<number, number[]>(), resRings = new Map<number, number[]>(), arenes = new Map<number, number[]>();\n\t\tlet superatoms = new Map<number, MDLReaderSuperAtom>(), mixtures = new Map<number, MDLReaderGroupMixture>();\n\n\t\twhile (true)\n\t\t{\n\t\t\tline = this.nextLine();\n\t\t\tif (line.startsWith('M  END')) break;\n\n\t\t\tlet type = 0;\n\t\t\tif (line.startsWith('M  CHG')) type = MBLK_CHG;\n\t\t\telse if (line.startsWith('M  RAD')) type = MBLK_RAD;\n\t\t\telse if (line.startsWith('M  ISO')) type = MBLK_ISO;\n\t\t\telse if (line.startsWith('M  RGP')) type = MBLK_RGP;\n\t\t\telse if (this.parseExtended && line.startsWith('M  HYD')) type = MBLK_HYD;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZCH')) type = MBLK_ZCH;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZBO')) type = MBLK_ZBO;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZPA')) type = MBLK_ZPA;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZRI')) type = MBLK_ZRI;\n\t\t\telse if (this.parseExtended && line.startsWith('M  ZAR')) type = MBLK_ZAR;\n\t\t\telse if (this.parseExtended && line.startsWith('M  RBC')) type = MBLK_RBC;\n\t\t\telse if (this.parseExtended && line.startsWith('M  SUB')) type = MBLK_SUB;\n\t\t\telse if (this.parseExtended && line.startsWith('M  UNS')) type = MBLK_UNS;\n\t\t\telse if (line.startsWith('A  ') && line.length >= 6)\n\t\t\t{\n\t\t\t\tlet anum = parseInt(line.substring(3, 6).trim());\n\t\t\t\tif (anum >= 1 && anum <= this.mol.numAtoms)\n\t\t\t\t{\n\t\t\t\t\tline = this.nextLine();\n\t\t\t\t\tif (line == null) break;\n\t\t\t\t\tthis.mol.setAtomElement(anum, line);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  STY'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet stype = line.substring(14 + 8 * n, 17 + 8 * n);\n\t\t\t\t\tif (stype == 'SUP') superatoms.set(idx, {atoms: [], name: null});\n\t\t\t\t\telse if (stype == 'MIX' || stype == 'FOR') mixtures.set(idx, {index: idx, parent: 0, atoms: [], type: stype});\n\t\t\t\t\telse if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT') superatoms.set(idx, {atoms: [], name: null, bracketType: stype});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SPL'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n\t\t\t\t\tlet mix = mixtures.get(child);\n\t\t\t\t\tif (mix != null) mix.parent = parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SAL'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet atoms = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tsup.atoms = Vec.concat(sup.atoms, atoms);\n\t\t\t\t}\n\t\t\t\tlet mix = mixtures.get(idx);\n\t\t\t\tif (mix != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet atoms = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tmix.atoms = Vec.concat(mix.atoms, atoms);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SBL'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tlet bonds = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tsup.bonds = Vec.concat(sup.bonds, bonds);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SMT'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null) sup.name = line.substring(11).trim();\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SDT'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup)\n\t\t\t\t{\n\t\t\t\t\tsup.name = line.substring(11, 41).trim();\n\t\t\t\t\tsup.unit = line.substring(43, 63).trim();\n\t\t\t\t\tsup.query = line.substring(63).trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SED'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup) sup.value = line.substring(11).trim();\n\t\t\t}\n\t\t\telse if (line.startsWith('M  SCN'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet stype = line.substring(14 + 8 * n, 17 + 8 * n);\n\t\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\t\tif (sup != null) sup.connectType = stype.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  CRS'))\n\t\t\t{\n\t\t\t\tlet idx = parseInt(line.substring(6, 10).trim());\n\t\t\t\tlet sup = superatoms.get(idx);\n\t\t\t\tif (sup != null)\n\t\t\t\t{\n\t\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\t\tsup.bondConn = Vec.numberArray(0, len);\n\t\t\t\t\tfor (let n = 0; n < len; n++) sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  LIN'))\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet node:MDLReaderLinkNode =\n\t\t\t\t\t{\n\t\t\t\t\t\tatom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n\t\t\t\t\t\tnbrs: [],\n\t\t\t\t\t\tminRep: 1,\n\t\t\t\t\t\tmaxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n\t\t\t\t\t};\n\n\t\t\t\t\tlet nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n\t\t\t\t\tlet nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n\t\t\t\t\tif (nbr1 > 0) node.nbrs.push(nbr1);\n\t\t\t\t\tif (nbr2 > 0) node.nbrs.push(nbr2);\n\n\t\t\t\t\tthis.groupLinkNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith('M  ALS'))\n\t\t\t{\n\t\t\t\tlet atom = parseInt(line.substring(7, 10).trim());\n\t\t\t\tlet len = parseInt(line.substring(10, 13).trim());\n\t\t\t\tlet logic = line.charAt(14);\n\t\t\t\tlet elements:string[] = [];\n\t\t\t\tfor (let n = 0; n < len; n++) elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n\n\t\t\t\tthis.mol.setAtomElement(atom, '*');\n\t\t\t\tif (logic == 'F') QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n\t\t\t\telse if (logic == 'T') QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n\t\t\t}\n\n\t\t\tif (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR)\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n\t\t\t\tlet map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : /* type == MBLK_ZAR */ arenes;\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n\t\t\t\t\tif (val < 1 || val > numAtoms) throw 'Invalid MDL MOL: M-block';\n\t\t\t\t\tlet atoms = map.get(blk);\n\t\t\t\t\tif (!atoms) map.set(blk, atoms = []);\n\t\t\t\t\tatoms.push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type > 0)\n\t\t\t{\n\t\t\t\tlet len = parseInt(line.substring(6, 9).trim());\n\t\t\t\tfor (let n = 0; n < len; n++)\n\t\t\t\t{\n\t\t\t\t\tlet pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n\t\t\t\t\tlet val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n\t\t\t\t\tif (pos < 1) throw 'Invalid MDL MOL: M-block';\n\n\t\t\t\t\tif (type == MBLK_CHG) this.mol.setAtomCharge(pos, val);\n\t\t\t\t\telse if (type == MBLK_RAD)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == 1 || val == 3) this.mol.setAtomUnpaired(pos, 2);\n\t\t\t\t\t\telse if (val == 2) this.mol.setAtomUnpaired(pos, 1);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_ISO) this.mol.setAtomIsotope(pos, val);\n\t\t\t\t\telse if (type == MBLK_RGP) this.mol.setAtomElement(pos, 'R' + val);\n\t\t\t\t\telse if (type == MBLK_HYD) this.mol.setAtomHExplicit(pos, val);\n\t\t\t\t\telse if (type == MBLK_ZCH) this.mol.setAtomCharge(pos, val);\n\t\t\t\t\telse if (type == MBLK_ZBO) this.mol.setBondOrder(pos, val);\n\t\t\t\t\telse if (type == MBLK_RBC && val != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == -2) val = this.countRingBonds(pos);\n\t\t\t\t\t\telse if (val == -1) val = 0;\n\t\t\t\t\t\tQueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_SUB && val != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == -2) val = this.countSubstitutions(pos);\n\t\t\t\t\t\telse if (val == -1) val = 0;\n\t\t\t\t\t\tQueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type == MBLK_UNS)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (val == 1) QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.postFix();\n\n\t\tif (this.parseExtended)\n\t\t{\n\t\t\tlet artifacts = new BondArtifact(this.mol);\n\t\t\tfor (let atoms of resPaths.values()) artifacts.createPath(atoms);\n\t\t\tfor (let atoms of resRings.values()) artifacts.createRing(atoms);\n\t\t\tfor (let atoms of arenes.values()) artifacts.createArene(atoms);\n\t\t\tartifacts.rewriteMolecule();\n\t\t}\n\n\t\t// process polymer superblocks first\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tif (value.bracketType)\n\t\t\t{\n\t\t\t\tsuperatoms.delete(key);\n\t\t\t\tthis.applyPolymerBlock(value);\n\t\t\t}\n\t\t}\n\n\t\t// process non-polymer superblocks\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tsuperatoms.delete(key);\n\t\t\tthis.applySuperAtom(value, Array.from(superatoms.values()));\n\t\t}\n\n\t\tfor (let key of Vec.sorted(Array.from(mixtures.keys()))) this.groupMixtures.push(mixtures.get(key));\n\n\t\tthis.mol.keepTransient = false;\n\t}\n\n\t// performs some intrinsic post-parse fixing\n\tprivate postFix():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\t// post-fixing\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tif (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass))) continue;\n\n\t\t\tlet el = mol.atomElement(n);\n\n\t\t\t// shortcuts for isotope \"elements\"\n\t\t\tif (el == 'D') {mol.setAtomElement(n, 'H'); mol.setAtomIsotope(n, 2);}\n\t\t\telse if (el == 'T') {mol.setAtomElement(n, 'H'); mol.setAtomIsotope(n, 3);}\n\n\t\t\tif (mol.is3D && mol.atomZ(n) === undefined) mol.setAtomZ(n, 0);\n\n\t\t\t// valence, two correction scenarios\n\t\t\tlet valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n\t\t\tlet options = MDLMOL_VALENCE[el];\n\t\t\tif (valence != null)\n\t\t\t{\n\t\t\t\tlet hcount = valence < 0 || valence > 14 ? 0 : valence;\n\t\t\t\tfor (let b of mol.atomAdjBonds(n)) hcount -= mol.bondOrder(b);\n\t\t\t\tif (hcount != mol.atomHydrogens(n)) mol.setAtomHExplicit(n, Math.max(0, hcount));\n\t\t\t}\n\t\t\telse if (options)\n\t\t\t{\n\t\t\t\tlet chg = mol.atomCharge(n);\n\t\t\t\tlet chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n\t\t\t\tlet usedValence = chgmod;\n\t\t\t\tlet unp = mol.atomUnpaired(n);\n\t\t\t\tif (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')) usedValence += unp;\n\t\t\t\tfor (let b of mol.atomAdjBonds(n)) usedValence += mol.bondOrder(b);\n\t\t\t\tfor (let v of options) if (usedValence <= v)\n\t\t\t\t{\n\t\t\t\t\tlet hcount = v - usedValence;\n\t\t\t\t\tif (hcount != mol.atomHydrogens(n)) mol.setAtomHExplicit(n, Math.max(0, hcount));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.considerRescale && Vec.isBlank(this.scsrTemplates)) CoordUtil.normaliseBondDistances(mol);\n\n\t\tif (this.resBonds != null)\n\t\t{\n\t\t\tlet derez = new ResonanceRemover(mol, this.resBonds, null);\n\t\t\ttry\n\t\t\t{\n\t\t\t\tderez.perform();\n\t\t\t\tfor (let n = 0; n < mol.numBonds; n++) mol.setBondOrder(n + 1, derez.bondOrders[n]);\n\t\t\t}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\t// silent failure: de-resonance Kekulisation failed; the aromatic bonds will be left as single\n\t\t\t}\n\t\t}\n\t}\n\n\t// alternate track: only look at the specially marked V3000 tags\n\tprivate parseV3000():void\n\t{\n\t\tenum Section {Atom, Bond, Coll, SGroup, Template}\n\t\tlet inCTAB = false, inTemplate = false;\n\t\tlet section:Section = null;\n\n\t\tlet lineCounts:string = null;\n\t\tlet lineAtom:string[] = [], lineBond:string[] = [], lineColl:string[] = [], lineSgroup:string[] = [];\n\t\tlet asdrawnRBC:number[] = [], asdrawnSUB:number[] = [];\n\n\t\tlet templateBlocks:string[][] = [];\n\n\t\tconst ERRPFX = 'Invalid MDL MOL V3000: ';\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet fullLine = this.nextLine();\n\t\t\tif (fullLine == 'M  END') break; // graceful end\n\n\t\t\tif (!fullLine.startsWith('M  V30 ')) continue;\n\t\t\tlet line = fullLine.substring(7);\n\n\t\t\tif (line.startsWith('BEGIN TEMPLATE')) inTemplate = true;\n\t\t\telse if (line.startsWith('END TEMPLATE')) inTemplate = false;\n\t\t\telse if (line.startsWith('TEMPLATE ') && inTemplate) templateBlocks.push([fullLine]);\n\t\t\telse if (inTemplate && templateBlocks != null) Vec.last(templateBlocks).push(fullLine);\n\t\t\telse if (line.startsWith('COUNTS ')) lineCounts = line.substring(7);\n\t\t\telse if (line.startsWith('BEGIN CTAB')) inCTAB = true;\n\t\t\telse if (line.startsWith('BEGIN ATOM')) section = Section.Atom;\n\t\t\telse if (line.startsWith('BEGIN BOND')) section = Section.Bond;\n\t\t\telse if (line.startsWith('BEGIN COLLECTION')) section = Section.Coll;\n\t\t\telse if (line.startsWith('BEGIN SGROUP')) section = Section.SGroup;\n\t\t\telse if (line.startsWith('END ')) section = null;\n\t\t\t// TO DO: make sure these are nested properly, bug out if not\n\t\t\telse if (inCTAB && section == Section.Atom) lineAtom.push(line);\n\t\t\telse if (inCTAB && section == Section.Bond) lineBond.push(line);\n\t\t\telse if (inCTAB && section == Section.Coll) lineColl.push(line);\n\t\t\telse if (inCTAB && section == Section.SGroup) lineSgroup.push(line);\n\t\t\telse if (inCTAB && section == null)\n\t\t\t{\n\t\t\t\tif (line.startsWith('LINKNODE '))\n\t\t\t\t{\n\t\t\t\t\tlet bits = this.splitWithQuotes(line.substring(9));\n\n\t\t\t\t\tlet node:MDLReaderLinkNode =\n\t\t\t\t\t{\n\t\t\t\t\t\tatom: 0,\n\t\t\t\t\t\tnbrs: [],\n\t\t\t\t\t\tminRep: parseInt(bits[0]),\n\t\t\t\t\t\tmaxRep: parseInt(bits[1])\n\t\t\t\t\t};\n\n\t\t\t\t\t// convert the list of bond {a1,a2} into central atom / neighbours\n\t\t\t\t\tlet nb = parseInt(bits[2]);\n\t\t\t\t\tlet atoms:number[] = [];\n\t\t\t\t\tfor (let n = 0; n < nb * 2; n++) atoms.push(parseInt(bits[3 + n]));\n\t\t\t\t\tVec.sort(atoms);\n\t\t\t\t\tfor (let n = 0; n < atoms.length; n++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n\t\t\t\t\t\t\tnode.atom = atoms[n++];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode.nbrs.push(atoms[n]);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.groupLinkNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// (silently ignore other stuff; don't care)\n\t\t}\n\n\t\tlet counts = lineCounts.trim().split(/\\s+/);\n\t\tif (counts.length < 2) throw ERRPFX + 'counts line malformatted';\n\t\tlet numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n\t\tif (numAtoms < 0 || numAtoms > lineAtom.length) throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n\t\tif (numBonds < 0 || numBonds > lineBond.length) throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n\n\t\tlet atomBits:string[][] = [], bondBits:string[][] = [];\n\n\t\t// extract atom & bond content\n\t\tfor (let n = 0; n < lineAtom.length; n++)\n\t\t{\n\t\t\tlet line = lineAtom[n];\n\t\t\twhile (n < lineAtom.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineAtom[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits.length < 6) throw ERRPFX + 'atom line has too few components: ' + line;\n\t\t\tlet idx = parseInt(bits[0], 0);\n\t\t\tif (idx < 1 || idx > numAtoms) throw ERRPFX + 'invalid atom index: ' + bits[0];\n\t\t\tif (atomBits[idx - 1] != null) throw ERRPFX + 'duplicate atom index: ' + idx;\n\t\t\tatomBits[idx - 1] = bits;\n\t\t}\n\t\tfor (let n = 0; n < lineBond.length; n++)\n\t\t{\n\t\t\tlet line = lineBond[n];\n\t\t\twhile (n < lineBond.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineBond[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits.length < 4) throw ERRPFX + 'bond line has too few components: ' + line;\n\t\t\tlet idx = parseInt(bits[0], 0);\n\t\t\tif (idx < 1 || idx > numBonds) throw ERRPFX + 'invalid bond index: ' + bits[0];\n\t\t\tif (bondBits[idx - 1] != null) throw ERRPFX + 'duplicate bond index: ' + idx;\n\t\t\tbondBits[idx - 1] = bits;\n\t\t}\n\n\t\t// process each atom\n\t\tfor (let a = 1; a <= numAtoms; a++)\n\t\t{\n\t\t\tlet bits = atomBits[a - 1];\n\t\t\tif (bits == null) throw ERRPFX + 'atom definition missing for #' + a;\n\n\t\t\tlet type = bits[1];\n\t\t\tif (type.length > 2 && type.startsWith('\"') && type.endsWith('\"')) type = type.substring(1, type.length - 1);\n\n\t\t\tlet x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n\t\t\tlet map = parseInt(bits[5]);\n\t\t\tthis.mol.addAtom(type, x, y);\n\t\t\tif (z != 0)\n\t\t\t{\n\t\t\t\tthis.mol.setAtomZ(a, z);\n\t\t\t\tthis.mol.setIs3D(true);\n\t\t\t}\n\t\t\tthis.mol.setAtomMapNum(a, map);\n\n\t\t\tthis.parseQueryAtomList(this.mol, a);\n\n\t\t\tfor (let i = 6; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tlet key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n\t\t\t\tif (key == 'CHG') this.mol.setAtomCharge(a, parseInt(val));\n\t\t\t\telse if (key == 'RAD')\n\t\t\t\t{\n\t\t\t\t\tlet spin = parseInt(val);\n\t\t\t\t\tif (spin == 1 || spin == 3) this.mol.setAtomUnpaired(a, 2);\n\t\t\t\t\telse if (spin == 2) this.mol.setAtomUnpaired(a, 1);\n\t\t\t\t}\n\t\t\t\telse if (key == 'MASS') this.mol.setAtomIsotope(a, parseInt(val));\n\t\t\t\telse if (key == 'CFG')\n\t\t\t\t{\n\t\t\t\t\tlet stereo = parseInt(val);\n\t\t\t\t\tif (stereo > 0 && this.keepParity)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* todo: record incoming parity\n\t\t\t\t\t\tlet trans = this.mol.atomTransient(n);\n\t\t\t\t\t\tif (stereo == 1) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_ODD));\n\t\t\t\t\t\telse if (stereo == 2) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_EVEN));\n\t\t\t\t\t\telse if (stereo == 3) mol.setAtomTransient(n, Vec.append(trans, ForeignMolecule.ATOM_CHIRAL_MDL_RACEMIC));*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (key == 'VAL') ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n\t\t\t\telse if (key == 'CLASS')\n\t\t\t\t{\n\t\t\t\t\tthis.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n\t\t\t\t}\n\t\t\t\telse if (key == 'SEQID')\n\t\t\t\t{\n\t\t\t\t\tthis.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n\t\t\t\t}\n\t\t\t\telse if (key == 'ATTCHORD')\n\t\t\t\t{\n\t\t\t\t\tlet attch = this.unpackStrings(val);\n\t\t\t\t\tif (attch != null) this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n\t\t\t\t}\n\t\t\t\telse if (key == 'HCOUNT')\n\t\t\t\t{\n\t\t\t\t\tlet hyd = parseInt(val);\n\t\t\t\t\tif (hyd != 0) QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'RBCNT')\n\t\t\t\t{\n\t\t\t\t\tlet rbc = parseInt(val);\n\t\t\t\t\tif (rbc == -2) asdrawnRBC.push(a);\n\t\t\t\t\telse if (rbc != 0) QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'SUBST')\n\t\t\t\t{\n\t\t\t\t\tlet sub = parseInt(val);\n\t\t\t\t\tif (sub == -2) asdrawnSUB.push(a);\n\t\t\t\t\telse if (sub != 0) QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n\t\t\t\t}\n\t\t\t\telse if (key == 'UNSAT')\n\t\t\t\t{\n\t\t\t\t\tlet uns = parseInt(val);\n\t\t\t\t\tif (uns == 1) QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// process each bond\n\t\tfor (let b = 1; b <= numBonds; b++)\n\t\t{\n\t\t\tlet bits = bondBits[b - 1];\n\t\t\tif (bits == null) throw ERRPFX + 'bond definition missing for #' + b;\n\n\t\t\tlet type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n\t\t\tlet order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n\t\t\tthis.mol.addBond(bfr, bto, order);\n\t\t\tif (type == 9) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n\t\t\tif (type == 10) this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n\n\t\t\tif (this.keepQuery)\n\t\t\t{\n\t\t\t\tif (type == 4) QueryUtil.setQueryBondOrders(this.mol, b, [-1]); // aromatic query type\n\t\t\t\telse if (type == 5) QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]); // single-or-double query type\n\t\t\t\telse if (type == 6) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]); // single-or-aromatic query type\n\t\t\t\telse if (type == 7) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]); // double-or-aromatic query type\n\t\t\t\telse if (type == 8) QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]); // anything\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// type \"4\" is special: it is defined to be a special query type to match aromatic bonds, but it is sometimes used\n\t\t\t\t// to store actual molecules; in this case, it is necessary to either \"deresonate\" the rings, or to stash the property\n\t\t\t\tif (type == 4)\n\t\t\t\t{\n\t\t\t\t\tif (this.keepAromatic) this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.resBonds == null) this.resBonds = Vec.booleanArray(false, numBonds);\n\t\t\t\t\t\tthis.resBonds[b - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet endpts:number[] = null;\n\t\t\tlet attach:string = null;\n\n\t\t\tfor (let i = 4; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tlet key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n\t\t\t\tif (key == 'CFG')\n\t\t\t\t{\n\t\t\t\t\tlet dir = parseInt(val);\n\t\t\t\t\tthis.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n\t\t\t\t\t\t\t\t\t\t\tdir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n\t\t\t\t\t\t\t\t\t\t\tdir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n\t\t\t\t}\n\t\t\t\telse if (key == 'DISP')\n\t\t\t\t{\n\t\t\t\t\tif (val == 'COORD') this.mol.setBondOrder(b, 0);\n\t\t\t\t}\n\t\t\t\telse if (key == 'ENDPTS') endpts = this.unpackList(val);\n\t\t\t\telse if (key == 'ATTACH') attach = val;\n\t\t\t}\n\n\t\t\tif (attach != null && endpts != null)\n\t\t\t{\n\t\t\t\tif (attach == 'ALL') this.groupAttachAll.set(b, endpts);\n\t\t\t\telse if (attach == 'ANY') this.groupAttachAny.set(b, endpts);\n\t\t\t}\n\t\t}\n\n\t\tfor (let atom of asdrawnRBC) QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n\t\tfor (let atom of asdrawnSUB) QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n\n\t\tthis.postFix();\n\n\t\t// extract collection info\n\t\tfor (let n = 0; n < lineColl.length; n++)\n\t\t{\n\t\t\tlet line = lineColl[n];\n\t\t\twhile (n < lineColl.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineColl[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\t\t\tif (bits[0].startsWith('MDLV30/STEABS'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n\t\t\t}\n\t\t\telse if (bits[0].startsWith('MDLV30/STERAC'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n\t\t\t}\n\t\t\telse if (bits[0].startsWith('MDLV30/STEREL'))\n\t\t\t{\n\t\t\t\tif (bits[1].startsWith('ATOMS=')) this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n\t\t\t}\n\t\t}\n\n\t\tlet stereoGroup = new StereoGroup(this.mol);\n\t\tfor (let atoms of this.groupStereoRacemic) stereoGroup.createRacemic(atoms);\n\t\tfor (let atoms of this.groupStereoRelative) stereoGroup.createRelative(atoms);\n\t\tstereoGroup.rewriteMolecule();\n\n\t\t// extract S-groups\n\t\tlet superatoms = new Map<number, MDLReaderSuperAtom>();\n\t\tfor (let n = 0; n < lineSgroup.length; n++)\n\t\t{\n\t\t\tlet line = lineSgroup[n];\n\t\t\twhile (n < lineSgroup.length - 1 && line.endsWith('-'))\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tline = line.substring(0, line.length - 1) + lineSgroup[n];\n\t\t\t}\n\t\t\tlet bits = this.splitWithQuotes(line);\n\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tif (bits.length > 3 && idx > 0 && bits[1] == 'SUP')\n\t\t\t{\n\t\t\t\tlet sup:MDLReaderSuperAtom = {atoms: [], name: null};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) sup.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('LABEL=')) sup.name = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('XBONDS=')) sup.bonds = this.unpackList(bits[i].substring(7));\n\t\t\t\t\telse if (bits[i].startsWith('CLASS=')) sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('NATREPLACE=')) sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n\t\t\t\t\telse if (bits[i].startsWith('SAP=')) \n\t\t\t\t\t{\n\t\t\t\t\t\tconst pts = this.unpackStrings(bits[i].substring(4));\n\t\t\t\t\t\tsup.attachPoints = [...(sup.attachPoints ?? []), ...pts];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsuperatoms.set(idx, sup);\n\t\t\t}\n\t\t\telse if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx)\n\t\t\t{\n\t\t\t\tlet mix:MDLReaderGroupMixture = {index: idx, parent: 0, atoms: null, type: bits[1]};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) mix.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('PARENT=')) mix.parent = parseInt(bits[i].substring(7));\n\t\t\t\t}\n\t\t\t\tthis.groupMixtures.push(mix);\n\t\t\t}\n\t\t\telse if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT'))\n\t\t\t{\n\t\t\t\tlet sup:MDLReaderSuperAtom = {atoms: [], name: null, bracketType: bits[1]};\n\t\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('ATOMS=')) sup.atoms = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('BONDS=')) sup.bonds = this.unpackList(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('LABEL=')) sup.name = this.withoutQuotes(bits[i].substring(6));\n\t\t\t\t\telse if (bits[i].startsWith('CONNECT=')) sup.connectType = bits[i].substring(8);\n\t\t\t\t\telse if (bits[i].startsWith('XBCORR=')) sup.bondConn = this.unpackList(bits[i].substring(7));\n\t\t\t\t\telse if (bits[i].startsWith('MULT=')) sup.name = this.withoutQuotes(bits[i].substring(5));\n\t\t\t\t\telse if (bits[i].startsWith('FIELDNAME=')) sup.name = this.withoutQuotes(bits[i].substring(10));\n\t\t\t\t\telse if (bits[i].startsWith('FIELDDATA=')) sup.value = this.withoutQuotes(bits[i].substring(10));\n\t\t\t\t}\n\t\t\t\tsuperatoms.set(idx, sup);\n\t\t\t}\n\t\t}\n\n\t\t// process polymer superblocks first\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tif (value.bracketType)\n\t\t\t{\n\t\t\t\tsuperatoms.delete(key);\n\t\t\t\tthis.applyPolymerBlock(value);\n\t\t\t}\n\t\t}\n\n\t\t// process non-polymer superblocks\n\t\tfor (let key of Vec.sorted(Array.from(superatoms.keys())))\n\t\t{\n\t\t\tlet value = superatoms.get(key);\n\t\t\tsuperatoms.delete(key);\n\t\t\tthis.applySuperAtom(value, Array.from(superatoms.values()));\n\t\t}\n\n\t\tif (templateBlocks.length > 0)\n\t\t{\n\t\t\tthis.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n\t\t}\n\t}\n\n\t// if it's a V3000-style atom list, mark it up\n\tprivate parseQueryAtomList(mol:Molecule, atom:number):void\n\t{\n\t\tlet label = mol.atomElement(atom);\n\t\tlet not = false;\n\t\tif (label.startsWith('NOT ')) {label = label.substring(4); not = true;}\n\t\tif (label.length < 2 || !label.startsWith('[') || !label.endsWith(']')) return;\n\t\tlabel = label.substring(1, label.length - 1);\n\t\tlet elements = label.split(',');\n\n\t\tmol.setAtomElement(atom, '*');\n\t\tif (!not)\n\t\t\tQueryUtil.setQueryAtomElements(mol, atom, elements);\n\t\telse\n\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n\t}\n\n\t// applies a superatom block: turns the definition itself into an abbreviation if possible; also modifies any remaining superatoms so that their indexes\n\t// are still current\n\tprivate applySuperAtom(sup:MDLReaderSuperAtom, residual:MDLReaderSuperAtom[]):void\n\t{\n\t\tif (sup.name == null || Vec.isBlank(sup.atoms)) return;\n\t\tlet mask = Vec.booleanArray(true, this.mol.numAtoms);\n\t\tfor (let a of sup.atoms) mask[a - 1] = false;\n\n\t\tlet name = sup.name;\n\t\tlet i:number;\n\t\twhile ((i = name.indexOf('\\\\S')) >= 0) name = name.substring(0, i) + '{^' + name.substring(i + 2);\n\t\twhile ((i = name.indexOf('\\\\s')) >= 0) name = name.substring(0, i) + '{' + name.substring(i + 2);\n\t\twhile ((i = name.indexOf('\\\\n')) >= 0) name = name.substring(0, i) + '}' + name.substring(i + 2);\n\n\t\tlet [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n\t\tif (mod == null)\n\t\t{\n\t\t\tlet keyval:Record<string, string> = {};\n\t\t\tif (sup.bonds) keyval['bonds'] = sup.bonds.join(' ');\n\t\t\tif (sup.templateClass) keyval['templateClass'] = sup.templateClass;\n\t\t\tif (sup.natReplace) keyval['natReplace'] = sup.natReplace;\n\t\t\tif (sup.attachPoints) keyval['attachPoints'] = sup.attachPoints.join(' ');\n\n\t\t\tForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n\t\t\treturn;\n\t\t}\n\t\tthis.mol = mod;\n\n\t\t// correct atom indices for ensuing superatom blocks\n\t\tlet map = Vec.maskMap(mask);\n\t\tfor (let res of residual)\n\t\t{\n\t\t\tlet subsumed = false;\n\t\t\tfor (let n = res.atoms.length - 1; n >= 0; n--)\n\t\t\t{\n\t\t\t\tlet atom = map[res.atoms[n] - 1] + 1;\n\t\t\t\tif (atom == 0)\n\t\t\t\t{\n\t\t\t\t\tres.atoms = Vec.remove(res.atoms, n);\n\t\t\t\t\tsubsumed = true;\n\t\t\t\t}\n\t\t\t\telse res.atoms[n] = atom;\n\t\t\t}\n\t\t\tif (subsumed) res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n\t\t}\n\t}\n\n\t// deals with a superatom block that is marked as\n\tprivate applyPolymerBlock(sup:MDLReaderSuperAtom):void\n\t{\n\t\tif (sup.bracketType == 'MUL')\n\t\t{\n\t\t\tlet mult = parseInt(sup.name);\n\t\t\tForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n\t\t\treturn;\n\t\t}\n\t\tif (sup.bracketType == 'DAT')\n\t\t{\n\t\t\tif (sup.atoms != null) ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n\t\t\treturn;\n\t\t}\n\n\t\tlet poly = new PolymerBlock(this.mol);\n\t\tlet connect:PolymerBlockConnectivity = null;\n\t\tif (sup.connectType == null) {}\n\t\telse if (sup.connectType == 'HT') connect = PolymerBlockConnectivity.HeadToTail;\n\t\telse if (sup.connectType == 'HH') connect = PolymerBlockConnectivity.HeadToHead;\n\t\telse if (sup.connectType == 'EU') connect = PolymerBlockConnectivity.Random;\n\t\telse return;\n\n\t\tlet bondConn:number[] = null;\n\t\tif (Vec.len(sup.bondConn) == 3)\n\t\t{\n\t\t\t// the V2000 style of specifying 2x2 connectivity (by leaving one out...)\n\t\t\tlet b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n\t\t\tfor (let n = 1; n <= this.mol.numBonds; n++) if (n != b1 && n != b2 && n != b3)\n\t\t\t{\n\t\t\t\tlet in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\t\tif ((in1 && !in2) || (!in1 && in2))\n\t\t\t\t{\n\t\t\t\t\tif (b4 > 0) {b4 = 0; break;}\n\t\t\t\t\tb4 = n;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbondConn = [b1, b2, b3, b4];\n\t\t}\n\t\telse if (Vec.len(sup.bondConn) == 4)\n\t\t{\n\t\t\t// the V3000 style of specifying 2x2 connectivity, which is the same as what we're using\n\t\t\tbondConn = sup.bondConn;\n\t\t}\n\n\t\tlet unit = new PolymerBlockUnit(sup.atoms);\n\t\tunit.connect = connect;\n\t\tunit.bondConn = bondConn;\n\t\tpoly.createUnit(unit);\n\t}\n\n\t// parse out the sub-molecule SCSR template from V3000\n\tprivate parseV3000Template(lines:string[]):ForeignMoleculeTemplateDefn\n\t{\n\t\tlet header = lines[0];\n\t\tlet bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n\t\tlet name = bits[1], natReplace:string = null;\n\t\tfor (let n = 2; n < bits.length; n++)\n\t\t{\n\t\t\tif (bits[n].startsWith('NATREPLACE=')) natReplace = bits[n].substring(11);\n\t\t}\n\t\t\n\t\tlines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n\t\tlines.push('M  END');\n\n\t\tlet mdl = new MDLMOLReader(lines.join('\\n'));\n\t\tmdl.parseHeader = false;\n\t\tmdl.parse();\n\n\t\treturn {name, natReplace, mol: mdl.mol};\n\t}\n\n\t// removes surrounding quotes, if any\n\tprivate withoutQuotes(str:string):string\n\t{\n\t\tif (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"')) return str.substring(1, str.length - 1);\n\t\treturn str;\n\t}\n\n\t// takes a line of whitespace-separated stuff and breaks it into pieces\n\tprivate splitWithQuotes(line:string):string[]\n\t{\n\t\tlet segments:string[] = [];\n\n\t\tlet seg = '';\n\t\tlet depth = 0, quote = false;\n\t\tfor (let n = 0; n < line.length; n++)\n\t\t{\n\t\t\tlet ch = line.charAt(n);\n\t\t\tif (ch == ' ' && depth == 0 && !quote)\n\t\t\t{\n\t\t\t\tif (seg.length > 0) segments.push(seg);\n\t\t\t\tseg = '';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tseg += ch;\n\t\t\t\tif (ch == '\"') quote = !quote;\n\t\t\t\telse if (ch == '(' || ch == '[') depth++;\n\t\t\t\telse if (ch == ')' || ch == ']') depth--;\n\t\t\t}\n\t\t}\n\t\tif (seg.length > 0) segments.push(seg);\n\n\t\treturn segments;\n\t}\n\n\t// converts a string of the form \"(sz v1 v2 ...)\" into an array of just the values\n\tprivate unpackList(str:string):number[]\n\t{\n\t\tif (!str.startsWith('(') || !str.endsWith(')')) return null;\n\n\t\tstr = str.substring(1, str.length - 1);\n\t\tlet values:number[] = [];\n\t\tfor (let bit of str.split(' ')) values.push(parseInt(bit));\n\t\tif (values[0] != values.length - 1) return null;\n\t\treturn Vec.remove(values, 0);\n\t}\n\tprivate unpackStrings(str:string):string[]\n\t{\n\t\tif (!str.startsWith('(') || !str.endsWith(')')) return null;\n\n\t\tstr = str.substring(1, str.length - 1);\n\t\tlet values = str.split(' ');\n\t\tif (parseInt(values[0]) != values.length - 1) return null;\n\t\treturn Vec.remove(values, 0);\n\t}\n\n\t// used when an incoming property is designated \"as drawn\"\n\tprivate countRingBonds(atom:number):number\n\t{\n\t\tlet count = 0;\n\t\tfor (let b of this.mol.atomAdjBonds(atom)) if (this.mol.bondInRing(b)) count++;\n\t\treturn count;\n\t}\n\tprivate countSubstitutions(atom:number):number\n\t{\n\t\tlet count = 0;\n\t\tfor (let adj of this.mol.atomAdjList(atom)) if (this.mol.atomElement(adj) != 'H') count++;\n\t\treturn count;\n\t}\n}\n\nexport class MDLSDFReader\n{\n\tpublic ds = new DataSheet();\n\tpublic upcastColumns = true; // if on, tries to decide on column types based on their data values; otherwise leaves as strings\n\n\tprivate pos = 0;\n\tprivate lines:string[];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(strData:string)\n\t{\n\t\tthis.lines = strData.split(/\\r?\\n/);\n\t}\n\n\t// perform the parsing operation, and populate the result fields\n\tpublic parse():DataSheet\n\t{\n\t\tthis.parseStream();\n\t\tif (this.upcastColumns) this.upcastStringColumns();\n\t\treturn this.ds;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\tprivate parseStream():void\n\t{\n\t\tlet ds = this.ds;\n\t\tds.appendColumn('Molecule', DataSheetColumn.Molecule, 'Molecular structure');\n\t\tlet colName = -1;\n\t\tlet entry:string[] = [];\n\n\t\t// read the lines from the SD file, and every time a field is encountered, add it as type \"string\"\n\t\twhile (this.pos < this.lines.length)\n\t\t{\n\t\t\tlet line = this.lines[this.pos++];\n\t\t\tif (!line.startsWith('$$$$')) {entry.push(line); continue;}\n\n\t\t\tlet rn = ds.appendRow();\n\n\t\t\tlet molstr = '';\n\t\t\tlet pos = 0;\n\t\t\twhile (pos < entry.length)\n\t\t\t{\n\t\t\t\tline = entry[pos];\n\t\t\t\tif (line.startsWith('> ')) break;\n\t\t\t\tmolstr += line + '\\n';\n\t\t\t\tpos++;\n\t\t\t\tif (line.startsWith('M\tEND')) break;\n\t\t\t}\n\n\t\t\tlet mol:Molecule = null, name:string = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (molstr.length > 0)\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\t\tmdl.parse();\n\t\t\t\t\tmol = mdl.mol;\n\t\t\t\t\tname = mdl.molName;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\t/*let msg = \"Failed to parse CTAB, row#\" + (rn + 1) + \":\\n\" + molstr;\n\t\t\t\tif (fatalMolFailures) throw new IOException(msg,ex);\n\t\t\t\telse if (reportMolFailures) Util.errmsg(msg, ex);*/\n\t\t\t\t// (leave the molecule null\n\t\t\t}\n\t\t\tif (mol != null) ds.setMolecule(rn, 0, mol);\n\t\t\tif (name)\n\t\t\t{\n\t\t\t\tif (colName < 0) colName = ds.appendColumn('Name', DataSheetColumn.String, 'Molecule name');\n\t\t\t\tds.setString(rn, colName, name);\n\t\t\t}\n\n\t\t\tif (rn == 0 && mol != null)\n\t\t\t{\n\t\t\t\tlet str1 = entry[0], str3 = entry[2];\n\t\t\t\tif (str1.length >= 7 && str1.startsWith('$name='))\n\t\t\t\t{\n\t\t\t\t\tds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n\t\t\t\t}\n\t\t\t\tif (str3.length >= 8 && str3.startsWith('$title='))\n\t\t\t\t{\n\t\t\t\t\tds.title = str3.substring(7);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (; pos + 1 < entry.length; pos += 3)\n\t\t\t{\n\t\t\t\tlet key = entry[pos], val = entry[pos + 1];\n\t\t\t\tif (!key.startsWith('>')) continue;\n\t\t\t\tlet z = key.indexOf('<');\n\t\t\t\tif (z < 0) continue;\n\t\t\t\tkey = key.substring(z + 1);\n\t\t\t\tz = key.indexOf('>');\n\t\t\t\tif (z < 0) continue;\n\t\t\t\tkey = key.substring(0, z);\n\t\t\t\tif (key.length == 0) continue;\n\n\t\t\t\twhile (pos + 2 < entry.length && entry[pos + 2].length > 0)\n\t\t\t\t{\n\t\t\t\t\tval += '\\n' + entry[pos + 2];\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\n\t\t\t\tlet cn = ds.findColByName(key);\n\t\t\t\tif (cn < 0) cn = ds.appendColumn(key, DataSheetColumn.String, '');\n\n\t\t\t\tif (val.length == 0) ds.setToNull(rn, cn);\n\t\t\t\telse ds.setString(rn, cn, val);\n\t\t\t}\n\n\t\t\tentry = [];\n\t\t}\n\n\t\tif (ds.numRows == 0) this.ds = null;\n\t}\n\n\tprivate upcastStringColumns():void\n\t{\n\t\tlet ds = this.ds;\n\t\tfor (let i = 0; i < ds.numCols; i++) if (ds.colType(i) == DataSheetColumn.String)\n\t\t{\n\t\t\tlet allnull = true, allreal = true, allint = true, allbool = true;\n\t\t\tfor (let j = 0; j < ds.numRows; j++)\n\t\t\t{\n\t\t\t\tif (!allreal && !allint && !allbool) break;\n\t\t\t\tif (ds.isNull(j, i)) continue;\n\n\t\t\t\tallnull = false;\n\n\t\t\t\tlet val = ds.getString(j, i);\n\t\t\t\tif (allbool)\n\t\t\t\t{\n\t\t\t\t\tlet lc = val.toLowerCase();\n\t\t\t\t\tif (lc != 'true' && lc != 'false') allbool = false;\n\t\t\t\t}\n\t\t\t\tif (allint)\n\t\t\t\t{\n\t\t\t\t\tlet int = parseInt(val);\n\t\t\t\t\tif (!isFinite(int) || int != parseFloat(val)) allint = false;\n\t\t\t\t}\n\t\t\t\tif (allreal)\n\t\t\t\t{\n\t\t\t\t\tif (!isFinite(parseFloat(val))) allreal = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (allnull) {} // do nothing\n\t\t\telse if (allint) ds.changeColumnType(i, DataSheetColumn.Integer);\n\t\t\telse if (allreal) ds.changeColumnType(i, DataSheetColumn.Real);\n\t\t\telse if (allbool) ds.changeColumnType(i, DataSheetColumn.Boolean);\n\t\t}\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2022 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {ForeignMolecule, ForeignMoleculeTemplateDefn, ForeignMoleculeTransient} from '../mol/ForeignMolecule';\nimport {MDLMOL_VALENCE} from './MDLReader';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity} from '../mol/PolymerBlock';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {StereoGroup} from '../mol/StereoGroup';\n\n/*\n\tMDL Molfile writer: convert the native structure format to MDL Molfile. Both the older (V2000) and newer (V3000) formats are\n\tsupported. The older V2000 format is recommended as the default, since every toolkit ever created supports a common subset of\n\tits feature set. While the newer V3000 format is well supported, it is not as ubiquitous, and its feature improvements are not\n\tused by most molecules.\n\n\tMDL SDfile writer: including non-molecule fields in collections. The SDfile format is problematic for as many reasons as the\n\tmolecules; the best strategy is to avoid using it whenever possible, but it is so often not.\n*/\n\ninterface Sgroup\n{\n\ttype:string;\n\tname:string;\n\tatoms:number[];\n\n\t// DAT only\n\tvalue?:string;\n\tunit?:string;\n\tquery?:string;\n\n\t// MUL only\n\tparent?:number;\n\n\t// for SCSR templates\n\tbonds?:number[];\n\ttemplateClass?:string;\n\tnatReplace?:string;\n\tattachPoints?:string[];\n}\n\nconst VPFX = 'M  V30 ';\n\nexport class MDLMOLWriter\n{\n\t// options\n\tpublic includeHeader = true; // if on, the 3 line header will be included\n\tpublic includeCounts = true; // if on, the subsequent 1 line of counts will be included (V3000 only, ignored in V2000 mode)\n\tpublic includeEnd = true; // if on, the final M__END will be included\n\tpublic overallStereoAbsolute = true; // from the counts block, overall true=interpret stereo as absolute; false=interpret as relative\n\tpublic enhancedFields = false; // if on, non-standard MDL fields may be added\n\tpublic chargeSeparate = false; // if on, zero bonds will be split out\n\tpublic abbrevSgroups = true; // if on, abbreviations will be written as Sgroups when possible\n\tpublic polymerBlocks = true; // write polymer blocks, if any\n\tpublic molName = ''; // optional name to include in the header (if any)\n\n\t// provide these template definitions if they need to be written out with the molecule\n\tpublic scsrTemplates:ForeignMoleculeTemplateDefn[] = null;\n\n\t// some number of superatom abbreviation groups, there being several types\n\tprivate sgroups:Sgroup[] = [];\n\n\t// content in progress\n\tprivate lines:string[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t}\n\n\t// write out the MDL content (using V2000 format)\n\tpublic write():string\n\t{\n\t\tif (this.includeHeader)\n\t\t{\n\t\t\tthis.lines.push(this.molName);\n\t\t\tthis.lines.push('Generated by WebMolKit');\n\t\t\tthis.lines.push('');\n\t\t}\n\t\tthis.writeCTAB();\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// writes the content using the newer V3000 format\n\tpublic writeV3000():string\n\t{\n\t\tif (this.includeHeader)\n\t\t{\n\t\t\tthis.lines.push(this.molName);\n\t\t\tthis.lines.push('Generated by WebMolKit');\n\t\t\tthis.lines.push('');\n\t\t}\n\t\tthis.writeCTAB3000();\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// writes out V3000 if there is metadata that cannot be represented in the older format, V2000 otherwise\n\tpublic writeEither():string\n\t{\n\t\tlet triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n\t\tif (!triggered) for (let n = 1; n <= this.mol.numBonds; n++)\n\t\t\tif (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {triggered = true; break;}\n\t\tif (triggered) return this.writeV3000(); else return this.write();\n\t}\n\n\tpublic getResult():string\n\t{\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// writes the main block\n   \tprivate writeCTAB():void\n   \t{\n\t\tlet mol = this.mol = this.mol.clone();\n\t\tmol.keepTransient = true;\n\n\t\t// if allowed to write Sgroups, some abbreviations may be retained for the subsequent steps\n\t\tif (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol))\n\t\t{\n\t\t\tif (this.abbrevSgroups)\n\t\t\t\tthis.partialAbbrevExpansion();\n\t\t\telse\n\t\t\t\tMolUtil.expandAbbrevs(mol, true);\n\t\t\tthis.prepareSgroups();\n\t\t}\n\n\t\t// pre-encode atom lists\n\t\tlet atomList1:string[] = [], atomList2:string[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet elements:string[] = null;\n\t\t\tlet logic = 'F';\n\t\t\telements = QueryUtil.queryAtomElements(mol, n);\n\t\t\tif (elements == null) {elements = QueryUtil.queryAtomElementsNot(mol, n); logic = 'T';}\n\t\t\tif (elements == null) continue;\n\n\t\t\tmol.setAtomElement(n, 'L');\n\n\t\t\tlet line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n\t\t\tfor (let el of elements) line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n\t\t\tatomList1.push(line);\n\n\t\t\tline = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n\t\t\tfor (let el of elements) line += this.pad(el, 4);\n\t\t\tatomList2.push(line);\n\t\t}\n\n\t\tthis.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n\t\t\t\t\t\t'  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n\n\t\t// data to record in the following M-block\n\t\tlet chgidx:number[] = [], chgval:number[] = [];\n\t\tlet radidx:number[] = [], radval:number[] = [];\n\t\tlet isoidx:number[] = [], isoval:number[] = [];\n\t\tlet rgpidx:number[] = [], rgpval:number[] = [];\n\t\tlet hydidx:number[] = [], hydval:number[] = [];\n\t\tlet zchidx:number[] = [], zchval:number[] = [];\n\t\tlet zboidx:number[] = [], zboval:number[] = [];\n\t\tlet rbcidx:number[] = [], rbcval:number[] = [];\n\t\tlet subidx:number[] = [], subval:number[] = [];\n\t\tlet unsidx:number[] = [], unsval:number[] = [];\n\n\t\t// export atoms, and make a few notes along the way\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tlet z = mol.is3D() ? mol.atomZ(n) : 0;\n\t\t\tlet line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n\n\t\t\tlet el = mol.atomElement(n);\n\t\t\tlet str = el;\n\t\t\tif (str.length > 3) str = str.substring(0, 3);\n\t\t\tif (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9')\n\t\t\t{\n\t\t\t\trgpidx.push(n);\n\t\t\t\trgpval.push(parseInt(str.substring(1)));\n\t\t\t\tstr = 'R#';\n\t\t\t}\n\t\t\twhile (str.length < 4) str += ' ';\n\t\t\tline += ' ' + str + '0';\n\n\t\t\tlet chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n\t\t\tif (chg >= -3 && chg <= -1) chg = 4 - chg;\n\t\t\telse if (chg == 0 && rad == 2) chg = 4;\n\t\t\telse if (chg >= 1 && chg <= 3) chg = 4 - chg;\n\t\t\telse chg = 0;\n\n\t\t\tlet qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n\t\t\tlet hyd = 0;\n\t\t\tif (Vec.len(qhyd) == 1) hyd = qhyd[0] + 1;\n\n\t\t\tlet val = this.mdlValence(mol, n, 15);\n\n\t\t\tline += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n\n\t\t\tthis.lines.push(line);\n\n\t\t\tif (mol.atomCharge(n) != 0) {chgidx.push(n); chgval.push(mol.atomCharge(n));}\n\t\t\tif (this.enhancedFields)\n\t\t\t{\n\t\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {hydidx.push(n); hydval.push(mol.atomHExplicit(n));}\n\t\t   \t}\n\n\t\t\tif (rad == 1) {radidx.push(n); radval.push(2);}\n\t\t\tif (rad == 2) {radidx.push(n); radval.push(1);}\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {isoidx.push(n); isoval.push(mol.atomIsotope(n));}\n\n\t\t\tlet qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n\t\t\tlet quns = QueryUtil.queryAtomUnsaturated(mol, n);\n\t\t\tif (Vec.len(qrbc) == 1) {rbcidx.push(n); rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);}\n\t\t\tif (Vec.len(qsub) == 1) {subidx.push(n); subval.push(qsub[0] == 0 ? -1 : qsub[0]);}\n\t\t\tif (quns == true) {unsidx.push(n); unsval.push(1);}\n\t\t}\n\n\t\t// export bonds\n\t\tlet maskArom = ForeignMolecule.noteAromaticBonds(mol);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet order = mol.bondOrder(n), type = order;\n\t\t\tlet qbond = Vec.sorted(QueryUtil.queryBondOrders(mol, n) ?? []);\n\t\t\tif (maskArom[n - 1] || Vec.equals(qbond, [-1])) type = 4; // the \"aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [1, 2])) type = 5; // the \"single or double\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 1])) type = 6; // the \"single or aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 2])) type = 7; // the \"double or aromatic\" type\n\t\t\telse if (Vec.equals(qbond, [-1, 0, 1, 2, 3])) type = 8; // the \"any\" type\n\t\t\telse if (type > 3) type = 3; // 4-or-higher bonds are not available\n\n\t\t\tlet stereo = mol.bondType(n);\n\t\t\tif (stereo == Molecule.BONDTYPE_NORMAL) {}\n\t\t\telse if (stereo == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tstereo = 1;\n\t\t\t\t//type = 1; ... documentation says that wedges have to be single\n\t\t\t}\n\t\t\telse if (stereo == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tstereo = 6;\n\t\t\t\t//type = 1; ... documentation says that wedges have to be single\n\t\t\t}\n\t\t\telse if (stereo == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tif (type == 1) stereo = 4; else stereo = 3;\n\t\t\t}\n\t\t\telse stereo = 0;\n\n\t\t\tlet line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n\t\t\t\t\t   this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n\t\t\tthis.lines.push(line);\n\n\t\t\tif (this.enhancedFields)\n\t\t\t{\n\t\t\t\tif ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {zboidx.push(n); zboval.push(order);}\n\t\t\t\t// these are for retroactive bond separation, not implemented at the moment\n\t\t\t\t//if (xmol.bondOrder(n) != mol.bondOrder(n)) {zboidx.push(n); zboval.push(xmol.bondOrder(n));}\n\t\t\t}\n\t\t}\n\n\t\tthis.lines.push(...atomList1);\n\t\tthis.lines.push(...atomList2);\n\n\t\t// export the additional blocks\n\t\tthis.writeMBlockPair('CHG', chgidx, chgval);\n\t\tthis.writeMBlockPair('RAD', radidx, radval);\n\t\tthis.writeMBlockPair('ISO', isoidx, isoval);\n\t\tthis.writeMBlockPair('RGP', rgpidx, rgpval);\n\t\tthis.writeMBlockPair('HYD', hydidx, hydval);\n\t\tthis.writeMBlockPair('ZCH', zchidx, zchval);\n\t\tthis.writeMBlockPair('ZBO', zboidx, zboval);\n\t\tthis.writeMBlockPair('RBC', rbcidx, rbcval);\n\t\tthis.writeMBlockPair('SUB', subidx, subval);\n\t\tthis.writeMBlockPair('UNS', unsidx, unsval);\n\n\t\t// write bond artifacts, one line each\n\t\tif (this.enhancedFields)\n\t\t{\n\t\t\tlet artifacts = new BondArtifact(this.mol);\n\t\t\tlet idx = 0;\n\t\t\tfor (let path of artifacts.getResPaths()) this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n\t\t\tfor (let ring of artifacts.getResRings()) this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n\t\t\tfor (let arene of artifacts.getArenes()) this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n\t\t}\n\n\t\t// encode Sgroups\n\t\tlet inSgroup = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let s = 0; s < this.sgroups.length; s++)\n\t\t{\n\t\t\tlet sg = this.sgroups[s];\n\t\t\tfor (let n of sg.atoms) inSgroup[n - 1] = true;\n\n\t\t\tlet sidx = this.intrpad(s + 1, 4);\n\t\t\tthis.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n\t\t\tfor (let n = 0; n < sg.atoms.length; n += 15)\n\t\t\t{\n\t\t\t\tlet sz = Math.min(sg.atoms.length - n, 15);\n\t\t\t\tlet line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n\t\t\t\tfor (let i = 0; i < sz; i++) line += this.intrpad(sg.atoms[n + i], 4);\n\t\t\t\tthis.lines.push(line);\n\t\t\t}\n\t\t\tif (sg.type != 'DAT') this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n\t\t\tif (sg.type == 'MUL')\n\t\t\t{\n\t\t\t\tlet mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n\t\t\t\tfor (let n = 0; n < unit; n += 15)\n\t\t\t\t{\n\t\t\t\t\tlet sz = Math.min(unit - n, 15);\n\t\t\t\t\tlet line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n\t\t\t\t\tfor (let i = 0; i < sz; i++) line += this.intrpad(sg.atoms[n + i], 4);\n\t\t\t\t\tthis.lines.push(line);\n\t\t\t\t}\n\t\t\t\tif (sg.parent > 0) this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n\t\t\t}\n\t\t\tif (sg.type == 'DAT')\n\t\t\t{\n\t\t\t\tthis.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n\t\t\t\tthis.lines.push('M  SED' + sidx + ' ' + sg.value);\n\t\t\t}\n\t\t}\n\n\t\tif (this.polymerBlocks) this.encodePolymerBlocks(this.sgroups.length);\n\n\t\t// export long atom names\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n).length > 2)\n\t\t{\n\t\t\tthis.lines.push('A  ' + this.intrpad(n, 3));\n\t\t\tthis.lines.push(mol.atomElement(n));\n\t\t}\n\n\t\tif (this.includeEnd) this.lines.push('M  END');\n   \t}\n\n\t// writes a specific sub-block, e.g. M__CHG, etc., where each pair of idx/val is a separate entity\n\tprivate writeMBlockPair(token:string, idx:number[], val:number[])\n\t{\n\t\tconst sz = idx.length;\n\t\tfor (let i = 0; i < sz; i += 8)\n\t\t{\n\t\t\tlet count = Math.min(8, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(count, 3);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\n\t// writes a specific sub-block, whereby the master index corresponds to some number of values; these are split over multiple\n\t// lines if necessary\n\tprivate writeMBlockFlat(token:string, idx:number, val:number[])\n\t{\n\t\tconst sz = val.length;\n\t\tfor (let i = 0; i < sz; i += 15)\n\t\t{\n\t\t\tlet count = Math.min(15, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\tprivate writeMBlockFlatIdxFirst(token:string, idx:number, val:number[])\n\t{\n\t\tconst sz = val.length;\n\t\tfor (let i = 0; i < sz; i += 15)\n\t\t{\n\t\t\tlet count = Math.min(15, sz - i);\n\t\t\tlet line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n\t\t\tfor (let j = 0; j < count; j++) line += this.intrpad(val[i + j], 4);\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}\n\n\t// convenient formatting\n\tprivate intrpad(num:number, sz:number):string\n\t{\n\t\treturn this.rpad(num.toString(), sz);\n\t}\n\tprivate rpad(str:string, sz:number):string\n\t{\n\t\twhile (str.length < sz) str = ' ' + str;\n\t\treturn str;\n\t}\n\tprivate pad(str:string, sz:number):string\n\t{\n\t\twhile (str.length < sz) str += ' ';\n\t\treturn str;\n\t}\n\n\t// figures out the MDL valence override, if any; a return value of 0 means that the calculated default will suffice; if the value\n\t// needs to be explicitly zero, the 'zeroVal' parameter is returned (should be 15 for V2000, -1 for V3000)\n\tprivate mdlValence(mol:Molecule, atom:number, zeroVal:number):number\n\t{\n\t\tlet marked = ForeignMolecule.noteExplicitValence(mol, atom);\n\t\tif (marked != null) return marked > 0 ? marked : zeroVal;\n\n\t\tlet hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n\t\tlet options = MDLMOL_VALENCE[el];\n\n\t\t// if no implicit valence, and no hydrogens: no need\n\t\tif (options == null && hyd == 0) return 0;\n\n\t\tlet chg = mol.atomCharge(atom);\n\t\tlet chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n\t\tlet bondSum = 0;\n\t\tfor (let b of mol.atomAdjBonds(atom)) bondSum += mol.bondOrder(b);\n\t\tlet nativeVal = chgmod + /*mol.atomUnpaired(atom) +*/ hyd + bondSum;\n\n\t\t// if this is consistent with the \"next highest valence option\" (relative to bonds & charge), can leave it unaffected\n\t\tif (options) for (let optVal of options) if (optVal >= chgmod + bondSum)\n\t\t{\n\t\t\tif (optVal == nativeVal) return 0; // it checks out\n\t\t\tbreak;\n\t\t}\n\n\t\t// NOTE: in cases with multiple valence options, like S[2,4,6], it would be possible to leave the valence unmarked\n\t\t// when the previous state is indicated, e.g. for S{val=3} ==> +1 H to get to val=4; or we could just mark the\n\t\t// valence, since the first one is always overwhelmingly the default\n\n\t\tlet val = nativeVal - chgmod;\n\t\treturn val <= 0 || val > 14 ? zeroVal : val;\n\t}\n\n\t// processes the structure so that any non-trivial abbreviations (multiple attachment points/different bond orders) are expanded, and also makes\n\t// sure that any remaining abbreviations have no nesting within them\n\tprivate partialAbbrevExpansion():void\n\t{\n\t\tconst {mol} = this;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tlet frag = MolUtil.getAbbrev(mol, n);\n\t\t\tif (frag == null || mol.atomAdjCount(n) != 1) {MolUtil.clearAbbrev(mol, n); continue;}\n\n\t\t\tif (MolUtil.hasAnyAbbrev(frag))\n\t\t\t{\n\t\t\t\tMolUtil.expandAbbrevs(frag, true);\n\t\t\t\tMolUtil.setAbbrev(mol, n, frag);\n\t\t\t}\n\n\t\t\tlet order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n\t\t\tif (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0])) continue;\n\n\t\t\tMolUtil.expandOneAbbrev(mol, n, true);\n\t\t\tn--;\n\t\t}\n\t}\n\n\t// any remaining abbreviations within the molecule get turned into S-groups\n\tprivate prepareSgroups():void\n\t{\n\t\tconst {mol} = this;\n\n\t\t// note: using -ve atom mapping numbers to disambiguate\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) < 0) mol.setAtomMapNum(n, 0);\n\t\tlet next = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tthis.sgroups.push({type: 'SUP', name: mol.atomElement(n), atoms: null});\n\t\t\tlet mask = MolUtil.expandOneAbbrev(mol, n, true);\n\t\t\tif (mask == null) continue;\n\t\t\tnext--;\n\t\t\tfor (let i = 0; i < mask.length; i++) if (mask[i]) mol.setAtomMapNum(i + 1, next);\n\n\t\t\tn--;\n\t\t}\n\n\t\t// extract the layers one at a time\n\t\tfor (let idx = -1, p = 0; idx >= next; idx--, p++)\n\t\t{\n\t\t\tlet atoms:number[] = [];\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) == idx)\n\t\t\t{\n\t\t\t\tatoms.push(n);\n\t\t\t\tmol.setAtomMapNum(n, 0);\n\t\t\t}\n\t\t\tthis.sgroups[p].atoms = atoms;\n\t\t}\n\n\t\t// also encode foreign-annotated Sgroups\n\t\tfor (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol))\n\t\t{\n\t\t\tlet sg:Sgroup = {type: 'SUP', name: ma.name, atoms: ma.atoms};\n\n\t\t\tlet str = ma.keyval['bonds'];\n\t\t\tif (str) sg.bonds = str.split(' ').map((v) => parseInt(v));\n\n\t\t\tsg.templateClass = ma.keyval['templateClass'] ;\n\t\t\tsg.natReplace = ma.keyval['natReplace'];\n\n\t\t\tstr = ma.keyval['attachPoints'];\n\t\t\tif (str) sg.attachPoints = str.split(' ');\n\n\t\t\tthis.sgroups.push(sg);\n\t\t}\n\t\tfor (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol)) this.sgroups.push({type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms});\n\t\tfor (let dat of ForeignMolecule.noteAllSgroupData(mol)) this.sgroups.push({type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms});\n\n\t\t// whenever a MUL group is subsumed by another, need to name that as the parent\n\t\tfor (let n = 0; n < this.sgroups.length; n++)\n\t\t{\n\t\t\tlet sg = this.sgroups[n];\n\t\t\tif (sg.type != 'MUL') continue;\n\t\t\tlet bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n\t\t\tskip: for (let i = 0; i < this.sgroups.length; i++) if (i != n)\n\t\t\t{\n\t\t\t\tlet look = this.sgroups[i];\n\t\t\t\tif (look.type != 'MUL' || look.atoms.length >= bestSize) continue;\n\t\t\t\tfor (let a of sg.atoms) if (!look.atoms.includes(a)) continue skip;\n\t\t\t\tbestIdx = i;\n\t\t\t\tbestSize = look.atoms.length;\n\t\t\t}\n\t\t\tif (bestIdx >= 0) sg.parent = bestIdx + 1;\n\t\t}\n\t}\n\n\t// use a variant of Sgroups for any polymer blocks\n\tprivate encodePolymerBlocks(idx:number):void\n\t{\n\t\tlet polymers = new PolymerBlock(this.mol);\n\t\tfor (let id of polymers.getIDList())\n\t\t{\n\t\t\tlet unit = polymers.getUnit(id);\n\t\t\tlet sidx = this.intrpad(++idx, 4);\n\t\t\tthis.lines.push('M  STY  1' + sidx + ' SRU');\n\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) this.lines.push('M  SCN  1' + sidx + ' HT ');\n\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) this.lines.push('M  SCN  1' + sidx + ' HH ');\n\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) this.lines.push('M  SCN  1' + sidx + ' EU ');\n\n\t\t\tthis.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n\n\t\t\tlet bonds:number[] = null;\n\t\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\t\tif ((fl1 && !fl2) || (!fl1 && fl2)) bonds = Vec.append(bonds, n);\n\t\t\t}\n\t\t\tif (bonds != null) this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n\n\t\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t\t{\n\t\t\t\tlet bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n\t\t\t\tthis.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n\t\t\t}\n\n\t\t\tthis.lines.push('M  SMT' + sidx + ' n');\n\t\t}\n\t}\n\n\tpublic writeCTAB3000():void\n\t{\n\t\tlet mol = this.mol;\n\n\t\t// if allowed to write Sgroups, some abbreviations may be retained for the subsequent steps\n\t\tif (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol))\n\t\t{\n\t\t\tmol = this.mol = mol.clone();\n\t\t\tmol.keepTransient = true;\n\t\t\tif (this.abbrevSgroups)\n\t\t\t\tthis.partialAbbrevExpansion();\n\t\t\telse\n\t\t\t\tMolUtil.expandAbbrevs(mol, true);\n\t\t\tthis.prepareSgroups();\n\t\t}\n\n\t\tlet sgroupText = this.populateV3000Sgroups();\n\n\t\tif (this.includeCounts) this.lines.push('  0  0  0     0  0            999 V3000');\n\t\tthis.lines.push(VPFX + 'BEGIN CTAB');\n\n\t\tthis.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n\n\t\tthis.lines.push(VPFX + 'BEGIN ATOM');\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet label = mol.atomElement(n);\n\n\t\t\tlet qel = QueryUtil.queryAtomElements(mol, n);\n\t\t\tif (qel != null) label = '[' + qel.join(',') + ']';\n\t\t\telse\n\t\t\t{\n\t\t\t\tqel = QueryUtil.queryAtomElementsNot(mol, n);\n\t\t\t\tif (qel != null) label = 'NOT [' + qel.join(',') + ']';\n\t\t\t}\n\n\t\t\tif (label.includes(' ')) label = `\"${label}\"`;\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tlet z = mol.is3D() ? mol.atomZ(n) : 0;\n\t\t\tlet mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n\t\t\tlet isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n\n\t\t\tlet line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n\n\t\t\tif (chg != 0) line += ' CHG=' + chg;\n\t\t\tif (unp == 1) line += ' RAD=2';\n\t\t\telse if (unp == 2) line += ' RAD=1';\n\t\t\tif (isotope != 0) line += ' MASS=' + isotope;\n\t\t\tif (val != 0) line += ' VAL=' + val;\n\n\t\t\tlet qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n\t\t\tlet quns = QueryUtil.queryAtomUnsaturated(mol, n);\n\t\t\tif (Vec.len(qhyd) == 1) line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n\t\t\tif (Vec.len(qrbc) == 1) line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n\t\t\tif (Vec.len(qsub) == 1) line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n\t\t\tif (quns == true) line += ' UNSAT=1';\n\n\t\t\tfor (let trans of mol.atomTransient(n))\n\t\t\t{\n\t\t\t\tif (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass)) line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n\t\t\t\telse if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID)) line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n\t\t\t\telse if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd))\n\t\t\t\t{\n\t\t\t\t\tlet bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n\t\t\t\t\tline += ' ATTCHORD=' + this.packV3000Strings(bits);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis.lines.push(line);\n\t\t}\n\n\t\tthis.lines.push(VPFX + 'END ATOM');\n\n\t\tif (mol.numBonds > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN BOND');\n\n\t\t\tlet maskArom = ForeignMolecule.noteAromaticBonds(mol);\n\t\t\tlet maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol); // (note: dative bond is the default kind of 0-order bond, so only need to note h-bond subclass\n\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\t\tlet order = mol.bondOrder(n), type = order;\n\t\t\t\tlet qbond = Vec.sorted(QueryUtil.queryBondOrders(mol, n) ?? []);\n\t\t\t\tif (maskArom[n - 1] || Vec.equals(qbond, [-1])) type = 4; // the \"aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [1, 2])) type = 5; // the \"single or double\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 1])) type = 6; // the \"single or aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 2])) type = 7; // the \"double or aromatic\" type\n\t\t\t\telse if (Vec.equals(qbond, [-1, 0, 1, 2, 3])) type = 8; // the \"double or aromatic\" type\n\t\t\t\telse if (type == 0)\n\t\t\t\t{\n\t\t\t\t\tif (!maskHBond[n - 1])\n\t\t\t\t\t\ttype = 9; // the \"coordination\" type\n\t\t\t\t\telse\n\t\t\t\t\t\ttype = 10; // the \"H-bond\" type\n\t\t\t\t}\n\t\t\t\telse if (type > 3) type = 3; // 4-or-higher bonds are not available\n\n\t\t\t\tlet stereo = mol.bondType(n);\n\n\t\t\t\tlet line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n\n\t\t\t\tif (stereo == Molecule.BONDTYPE_INCLINED) line += ' CFG=1';\n\t\t\t\telse if (stereo == Molecule.BONDTYPE_DECLINED) line += ' CFG=3';\n\t\t\t\telse if (stereo == Molecule.BONDTYPE_UNKNOWN) line += ' CFG=2';\n\n\t\t\t\tif (order == 0 && !maskHBond[n - 1]) line += ' DISP=COORD';\n\n\t\t\t\tthis.lines.push(line);\n\t\t\t}\n\n\t\t\tthis.lines.push(VPFX + 'END BOND');\n\t\t}\n\n\t\tif (sgroupText.length > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN SGROUP');\n\t\t\tthis.lines.push(...sgroupText);\n\t\t\tthis.lines.push(VPFX + 'END SGROUP');\n\t\t}\n\n\t\tlet collections:string[] = [];\n\n\t\tlet stereoGroup = new StereoGroup(mol);\n\t\tlet racidx = 0, relidx = 0;\n\t\tfor (let atoms of stereoGroup.getRacemicAtoms()) collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n\t\tfor (let atoms of stereoGroup.getRelativeAtoms()) collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n\n\t\tif (collections.length > 0)\n\t\t{\n\t\t\tthis.lines.push(VPFX + 'BEGIN COLLECTION');\n\t\t\tthis.lines.push(...collections);\n\t\t\tthis.lines.push(VPFX + 'END COLLECTION');\n\t\t}\n\n\t\tthis.lines.push(VPFX + 'END CTAB');\n\n\t\tif (Vec.notBlank(this.scsrTemplates)) this.populateSCSRTemplates();\n\n\t\tif (this.includeEnd) this.lines.push('M  END');\n\t}\n\n\tprivate populateV3000Sgroups():string[]\n\t{\n\t\tlet mol = this.mol;\n\t\tlet lines:string[] = [];\n\n\t\tfor (let s = 0; s < this.sgroups.length; s++)\n\t\t{\n\t\t\tlet sg = this.sgroups[s];\n\t\t\tlet sid = lines.length + 1;\n\n\t\t\tlet txt = `${VPFX}${sid} ${sg.type} 0`;\n\t\t\tif (sg.type == 'SUP')\n\t\t\t{\n\t\t\t\ttxt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\tif (sg.bonds) txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n\t\t\t\tif (sg.templateClass) txt += ' CLASS=' + sg.templateClass;\n\t\t\t\tif (sg.natReplace) txt += ' NATREPLACE=' + sg.natReplace;\n\t\t\t\tif (sg.attachPoints)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n + 2 < sg.attachPoints.length; n += 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n\t\t\t\t\t\ttxt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (sg.type == 'MUL')\n\t\t\t{\n\t\t\t\tlet mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n\t\t\t\ttxt += ' MULT=' + sg.name;\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\ttxt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n\t\t\t\tif (sg.parent > 0) txt += ' PARENT=' + sg.parent;\n\t\t\t}\n\t\t\telse if (sg.type == 'DAT')\n\t\t\t{\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(sg.atoms);\n\t\t\t\ttxt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n\t\t\t\ttxt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n\t\t\t}\n\t\t\tlines.push(txt);\n\t\t}\n\n\t\tif (this.polymerBlocks)\n\t\t{\n\t\t\tlet polymers = new PolymerBlock(mol);\n\t\t\tfor (let id of polymers.getIDList())\n\t\t\t{\n\t\t\t\tlet sid = lines.length + 1;\n\t\t\t\tlet unit = polymers.getUnit(id);\n\n\t\t\t\tlet txt = `${VPFX}${sid} SRU 0`;\n\n\t\t\t\ttxt += ' ATOMS=' + this.packV3000List(unit.atoms);\n\n\t\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail) txt += ' CONNECT=HT';\n\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.HeadToHead) txt += ' CONNECT=HH';\n\t\t\t\telse if (unit.connect == PolymerBlockConnectivity.Random) txt += ' CONNECT=EU';\n\n\t\t\t\tlet bonds:number[] = [];\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tlet fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n\t\t\t\t\tif ((fl1 && !fl2) || (!fl1 && fl2)) bonds.push(n);\n\t\t\t\t}\n\t\t\t\tif (bonds.length > 0) txt += ' BONDS=' + this.packV3000List(bonds);\n\n\t\t\t\tif (unit.bondConn != null) txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n\n\t\t\t\tlines.push(txt);\n\t\t\t}\n\t\t}\n\n\t\treturn lines;\n\t}\n\n\tprivate populateSCSRTemplates():void\n\t{\n\t\tthis.lines.push(VPFX + 'BEGIN TEMPLATE');\n\t\tfor (let n = 0; n < this.scsrTemplates.length; n++)\n\t\t{\n\t\t\tvar defn = this.scsrTemplates[n];\n\t\t\tlet line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n\t\t\tif (defn.natReplace) line += ' NATREPLACE=' + defn.natReplace;\n\t\t\tthis.lines.push(line);\n\n\t\t\tvar tmdl = new MDLMOLWriter(defn.mol);\n\t\t\ttmdl.includeHeader = false;\n\t\t\ttmdl.includeCounts = false;\n\t\t\ttmdl.includeEnd = false;\n\t\t\tlet molfile = tmdl.writeV3000();\n\t\t\tfor (line of molfile.trimEnd().split('\\n')) this.lines.push(line);\n\t\t}\n\t\tthis.lines.push(VPFX + 'END TEMPLATE');\n\t}\n\n\tprivate packV3000List(values:number[]):string\n\t{\n\t\tlet str = '(' + values.length;\n\t\tfor (let v of values) str += ' ' + v;\n\t\treturn str + ')';\n\t}\n\tprivate packV3000Strings(values:string[]):string\n\t{\n\t\tlet str = '(' + values.length;\n\t\tfor (let v of values) str += ' ' + v;\n\t\treturn str + ')';\n\t}\n}\n\nexport class MDLSDFWriter\n{\n\t// options\n\tpublic enhancedFields = true; // if on, non-standard MDL fields may be added\n\tpublic chargeSeparate = false; // if on, zero bonds will be split out\n\tpublic abbrevSgroups = true; // if on, abbreviations will be written as Sgroups when possible\n\n\t// content in progress\n\tprivate lines:string[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(public ds:DataSheet)\n\t{\n\t}\n\n\t// write out the MDL content\n\tpublic write():string\n\t{\n\t\tlet ds = this.ds, lines = this.lines;\n\t\tlet colMol = this.ds.firstColOfType(DataSheetColumn.Molecule);\n\n\t\tfor (let i = 0; i < ds.numRows; i++)\n\t\t{\n\t\t\tlet mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n\t\t\tif (mol != null /*MolUtil.notBlank(mol)*/)\n\t\t\t{\n\t\t\t\tlet wtr = new MDLMOLWriter(mol);\n\t\t\t\twtr.enhancedFields = this.enhancedFields;\n\t\t\t\twtr.chargeSeparate = this.chargeSeparate;\n\t\t\t\twtr.abbrevSgroups = this.abbrevSgroups;\n\t\t\t\tlet molstr = wtr.write();\n\t\t\t\tlines.push(molstr);\n\t\t\t}\n\n\t\t\tfor (let j = 0; j < ds.numCols; j++) if (j != colMol && ds.notNull(i, j))\n\t\t\t{\n\t\t\t\tlet ct = ds.colType(j);\n\t\t\t\tlet val = '';\n\t\t\t\tif (ct == DataSheetColumn.String) val = ds.getString(i, j);\n\t\t\t\telse if (ct == DataSheetColumn.Integer) val = ds.getInteger(i, j).toString();\n\t\t\t\telse if (ct == DataSheetColumn.Real) val = ds.getReal(i, j).toString();\n\t\t\t\telse if (ct == DataSheetColumn.Boolean) val = ds.getBoolean(i, j) ? 'true' : 'false';\n\n\t\t\t\tif (val != '')\n\t\t\t\t{\n\t\t\t\t\tlines.push('> <' + ds.colName(j) + '>');\n\t\t\t\t\tlines.push(val);\n\t\t\t\t\tlines.push('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlines.push('$$$$');\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tpublic getResult():string\n\t{\n\t\treturn this.lines.join('\\n');\n\t}\n\n\t// ----------------- private methods -----------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MDLMOLReader} from './MDLReader';\nimport {MDLMOLWriter} from './MDLWriter';\nimport {Molecule} from '../mol/Molecule';\n\n/*\n\tSerialisation and deserialisation utilities for the Molecule object.\n\n\tNote that the native format (\"SketchEl\") is entirely lossless. Other molecule formats, such as MDL MOL, are lossless\n\tfor a large subset of common organic chemistry use-cases, but there is a lot of missing overlap between the two.\n*/\n\nexport class MoleculeStream\n{\n\t// tries to read a format-unknown molecule, with whatever tools are currently available\n\tpublic static readUnknown(strData:string):Molecule\n\t{\n\t\t// see if it's a JSON-encoded SketchEl string\n\t\tif (strData.startsWith('\"'))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet jsonStr = JSON.parse(strData);\n\t\t\t\tlet mol = MoleculeStream.readNative(jsonStr);\n\t\t\t\tif (mol) return mol;\n\t\t\t}\n\t\t\tcatch (ex) {}\n\t\t}\n\n\t\tlet mol = MoleculeStream.readNative(strData);\n\t\tif (mol) return mol;\n\t\ttry {mol = MoleculeStream.readMDLMOL(strData);}\n\t\tcatch (e) {}\n\t\t// (... add others as available ...)\n\t\treturn mol;\n\t}\n\n\t// static method: reads in a string that is presumed to be in SketchEl format, and returns a fully instantiated Molecule; returns\n\t// null if anything went wrong\n\tpublic static readNative(strData:string):Molecule\n\t{\n\t\tlet mol = new Molecule();\n\t\tmol.keepTransient = true;\n\n\t\tlet lines = strData.split(/\\r?\\n/);\n\t\tif (lines.length < 2) return null; // cannot be valid\n\n\t\t// special deal: a clipboard hack that glues together MDL+SketchEl can be easily handled\n\t\tif (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0)\n\t\t{\n\t\t\tlet i = strData.indexOf('SketchEl!');\n\t\t\tif (i < 0) return null;\n\t\t\tlines = strData.substring(i).split(/r?\\n/);\n\t\t}\n\n\t\t// opening and closing lines\n\t\tlet hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n\t\tif (!hdr) return null;\n\t\tlet numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n\t\tif (lines.length < 2 + numAtoms + numBonds) return null;\n\t\tif (!lines[1 + numAtoms + numBonds].match(/^!End/)) return null;\n\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tlet bits = lines[1 + n].split(/[=,;]/);\n\t\t\tlet num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n\t\t\tlet extra:string[] = [], trans:string[] = [];\n\t\t\tfor (let i = 5; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet ch = bits[i].charAt(0);\n\t\t\t\tif (bits[i].charAt(0) == 'i') {} // ignore\n\t\t\t\telse if (bits[i].charAt(0) == 'e') mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'm') mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'n') mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n\t\t\t\telse if (bits[i].charAt(0) == 'x') extra.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'y') trans.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'z') {mol.setAtomZ(num, parseFloat(bits[i].substring(1))); mol.setIs3D(true);}\n\t\t\t\telse extra.push(MoleculeStream.skUnescape(bits[i])); // preserve unrecognised\n\t\t\t}\n\t\t\tmol.setAtomExtra(num, extra);\n\t\t\tmol.setAtomTransient(num, trans);\n\t\t}\n\t\tfor (let n = 0; n < numBonds; n++)\n\t\t{\n\t\t\tlet bits = lines[1 + numAtoms + n].split(/[=,]/);\n\t\t\tlet frto = bits[0].split('-');\n\t\t\tlet bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n\t\t\tif (bfr == bto) continue; // silent trimming\n\n\t\t\tlet num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n\t\t\tlet extra = new Array(), trans = new Array();\n\t\t\tfor (let i = 3; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet ch = bits[i].charAt(0);\n\t\t\t\tif (bits[i].charAt(0) == 'x') extra.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse if (bits[i].charAt(0) == 'y') trans.push(MoleculeStream.skUnescape(bits[i]));\n\t\t\t\telse extra.push(MoleculeStream.skUnescape(bits[i])); // preserve unrecognised\n\t\t\t}\n\t\t\tmol.setBondExtra(num, extra);\n\t\t\tmol.setBondTransient(num, trans);\n\t\t}\n\n\t\tmol.keepTransient = false;\n\t\treturn mol;\n\t}\n\n\t// static method: converts a molecule into a string which represents it using the SketchEl format\n\tpublic static writeNative(mol:Molecule):string\n\t{\n\t\tlet ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n\t\t\tlet hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n\t\t\tret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n\t\t\tif (mol.is3D()) ret += ',z' + mol.atomZ(n);\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) ret += ',m' + mol.atomIsotope(n);\n\t\t\tif (mol.atomMapNum(n) > 0) ret += ',n' + mol.atomMapNum(n);\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n\t\t\tret += '\\n';\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n\t\t\tret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n\t\t\tret += '\\n';\n\t\t}\n\n\t\tret += '!End\\n';\n\t\treturn ret;\n\t}\n\n\t// parses a string that is expected to be using MDL Molfile format, and turns it into a molecule; or null if\n\tpublic static readMDLMOL(strData:string):Molecule\n\t{\n\t\tlet src = new MDLMOLReader(strData);\n\t\tsrc.parseHeader = true;\n\t\tsrc.parse();\n\t\treturn src.mol;\n\t}\n\n\t// converts the molecule to MDL Molfile format, using default options; see the MDLMOLWriter class for finer control\n\tpublic static writeMDLMOL(mol:Molecule):string\n\t{\n\t\treturn new MDLMOLWriter(mol).write();\n\t}\n\n\t// static method: decodes a string from a sketchel field\n\tpublic static skUnescape(str:string):string\n\t{\n\t\tlet ret = '', match:RegExpMatchArray;\n\t\twhile (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/))\n\t\t{\n\t\t\tret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n\t\t\tstr = match[3];\n\t\t}\n\t\treturn ret + str;\n\t}\n\n\t// static method: makes a string safe for inclusion as a SketchEl field\n\tpublic static skEscape(str:string):string\n\t{\n\t\tlet ret = '';\n\t\tfor (let n = 0; n < str.length; n++)\n\t\t{\n\t\t\tlet ch = str.charAt(n), code = str.charCodeAt(n);\n\t\t\tif (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=')\n\t\t\t{\n\t\t\t\tlet hex = (code & 0xFFFF).toString(16).toUpperCase();\n\t\t\t\tret += '\\\\';\n\t\t\t\tfor (let i = 4 - hex.length; i > 0; i--) ret += '0';\n\t\t\t\tret += hex;\n\t\t\t}\n\t\t\telse ret += ch;\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// internal utility for writing SketchEl extra/transient content\n\tpublic static skEncodeExtra(extra:string[]):string\n\t{\n\t\tlet ret = '';\n\t\tfor (let n = 0; n < extra.length; n++) ret += ',' + MoleculeStream.skEscape(extra[n]);\n\t\treturn ret;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {safeInt} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\n\n/*\n\tBond artifacts: looks for metadata instructions that indicate that certain core bond types should be drawn in some way other than\n\tthe minimalistic bond primitives that are available in the core datastructure.\n\n\tTypes:\n\t\tResPath: a linear resonance pathway, where the bond order and total charge are depicted as a continuous average\n\t\tResRing: a ring pathway, where the bond order and total charge are circularly delocalised\n\t\tArene: an atom having a bond that protrudes into the centre of a group of resonance-delocalised atoms (usually a ring)\n\n\tThe atom orderings are guaranteed to be in a sensible order, i.e. path/ring traversal.\n*/\n\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\n\nexport interface BondArtifactResPath\n{\n\tatoms:number[]; // line of resonance-style bonding\n}\nexport interface BondArtifactResRing\n{\n\tatoms:number[]; // single ring of resonating bonds (ring can be any size)\n}\nexport interface BondArtifactArene\n{\n\tcentre:number; // atom to which the arene is bonded\n\tatoms:number[]; // ring (or partial ring) that is side-bonded\n}\n\nexport class BondArtifact\n{\n\tprivate resPaths = new Map<number, BondArtifactResPath>();\n\tprivate resRings = new Map<number, BondArtifactResRing>();\n\tprivate arenes = new Map<number, BondArtifactArene>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tfor (let str of this.mol.atomExtra(n))\n\t\t\t{\n\t\t\t\tif (str.startsWith(BONDARTIFACT_EXTRA_RESPATH)) this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_RESRING)) this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n\t\t\t\telse if (str.startsWith(BONDARTIFACT_EXTRA_ARENE)) this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n\t\t\t}\n\t\t}\n\n\t\t// clean each one up, or remove if invalid\n\t\tfor (let [blk, res] of this.resPaths.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (!this.pathify(res.atoms, false)) this.resPaths.delete(blk);\n\t\t}\n\t\tfor (let [blk, res] of this.resRings.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (!this.pathify(res.atoms, true)) this.resRings.delete(blk);\n\t\t}\n\t\tfor (let [blk, res] of this.arenes.entries())\n\t\t{\n\t\t\tres.atoms = this.pack(res.atoms);\n\t\t\tif (res.atoms.length > 1) res.centre = res.atoms.shift();\n\t\t\tif (!this.pathify(res.atoms, false)) this.arenes.delete(blk);\n\t\t}\n\t}\n\n\t// access to resulting content\n\tpublic getPathBlocks():number[] {return Array.from(this.resPaths.keys());}\n\tpublic getRingBlocks():number[] {return Array.from(this.resRings.keys());}\n\tpublic getAreneBlocks():number[] {return Array.from(this.arenes.keys());}\n\tpublic getResPaths():BondArtifactResPath[]\n\t{\n\t\t//return Array.from(this.resPaths.values());\n\t\tlet list:BondArtifactResPath[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.resPaths.keys()))) list.push(this.resPaths.get(key));\n\t\treturn list;\n\t}\n\tpublic getResRings():BondArtifactResRing[]\n\t{\n\t\t//return Array.from(this.resRings.values());\n\t\tlet list:BondArtifactResRing[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.resRings.keys()))) list.push(this.resRings.get(key));\n\t\treturn list;\n\t}\n\tpublic getArenes():BondArtifactArene[]\n\t{\n\t\t//return Array.from(this.arenes.values());\n\t\tlet list:BondArtifactArene[] = [];\n\t\tfor (let key of Vec.sorted(Array.from(this.arenes.keys()))) list.push(this.arenes.get(key));\n\t\treturn list;\n\t}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\tconst mol = this.mol;\n\n\t\t// delete everything\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n), modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n\t\t\t\t{\n\t\t\t\t\textra.splice(i);\n\t\t\t\t\tmodified = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\n\t\t// write back our datastructures\n\t\tfor (let [blk, path] of this.resPaths.entries())\n\t\t{\n\t\t\tfor (let n = 0; n < path.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet extra = mol.atomExtra(path.atoms[n]);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n\t\t\t\tmol.setAtomExtra(path.atoms[n], extra);\n\t\t\t}\n\t\t}\n\t\tfor (let [blk, ring] of this.resRings.entries())\n\t\t{\n\t\t\tfor (let n = 0; n < ring.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet extra = mol.atomExtra(ring.atoms[n]);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n\t\t\t\tmol.setAtomExtra(ring.atoms[n], extra);\n\t\t\t}\n\t\t}\n\t\tfor (let [blk, arene] of this.arenes.entries())\n\t\t{\n\t\t\tfor (let n = -1; n < arene.atoms.length; n++)\n\t\t\t{\n\t\t\t\tlet atom = n < 0 ? arene.centre : arene.atoms[n];\n\t\t\t\tlet extra = mol.atomExtra(atom);\n\t\t\t\textra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n\t\t\t\tmol.setAtomExtra(atom, extra);\n\t\t\t}\n\t\t}\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:BondArtifact):void\n\t{\n\t\tlet blocks = other.getPathBlocks();\n\t\tlet stashPaths = this.getResPaths();\n\t\tthis.resPaths.clear();\n\t\tfor (let path of stashPaths)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.resPaths.set(blk, path);\n\t\t\tblocks.push(blk);\n\t\t}\n\n\t\tblocks = other.getRingBlocks();\n\t\tlet stashRings = this.getResRings();\n\t\tthis.resRings.clear();\n\t\tfor (let ring of stashRings)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.resRings.set(blk, ring);\n\t\t\tblocks.push(blk);\n\t\t}\n\n\t\tblocks = other.getAreneBlocks();\n\t\tlet stashArenes = this.getArenes();\n\t\tthis.arenes.clear();\n\t\tfor (let arene of stashArenes)\n\t\t{\n\t\t\tlet blk = this.nextIdentifier(blocks);\n\t\t\tthis.arenes.set(blk, arene);\n\t\t\tblocks.push(blk);\n\t\t}\n\t}\n\n\t// creates a new path using the given atoms, or returns false if invalid\n\tpublic createPath(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet path = this.atomsAsPath(atoms);\n\t\tif (path)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n\t\t\tthis.resPaths.set(id, path);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// creates a new ring using the given atoms, or returns false if invalid\n\tpublic createRing(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet ring = this.atomsAsRing(atoms);\n\t\tif (ring)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.resRings.keys()));\n\t\t\tthis.resRings.set(id, ring);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// creates a new arene using the given atoms, or returns false if invalid\n\tpublic createArene(atoms:number[]):boolean\n\t{\n\t\tif (this.alreadyExists(atoms)) return false;\n\t\tlet arene = this.atomsAsArene(atoms);\n\t\tif (arene)\n\t\t{\n\t\t\tlet id = this.nextIdentifier(Array.from(this.arenes.keys()));\n\t\t\tthis.arenes.set(id, arene);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// removes one artifact as affected by the given atoms (selected by best overlap), or returns false if nothing removed\n\tpublic removeArtifact(atoms:number[]):boolean\n\t{\n\t\tlet type = 0, pick = 0, overlap = 0;\n\t\tfor (let [blk, path] of this.resPaths.entries())\n\t\t{\n\t\t\tlet count = 0;\n\t\t\tfor (let a of path.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 1; pick = blk; overlap = count;}\n\t\t}\n\t\tfor (let [blk, ring] of this.resRings.entries())\n\t\t{\n\t\t\tlet count = 0;\n\t\t\tfor (let a of ring.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 2; pick = blk; overlap = count;}\n\t\t}\n\t\tfor (let [blk, arene] of this.arenes.entries())\n\t\t{\n\t\t\tlet count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n\t\t\tfor (let a of arene.atoms) if (atoms.indexOf(a) >= 0) count++;\n\t\t\tif (count > overlap) {type = 3; pick = blk; overlap = count;}\n\t\t}\n\n\t\tif (type == 0) return false;\n\t\telse if (type == 1) this.resPaths.delete(pick);\n\t\telse if (type == 2) this.resRings.delete(pick);\n\t\telse if (type == 3) this.arenes.delete(pick);\n\t\treturn true;\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic static removeAll(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n\t\t\t\t\t!extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) continue;\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// handle a single atom being concatenated onto a putative instance\n\tprivate appendResPath(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.resPaths.get(blk);\n\t\tif (res == null) this.resPaths.set(blk, res = {atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\tprivate appendResRing(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.resRings.get(blk);\n\t\tif (res == null) this.resRings.set(blk, res = {atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\tprivate appendArene(atom:number, bits:string[]):void\n\t{\n\t\tlet blk = safeInt(bits[0], 0);\n\t\tif (blk <= 0) return;\n\n\t\tlet res = this.arenes.get(blk);\n\t\tif (res == null) this.arenes.set(blk, res = {centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms)});\n\n\t\tlet idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n\t\tif (res.atoms.indexOf(atom) >= 0) return;\n\t\tif (idx >= 1 && idx <= this.mol.numAtoms) res.atoms[idx - 1] = atom; else res.atoms.push(atom);\n\t}\n\n\t// condense an array by removing zero's\n\tprivate pack(arr:number[]):number[]\n\t{\n\t\tlet ret:number[] = [];\n\t\tfor (let v of arr) if (v != 0) ret.push(v);\n\t\treturn ret;\n\t}\n\n\t// takes an array of atom indices and makes sure it's a path of some sort; this may involve reordering the atoms; it must be possible to start at\n\t// some atom and walk along the path; the first atom has the lowest adjacency; the given order of the atoms will inform tiebreakers; if the method\n\t// returns true, then the atoms may be have been reordered\n\tprivate pathify(atoms:number[], requireRing:boolean):boolean\n\t{\n\t\tlet sz = atoms.length;\n\t\tif (sz < 2) return false;\n\n\t\tlet g = Graph.fromMolecule(this.mol);\n\t\tfor (let n = 0; n < this.mol.numAtoms; n++) g.setIndex(n, n + 1);\n\t\tg = g.subgraphIndex(Vec.add(atoms, -1));\n\t\tlet pos = 0;\n\t\tfor (let n = 1; n < sz; n++) if (g.numEdges(n) < g.numEdges(pos)) pos = n;\n\n\t\tVec.setTo(atoms, -1); // filling this with subgraph indices\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tatoms[n] = pos;\n\t\t\tif (n == sz - 1)\n\t\t\t{\n\t\t\t\tif (requireRing) if (g.getEdges(pos).indexOf(atoms[0]) < 0) return false; // must be joined\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet next = sz;\n\t\t\t\tfor (let i of g.getEdges(pos)) if (atoms.indexOf(i) < 0 && i < next) next = i;\n\t\t\t\tif (next == sz) return false; // bad\n\t\t\t\tpos = next;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < sz; n++) atoms[n] = g.getIndex(atoms[n]);\n\t\treturn true;\n\t}\n\n\t// check to see if a set of atoms exists already as an artifact\n\tprivate alreadyExists(atoms:number[]):boolean\n\t{\n\t\tatoms = Vec.sorted(atoms);\n\t\tfor (let path of this.resPaths.values())\n\t\t{\n\t\t\tif (Vec.equals(atoms, Vec.sorted(path.atoms))) return true;\n\t\t}\n\t\tfor (let ring of this.resRings.values())\n\t\t{\n\t\t\tif (Vec.equals(atoms, Vec.sorted(ring.atoms))) return true;\n\t\t}\n\t\tfor (let arene of this.arenes.values())\n\t\t{\n\t\t\tlet areneAtoms = Vec.append(arene.atoms, arene.centre);\n\t\t\tif (Vec.equals(atoms, Vec.sorted(areneAtoms))) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// make a list of atoms (arbitrary order) into an artifact of the given type\n\tprivate atomsAsPath(atoms:number[]):BondArtifactResPath\n\t{\n\t\tif (atoms.length < 2) return null;\n\t\tlet path:BondArtifactResPath = {atoms: atoms};\n\t\tif (!this.pathify(path.atoms, false)) return null;\n\t\treturn path;\n\t}\n\tprivate atomsAsRing(atoms:number[]):BondArtifactResRing\n\t{\n\t\tif (atoms.length < 3) return null;\n\t\tlet ring:BondArtifactResRing = {atoms: atoms};\n\t\tif (!this.pathify(ring.atoms, true)) return null;\n\t\treturn ring;\n\t}\n\tprivate atomsAsArene(atoms:number[]):BondArtifactArene\n\t{\n\t\tconst sz = atoms.length;\n\t\tif (sz < 3) return null;\n\n\t\tlet g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n\t\tlet best = 0;\n\t\tif (sz == 3)\n\t\t{\n\t\t\t// if just 3 atoms, it must be a ring, and we pick the one with the lowest bond order sum\n\t\t\tlet bsum = [0, 0, 0];\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tif (g.numEdges(n) != 2) return null;\n\t\t\t\tfor (let e of g.getEdges(n)) bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n\t\t\t\tbest = Vec.idxMin(bsum);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// the \"centre\" (aka metal) is the one with the highest adjacency within the subgraph\n\t\t\tfor (let n = 1; n < sz; n++) if (g.numEdges(n) > g.numEdges(best)) best = n;\n\t\t}\n\n\t\tlet arene:BondArtifactArene = {centre: atoms[best], atoms: Vec.remove(atoms, best)};\n\t\tif (!this.pathify(arene.atoms, false)) return null;\n\t\treturn arene;\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(inkeys:number[]):number\n\t{\n\t\tif (inkeys.length == 0) return 1;\n\t\tlet keys = Vec.sorted(inkeys);\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing, no-multi-spaces */\n/* eslint-disable @typescript-eslint/naming-convention */\n\nexport class Chemistry\n{\n\t// NOTE: the value of ELEMENTS.length is the number of elements supported by MMTk; all atom number indices should be between\n\t// 1 and this range, or 0 to represent an entity which is not a single specific element\n\n\tpublic static ELEMENTS =\n\t[\n\t\tnull,\n\t\t'H',                                                                                 'He',\n\t\t'Li','Be',                                                  'B', 'C', 'N', 'O', 'F', 'Ne',\n\t\t'Na','Mg',                                                  'Al','Si','P', 'S', 'Cl','Ar',\n\t\t'K', 'Ca','Sc','Ti','V' ,'Cr','Mn','Fe','Co','Ni','Cu','Zn','Ga','Ge','As','Se','Br','Kr',\n\t\t'Rb','Sr','Y', 'Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd','In','Sn','Sb','Te','I', 'Xe',\n\t\t'Cs','Ba',\n\t\t\t\t'La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb',\n\t\t\t\t\t 'Lu','Hf','Ta','W', 'Re','Os','Ir','Pt','Au','Hg','Tl','Pb','Bi','Po','At','Rn',\n\t\t'Fr','Ra',\n\t\t\t\t'Ac','Th','Pa','U', 'Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No',\n\t\t\t\t\t 'Lr','Rf','Db','Sg','Bh','Hs','Mt','Ds','Rg','Cn'\n\t];\n\n\t// which group of the periodic table each element belongs to, where the lanthanoids & actanoids are group III\n\tpublic static ELEMENT_GROUPS =\n\t[\n\t\t0,\n\t\t1,                                        18,\n\t\t1,2,                       13,14,15,16,17,18,\n\t\t1,2,                       13,14,15,16,17,18,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,\n\t\t\t\t\t\t3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n\t\t\t3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t\t1,2,\n\t\t\t\t\t\t3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// which row of the periodic table each element belongs to, where lanthanoids & actanoids take their parent row\n\tpublic static ELEMENT_ROWS =\n\t[\n\t\t0,\n\t\t1,                                1,\n\t\t2,2,                    2,2,2,2,2,2,\n\t\t3,3,                    3,3,3,3,3,3,\n\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\t\t6,6,\n\t\t\t\t\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t\t7,7,\n\t\t\t\t\t\t7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n\t\t\t7,7,7,7,7,7,7,7,7,7\n\t];\n\n\t// which block of the periodic table each element belongs to, where 1=s-block, 2=p-block, 3=d-block, 4=f-block\n\tpublic static ELEMENT_BLOCKS =\n\t[\n\t\t0,\n\t\t1,                                2,\n\t\t1,1,                    2,2,2,2,2,2,\n\t\t1,1,                    2,2,2,2,2,2,\n\t\t1,1,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,3,3,3,3,3,3,3,3,3\n\t];\n\n\t// the number of 'valence' electrons possessed by an individual uncharged atom\n\tpublic static ELEMENT_VALENCE =\n\t[\n\t\t0,\n\t\t1,                                   2,\n\t\t1,2,                       3,4,5,6,7,8,\n\t\t1,2,                       3,4,5,6,7,8,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,2,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// the number of valence electrons typically involved in bonding, i.e. ELEMENT_VALENCE minus\n\t// the electrons dedicated to lone pairs; the concept is only really valid for main blocks\n\tpublic static ELEMENT_BONDING =\n\t[\n\t\t0,\n\t\t1,                                   0,\n\t\t1,2,                       3,4,3,2,1,0,\n\t\t1,2,                       3,4,3,2,1,0,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,2,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12,3,4,3,2,1,0,\n\t\t1,1,\n\t\t\t\t\t\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t\t\t3,4,5,6,7,8,9,10,11,12\n\t];\n\n\t// the total number of 'valence' electrons required to make up a full 'valence shell'\n\tpublic static ELEMENT_SHELL =\n\t[\n\t\t0,\n\t\t2,                                          2,\n\t\t8,8,                              8,8,8,8,8,8,\n\t\t8,8,                              8,8,8,8,8,8,\n\t\t8,8,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,\n\t\t8,8,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,\n\t\t8,8,\n\t\t\t\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t8,8,\n\t\t\t\t\t\t18,18,18,18,18,18,18,18,18,18,18,18,18,18,\n\t\t\t18,18,18,18,18,18,18,18,18,18\n\t];\n\n\tpublic static NATURAL_ATOMIC_WEIGHTS =\n\t[\n\t\t0,1.00794,4.002602,6.941,9.012182,10.811,12.0107,14.0067,15.9994,18.9984032,20.1797,\n\t\t22.989770,24.3050,26.981538,28.0855,30.973761,32.065,35.453,39.948,39.0983,40.078,\n\t\t44.955910,47.867,50.9415,51.9961,54.938049,55.845,58.933200,58.6934,63.546,65.409,\n\t\t69.723,72.64,74.92160,78.96,79.904,83.798,85.4678,87.62,88.90585,91.224,92.90638,\n\t\t95.94,98,101.07,102.90550,106.42,107.8682,112.411,114.818,118.710,121.760,127.60,\n\t\t126.90447,131.293,132.90545,137.327,138.9055,140.116,140.90765,144.24,145,150.36,\n\t\t151.964,157.25,158.92534,162.500,164.93032,167.259,168.93421,173.04,174.967,178.49,\n\t\t180.9479,183.84,186.207,190.23,192.217,195.078,196.96655,200.59,204.3833,207.2,208.98038,\n\t\t209,210,222,223,226,227,230.0331266,231.03588,233.039628,237,244,243,247,247,251,252,257,\n\t\t258,259,262,261,262,266,264,277,268,271,272,285\n\t];\n\n\t// readable constants for elements\n\tpublic static ELEMENT_H = 1;\n\tpublic static ELEMENT_He = 2;\n\tpublic static ELEMENT_Li = 3;\n\tpublic static ELEMENT_Be = 4;\n\tpublic static ELEMENT_B = 5;\n\tpublic static ELEMENT_C = 6;\n\tpublic static ELEMENT_N = 7;\n\tpublic static ELEMENT_O = 8;\n\tpublic static ELEMENT_F = 9;\n\tpublic static ELEMENT_Ne = 10;\n\tpublic static ELEMENT_Na = 11;\n\tpublic static ELEMENT_Mg = 12;\n\tpublic static ELEMENT_Al = 13;\n\tpublic static ELEMENT_Si = 14;\n\tpublic static ELEMENT_P = 15;\n\tpublic static ELEMENT_S = 16;\n\tpublic static ELEMENT_Cl = 17;\n\tpublic static ELEMENT_Ar = 18;\n\tpublic static ELEMENT_K = 19;\n\tpublic static ELEMENT_Ca = 20;\n\tpublic static ELEMENT_Sc = 21;\n\tpublic static ELEMENT_Ti = 22;\n\tpublic static ELEMENT_V = 23;\n\tpublic static ELEMENT_Cr = 24;\n\tpublic static ELEMENT_Mn = 25;\n\tpublic static ELEMENT_Fe = 26;\n\tpublic static ELEMENT_Co = 27;\n\tpublic static ELEMENT_Ni = 28;\n\tpublic static ELEMENT_Cu = 29;\n\tpublic static ELEMENT_Zn = 30;\n\tpublic static ELEMENT_Ga = 31;\n\tpublic static ELEMENT_Ge = 32;\n\tpublic static ELEMENT_As = 33;\n\tpublic static ELEMENT_Se = 34;\n\tpublic static ELEMENT_Br = 35;\n\tpublic static ELEMENT_Kr = 36;\n\tpublic static ELEMENT_Rb = 37;\n\tpublic static ELEMENT_Sr = 38;\n\tpublic static ELEMENT_Y = 39;\n\tpublic static ELEMENT_Zr = 40;\n\tpublic static ELEMENT_Nb = 41;\n\tpublic static ELEMENT_Mo = 42;\n\tpublic static ELEMENT_Tc = 43;\n\tpublic static ELEMENT_Ru = 44;\n\tpublic static ELEMENT_Rh = 45;\n\tpublic static ELEMENT_Pd = 46;\n\tpublic static ELEMENT_Ag = 47;\n\tpublic static ELEMENT_Cd = 48;\n\tpublic static ELEMENT_In = 49;\n\tpublic static ELEMENT_Sn = 50;\n\tpublic static ELEMENT_Sb = 51;\n\tpublic static ELEMENT_Te = 52;\n\tpublic static ELEMENT_I = 53;\n\tpublic static ELEMENT_Xe = 54;\n\tpublic static ELEMENT_Cs = 55;\n\tpublic static ELEMENT_Ba = 56;\n\tpublic static ELEMENT_La = 57;\n\tpublic static ELEMENT_Ce = 58;\n\tpublic static ELEMENT_Pr = 59;\n\tpublic static ELEMENT_Nd = 60;\n\tpublic static ELEMENT_Pm = 61;\n\tpublic static ELEMENT_Sm = 62;\n\tpublic static ELEMENT_Eu = 63;\n\tpublic static ELEMENT_Gd = 64;\n\tpublic static ELEMENT_Tb = 65;\n\tpublic static ELEMENT_Dy = 66;\n\tpublic static ELEMENT_Ho = 67;\n\tpublic static ELEMENT_Er = 68;\n\tpublic static ELEMENT_Tm = 69;\n\tpublic static ELEMENT_Yb = 70;\n\tpublic static ELEMENT_Lu = 71;\n\tpublic static ELEMENT_Hf = 72;\n\tpublic static ELEMENT_Ta = 73;\n\tpublic static ELEMENT_W = 74;\n\tpublic static ELEMENT_Re = 75;\n\tpublic static ELEMENT_Os = 76;\n\tpublic static ELEMENT_Ir = 77;\n\tpublic static ELEMENT_Pt = 78;\n\tpublic static ELEMENT_Au = 79;\n\tpublic static ELEMENT_Hg = 80;\n\tpublic static ELEMENT_Tl = 81;\n\tpublic static ELEMENT_Pb = 82;\n\tpublic static ELEMENT_Bi = 83;\n\tpublic static ELEMENT_Po = 84;\n\tpublic static ELEMENT_At = 85;\n\tpublic static ELEMENT_Rn = 86;\n\tpublic static ELEMENT_Fr = 87;\n\tpublic static ELEMENT_Ra = 88;\n\tpublic static ELEMENT_Ac = 89;\n\tpublic static ELEMENT_Th = 90;\n\tpublic static ELEMENT_Pa = 91;\n\tpublic static ELEMENT_U = 92;\n\tpublic static ELEMENT_Np = 93;\n\tpublic static ELEMENT_Pu = 94;\n\tpublic static ELEMENT_Am = 95;\n\tpublic static ELEMENT_Cm = 96;\n\tpublic static ELEMENT_Bk = 97;\n\tpublic static ELEMENT_Cf = 98;\n\tpublic static ELEMENT_Es = 99;\n\tpublic static ELEMENT_Fm = 100;\n\tpublic static ELEMENT_Md = 101;\n\tpublic static ELEMENT_No = 102;\n\tpublic static ELEMENT_Lr = 103;\n\tpublic static ELEMENT_Rf = 104;\n\tpublic static ELEMENT_Db = 105;\n\tpublic static ELEMENT_Sg = 106;\n\tpublic static ELEMENT_Bh = 107;\n\tpublic static ELEMENT_Hs = 108;\n\tpublic static ELEMENT_Mt = 109;\n\tpublic static ELEMENT_Ds = 110;\n\tpublic static ELEMENT_Rg = 111;\n\tpublic static ELEMENT_Cn = 112;\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tLow level utility functions for the manipulation of molecular coordinates. These functions are fairly\n\tutilitarian, and don't have a lot of chemical logic encoded within them.\n\n\tDistinguished from SketchUtil in that these methods do not make chemistry-based \"value judgments\", they just\n\tstick to the numbers and do what they're told.\n*/\n\nexport class CoordUtil\n{\n\tpublic static OVERLAP_THRESHOLD = 0.2;// atoms closer than this are \"overlapping\" (i.e. this is bad)\n\tpublic static OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\n\n\t// goes hunting for an atom close to the specified position; returns 0 if none\n\tpublic static atomAtPoint(mol:Molecule, x:number, y:number, tolerance?:number):number\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.OVERLAP_THRESHOLD;\n\t\tconst tolsq = tolerance * tolerance;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq) return n;\n\t\treturn 0;\n\t}\n\n\t// returns true of the two molecules are \"the same sketch\"; this means that for every atom in mol1, there is an atom in\n\t// mol2 at the same absolute (x,y) coordinate, with the exact same properties, and an equivalent bonding scheme; so basically\n\t// the atom and bond ordering can be different, but not much else\n\n\tprivate static DEFAULT_EQUIV_TOLERANCE = 0.2;\n\n\tpublic static sketchEquivalent(mol1:Molecule, mol2:Molecule, tolerance?:number):boolean\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n\n\t\tconst na = mol1.numAtoms, nb = mol1.numBonds;\n\t\tif (na != mol2.numAtoms || nb != mol2.numBonds) return false;\n\n\t\tconst tolsq = tolerance * tolerance;\n\n\t\t// an early-out scheme: if the min/max positions are different, we can bug out straight away; doesn't help when they've been\n\t\t// modified in the middle of the drawing, but it's a big gain\n\t\tlet box1 = mol1.boundary(), box2 = mol2.boundary();\n\t\tif (Math.abs(box1.minX() - box2.minX()) > tolerance) return false;\n\t\tif (Math.abs(box1.minY() - box2.minY()) > tolerance) return false;\n\t\tif (Math.abs(box1.maxX() - box2.maxX()) > tolerance) return false;\n\t\tif (Math.abs(box1.maxY() - box2.maxY()) > tolerance) return false;\n\n\t\tlet mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n\t\tlet mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n\n\t\t// find an atom mapping scheme based on proximity; any mapping failure results in early termination\n\t\t// NOTE: this is O(N^2); could be linearised by sorting by major/minor axis\n\t\tlet map = Vec.numberArray(0, na);\n\t\tlet mask = Vec.booleanArray(false, na);\n\n\t\tfor (let i = 0; i < na; i++)\n\t\t{\n\t\t\t// find the closest matching atom; start with a special trick: frequently the corresponding atom is at exactly the\n\t\t\t// same index (because of the types of operations which precede this method call); if it is real close, then just go with it\n\t\t\tlet j = -1;\n\t\t\tif (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq) j = i;\n\n\t\t\t// if that didn't work, then scan through the unmatched possibilities\n\t\t\tif (j < 0)\n\t\t\t{\n\t\t\t\tlet bestdsq = Number.MAX_VALUE;\n\t\t\t\tfor (let n = 0; n < na; n++) if (!mask[n])\n\t\t\t\t{\n\t\t\t\t\tlet dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n\t\t\t\t\tif (dsq < bestdsq) {bestdsq = dsq; j = n;}\n\t\t\t\t}\n\t\t\t\tif (j < 0 || bestdsq > tolsq) return false;\n\t\t\t}\n\n\t\t\tmap[i] = j + 1;\n\t\t\tmask[j] = true;\n\n\t\t\t// while we're here, make sure the atoms have the same properties\n\t\t\tif (mol1.atomElement(i + 1) != mol2.atomElement(j + 1)) return false;\n\t\t\tif (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1)) return false;\n\t\t\tif (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1)) return false;\n\t\t\tif (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n\t\t\t\tmol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n\t\t\t\tmol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN) return false;\n\t\t}\n\n\t\t// now that we have the mapping, make sure the bonds are also equivalent\n\t\t// NOTE: this is O(N), because Molecule.findBond(..) is O(1)\n\t\tfor (let i = 1; i <= nb; i++)\n\t\t{\n\t\t\tlet i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n\t\t\tlet j = mol2.findBond(j1, j2);\n\n\t\t\tif (j == 0) return false;\n\n\t\t\tif (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j)) return false;\n\n\t\t\tif (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) {} // same\n\t\t\telse if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n\t\t\t\t\tmol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n\t\t\t\t\tmol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) {} // reversed is OK\n\t\t\telse return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// similar to sketchEquivalent(..) above, except this version will translate the coordinates so that they overlay on top of\n\t// each other\n\t// NOTE: the overlay method is trivial; if the coordinates are collectively different enough to blow the tolerance unless\n\t// the overlay is jiggled around a bit, this method can return a false negative\n\tpublic static sketchMappable(mol1:Molecule, mol2:Molecule, tolerance?:number):boolean\n\t{\n\t\tif (tolerance == null) tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n\n\t\tlet box1 = mol1.boundary(), box2 = mol2.boundary();\n\t\tlet dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n\t\tif (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1)\n\t\t{\n\t\t\tmol2 = mol2.clone();\n\t\t\tfor (let n = 1; n <= mol2.numAtoms; n++) mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n\t\t}\n\n\t\treturn CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n\t}\n\n\t// returns a list of the angles of the bonds emanating from the given atom; the order of the angles returned is guaranteed to\n\t// correspond to the order found in mol.atomAdjList(N)\n\tpublic static atomBondAngles(mol:Molecule, atom:number, adj?:number[]):number[]\n\t{\n\t\tif (adj == null) adj = mol.atomAdjList(atom);\n\t\tlet bndang:number[] = [];\n\t\tlet cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tfor (let a of adj) bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n\t\treturn bndang;\n\t}\n\n\t// returns true if the indicated position happens to be on top of an atom, within the given radial tolerance\n\tpublic static overlapsAtom(mol:Molecule, x:number, y:number, tol:number):boolean\n\t{\n\t\tconst tolsq = tol * tol;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq) return true;\n\t\treturn false;\n\t}\n\n\t// returns a list of all the atoms which are considered to be \"overlapping\"; because this is O(N^2) and typically called during\n\t// screen updates, it is somewhat optimised\n\tpublic static overlappingAtomMask(mol:Molecule, thresh?:number):boolean[]\n\t{\n\t\tif (thresh == null) thresh = CoordUtil.OVERLAP_THRESHOLD;\n\n\t\tconst sz = mol.numAtoms;\n\t\tlet box = mol.boundary();\n\t\tlet p1:number[], p2:number[];\n\t\tif (box.w > box.h)\n\t\t{\n\t\t\tp1 = MolUtil.arrayAtomX(mol);\n\t\t\tp2 = MolUtil.arrayAtomY(mol);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp1 = MolUtil.arrayAtomY(mol);\n\t\t\tp2 = MolUtil.arrayAtomX(mol);\n\t\t}\n\n\t\tlet omask = Vec.booleanArray(false, sz);\n\t\tlet idx = Vec.idxSort(p1);\n\t\tconst threshSQ = thresh * thresh;\n\t\tfor (let i = 1; i < sz - 1; i++)\n\t\t{\n\t\t\tfor (let j = i - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tlet d1 = p1[idx[i]] - p1[idx[j]];\n\t\t\t\tif (d1 > thresh) break;\n\t\t\t\tif (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {omask[idx[i]] = true; omask[idx[j]] = true;}\n\t\t\t}\n\t\t\tfor (let j = i + 1; j < sz; j++)\n\t\t\t{\n\t\t\t\tlet d1 = p1[idx[j]] - p1[idx[i]];\n\t\t\t\tif (d1 > thresh) break;\n\t\t\t\tif (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {omask[idx[i]] = true; omask[idx[j]] = true;}\n\t\t\t}\n\t\t}\n\n\t\treturn omask;\n\t}\n\tpublic static overlappingAtomList(mol:Molecule, thresh?:number):number[]\n\t{\n\t\tif (thresh == null) thresh = CoordUtil.OVERLAP_THRESHOLD;\n\t\treturn Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n\t}\n\n\t// for the given position, returns a measure of how congested it is, based on the sum of the reciprocal square of distances\n\t// to each of the atoms; the 'approach' parameter is the minimum distance, so 1/approach is hence the maximum score;\n\t// higher values mean more congested; approach should always be >0; lower numbers mean less congested\n\tpublic static congestionPoint(mol:Molecule, x:number, y:number, approach?:number):number\n\t{\n\t\tif (approach == null) approach = 1E-5;\n\t\tlet score = 0;\n\t\tlet na = mol.numAtoms;\n\t\tfor (let n = 1; n <= na; n++)\n\t\t\tscore += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n\t\treturn score;\n\t}\n\n\t// returns congestion calculated for the whole molecule (or rather, sum(i,j) where i<j); 'approach' works like above;\n\t// higher values mean more congested\n\tpublic static congestionMolecule(mol:Molecule, approach?:number):number\n\t{\n\t\tif (approach == null) approach = 1E-5;\n\t\tlet score = 0;\n\t\tconst na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\t\tfor (let i = 0; i < na - 1; i++) for (let j = i + 1; j < na; j++)\n\t\t\tscore += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n\t\treturn score;\n\t}\n\n\t// translates all atoms in the molecule by the indicated amount\n\tpublic static translateMolecule(mol:Molecule, ox:number, oy:number):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n\t}\n\n\t// rotates the molecule about geographic centre\n\tpublic static rotateMolecule(mol:Molecule, theta:number, cx?:number, cy?:number):void\n\t{\n\t\tif (cx == null || cy == null)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = box.midX();\n\t\t\tcy = box.midY();\n\t\t}\n\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// with atom C as the central point, rotates the substituent\n\tpublic static rotateBond(mol:Molecule, centre:number, atom:number, theta:number):void\n\t{\n\t\ttheta = angleNorm(theta);\n\t\tif (Math.abs(theta) < 0.1 * DEGRAD) return;\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.isolateNode(centre - 1);\n\t\tlet cc = g.calculateComponents();\n\n\t\tlet cx = mol.atomX(centre), cy = mol.atomY(centre);\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (cc[n - 1] == cc[atom - 1])\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// rotates only the atoms specified by the mask, by theta about the central point (cx,cy)\n\tpublic static rotateAtoms(mol:Molecule, mask:boolean[], cx:number, cy:number, theta:number):void\n\t{\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n\t\t\tmol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\t}\n\n\t// considers the adjacency list for an atom, and returns a form of the list in a sequence suitable for representing interior\n\t// angles; null means no angles; for those with two neighbours, returns them ordered such that ang(1)..ang(2) is the\n\t// interior angle; if 3 or more neighbours, orders them so that ang(N)..ang(N+1) has no other angles _between_ them\n\tpublic static angleNeighbours(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tif (adj.length <= 1) return null;\n\t\tlet th:number[] = [];\n\t\tfor (let n = 0; n < adj.length; n++) th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n\n\t\tif (adj.length == 2)\n\t\t{\n\t\t\tif (angleDiff(th[1], th[0]) > 0) return adj;\n\t\t\treturn [adj[1], adj[0]];\n\t\t}\n\n\t\tlet idx = Vec.idxSort(th);\n\t\treturn Vec.idxGet(adj, idx);\n\t}\n\n\t// assimilates two atoms together; the \"old\" atom has its bonds reassigned to the \"new\" atom, then gets deleted\n\tpublic static mergeAtoms(mol:Molecule, oldN:number, newN:number):void\n\t{\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t}\n\t\tmol.deleteAtomAndBonds(oldN);\n\t}\n\n\t// runs through the molecule to see if the median bond distance is reasonably close to the ideal bond length, and if so, leaves\n\t// it alone; if not, everything gets rescaled; this is particularly useful when importing, because not all formats use quasi-\n\t// realistic Angstrom-like units\n\tpublic static normaliseBondDistances(mol:Molecule):void\n\t{\n\t\tconst nb = mol.numBonds;\n\t\tif (nb == 0) return;\n\n\t\tlet dsq:number[] = [];\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tdsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n\t\t}\n\t\tVec.sort(dsq);\n\t\tlet median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n\t\tif (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1)) return;\n\n\t\tlet box = mol.boundary();\n\t\tlet cx = box.midX(), cy = box.midY();\n\t\tlet scale = Molecule.IDEALBOND / median;\n\t\tfor (let n = mol.numAtoms; n >= 1; n--)\n\t\t{\n\t\t\tlet x = (mol.atomX(n) - cx) * scale + cx;\n\t\t\tlet y = (mol.atomY(n) - cy) * scale + cy;\n\t\t\tmol.setAtomPos(n, x, y);\n\t\t}\n\t}\n\n\t// recalibrates the molecule so that the coordinates are somewhere near the origin\n\tpublic static centreMolecule(mol:Molecule):void\n\t{\n\t\tif (MolUtil.isBlank(mol)) return;\n\t\t\n\t\tlet x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n\t\tlet sz = x.length;\n\t\tlet invsz = 1.0 / sz;\n\t\tlet meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n\t\tlet closest = Number.POSITIVE_INFINITY;\n\t\tlet deltaX = 0, deltaY = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n\t\t\tif (dsq < closest)\n\t\t\t{\n\t\t\t\tdeltaX = -x[n];\n\t\t\t\tdeltaY = -y[n];\n\t\t\t\tclosest = dsq;\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sz; n++) mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n\t}\n\n\t// returns an inverted version of the molecule, by switching one axis (X); if there are any inclined/declined bonds, they are\n\t// also inverted\n\tpublic static mirrorImage(mol:Molecule):Molecule\n\t{\n\t\tmol = mol.clone();\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) mol.setAtomX(n, -mol.atomX(n));\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_DECLINED) mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\telse if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED) mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t}\n\n\t\treturn mol;\n\t}\n\n\t// given two molecules (mol1,mol2), and a mapping between them, performs a specialised superimposition: the first\n\t// index:index mapping is the translation reference point, so mol2 is moved; then a rotation/flip operation is determined,\n\t// based on the directional orientation of the remaining mapping substituents; if the molecule is flipped, the wedge bonds\n\t// will all be inverted\n\t// NOTE: the mol2 parameter is modified, and contains the results of the operation\n\tpublic static alignOrientFlip(mol1:Molecule, idx1:number[], mol2:Molecule, idx2:number[]):void\n\t{\n\t\tif (idx1.length < 2 || idx1.length != idx2.length) throw 'Invalid mapping indices.';\n\n\t\tlet x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n\n\t\tCoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n\t\tconst sz = idx1.length - 1;\n\n\t\tlet th1:number[] = [], th2:number[] = [];\n\t\tlet deltaA = 0, deltaB = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tth1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n\t\t\tth2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n\t\t\tlet dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n\n\t\t\t// correction to avoid cancellation, e.g. (180-180) === (180+180)\n\t\t\tif (dthA < -175 * DEGRAD && deltaA > 0) dthA += TWOPI;\n\t\t\telse if (dthA > 175 * DEGRAD && deltaA < 0) dthA -= TWOPI;\n\t\t\tif (dthB < -175 * DEGRAD && deltaB > 0) dthB += TWOPI;\n\t\t\telse if (dthB > 175 * DEGRAD && deltaB < 0) dthB -= TWOPI;\n\n\t\t\tdeltaA += dthA;\n\t\t\tdeltaB += dthB;\n\t\t}\n\t\tif (sz > 1) {let inv = 1.0 / sz; deltaA *= inv; deltaB *= inv;}\n\t\tlet scoreA = 0, scoreB = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tscoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n\t\t\tscoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n\t\t}\n\t\tif (scoreB < scoreA)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol2.numAtoms; n++) mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n\t\t\tfor (let n = 1; n <= mol2.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED) mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\telse if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED) mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t}\n\t\t\tCoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n\t\t}\n\t\telse CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n\t}\n\n\t// returns true if the atom has two neighbours at almost 180 degree separation, such that it is a bit on the unusual side, and\n\t// should have its carbon atoms drawn explicitly\n\tpublic static atomIsWeirdLinear(mol:Molecule, idx:number):boolean\n\t{\n\t\tlet bonds = mol.atomAdjBonds(idx);\n\t\tif (bonds.length != 2) return false;\n\t\tfor (let n = 0; n < bonds.length; n++) if (mol.bondOrder(bonds[n]) == 3) return false; // triple bonds don't trigger this\n\n\t\tlet adj = mol.atomAdjList(idx);\n\t\tlet th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n\t\tlet th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n\t\treturn Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {fltEqual} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {ForeignMoleculeTransient} from './ForeignMolecule';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\n\n/* eslint-disable no-multi-spaces */\n\n/*\n\tA meta-description of a molecule that divides the molecular graph up into chunks based on their\n\tability to provide pi-like resonance electrons. Atoms that are deemed to be invariant to the passage\n\tof resonance electrons (most notably sp3 carbons) are considered to break up these pathways. The\n\tremaining components-of-resonance are assigned bond orders based on the ratio of electrons to # bonds.\n*/\n\nexport interface DotPathBlock\n{\n\tatoms:number[];\n\tbonds:number[];\n\t// (average bond order = numer/denom)\n\tnumer:number; // # of electrons contributed to the block\n\tdenom:number; // 2 * number of bonds\n}\n\n// discrete bond type categories (these collapse the fractional bond orders)\nexport const enum DotPathBond\n{\n\tO0 = 0, // exactly zero\n\tO01 = 1, // from 0..1 (exclusive)\n\tO1 = 2, // exactly one\n\tO12 = 3, // from 1..2 (exclusive)\n\tO2 = 4, // exactly two\n\tO23 = 5, // from 2..3 (exclusive)\n\tO3 = 6, // exactly three\n\tO3X = 7, // more than three\n}\n\n// discrete charge type categories (these collapse fractional charges)\nexport const enum DotPathCharge\n{\n\tN1X = -3, // less than -1\n\tN1 = -2, // exactly -1\n\tN01 = -1, // a bit less than zero\n\tZ0 = 0, // exactly zero\n\tP01 = 1, // a bit more than zero\n\tP1 = 2, // exactly +1\n\tP1X = 3, // more than +1\n}\n\nexport class DotPath\n{\n\tpublic maskBlock:boolean[]; // atoms that are considered blocking; generally not important for interpretation\n\tpublic paths:DotPathBlock[] = []; // the blocks of dots: note that only bonds that have a different bond order under the dot-scheme are listed\n\n\t// ------------------ public methods --------------------\n\n\t// instantiates the DotPath content right away, unless the molecule argument is null\n\tconstructor(public mol:Molecule)\n\t{\n\t\tif (mol) this.calculate();\n\t}\n\n\t// shallow clone\n\tpublic clone():DotPath\n\t{\n\t\tlet dup = new DotPath(null);\n\t\tdup.mol = this.mol;\n\t\tdup.maskBlock = this.maskBlock;\n\t\tdup.paths = this.paths.slice(0);\n\t\treturn dup;\n\t}\n\n\t// returns recomputed bond orders: any atom that's part of a dot-path gets assigned with a fractional bond order based on\n\t// the path characteristics, while the rest of them get their original integral bond order\n\tpublic getBondOrders():number[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet orders:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) orders.push(mol.bondOrder(n));\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\t// compute fractional bond order, and guard against rounding errors (i.e. want literal whole numbers when appropriate)\n\t\t\tlet fract = path.numer / path.denom;\n\t\t\tfor (let n = 1; n <= 5; n++) if (fltEqual(fract, n)) fract = n;\n\t\t\tfor (let b of path.bonds) orders[b - 1] = fract;\n\t\t}\n\t\treturn orders;\n\t}\n\n\t// as above, except returns the bond orders as predetermined bins, corresponding to ordinals and intermediates\n\tpublic getBondClasses():DotPathBond[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet classes:DotPathBond[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bo = mol.bondOrder(n);\n\t\t\tclasses.push(bo == 0 ? DotPathBond.O0 :\n\t\t\t\t\t\t bo == 1 ? DotPathBond.O1 :\n\t\t\t\t\t\t bo == 2 ? DotPathBond.O2 :\n\t\t\t\t\t\t bo == 3 ? DotPathBond.O3 : DotPathBond.O3X);\n\t\t}\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\t// compute fractional bond order, and guard against rounding errors (i.e. want literal whole numbers when appropriate)\n\t\t\tlet fract = path.numer / path.denom;\n\t\t\tlet bcls = fltEqual(fract, 0) ? DotPathBond.O0 :\n\t\t\t\t\t   fltEqual(fract, 1) ? DotPathBond.O1 :\n\t\t\t\t\t   fltEqual(fract, 2) ? DotPathBond.O2 :\n\t\t\t\t\t   fltEqual(fract, 3) ? DotPathBond.O3 :\n\t\t\t\t\t   fract < 1 ? DotPathBond.O01 :\n\t\t\t\t\t   fract < 2 ? DotPathBond.O12 :\n\t\t\t\t\t   fract < 3 ? DotPathBond.O23 : DotPathBond.O3X;\n\t\t\tfor (let b of path.bonds) classes[b - 1] = bcls;\n\t\t}\n\t\treturn classes;\n\t}\n\n\t// return one of the categories of fractional charges\n\tpublic getChargeClasses():DotPathCharge[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet classes:DotPathCharge[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet chg = mol.atomCharge(n);\n\t\t\tclasses.push(chg == 0 ? DotPathCharge.Z0 :\n\t\t\t\t\t\t chg == -1 ? DotPathCharge.N1 :\n\t\t\t\t\t\t chg == 1 ? DotPathCharge.P1 :\n\t\t\t\t\t\t chg < -1 ? DotPathCharge.N1X : DotPathCharge.P1X);\n\t\t}\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\tlet chg = 0;\n\t\t\tfor (let a of path.atoms) chg += mol.atomCharge(a);\n\t\t\tchg /= path.atoms.length;\n\t\t\tlet ccls = fltEqual(chg, 0) ? DotPathCharge.Z0 :\n\t\t\t\t\t   fltEqual(chg, -1) ? DotPathCharge.N1 :\n\t\t\t\t\t   fltEqual(chg, 1) ? DotPathCharge.P1 :\n\t\t\t\t\t   chg > -1 && chg < 0 ? DotPathCharge.N01 :\n\t\t\t\t\t   chg > 0 && chg < 1 ? DotPathCharge.P01 :\n\t\t\t\t\t   chg < -1 ? DotPathCharge.N1X : DotPathCharge.P1X;\n\t\t\tfor (let a of path.atoms) classes[a - 1] = ccls;\n\t\t}\n\t\treturn classes;\n\t}\n\n\t// return for each atom the total charge of the path to which it belongs (which is related to above, but isn't binned)\n\tpublic getAggregateCharges():number[]\n\t{\n\t\tconst mol = this.mol;\n\t\tlet chg:number[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) chg[n - 1] = mol.atomCharge(n);\n\t\tfor (let path of this.paths)\n\t\t{\n\t\t\tlet total = 0;\n\t\t\tfor (let a of path.atoms) total += chg[a - 1];\n\t\t\tfor (let a of path.atoms) chg[a - 1] = total;\n\t\t}\n\t\treturn chg;\n\t}\n\n\t// for debugging purposes\n\tpublic toString():string\n\t{\n\t\tlet str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n\t\tfor (let p of this.paths) str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n\t\treturn str;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\tprivate calculate():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// gather metrics\n\t\tlet nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n\t\tlet bondsum = Vec.numberArray(0, na); // explicit bond orders + virtual hydrogens\n\t\tfor (let n = 0; n < na; n++) bondsum[n] = mol.atomHydrogens(n + 1);\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tif (bo != 1)\n\t\t\t{\n\t\t\t\tnonsingle[bfr - 1] = true;\n\t\t\t\tnonsingle[bto - 1] = true;\n\t\t\t}\n\t\t\tif (bo >= 2)\n\t\t\t{\n\t\t\t\tpibonded[bfr - 1] = true;\n\t\t\t\tpibonded[bto - 1] = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n\t\t\t\tif (blk1 >= 3 || blk2 >= 3)\n\t\t\t\t{\n\t\t\t\t\tmetalbonded[bfr - 1] = true;\n\t\t\t\t\tmetalbonded[bto - 1] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbondsum[bfr - 1] += bo;\n\t\t\tbondsum[bto - 1] += bo;\n\n\t\t\t// respect externally indicated aromaticity\n\t\t\tif (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0)\n\t\t\t{\n\t\t\t\tpibonded[bfr - 1] = true;\n\t\t\t\tpibonded[bto - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\t// \"implied pi\" atoms are those which are wedged between two or more pi atoms; this is extended out just one iteration\n\t\tlet impliedPi = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= na; n++) if (!pibonded[n - 1])\n\t\t{\n\t\t\tlet adjpi = 0;\n\t\t\tfor (let adj of mol.atomAdjList(n)) if (pibonded[adj - 1] || metalbonded[adj - 1]) adjpi++;\n\t\t\tif (adjpi >= 2) impliedPi[n - 1] = true;\n\t\t}\n\t\tfor (let n = 0; n < na; n++) if (impliedPi[n]) pibonded[n] = true;\n\n\t\t// first pass: find things that are definitely blocking, or maybe blocking\n\t\tthis.maskBlock = Vec.booleanArray(false, na);\n\t\tlet maskMaybe = Vec.booleanArray(false, na); // might be blocking, as long as neighbours also maybe\n\n\t\t// main groups which could potentially be blocking if they are neutral and have just sigma bonds that add up to the regular octet valence\n\t\tconst COULD_BLOCK =\n\t\t[\n\t\t\tChemistry.ELEMENT_H,\n\t\t\tChemistry.ELEMENT_B,  Chemistry.ELEMENT_C,  Chemistry.ELEMENT_N,  Chemistry.ELEMENT_O,  Chemistry.ELEMENT_F,\n\t\t\tChemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P,  Chemistry.ELEMENT_S,  Chemistry.ELEMENT_Cl,\n\t\t\tChemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n\t\t\tChemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n\t\t\tChemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n\t\t];\n\n\t\t// acids/bases: whenever one is paired with the other, it's not a blocking possibility\n\t\tconst ACIDS =\n\t\t[\n\t\t\tChemistry.ELEMENT_B,\n\t\t\tChemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n\t\t\tChemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n\t\t\tChemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n\t\t\tChemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n\t\t];\n\t\tconst BASES =\n\t\t[\n\t\t\tChemistry.ELEMENT_N,  Chemistry.ELEMENT_O,  Chemistry.ELEMENT_F,\n\t\t\tChemistry.ELEMENT_P,  Chemistry.ELEMENT_S,  Chemistry.ELEMENT_Cl,\n\t\t\tChemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n\t\t\tChemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n\t\t\tChemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n\t\t];\n\n\t\tskip: for (let n = 0; n < na; n++)\n\t\t{\n\t\t\tconst a = n + 1;\n\n\t\t\t// must be all single bonds, uncharged, non-radical, in the list of potentially block elements, and have a bonding sum equal\n\t\t\t// to the valence\n\t\t\tif (nonsingle[n] || pibonded[n]) continue;\n\t\t\tif (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0) continue;\n\t\t\tconst atno = mol.atomicNumber(a);\n\t\t\tif (atno == 0)\n\t\t\t{\n\t\t\t\tthis.maskBlock[n] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (COULD_BLOCK.indexOf(atno) < 0) continue;\n\t\t\tif (bondsum[n] != Chemistry.ELEMENT_BONDING[atno]) continue;\n\n\t\t\tif (ACIDS.indexOf(atno) >= 0)\n\t\t\t{\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (BASES.indexOf(mol.atomicNumber(adj)) >= 0) continue skip;\n\t\t\t}\n\t\t\tif (BASES.indexOf(atno) >= 0)\n\t\t\t{\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0) continue skip;\n\t\t\t}\n\n\t\t\tmaskMaybe[n] = true;\n\n\t\t\t// if carbon and has no metal neighbours, it's sp3 and definitely blocking\n\t\t\tif (atno == Chemistry.ELEMENT_C)\n\t\t\t{\n\t\t\t\tlet hasMetal = false;\n\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0) hasMetal = true;\n\t\t\t\tif (!hasMetal) this.maskBlock[n] = true;\n\t\t\t}\n\t\t\t// ... or if hydrogen, have already established that there's no interesting valence, so it's blocking\n\t\t\telse if (atno == Chemistry.ELEMENT_H)\n\t\t\t{\n\t\t\t\tthis.maskBlock[n] = true;\n\t\t\t}\n\t\t}\n\n\t\t// any \"maybe\" atom that is surrounded by other maybe atoms gets approved as a blocking atom\n\t\t// note: this is non-chaining; might need to reconsider this, i.e. make maybe-to-not propagate\n\t\tskip: for (let n = 0; n < na; n++) if (maskMaybe[n] && !this.maskBlock[n])\n\t\t{\n\t\t\tfor (let a of mol.atomAdjList(n + 1)) if (!maskMaybe[a - 1]) continue skip;\n\t\t\tthis.maskBlock[n] = true;\n\t\t}\n\n\t\t// now build the graph, and pick apart the blocked units\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tfor (let n = 0; n < na; n++) if (this.maskBlock[n]) g.isolateNode(n);\n\t\tfor (let cc of g.calculateComponentGroups())\n\t\t{\n\t\t\tif (cc.length == 1) continue;\n\t\t\tlet amask = Vec.idxMask(cc, na);\n\t\t\tVec.addTo(cc, 1);\n\n\t\t\tlet p:DotPathBlock =\n\t\t\t{\n\t\t\t\tatoms: cc,\n\t\t\t\tbonds: [],\n\t\t\t\tnumer: 0,\n\t\t\t\tdenom: 0\n\t\t\t};\n\t\t\tfor (let n = 1; n <= nb; n++) if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1]) p.bonds.push(n);\n\n\t\t\tlet totalHave = 0, totalWant = 0;\n\t\t\tfor (let a of p.atoms)\n\t\t\t{\n\t\t\t\tlet others = mol.atomHydrogens(a); // bonds to atoms not in path; these are single bonds, by definition\n\t\t\t\tfor (let o of mol.atomAdjList(a)) if (!amask[o - 1]) others++;\n\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tlet have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n\t\t\t\tlet want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n\t\t\t\ttotalHave += have;\n\t\t\t\ttotalWant += want;\n\t\t\t}\n\n\t\t\tlet electrons = Math.min(totalHave, totalWant);\n\n\t\t\tp.numer = electrons;\n\t\t\tp.denom = 2 * p.bonds.length;\n\t\t\tthis.paths.push(p);\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2019 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tHandles some of the custom extensions that are brought in for molecules when imported from other\n\tsources, such as MDL Molfiles, which support a number of features that are not part of the core\n\trepresentation of a molecule.\n\n\tThese additional properties are included in the transient extension collection for atoms and\n\tbonds, i.e. they get cleared out as soon as the structure is modified in any way, because their\n\teffects are not localised to a single atom/bond.\n\n\tA molecule that contains foreign annotations is expected to either import them to a more well\n\tspecified definition, or to have a brief lifetime and only need to survive a round trip, rather than\n\tbeing used or modified.\n*/\n\nexport enum ForeignMoleculeTransient\n{\n\t// generic flags for remarking that an atom/bond is aromatic; commonly used by SMILES, for MDL Molfile queries (and illegal structures)\n\t// and a number of other formats which use this concept\n\tAtomAromatic = 'yAROMATIC',\n\tBondAromatic = 'yAROMATIC',\n\n\t// specialisations of zero-order bonds: the MDL world supports \"dative\" and \"hydrogen\" which are both 0-order but have particular meaning\n\tBondZeroDative = 'yZERO_DATIVE',\n\tBondZeroHydrogen = 'yZERO_HYDROGEN',\n\n\t// the atom-centred chirality settings, used explicitly by MDL Molfiles to denote chirality, or mixtures\n\tAtomChiralMDLOdd = 'yCHIRAL_MDL_ODD',\n\tAtomChiralMDLEven= 'yCHIRAL_MDL_EVEN',\n\tAtomChiralMDLRacemic = 'yCHIRAL_MDL_RACEMIC',\n\n\t// annotations that carry over from supplementary MDL parsing\n\tAtomExplicitValence = 'yMDL_EXPLICIT_VALENCE',\n\tAtomSgroupMultiAttach = 'yMDL_SGROUP_MULTIATTACH',\n\tAtomSgroupMultiRepeat = 'yMDL_SGROUP_MULTIREPEAT',\n\tAtomSgroupData = 'yMDL_SGROUP_DATA',\n\n\t// references to SCSR templates\n\tAtomSCSRClass = 'yMDL_SCSR_CLASS',\n\tAtomSCSRSeqID = 'yMDL_SCSR_SEQID',\n\tAtomSCSRAttchOrd = 'yMDL_SCSR_ATTCHORD',\n}\n\nexport interface ForeignMoleculeSgroupMultiAttach\n{\n\tname:string;\n\tatoms:number[];\n\tkeyval:Record<string, string>;\n}\n\nexport interface ForeignMoleculeSgroupMultiRepeat\n{\n\tmult:number;\n\tunit:number;\n\tatoms:number[];\n}\n\nexport interface ForeignMoleculeSgroupData\n{\n\tname:string;\n\tvalue:string;\n\tunit:string;\n\tquery:string;\n\tatoms:number[];\n}\n\nexport interface ForeignMoleculeTemplateDefn\n{\n\tname:string;\n\tnatReplace:string;\n\tmol:Molecule;\n}\n\nexport class ForeignMolecule\n{\n\t// ----------------- public methods -----------------\n\n\t// returns a mask for any atoms that have been explicitly marked as aromatic; note that this does not look at the\n\t// marking of aromatic bonds, which is separate\n\tpublic static noteAromaticAtoms(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numAtoms;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n\t\treturn mask;\n\t}\n\n\t// returns a mask for any bonds that have been explicitly marked as aromatic\n\tpublic static noteAromaticBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n\t\treturn mask;\n\t}\n\n\t// returns a mask for zero-order bonds that are marked as dative/hydrogen respectively\n\tpublic static noteZeroDativeBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n\t\treturn mask;\n\t}\n\tpublic static noteZeroHydrogenBonds(mol:Molecule):boolean[]\n\t{\n\t\tconst sz = mol.numBonds;\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n = 1; n <= sz; n++) mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n\t\treturn mask;\n\t}\n\n\t// TODO: convert MDL chirality to/from rubric\n\n\t// explicit valence: 0=no information; -1=zero; >0=explicit\n\tpublic static markExplicitValence(mol:Molecule, atom:number, valence:number):void\n\t{\n\t\tlet trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n\t\ttrans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n\t\tmol.setAtomTransient(atom, trans);\n\t}\n\tpublic static noteExplicitValence(mol:Molecule, atom:number):number\n\t{\n\t\tlet trans = mol.atomTransient(atom);\n\t\tfor (let tr of trans) if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':')) return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n\t\treturn null;\n\t}\n\n\t// S-groups with either no attachments or multiple attachments; only single-attachment S-groups are handled naturally\n\tpublic static markSgroupMultiAttach(mol:Molecule, name:string, atoms:number[], keyval:Record<string, string> = {}):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tlet bits = payload.split(',');\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tif (!(idx > 0)) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n\t\tfor (let [key, val] of Object.entries(keyval)) tag += ',' + key + '=' + val;\n\t\tfor (let a of atoms) mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n\t}\n\tpublic static hasAnySgroupMultiAttach(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupMultiAttach(mol:Molecule):ForeignMoleculeSgroupMultiAttach[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupMultiAttach> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 2) continue;\n\t\t\tlet idx = parseInt(bits[0]), name = bits[1];\n\t\t\tif (!(idx > 0) || !name) continue;\n\n\t\t\tlet keyval:Record<string, string> = {};\n\t\t\tfor (let i = 2; i < bits.length; i++)\n\t\t\t{\n\t\t\t\tlet eq = bits[i].indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tkeyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n\t\t\t}\n\n\t\t\tlet sgm = map[idx];\n\t\t\tif (sgm) sgm.atoms.push(n); else map[idx] = {name, atoms: [n], keyval};\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// S-groups that mark repeating units, where the \"parent\" set is rendered with a bracket+suffix \"[]n\"; the molecule is fully expanded out, so that the\n\t// graph connectivity is that of the real molecule, with the non-parent atoms being hidden & finagled for rendering purposes\n\tpublic static markSgroupMultiRepeat(mol:Molecule, mult:number, atoms:number[]):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tif (comma <= 0) continue;\n\t\t\tlet idx = parseInt(payload.substring(0, comma));\n\t\t\tif (idx <= 0) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet unit = atoms.length / mult;\n\t\tlet tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n\t\tfor (let n = 0; n < atoms.length; n++) mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n\t}\n\tpublic static hasAnySgroupMultiRepeat(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupMultiRepeat(mol:Molecule):ForeignMoleculeSgroupMultiRepeat[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupMultiRepeat> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 4) continue;\n\t\t\tlet idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n\t\t\tif (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit) continue;\n\n\t\t\tlet mr = map[idx];\n\t\t\tif (mr == null) map[idx] = mr = {mult, unit, atoms: Vec.numberArray(0, mult * unit)};\n\t\t\telse if (mr.mult != mult || mr.unit != unit) continue;\n\n\t\t\tmr.atoms[pos - 1] = n;\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// data S-groups can attach arbitrary data concepts to a group of atoms\n\tpublic static markSgroupData(mol:Molecule, name:string, value:string, unit:string, query:string, atoms:number[]):void\n\t{\n\t\tlet idxHigh = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n\t\t\tlet comma = payload.indexOf(',');\n\t\t\tif (comma <= 0) continue;\n\t\t\tlet idx = parseInt(payload.substring(0, comma));\n\t\t\tif (idx <= 0) continue;\n\t\t\tidxHigh = Math.max(idxHigh, idx);\n\t\t}\n\n\t\tlet bits = [(idxHigh + 1).toString(), name, value, unit, query];\n\t\tfor (let n = 1; n < bits.length; n++) bits[n] = (bits[n] ?? '').replace(/\\,/g, '@@');\n\t\tlet tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n\t\tfor (let n = 0; n < atoms.length; n++) mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n\t}\n\tpublic static hasAnySgroupData(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))) return true;\n\t\treturn false;\n\t}\n\tpublic static noteAllSgroupData(mol:Molecule):ForeignMoleculeSgroupData[]\n\t{\n\t\tlet map:Record<number, ForeignMoleculeSgroupData> = {};\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) for (let tag of mol.atomTransient(n)) if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':'))\n\t\t{\n\t\t\tlet payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n\t\t\tlet bits = payload.split(',');\n\t\t\tif (bits.length < 5) continue;\n\t\t\tlet idx = parseInt(bits[0]);\n\t\t\tfor (let i = 1; i < 5; i++) bits[i] = bits[i].replace(/\\@\\@/g, ',');\n\t\t\tif (!(idx > 0)) continue;\n\n\t\t\tlet sd = map[idx];\n\t\t\tif (sd)\n\t\t\t\tsd.atoms.push(n);\n\t\t\telse\n\t\t\t\tmap[idx] = {name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n]};\n\t\t}\n\n\t\treturn Object.values(map);\n\t}\n\n\t// ----------------- private methods -----------------\n\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2018 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tRepresentation of a unidirectional graph which has simple node labels, and no edge labels. Connections are stored in neighbour\n\tlist form. Construction of the graph is faster if the number of nodes are known ahead of time. Cloning a graph instance, or\n\tbuilding it from some other graph datastructure, has minimal overhead.\n\n\tNote that all indices are 0-based.\n\n\tPractical note: the Molecule class has much analogous functionality. The Graph class is intended to be a cleaner and more\n\tlightweight implementation of algorithms which are not necessarily related to a molecular datastructure.\n\tThe Molecule class has a lot of features such as caching calculated values, which is very useful for general purpose work;\n\tthe algorithms in the Graph class have more intuitive and predictable performance characteristics, and do not have shortcuts\n\tsuch as caching.\n*/\n\nexport class Graph\n{\n\tprivate nbrs:number[][] = []; // neighbour-list, one per node\n\tprivate indices:number[] = null; // optional integer value for each node\n\tprivate labels:string[] = null; // optional string value for each node\n\tprivate props:any[] = null; // optional object for each node; is always a shallow copy\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(sz?:number, edge1?:number[], edge2?:number[])\n\t{\n\t\tif (sz != null) for (let n = 0; n < sz; n++) this.nbrs.push([]);\n\t\tif (edge1 != null && edge2 != null)\n\t\t{\n\t\t\tfor (let n = 0; n < edge1.length; n++)\n\t\t\t{\n\t\t\t\tthis.nbrs[edge1[n]].push(edge2[n]);\n\t\t\t\tthis.nbrs[edge2[n]].push(edge1[n]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clone():Graph\n\t{\n\t\tlet g = new Graph();\n\t\tfor (let nbr of this.nbrs) g.nbrs.push(nbr.slice(0));\n\t\tg.indices = this.indices == null ? null : this.indices.slice(0);\n\t\tg.labels = this.labels == null ? null : this.labels.slice(0);\n\t\tg.props = this.props == null ? null : this.props.slice(0);\n\t\treturn g;\n\t}\n\n\t// builds a graph with the same shape as the given molecule\n\tpublic static fromMolecule(mol:Molecule):Graph\n\t{\n\t\tlet g = new Graph();\n\t\tg.indices = [];\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tg.nbrs.push([]);\n\t\t\tg.indices.push(n + 1);\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tg.nbrs[bfr].push(bto);\n\t\t\tg.nbrs[bto].push(bfr);\n\t\t}\n\t\treturn g;\n\t}\n\n\t// when a neighbour list is already available, construction is essentially immediate; note that the neighbour list is not cloned at all,\n\t// and it may be corrupted if graph modification methods are called\n\tpublic static fromNeighbours(nbrs:number[][]):Graph\n\t{\n\t\tlet g = new Graph();\n\t\tg.nbrs = nbrs;\n\t\treturn g;\n\t}\n\n\tpublic toString():string\n\t{\n\t\tlet buff = '#nodes=' + this.nbrs.length;\n\t\tfor (let n = 0; n < this.nbrs.length; n++)\n\t\t{\n\t\t\tbuff += ' ' + n + ':{' + this.nbrs[n] + '}';\n\t\t\tif (n < Vec.len(this.indices)) buff += '[i=' + this.indices[n] + ']';\n\t\t\tif (n < Vec.len(this.labels)) buff += '[l=' + this.labels[n] + ']';\n\t\t}\n\t\treturn buff;\n\t}\n\n\tpublic get numNodes():number {return this.nbrs.length;}\n\tpublic numEdges(node:number):number {return this.nbrs[node].length;}\n\tpublic getEdge(node:number, edge:number):number {return this.nbrs[node][edge];}\n\tpublic getEdges(node:number):number[] {return this.nbrs[node];}\n\n\tpublic getIndex(node:number):number {return this.indices == null ? 0 : this.indices[node];}\n\tpublic setIndex(node:number, idx:number):void\n\t{\n\t\tif (this.indices == null) this.indices = Vec.numberArray(0, this.nbrs.length);\n\t\tthis.indices[node] = idx;\n\t}\n\n\tpublic getLabel(node:number):string {return this.labels == null ? null : this.labels[node];}\n\tpublic setLabel(node:number, lbl:string):void\n\t{\n\t\tif (this.labels == null) this.labels = Vec.stringArray('', this.nbrs.length);\n\t\tthis.labels[node] = lbl;\n\t}\n\n\tpublic getProperty(node:number):any {return this.props == null ? null : this.props[node];}\n\tpublic setProperty(node:number, prp:any):void\n\t{\n\t\tif (this.props == null) this.props = new Array(this.nbrs.length);\n\t\tthis.props[node] = prp;\n\t}\n\n\tpublic addNode():number\n\t{\n\t\tthis.nbrs.push([]);\n\t\tif (this.indices != null) this.indices.push(0);\n\t\tif (this.labels != null) this.labels.push('');\n\t\tif (this.props != null) this.props.push(null);\n\t\treturn this.nbrs.length - 1;\n\t}\n\n\tpublic hasEdge(node1:number, node2:number):boolean\n\t{\n\t\tif (this.nbrs[node1].length <= this.nbrs[node2].length)\n\t\t\treturn this.nbrs[node1].indexOf(node2) >= 0;\n\t\telse\n\t\t\treturn this.nbrs[node2].indexOf(node1) >= 0;\n\t}\n\n\tpublic addEdge(node1:number, node2:number):void\n\t{\n\t\tthis.nbrs[node1].push(node2);\n\t\tthis.nbrs[node2].push(node1);\n\t}\n\n\tpublic removeEdge(node1:number, node2:number):void\n\t{\n\t\tlet i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n\t\tif (i1 >= 0) this.nbrs[node1].splice(i1, 1);\n\t\tif (i2 >= 0) this.nbrs[node2].splice(i2, 1);\n\t}\n\n\tpublic isolateNode(node:number):void\n\t{\n\t\tfor (let o of this.nbrs[node])\n\t\t{\n\t\t\tlet i = this.nbrs[o].indexOf(node);\n\t\t\tif (i >= 0) this.nbrs[o].splice(i, 1);\n\t\t}\n\t\tthis.nbrs[node] = [];\n\t}\n\n\t// keep/remove: modify graph in place by taking out some nodes\n\tpublic keepNodesMask(mask:boolean[]):void\n\t{\n\t\tconst oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n\t\tif (newsz == oldsz) return;\n\t\tif (newsz == 0)\n\t\t{\n\t\t\tthis.nbrs = [];\n\t\t\tthis.indices = null;\n\t\t\tthis.labels = null;\n\t\t\tthis.props = null;\n\t\t\treturn;\n\t\t}\n\n\t\tlet newmap = Vec.maskMap(mask);\n\t\tlet newnbrs:number[][] = [];\n\t\tfor (let n = 0; n < newsz; n++) newnbrs.push([]);\n\t\tfor (let n = 0, pos = 0; n < oldsz; n++) if (mask[n])\n\t\t{\n\t\t\tfor (let i of this.nbrs[n]) if (mask[i]) newnbrs[pos].push(newmap[i]);\n\t\t\tpos++;\n\t\t}\n\t\tthis.nbrs = newnbrs;\n\n\t\tif (this.indices != null) this.indices = Vec.maskGet(this.indices, mask);\n\t\tif (this.labels != null) this.labels = Vec.maskGet(this.labels, mask);\n\t\tif (this.props != null) this.props = Vec.maskGet(this.props, mask);\n\t}\n\tpublic keepNodesIndex(idx:number[]) {this.keepNodesMask(Vec.idxMask(idx, this.numNodes));}\n\tpublic removeNodesMask(mask:boolean[]) {this.keepNodesMask(Vec.notMask(mask));}\n\tpublic removeNodesIndex(idx:number[]) {this.removeNodesMask(Vec.idxMask(idx, this.numNodes));}\n\n\t// subgraph: creates a new graph, typically smaller; note that the index version honours the new atom order\n\tpublic subgraphIndex(idx:number[]):Graph\n\t{\n\t\tconst nsz = idx.length;\n\t\tlet g = new Graph(nsz);\n\t\tif (this.indices != null || this.labels != null || this.props != null) for (let n = 0; n < nsz; n++)\n\t\t{\n\t\t\tif (this.indices != null) g.setIndex(n, this.indices[idx[n]]);\n\t\t\tif (this.labels != null) g.setLabel(n, this.labels[idx[n]]);\n\t\t\tif (this.props != null) g.setProperty(n, this.props[idx[n]]);\n\t\t}\n\t\tfor (let i = 0; i < nsz; i++)\n\t\t{\n\t\t\tfor (let n of this.nbrs[idx[i]])\n\t\t\t{\n\t\t\t\tlet j = idx.indexOf(n);\n\t\t\t\tif (j > i) g.addEdge(i, j);\n\t\t\t}\n\t\t}\n\t\treturn g;\n\t}\n\tpublic subgraphMask(mask:boolean[]):Graph\n\t{\n\t\tlet g = this.clone();\n\t\tg.keepNodesMask(mask);\n\t\treturn g;\n\t}\n\n\t// returns a list of connected component indices, one per node; the numbering system is based on node ordering\n\tpublic calculateComponents():number[]\n\t{\n\t\tconst sz = this.nbrs.length;\n\t\tif (sz == 0) return [];\n\n\t\tlet cc = Vec.numberArray(0, sz);\n\t\tcc[0] = 1;\n\t\tlet first = 1, high = 1;\n\t\twhile (true)\n\t\t{\n\t\t\twhile (first < sz && cc[first] > 0) {first++;}\n\t\t\tif (first >= sz) break;\n\n\t\t\tlet anything = false;\n\t\t\tfor (let i = first; i < sz; i++) if (cc[i] == 0)\n\t\t\t{\n\t\t\t\tfor (let j = 0; j < this.nbrs[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (cc[this.nbrs[i][j]] != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcc[i] = cc[this.nbrs[i][j]];\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!anything) cc[first] = ++high;\n\t\t}\n\n\t\treturn cc;\n\t}\n\n\t// returns an array of one group for each connected component\n\tpublic calculateComponentGroups():number[][]\n\t{\n\t\tif (this.nbrs.length == 0) return [];\n\t\tlet cc = this.calculateComponents();\n\t\tlet sz = Vec.max(cc);\n\n\t\tlet grp:number[][] = [];\n\t\tfor (let n = 0; n < sz; n++) grp.push([]);\n\t\tfor (let n = 0; n < cc.length; n++) grp[cc[n] - 1].push(n);\n\t\treturn grp;\n\t}\n\n\t// determine an array which has ring block IDs (0=no ring, >0=block index); also returns the count, i.e. number of ring blocks\n\tpublic calculateRingBlocks():[number[], number] // (rblk[], count)\n\t{\n\t\tlet sz = this.numNodes, nbrs = this.nbrs;\n\t\tif (sz == 0) return [[], 0];\n\n\t\tlet rblk:number[] = new Array(this.numNodes);\n\n\t\tlet visited = Vec.booleanArray(false, sz);\n\t\tVec.setTo(rblk, 0);\n\t\tlet path:number[] = new Array(sz + 1);\n\t\tlet plen = 0, numVisited = 0;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet last:number, current:number;\n\n\t\t\tif (plen == 0)\n\t\t\t{\n\t\t\t\tlast = -1;\n\t\t\t\tfor (current = 0; visited[current]; current++) {}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlast = path[plen - 1];\n\t\t\t\tcurrent = -1;\n\t\t\t\tfor (let n = 0; n < nbrs[last].length; n++) if (!visited[nbrs[last][n]]) {current = nbrs[last][n]; break;}\n\t\t\t}\n\n\t\t\tif (current >= 0 && plen >= 2) // path is at least 2 items long, so look for any not-previous visited neighbours\n\t\t\t{\n\t\t\t\tlet back = path[plen - 1];\n\t\t\t\tfor (let n = 0; n < nbrs[current].length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet join = nbrs[current][n];\n\t\t\t\t\tif (join != back && visited[join])\n\t\t\t\t\t{\n\t\t\t\t\t\tpath[plen] = current;\n\t\t\t\t\t\tfor (let i = plen; i == plen || path[i + 1] != join; i--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet id = rblk[path[i]];\n\t\t\t\t\t\t\tif (id == 0) rblk[path[i]] = last;\n\t\t\t\t\t\t\telse if (id != last)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor (let j = 0; j < sz; j++) if (rblk[j] == id) rblk[j] = last;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (current >= 0) // can mark the new one as visited\n\t\t\t{\n\t\t\t\tvisited[current] = true;\n\t\t\t\tpath[plen++] = current;\n\t\t\t\tnumVisited++;\n\t\t\t}\n\t\t\telse // otherwise, found nothing and must rewind the path\n\t\t\t{\n\t\t\t\tplen--;\n\t\t\t}\n\n\t\t\tif (numVisited == sz) break;\n\t\t}\n\n\t\t// the ring ID's are not necessarily consecutive, so reassign them to 0=none, 1..NBlocks\n\t\tlet nextID = 0;\n\t\tfor (let i = 0; i < sz; i++) if (rblk[i] > 0)\n\t\t{\n\t\t\tnextID--;\n\t\t\tfor (let j = sz - 1; j >= i; j--) if (rblk[j] == rblk[i]) rblk[j] = nextID;\n\t\t}\n\t\tfor (let i = 0; i < sz; i++) rblk[i] = -rblk[i];\n\n\t\treturn [rblk, -nextID];\n\t}\n\n\t// calculate ring blocks and return an array of indices, one for each\n\tpublic calculateRingBlockGroups():number[][]\n\t{\n\t\tlet [rblk, sz] = this.calculateRingBlocks();\n\t\tif (sz == 0) return [];\n\n\t\tlet cap = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < rblk.length; n++) if (rblk[n] > 0) cap[rblk[n] - 1]++;\n\n\t\tlet grp:number[][] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tgrp[n] = new Array(cap[n]);\n\t\t\tcap[n] = 0;\n\t\t}\n\t\tfor (let n = 0; n < rblk.length; n++)\n\t\t{\n\t\t\tlet i = rblk[n] - 1;\n\t\t\tif (i < 0) continue;\n\t\t\tgrp[i][cap[i]++] = n;\n\t\t}\n\t\treturn grp;\n\t}\n\n\t// returns a list of rings with just the given size; the enumeration is exhaustive, so this is only appropriate for small rings; any ring that can be composed from\n\t// smaller rings is excluded from the list\n\tpublic findRingsOfSize(size:number):number[][]\n\t{\n\t\tlet [rblk, num] = this.calculateRingBlocks();\n\t\tif (num == 0) return [];\n\n\t\tlet rings:number[][] = [];\n\t\tlet mask:boolean[] = new Array(this.numNodes);\n\n\t\tfor (let r = 1; r <= num; r++)\n\t\t{\n\t\t\tfor (let n = 0; n < this.numNodes; n++) mask[n] = rblk[n] == r;\n\t\t\tlet newRings = this.findRingsOfSizeMask(size, mask);\n\t\t\tfor (let n = 0; n < newRings.length; n++) rings.push(newRings[n]);\n\t\t}\n\t\treturn rings;\n\t}\n\n\tpublic findRingsOfSizeMask(size:number, mask:boolean[]):number[][]\n\t{\n\t\tlet rings:number[][] = [];\n\n\t\tfor (let n = 0; n < this.numNodes; n++) if (mask[n])\n\t\t{\n\t\t\tlet path:number[] = new Array(size);\n\t\t\tpath[0] = n;\n\t\t\tthis.recursiveRingFind(path, 1, size, mask, rings);\n\t\t}\n\n\t\treturn rings;\n\t}\n\n\t// returns breadth-first-search order\n\tpublic calculateBFS(idx:number):number[]\n\t{\n\t\tlet ret = Vec.numberArray(-1, this.numNodes);\n\t\tret[idx] = 0;\n\n\t\tlet curnum = 0, lsz = 1, watermark = 0;\n\t\tlet list = Vec.numberArray(0, this.numNodes);\n\t\tlist[0] = idx;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet newsz = lsz;\n\t\t\tfor (let n = watermark; n < lsz; n++)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.nbrs[list[n]].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet j = this.nbrs[list[n]][i];\n\t\t\t\t\tif (ret[j] < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tret[j] = curnum + 1;\n\t\t\t\t\t\tlist[newsz++] = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newsz == lsz) break;\n\t\t\twatermark = lsz;\n\t\t\tlsz = newsz;\n\t\t\tcurnum++;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic calculateGravity():number[]\n\t{\n\t\tconst sz = this.numNodes;\n\t\tconst {nbrs} = this;\n\t\tlet wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tVec.setTo(wmod, wght);\n\t\t\tfor (let i = 0; i < sz; i++) for (let j = nbrs[i].length - 1; j >= 0; j--) wmod[i] += wght[nbrs[i][j]];\n\t\t\tVec.setTo(wght, wmod);\n\t\t}\n\t\treturn wght;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// ring hunter: recursive step; finds, compares and collects\n\tprivate recursiveRingFind(path:number[], psize:number, capacity:number, mask:boolean[], rings:number[][]):void\n\t{\n\t\t// not enough atoms yet, so look for new possibilities\n\t\tif (psize < capacity)\n\t\t{\n\t\t\tlet last = path[psize - 1];\n\t\t\tfor (let n = 0; n < this.nbrs[last].length; n++)\n\t\t\t{\n\t\t\t\tlet adj = this.nbrs[last][n];\n\t\t\t\tif (!mask[adj]) continue;\n\t\t\t\tlet fnd = false;\n\t\t\t\tfor (let i = 0; i < psize; i++) if (path[i] == adj)\n\t\t\t\t{\n\t\t\t\t\tfnd = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!fnd)\n\t\t\t\t{\n\t\t\t\t\tlet newPath = Vec.duplicate(path);\n\t\t\t\t\tnewPath[psize] = adj;\n\t\t\t\t\tthis.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// path is full, so make sure it eats its tail\n\t\tlet last = path[psize - 1];\n\t\tlet fnd = false;\n\t\tfor (let n = 0; n < this.nbrs[last].length; n++) if (this.nbrs[last][n] == path[0]) {fnd = true; break;}\n\t\tif (!fnd) return;\n\n\t\t// make sure every element in the path has exactly 2 neighbours within the path; otherwise it is spanning a bridge, which\n\t\t// is an undesirable ring definition\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet count = 0, p = path[n];\n\t\t\tfor (let i = 0; i < this.nbrs[p].length; i++) if (path.indexOf(this.nbrs[p][i]) >= 0) count++;\n\t\t\tif (count != 2) return; // invalid\n\t\t}\n\n\t\t// reorder the array then look for duplicates\n\t\tlet first = 0;\n\t\tfor (let n = 1; n < psize; n++) if (path[n] < path[first]) first = n;\n\t\tlet fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n\t\tlet flip = path[fm] < path[fp];\n\t\tif (first != 0 || flip)\n\t\t{\n\t\t\tlet newPath:number[] = new Array(psize);\n\t\t\tfor (let n = 0; n < psize; n++) newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n\t\t\tpath = newPath;\n\t\t}\n\n\t\tfor (let n = 0; n < rings.length; n++)\n\t\t{\n\t\t\tlet look = rings[n];\n\t\t\tlet same = true;\n\t\t\tfor (let i = 0; i < psize; i++) if (look[i] != path[i])\n\t\t\t{\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (same) return;\n\t\t}\n\n\t\trings.push(path);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {DotPath} from '../mol/DotPath';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from './MolUtil';\nimport {Stereochemistry} from '../mol/Stereochemistry';\n\n/*\n\tA \"meta-molecule\" is a container for a molecule which stores derived information about it. This is a compensation for the\n\tfact that the molecular datastructure is extremely minimalistic, and includes only very low level chemical interpretation.\n\tThe low level molecule object is intended to represent a work in progress, something that is likely being sketched or chopped up\n\tand reassembled by algorithms. The meta-molecule wrapper is based on the assumption that the molecule is \"done\", and is\n\tready to be compared to other fully described molecules.\n\n\tEach of the fields contained within may or may not be defined, and should be calculated as necessary, which means that\n\tthis class basically operates as a cache.\n\n\tTypical use case:\n\n\t\tMetaMolecule meta=new MetaMolecule(mol);\n\t\tcalculateStrictAromaticity();\n\t\tcalculateStereoRubric();\n\n\tNote that the calculations are not necessarily independent, so order of calling can be important.\n\n\tCan also be used as a convenient storage place for the \"skeleton hash\", which is useful for screening isomorphisms.\n*/\n\nexport class MetaMolecule\n{\n\tpublic static skeletonHash:(mol:Molecule) => string = null;\n\tpublic static isomorphMatch:(meta1:MetaMolecule, meta2:MetaMolecule, timeout:number) => boolean = null;\n\n\tpublic atomArom:boolean[] = null;\n\tpublic bondArom:boolean[] = null;\n\tpublic rubricTetra:number[][] = null;\n\tpublic rubricSquare:number[][] = null;\n\tpublic rubricBipy:number[][] = null;\n\tpublic rubricOcta:number[][] = null;\n\tpublic rubricSides:number[][] = null;\n\tpublic hash:string = null;\n\tpublic heavyHash:string = null;\n\tpublic uniqueElements:string[] = null;\n\tpublic dots:DotPath = null;\n\n\tprivate piAtom:boolean[] = null; // true for all atoms that have at least one double bond attached\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t}\n\n\t// strict aromaticity: considers only rings with pure alternating single/double bonds, i.e. benzene-style; fused ring\n\t// systems like naphthalene are handled iteratively; many types of aromaticity are excluded, e.g. thiophene (lone pair),\n\t// imidazolium (ions) and larger rings (e.g. porphyrins); this calculation is reasonably fast\n\tpublic calculateStrictAromaticity():void\n\t{\n\t\tlet mol = this.mol;\n\t\tthis.atomArom = Vec.booleanArray(false, mol.numAtoms);\n\t\tthis.bondArom = Vec.booleanArray(false, mol.numBonds);\n\n\t\tlet rings = mol.findRingsOfSize(6);\n\t\tconst nr = rings.length;\n\t\tif (nr == 0) return;\n\n\t\t// assign the potentially-aromatic rings\n\t\tthis.ensurePiAtoms();\n\t\tlet mask = Vec.booleanArray(false, nr); // false=not decided; true=already processed\n\t\tfor (let n = 0; n < nr; n++)\n\t\t{\n\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t{\n\t\t\t\tlet a = rings[n][i];\n\t\t\t\tif (!this.piAtom[a - 1])\n\t\t\t\t{\n\t\t\t\t\tmask[n] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\tif (bo != 1 && bo != 2)\n\t\t\t\t{\n\t\t\t\t\tmask[n] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// keep classifying rings as aromatic until no change; this needs to be done iteratively, for the benefit of highly\n\t\t// embedded ring systems, that can't be classified as aromatic until it is known that their neighbours obviously are\n\t\twhile (true)\n\t\t{\n\t\t\tlet anyChange = false;\n\n\t\t\tfor (let n = 0; n < nr; n++) if (!mask[n])\n\t\t\t{\n\t\t\t\tlet phase1 = true, phase2 = true; // has to go 121212 or 212121; already arom=either is OK\n\t\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\t\tif (this.bondArom[b - 1]) continue; // valid for either phase\n\t\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\t\tphase1 = phase1 && bo == (2 - (i & 1));\n\t\t\t\t\tphase2 = phase2 && bo == (1 + (i & 1));\n\t\t\t\t}\n\t\t\t\tif (!phase1 && !phase2) continue;\n\n\t\t\t\tfor (let i = 0; i < rings[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n\t\t\t\t\tthis.bondArom[b - 1] = true;\n\t\t\t\t}\n\n\t\t\t\tmask[n] = true;\n\t\t\t\tanyChange = true;\n\t\t\t}\n\n\t\t\tif (!anyChange) break;\n\t\t}\n\n\t\t// update the atom aromaticity flags\n\t\tfor (let n = 0; n < this.bondArom.length; n++) if (this.bondArom[n])\n\t\t{\n\t\t\tthis.atomArom[mol.bondFrom(n + 1) - 1] = true;\n\t\t\tthis.atomArom[mol.bondTo(n + 1) - 1] = true;\n\t\t}\n\t}\n\n\t// relaxed aromaticity: based on strict aromaticity, but extends to other small ring sizes; it is also reasonably\n\t// fast - there are no opportunities for exponential graph-walk blowups\n\tpublic calculateRelaxedAromaticity():void\n\t{\n\t\tlet mol = this.mol;\n\t\tthis.atomArom = Vec.booleanArray(false, mol.numAtoms);\n\t\tthis.bondArom = Vec.booleanArray(false, mol.numBonds);\n\n\t\tthis.ensurePiAtoms();\n\t\tconst na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet electrons = Vec.numberArray(0, na); // # lone pair electrons available for donating into the ring; >=2 qualifies\n\t\tlet exocyclic = Vec.booleanArray(false, na); // true=has a double bond that sticks out of the ring block\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(n);\n\t\t\telectrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n\t\t\t\t\t\t\t- mol.atomUnpaired(n);\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tconst bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n\t\t\telectrons[bfr - 1] -= bo;\n\t\t\telectrons[bto - 1] -= bo;\n\t\t\tif (bo == 2)\n\t\t\t{\n\t\t\t\tconst rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n\t\t\t\tif (rblk1 > 0 && rblk1 != rblk2) exocyclic[bfr - 1] = true;\n\t\t\t\tif (rblk2 > 0 && rblk2 != rblk1) exocyclic[bto - 1] = true;\n\t\t\t}\n\t\t}\n\n\t\t// compile candidate rings: all atoms must have some potentially qualifying pi-action doing on\n\n\t\tlet rings:number[][] = [];\n\t\tfor (let rsz = 3; rsz <= 7; rsz++) for (let rng of mol.findRingsOfSize(rsz))\n\t\t{\n\t\t\tlet valid = true;\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tconst a = rng[n];\n\t\t\t\tif (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1])\n\t\t\t\t{\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n\t\t\t\tlet bo = mol.bondOrder(b);\n\t\t\t\tif (bo != 1 && bo != 2)\n\t\t\t\t{\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valid) rings.push(rng);\n\t\t}\n\n\t\t// keep processing rings, until no new ones are found\n\n\t\twhile (rings.length > 0)\n\t\t{\n\t\t\tlet anyChange = false;\n\n\t\t\tfor (let n = 0; n < rings.length; n++)\n\t\t\t{\n\t\t\t\tlet r = rings[n];\n\n\t\t\t\tlet paths = [0];\n\t\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t\t{\n\t\t\t\t\tconst a = r[i];\n\t\t\t\t\tconst b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n\t\t\t\t\tconst b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n\t\t\t\t\tif (this.bondArom[b1 - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\t// contemplate with or without extra pi-bond\n\t\t\t\t\t\tfor (let j = paths.length - 1; j >= 0; j--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst e = paths[j] + 2;\n\t\t\t\t\t\t\tif (paths.indexOf(e) < 0) paths = Vec.append(paths, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (mol.bondOrder(b1) == 2) Vec.addTo(paths, 2);\n\t\t\t\t\telse if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1) Vec.addTo(paths, 2);\n\t\t\t\t}\n\n\t\t\t\t// see if there's anything Hueckel (4N+2) buried in there\n\t\t\t\tlet arom = false;\n\t\t\t\tfor (let e of paths)\n\t\t\t\t{\n\t\t\t\t\tif (e == 2 && r.length == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tarom = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // N==0 case only for 3 membered rings, e.g. cyclopropylium\n\t\t\t\t\tif (e == 6)\n\t\t\t\t\t{\n\t\t\t\t\t\tarom = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// (anything bigger does not apply, because only using small rings)\n\t\t\t\t}\n\t\t\t\tif (arom)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < r.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n\t\t\t\t\t\tthis.atomArom[a - 1] = true;\n\t\t\t\t\t\tthis.bondArom[b - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\trings.splice(n, 1);\n\t\t\t\t\tn--;\n\t\t\t\t\tanyChange = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anyChange) break;\n\t\t}\n\t}\n\n\t/*\n\t// extended Hueckel aromaticity: any ring pathway which meets the 4n+2 PI electron rule, counting double bonds and\n\t// lone pairs, is classified as aromatic\n\tpublic void calculateExtendedAromaticity() throws MoleculeCalcException\n\t{\n\t\t// !!\n\t\tthrow new MoleculeCalcException(\"Hueckel aromaticity: not implemented yet\");\n\t}*/\n\n\t// goes through the atoms and bonds, and determines \"geometry rubric\" sequences for those that are considered to\n\t// be potentially stereo-active; chemical judgment calls are made within this method\n\t// NOTE: it is a good idea to calculate aromaticity first, since it can affect atom classification\n\tpublic calculateStereoRubric():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tthis.rubricTetra = new Array(na);\n\t\tthis.rubricSquare = new Array(na);\n\t\tthis.rubricBipy = new Array(na);\n\t\tthis.rubricOcta = new Array(na);\n\t\tthis.rubricSides = new Array(nb);\n\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n\t\t\tlet adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n\t\t\tlet ninc = 0, ndec = 0;\n\t\t\tfor (let b of mol.atomAdjBonds(n))\n\t\t\t{\n\t\t\t\tif (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n) ninc++;\n\t\t\t\telse if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n) ndec++;\n\t\t\t}\n\n\t\t\t// p-block atoms with 4 neighbours (1 of which can be implicit H) are allowed tetrahedral chirality\n\t\t\t// (or more stringent requirements for d- & f-block)\n\t\t\tif (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0)))\n\t\t\t{\n\t\t\t\tthis.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\t}\n\t\t\telse if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1)\n\t\t\t{\n\t\t\t\tthis.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\t}\n\n\t\t\t// d- & f-block atoms with 4 neighbours can have square planar constraints\n\t\t\tif (blk >= 3 && adjc == 4 && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n\t\t\t}\n\n\t\t\t// d- and f-block atoms with 4 or 5 neighbours can have trigonal bipyramidal constraints\n\t\t\tif (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n\t\t\t}\n\n\t\t\t// d- & f-block atoms with 5 or 6 neighbours can have octahedral constraints\n\t\t\t// (as can p-block atoms with 6 neighbours)\n\t\t\tif (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n\t\t\t}\n\t\t\telse if (blk == 2 && adjc == 6 && hc == 0)\n\t\t\t{\n\t\t\t\tthis.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n\t\t\t}\n\t\t}\n\n\t\t// certain double bonds are considered to have restricted rotation constraints\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n)) continue;\n\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n\t\t\tlet blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n\t\t\tlet adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n\t\t\tlet adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n\n\t\t\t// if both sides of the bond are p-block atoms, and have 2 substituents, can be side-constrained\n\t\t\t// (note: things like C=N-, with potentially constrained lone pairs, are not considered)\n\t\t\tif (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1))\n\t\t\t{\n\t\t\t\tthis.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n\t\t\t}\n\t\t}\n\t}\n\n\t// removes all hydrogens from the molecule, cloning it anything changes; if this is called after the aromaticity/stereochemistry is calculated, these will be\n\t// remapped as necessary\n\tpublic removeHydrogens():void\n\t{\n\t\tlet mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n\t\tfor (let n = 1; n <= na; n++) if (MolUtil.boringHydrogen(mol, n))\n\t\t{\n\t\t\tatomMask[n - 1] = false;\n\t\t\tbondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n\t\t}\n\t\tif (Vec.allTrue(atomMask)) return;\n\n\t\tmol = MolUtil.subgraphMask(mol, atomMask);\n\n\t\tif (this.atomArom) this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n\t\tif (this.bondArom) this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n\n\t\tif (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides)\n\t\t{\n\t\t\tif (this.rubricTetra) this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n\t\t\tif (this.rubricSquare) this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n\t\t\tif (this.rubricBipy) this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n\t\t\tif (this.rubricOcta) this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n\t\t\tif (this.rubricSides) this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n\n\t\t\tlet atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricTetra); n++) if (this.rubricTetra[n]) this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricSquare); n++) if (this.rubricSquare[n]) this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricBipy); n++) if (this.rubricBipy[n]) this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricOcta); n++) if (this.rubricOcta[n]) this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n\t\t\tfor (let n = 0; n < Vec.len(this.rubricSides); n++) if (this.rubricSides[n]) this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n\t\t}\n\n\t\t// (... recreate anything else that's affected)\n\t}\n\n\t// defines the \"skeleton hash\" field, for prescreening\n\tpublic calculateSkeletonHash():void\n\t{\n\t\tif (MetaMolecule.skeletonHash == null) throw 'Skeleton hash not available.';\n\t\tthis.hash = MetaMolecule.skeletonHash(this.mol);\n\t}\n\n\t// define the \"heavy hash\": like for skeleton, but with explicit hydrogens removed\n\tpublic calculateHeavyHash():void\n\t{\n\t\tlet anyH = false;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (this.mol.atomElement(n) == 'H') {anyH = true; break;}\n\t\tif (!anyH)\n\t\t{\n\t\t\tthis.heavyHash = this.getSkeletonHash();\n\t\t\treturn;\n\t\t}\n\n\t\tlet hvy = this.mol.clone();\n\t\tfor (let n = hvy.numAtoms; n >= 1; n--) if (hvy.atomElement(n) == 'H') hvy.deleteAtomAndBonds(n);\n\t\tthis.heavyHash = MetaMolecule.skeletonHash(hvy);\n\t}\n\n\t// access to aromaticity: either by 1-based single index, or grabbing the whole array\n\tpublic isAtomAromatic(atom:number):boolean\n\t{\n\t\treturn this.atomArom == null ? false : this.atomArom[atom - 1];\n\t}\n\tpublic isBondAromatic(bond:number):boolean\n\t{\n\t\treturn this.bondArom == null ? false : this.bondArom[bond - 1];\n\t}\n\n\t// modified version of bond order: returns -1 to encode for aromaticity; if not aromatic, or aromaticity wasn't calculated,\n\t// this is the same as the regular bond order\n\tpublic bondOrderArom(bond:number):number\n\t{\n\t\treturn this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n\t}\n\n\tpublic getAtomAromaticity():boolean[]\n\t{\n\t\treturn this.atomArom == null ? null : this.atomArom.slice(0);\n\t}\n\tpublic getBondAromaticity():boolean[]\n\t{\n\t\treturn this.bondArom == null ? null : this.bondArom.slice(0);\n\t}\n\n\t// cached access to hash-type properties: first invocation slow, after that fast\n\tpublic getSkeletonHash():string\n\t{\n\t\tif (this.hash == null) this.calculateSkeletonHash();\n\t\treturn this.hash;\n\t}\n\tpublic getHeavyHash():string\n\t{\n\t\tif (this.heavyHash == null) this.calculateHeavyHash();\n\t\treturn this.heavyHash;\n\t}\n\tpublic getDotPath():DotPath\n\t{\n\t\tif (this.dots == null) this.dots = new DotPath(this.mol);\n\t\treturn this.dots;\n\t}\n\n\tpublic getUniqueElements():string[]\n\t{\n\t\tif (this.uniqueElements == null)\n\t\t{\n\t\t\tthis.uniqueElements = [];\n\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet el = this.mol.atomElement(n);\n\t\t\t\tif (this.uniqueElements.indexOf(el) < 0) this.uniqueElements.push(el);\n\t\t\t}\n\t\t}\n\t\treturn this.uniqueElements;\n\t}\n\n\t// equivalence: assumes that both metavectors have been marked up according to the same additional into, i.e.\n\t// aromaticity, stereo, etc.; it will try to resolve the equivalence and get to the answer as quickly as possible,\n\t// with the isomorphism test being the final option\n\tpublic equivalentTo(other:MetaMolecule, timeout = 1000):boolean\n\t{\n\t\tif (MetaMolecule.isomorphMatch == null) throw 'Isomorph search unavailable.';\n\n\t\t// phase 1: different atom/bond counts, don't waste any time\n\t\tif (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds) return false;\n\n\t\t// phase 2: make sure both hashes are generated, and use to screen\n\t\tif (this.hash == null) this.calculateSkeletonHash();\n\t\tif (other.hash == null) other.calculateSkeletonHash();\n\t\tif (this.hash != other.hash) return false;\n\n\t\t// phase 3: if molecules are literally equal, no need to get fancy\n\t\tif (this.mol.compareTo(other.mol) == 0) return true;\n\n\t\t// phase 4: check if any elements are unique on either side\n\t\tlet uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n\t\tfor (let n = 0; n < uniq1.length; n++)\n\t\t{\n\t\t\tif (!uniq2.includes(uniq1[n])) return false;\n\t\t}\n\t\n\t\t// phase 5: the most laborious part, finding any isomorphism\n\t\treturn MetaMolecule.isomorphMatch(this, other, timeout);\n\t}\n\n\t// convenience constructor alternatives\n\tpublic static createRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\tpublic static createStrict(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStrictAromaticity();\n\t\treturn meta;\n\t}\n\n\tpublic static createStrictRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateStrictAromaticity();\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\tpublic static createRelaxed(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateRelaxedAromaticity();\n\t\treturn meta;\n\t}\n\n\tpublic static createRelaxedRubric(mol:Molecule):MetaMolecule\n\t{\n\t\tif (mol == null) return null;\n\t\tlet meta = new MetaMolecule(mol);\n\t\tmeta.calculateRelaxedAromaticity();\n\t\tmeta.calculateStereoRubric();\n\t\treturn meta;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// define pi-atoms, if not already\n\tprivate ensurePiAtoms():void\n\t{\n\t\tif (this.piAtom != null) return;\n\t\tthis.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++) if (this.mol.bondOrder(n) == 2)\n\t\t{\n\t\t\t{\n\t\t\t\tthis.piAtom[this.mol.bondFrom(n) - 1] = true;\n\t\t\t\tthis.piAtom[this.mol.bondTo(n) - 1] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {CoordUtil} from './CoordUtil';\nimport {Graph} from './Graph';\nimport {Molecule} from './Molecule';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {SketchUtil} from './SketchUtil';\n\n/*\n\tMolUtil: static methods for calculating molecule properties.\n*/\n\nexport class MolUtil\n{\n\tpublic static isBlank(mol:Molecule):boolean\n\t{\n\t\t//return mol == null || mol.numAtoms == 0;\n\t\tif (mol == null) return true;\n\t\treturn mol.numAtoms == 0;\n\t}\n\tpublic static notBlank(mol:Molecule):boolean\n\t{\n\t\t//return mol != null || mol.numAtoms > 0;\n\t\tif (mol == null) return false;\n\t\treturn mol.numAtoms > 0;\n\t}\n\n\t// substitutes an empty molecule for null\n\tpublic static orBlank(mol:Molecule):Molecule {return mol == null ? new Molecule() : mol;}\n\n\t// conventions for special-atoms\n\tpublic static TEMPLATE_ATTACHMENT = 'X'; // use the label 'X' to denote attachments when defining templates\n\tpublic static ABBREV_ATTACHMENT = '*'; // within abbreviations, use '*' to denote the placeholder superimposition\n\n\t// returns true if there are any abbreviations\n\tpublic static hasAnyAbbrev(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n)) return true;\n\t\treturn false;\n\t}\n\n\t// returns true if the atom index is an inline abbreviation\n\tpublic static hasAbbrev(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra == null ? 0 : extra.length); n++) if (extra[n].startsWith('a')) return true;\n\t\treturn false;\n\t}\n\n\t// if the molecule has a template abbreviation encoded at the given atom, it will be parsed into a fragment instance and\n\t// returned; for the embedded fragment, atom#1 is considered to be the site of attachment\n\tpublic static getAbbrev(mol:Molecule, atom:number):Molecule\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a'))\n\t\t{\n\t\t\treturn Molecule.fromString(extra[n].substring(1));\n\t\t}\n\t\treturn null;\n\t}\n\n\t// sets the abbreviation-template for the given atom number, eliminating any existing template at that point\n\tpublic static setAbbrev(mol:Molecule, atom:number, frag:Molecule):void\n\t{\n\t\tlet attidx = 0;\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT)\n\t\t{\n\t\t\t//if (attidx > 0) throw 'Multiple attachment points indicated: invalid.';\n\t\t\tattidx = n;\n\t\t\tbreak;\n\t\t}\n\t\tif (attidx == 0) throw 'No attachment points indicated.';\n\t\tif (attidx >= 2)\n\t\t{\n\t\t\tfrag = frag.clone();\n\t\t\tfrag.swapAtoms(attidx, 1);\n\t\t}\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tif (adj.length > 1) throw 'Setting abbreviation for non-terminal atom.';\n\t\tif (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0)\n\t\t{\n\t\t\tlet b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n\t\t\tlet b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n\t\t\tmol.setBondOrder(b1, frag.bondOrder(b2));\n\t\t}\n\n\t\t// finally we're allowed to set it\n\t\tlet extra = mol.atomExtra(atom);\n\t\tlet idx = -1;\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a')) {idx = n; break;}\n\t\tif (idx < 0) idx = extra.push(null) - 1;\n\n\t\textra[idx] = 'a' + frag.toString();\n\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\n\t// any invalid abbreviations will be cleared out\n\tpublic static validateAbbrevs(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tif (mol.atomAdjCount(n) > 1) MolUtil.clearAbbrev(mol, n);\n\t\t\tif (mol.atomCharge(n) != 0) mol.setAtomCharge(n, 0);\n\t\t\tif (mol.atomUnpaired(n) != 0) mol.setAtomUnpaired(n, 0);\n\t\t\tif (mol.atomIsotope(n) != 0) mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n\t\t}\n\t}\n\n\t// converts a partitioned molecule into a molecule with a subsumed abbreviation; srcmask defines all the atoms which are NOT part\n\t// of the abbreviation; the resulting molecule will contain all of these, plus a new one that has been created to hold the\n\t// abbreviation; the molecule  must be partitioned so that there is exactly 1 source atom attached to all of the abbreviations\n\t// NOTE: returns null if the template creation is invalid\n\tpublic static convertToAbbrev(mol:Molecule, srcmask:boolean[], abbrevName:string):Molecule\n\t{\n\t\tlet molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n\t\treturn molidx ? molidx[0] : null;\n\t}\n\tpublic static convertToAbbrevIndex(mol:Molecule, srcmask:boolean[], abbrevName:string):[Molecule, number]\n\t{\n\t\tlet junction = 0;\n\t\tlet polymerExtra:string[] = null; // just in case the abbreviation has polymer information\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n\t\t\tif (srcmask[b1 - 1] && !srcmask[b2 - 1])\n\t\t\t{\n\t\t\t\tatom = b1;\n\t\t\t\tpolymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n\t\t\t}\n\t\t\telse if (!srcmask[b1 - 1] && srcmask[b2 - 1])\n\t\t\t{\n\t\t\t\tatom = b2;\n\t\t\t\tpolymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n\t\t\t}\n\n\t\t\tif (atom == 0) continue;\n\n\t\t\tif (junction > 0 && atom != junction) return [null, null];\n\t\t\tjunction = atom;\n\t\t}\n\t\tif (junction == 0) return [null, null];\n\n\t\t// refine the partition based on the junction, and derive reference indices\n\t\tlet na = mol.numAtoms, molidx = 0, fragidx = 0;\n\t\tlet maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tmaskmol[n] = srcmask[n];\n\t\t\tmaskfrag[n] = !srcmask[n] || n + 1 == junction;\n\t\t\tif (maskmol[n] && n + 1 <= junction) molidx++;\n\t\t\tif (maskfrag[n] && n + 1 <= junction) fragidx++;\n\t\t}\n\n\t\t// sometimes stereo info is preserved\n\t\tlet bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n\t\tfor (let a of mol.atomAdjList(junction)) if (!srcmask[a - 1])\n\t\t{\n\t\t\tif (nadj != 0) {bondType = Molecule.BONDTYPE_NORMAL; break;}\n\t\t\tlet b = mol.findBond(junction, a);\n\t\t\tif (mol.bondFrom(b) == junction) bondType = mol.bondType(b);\n\t\t\tnadj++;\n\t\t}\n\n\t\t// create and analyse the fragment\n\t\tlet frag = MolUtil.subgraphMask(mol, maskfrag);\n\t\tfrag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n\t\tfrag.setAtomCharge(fragidx, 0);\n\t\tfrag.setAtomUnpaired(fragidx, 0);\n\t\tfrag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomMapNum(n, 0);\n\t\tfrag.setAtomExtra(fragidx, []);\n\t\tfrag.setAtomTransient(fragidx, []);\n\t\tlet adj = frag.atomAdjList(fragidx);\n\t\tlet x = 0, y = 0, inv = 1.0 / adj.length;\n\t\tlet bondOrder = 1;\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tx += frag.atomX(adj[n]);\n\t\t\ty += frag.atomY(adj[n]);\n\t\t\tlet b = frag.findBond(fragidx, adj[n]);\n\t\t\tif (n == 0) bondOrder = frag.bondOrder(b);\n\t\t\telse if (bondOrder != frag.bondOrder(b)) bondOrder = 1;\n\t\t}\n\t\tx *= inv; y *= inv;\n\t\tif (fragidx > 1) frag.swapAtoms(fragidx, 1);\n\n\t\t// create the excised molecule, and add in the fragment\n\t\tlet newmol = MolUtil.subgraphMask(mol, maskmol);\n\t\tlet\tnewatom = newmol.addAtom(abbrevName, x, y);\n\t\tnewmol.addBond(molidx, newatom, bondOrder, bondType);\n\t\tMolUtil.setAbbrev(newmol, newatom, frag);\n\t\tif (polymerExtra != null) newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n\n\t\treturn [newmol, newatom];\n\t}\n\n\t// hunts through any abbreviations, and expands them out to form actual atoms; the resulting representation is fair game for things\n\t// like MF/MW calculations, or any other pure-atom property calculation; if alignCoords is true, it will line up the positions of\n\t// the new atoms; if false, the algorithm will burn up less cycles; note that abbreviations-within-abbreviations are handled by\n\t// repeated iteration until there are none left\n\tpublic static expandAbbrevs(mol:Molecule, alignCoords:boolean):void\n\t{\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t\t{\n\t\t\t\tif (MolUtil.expandOneAbbrev(mol, n, alignCoords)) anything = true;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// very common convenience function: if has abbreviations, clone and expand; otherwise return self\n\tpublic static expandedAbbrevs(mol:Molecule):Molecule\n\t{\n\t\tif (!this.hasAnyAbbrev(mol)) return mol;\n\t\tmol = mol.clone();\n\t\tthis.expandAbbrevs(mol, true);\n\t\treturn mol;\n\t}\n\n\t// expands the abbreviation for a single atom; the atom itself is deleted, and the expanded content is added to the end of the molecule; if for some\n\t// reason the abbreviation is invalid, will clear the abbreviation instead\n\t// return value: if something happened, mask of true = part of the expansion (including the new placeholder atom); if nothing happened, returns null\n\tpublic static expandOneAbbrev(mol:Molecule, atom:number, alignCoords:boolean):boolean[]\n\t{\n\t\tlet frag = MolUtil.getAbbrev(mol, atom);\n\t\tif (frag == null) return null;\n\t\tif (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0)\n\t\t{\n\t\t\tMolUtil.clearAbbrev(mol, atom);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet m = mol.atomMapNum(atom);\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomMapNum(n, 0);\n\t\tif (m > 0) for (let n of frag.atomAdjList(1)) frag.setAtomMapNum(n, m);\n\n\t\treturn MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n\t}\n\tpublic static expandOneAbbrevFrag(mol:Molecule, atom:number, frag:Molecule, alignCoords:boolean):boolean[]\n\t{\n\t\tlet polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n\n\t\tlet nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n\t\tlet connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n\t\tif (connBond > 0)\n\t\t{\n\t\t\tconnType = mol.bondType(connBond);\n\t\t\tif (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED)) connType = Molecule.BONDTYPE_NORMAL;\n\t\t}\n\n\t\tif (alignCoords)\n\t\t{\n\t\t\tlet vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n\t\t\tlet adj = frag.atomAdjList(1);\n\t\t\tlet vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tvx2 += frag.atomX(adj[n]) - frag.atomX(1);\n\t\t\t\tvy2 += frag.atomY(adj[n]) - frag.atomY(1);\n\t\t\t}\n\t\t\tvx2 *= inv;\n\t\t\tvy2 *= inv;\n\t\t\tlet th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n\t\t\tCoordUtil.rotateMolecule(frag, th1 - th2);\n\t\t\tCoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n\t\t}\n\n\t\tif (polymerExtra != null)\n\t\t{\n\t\t\tfor (let n = 1; n <= frag.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet extra = frag.atomExtra(n);\n\t\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (polymerExtra.indexOf(extra[i]) >= 0) extra.splice(i, 1);\n\t\t\t\tfrag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n\t\t\t}\n\t\t}\n\n\t\tlet join = mol.numAtoms + 1;\n\t\tmol.append(frag);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tif (mol.bondFrom(n) == join)\n\t\t\t{\n\t\t\t\tmol.setBondFrom(n, nbr);\n\t\t\t\tmol.setBondType(n, connType);\n\t\t\t}\n\t\t\telse if (mol.bondTo(n) == join)\n\t\t\t{\n\t\t\t\tmol.setBondFromTo(n, nbr, mol.bondFrom(n));\n\t\t\t\tmol.setBondType(n, connType);\n\t\t\t}\n\t\t}\n\n\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let n = mask.length - frag.numAtoms; n < mask.length; n++) mask[n] = true;\n\t\tmol.deleteAtomAndBonds(join);\n\t\tmol.deleteAtomAndBonds(atom);\n\t\tmask.splice(join - 1, 1);\n\t\tmask.splice(atom - 1, 1);\n\t\treturn mask;\n\t}\n\n\t// removes the abbreviation from a molecule, if there is one; also, the element symbol will be set to \"C\" when there is\n\t// any clearing to be done\n\tpublic static clearAbbrev(mol:Molecule, atom:number):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = 0; n < (extra != null ? extra.length : 0); n++) if (extra[n].startsWith('a'))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmol.setAtomExtra(atom, extra);\n\t\t\tmol.setAtomElement(atom, 'C');\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// equivalent to the Molecule method of same name, except trashes the abbreviation of the \"element\" symbol has changed\n\tpublic static setAtomElement(mol:Molecule, atom:number, el:string):void\n\t{\n\t\tif (mol.atomElement(atom) == el) return;\n\t\tthis.clearAbbrev(mol, atom);\n\t\tmol.setAtomElement(atom, el);\n\t}\n\n\t// equivalent to the Molecule method of same name, except that if either of the atoms are about to exceed divalence, its\n\t// abbreviation gets zapped; also, if the bond was already there, zaps the old one\n\tpublic static addBond(mol:Molecule, bfr:number, bto:number, order:number, type?:number):number\n\t{\n\t\tif (type == null) type = Molecule.BONDTYPE_NORMAL;\n\t\tif (mol.atomAdjCount(bfr) >= 1) this.clearAbbrev(mol, bfr);\n\t\tif (mol.atomAdjCount(bto) >= 1) this.clearAbbrev(mol, bto);\n\t\tlet b = mol.findBond(bfr, bto);\n\t\tif (b > 0) mol.deleteBond(b);\n\t\treturn mol.addBond(bfr, bto, order, type);\n\t}\n\n\t// returns a molecule which is smaller than the current one, according to the mask (which must be of size #atoms); boundary cases\n\t// are a null molecule or cloned copy\n\tpublic static subgraphMask(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tlet invidx:number[] = [];\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < mol.numAtoms; n++)\n\t\t{\n\t\t\tif (mask[n]) invidx.push(++sum); else invidx.push(0);\n\t\t}\n\t\tif (sum == 0) return new Molecule();\n\t\tif (sum == mol.numAtoms) return mol.clone();\n\n\t\tlet frag = new Molecule();\n\t\tfrag.keepTransient = true;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n\t\t\tfrag.setAtomIsotope(num, mol.atomIsotope(n));\n\t\t\tfrag.setAtomHExplicit(num, mol.atomHExplicit(n));\n\t\t\tfrag.setAtomMapNum(num, mol.atomMapNum(n));\n\t\t\tfrag.setAtomExtra(num, mol.atomExtra(n));\n\t\t\tfrag.setAtomTransient(num, mol.atomTransient(n));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n\t\t\tif (bfr > 0 && bto > 0)\n\t\t\t{\n\t\t\t\tlet num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n\t\t\t\tfrag.setBondExtra(num, mol.bondExtra(n));\n\t\t\t\tfrag.setBondTransient(num, mol.bondTransient(n));\n\t\t\t}\n\t\t}\n\n\t\tfrag.keepTransient = mol.keepTransient;\n\t\treturn frag;\n\t}\n\n\t// given a list of indices, constructs a new molecule which has the atoms in that order; the construction of idx[n] is such\n\t// that the new atom at position {n+1} will be the atom previously located at idx[n]; for example, a molecule containing the\n\t// atoms [C,O,N,H], reordered by indices of [3,2,4,1], will produce a new molecule with atoms [N,O,H,C]; the bonds will also\n\t// be correctly remapped; idx.length must be equal to or less than the number of atoms; each index must be unique and\n\t// in the range {1..#atoms}, otherwise the result is undefined\n\tpublic static subgraphIndex(mol:Molecule, idx:number[]):Molecule\n\t{\n\t\tlet invidx = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = 0; n < invidx.length; n++) invidx[n] = 0;\n\t\tfor (let n = 0; n < idx.length; n++) invidx[idx[n] - 1] = n + 1;\n\n\t\tlet frag = new Molecule();\n\t\tfrag.keepTransient = true;\n\n\t\tfor (let n = 0; n < idx.length; n++)\n\t\t{\n\t\t\tlet num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n\t\t\tfrag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n\t\t\tfrag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n\t\t\tfrag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n\t\t\tfrag.setAtomExtra(num, mol.atomExtra(idx[n]));\n\t\t\tfrag.setAtomTransient(num, mol.atomTransient(idx[n]));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n\t\t\tif (bfr > 0 && bto > 0)\n\t\t\t{\n\t\t\t\tlet num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n\t\t\t\tfrag.setBondExtra(num, mol.bondExtra(n));\n\t\t\t\tfrag.setBondTransient(num, mol.bondTransient(n));\n\t\t\t}\n\t\t}\n\n\t\tfrag.keepTransient = mol.keepTransient;\n\t\treturn frag;\n\t}\n\n\t// a specialised version of mask subgraph: any atoms which are not in the mask, but are bonded to atoms which are in the\n\t// mask, are converted to the element \"X\" and included in the result; this makes them potentially more useful as template fragments\n\tpublic static subgraphWithAttachments(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tlet xmask = mask.slice(0);\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (mask[bfr] && !mask[bto]) xmask[bto] = true;\n\t\t\telse if (mask[bto] && !mask[bfr]) xmask[bfr] = true;\n\t\t}\n\t\tlet xmol = mol.clone();\n\t\tfor (let n = 1; n <= xmol.numAtoms; n++) if (xmask[n - 1] && !mask[n - 1])\n\t\t{\n\t\t\txmol.setAtomElement(n, 'X');\n\t\t\txmol.setAtomCharge(n, 0);\n\t\t\txmol.setAtomUnpaired(n, 0);\n\t\t\txmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n\t\t\txmol.setAtomExtra(n, []);\n\t\t}\n\t\treturn MolUtil.subgraphMask(xmol, xmask);\n\t}\n\n\t// appends the fragment to the molecule, and makes a token effort to arrange the atom positions so they are along the X-axis\n\tpublic static append(mol:Molecule, frag:Molecule):void\n\t{\n\t\tlet boxm = mol.boundary(), boxf = frag.boundary();\n\t\tlet dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n\t\tlet dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n\t\tlet top = mol.numAtoms;\n\t\tmol.append(frag);\n\t\tfor (let n = top + 1; n <= mol.numAtoms; n++) mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n\t}\n\n\t/*\n\t// works similarly to reorderAtoms(..) above, except operates on the order of the bond list; the atoms are unaffected\n\tpublic Molecule reorderedBonds(Molecule mol, int[] idx)\n\t{\n\t\tMolecule newmol = new Molecule();\n\t\tfor (int n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tint num = newmol.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n\t\t\tnewmol.setAtomHExplicit(num, mol.atomHExplicit(n));\n\t\t\tnewmol.setAtomMapNum(num, mol.atomMapNum(n));\n\t\t\tnewmol.setAtomExtra(num, mol.atomExtra(n));\n\t\t}\n\t\tfor (int n = 0; n < idx.length; n++)\n\t\t{\n\t\t\tint num = newmol.addBond(mol.bondFrom(idx[n]), mol.bondTo(idx[n]), mol.bondOrder(idx[n]), mol.bondType(idx[n]));\n\t\t\tnewmol.setBondExtra(num, mol.bondExtra(idx[n]));\n\t\t}\n\n\t\treturn newmol;\n\t}*/\n\n\t// returns a new molecule which has the indicated atom indices removed; note that the index list does not need to be ordered, and\n\t// duplicates are OK\n\tpublic static deleteAtoms(mol:Molecule, idx:number[]):Molecule\n\t{\n\t\tlet mask = Vec.booleanArray(true, mol.numAtoms);\n\t\tfor (let n = 0; n < idx.length; n++) mask[idx[n] - 1] = false;\n\t\treturn MolUtil.subgraphMask(mol, mask);\n\t}\n\n\t// produces a list of connected components for the molecule; the immediate size of the return value is the number of components;\n\t// each of the sub arrays is a list of indices for that component; the return value has 1-based indices\n\tpublic static componentList(mol:Molecule):number[][]\n\t{\n\t\tlet sz = mol.numAtoms;\n\t\tif (sz == 0) return null;\n\t\tlet g = Graph.fromMolecule(mol);\n\n\t\tlet groups = g.calculateComponentGroups();\n\t\tfor (let grp of groups) Vec.addTo(grp, 1); // 1-based rather than zero\n\t\treturn groups;\n\t}\n\n\t// obtain groups of atom indices, each of which represents a \"side\" of atoms which are hanging \"off\" a central atom; if the central\n\t// atom has N neighbors and is not in a ring, then there will be N groups of atoms returned; if the atom is part of a ring block,\n\t// then the number of sides will be less than the number of neighbours; the returned arrays are 1-based\n\tpublic static getAtomSides(mol:Molecule, atom:number):number[][]\n\t{\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tlet cc = g.calculateComponents();\n\t\tlet mask:boolean[] = [];\n\t\tfor (let n = 0; n < cc.length; n++) mask.push(cc[n] == cc[atom - 1]);\n\t\tmask[atom - 1] = false;\n\n\t\tlet oldmap = Vec.maskIdx(mask);\n\t\tg.keepNodesMask(mask);\n\t\tcc = g.calculateComponents();\n\t\tlet ccmax = Vec.max(cc);\n\n\t\tlet grps:number[][] = [];\n\t\tfor (let n = 0; n < ccmax; n++) grps.push([atom]);\n\t\tfor (let n = 0; n < cc.length; n++) grps[cc[n] - 1].push(oldmap[n] + 1);\n\n\t\treturn grps;\n\t}\n\n\t// returns the groups of atoms which are on the \"bond from\" and \"bond to\" sides of the indicated bond, if bond is not a ring:\n\t//   A   B\n\t//    \\_/\t\t\t2 groups returned: (A,A) and (B,B)\n\t//    / \\\t\t\tthe number of groups returned is guaranteed to be 0, 1 or 2\n\t//   A   B\n\t// if the bond is in a ring, then the groups are composed by disconnecting the bond and returning each remaining component, chopped\n\t// up according to ring block membership\n\tpublic static getBondSides(mol:Molecule, bond:number):number[][]\n\t{\n\t\tlet bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n\t\tlet inRing = mol.bondInRing(bond); // !! mol.atomRingBlock(bf)>0 && mol.atomRingBlock(bf)==mol.atomRingBlock(bt);\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tlet cc = g.calculateComponents();\n\t\tlet mask:boolean[] = [];\n\t\tfor (let n = 0; n < cc.length; n++) mask.push(cc[n] == cc[bf - 1]);\n\t\tif (!inRing) g.removeEdge(bf - 1, bt - 1);\n\t\telse {mask[bf - 1] = false; mask[bt - 1] = false;}\n\n\t\tlet oldmap = Vec.maskIdx(mask);\n\t\tg.keepNodesMask(mask);\n\t\tcc = g.calculateComponents();\n\t\tlet ccmax = Vec.max(cc);\n\n\t\tlet grps:number[][] = [];\n\t\tfor (let n = 0; n < ccmax; n++)\n\t\t{\n\t\t\tgrps[n] = [];\n\t\t\tif (inRing) {grps[n].push(bf); grps[n].push(bt);}\n\t\t}\n\t\tfor (let n = 0; n < cc.length; n++) grps[cc[n] - 1].push(oldmap[n] + 1);\n\n\t\treturn grps;\n\t}\n\n\t// returning flat arrays of atom properties: doing this before a geometry operation can boost performance considerably\n\tpublic static arrayAtomX(mol:Molecule):number[]\n\t{\n\t\tlet x = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = x.length - 1; n >= 0; n--) x[n] = mol.atomX(n + 1);\n\t\treturn x;\n\t}\n\tpublic static arrayAtomY(mol:Molecule):number[]\n\t{\n\t\tlet y = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = y.length - 1; n >= 0; n--) y[n] = mol.atomY(n + 1);\n\t\treturn y;\n\t}\n\tpublic static arrayAtomMapNum(mol:Molecule):number[]\n\t{\n\t\tlet mapnum = Vec.numberArray(0, mol.numAtoms);\n\t\tfor (let n = mapnum.length - 1; n >= 0; n--) mapnum[n] = mol.atomMapNum(n + 1);\n\t\treturn mapnum;\n\t}\n\n\t// calculates the molecular formula\n\tpublic static molecularFormula(mol:Molecule, punctuation?:boolean | string[]):string\n\t{\n\t\tlet puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n\t\tif (punctuation == true) [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n\t\telse if (punctuation instanceof Array)\n\t\t{\n\t\t\tpuncEnter = punctuation[0];\n\t\t\tpuncExit = punctuation[1];\n\t\t\tpuncEnterSuper = punctuation[2];\n\t\t\tpuncExitSuper = punctuation[3];\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tMolUtil.expandAbbrevs(mol, false);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet countC = 0, countH = 0;\n\t\tlet elements = Vec.stringArray('', mol.numAtoms);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tcountH += mol.atomHydrogens(n);\n\t\t\tlet el = mol.atomElement(n);\n\n\t\t\t// this is hacky, but at least isotopes are separated out; they should ideally be sorted just after their non-isotopes, in\n\t\t\t// numerical order\n\t\t\tif (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n\n\t\t\tif (el == 'C') countC++;\n\t\t\telse if (el == 'H') countH++;\n\t\t\telse elements[n - 1] = el;\n\t\t}\n\n\t\telements.sort();\n\n\t\tlet formula = '';\n\n\t\tif (countC > 0) formula += 'C';\n\t\tif (countC > 1)\n\t\t{\n\t\t\tif (punctuation) formula += puncEnter;\n\t\t\tformula += countC;\n\t\t\tif (punctuation) formula += puncExit;\n\t\t}\n\t\tif (countH > 0) formula += 'H';\n\t\tif (countH > 1)\n\t\t{\n\t\t\tif (punctuation) formula += puncEnter;\n\t\t\tformula += countH;\n\t\t\tif (punctuation) formula += puncExit;\n\t\t}\n\t\tfor (let n = 0; n < elements.length; n++) if (elements[n].length > 0)\n\t\t{\n\t\t\tlet count = 1;\n\t\t\tfor (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++) count++;\n\t\t\tformula += elements[n];\n\t\t\tif (count > 1)\n\t\t\t{\n\t\t\t\tif (punctuation) formula += puncEnter;\n\t\t\t\tformula += count;\n\t\t\t\tif (punctuation) formula += puncExit;\n\t\t\t}\n\t\t}\n\n\t\treturn formula.toString();\n\t}\n\n\t// calculates the molecular weight, using natural abundance as the default, or specific isotope otherwise\n\tpublic static molecularWeight(mol:Molecule):number\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tMolUtil.expandAbbrevs(mol, false);\n\t\t\tbreak;\n\t\t}\n\n\t\tlet mw = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tmw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n\n\t\t\tlet iso = mol.atomIsotope(n);\n\t\t\tif (iso != Molecule.ISOTOPE_NATURAL) {mw += iso; continue;}\n\n\t\t\tlet an = Molecule.elementAtomicNumber(mol.atomElement(n));\n\t\t\tif (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length) mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n\t\t}\n\n\t\treturn mw;\n\t}\n\n\t// looks for all cases where a bond {a1,a2} has duplicate(s), either of the {a1,a2} or {a2,a1} flavours; when this happens,\n\t// the duplicates are removed; if one of the bond violates maximum Lewis octet rule for (C/N/O), it gets zapped;\n\t// otherwise, keeps the bond with the highest order (second priority); or the most exotic type (third priority); or\n\t// failing that, first in first served\n\tpublic static removeDuplicateBonds(mol:Molecule):void\n\t{\n\t\tlet bpri:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n\t\t\tbpri.push(p);\n\t\t}\n\t\tlet bidx = Vec.idxSort(bpri);\n\n\t\tlet keepmask = Vec.booleanArray(false, bidx.length);\n\t\tlet p = 0;\n\t\twhile (p < bidx.length)\n\t\t{\n\t\t\tlet sz = 1;\n\t\t\twhile (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]]) sz++;\n\n\t\t\tlet best = p;\n\t\t\tfor (let n = p + 1; n < p + sz; n++) // (does nothing if not degenerate)\n\t\t\t{\n\t\t\t\tlet b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n\n\t\t\t\t// see if just one of the bonds assures Lewis violation on C/N/O\n\t\t\t\tlet a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n\t\t\t\tlet el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n\t\t\t\tlet limit1 = 0, limit2 = 0;\n\t\t\t\tif (el1 == 'C' || el1 == 'N') limit1 = 4;\n\t\t\t\telse if (el1 == 'O') limit1 = 3;\n\t\t\t\tif (el2 == 'C' || el2 == 'N') limit2 = 4;\n\t\t\t\telse if (el2 == 'O') limit2 = 3;\n\n\t\t\t\tif (limit1 > 0 || limit2 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n\t\t\t\t\tfor (let i = 1; i <= mol.numBonds; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1)) boB1A1 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2)) boB1A2 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1)) boB2A1 += mol.bondOrder(i);\n\t\t\t\t\t\tif (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2)) boB2A2 += mol.bondOrder(i);\n\t\t\t\t\t}\n\t\t\t\t\tlet bad1 = 0, bad2 = 0;\n\t\t\t\t\tif (limit1 > 0 && boB1A1 > limit1) bad1++;\n\t\t\t\t\tif (limit2 > 0 && boB1A2 > limit2) bad1++;\n\t\t\t\t\tif (limit1 > 0 && boB2A1 > limit1) bad2++;\n\t\t\t\t\tif (limit2 > 0 && boB2A2 > limit2) bad2++;\n\n\t\t\t\t\tif (bad1 < bad2) continue; // stick with current best\n\t\t\t\t\tif (bad1 > bad2) {best = n; continue;} // switch to new best\n\t\t\t\t}\n\n\t\t\t\t// otherwise pick the most interesting\n\t\t\t\tlet exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n\t\t\t\texotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n\t\t\t\texotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n\n\t\t\t\tif (exotic2 > exotic1) best = n;\n\t\t\t}\n\t\t\tkeepmask[bidx[best]] = true;\n\n\t\t\tp += sz;\n\t\t}\n\t\tfor (let n = mol.numBonds; n >= 1; n--)\n\t\t\tif (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n)) mol.deleteBond(n);\n\t}\n\n\t// calculates a weight for each atom relative to a starting atom, N; this is useful when deciding which atoms to move around,\n\t// i.e. those with higher weight should probably stay where they are; the algorithm is Morgan-like, in that atom values are\n\t// sequentially added to their neighbours, with the exception of atom N, which is a separating point\n\tpublic static calculateWalkWeight(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n\t\tfor (let n = 0; n < cc.length; n++) if (cc[n] == cc[atom - 1]) ccsz++;\n\n\t\tlet w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n\t\tw[atom - 1] = 0;\n\t\tfor (; ccsz > 0; ccsz--)\n\t\t{\n\t\t\tfor (let n = 0; n < mol.numAtoms; n++) wn[n] = w[n];\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n\t\t\t\tw[a1] += wn[a2] * 0.1;\n\t\t\t\tw[a2] += wn[a1] * 0.1;\n\t\t\t}\n\t\t\tw[atom - 1] = 0;\n\t\t}\n\t\treturn w;\n\t}\n\n/*\n\t// returns the electron count of an atom: this is the sum of natural electron count, neighbouring bonds,\n\t// explicit hydrogens, unpaired electrons and -charge; hydrogens inferred by the valence are included\n\t// only if the countImplicit parameter is true;\n\t// the return value can be used to calculate the number of remaining slots for adding new substituents\n\tpublic static int atomElectronCount(Molecule mol, int N, boolean countImplicit)\n\t{\n\t\tint atno = mol.atomicNumber(N), blk = Chemistry.ELEMENT_BLOCKS[atno], grp = Chemistry.ELEMENT_GROUPS[atno];\n\t\tint val = blk == 0 ? 0 : blk == 1 ? grp : blk == 2 ? grp - 10 : grp;\n\t\tif (countImplicit) val += mol.atomHydrogens(N);\n\t\telse if (mol.atomHExplicit(N) != Molecule.HEXPLICIT_UNKNOWN) val += mol.atomHExplicit(N);\n\t\tval += mol.atomUnpaired(N) - mol.atomCharge(N);\n\t\tint[] adjb = mol.atomAdjBonds(N);\n\t\tfor (int n = 0; n < adjb.length; n++) val += mol.bondOrder(adjb[n]);\n\t\treturn val;\n\t}\n\n\t// for a given atomic number, returns the valence limit, considering S/P/D electrons, i.e. cuts out\n\t// at 18 electrons, even for f-block metals\n\tpublic static int atomMaxValenceSPD(int atno)\n\t{\n\t\tint blk = Chemistry.ELEMENT_BLOCKS[atno];\n\t\t//                             ?, s, p,  d, f\n\t\tfinal int[] BLKVAL = new int[]{2, 2, 8, 18, 18};\n\t\treturn BLKVAL[blk];\n\t}\n\n\t// if the molecule has any bonds that are not of order 1, 2 or 3 then a new molecule will be constructed\n\t// which has only these bond types; if no interesting bonds, returns null; a returned molecule is\n\t// more suitable to writing to a format such as MDL MOL; zero bonds are typically converted into\n\t// double bonds or charge-separated single bonds\n\tpublic static Molecule reduceBondTypes(Molecule mol)\n\t{\n\t\tfinal int nb = mol.numBonds;\n\t\tboolean any = false;\n\t\tfor (int n = 1; n <= nb; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) {any = true; break;}\n\t\tif (!any) return null;\n\n\t\tmol = mol.clone();\n\n\t\tfor (int n = 1; n <= nb; n++)\n\t\t{\n\t\t\tint bo = mol.bondOrder(n);\n\t\t\tif (bo == 0)\n\t\t\t{\n\t\t\t\tint bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\n\t\t\t\t// non-elements do not get to charge separate\n\t\t\t\tint atno1 = mol.atomicNumber(bfr), atno2 = mol.atomicNumber(bto);\n\t\t\t\tif (atno1 == 0 || atno2 == 0)\n\t\t\t\t{\n\t\t\t\t\tmol.setBondOrder(n, 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tint val1 = atomElectronCount(mol, bfr, true), val2 = atomElectronCount(mol, bto, true);\n\t\t\t\tint max1 = atomMaxValenceSPD(atno1), max2 = atomMaxValenceSPD(atno2);\n\t\t\t\tboolean spc1 = val1 <= max1 - 2, spc2 = val2 <= max2 - 2;\n\t\t\t\tif (spc1 && spc2)\n\t\t\t\t{\n\t\t\t\t\t// sufficient valence exists, so call it a double bond\n\t\t\t\t\tmol.setBondOrder(n, 2);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// charge separate, as long as the atom receiving the negative charge has room for it\n\t\t\t\tif (spc1)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomCharge(bfr, mol.atomCharge(bfr) - 1);\n\t\t\t\t\tmol.setAtomCharge(bto, mol.atomCharge(bto) + 1);\n\t\t\t\t}\n\t\t\t\tif (spc2)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomCharge(bfr, mol.atomCharge(bfr) + 1);\n\t\t\t\t\tmol.setAtomCharge(bto, mol.atomCharge(bto) - 1);\n\t\t\t\t}\n\n\t\t\t\tmol.setBondOrder(n, 1);\n\t\t\t}\n\t\t\telse if (bo > 3) mol.setBondOrder(n, 3);\n\t\t\telse mol.setBondOrder(n, 1);\n\t\t}\n\n\t\treturn mol;\n\t}*/\n\n\t// return the total number of attached hydrogens: implicit/explicit + any actual atoms connected to it\n\tpublic static totalHydrogens(mol:Molecule, atom:number):number\n\t{\n\t\tlet hc = mol.atomHydrogens(atom);\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tfor (let n = 0; n < adj.length; n++) if (mol.atomElement(adj[n]) == 'H') hc++;\n\t\treturn hc;\n\t}\n\n\t// operates on the provided molecule, by removing any \"boring\" hydrogen atoms; boring is defined as:\n\t//\t\t- bonded to an atom that auto-calculates hydrogens and is set to do so\n\t//\t\t- one single non-stereo bond to a non-hydrogen atom\n\t//      - no charge or unpaired electrons or isotope information\n\t//\t\t- no extension fields\n\t// the adjacent heavy atom has its explicit hydrogen count incremented, unless it is set to auto _and_ after removing\n\t// the hydrogen atom, the calculated value is 1\n\t// note: the 'force' parameter can be used to make it just chop everything\n\tpublic static stripHydrogens(mol:Molecule, force:boolean = false):void\n\t{\n\t\tfor (let n = mol.numAtoms; n >= 1; n--)\n\t\t\tif ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n)) mol.deleteAtomAndBonds(n);\n\t}\n\n\t// returns true if a given atom is a hydrogen atom with nothing unusual going on, i.e. fair game for deletion\n\tpublic static boringHydrogen(mol:Molecule, atom:number):boolean\n\t{\n\t\tif (mol.atomElement(atom) != 'H') return false;\n\n\t\tif (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0) return false;\n\t\tif (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL) return false;\n\t\tif (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom))) return false;\n\t\tif (mol.atomAdjCount(atom) != 1) return false;\n\n\t\tlet other = mol.atomAdjList(atom)[0];\n\t\tif (mol.atomElement(other) == 'H') return false;\n\t\tlet bond = mol.atomAdjBonds(atom)[0];\n\t\tif (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL) return false;\n\t\tif (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN) return false;\n\t\tif (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0) return false;\n\n\t\treturn true;\n\t}\n\n\t// looks through each atom's hydrogen count, and converts the number into actual hydrogen atoms, which are added\n\t// to the end of the atom list in the order encountered; returns the number of new atoms appended\n\t//\n\t// if the 'position' parameter is false, then hydrogens are simply added at their parents position (computationally\n\t// cheap); if true, a reasonable sketch layout method is used\n\tpublic static createHydrogens(mol:Molecule, position?:boolean):number\n\t{\n\t\tif (position == null) position = false;\n\n\t\tlet na = mol.numAtoms;\n\t\tfor (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tlet hc = mol.atomHydrogens(n);\n\t\t\tif (hc == 0) continue;\n\t\t\tif (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(n, 0);\n\n\t\t\tif (!position)\n\t\t\t{\n\t\t\t\tfor (; hc > 0; hc--)\n\t\t\t\t{\n\t\t\t\t\tlet a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n\t\t\t\t\tmol.addBond(n, a, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n\t\t}\n\t\treturn mol.numAtoms - na;\n\t}\n\n\t// returns atom position as a 3D vector\n\tpublic static atomVec3(mol:Molecule, atom:number):number[]\n\t{\n\t\tif (mol.is3D())\n\t\t\treturn [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n\t\telse\n\t\t\treturn [mol.atomX(atom), mol.atomY(atom), 0];\n\t}\n\n\t// works out the oxidation state of a given atom; if it's a common main group with an ordinary valence, returns null to denote\n\t// that it's not worth mentioning; oxidation state is subject/has a grey area, e.g. double bonds from metals to most atoms are\n\t// counted as zero, but not for electronegative chalcogens\n\tpublic static atomOxidationState(mol:Molecule, atom:number):number\n\t{\n\t\tif (mol.atomAdjCount(atom) == 0) return null; // just not interesting if it's isolated\n\t\tif (this.hasAbbrev(mol, atom)) return null;\n\n\t\tlet atno = mol.atomicNumber(atom);\n\t\tif (atno == 0) return null;\n\t\tlet nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n\t\tlet oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t{\n\t\t\tlet bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n\t\t\tlet chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n\t\t\tif (nonMetal || chalco) oxstate += bo; else oxstate += bo % 2;\n\t\t}\n\n\t\tif (atno == Chemistry.ELEMENT_H && oxstate == 1) return null;\n\t\tif (atno == Chemistry.ELEMENT_B && oxstate == 3) return null;\n\t\tif (atno == Chemistry.ELEMENT_C && oxstate == 4) return null;\n\t\tif (atno == Chemistry.ELEMENT_N && oxstate == 3) return null;\n\t\tif (atno == Chemistry.ELEMENT_O && oxstate == 2) return null;\n\t\tif (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6)) return null;\n\t\tif (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5)) return null;\n\t\tif ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n\t\t\tatno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1) return null;\n\n\t\treturn oxstate;\n\t}\n\tpublic static oxidationStateText(oxstate:number):string\n\t{\n\t\tif (oxstate == 0) return '0';\n\t\tlet str = oxstate < 0 ? '-' : '';\n\t\tlet absox = Math.abs(oxstate);\n\t\tif (absox == 1) str += 'I';\n\t\telse if (absox == 2) str += 'II';\n\t\telse if (absox == 3) str += 'III';\n\t\telse if (absox == 4) str += 'IV';\n\t\telse if (absox == 5) str += 'V';\n\t\telse if (absox == 6) str += 'VI';\n\t\telse if (absox == 7) str += 'VII';\n\t\telse if (absox == 8) str += 'VIII';\n\t\telse if (absox == 9) str += 'IX';\n\t\telse if (absox == 10) str += 'X';\n\t\telse if (absox == 11) str += 'XI';\n\t\telse if (absox == 12) str += 'XII';\n\t\telse str = (oxstate > 0 ? '+' : '') + oxstate;\n\t\treturn str;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box} from '../util/Geom';\nimport {deepClone} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {MoleculeStream} from '../io/MoleculeStream';\n\n/*\n\tA dynamic representation of a molecule, which is analogous to the com.mmi.core.mol.Molecule class.\n\n\tThe molecule representation is conveniently interconvertible with the SketchEl format, which is the \"string\"\n\trepresentation.\n*/\n\nclass Atom\n{\n\tpublic element:string;\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic charge:number;\n\tpublic unpaired:number;\n\tpublic isotope:number;\n\tpublic hExplicit:number;\n\tpublic mapNum:number;\n\tpublic extra:string[];\n\tpublic transient:string[];\n}\n\nclass Bond\n{\n\tpublic from:number;\n\tpublic to:number;\n\tpublic order:number;\n\tpublic type:number;\n\tpublic extra:string[];\n\tpublic transient:string[];\n}\n\nexport class Molecule\n{\n\tprivate atoms:Atom[] = [];\n\tprivate bonds:Bond[] = [];\n\tprivate hasZCoord = false;\n\n\tpublic keepTransient = false;\n\tprivate hasTransient = false;\n\n\t// cached properties: note that these are treated as shallow copies: read-only or rebuild\n\tprivate graph:number[][] = null;\n\tprivate graphBond:number[][] = null;\n\tprivate ringID:number[] = null;\n\tprivate compID:number[] = null;\n\tprivate ring3:number[][] = null;\n\tprivate ring4:number[][] = null;\n\tprivate ring5:number[][] = null;\n\tprivate ring6:number[][] = null;\n\tprivate ring7:number[][] = null;\n\n\tpublic static IDEALBOND = 1.5;\n\tpublic static HEXPLICIT_UNKNOWN = -1;\n\tpublic static ISOTOPE_NATURAL = 0;\n\tpublic static BONDTYPE_NORMAL = 0;\n\tpublic static BONDTYPE_INCLINED = 1;\n\tpublic static BONDTYPE_DECLINED = 2;\n\tpublic static BONDTYPE_UNKNOWN = 3;\n\n\tpublic static HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\n\tpublic static HYVALENCE_VAL = [4, 3, 2, 2, 3];\n\n\t// recommended prefix for extra/transient\n\tpublic static PREFIX_EXTRA = 'x';\n\tpublic static PREFIX_TRANSIENT = 'y';\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic clone():Molecule\n\t{\n\t\t/*let dup = Molecule.fromString(this.toString());\n\t\tdup.keepTransient = this.keepTransient;*/\n\n\t\tlet dup = new Molecule();\n\t\tdup.atoms = deepClone(this.atoms);\n\t\tdup.bonds = deepClone(this.bonds);\n\t\tdup.hasZCoord = this.hasZCoord;\n\t\tdup.keepTransient = this.keepTransient;\n\t\tdup.hasTransient = this.hasTransient;\n\t\tdup.graph = this.graph;\n\t\tdup.graphBond = this.graphBond;\n\t\tdup.ringID = this.ringID;\n\t\tdup.compID = this.compID;\n\t\tdup.ring3 = this.ring3;\n\t\tdup.ring4 = this.ring4;\n\t\tdup.ring5 = this.ring5;\n\t\tdup.ring6 = this.ring6;\n\t\tdup.ring7 = this.ring7;\n\t\treturn dup;\n\t}\n\tpublic static fromString(strData:string):Molecule {return MoleculeStream.readNative(strData);}\n\tpublic toString():string {return MoleculeStream.writeNative(this);}\n\n\t// takes the indicated molecular fragment and appends it to the end of the current molecule, with order preserved\n\tpublic append(frag:Molecule):void\n\t{\n\t\tlet base = this.atoms.length;\n\t\tfor (let n = 1; n <= frag.numAtoms; n++)\n\t\t{\n\t\t\tlet num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n\t\t\tthis.setAtomIsotope(num, frag.atomIsotope(n));\n\t\t\tthis.setAtomHExplicit(num, frag.atomHExplicit(n));\n\t\t\tthis.setAtomMapNum(num, frag.atomMapNum(n));\n\t\t\tthis.setAtomExtra(num, frag.atomExtra(n));\n\t\t\tthis.setAtomTransient(num, frag.atomTransient(n));\n\t\t}\n\t\tfor (let n = 1; n <= frag.numBonds; n++)\n\t\t{\n\t\t\tlet num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n\t\t\tthis.setBondExtra(num, frag.bondExtra(n));\n\t\t\tthis.setBondTransient(num, frag.bondTransient(n));\n\t\t}\n\t\tthis.trashTransient();\n\t}\n\n\tpublic get numAtoms():number {return this.atoms.length;}\n\tpublic getAtom(idx:number):Atom\n\t{\n\t\tif (idx < 1 || idx > this.atoms.length)\n\t\t\tthrow new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n\t\treturn this.atoms[idx - 1];\n\t}\n\n\tpublic atomElement(idx:number):string {return this.getAtom(idx).element;}\n\tpublic atomX(idx:number):number {return this.getAtom(idx).x;}\n\tpublic atomY(idx:number):number {return this.getAtom(idx).y;}\n\tpublic atomCharge(idx:number):number {return this.getAtom(idx).charge;}\n\tpublic atomUnpaired(idx:number):number {return this.getAtom(idx).unpaired;}\n\tpublic atomIsotope(idx:number):number {return this.getAtom(idx).isotope;}\n\tpublic atomHExplicit(idx:number):number {return this.getAtom(idx).hExplicit;}\n\tpublic atomMapNum(idx:number):number {return this.getAtom(idx).mapNum;}\n\tpublic atomExtra(idx:number):string[] {return this.getAtom(idx).extra.slice(0);}\n\tpublic atomTransient(idx:number):string[] {return this.getAtom(idx).transient.slice(0);}\n\n\tpublic get numBonds():number {return this.bonds.length;}\n\tpublic getBond(idx:number):Bond\n\t{\n\t\tif (idx < 1 || idx > this.bonds.length)\n\t\t\tthrow new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n\t\treturn this.bonds[idx - 1];\n\t}\n\n\tpublic bondFrom(idx:number):number {return this.getBond(idx).from;}\n\tpublic bondTo(idx:number):number {return this.getBond(idx).to;}\n\tpublic bondOrder(idx:number):number {return this.getBond(idx).order;}\n\tpublic bondType(idx:number):number {return this.getBond(idx).type;}\n\tpublic bondExtra(idx:number):string[] {return this.getBond(idx).extra.slice(0);}\n\tpublic bondTransient(idx:number):string[] {return this.getBond(idx).transient.slice(0);}\n\tpublic bondFromTo(idx:number):number[] {let b = this.getBond(idx); return [b.from, b.to];}\n\n\tpublic addAtom(element:string, x:number, y:number, charge:number = 0, unpaired:number = 0):number\n\t{\n\t\tlet a = new Atom();\n\t\ta.element = element;\n\t\ta.x = x;\n\t\ta.y = y;\n\t\ta.charge = charge;\n\t\ta.unpaired = unpaired;\n\t\ta.isotope = Molecule.ISOTOPE_NATURAL;\n\t\ta.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n\t\ta.mapNum = 0;\n\t\ta.extra = [];\n\t\ta.transient = [];\n\t\tthis.atoms.push(a);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t\treturn this.atoms.length;\n\t}\n\n\tpublic setAtomElement(idx:number, element:string):void\n\t{\n\t\tthis.getAtom(idx).element = element;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomPos(idx:number, x:number, y:number, z?:number):void\n\t{\n\t\tlet a = this.getAtom(idx);\n\t\ta.x = x;\n\t\ta.y = y;\n\t\ta.z = z == null ? 0 : z;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomX(idx:number, x:number):void\n\t{\n\t\tthis.getAtom(idx).x = x;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomY(idx:number, y:number):void\n\t{\n\t\tthis.getAtom(idx).y = y;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomCharge(idx:number, charge:number):void\n\t{\n\t\tthis.getAtom(idx).charge = charge;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomUnpaired(idx:number, unpaired:number):void\n\t{\n\t\tthis.getAtom(idx).unpaired = unpaired;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomIsotope(idx:number, isotope:number):void\n\t{\n\t\tthis.getAtom(idx).isotope = isotope;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomHExplicit(idx:number, hExplicit:number):void\n\t{\n\t\tthis.getAtom(idx).hExplicit = hExplicit;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomMapNum(idx:number, mapNum:number):void\n\t{\n\t\tthis.getAtom(idx).mapNum = mapNum;\n\t\tthis.trashTransient();\n\t}\n\tpublic setAtomExtra(idx:number, extra:string[]):void\n\t{\n\t\tthis.getAtom(idx).extra = extra.slice(0);\n\t}\n\tpublic setAtomTransient(idx:number, transi:string[]):void\n\t{\n\t\tthis.getAtom(idx).transient = transi.slice(0);\n\t\tif (transi.length > 0) this.hasTransient = true;\n\t}\n\n\tpublic swapAtoms(a1:number, a2:number):void\n\t{\n\t\tlet a = this.atoms[a1 - 1];\n\t\tthis.atoms[a1 - 1] = this.atoms[a2 - 1];\n\t\tthis.atoms[a2 - 1] = a;\n\n\t\tfor (let n = 0; n < this.bonds.length; n++)\n\t\t{\n\t\t\tlet b = this.bonds[n];\n\t\t\tif (b.from == a2) b.from = a1; else if (b.from == a1) b.from = a2;\n\t\t\tif (b.to == a2) b.to = a1; else if (b.to == a1) b.to = a2;\n\t\t}\n\n\t\tthis.trashGraph();\n\t}\n\n\tpublic addBond(from:number, to:number, order:number, type:number = Molecule.BONDTYPE_NORMAL):number\n\t{\n\t\tlet b = new Bond();\n\t\tb.from = from;\n\t\tb.to = to;\n\t\tb.order = order;\n\t\tb.type = type;\n\t\tb.extra = [];\n\t\tb.transient = [];\n\t\tthis.bonds.push(b);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t\treturn this.bonds.length;\n\t}\n\n\tpublic setBondFrom(idx:number, bfr:number):void\n\t{\n\t\tthis.getBond(idx).from = bfr;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondTo(idx:number, to:number):void\n\t{\n\t\tthis.getBond(idx).to = to;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondFromTo(idx:number, bfr:number, bto:number):void\n\t{\n\t\tthis.getBond(idx).from = bfr;\n\t\tthis.getBond(idx).to = bto;\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic setBondOrder(idx:number, order:number):void\n\t{\n\t\tthis.getBond(idx).order = order;\n\t\tthis.trashTransient();\n\t}\n\tpublic setBondType(idx:number, type:number):void\n\t{\n\t\tthis.getBond(idx).type = type;\n\t\tthis.trashTransient();\n\t}\n\tpublic setBondExtra(idx:number, extra:string[]):void\n\t{\n\t\tthis.getBond(idx).extra = extra.slice(0);\n\t}\n\tpublic setBondTransient(idx:number, transi:string[]):void\n\t{\n\t\tthis.getBond(idx).transient = transi.slice(0);\n\t\tif (transi.length > 0) this.hasTransient = true;\n\t}\n\n\tpublic deleteAtomAndBonds(idx:number):void\n\t{\n\t\tfor (let n = this.numBonds; n >= 1; n--)\n\t\t{\n\t\t\tif (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n\t\t\t\tthis.deleteBond(n);\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.bondFrom(n) > idx) this.setBondFrom(n, this.bondFrom(n) - 1);\n\t\t\t\tif (this.bondTo(n) > idx) this.setBondTo(n, this.bondTo(n) - 1);\n\t\t\t}\n\t\t}\n\t\tthis.atoms.splice(idx - 1, 1);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\tpublic deleteBond(idx:number):void\n\t{\n\t\tthis.bonds.splice(idx - 1, 1);\n\t\tthis.trashTransient();\n\t\tthis.trashGraph();\n\t}\n\n\t// uses either explicit or computed number to determine how many hydrogens the atom has; the field for explicit hydrogens takes\n\t// absolute preference; if it has its default value of 'unknown', the number is computed by looking up the hydrogen capacity for\n\t// the element (most of which are zero), subtracting the total of bond orders, then returning the difference, or zero; the calculation\n\t// tends to err on the side of too few, since the concept is just an aid to drawing organic structures, not a cheminformatic attempt\n\t// to compensate for 4 decades of bad file formats\n\t// (note: returns \"implicit\"+\"explicit\", but does NOT count \"actual\" hydrogens, i.e. those which have their own atom nodes)\n\tpublic atomHydrogens(idx:number):number\n\t{\n\t\tlet hy = this.atomHExplicit(idx);\n\t\tif (hy != Molecule.HEXPLICIT_UNKNOWN) return hy;\n\n\t\tfor (let n = 0; n < Molecule.HYVALENCE_EL.length; n++) if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx))\n\t\t{\n\t\t\thy = Molecule.HYVALENCE_VAL[n];\n\t\t\tbreak;\n\t\t}\n\t\tif (hy == Molecule.HEXPLICIT_UNKNOWN) return 0;\n\t\tlet ch = this.atomCharge(idx);\n\t\tif (this.atomElement(idx) == 'C') ch = -Math.abs(ch);\n\t\thy += ch - this.atomUnpaired(idx);\n\t\tlet adjBonds = this.atomAdjBonds(idx);\n\t\tfor (let n = 0; n < adjBonds.length; n++) hy -= this.bondOrder(adjBonds[n]);\n\t\treturn hy < 0 ? 0 : hy;\n\t}\n\n\t// returns the index of the bond between the two atoms, or 0 if none\n\t// NOTE: uncached==>slow\n\tpublic findBond(a1:number, a2:number):number\n\t{\n\t\tfor (let n = 1; n <= this.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = this.bondFrom(n), b2 = this.bondTo(n);\n\t\t\tif ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1)) return n;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// for a bond, returns the end which is not==Ref; return value will be From,To or 0\n\tpublic bondOther(idx:number, ref:number):number\n\t{\n\t\tlet b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n\t\tif (b1 == ref) return b2;\n\t\tif (b2 == ref) return b1;\n\t\treturn 0;\n\t}\n\n\t// returns whether an atom logically ought to be drawn \"explicitly\";if false, it is a carbon which should be just a dot\n\tpublic atomExplicit(idx:number):boolean\n\t{\n\t\tlet a = this.atoms[idx - 1];\n\t\tif (a.isotope != Molecule.ISOTOPE_NATURAL) return true;\n\t\tif (a.element != 'C' || a.charge != 0 || a.unpaired != 0) return true;\n\t\tif (this.atomAdjCount(idx) == 0) return true;\n\t\treturn false;\n\t}\n\n\t// returns the numerical ID of the ring block in which the atom resides, or 0 if it is not in a ring\n\tpublic atomRingBlock(idx:number):number\n\t{\n\t\tif (this.graph == null) this.buildGraph();\n\t\tif (this.ringID == null) this.buildRingID();\n\t\treturn this.ringID[idx - 1];\n\t}\n\n\t// returns whether or not a bond resides in a ring (i.e. ring block of each end is the same and nonzero)\n\tpublic bondInRing(idx:number):boolean\n\t{\n\t\tlet r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n\t\treturn r1 > 0 && r1 == r2;\n\t}\n\n\t// returns the connected component ID of the atom, always 1 or more\n\tpublic atomConnComp(idx:number):number\n\t{\n\t\tif (this.graph == null) this.buildGraph();\n\t\tif (this.compID == null) this.buildConnComp();\n\t\treturn this.compID[idx - 1];\n\t}\n\n\t// returns the number of neighbours of an atom\n\t// NOTE: uncached==>slow\n\tpublic atomAdjCount(idx:number):number\n\t{\n\t\tthis.buildGraph();\n\t\treturn this.graph[idx - 1].length;\n\t}\n\n\t// returns the actual adjacency list of an atom; the return value is a 1-based deep copy\n\tpublic atomAdjList(idx:number):number[]\n\t{\n\t\tthis.buildGraph();\n\t\tlet adj = this.graph[idx - 1].slice(0);\n\t\tfor (let n = adj.length - 1; n >= 0; n--) adj[n]++;\n\t\treturn adj;\n\t}\n\n\t// returns the bond indices of the adjacency list for the atom; the return value is a 1-based deep copy\n\tpublic atomAdjBonds(idx:number):number[]\n\t{\n\t\tthis.buildGraph();\n\t\treturn this.graphBond[idx - 1].slice(0);\n\t}\n\n\t// returns _all_ rings of indicated size; each item in the array list is an array of int[Size], a consecutively ordered array of atom\n\t// numbers; uses a recursive depth first search, which must be bounded above by Size being small in order to avoid exponential blowup\n\tpublic findRingsOfSize(size:number):number[][]\n\t{\n\t\tlet rings:number[][] = null;\n\t\tif (size == 3 && this.ring3 != null) rings = this.ring3;\n\t\tif (size == 4 && this.ring4 != null) rings = this.ring4;\n\t\tif (size == 5 && this.ring5 != null) rings = this.ring5;\n\t\tif (size == 6 && this.ring6 != null) rings = this.ring6;\n\t\tif (size == 7 && this.ring7 != null) rings = this.ring7;\n\n\t\tif (rings == null)\n\t\t{\n\t\t\tif (this.graph == null) this.buildGraph();\n\t\t\tif (this.ringID == null) this.buildRingID();\n\n\t\t\trings = [];\n\t\t\tfor (let n = 1; n <= this.atoms.length; n++)\n\t\t\t{\n\t\t\t\tif (this.ringID[n - 1] > 0)\n\t\t\t\t{\n\t\t\t\t\tlet path = Vec.numberArray(0, size);\n\t\t\t\t\tpath[0] = n;\n\t\t\t\t\tthis.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (size == 3) this.ring3 = rings;\n\t\t\tif (size == 4) this.ring4 = rings;\n\t\t\tif (size == 5) this.ring5 = rings;\n\t\t\tif (size == 6) this.ring6 = rings;\n\t\t\tif (size == 7) this.ring7 = rings;\n\t\t}\n\n\t\tlet ret:number[][] = [];\n\t\tfor (let n = 0; n < rings.length; n++) ret.push(rings[n].slice(0));\n\t\treturn ret;\n\t}\n\n\t// molecule boundaries\n\tpublic boundary():Box\n\t{\n\t\tif (this.atoms.length == 0) return Box.zero();\n\t\tlet x1 = this.atoms[0].x, x2 = x1;\n\t\tlet y1 = this.atoms[0].y, y2 = y1;\n\t\tfor (let n = 1; n < this.atoms.length; n++)\n\t\t{\n\t\t\tx1 = Math.min(x1, this.atoms[n].x);\n\t\t\ty1 = Math.min(y1, this.atoms[n].y);\n\t\t\tx2 = Math.max(x2, this.atoms[n].x);\n\t\t\ty2 = Math.max(y2, this.atoms[n].y);\n\t\t}\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\t// lookup the atomic number for the element, or return 0 if not in the periodic table\n\tpublic atomicNumber(idx:number):number\n\t{\n\t\treturn Molecule.elementAtomicNumber(this.atomElement(idx));\n\t}\n\n\tpublic static elementAtomicNumber(element:string):number\n\t{\n\t\treturn Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n\t}\n\n\t// Z coordinate: somewhat aloof from the (X,Y) coordinates, because the container is oriented toward 2D molecules\n\tpublic is3D():boolean {return this.hasZCoord;}\n\tpublic setIs3D(v:boolean):void {this.hasZCoord = v;}\n\tpublic atomZ(idx:number):number {return this.getAtom(idx).z;}\n\tpublic setAtomZ(idx:number, z:number) {this.getAtom(idx).z = z;}\n\n\t// literal comparison to another molecule, which can be used for ordering purposes: returns -1/0/1\n\tpublic compareTo(other:Molecule):number\n\t{\n\t\tif (other == null || other.numAtoms == 0) return this.numAtoms == 0 ? 0 : 1; // null is equivalent to empty\n\t\tif (this.numAtoms < other.numAtoms) return -1;\n\t\tif (this.numAtoms > other.numAtoms) return 1;\n\t\tif (this.numBonds < other.numBonds) return -1;\n\t\tif (this.numBonds > other.numBonds) return 1;\n\n\t\tfor (let n = 1; n <= this.numAtoms; n++)\n\t\t{\n\t\t\tif (this.atomElement(n) < other.atomElement(n)) return -1;\n\t\t\tif (this.atomElement(n) > other.atomElement(n)) return 1;\n\t\t\tif (this.atomX(n) < other.atomX(n)) return -1; if (this.atomX(n) > other.atomX(n)) return 1;\n\t\t\tif (this.atomY(n) < other.atomY(n)) return -1; if (this.atomY(n) > other.atomY(n)) return 1;\n\t\t\tif (this.atomCharge(n) < other.atomCharge(n)) return -1; if (this.atomCharge(n) > other.atomCharge(n)) return 1;\n\t\t\tif (this.atomUnpaired(n) < other.atomUnpaired(n)) return -1; if (this.atomUnpaired(n) > other.atomUnpaired(n)) return 1;\n\t\t\tif (this.atomHExplicit(n) < other.atomHExplicit(n)) return -1; if (this.atomHExplicit(n) > other.atomHExplicit(n)) return 1;\n\t\t\tif (this.atomIsotope(n) < other.atomIsotope(n)) return -1; if (this.atomIsotope(n) > other.atomIsotope(n)) return 1;\n\t\t\tif (this.atomMapNum(n) < other.atomMapNum(n)) return -1; if (this.atomMapNum(n) > other.atomMapNum(n)) return 1;\n\n\t\t\tlet tx1 = this.atomExtra(n), tx2 = other.atomExtra(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\n\t\t\ttx1 = this.atomTransient(n); tx2 = other.atomTransient(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\t\t}\n\t\tfor (let n = 1; n <= this.numBonds; n++)\n\t\t{\n\t\t\tif (this.bondFrom(n) < other.bondFrom(n)) return -1; if (this.bondFrom(n) > other.bondFrom(n)) return 1;\n\t\t\tif (this.bondTo(n) < other.bondTo(n)) return -1; if (this.bondTo(n) > other.bondTo(n)) return 1;\n\t\t\tif (this.bondOrder(n) < other.bondOrder(n)) return -1; if (this.bondOrder(n) > other.bondOrder(n)) return 1;\n\t\t\tif (this.bondType(n) < other.bondType(n)) return -1; if (this.bondType(n) > other.bondType(n)) return 1;\n\n\t\t\tlet tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\n\t\t\ttx1 = this.bondTransient(n); tx2 = other.bondTransient(n);\n\t\t\tif (tx1.length < tx2.length) return -1; if (tx1.length > tx2.length) return 1;\n\t\t\tfor (let i = 0; i < tx1.length; i++) if (tx1[i] < tx2[i]) return -1; else if (tx1[i] > tx2[i]) return 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// must be called when _any_ change to the molecule is affected; the transient extension fields are cleared out\n\tpublic trashTransient():void\n\t{\n\t\tif (this.keepTransient || !this.hasTransient) return;\n\t\tfor (let a of this.atoms) a.transient = [];\n\t\tfor (let b of this.bonds) b.transient = [];\n\t\tthis.hasTransient = false;\n\t}\n\n\t// convenience methods\n\tpublic appendAtomExtra(atom:number, extra:string):void\n\t{\n\t\tthis.getAtom(atom).extra.push(extra);\n\t}\n\tpublic appendAtomTransient(atom:number, trans:string):void\n\t{\n\t\tthis.getAtom(atom).transient.push(trans);\n\t}\n\tpublic appendBondExtra(bond:number, extra:string):void\n\t{\n\t\tthis.getBond(bond).extra.push(extra);\n\t}\n\tpublic appendBondTransient(bond:number, trans:string):void\n\t{\n\t\tthis.getBond(bond).transient.push(trans);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// must be called when the molecule's graph changes; do not call for changing labels or coordinates\n\tprivate trashGraph():void\n\t{\n\t\tthis.graph = null;\n\t\tthis.graphBond = null;\n\t\tthis.ringID = null;\n\t\tthis.compID = null;\n\t\tthis.ring3 = null;\n\t\tthis.ring4 = null;\n\t\tthis.ring5 = null;\n\t\tthis.ring6 = null;\n\t\tthis.ring7 = null;\n\t}\n\n\t// if the computed graph is not defined, rebuild it\n\tprivate buildGraph():void\n\t{\n\t\tif (this.graph != null && this.graphBond != null) return;\n\n\t\tlet graph:number[][] = [], graphBond:number[][] = [];\n\t\tlet na = this.numAtoms, nb = this.numBonds;\n\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tgraph.push([]);\n\t\t\tgraphBond.push([]);\n\t\t}\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet b = this.getBond(n);\n\t\t\tgraph[b.from - 1].push(b.to - 1);\n\t\t\tgraph[b.to - 1].push(b.from - 1);\n\t\t\tgraphBond[b.from - 1].push(n);\n\t\t\tgraphBond[b.to - 1].push(n);\n\t\t}\n\n\t\tthis.graph = graph;\n\t\tthis.graphBond = graphBond;\n\t}\n\n\t// passes over the graph establishing which component each atom belongs to\n\tprivate buildConnComp():void\n\t{\n\t\tconst numAtoms = this.atoms.length;\n\n\t\tthis.compID = Vec.numberArray(0, numAtoms);\n\t\tfor (let n = 0; n < numAtoms; n++) this.compID[n] = 0;\n\t\tlet comp = 1;\n\t\tthis.compID[0] = comp;\n\n\t\t// (not very efficient, should use a stack-based depth first search)\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < numAtoms; n++) if (this.compID[n] == comp)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.graph[n].length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (this.compID[this.graph[n][i]] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.compID[this.graph[n][i]] = comp;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything)\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t\t\t{\n\t\t\t\t\tif (this.compID[n] == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.compID[n] = ++comp;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!anything) break;\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the ring-block-identifier for each atom\n\tprivate buildRingID():void\n\t{\n\t\tconst numAtoms = this.atoms.length;\n\n\t\tthis.ringID = Vec.numberArray(0, numAtoms);\n\t\tif (numAtoms == 0) return;\n\t\tlet visited = Vec.booleanArray(false, numAtoms);\n\t\tfor (let n = 0; n < numAtoms; n++)\n\t\t{\n\t\t\tthis.ringID[n] = 0;\n\t\t\tvisited[n] = false;\n\t\t}\n\n\t\tlet path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n\t\twhile (true)\n\t\t{\n\t\t\tlet last:number, current:number;\n\n\t\t\tif (plen == 0) // find an element of a new component to visit\n\t\t\t{\n\t\t\t\tlast = -1;\n\t\t\t\tfor (current = 0; visited[current]; current++) {}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlast = path[plen - 1];\n\t\t\t\tcurrent = -1;\n\t\t\t\tfor (let n = 0; n < this.graph[last].length; n++)\n\t\t\t\t{\n\t\t\t\t\tif (!visited[this.graph[last][n]])\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent = this.graph[last][n];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (current >= 0 && plen >= 2) // path is at least 2 items long, so look for any not-previous visited neighbours\n\t\t\t{\n\t\t\t\tlet back = path[plen - 1];\n\t\t\t\t//System.out.println(\" back=\"+back);\n\t\t\t\tfor (let n = 0; n < this.graph[current].length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet join = this.graph[current][n];\n\t\t\t\t\tif (join != back && visited[join])\n\t\t\t\t\t{\n\t\t\t\t\t\tpath[plen] = current;\n\t\t\t\t\t\tfor (let i = plen; i == plen || path[i + 1] != join; i--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet id = this.ringID[path[i]];\n\t\t\t\t\t\t\tif (id == 0) this.ringID[path[i]] = last;\n\t\t\t\t\t\t\telse if (id != last)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor (let j = 0; j < numAtoms; j++)\n\t\t\t\t\t\t\t\t\tif (this.ringID[j] == id) this.ringID[j] = last;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (current >= 0) // can mark the new one as visited\n\t\t\t{\n\t\t\t\tvisited[current] = true;\n\t\t\t\tpath[plen++] = current;\n\t\t\t\tnumVisited++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// otherwise, found nothing and must rewind the path\n\t\t\t\tplen--;\n\t\t\t}\n\n\t\t\tif (numVisited == numAtoms) break;\n\t\t}\n\n\t\t// the ring ID's are not necessarily consecutive, so reassign them to 0=none, 1..NBlocks\n\t\tlet nextID = 0;\n\t\tfor (let i = 0; i < numAtoms; i++)\n\t\t{\n\t\t\tif (this.ringID[i] > 0)\n\t\t\t{\n\t\t\t\tnextID--;\n\t\t\t\tfor (let j = numAtoms - 1; j >= i; j--) if (this.ringID[j] == this.ringID[i]) this.ringID[j] = nextID;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < numAtoms; i++) this.ringID[i] = -this.ringID[i];\n\t}\n\n\t// ring hunter: recursive step; finds, compares and collects\n\tprivate recursiveRingFind(path:number[], psize:number, capacity:number, rblk:number, rings:number[][]):void\n\t{\n\t\tconst {graph} = this;\n\n\t\t// not enough atoms yet, so look for new possibilities\n\t\tif (psize < capacity)\n\t\t{\n\t\t\tlet last = path[psize - 1];\n\t\t\tfor (let n = 0; n < graph[last - 1].length; n++)\n\t\t\t{\n\t\t\t\tlet adj = graph[last - 1][n] + 1;\n\t\t\t\tif (this.ringID[adj - 1] != rblk) continue;\n\t\t\t\tlet fnd = false;\n\t\t\t\tfor (let i = 0; i < psize; i++)\n\t\t\t\t{\n\t\t\t\t\tif (path[i] == adj)\n\t\t\t\t\t{\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!fnd)\n\t\t\t\t{\n\t\t\t\t\tlet newPath = path.slice(0);\n\t\t\t\t\tnewPath[psize] = adj;\n\t\t\t\t\tthis.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// path is full, so make sure it eats its tail\n\t\tlet last = path[psize - 1];\n\t\tlet fnd = false;\n\t\tfor (let n = 0; n < graph[last - 1].length; n++)\n\t\t{\n\t\t\tif (graph[last - 1][n] + 1 == path[0])\n\t\t\t{\n\t\t\t\tfnd = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!fnd) return;\n\n\t\t// make sure every element in the path has exactly 2 neighbours within the path; otherwise it is spanning a bridge, which\n\t\t// is an undesirable ring definition\n\t\tfor (let n = 0; n < path.length; n++)\n\t\t{\n\t\t\tlet count = 0, p = path[n] - 1;\n\t\t\tfor (let i = 0; i < graph[p].length; i++) if (path.indexOf(graph[p][i] + 1) >= 0) count++;\n\t\t\tif (count != 2) return; // invalid\n\t\t}\n\n\t\t// reorder the array then look for duplicates\n\t\tlet first = 0;\n\t\tfor (let n = 1; n < psize; n++) if (path[n] < path[first]) first = n;\n\t\tlet fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n\t\tlet flip = path[fm] < path[fp];\n\t\tif (first != 0 || flip)\n\t\t{\n\t\t\tlet newPath = Vec.numberArray(0, psize);\n\t\t\tfor (let n = 0; n < psize; n++) newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n\t\t\tpath = newPath;\n\t\t}\n\n\t\tfor (let n = 0; n < rings.length; n++)\n\t\t{\n\t\t\tlet look = rings[n];\n\t\t\tlet same = true;\n\t\t\tfor (let i = 0; i < psize; i++)\n\t\t\t{\n\t\t\t\tif (look[i] != path[i])\n\t\t\t\t{\n\t\t\t\t\tsame = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (same) return;\n\t\t}\n\n\t\trings.push(path);\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tPolymer blocks: handles metadata instructions that mark up sections of the molecule as being blocks that are assembled in a\n\trepeating pattern to build macromolecules.\n\n\tThe information contained in is relatively simplistic and abstract: properties such as complex repeating sequences, splicing of\n\tcross linkers, molecular weight distribution etc. need to be encoded external to the molecule, but they can reference the encoded\n\tblocks.\n\n\tEach block consists of 1-or-more atoms. The information is repeated identically for each atom, which makes the encoding largely\n\tinvariant to atom deletion by code that does not respect the extensions. Some initial post-correction may also be able to fix\n\tmodifications such as atom insertion, or to delete invalid block IDs.\n\n\tBlock IDs are stable, i.e. deleting block N does not cause block N+1 to be renumbered. New blocks pick the next available ID, or\n\tan available empty slot.\n\n\tProperties:\n\t\tid (starts at 1)\n\t\t#connecting bonds (mainly used as a checksum)\n\t\tflags: head-to-tail, head-to-head, random\n\t\tbond connectivity groups: useful sometimes when more than 2 bonds out of the block: can define how they get reconnected as bulk units\n*/\n\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*'; // atom name for \"something goes here\"\n\nexport enum PolymerBlockConnectivity\n{\n\tHeadToTail = 'ht', // the most orderly linear arrangement\n\tHeadToHead = 'hh', // alternating linear arrangement\n\tRandom = 'rnd', // explicitly random\n}\n\nexport class PolymerBlockUnit\n{\n\tpublic connect:PolymerBlockConnectivity = null; // null if not applicable\n\tpublic bondConn:number[] = null; // interbond connection groups; pairwise ordering: [b1a, b1b, b2a, b2b, ...]\n\tpublic atomName = new Map<number, number[]>(); // for atoms: list of name codes that an atom belongs to, if any; applies only to atoms on the boundary\n\tpublic bondIncl = new Map<number, number[]>(); // for bonds: list of name codes that the outgoing bond may be connected to (none = no restriction)\n\tpublic bondExcl = new Map<number, number[]>(); // for bonds: list of name codes that the outgoing bond may not be connected to (redundant when there are include atoms)\n\n\tconstructor(public atoms:number[]) {}\n\tpublic clone():PolymerBlockUnit\n\t{\n\t\tlet dup = new PolymerBlockUnit(this.atoms.slice(0));\n\t\tdup.connect = this.connect;\n\t\tif (this.bondConn) dup.bondConn = this.bondConn.slice(0);\n\t\tfor (let [k, v] of this.atomName.entries()) dup.atomName.set(k, v.slice(0));\n\t\tfor (let [k, v] of this.bondIncl.entries()) dup.bondIncl.set(k, v.slice(0));\n\t\tfor (let [k, v] of this.bondExcl.entries()) dup.bondExcl.set(k, v.slice(0));\n\t\treturn dup;\n\t}\n}\n\nexport class PolymerBlock\n{\n\tprivate units = new Map<number, PolymerBlockUnit>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public mol:Molecule)\n\t{\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tlet blockAtoms = new Map<number, number[]>();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tfor (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\tlet bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\t\tlet id = parseInt(bits[0]);\n\t\t\t\tif (id > 0)\n\t\t\t\t{\n\t\t\t\t\tlet atoms = blockAtoms.get(id);\n\t\t\t\t\tif (atoms) atoms.push(n); else atoms = [n];\n\t\t\t\t\tblockAtoms.set(id, atoms);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key of Vec.sorted(Array.from(blockAtoms.keys()))) this.appendBlock(key, blockAtoms.get(key));\n\t}\n\n\t// access to resulting content\n\tpublic getIDList():number[] {return Vec.sorted(Array.from(this.units.keys()));}\n\tpublic getUnit(id:number):PolymerBlockUnit {return this.units.get(id);}\n\tpublic getUnits():PolymerBlockUnit[] {return Array.from(this.units.values());}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\tthis.purgeExtraFields();\n\t\tfor (let key of Vec.sorted(Array.from(this.units.keys()))) this.writeUnit(key, this.units.get(key));\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:PolymerBlock):void\n\t{\n\t\tlet allKeys = other.getIDList();\n\t\tfor (let key of this.getIDList()) if (allKeys.includes(key))\n\t\t{\n\t\t\tlet unit = this.units.get(key);\n\t\t\tthis.units.delete(key);\n\t\t\tkey = this.nextIdentifier(allKeys);\n\t\t\tthis.units.set(key, unit);\n\t\t\tallKeys.push(key);\n\t\t}\n\t}\n\n\t// removes one artifact as affected by the given atoms (selected by best overlap), or returns false if nothing removed\n\tpublic removeUnit(id:number):void\n\t{\n\t\tlet unit = this.units.get(id);\n\t\tif (unit == null) return;\n\t\tthis.units.delete(id);\n\t\tlet pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(a);\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(pfx)) extra = Vec.remove(extra, i);\n\t\t\tthis.mol.setAtomExtra(a, extra);\n\t\t}\n\t\tfor (let b = 1; b <= this.mol.numBonds; b++)\n\t\t{\n\t\t\tlet extra = this.mol.bondExtra(b);\n\t\t\tif (Vec.isBlank(extra)) continue;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(pfx)) extra = Vec.remove(extra, i);\n\t\t\tthis.mol.setBondExtra(b, extra);\n\t\t}\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic removeAll():void\n\t{\n\t\tthis.units.clear();\n\t\tthis.purgeExtraFields();\n\t}\n\n\t// creates the block, writes content into the molecule, and returns the ID\n\tpublic createUnit(unit:PolymerBlockUnit):number\n\t{\n\t\tlet id = this.nextIdentifier();\n\t\tthis.units.set(id, unit.clone());\n\t\tthis.writeUnit(id, unit);\n\t\treturn id;\n\t}\n\n\tpublic static hasPolymerExtensions(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// for a given atom, return all of the polymer designations, or null if none\n\tpublic static getPolymerExtensions(mol:Molecule, atom:number):string[]\n\t{\n\t\tlet extra = mol.atomExtra(atom), polext:string[] = null;\n\t\tif (extra == null) return null;\n\t\tfor (let str of extra) if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) polext = Vec.append(polext, str);\n\t\treturn polext;\n\t}\n\n\t// remove all polymer extensions from a given atom\n\tpublic static removePolymerExtensions(mol:Molecule, atom:number):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tif (extra == null) return;\n\t\tlet modified = false;\n\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t{\n\t\t\textra = Vec.remove(extra, i);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setAtomExtra(atom, extra);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// given an ID and some atoms that correspond to it, see if it checks out: and if so, add it to the processed list\n\tprivate appendBlock(id:number, atoms:number[]):void\n\t{\n\t\tconst {mol} = this;\n\n\t\tlet nattach = 0;\n\t\tlet unit = new PolymerBlockUnit(atoms);\n\n\t\t// process the first atom in the list, and extract its properties that apply to the whole block (assuming degeneracy)\n\t\t// look for atom-encoded properties; note that tags (like connectivity) are degenerate, and are assumed to be the same for all atoms\n\t\tfor (let atom of atoms) for (let extra of mol.atomExtra(atom)) if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t{\n\t\t\tlet bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\tif (bits.length < 2 || parseInt(bits[0]) != id) continue;\n\t\t\tnattach = parseInt(bits[1]);\n\t\t\tfor (let n = 2; n < bits.length; n++)\n\t\t\t{\n\t\t\t\tif (bits[n] == PolymerBlockConnectivity.HeadToTail) unit.connect = PolymerBlockConnectivity.HeadToTail;\n\t\t\t\telse if (bits[n] == PolymerBlockConnectivity.HeadToHead) unit.connect = PolymerBlockConnectivity.HeadToHead;\n\t\t\t\telse if (bits[n] == PolymerBlockConnectivity.Random) unit.connect = PolymerBlockConnectivity.Random;\n\t\t\t\telse if (bits[n].startsWith('n'))\n\t\t\t\t{\n\t\t\t\t\tlet hasOuter = false;\n\t\t\t\t\tfor (let adj of mol.atomAdjList(atom)) if (!atoms.includes(adj)) {hasOuter = true; break;}\n\n\t\t\t\t\tif (hasOuter)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[n].substring(1).split(',');\n\t\t\t\t\t\tunit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sanity check: make sure attachment count matches # bonds crossing the block\n\t\tif (nattach < 0) return;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n\t\t\tif ((in1 && !in2) || (!in1 && in2)) nattach--;\n\t\t}\n\t\tif (nattach != 0) return;\n\n\t\t// pull out labelled bonds (if any) to derive the reconnection order\n\t\tlet bonds:number[] = null, order:number[] = null;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tfor (let extra of mol.bondExtra(n)) if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\tlet bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n\t\t\t\tif (bits.length < 2 || parseInt(bits[0]) != id) continue;\n\t\t\t\tfor (let i = 1; i < bits.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (bits[i].startsWith('i'))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[i].substring(1).split(',');\n\t\t\t\t\t\tunit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t\telse if (bits[i].startsWith('e'))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet subBits = bits[i].substring(1).split(',');\n\t\t\t\t\t\tunit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet o = parseInt(bits[i]);\n\t\t\t\t\t\tif (o > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbonds = Vec.append(bonds, n);\n\t\t\t\t\t\t\torder = Vec.append(order, o);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bonds != null)\n\t\t{\n\t\t\tif (bonds.length % 2 == 1) return; // has to be an even number\n\t\t\tunit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n\t\t}\n\n\t\tthis.units.set(id, unit);\n\t}\n\n\tprivate formatBlockAtom(id:number, unit:PolymerBlockUnit, atom:number):string\n\t{\n\t\tlet nbonds = 0;\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n\t\t\tif ((in1 && !in2) || (!in1 && in2)) nbonds++;\n\t\t}\n\n\t\tlet str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n\t\tif (unit.connect != null) str += ':' + unit.connect;\n\n\t\tlet names = unit.atomName.get(atom);\n\t\tif (Vec.notBlank(names)) str += ':n' + names.join(',');\n\n\t\treturn str;\n\t}\n\n\tprivate formatBlockBond(id:number, unit:PolymerBlockUnit, bond:number):string\n\t{\n\t\tlet in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n\t\tlet isBoundary = (in1 && !in2) || (in2 && !in1);\n\t\tif (!isBoundary) return null;\n\n\t\tlet idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n\t\tlet incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n\t\tif (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl)) return null;\n\n\t\tlet str = POLYMERBLOCK_EXTRA_POLYMER + id;\n\t\tif (idxConn >= 0) str += ':' + (idxConn + 1);\n\t\tif (Vec.notBlank(incl)) str += ':i' + incl.join(',');\n\t\tif (Vec.notBlank(excl)) str += ':e' + excl.join(',');\n\t\treturn str;\n\t}\n\n\tprivate purgeExtraFields():void\n\t{\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) this.mol.setAtomExtra(n, extra);\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet extra = this.mol.bondExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--) if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n\t\t\t{\n\t\t\t\textra = Vec.remove(extra, i);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) this.mol.setBondExtra(n, extra);\n\t\t}\n\t}\n\n\tprivate writeUnit(id:number, unit:PolymerBlockUnit):void\n\t{\n\t\tconst {mol} = this;\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet codeAtom = this.formatBlockAtom(id, unit, a);\n\t\t\tmol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n\t\t}\n\t\tfor (let b = 1; b <= mol.numBonds; b++)\n\t\t{\n\t\t\tlet codeBond = this.formatBlockBond(id, unit, b);\n\t\t\tif (codeBond) mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n\t\t}\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(keys?:number[]):number\n\t{\n\t\tif (!keys) keys = this.getIDList();\n\t\tif (keys.length == 0) return 1;\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2022 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tUtilities for getting & setting query features, for atoms and bonds. These are all stored within the reserved \"q\"\n\textension prefix.\n*/\n\nexport enum QueryTypeAtom\n{\n\tCharges = 'qC:',\t\t// allowed charges\n\tAromatic = 'qA:',\t\t// yes/no; must/not have an aromatic bond\n\tUnsaturated = 'qU:',\t// qU: yes/no; must/must not have a multiple bond (2 or higher)\n\tElements = 'qE:',\t\t// allowed elements (in addition to atom's label, if not '*')\n\tElementsNot = 'qE!',\t// disallowed elements (only relevant if label is '*')\n\tRingSizes = 'qR:',\t\t// list of small ring sizes that the atom must participate in\n\tRingSizesNot = 'qR!',\t// list of small ring sizes that the atom must not participate in\n\tRingBlock = 'qB:',\t\t// yes/no; whether the atom must be in a ring block\n\tNumRings = 'qN:',\t\t// list of allowed numbers of small rings (3..7) the atom may occur in\n\tRingBonds = 'qG:',\t\t// qG: list of allowed # of bonds that are in a ring\n\tAdjacency = 'qJ:',\t\t// list of allowed adjacency counts\n\tBondSums = 'qO:',\t\t// list of allowed sums of adjacent bond orders\n\tValences = 'qV:',\t\t// list of allowed valences (sum:BO - chg + unp + hyd)\n\tHydrogens = 'qH:',\t\t// list of allowed hydrogen counts (virtual and actual)\n\tIsotopes = 'qI:',\t\t// list of allowed isotopes\n\tSubFrags = 'qX:',\t\t// list of allowed sub-fragments (inline encoding, like abbreviations)\n\tSubFragsNot = 'qX!',\t// list of disallowed sub-fragments\n}\n\nexport enum QueryTypeBond\n{\n\tRingSizes = 'qR:',\t\t// list of small ring sizes that the bond must participate in\n\tRingSizesNot = 'qR!',\t// list of small ring sizes that the bond must not participate in\n\tRingBlock = 'qB:',\t\t// yes/no; whether the atom must be in a ring block\n\tNumRings = 'qN:',\t\t// list of allowed numbers of small rings (3..7) the bond may occur in\n\tOrders = 'qO:',\t\t\t// list of allowed bond orders; allowed: (0,1,2,3,4,-1) (-1==aromatic)\n}\n\nexport class QueryUtil\n{\n\t// ------------------ public methods --------------------\n\n\t// determine whether there's any kind of query info associated with the atom or bond\n\tpublic static hasAnyQueryAtom(mol:Molecule, atom:number):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith('q')) return true;\n\t\treturn false;\n\t}\n\tpublic static hasAnyQueryBond(mol:Molecule, bond:number):boolean\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith('q')) return true;\n\t\treturn false;\n\t}\n\n\t// return whether a specific kind of query is present\n\tpublic static hasQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom):boolean\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return true;\n\t\treturn false;\n\t}\n\n\tpublic static hasQueryBond(mol:Molecule, bond:number, type:QueryTypeBond):boolean\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return true;\n\t\treturn false;\n\t}\n\n\t// removes any instances of a specific kind of query\n\tpublic static deleteQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom):void\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tlet modified = false;\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setAtomExtra(atom, extra);\n\t}\n\tpublic static deleteQueryBond(mol:Molecule, bond:number, type:QueryTypeBond):void\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tlet modified = false;\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type))\n\t\t{\n\t\t\textra.splice(n, 1);\n\t\t\tmodified = true;\n\t\t}\n\t\tif (modified) mol.setBondExtra(bond, extra);\n\t}\n\n\t// remove all query features from atom/bond\n\tpublic static deleteQueryAtomAll(mol:Molecule, atom:number)\n\t{\n\t\tmol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n\t}\n\tpublic static deleteQueryBondAll(mol:Molecule, bond:number)\n\t{\n\t\tmol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n\t}\n\n\t// fetch the payload content for a particular type, or null if not found\n\tpublic static queryAtomString(mol:Molecule, atom:number, type:QueryTypeAtom):string\n\t{\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return extra[n].substring(type.length);\n\t\treturn null;\n\t}\n\tpublic static queryAtomStringList(mol:Molecule, atom:number, type:QueryTypeAtom):string[]\n\t{\n\t\tlet extra = mol.atomExtra(atom), list = null;\n\t\tif (extra != null) for (let str of extra) if (str.startsWith(type)) list = Vec.append(list, str.substring(type.length));\n\t\treturn list;\n\t}\n\tpublic static queryBondString(mol:Molecule, bond:number, type:QueryTypeBond):string\n\t{\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) return extra[n].substring(type.length);\n\t\treturn null;\n\t}\n\n\t// set the query payload for a particular type; null or empty string will cause it to be deleted instead\n\tpublic static setQueryAtom(mol:Molecule, atom:number, type:QueryTypeAtom, str:string):void\n\t{\n\t\tif (!str)\n\t\t{\n\t\t\tthis.deleteQueryAtom(mol, atom, type);\n\t\t\treturn;\n\t\t}\n\t\tlet value = type + str;\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (extra[n].startsWith(type))\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\textra[n] = value;\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\telse extra.splice(n, 1);\n\t\t\t}\n\t\t}\n\t\tif (value != null) extra.push(value);\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\tpublic static setQueryAtomList(mol:Molecule, atom:number, type:QueryTypeAtom, list:string[]):void\n\t{\n\t\tif (Vec.isBlank(list))\n\t\t{\n\t\t\tthis.deleteQueryAtom(mol, atom, type);\n\t\t\treturn;\n\t\t}\n\t\tlet extra = mol.atomExtra(atom);\n\t\tfor (let n = extra.length - 1; n >= 0; n--) if (extra[n].startsWith(type)) extra.splice(n, 1);\n\t\tfor (let str of list) extra.push(type + str);\n\t\tmol.setAtomExtra(atom, extra);\n\t}\n\tpublic static setQueryBond(mol:Molecule, bond:number, type:QueryTypeBond, str:string):void\n\t{\n\t\tif (!str)\n\t\t{\n\t\t\tthis.deleteQueryBond(mol, bond, type);\n\t\t\treturn;\n\t\t}\n\t\tlet value = type + str;\n\t\tlet extra = mol.bondExtra(bond);\n\t\tfor (let n = extra.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (extra[n].startsWith(type))\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\textra[n] = value;\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\telse extra.splice(n, 1);\n\t\t\t}\n\t\t}\n\t\tif (value != null) extra.push(value);\n\t\tmol.setBondExtra(bond, extra);\n\t}\n\n\t// fetching of specific query types from atoms, parsed out into the right datastructure\n\tpublic static queryAtomCharges(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges));}\n\tpublic static queryAtomAromatic(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic));}\n\tpublic static queryAtomUnsaturated(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated));}\n\tpublic static queryAtomElements(mol:Molecule, atom:number):string[]\n\t\t{return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements));}\n\tpublic static queryAtomElementsNot(mol:Molecule, atom:number):string[]\n\t\t{return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot));}\n\tpublic static queryAtomRingSizes(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes));}\n\tpublic static queryAtomRingSizesNot(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot));}\n\tpublic static queryAtomRingBlock(mol:Molecule, atom:number):boolean\n\t\t{return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock));}\n\tpublic static queryAtomNumRings(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings));}\n\tpublic static queryAtomRingBonds(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds));}\n\tpublic static queryAtomAdjacency(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency));}\n\tpublic static queryAtomBondSums(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums));}\n\tpublic static queryAtomValences(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences));}\n\tpublic static queryAtomHydrogens(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens));}\n\tpublic static queryAtomIsotope(mol:Molecule, atom:number):number[]\n\t\t{return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes));}\n\tpublic static queryAtomSubFrags(mol:Molecule, atom:number):Molecule[]\n\t\t{return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags));}\n\tpublic static queryAtomSubFragsNot(mol:Molecule, atom:number):Molecule[]\n\t\t{return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot));}\n\n\t// fetching of specific query types from bonds, parsed out into the right datastructure\n\tpublic static queryBondRingSizes(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes));}\n\tpublic static queryBondRingSizesNot(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot));}\n\tpublic static queryBondRingBlock(mol:Molecule, bond:number):boolean\n\t\t{return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock));}\n\tpublic static queryBondNumRings(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings));}\n\tpublic static queryBondOrders(mol:Molecule, bond:number):number[]\n\t\t{return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders));}\n\n\t// setting of specific query types for atoms\n\tpublic static setQueryAtomCharges(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value));}\n\tpublic static setQueryAtomAromatic(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value));}\n\tpublic static setQueryAtomUnsaturated(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value));}\n\tpublic static setQueryAtomElements(mol:Molecule, atom:number, value:string[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value));}\n\tpublic static setQueryAtomElementsNot(mol:Molecule, atom:number, value:string[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value));}\n\tpublic static setQueryAtomRingSizes(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingSizesNot(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingBlock(mol:Molecule, atom:number, value:boolean):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value));}\n\tpublic static setQueryAtomNumRings(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value));}\n\tpublic static setQueryAtomRingBonds(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value));}\n\tpublic static setQueryAtomAdjacency(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value));}\n\tpublic static setQueryAtomBondSums(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value));}\n\tpublic static setQueryAtomValences(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value));}\n\tpublic static setQueryAtomHydrogens(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value));}\n\tpublic static setQueryAtomIsotope(mol:Molecule, atom:number, value:number[]):void\n\t\t{this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value));}\n\tpublic static setQueryAtomSubFrags(mol:Molecule, atom:number, value:Molecule[]):void\n\t\t{this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value));}\n\tpublic static setQueryAtomSubFragsNot(mol:Molecule, atom:number, value:Molecule[]):void\n\t\t{this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value));}\n\n\t// setting of specific query types for bonds\n\tpublic static setQueryBondRingSizes(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value));}\n\tpublic static setQueryBondRingSizesNot(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value));}\n\tpublic static setQueryBondRingBlock(mol:Molecule, bond:number, value:boolean):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value));}\n\tpublic static setQueryBondNumRings(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value));}\n\tpublic static setQueryBondOrders(mol:Molecule, bond:number, value:number[]):void\n\t\t{this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value));}\n\n\t// ------------------ private methods --------------------\n\n\t// conversion of molecule-encoded strings into appropriate datatypes\n\tprivate static parseIntegers(str:string):number[]\n\t{\n\t\tif (!str) return null;\n\t\tlet strlist = str.split(',');\n\t\tlet intlist:number[] = new Array(strlist.length);\n\t\tfor (let n = 0; n < strlist.length; n++) intlist[n] = parseInt(strlist[n]);\n\t\treturn intlist;\n\t}\n\tprivate static parseStrings(str:string):string[]\n\t{\n\t\tif (!str) return null;\n\t\treturn str.split(',');\n\t}\n\tprivate static parseBoolean(str:string):boolean\n\t{\n\t\treturn !str ? null : str == 'yes';\n\t}\n\tpublic static parseMolecules(list:string[]):Molecule[]\n\t{\n\t\tif (!list) return null;\n\t\tlet mols:Molecule[] = [];\n\t\tfor (let molstr of list)\n\t\t{\n\t\t\tlet mol = Molecule.fromString(molstr);\n\t\t\tif (MolUtil.notBlank(mol)) mols.push(mol);\n\t\t}\n\t\treturn mols;\n\t}\n\n\t// conversion of appropriate datatypes into molecule-encoded strings\n\tprivate static formatIntegers(list:number[]):string\n\t{\n\t\tif (Vec.isBlank(list)) return null;\n\t\tlet str = '';\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ',';\n\t\t\tstr += list[n];\n\t\t}\n\t\treturn str;\n\t}\n\tprivate static formatStrings(list:string[]):string\n\t{\n\t\tif (Vec.isBlank(list)) return null;\n\t\tlet str = '';\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ',';\n\t\t\tstr += list[n];\n\t\t}\n\t\treturn str;\n\t}\n\tprivate static formatBoolean(value:boolean):string\n\t{\n\t\treturn value ? 'yes' : 'no';\n\t}\n\tprivate static formatMolecules(mols:Molecule[]):string[]\n\t{\n\t\tif (Vec.isBlank(mols)) return null;\n\t\tlet list:string[] = [];\n\t\tfor (let mol of mols) if (MolUtil.notBlank(mol)) list.push(mol.toString());\n\t\treturn list;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {CoordUtil} from './CoordUtil';\nimport {Molecule} from './Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tSketchUtil: static methods for calculating properties of molecules, typically of the geometric variety.\n*/\n\nexport interface GuidelineSprout\n{\n\tatom:number; // source atom (0 if free-drawing)\n\torders:number[]; // applicable bond orders\n\tx:number[]; // destination in molecular coordinates\n\ty:number[]; // \"\n\tsourceX?:number; // source position in screen coordinates\n\tsourceY?:number; // \"\n\tdestX?:number[]; // destination positions in screen coordinates\n\tdestY?:number[];\n}\n\nexport enum Geometry\n{\n\tLinear = 0,\n\tBent,\n\tTrigonal,\n\tTetra1,\n\tTetra2,\n\tSqPlan,\n\tBasePyram,\n\tTrigBip,\n\tOcta1,\n\tOcta2\n}\n\nexport class SketchUtil\n{\n\tpublic static GEOM_ANGLES =\n\t[ // (these match the Geometry* constants)\n\t\t[0, 180 * DEGRAD],\n\t\t[0, 120 * DEGRAD],\n\t\t[0, 120 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n\t\t[0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n\t\t[0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n\t\t[0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n\t\t[0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n\t];\n\n\t// adds a new atom to the molecule, and returns its index; the new atom is placed in a reasonable position\n\tpublic static placeNewAtom(mol:Molecule, el:string):number\n\t{\n\t\tlet box = mol.boundary();\n\t\tlet x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n\t\t// MAYBE: see if the highest-indexed atom is a loner, and maybe line the new one up with it?\n\t\treturn mol.addAtom(el, x, y);\n\t}\n\n\t// finds a nice place to put the new fragment which does not overlap existing content, then appends the atoms & bonds to\n\t// the mol parameter\n\tpublic static placeNewFragment(mol:Molecule, frag:Molecule):void\n\t{\n\t\tif (frag.numAtoms == 0) return;\n\n\t\tlet dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n\t\tlet dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n\t\tlet mbox = mol.boundary(), fbox = frag.boundary();\n\n\t\tfor (let n = 0; n < 8; n++)\n\t\t{\n\t\t\tlet vx = dirX[n], vy = dirY[n];\n\n\t\t\tif (n == 0 || n == 3 || n == 5) dx[n] = mbox.minX() - fbox.maxX();\n\t\t\telse if (n == 2 || n == 4 || n == 7) dx[n] = mbox.maxX() - fbox.minX();\n\t\t\telse dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n\n\t\t\tif (n == 5 || n == 6 || n == 7) dy[n] = mbox.minY() - fbox.maxY();\n\t\t\telse if (n == 0 || n == 1 || n == 2) dy[n] = mbox.maxY() - fbox.minY();\n\t\t\telse dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n\n\t\t\tdx[n] -= vx;\n\t\t\tdy[n] -= vy;\n\t\t\tscore[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n\n\t\t\tvx *= 0.25;\n\t\t\tvy *= 0.25;\n\t\t\tfor (let iter = 100; iter > 0; iter--)\n\t\t\t{\n\t\t\t\tlet iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n\t\t\t\tif (iscore <= score[n]) break;\n\t\t\t\tscore[n] = iscore;\n\t\t\t\tdx[n] += vx;\n\t\t\t\tdy[n] += vy;\n\t\t\t}\n\t\t\tfor (let iter = 100; iter > 0; iter--) for (let d = 0; d < 8; d++)\n\t\t\t{\n\t\t\t\tvx = dirX[d] * 0.1;\n\t\t\t\tvy = dirY[d] * 0.1;\n\t\t\t\tlet iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n\t\t\t\tif (iscore <= score[n]) break;\n\t\t\t\tscore[n] = iscore;\n\t\t\t\tdx[n] += vx;\n\t\t\t\tdy[n] += vy;\n\t\t\t}\n\t\t}\n\n\t\tlet best = 0;\n\t\tfor (let n = 1; n < 8; n++) if (score[n] > score[best]) best = n;\n\n\t\tfrag = frag.clone();\n\t\tfor (let n = 1; n <= frag.numAtoms; n++) frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n\n\t\tmol.append(frag);\n\t}\n\n\t// scoring function for above: more congested is better, but any two atoms < 1A = zero; post-biased to favour square\n\t// aspect ratio\n\tprivate static fragPosScore(mol:Molecule, frag:Molecule, dx:number, dy:number):number\n\t{\n\t\tlet score = 0;\n\t\tfor (let i = 1; i <= mol.numAtoms; i++) for (let j = 1; j <= frag.numAtoms; j++)\n\t\t{\n\t\t\tlet ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n\t\t\tlet dist2 = ox * ox + oy * oy;\n\t\t\tif (dist2 < 1) return 0;\n\t\t\tscore += 1 / dist2;\n\t\t}\n\n\t\tlet mbox = mol.boundary(), fbox = frag.boundary();\n\t\tlet minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n\t\tlet minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n\n\t\tlet rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n\t\tlet ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n\t\treturn score / ratio;\n\t}\n\n\t// reduces the number of atoms until there are none that are really close together\n\tpublic static mergeOverlappingAtoms(mol:Molecule):number[]\n\t{\n\t\treturn SketchUtil.mergeFragmentsDiv(mol, 0);\n\t}\n\n\t// for a molecule which has been put together from two fragments, looks for atoms which overlap; the molecule is divided up\n\t// into {1 .. div} and {div+1 .. #atoms}, and which are matched against each other; whenever two atoms are found to overlap,\n\t// they are merged together; non-carbon atoms are more likely to be retained\n\t// the return value is a re-mapping index, i.e. ret[old_atom_number-1]=new_atom_number; whenever two atoms are merged, they both\n\t// end up with the same new-atom-number.\n\t// NOTE: special case where div==0, which makes all atoms fair game, i.e. there is no partition\n\tpublic static mergeFragmentsDiv(mol:Molecule, div:number):number[]\n\t{\n\t\tconst na = mol.numAtoms;\n\t\tlet omask = CoordUtil.overlappingAtomMask(mol);\n\n\t\tlet chopmask = Vec.booleanArray(false, na);\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tlet remap:number[] = [];\n\t\tfor (let n = 0; n < na; n++) remap.push(n + 1);\n\n\t\tlet div1 = div, div2 = div + 1;\n\t\tif (div == 0) div1 = na;\n\n\t\t// any atoms which overlap each other in space are made into the same\n\t\tfor (let i = 1; i <= div1; i++) if (omask[i - 1] && !chopmask[i - 1])\n\t\t{\n\t\t\tif (div == 0) div2 = i + 1;\n\n\t\t\tfor (let j = div2; j <= na; j++) if (omask[j - 1] && !chopmask[j - 1])\n\t\t\t{\n\t\t\t\tif (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\t\tlet oldN = j, newN = i; // remove the later one, by default\n\n\t\t\t\t// want to keep the more exotic of the two\n\t\t\t\tlet exotic = [0, 0];\n\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tlet a = k == 0 ? i : j;\n\t\t\t\t\texotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n\t\t\t\t\t\t\t+ (mol.atomElement(a) == 'X' ? -100 : 0)\n\t\t\t\t\t\t\t+ (mol.atomCharge(a) != 0 ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomUnpaired(a) != 0 ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n\t\t\t\t\t\t\t+ (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n\t\t\t\t\t\t\t+ (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n\t\t\t\t}\n\n\t\t\t\tif (exotic[1] > exotic[0]) {oldN = i; newN = j;}\n\n\t\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t\t{\n\t\t\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t\t\t}\n\t\t\t\tchopmask[oldN - 1] = true;\n\t\t\t\tremap[oldN - 1] = newN;\n\t\t\t}\n\t\t}\n\n\t\t// do the actual surgery\n\t\tfor (let n = na; n >= 1; n--) if (chopmask[n - 1])\n\t\t{\n\t\t\tif (n <= div) div--;\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tfor (let i = 0; i < na; i++) if (remap[i] > n) remap[i]--;\n\t\t}\n\t\tfor (let n = mol.numAtoms; n > div; n--) if (mol.atomElement(n) == 'X')\n\t\t{\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tfor (let i = 0; i < na; i++) if (remap[i] > n) remap[i]--;\n\t\t}\n\n\t\tMolUtil.removeDuplicateBonds(mol);\n\n\t\treturn remap;\n\t}\n\n\t// another variation on the merge theme: the atoms indicated by 'mask' are fair-game for joining to the atoms in the rest\n\t// of the molecule\n\tpublic static mergeFragmentsMask(mol:Molecule, mask:boolean[]):void\n\t{\n\t\tlet chopmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tlet na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tfor (let i = 1; i <= na; i++) if (mask[i - 1]) for (let j = 1; j <= na; j++)\n\t\t\tif (!mask[j - 1] && !chopmask[j - 1]) if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ)\n\t\t{\n\t\t\tlet oldN = j, newN = i; // remove the later one, by default\n\t\t\tif (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X') [oldN, newN] = [i, j];\n\t\t\t\n\t\t\tif (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN) mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n\t\t\tmol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n\t\t\tmol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n\t\t\tmol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(n) == oldN) mol.setBondFrom(n, newN);\n\t\t\t\tif (mol.bondTo(n) == oldN) mol.setBondTo(n, newN);\n\t\t\t}\n\n\t\t\tchopmask[oldN - 1] = true;\n\t\t}\n\t\tfor (let n = chopmask.length; n >= 1; n--) if (chopmask[n - 1]) mol.deleteAtomAndBonds(n);\n\t\tMolUtil.removeDuplicateBonds(mol);\n\t}\n\n\t// returns whether or not there is any way in which the given values of theta can match the indicated geometry\n\tpublic static matchAngleGeometry(geom:number, theta:number[]):boolean\n\t{\n\t\tif (theta.length <= 1) return true; // always possible\n\n\t\tlet match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n\t\tlet hit = Vec.booleanArray(false, match.length);\n\t\tfor (let n = 0; n < theta.length; n++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tfor (let i = 0; i < theta.length; i++) mtheta[i] = (theta[i] - theta[0]) * s;\n\t\t\tVec.setTo(hit, false);\n\t\t\tlet gotall = true;\n\t\t\tfor (let i = 0; i < mtheta.length; i++)\n\t\t\t{\n\t\t\t\tlet got = false;\n\t\t\t\tfor (let j = 0; j < match.length; j++) if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD)\n\t\t\t\t{\n\t\t\t\t\thit[j] = true;\n\t\t\t\t\tgot = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!got) {gotall = false; break;}\n\t\t\t}\n\t\t\tif (gotall) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// for a particular atom, figures out the outgoing angles that are most likely to be good for placing a new atom+bond; these\n\t// are found by postulating where a single bond might be drawn based on common geometries for the hybridisation, and using\n\t// simple geometric median-cut angles; the results are not ordered with any kind of preference\n\tpublic static primeDirections(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n\t\tlet exits = SketchUtil.exitVectors(mol, atom);\n\t\treturn GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n\t}\n\n\t// for a given atom, calculates a set of angles that protude outward based on positions between existing bond angles; this\n\t// is primarily used for proposing new bond positions when the hybridisation does not match one of the common sketch geometries\n\tpublic static exitVectors(mol:Molecule, atom:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom), sz = adj.length;\n\n\t\t// if it's a singleton, return 4 points of the compass\n\t\tif (sz == 0) return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n\n\t\t// if it's terminal, offer nothing\n\t\tif (sz == 1) return [];\n\n\t\t// there is enough content, so build the angles\n\t\tlet ret:number[] = [];\n\t\tlet ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet nn = n < sz - 1 ? n + 1 : 0;\n\t\t\tret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t// for a given atom, considers adding a new bond/atom of the specified bond order, and returns a list of angles\n\t// that are appropriate given the atom's hybridisation and current geometry; if the current geometry does not match\n\t// any of the common sketch patterns, an empty list will be returned\n\t// (note: recommend using exitVectors(..) if this method returns nothing)\n\tpublic static calculateNewBondAngles(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tconst sz = adj.length;\n\n\t\t// terminal atoms\n\t\tif (sz == 0)\n\t\t{\n\t\t\tlet atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n\t\t\tif (atblk <= 2)\n\t\t\t\treturn [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n\t\t\telse\n\t\t\t\treturn [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n\t\t}\n\n\t\t// obtain the \"guessed\" geometry options based on hybridisation, and try to map each of them onto the current\n\t\t// geometry; if any of them works, that becomes the answer\n\t\tlet geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tfor (let n = 0; n < geom.length; n++)\n\t\t{\n\t\t\tlet ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n\t\t\tif (ret != null) return ret;\n\t\t}\n\n\t\t// none of them match, get an empty list back\n\t\treturn [];\n\t}\n\n\t// considers the hybridisation state of the atom, and the order of a new bond that is about to be added, and returns\n\t// a list of common geometry codes that apply to the situation; returns 0-size if none are appropriate\n\tpublic static guessAtomGeometry(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet sz = adj.length, atno = mol.atomicNumber(atom);\n\t\tlet atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n\t\tlet el = mol.atomElement(atom);\n\n\t\t// sort the neighbours by priority\n\t\tlet adjBO:number[] = [], adjAN:number[] = [], pri:number[] = [];\n\t\tlet allSingle = true;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tadjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n\t\t\tadjAN.push(mol.atomicNumber(adj[n]));\n\t\t\tpri.push(adjBO[n] * 200 + adjAN[n]);\n\t\t\tif (adjBO[n] != 1) allSingle = true;\n\t\t}\n\t\tfor (let p = 0; p < sz - 1;)\n\t\t{\n\t\t\tif (pri[p] > pri[p + 1])\n\t\t\t{\n\t\t\t\tVec.swap(adj, p, p + 1);\n\t\t\t\tVec.swap(adjBO, p, p + 1);\n\t\t\t\tVec.swap(adjAN, p, p + 1);\n\t\t\t\tVec.swap(pri, p, p + 1);\n\t\t\t\tif (p > 0) p--;\n\t\t\t}\n\t\t\telse p++;\n\t\t}\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\n\t\t// if atom is terminal...\n\t\tif (sz == 1)\n\t\t{\n\t\t\tif (el == 'C' || el == 'N')\n\t\t\t{\n\t\t\t\t// allene-like\n\t\t\t\tif (adjBO[0] == 2 && order == 2) return [Geometry.Linear];\n\n\t\t\t\t// alkyne-like\n\t\t\t\tif ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3)) return [Geometry.Linear];\n\t\t\t}\n\n\t\t\t// octahedral option for d-blocks\n\t\t\tif (atblk > 2) return [Geometry.Octa1, Geometry.Octa2];\n\n\t\t\t// row 2 organics: trigonal only\n\t\t\tif (order != 0 && (el == 'C' || el == 'N' || el == 'O')) return [Geometry.Trigonal];\n\n\t\t\t// otherwise, linear and trigonal are the best options to run with\n\t\t\treturn [Geometry.Trigonal, Geometry.Linear];\n\t\t}\n\n\t\t// atom is linear: orthogonal angles are implied\n\t\tif (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD)\n\t\t{\n\t\t\tif (atblk <= 2)\n\t\t\t\treturn [Geometry.SqPlan];\n\t\t\telse\n\t\t\t\treturn [Geometry.Octa1, Geometry.Octa2];\n\t\t}\n\n\t\t// done with special cases: include all geometries sensible for the topology\n\t\tlet geom:number[] = [];\n\t\tif (atblk == 0) geom = [Geometry.Trigonal, Geometry.SqPlan];\n\t\telse if (atblk == 1) geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n\t\telse if (atblk == 2)\n\t\t{\n\t\t\tgeom.push(Geometry.Trigonal);\n\t\t\tif (el == 'C' && allSingle)\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t}\n\t\t\telse if (el == 'C' && !allSingle)\n\t\t\t{\n\t\t\t\t// nop\n\t\t\t}\n\t\t\telse if (elrow <= 3)\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeom.push(Geometry.Tetra1);\n\t\t\t\tgeom.push(Geometry.Tetra2);\n\t\t\t\tgeom.push(Geometry.SqPlan);\n\t\t\t\tgeom.push(Geometry.Octa1);\n\t\t\t\tgeom.push(Geometry.Octa2);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeom.push(Geometry.Octa1);\n\t\t\tgeom.push(Geometry.Octa2);\n\t\t}\n\n\t\t// remove the ones that don't fit\n\t\tfor (let n = geom.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (!SketchUtil.matchAngleGeometry(geom[n], ang)) geom.splice(n, 1);\n\t\t}\n\n\t\treturn geom;\n\t}\n\n\t// for a given geometry code, looks for ways to map the current set of angles onto the predefined set; when a lock is\n\t// found, the unoccupied positions are summarised and returned; if there is no way to perform the map, null is returned\n\tpublic static mapAngleSubstituent(geom:number, ang:number[]):number[]\n\t{\n\t\tlet gtheta = SketchUtil.GEOM_ANGLES[geom];\n\t\tconst asz = ang.length, gsz = gtheta.length;\n\n\t\t// if there are no vacancies, stop now\n\t\tif (asz >= gsz) return null;\n\n\t\t// if the atom is isolated, no need to rotate or lock anything\n\t\tif (asz == 0) return gtheta.slice(0);\n\n\t\t// collect all the angles implied by the geometry, in all its degeneracy\n\t\tlet vac:number[] = [];\n\t\tfor (let n = 0; n < asz; n++) for (let k = 0; k < gsz; k++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tlet gang:number[] = [];\n\t\t\tfor (let i = 0; i < gsz; i++) gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n\t\t\tlet mask = Vec.booleanArray(false, gsz);\n\t\t\tlet mcount = 0;\n\t\t\tfor (let i = 0; i < gsz; i++) if (!mask[i]) for (let j = 0; j < asz; j++)\n\t\t\t\tif (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD)\n\t\t\t{\n\t\t\t\tmask[i] = true;\n\t\t\t\tmcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (mcount != asz) continue;\n\t\t\tfor (let i = 0; i < gsz; i++) if (!mask[i]) vac.push(gang[i]);\n\t\t}\n\t\tif (vac.length == 0) return null;\n\n\t\t// sort and remove degenerates\n\t\tvac = GeomUtil.sortAngles(vac);\n\t\tfor (let n = 0; n < vac.length - 1; n++)\n\t\t{\n\t\t\tlet th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n\t\t\tif (Math.abs(dth) < 5 * DEGRAD)\n\t\t\t{\n\t\t\t\tvac[n] = th1 + 0.5 * dth;\n\t\t\t\tvac.splice(n + 1, 1);\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\n\t\treturn vac;\n\t}\n\n\t// for a given molecule, ensures that a specific atom fits a given geometry template; if so, returns null; if not, looks for\n\t// a way to fit the bonds into the geometry template with minimum perturbation, and applies the result by rotating the\n\t// bonds as necessary; bonds that occur in rings constrain the options significantly\n\tpublic static refitAtomGeometry(mol:Molecule, atom:number, geom:number):Molecule\n\t{\n\t\tlet gtheta = SketchUtil.GEOM_ANGLES[geom];\n\t\tlet gsz = gtheta.length;\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet asz = adj.length;\n\n\t\t// must be nore than one atom, and cannot exceed the geometry extent\n\t\tif (asz <= 1 || asz > gsz) return null;\n\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tlet inRing = Vec.booleanArray(false, asz);\n\t\tlet allInRing = true;\n\t\tfor (let n = 0; n < asz; n++)\n\t\t{\n\t\t\tinRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n\t\t\tif (!inRing[n]) allInRing = false;\n\t\t}\n\t\tif (allInRing) return null; // can't work with this\n\n\t\t// start looking for the best set-of-angles for the new geometry\n\t\tlet bestAng:number[] = null;\n\t\tlet bestScore = 0;\n\t\tlet ww = MolUtil.calculateWalkWeight(mol, atom);\n\n\t\tfor (let i = 0; i < gsz; i++) for (let j = 0; j < asz; j++) for (let s = 1; s >= -1; s -= 2)\n\t\t{\n\t\t\tlet newAng = Vec.numberArray(0, asz);\n\t\t\tlet mask = Vec.booleanArray(false, gsz);\n\n\t\t\tfor (let n1 = 0; n1 < asz; n1++)\n\t\t\t{\n\t\t\t\tlet best = -1;\n\t\t\t\tlet bdiff = 0;\n\t\t\t\tfor (let n2 = 0; n2 < gsz; n2++) if (!mask[n2])\n\t\t\t\t{\n\t\t\t\t\tlet th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n\t\t\t\t\tlet diff = Math.abs(angleDiff(th, ang[n1]));\n\t\t\t\t\tif (best < 0 || diff < bdiff)\n\t\t\t\t\t{\n\t\t\t\t\t\tbest = n2;\n\t\t\t\t\t\tbdiff = diff;\n\t\t\t\t\t\tnewAng[n1] = th;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmask[best] = true;\n\t\t\t}\n\n\t\t\tlet ringClash = false;\n\t\t\tfor (let n = 0; n < asz; n++) if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD)\n\t\t\t{\n\t\t\t\tringClash = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ringClash) continue;\n\n\t\t\tlet score = 0;\n\t\t\tfor (let n = 0; n < asz; n++) score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n\t\t\tif (bestAng == null || score < bestScore)\n\t\t\t{\n\t\t\t\tbestAng = newAng;\n\t\t\t\tbestScore = score;\n\t\t\t}\n\t\t}\n\n\t\tif (bestAng == null) return null;\n\n\t\t// if the best one is basically what we already have, then fail\n\t\tlet same = true;\n\t\tfor (let n = 0; n < asz; n++) if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {same = false; break;}\n\t\tif (same) return null;\n\n\t\t// apply the changes\n\t\tmol = mol.clone();\n\t\tfor (let n = 0; n < asz; n++) if (!inRing[n]) CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n\t\treturn mol;\n\t}\n\n\t// for a given source atom, and one-or-more adjacent atoms, and a list of possible geometries, propose\n\t// a molecule in which one of the adjacent atoms has been rotated around to lock into the next geometry-valid\n\t// position; return value of null means that no new options were discovered\n\t// note: it is assumed that the adjacent atoms are terminal\n\tpublic static switchAtomGeometry(mol:Molecule, src:number, dst:number[], geoms:number[]):Molecule\n\t{\n\t\tlet bestAtom = 0;\n\t\tlet bestAng = 0, bestX = 0, bestY = 0;\n\t\tlet adj = mol.atomAdjList(src);\n\t\tlet ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n\t\tlet cx = mol.atomX(src), cy = mol.atomY(src);\n\n\t\tfor (let i = 0; i < dst.length; i++)\n\t\t{\n\t\t\tlet a = adj.indexOf(dst[i]);\n\t\t\tlet curth = ang[a];\n\t\t\tfor (let n = 0, p = 0; n < adj.length; n++) if (n != a) theta[p++] = ang[n];\n\t\t\tlet r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n\n\t\t\tfor (let j = 0; j < geoms.length; j++)\n\t\t\t{\n\t\t\t\tif (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length) continue;\n\n\t\t\t\tlet newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n\t\t\t\tif (newAng != null) for (let n = 0; n < newAng.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet dth = angleDiff(newAng[n], curth);\n\t\t\t\t\tif (Math.abs(dth) < 3 * DEGRAD) continue;\n\t\t\t\t\tif (dth < 0) dth += TWOPI;\n\n\t\t\t\t\tif (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet x = cx + r * Math.cos(newAng[n]);\n\t\t\t\t\t\tlet y = cy + r * Math.sin(newAng[n]);\n\t\t\t\t\t\tif (CoordUtil.atomAtPoint(mol, x, y) != 0) continue;\n\n\t\t\t\t\t\tbestAtom = dst[i];\n\t\t\t\t\t\tbestAng = dth;\n\t\t\t\t\t\tbestX = x;\n\t\t\t\t\t\tbestY = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// note: this means only the first geometry is used; seems to work best this way\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (bestAtom == 0) return null;\n\n\t\t// apply the changes\n\t\tmol = mol.clone();\n\t\tmol.setAtomPos(bestAtom, bestX, bestY);\n\t\treturn mol;\n\t}\n\n\t// for a list of atoms, consider all pairwise combinations for potentially connecting up; the basic idea is that atoms which are not\n\t// bonded, but are very near the ideal bond distance, always get connected; if there are none of these, it picks the two atoms which\n\t// are closest together; the return value if an array of pairs, i.e. {from1,to1,from2,to2,...}\n\t// NOTE: it will not add bonds between any two atoms which are in the same ring block; this makes it too easy to accidently create\n\t// systems which are too interconnected\n\tpublic static pickAtomsToConnect(mol:Molecule, aidx:number[]):number[]\n\t{\n\t\tif (aidx.length < 2) return null;\n\t\tif (aidx.length == 2)\n\t\t{\n\t\t\tif (mol.findBond(aidx[0], aidx[1]) > 0) return null;\n\t\t\treturn aidx;\n\t\t}\n\n\t\t// multiple atoms, so pass down the list looking for inspiration\n\t\tconst AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n\t\tlet bestDSQ = Number.MAX_VALUE;\n\t\tlet bestA1 = 0, bestA2 = 0;\n\n\t\tlet conn:number[] = [];\n\n\t\tfor (let i = 0; i < aidx.length - 1; i++) for (let j = i + 1; j < aidx.length; j++)\n\t\t{\n\t\t\tif (mol.findBond(aidx[i], aidx[j]) > 0) continue;\n\t\t\tlet dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n\t\t\tif (dsq < AUTO_DSQ) {conn.push(aidx[i]); conn.push(aidx[j]);}\n\t\t\telse if (dsq < bestDSQ) {bestDSQ = dsq; bestA1 = aidx[i]; bestA2 = aidx[j];}\n\t\t}\n\t\tif (conn.length == 0 && bestA1 != 0) {conn.push(bestA1); conn.push(bestA2);}\n\n\t\treturn conn.length == 0 ? null : conn;\n\t}\n\n\t// for a given atom and a list of directions in which a new atom+bond might be created, return which is preferable\n\tpublic static pickNewAtomDirection(mol:Molecule, atom:number, theta:number[]):number\n\t{\n\t\tif (theta.length == 1) return theta[0];\n\n\t\tlet bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n\t\tfor (let n = 0; n < theta.length; n++)\n\t\t{\n\t\t\tlet px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n\t\t\tlet py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n\n\t\t\tlet score = CoordUtil.congestionPoint(mol, px, py);\n\t\t\tif (score > bestScore) continue;\n\t\t\tif (CoordUtil.overlapsAtom(mol, px, py, 0.2)) score += 1E5;\n\t\t\tif (score < bestScore) {bestTheta = theta[n]; bestScore = score;}\n\t\t}\n\t\treturn bestTheta;\n\t}\n\n\t// for atoms qualifying with the given mask, any group of more than one atom that overlap, merges them together\n\tpublic static joinOverlappingAtoms(mol:Molecule, mask:boolean[]):Molecule\n\t{\n\t\tmol = mol.clone();\n\t\tmask = mask.slice(0);\n\n\t\tconst na = mol.numAtoms;\n\t\tlet mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n\n\t\tlet groups:number[][] = [];\n\t\tlet groupX:number[] = [], groupY:number[] = [];\n\n\t\t// find all the groups\n\t\tfor (let i = 0; i < na - 1; i++) if (mask[i])\n\t\t{\n\t\t\tlet g:number[] = [i + 1];\n\t\t\tlet x = mx[i], y = my[i];\n\t\t\tfor (let j = i + 1; j < na; j++) if (mask[j])\n\t\t\t{\n\t\t\t\tif (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\t\tg.push(j + 1);\n\t\t\t\tx += mx[j];\n\t\t\t\ty += my[j];\n\n\t\t\t\t// repurpose all bonds from j -> i\n\t\t\t\tlet adjb = mol.atomAdjBonds(j + 1);\n\t\t\t\tfor (let n = 0; n < adjb.length; n++)\n\t\t\t\t{\n\t\t\t\t\tif (mol.bondFrom(adjb[n]) == j + 1) mol.setBondFrom(adjb[n], i + 1);\n\t\t\t\t\telse if (mol.bondTo(adjb[n]) == j + 1) mol.setBondTo(adjb[n], i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (g.length == 1) continue;\n\n\t\t\tgroups.push(g);\n\t\t\tgroupX.push(x / g.length);\n\t\t\tgroupY.push(y / g.length);\n\t\t}\n\n\t\tif (groups.length == 0) return null;\n\n\t\t// now perform the surgery\n\t\tlet keepmask = Vec.booleanArray(true, na);\n\t\tfor (let n = 0; n < groups.length; n++)\n\t\t{\n\t\t\tlet g = groups[n];\n\t\t\tmol.setAtomPos(g[0], groupX[n], groupY[n]);\n\t\t\tfor (let i = 1; i < g.length; i++) keepmask[g[i] - 1] = false;\n\t\t}\n\t\tmol = MolUtil.subgraphMask(mol, keepmask);\n\t\tMolUtil.removeDuplicateBonds(mol);\n\t\treturn mol;\n\t}\n\n\t// for the group of atoms defined by the mask, moves them all out to the far edge, as defined by dx/dy (should be 0/1/-1);\n\t// returns null if the operation is invalid for any reason, e.g. the atoms are already along the specified edge\n\tpublic static moveToEdge(mol:Molecule, mask:boolean[], dx:number, dy:number):Molecule\n\t{\n\t\tlet gotS = false, gotN = false;\n\t\tlet sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n\t\tlet nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(n), y = mol.atomY(n);\n\t\t\tif (mask[n - 1])\n\t\t\t{\n\t\t\t\tif (!gotS || x < sx1) sx1 = x;\n\t\t\t\tif (!gotS || y < sy1) sy1 = y;\n\t\t\t\tif (!gotS || x > sx2) sx2 = x;\n\t\t\t\tif (!gotS || y > sy2) sy2 = y;\n\t\t\t\tgotS = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!gotN || x < nx1) nx1 = x;\n\t\t\t\tif (!gotN || y < ny1) ny1 = y;\n\t\t\t\tif (!gotN || x > nx2) nx2 = x;\n\t\t\t\tif (!gotN || y > ny2) ny2 = y;\n\t\t\t\tgotN = true;\n\t\t\t}\n\t\t}\n\n\t\t// check to see if it's already at the farthest extent\n\t\tconst SEPARATE = 1.0, SEPTEST = 0.9;\n\t\tif ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n\t\t\t(dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n\t\t\t(dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n\t\t\t(dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\t// apply the move\n\t\tmol = mol.clone();\n\t\tlet ox = 0, oy = 0;\n\t\tif (dx < 0) ox = nx1 - sx2 - SEPARATE;\n\t\tif (dx > 0) ox = nx2 - sx1 + SEPARATE;\n\t\tif (dy < 0) oy = ny1 - sy2 - SEPARATE;\n\t\tif (dy > 0) oy = ny2 - sy1 + SEPARATE;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1]) mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n\n\t\treturn mol;\n\t}\n\n\t// adds some number of additional hydrogen atoms to a parent atom, and selects reasonable position coordinates for them\n\tpublic static placeAdditionalHydrogens(mol:Molecule, atom:number, numH:number):void\n\t{\n\t\tlet base = mol.numAtoms;\n\t\tconst x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n\n\t\tlet adj = mol.atomAdjList(atom);\n\n\t\t// special deal: adding 2 hydrogens to a divalent atom in bent form\n\t\tif (adj.length == 2 && numH == 2)\n\t\t{\n\t\t\tconst th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n\t\t\tconst th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n\t\t\tif (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD)\n\t\t\t{\n\t\t\t\t//float theta=GeomUtil.emergentAngle(new float[]{th1,th2})+Util.PI_F;\n\t\t\t\tlet theta = 0.5 * (th1 + th2) + Math.PI;\n\t\t\t\tlet th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n\t\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n\t\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n\t\t\t\tmol.addBond(atom, base + 1, 1);\n\t\t\t\tmol.addBond(atom, base + 2, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// special deal: adding 3 hydrogens to a terminal atom\n\t\tif (adj.length == 1 && numH == 3)\n\t\t{\n\t\t\tlet th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n\t\t\tlet th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n\t\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n\t\t\tmol.addBond(atom, base + 1, 1);\n\t\t\tmol.addBond(atom, base + 2, 1);\n\t\t\tmol.addBond(atom, base + 3, 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise: add one, then recurse\n\t\tlet theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n\t\tmol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n\t\tmol.addBond(atom, base + 1, 1);\n\t\tif (numH > 1) SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n\t}\n\n\t// returns a list of outgoing angles; unlike primeDirections, which tries to narrow the list as much as possible, this function\n\t// tries to be generous and include anything remotely plausible: the intent is for helping out an interactive session where a precise\n\t// pointing device is available\n\tpublic static allViableDirections(mol:Molecule, atom:number, order:number):number[]\n\t{\n\t\tif (mol.atomAdjCount(atom) == 0)\n\t\t{\n\t\t\tlet angles:number[] = [];\n\t\t\tfor (let n = 0; n < 12; n++) angles.push(30 * DEGRAD);\n\t\t\treturn angles;\n\t\t}\n\n\t\t// all that applies\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet angles = SketchUtil.exitVectors(mol, atom);\n\n\t\tlet geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n\t\tif (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0) geom.push(Geometry.Linear);\n\t\tlet bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n\t\tfor (let g of geom)\n\t\t{\n\t\t\tlet map = SketchUtil.mapAngleSubstituent(g, bndang);\n\t\t\tif (map != null) for (let th of map) angles.push(th);\n\t\t}\n\n\t\treturn GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n\t}\n\n\t// simple new rings grafted onto existing components, or not\n\tpublic static proposeNewRing(mol:Molecule, rsz:number, x:number, y:number, dx:number, dy:number, snap:boolean):[number[], number[]]\n\t{\n\t\tlet theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n\t\tif (snap)\n\t\t{\n\t\t\tconst chunk = 30 * DEGRAD;\n\t\t\ttheta = Math.round(theta / chunk) * chunk;\n\t\t}\n\t\treturn SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n\t}\n\tpublic static proposeAtomRing(mol:Molecule, rsz:number, atom:number, dx:number, dy:number):[number[], number[]]\n\t{\n\t\t/*\n\t\tvar thsnap:number[] = SketchUtil.allViableDirections(mol, atom, 1);\n\t\tif (mol.atomAdjCount(atom) == 1)\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(atom)[0];\n\t\t\tlet theta = Math.atan2(mol.atomY(nbr) - mol.atomY(atom), mol.atomX(nbr) - mol.atomX(atom));\n\t\t\tthsnap.push(theta);\n\t\t\tthsnap = uniqueAngles(thsnap, 2.0 * DEGRAD);\n\t\t}\n\t\t// (tempting to have it snap to sidebonds, but the correct way to do that is to drag from the bond rather than the atom)\n\t\t*/\n\n\t\tlet thsnap:number[] = [];\n\t\tlet cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tif (mol.atomAdjCount(atom) == 0)\n\t\t{\n\t\t\tfor (let n = 0; n < 12; n++) thsnap.push(TWOPI * n / 12);\n\t\t}\n\t\telse if (mol.atomAdjCount(atom) == 1)\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(atom)[0];\n\t\t\tthsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet angs:number[] = [];\n\t\t\tfor (let nbr of mol.atomAdjList(atom)) angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n\t\t\tangs = sortAngles(angs);\n\t\t\tfor (let n = 0; n < angs.length; n++)\n\t\t\t{\n\t\t\t\tlet th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n\t\t\t\tthsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n\t\t\t}\n\t\t}\n\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tlet bestTheta = 0, bestDelta = Number.MAX_VALUE;\n\t\tfor (let th of thsnap)\n\t\t{\n\t\t\tlet delta = Math.abs(angleDiff(th, theta));\n\t\t\tif (delta < bestDelta) {bestTheta = th; bestDelta = delta;}\n\t\t}\n\n\t\treturn SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n\t}\n\tpublic static proposeBondRing(mol:Molecule, rsz:number, bond:number, dx:number, dy:number):[number[], number[]]\n\t{\n\t\tlet bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tlet bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n\t\tlet sign = dx * by - dy * bx;\n\n\t\tlet delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n\t\tlet theta = Math.atan2(by, bx) + delta;\n\n\t\tlet dth = TWOPI / rsz;\n\t\tlet rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n\t\tlet cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n\t\tlet cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n\n\t\tlet rx:number[] = [], ry:number[] = [];\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet th = theta - Math.PI + (n - 0.5) * dth;\n\t\t\trx.push(cx + Math.cos(th) * rad);\n\t\t\try.push(cy + Math.sin(th) * rad);\n\t\t}\n\n\t\tlet [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n\t\trx[0] = mol.atomX(i1);\n\t\try[0] = mol.atomY(i1);\n\t\trx[1] = mol.atomX(i2);\n\t\try[1] = mol.atomY(i2);\n\n\t\treturn [rx, ry];\n\t}\n\n\t// simple ring attachments, to an atom/bond/point, with a guide vector to collapse the options for direction; returns arrays for X and Y\n\t// points for the ring that ought to be created from these parameters; note\n\tpublic static positionSimpleRing(mol:Molecule, rsz:number, x:number, y:number, theta:number):[number[], number[]]\n\t{\n\t\tlet dth = TWOPI / rsz;\n\t\tlet rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n\t\tlet cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n\n\t\tlet rx:number[] = [], ry:number[] = [];\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet th = theta - Math.PI + n * dth;\n\t\t\trx.push(cx + Math.cos(th) * rad);\n\t\t\try.push(cy + Math.sin(th) * rad);\n\t\t}\n\n\t\treturn [rx, ry];\n\t}\n\n\t// determines a list of \"sprouts\" for a given atom, namely exterior guides that are suitable for skething new bonds to\n\tpublic static guidelineSprouts(mol:Molecule, atom:number):GuidelineSprout[]\n\t{\n\t\tlet sprouts:GuidelineSprout[] = [];\n\n\t\t// do calculations for orders 1..3, and merge any that are duplicates (1 & 2 are typically the same, while 3 is frequently different)\n\t\tlet angs:number[][] = [], ords:number[][] = [];\n\t\tfor (let n = 0; n < 3; n++)\n\t\t{\n\t\t\tangs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n\t\t\tords.push([n + 1]);\n\t\t\tfor (let i = 0; i < n; i++) if (angs[i] != null && Vec.equals(angs[n], angs[i]))\n\t\t\t{\n\t\t\t\tangs[n] = null;\n\t\t\t\tords[i].push(n + 1);\n\t\t\t}\n\t\t}\n\n\t\t// add sprouts, using Cartesian coordinates\n\t\tconst cx = mol.atomX(atom), cy = mol.atomY(atom);\n\t\tfor (let n = 0; n < 3; n++) if (angs[n] != null)\n\t\t{\n\t\t\tlet sprout:GuidelineSprout =\n\t\t\t{\n\t\t\t\tatom: atom,\n\t\t\t\torders: ords[n],\n\t\t\t\tx: [],\n\t\t\t\ty: [],\n\t\t\t};\n\t\t\tfor (let i = 0; i < angs[n].length; i++)\n\t\t\t{\n\t\t\t\tsprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n\t\t\t\tsprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n\t\t\t}\n\t\t\tsprouts.push(sprout);\n\t\t}\n\t\treturn sprouts;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2022 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\nimport {Molecule} from './Molecule';\n\n/*\n\tEncodes some number of stereochemistry groups into the molecule.\n\n\tTypes:\n\t\tRacemic (\"AND\"): for chiral centres in the group, the configuration indicated by the wedges is present _and_ its\n\t\t\t\t\t\t inverted racemic opposite is inverted as well (e.g. [R,R,S] & [S,S,R], but not any of the other\n\t\t\t\t\t\t six combinations)\n\t\tRelative (\"OR\"): for chiral centres in the group, there is just one configuration present, and it is either the\n\t\t\t\t\t\t configuration indicated _or_ its inversion (e.g. just one of [R,R,S] or [S,S,R])\n\n\tAny tools that ignore this stereo group metadata will just see that there's a particular configuration indicated and\n\tinterpret that as what it is.\n*/\n\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:'; // racemic (often rendered as \"and\")\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:'; // relative (often rendered as \"or\")\n\nexport class StereoGroup\n{\n\tprivate chiRac = new Map<number, number[]>();\n\tprivate chiRel = new Map<number, number[]>();\n\n\t// ------------ public methods ------------\n\n\t// useful pre-check to see if a molecule has any stereogroup metadata\n\tpublic static hasStereoGroups(mol:Molecule):boolean\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra) if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic constructor(private mol:Molecule)\n\t{\n\t\tthis.mol = mol;\n\n\t\t// pull out the raw content from the molecule's extra fields\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tif (extra != null) for (let str of extra)\n\t\t\t{\n\t\t\t\tif (str.startsWith(STEREOGROUP_EXTRA_RACEMIC))\n\t\t\t\t{\n\t\t\t\t\tlet grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n\t\t\t\t\tif (grp > 0) this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n\t\t\t\t}\n\t\t\t\telse if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n\t\t\t\t{\n\t\t\t\t\tlet grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n\t\t\t\t\tif (grp > 0) this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// clean each one up, or remove if invalid\n\t\tfor (let [grp, atoms] of this.chiRac.entries())\n\t\t{\n\t\t\tfor (let n = atoms.length - 1; n >= 0; n--) if (!this.atomHasWedge(atoms[n])) atoms.splice(n, 1);\n\t\t\tif (atoms.length > 0) this.chiRac.set(grp, atoms); else this.chiRac.delete(grp);\n\t\t}\n\t\tfor (let [grp, atoms] of this.chiRel.entries())\n\t\t{\n\t\t\tfor (let n = atoms.length - 1; n >= 0; n--) if (!this.atomHasWedge(atoms[n])) atoms.splice(n, 1);\n\t\t\tif (atoms.length > 0) this.chiRel.set(grp, atoms); else this.chiRel.delete(grp);\n\t\t}\n\t}\n\n\t// access to resulting content\n\tpublic getRacemicGroups():number[] {return Array.from(this.chiRac.keys());}\n\tpublic getRelativeGroups():number[] {return Array.from(this.chiRel.keys());}\n\tpublic getRacemicAtoms():number[][] {return Array.from(this.chiRac.values());}\n\tpublic getRelativeAtoms():number[][] {return Array.from(this.chiRel.values());}\n\tpublic getRacemicGroupAtoms(grp:number):number[] {return this.chiRac.get(grp);}\n\tpublic getRelativeGroupAtoms(grp:number):number[] {return this.chiRel.get(grp);}\n\n\t// replaces all artifact signifiers with those from the current list of content\n\tpublic rewriteMolecule():void\n\t{\n\t\t// delete everything\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = this.mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n\t\t\t\t{\n\t\t\t\t\textra.splice(i, 1);\n\t\t\t\t\tmodified = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modified) this.mol.setAtomExtra(n, extra);\n\t\t}\n\n\t\t// write back our datastructures\n\t\tfor (let [grp, atoms] of this.chiRac.entries())\n\t\t{\n\t\t\tfor (let a of atoms) this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n\t\t}\n\t\tfor (let [grp, atoms] of this.chiRel.entries())\n\t\t{\n\t\t\tfor (let a of atoms) this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n\t\t}\n\t}\n\n\t// given the numbering system used by artifacts in another object, make sure that the current ones are renumbered so that they don't clash\n\tpublic harmoniseNumbering(other:StereoGroup):void\n\t{\n\t\tlet groups = other.getRacemicGroups();\n\t\tlet stash = this.getRacemicAtoms();\n\t\tthis.chiRac.clear();\n\t\tfor (let atoms of stash)\n\t\t{\n\t\t\tlet grp = this.nextIdentifier(groups);\n\t\t\tthis.chiRac.set(grp, atoms);\n\t\t\tgroups.push(grp);\n\t\t}\n\n\t\tgroups = other.getRelativeGroups();\n\t\tstash = this.getRelativeAtoms();\n\t\tthis.chiRel.clear();\n\t\tfor (let atoms of stash)\n\t\t{\n\t\t\tlet grp = this.nextIdentifier(groups);\n\t\t\tthis.chiRel.set(grp, atoms);\n\t\t\tgroups.push(grp);\n\t\t}\n\t}\n\n\t// creates a racemic group, returns the new identifier\n\tpublic createRacemic(atoms:number[]):number\n\t{\n\t\tlet grp = this.nextIdentifier(this.getRacemicGroups());\n\t\tthis.chiRac.set(grp, atoms);\n\t\treturn grp;\n\t}\n\n\t// creates a relative group, returns the new identifier\n\tpublic createRelative(atoms:number[]):number\n\t{\n\t\tlet grp = this.nextIdentifier(this.getRelativeGroups());\n\t\tthis.chiRel.set(grp, atoms);\n\t\treturn grp;\n\t}\n\n\tpublic removeRacemic(grp:number):void\n\t{\n\t\tthis.chiRac.delete(grp);\n\t}\n\tpublic removeRelative(grp:number):void\n\t{\n\t\tthis.chiRel.delete(grp);\n\t}\n\n\t// quickly strip out all bond artifacts\n\tpublic static removeAll(mol:Molecule):void\n\t{\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet extra = mol.atomExtra(n);\n\t\t\tlet modified = false;\n\t\t\tfor (let i = extra.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) continue;\n\t\t\t\textra.splice(i, 1);\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t\tif (modified) mol.setAtomExtra(n, extra);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if false, the atom definitely can't be an R/S tetrahedral chiral centre\n\tprivate atomHasWedge(atom:number):boolean\n\t{\n\t\tif (this.mol.is3D()) return true;\n\n\t\t// must have at least one wedge originating from the atom, and no squigglies\n\t\tlet hasWedge = false;\n\t\tfor (let b of this.mol.atomAdjBonds(atom))\n\t\t{\n\t\t\tlet bt = this.mol.bondType(b);\n\t\t\tif (bt == Molecule.BONDTYPE_UNKNOWN) return false; // squiggly\n\t\t\tif (this.mol.bondFrom(b) != atom) continue;\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) hasWedge = true;\n\t\t}\n\t\treturn hasWedge;\n\t}\n\n\t// using a disposable array, finds the next suitable identifier given that some number may already been taken\n\tprivate nextIdentifier(inkeys:number[]):number\n\t{\n\t\tif (inkeys.length == 0) return 1;\n\t\tlet keys = Vec.sorted(inkeys);\n\t\tfor (let n = 0; n < keys.length - 1; n++) if (keys[n + 1] != keys[n] + 1) return keys[n] + 1;\n\t\treturn keys[keys.length - 1] + 1;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz} from '../util/util';\nimport {Permutation, Vec} from '../util/Vec';\nimport {Chemistry} from './Chemistry';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tCalculation of the stereochemical properties of a molecule, such as R/S and E/Z isomer labels.\n*/\n\nexport class Stereochemistry\n{\n\tprivate mol:Molecule;\n\n\t// computed stereochemistry properties\n\tprivate priority:number[]; // CIP (per atom)\n\tprivate chiralTetra:number[]; // (per atom)\n\tprivate cistransBond:number[]; // (per bond)\n\tprivate squarePlanar:number[]; // (per atom)\n\t//private chiralOcta:number[]; // (per atom)\n\tprivate isH:boolean[]; // per atom\n\n\t// ------------------ constants --------------------\n\n\tpublic static STEREO_NONE = 0; // topology does not allow any stereoisomers\n\tpublic static STEREO_POS = 1; // R or Z, depending on type\n\tpublic static STEREO_NEG = 2; // S or E, depending on type\n\tpublic static STEREO_UNKNOWN = 3; // stereocentre with no specification\n\tpublic static STEREO_BROKEN = 4; // stereocentre with contradictory stereochemistry information\n\n\t// all equivalent tetrahedral permutations\n\tpublic static RUBRIC_EQUIV_TETRA =\n\t[\n\t\t[0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n\t\t[2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n\t];\n\n\tpublic static RUBRIC_EQUIV_SIDES =\n\t[\n\t\t[0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n\t];\n\n\tpublic static RUBRIC_EQUIV_SQUARE =\n\t[\n\t\t[0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n\t\t[2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n\t];\n\n\tpublic static RUBRIC_EQUIV_BIPY =\n\t[\n\t\t[0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n\t\t[0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n\t];\n\n\tpublic static RUBRIC_EQUIV_OCTA =\n\t[\n\t\t[0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n\t\t[1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n\t\t[2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n\t\t[3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n\t\t[4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n\t\t[5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n\t];\n\n\t// ------------------ public methods --------------------\n\n\t// constructor: the metamolecule should generally have aromaticity calculated, because this can affect the priority,\n\t// and can also exclude some cases, e.g. cis/trans labels\n\tconstructor(public meta:MetaMolecule)\n\t{\n\t\tthis.mol = meta.mol;\n\n\t\tthis.priority = Vec.numberArray(0, this.mol.numAtoms);\n\t\tthis.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t\tthis.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n\t\tthis.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t\t//this.chiralOcta = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n\t}\n\n\t// performs the calculation by filling in the arrays\n\tpublic calculate():void\n\t{\n\t\tthis.isH = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tfor (let n = this.mol.numAtoms; n >= 1; n--) this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n\n\t\tthis.buildPriority();\n\t\tthis.buildTetraChirality();\n\t\tthis.buildBondCisTrans();\n\t\tthis.buildPlanarCisTrans();\n\t\tthis.buildOctaChirality();\n\t}\n\n\t// access to calculated values; indices are 1-based\n\tpublic atomPriority(atom:number):number {return this.priority[atom - 1];}\n\tpublic atomTetraChirality(atom:number):number {return this.chiralTetra[atom - 1];}\n\tpublic bondSideStereo(bond:number):number {return this.cistransBond[bond - 1];}\n\tpublic atomPlanarStereo(atom:number):number {return this.squarePlanar[atom - 1];}\n\t//public atomOctaChirality(atom:number):number {return this.chiralOcta[atom - 1];}\n\n\t// for bulk access, sometimes more convenient\n\tpublic getPriorities():number[] {return this.priority.slice(0);}\n\tpublic getAtomTetraChiral():number[] {return this.chiralTetra.slice(0);}\n\tpublic getBondSideStereo():number[] {return this.cistransBond.slice(0);}\n\n\t// ------------------ static methods --------------------\n\n\t// convenience\n\tpublic static create(meta:MetaMolecule):Stereochemistry\n\t{\n\t\tlet stereo = new Stereochemistry(meta);\n\t\tstereo.calculate();\n\t\treturn stereo;\n\t}\n\n\t/*\n\t\tThe Rubric Methods: each of these examines an atom/bond and ascertains whether it has sufficient substituents, and\n\t\tlayout information (coordinates and/or wedges) for it to fit into a certain type of geometry-locked template, which\n\t\tcan infer chirality or restricted bond stereochemistry; the return value is an array with the adjacent indices fitted\n\t\tinto the mould, sometimes with 0 as a placeholder for implicit hydrogens or missing substituents; or null if there are\n\t\tinsufficient neighbours or geometry clues.\n\n\t\tThese methods do NOT make any judgment calls as to whether the atom types should limit to the geometry - the caller must\n\t\tprovide this logic. They also make no judgment about degeneracy, which means that the atom/bond is not necessarily\n\t\tstereochemically active.\n\t*/\n\n\t//\n\t//                    4    3\n\t// assignment style:   \\\\ #      (3 is pointing down, 4 is pointing up)\n\t//                       A\n\t//                     /   \\\n\t//                    1     2\n\tpublic static rubricTetrahedral(mol:Molecule, atom:number):number[]\n\t{\n\t\t// must have at least 3 actual neighbours, and actual+virtual H's of 4\n\t\tif (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4) return null;\n\n\t\t// must have at least one wedge originating from the atom, and no squigglies\n\t\tlet adjBonds = mol.atomAdjBonds(atom);\n\t\tlet hasWedge = false;\n\t\tfor (let n = 0; n < adjBonds.length; n++)\n\t\t{\n\t\t\tlet bt = mol.bondType(adjBonds[n]);\n\t\t\tif (bt == Molecule.BONDTYPE_UNKNOWN) return null; // squiggly\n\t\t\tif (mol.bondFrom(adjBonds[n]) != atom) continue;\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) hasWedge = true;\n\t\t}\n\t\tif (!hasWedge && !mol.is3D()) return null;\n\n\t\t// pull out coordinates, including fakes for Z\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet x = [0, 0, 0, 0];\n\t\tlet y = [0, 0, 0, 0];\n\t\tlet z = [0, 0, 0, 0];\n\t\tlet numShort = 0, numWedges = 0;\n\t\tfor (let n = 0; n < adjBonds.length; n++)\n\t\t{\n\t\t\tconst bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n\t\t\tx[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n\t\t\ty[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n\t\t\tif (mol.is3D())\n\t\t\t{\n\t\t\t\tz[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n\t\t\t}\n\t\t\telse if (bfr == atom)\n\t\t\t{\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t\t{\n\t\t\t\t\tz[n] = 1;\n\t\t\t\t\tnumWedges++;\n\t\t\t\t}\n\t\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t\t{\n\t\t\t\t\tz[n] = -1;\n\t\t\t\t\tnumWedges++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// normalise the length, and stop if it's insane\n\t\t\tlet dsq = norm_xyz(x[n], y[n], z[n]);\n\t\t\tif (dsq < 0.01 * 0.01)\n\t\t\t{\n\t\t\t\tnumShort++;\n\t\t\t\tif (numShort > 1) return null; // second one is a dealbreaker\n\t\t\t}\n\t\t}\n\n\t\t// build implicit-H position\n\t\tif (adjBonds.length == 3)\n\t\t{\n\t\t\tadj.push(0);\n\t\t\tif (!mol.is3D() && numWedges == 1)\n\t\t\t{\n\t\t\t\t// special deal it's flat, so order the bonds by angle, and push in a canonical set of coordinates; this renormalisation can\n\t\t\t\t// fix some weird drawings, which is common for sugars, and various other things\n\t\t\t\tlet th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n\t\t\t\tlet i1 = 1, i2 = 2;\n\t\t\t\tif (angleDiffPos(th1, th0) > angleDiffPos(th2, th0))\n\t\t\t\t{\n\t\t\t\t\ti2 = 1;\n\t\t\t\t\ti1 = 2;\n\t\t\t\t}\n\n\t\t\t\tx[0] = 1.5;\n\t\t\t\ty[0] = 0;\n\t\t\t\tx[1] = -0.75;\n\t\t\t\ty[i1] = 1.3;\n\t\t\t\tx[2] = -0.75;\n\t\t\t\ty[i2] = -1.3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// use geometry largely as-is\n\t\t\t\tx[3] = -(x[0] + x[1] + x[2]);\n\t\t\t\ty[3] = -(y[0] + y[1] + y[2]);\n\t\t\t\tz[3] = -(z[0] + z[1] + z[2]);\n\t\t\t\tlet dsq = norm2_xyz(x[3], y[3], z[3]);\n\t\t\t\tif (dsq < 0.01 * 0.01) return null;\n\t\t\t\tlet inv = 1.0 / Math.sqrt(dsq);\n\t\t\t\tx[3] *= inv;\n\t\t\t\ty[3] *= inv;\n\t\t\t\tz[3] *= inv;\n\t\t\t}\n\t\t}\n\n\t\tlet one = 0, two = 0;\n\t\tfor (let i = 1; i <= 6; i++)\n\t\t{\n\t\t\tlet a = 0, b = 0;\n\t\t\tif (i == 1) {a = 1; b = 2;}\n\t\t\telse if (i == 2) {a = 2; b = 3;}\n\t\t\telse if (i == 3) {a = 3; b = 1;}\n\t\t\telse if (i == 4) {a = 2; b = 1;}\n\t\t\telse if (i == 5) {a = 3; b = 2;}\n\t\t\telse if (i == 6) {a = 1; b = 3;}\n\t\t\tlet xx = y[a] * z[b] - y[b] * z[a] - x[0];\n\t\t\tlet yy = z[a] * x[b] - z[b] * x[a] - y[0];\n\t\t\tlet zz = x[a] * y[b] - x[b] * y[a] - z[0];\n\t\t\tif (i <= 3) one += xx * xx + yy * yy + zz * zz;\n\t\t\telse two += xx * xx + yy * yy + zz * zz;\n\t\t}\n\n\t\tif (two > one) Vec.swap(adj, 2, 3);\n\t\treturn adj;\n\t}\n\n \t//                      1   2\n\t// assignment style:     # #\tnote: the Z-axis direction is arbitrary; 1234 is equivalent to 1432\n\t//                        A\n\t//\t\t\t\t\t\t// \\\\\n\t//                      3   4\n\tpublic static rubricSquarePlanar(mol:Molecule, atom:number):number[]\n\t{\n\t\tif (mol.atomAdjCount(atom) != 4) return null;\n\n\t\t// drawing style must be one of 3 options: 2 up + 2 down, or 2 flat + (2 up/2 down)\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tlet ninc = 0, ndec = 0;\n\t\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t\t{\n\t\t\t\tlet bt = mol.bondType(b);\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) ninc++;\n\t\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) ndec++;\n\t\t\t}\n\t\t\tif (ninc == 2 && ndec == 2) {}\n\t\t\telse if (ninc == 2 && ndec == 0) {}\n\t\t\telse if (ninc == 0 && ndec == 2) {}\n\t\t\telse return null;\n\t\t}\n\n\t\t// determine all the vector outgoings; ensure that position 3 is opposite position 1; other than that, the order is arbitrary\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n\t\tlet v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n\t\tlet v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n\t\tlet v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n\n\t\tfor (let v of [v1, v2, v3, v4])\n\t\t{\n\t\t\tlet dsq = norm2_xyz(v[0], v[1], v[2]);\n\t\t\tif (dsq < 0.01 * 0.01) continue;\n\t\t\tlet inv = 1.0 / Math.sqrt(dsq);\n\t\t\tv[0] *= inv;\n\t\t\tv[1] *= inv;\n\t\t\tv[2] *= inv;\n\t\t}\n\n\t\tlet d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n\t\tif (d2 > d3 && d2 >= d4)\n\t\t{\n\t\t\tVec.swap(adj, 1, 2);\n\t\t\t[v2, v3] = [v3, v2];\n\t\t}\n\t\telse if (d4 > d3)\n\t\t{\n\t\t\tVec.swap(adj, 3, 2);\n\t\t\t[v3, v4] = [v4, v3];\n\t\t}\n\n\t\t// circle around and make sure the acute angles are with reasonable bounds; 90 degrees is ideal, +/- 45 is OK\n\t\t// for 3D cases we don't have the wedge filter, so make the constraint tighter\n\t\tconst MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n\t\tconst MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n\t\tconst th12 = GeomUtil.acuteAngle(v1, v2);\n\t\tif (th12 < MIN_ANGLE || th12 > MAX_ANGLE) return null;\n\t\tconst th23 = GeomUtil.acuteAngle(v2, v3);\n\t\tif (th23 < MIN_ANGLE || th23 > MAX_ANGLE) return null;\n\t\tconst th34 = GeomUtil.acuteAngle(v3, v4);\n\t\tif (th34 < MIN_ANGLE || th34 > MAX_ANGLE) return null;\n\t\tconst th41 = GeomUtil.acuteAngle(v4, v1);\n\t\tif (th41 < MIN_ANGLE || th41 > MAX_ANGLE) return null;\n\t\treturn adj;\n\t}\n\n\t//                        5  3\n\t// assignment style:      | #    (4->5 is the \"axial up\" and [1,2,3] follow the right hand vector rule)\n\t//                     1--A      (only position 1 is allowed to be vacant, and only 2 & 3 can be opposite)\n\t//                        |\\\\\n\t//                        4  2\n\tpublic static rubricBipyrimidal(mol:Molecule, atom:number):number[]\n\t{\n\t\tconst nadj = mol.atomAdjCount(atom);\n\t\tif (nadj != 4 && nadj != 5) return null;\n\n\t\t// if sketch, must have exactly 1 up & 1 down\n\t\tlet atom2 = 0, atom3 = 0;\n\t\tlet adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tif (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED)\n\t\t\t\t{\n\t\t\t\t\tif (atom2 > 0) return null;\n\t\t\t\t\tatom2 = adj[n];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED)\n\t\t\t\t{\n\t\t\t\t\tif (atom3 > 0) return null;\n\t\t\t\t\tatom3 = adj[n];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (atom2 == 0 || atom3 == 0) return null;\n\n\t\t\t// the two bonds with opposite wedges cannot be close to opposite\n\t\t\tlet th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n\t\t\tlet th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n\t\t\tif (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD) return null;\n\t\t}\n\n\t\t// get all the relative emergent vectors\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v:number[][] = [[], [], [], [], []];\n\t\tconst THRESH = 0.1; // bond lengths in general must be this long, otherwise the structure is unworthy\n\t\tfor (let n = 0; n < nadj; n++)\n\t\t{\n\t\t\tv[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n\t\t\tconst mag = GeomUtil.magnitude(v[n]);\n\t\t\tif (mag < THRESH) return null;\n\t\t\tVec.mulBy(v[n], 1.0 / mag);\n\n\t\t\t// if it's 2D, atom2 & 3 are defined: do faux embedding\n\t\t\tif (adj[n] == atom2) v[n][2] += 1; // up\n\t\t\telse if (adj[n] == atom3) v[n][2] -= 1; // down\n\t\t}\n\n\t\t// figure out atoms 4 & 5; for 2D can rule out two candidates already\n\t\tlet atom4 = 0, atom5 = 0;\n\t\tconst ANGLE_OPPOSITE = 175 * DEGRAD;\n\t\tfor (let i = 0; i < nadj - 1; i++) if (adj[i] != atom2 && adj[i] != atom3)\n\t\t{\n\t\t\tfor (let j = i + 1; j < nadj; j++) if (adj[j] != atom2 && adj[j] != atom3)\n\t\t\t{\n\t\t\t\tlet theta = GeomUtil.acuteAngle(v[i], v[j]);\n\t\t\t\tif (theta > ANGLE_OPPOSITE)\n\t\t\t\t{\n\t\t\t\t\tif (atom4 != 0) return null; // can't have two angles close to 180 degrees\n\t\t\t\t\tatom4 = adj[i];\n\t\t\t\t\tatom5 = adj[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if 3D, atoms 2 & 3 can be selected arbitrarily\n\t\tif (mol.is3D())\n\t\t{\n\t\t\tfor (let a of adj) if (a != atom4 && a != atom5)\n\t\t\t{\n\t\t\t\tif (atom2 == 0) atom2 = a;\n\t\t\t\telse if (atom3 == 0) atom3 = a;\n\t\t\t}\n\t\t}\n\t\tif (!atom4 || !atom5) return null;\n\n\t\tlet v1 = null;\n\t\tlet v2 = v[adj.indexOf(atom2)];\n\t\tlet v3 = v[adj.indexOf(atom3)];\n\t\tlet v4 = v[adj.indexOf(atom4)];\n\t\tlet v5 = v[adj.indexOf(atom5)];\n\n\t\t// the atom3 position is either real or virtual\n\t\tlet atom1 = 0;\n\t\tif (nadj == 5)\n\t\t{\n\t\t\tfor (let n = 0; n < nadj; n++) if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5)\n\t\t\t{\n\t\t\t\tatom1 = adj[n];\n\t\t\t\tv1 = v[n];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse // create a virtual atom\n\t\t{\n\t\t\tv1 = [0, 0, 0];\n\t\t\tv1 = Vec.sub(v1, v2);\n\t\t\tv1 = Vec.sub(v1, v3);\n\t\t\tconst mag = GeomUtil.magnitude(v1);\n\t\t\tif (mag < THRESH) return null; // (is this being unfair at all?)\n\t\t\tVec.mulBy(v1, 1.0 / mag);\n\t\t}\n\n\t\t// if the cross product of 4->5 x 0->1 is closer to 2, parity is even\n\t\tlet v45 = Vec.sub(v5, v4);\n\t\tlet cross = GeomUtil.crossProduct(v45, v1);\n\t\tlet dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n\t\tif (dsq2 < dsq3)\n\t\t\treturn [atom1, atom2, atom3, atom4, atom5];\n\t\telse\n\t\t\treturn [atom1, atom2, atom3, atom5, atom4];\n\t}\n\n\t//                        6 2\n\t// assignment style:      |#    (5->6 is the \"axial up\" and [1,2,3,4] follow the right hand vector rule)\n\t//                     3--A--1\n\t//\t\t\t\t\t\t//|\n\t//                     4  5\n\tpublic static rubricOctahedral(mol:Molecule, atom:number):number[]\n\t{\n\t\tconst nadj = mol.atomAdjCount(atom);\n\t\tif (nadj != 5 && nadj != 6) return null;\n\n\t\tlet adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n\t\tif (nadj == 5) {adj.push(0); bonds.push(0);}\n\n\t\t// if a 2D sketch, make sure there are enough wedges\n\t\tif (!mol.is3D())\n\t\t{\n\t\t\tlet numWedges = 0;\n\t\t\tfor (let b of bonds) if (b > 0)\n\t\t\t{\n\t\t\t\tconst bt = mol.bondType(b);\n\t\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) numWedges++;\n\t\t\t}\n\t\t\tif ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2)) return null;\n\t\t}\n\n\t\tconst THRESH = 0.1; // bond lengths in general must be this long, otherwise the structure is unworthy\n\n\t\t// get all the relative emergent vectors; generate faux embedding for wedges\n\t\tlet v0 = MolUtil.atomVec3(mol, atom);\n\t\tlet v:number[][] = [[], [], [], [], [], []];\n\t\tfor (let n = 0; n < nadj; n++)\n\t\t{\n\t\t\tv[n] = MolUtil.atomVec3(mol, adj[n]);\n\t\t\tVec.subFromArray(v[n], v0);\n\t\t\tlet mag = GeomUtil.magnitude(v[n]);\n\t\t\tif (mag < THRESH) return null;\n\t\t\tVec.mulBy(v[n], 1 / mag);\n\n\t\t\tlet bt = mol.bondType(bonds[n]);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(bonds[n]) == atom) v[n][2] += 1; else v[n][2] -= 1;\n\t\t\t}\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED)\n\t\t\t{\n\t\t\t\tif (mol.bondFrom(bonds[n]) == atom) v[n][2] -= 1; else v[n][2] += 1;\n\t\t\t}\n\t\t}\n\n\t\t// if there's a missing spot, compose it from the opposite of the sum of all the other directions\n\t\tif (nadj == 5)\n\t\t{\n\t\t\tv[5] = [0, 0, 0];\n\t\t\tfor (let n = 0; n < 5; n++) Vec.subFromArray(v[5], v[n]);\n\t\t\tlet mag = GeomUtil.magnitude(v[5]);\n\t\t\tif (mag < THRESH) return null; // (is this being unfair at all?)\n\t\t\tVec.mulBy(v[5], 1 / mag);\n\t\t}\n\n\t\t// first reference: locate ligands that are as far away as possible from each other (i.e. 180 degrees), and stick these in the axial positions\n\t\tlet slots = [-1, -1, -1, -1, 0, 1];\n\t\tlet bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n\t\tfor (let i = 0; i < 5; i++) for (let j = (i == 0 ? 2 : i + 1); j < 6; j++)\n\t\t{\n\t\t\tlet theta = GeomUtil.acuteAngle(v[i], v[j]);\n\t\t\tif (theta > bestOpposite)\n\t\t\t{\n\t\t\t\tslots[4] = i;\n\t\t\t\tslots[5] = j;\n\t\t\t\tbestOpposite = theta;\n\t\t\t}\n\t\t}\n\t\tlet axial = Vec.sub(v[slots[5]], v[slots[4]]);\n\n\t\t// second reference: locate the ligand that is as close as possible to orthogonal to the axial vector, and stick this in the first equatorial position\n\t\tlet bestOrthogonal = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < 6; n++) if (n != slots[4] && n != slots[5])\n\t\t{\n\t\t\tlet delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n\t\t\tif (delta < bestOrthogonal)\n\t\t\t{\n\t\t\t\tslots[0] = n;\n\t\t\t\tbestOrthogonal = delta;\n\t\t\t}\n\t\t}\n\n\t\t// third reference: use the cross product between axial & current equatorial to grab the next two in sequence\n\t\tfor (let s = 1; s <= 2; s++)\n\t\t{\n\t\t\tlet cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n\t\t\tlet bestOrient = Number.POSITIVE_INFINITY;\n\n\t\t\tfor (let n = 0; n < 6; n++)\n\t\t\t{\n\t\t\t\tif (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1]) continue;\n\t\t\t\tlet delta = GeomUtil.acuteAngle(v[n], cross);\n\t\t\t\tif (delta < bestOrient)\n\t\t\t\t{\n\t\t\t\t\tslots[s] = n;\n\t\t\t\t\tbestOrient = delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the last one is implied by process of elimination\n\t\tfor (let n = 0; n < 6; n++) if (slots.indexOf(n) < 0)\n\t\t{\n\t\t\tslots[3] = n;\n\t\t\tbreak;\n\t\t}\n\n\t\t/*Util.writeln(\"NOW slots = \"+Util.arrayStr(slots));\n\t\tfor (int n = 0; n < 6; n++) Util.writeln(\" position \"+(n+1)+\" -> atom \"+mol.atomElement(adj[slots[n]]));*/\n\n\t\t// convert to atom indices\n\t\tlet rubric = [0, 0, 0, 0, 0, 0];\n\t\tfor (let n = 0; n < 6; n++) rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n\t\treturn rubric;\n\t}\n\n\t//                      1      3\n\t//                       \\    /\n\t// assignment style:      A==B\n\t//                       /    \\\n\t//\t\t\t\t\t    2      4\n\tpublic static rubricBondSides(mol:Molecule, bond:number):number[]\n\t{\n\t\tconst bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tconst nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n\t\tif (nfr < 2 || nfr > 3 || nto < 2 || nto > 3) return null;\n\t\tlet adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n\t\tlet f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n\t\tfor (let i = 0; i < adj1.length; i++)\n\t\t{\n\t\t\tif (adj1[i] != bto)\n\t\t\t{\n\t\t\t\tif (f1 == 0) f1 = adj1[i];\n\t\t\t\telse f2 = adj1[i];\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < adj2.length; i++)\n\t\t{\n\t\t\tif (adj2[i] != bfr)\n\t\t\t{\n\t\t\t\tif (t1 == 0) t1 = adj2[i];\n\t\t\t\telse t2 = adj2[i];\n\t\t\t}\n\t\t}\n\n\t\tif (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {let f = f1; f1 = f2; f2 = f;}\n\t\tif (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {let t = t1; t1 = t2; t2 = t;}\n\n\t\t// make a determination of whether the first substituents are on the same side, using the cross product; if there\n\t\t// are only 2 substituents, this ends up being definitive\n\t\tlet vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n\t\tlet vbond = Vec.sub(vto, vfr);//,vt0=Vec.neg(vf0);\n\t\tlet vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n\n\t\tconst THRESHSQ = 0.1 * 0.1; // cross product must be this long; if not, it's either linear, or unreasonably short\n\n\t\tlet xf1 = GeomUtil.crossProduct(vf1, vbond);\n\t\tif (GeomUtil.magnitude2(xf1) < THRESHSQ) return null;\n\t\tlet xt1 = GeomUtil.crossProduct(vt1, vbond);\n\t\tif (GeomUtil.magnitude2(xt1) < THRESHSQ) return null;\n\n\t\tlet xf1N = Vec.neg(xf1);\n\t\tlet keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n\t\tlet keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n\n\t\t// check the other substituents, if they are defined: these may contradict the first determination, and hence cause\n\t\t// the stereo assignment to be rejected\n\t\t// note that the determination is tolerant of hydrogen atoms that are planted pretty much on top of their heavy\n\t\t// neighbour - this can make the algorithm more tolerant to add/create hydrogen cycles\n\t\tlet vf2:number[] = null, vt2:number[] = null, xf2:number[] = null, xt2:number[] = null, xf2N:number[] = null;\n\t\tif (f2 > 0)\n\t\t{\n\t\t\tvf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n\t\t\tif (GeomUtil.magnitude2(vf2) < THRESHSQ)\n\t\t\t{\n\t\t\t\tif (mol.atomElement(f2) != 'H') return null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txf2 = GeomUtil.crossProduct(vf2, vbond);\n\t\t\t\tif (GeomUtil.magnitude2(xf2) < THRESHSQ) return null;\n\t\t\t\txf2N = Vec.neg(xf2);\n\t\t\t\tkeepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n\t\t\t}\n\t\t}\n\t\tif (t2 > 0)\n\t\t{\n\t\t\tvt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n\t\t\tif (GeomUtil.magnitude2(vt2) < THRESHSQ)\n\t\t\t{\n\t\t\t\tif (mol.atomElement(t2) != 'H') return null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\txt2 = GeomUtil.crossProduct(vt2, vbond);\n\t\t\t\tif (GeomUtil.magnitude2(xt2) < THRESHSQ) return null;\n\t\t\t\tkeepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n\t\t\t}\n\t\t}\n\t\tif (/*f2>0 && t2>0*/xf2 != null && xt2 != null)\n\t\t{\n\t\t\tkeepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n\t\t}\n\n\t\t// pick the order based on sides\n\t\tif (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2) return [f1, f2, t1, t2];\n\t\tif (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2) return [f1, f2, t2, t1];\n\n\t\treturn null;\n\t}\n\n\t// ------------------ private methods --------------------\n\n\t// compute the chirality values for each atom centre\n\tprivate buildTetraChirality():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// !! USE THE \"BROKEN\" value for screwed up stuff\n\n\t\tlet haswedge = Vec.booleanArray(false, na);\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n\t\t\t\thaswedge[mol.bondFrom(n) - 1] = true;\n\t\t}\n\n\t\tskip_atom: for (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tthis.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tlet adj = mol.atomAdjList(n);\n\t\t\tif (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1))) continue;\n\t\t\tif (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1])) continue;\n\t\t\tfor (let i = 0; i < adj.length - 1; i++)\n\t\t\t{\n\t\t\t\tfor (let j = i + 1; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (this.priority[adj[i] - 1] == this.priority[adj[j] - 1]) continue skip_atom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!haswedge[n - 1] && !mol.is3D())\n\t\t\t{\n\t\t\t\tthis.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricTetrahedral(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pri =\n\t\t\t[\n\t\t\t\trubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n\t\t\t\trubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n\t\t\t\trubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n\t\t\t\trubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n\t\t\t];\n\t\t\tpri = Vec.idxSort(pri);\n\t\t\tlet parity = Permutation.parityIdentity(pri);\n\n\t\t\tthis.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the cis/trans stereochemistry for each bond\n\tprivate buildBondCisTrans():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\t\tlet sf = [0, 0], st = [0, 0];\n\n\t\t// bonds in small rings should not get an E/Z assignment, due to geometry constraints\n\t\tlet ringMask = Vec.booleanArray(false, nb);\n\t\tfor (let rsz = 3; rsz <= 7; rsz++)\n\t\t{\n\t\t\tfor (let r of mol.findRingsOfSize(rsz))\n\t\t\t{\n\t\t\t\tfor (let n = 0; n < r.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n\t\t\t\t\tringMask[b - 1] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tskip_bond: for (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tthis.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tif (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1]) continue;\n\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n\t\t\tif (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3) continue;\n\t\t\tif (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1])) continue;\n\t\t\tif (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1])) continue;\n\n\t\t\t// make sure neither side has two with equivalent priority\n\t\t\tfor (let i = 0; i < adj1.length - 1; i++)\n\t\t\t\tif (adj1[i] != bfr) for (let j = i + 1; j < adj1.length; j++)\n\t\t\t\t\tif (adj1[j] != bfr) if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1]) continue skip_bond;\n\t\t\tfor (let i = 0; i < adj2.length - 1; i++)\n\t\t\t\tif (adj2[i] != bto) for (let j = i + 1; j < adj2.length; j++)\n\t\t\t\t\tif (adj2[j] != bto) if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1]) continue skip_bond;\n\n\t\t\t// if it's a squiggly bond, that means unknown\n\t\t\tif (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tthis.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricBondSides(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n\t\t\tlet pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n\t\t\tlet pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n\t\t\tlet pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n\n\t\t\tthis.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the cis/trans stereochemistry for square planar atoms\n\tprivate buildPlanarCisTrans():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\tskip_atom: for (let n = 1; n <= na; n++)\n\t\t{\n\t\t\tthis.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n\t\t\tif (mol.atomAdjCount(n) != 4) continue; // NOTE: entertain the notion of making it work with virtual hydrogens\n\t\t\tif (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3) continue; // only d- or f-blocks need apply\n\n\t\t\tlet adj = mol.atomAdjList(n);\n\n\t\t\t// if 3 or more substituents are the same, nothing to see here\n\t\t\tfor (let i = 0; i < adj.length; i++)\n\t\t\t{\n\t\t\t\tlet count = 0;\n\t\t\t\tfor (let j = 0; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (this.priority[adj[i] - 1] == this.priority[adj[j] - 1]) count++;\n\t\t\t\t}\n\t\t\t\tif (count >= 3) continue skip_atom;\n\t\t\t}\n\n\t\t\tlet rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n\t\t\tif (rubric == null) continue;\n\n\t\t\tlet pri =\n\t\t\t[\n\t\t\t\trubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n\t\t\t\trubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n\t\t\t\trubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n\t\t\t\trubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n\t\t\t];\n\n\t\t\tlet parity = Permutation.parityOrder(pri);\n\t\t\tthis.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n\t\t}\n\t}\n\n\t// compute the R/S chirality for octahedral centres\n\tprivate buildOctaChirality():void\n\t{\n\t\t// !! TODO\n\t}\n\n\t// generates Cahn-Ingold-Prelog priority for each atom, where degeneracies are indicated by having the same number\n\tprivate buildPriority():void\n\t{\n\t\tconst mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n\n\t\t// build a graph representation which has entries replicated according to bond order, and -1 for implicit hydrogens\n\t\tlet cipgr:number[][] = [];\n\t\tfor (let n = 0; n < na; n++) cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n\t\t\tif (this.meta.isBondAromatic(n)) bo = 2; // hacky\n\t\t\tif (bf != bt) for (let i = 0; i < bo; i++)\n\t\t\t{\n\t\t\t\tcipgr[bf].push(bt);\n\t\t\t\tcipgr[bt].push(bf);\n\t\t\t}\n\t\t}\n\n\t\t// seed the priorities with atomic number\n\t\tthis.priority = Vec.numberArray(0, na);\n\t\tlet anyActualH = false;\n\t\tfor (let n = 0; n < na; n++)\n\t\t{\n\t\t\tthis.priority[n] = mol.atomicNumber(n + 1);\n\t\t\tif (this.priority[n] == 1) anyActualH = true;\n\t\t}\n\n\t\t// pass through and reassign priorities as many times as necessary, until no change\n\t\tlet prigr:number[][] = [];\n\t\tfor (let n = 0; n < na; n++) prigr.push([]);\n\t\twhile (true)\n\t\t{\n\t\t\t// make an equivalent to cipgr which has priorities instead of indices\n\t\t\tfor (let n = 0; n < na; n++)\n\t\t\t{\n\t\t\t\tlet cip = cipgr[n], pri:number[] = [];\n\t\t\t\tfor (let i = 0; i < cip.length; i++) pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n\t\t\t\tVec.sort(pri);\n\t\t\t\tprigr[n] = pri;\n\t\t\t}\n\n\t\t\t// divide each priority category into groups, then for each of these groups, split the contents out and reassign\n\t\t\tlet groups = this.sortAndGroup(this.priority);\n\t\t\tlet nextpri = anyActualH ? 0 : 1;\n\t\t\tlet repartitioned = false;\n\n\t\t\tfor (let n = 0; n < groups.length; n++)\n\t\t\t{\n\t\t\t\t// sort the groups according to their cipgr contents\n\t\t\t\tlet g = groups[n];\n\t\t\t\tfor (let p = 0; p < g.length - 1;)\n\t\t\t\t{\n\t\t\t\t\tconst i1 = g[p], i2 = g[p + 1];\n\t\t\t\t\tlet cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n\t\t\t\t\tfor (let i = 0; i < sz; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n\t\t\t\t\t\tif (v1 < v2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmp = -1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v1 > v2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmp = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cmp > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tg[p] = i2;\n\t\t\t\t\t\tg[p + 1] = i1;\n\t\t\t\t\t\tif (p > 0) p--;\n\t\t\t\t\t}\n\t\t\t\t\telse p++;\n\t\t\t\t}\n\t\t\t\t//Util.writeln(\" after sort: \"+Util.arrayStr(g));\n\t\t\t\t//for (int z : g) Util.writeln(\"   pri=\"+Util.arrayStr(prigr[z]));\n\t\t\t\tfor (let i = 0; i < g.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i == 0) nextpri++;\n\t\t\t\t\telse if (prigr[g[i]].length != prigr[g[i - 1]].length)\n\t\t\t\t\t{\n\t\t\t\t\t\tnextpri++;\n\t\t\t\t\t\trepartitioned = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let j = 0; j < prigr[g[i]].length; j++) if (prigr[g[i]][j] != prigr[g[i - 1]][j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnextpri++;\n\t\t\t\t\t\t\trepartitioned = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.priority[g[i]] = nextpri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!repartitioned) break;\n\t\t}\n\t}\n\n\t// utility method, used during priority generation\n\tprivate sortAndGroup(val:number[]):number[][]\n\t{\n\t\tlet uset = new Set<number>();\n\t\tfor (let v of val) uset.add(v);\n\t\tlet unique = Array.from(uset);\n\t\tVec.sort(unique);\n\t\tlet ret:number[][] = [];\n\t\tfor (let n = 0; n < unique.length; n++) ret.push([]);\n\n\t\tfor (let n = 0; n < val.length; n++)\n\t\t{\n\t\t\tlet grp = unique.indexOf(val[n]);\n\t\t\tret[grp].push(n);\n\t\t}\n\n\t\treturn ret;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {MoleculeStream} from '../io/MoleculeStream';\n\n/*\n\tExperiment reaction metadata: utilities and definitions.\n*/\n\nexport enum ExperimentMetaType\n{\n\tRole = 'role', // to assign an explicit role to a reagent (see ComponentClassType; default is auto)\n\tPressure = 'pressure', // when a reagent is applied at a nonstandard pressure\n\tTurnoverNumber = 'turnover_number', // catalyst turnovers (unitless)\n\tEnantiomericExcess = 'enantiomeric_excess', // percent of desired enantiomer above undesired\n\tTime = 'time', // total time for reaction step\n\tHeat = 'heat', // maximum temperature of reaction step\n\tLight = 'light', // denotes reaction powered by EM radiation\n}\n\nexport enum ExperimentMetaApplic\n{\n\tExperiment,\n\tStep,\n\tReactant,\n\tReagent,\n\tProduct,\n}\n\nexport enum ExperimentMetaValue\n{\n\tBoolean, // present = true, absent = false\n\tNumber, // requires a numeric value\n\tOptional, // numeric value is optiona; mere presence can be used as a flag\n\tString, // requires a string value\n}\n\nexport enum ExperimentMetaRoleType\n{\n\tReagent = 'reagent',\n\tCatalyst = 'catalyst',\n\tSolvent = 'solvent',\n\tAdjunct = 'adjunct',\n}\n\nexport class ExperimentMeta\n{\n\tpublic static APPLICABILITY =\n\t{\n\t\t[ExperimentMetaType.Role]: [ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.Pressure]: [ExperimentMetaApplic.Reactant, ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.TurnoverNumber]: [ExperimentMetaApplic.Reagent],\n\t\t[ExperimentMetaType.EnantiomericExcess]: [ExperimentMetaApplic.Product],\n\t\t[ExperimentMetaType.Time]: [ExperimentMetaApplic.Step],\n\t\t[ExperimentMetaType.Heat]: [ExperimentMetaApplic.Step],\n\t\t[ExperimentMetaType.Light]: [ExperimentMetaApplic.Step],\n\t};\n\n\tpublic static NAMES =\n\t{\n\t\t[ExperimentMetaType.Role]: 'Role',\n\t\t[ExperimentMetaType.Pressure]: 'Pressure',\n\t\t[ExperimentMetaType.TurnoverNumber]: 'Turnover Number',\n\t\t[ExperimentMetaType.EnantiomericExcess]: 'Enantiomeric Excess',\n\t\t[ExperimentMetaType.Time]: 'Time',\n\t\t[ExperimentMetaType.Heat]: 'Heat',\n\t\t[ExperimentMetaType.Light]: 'Light',\n\t};\n\n\tpublic static UNITS =\n\t{\n\t\t[ExperimentMetaType.Pressure]: 'atm',\n\t\t[ExperimentMetaType.TurnoverNumber]: null as string,\n\t\t[ExperimentMetaType.EnantiomericExcess]: '%',\n\t\t[ExperimentMetaType.Time]: 'hr',\n\t\t[ExperimentMetaType.Heat]: '\\u{00B0}C',\n\t\t[ExperimentMetaType.Light]: 'nm',\n\t};\n\n\tpublic static VALUES =\n\t{\n\t\t[ExperimentMetaType.Role]: ExperimentMetaValue.String,\n\t\t[ExperimentMetaType.Pressure]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.TurnoverNumber]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.EnantiomericExcess]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.Time]: ExperimentMetaValue.Number,\n\t\t[ExperimentMetaType.Heat]: ExperimentMetaValue.Optional,\n\t\t[ExperimentMetaType.Light]: ExperimentMetaValue.Optional,\n\t};\n\n\t// given a string that contains some number of lines, returns a convenient array representation\n\tpublic static unpackMeta(str:string):[ExperimentMetaType, number | string][]\n\t{\n\t\tif (!str) return [];\n\t\tlet list:[ExperimentMetaType, number | string][] = [];\n\t\tfor (let line of str.split('\\n')) if (line)\n\t\t{\n\t\t\tlet eq = line.indexOf('=');\n\t\t\tlet type = MoleculeStream.skUnescape(eq < 0 ? line : line.substring(0, eq)) as ExperimentMetaType;\n\t\t\tlet value:number | string = eq < 0 ? null : MoleculeStream.skUnescape(line.substring(eq + 1));\n\t\t\tlet vtype = this.VALUES[type];\n\t\t\tif (value != null && (vtype == ExperimentMetaValue.Number || vtype == ExperimentMetaValue.Optional)) value = parseFloat(value);\n\t\t\tlist.push([type, value]);\n\t\t}\n\t\tlist.sort((l1, l2) => (l1[0] as string).localeCompare(l2[0] as string));\n\t\treturn list;\n\t}\n\n\t// convert a list of type/value codes into packed string representation\n\tpublic static packMeta(list:[ExperimentMetaType, number | string][]):string\n\t{\n\t\tlet lines:string[] = [];\n\t\tfor (let [type, value] of list)\n\t\t{\n\t\t\tif (value == null)\n\t\t\t\tlines.push(MoleculeStream.skEscape(type));\n\t\t\telse\n\t\t\t\tlines.push(MoleculeStream.skEscape(type) + '=' + MoleculeStream.skEscape(value.toString()));\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// unpacks, sets & packs, all in one go\n\tpublic static withMetaKey(metastr:string, type:ExperimentMetaType, value:string):string\n\t{\n\t\tlet list = this.unpackMeta(metastr);\n\t\tlet item = list.find((look) => look[0] == type);\n\t\tif (value != null)\n\t\t{\n\t\t\tif (item) item[1] = value; else list.push([type, value]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist = list.filter((look) => look[0] != type);\n\t\t}\n\t\treturn this.packMeta(list);\n\t}\n\n\t// return a short description of the instantiated value for display onscreen\n\tpublic static describeMeta(type:ExperimentMetaType, value:number | string):string\n\t{\n\t\tlet formatFloat = (val:number, maxSigFig:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val == 0) return '0';\n\t\t\tlet digits = Math.ceil(-Math.log10(Math.abs(val)));\n\t\t\tdigits = Math.max(0, Math.max(digits, maxSigFig));\n\t\t\tlet str = val.toFixed(digits);\n\t\t\tif (str.indexOf('.') < 0) return str;\n\t\t\twhile (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\tif (str.endsWith('.')) str = str.substring(0, str.length - 1);\n\t\t\treturn str;\n\t\t};\n\n\t\tif (type == ExperimentMetaType.Role)\n\t\t{\n\t\t\tif (!value) return null;\n\t\t\treturn `role: ${value}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Pressure)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)} atm`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.TurnoverNumber)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)} turnover${value == 1 ? '' : 's'}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.EnantiomericExcess)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\treturn `${formatFloat(value as number, 2)}% ee`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Time)\n\t\t{\n\t\t\tif (value == null) return null;\n\t\t\tif (value as number < 1)\n\t\t\t{\n\t\t\t\tlet mins = value as number * 60;\n\t\t\t\treturn `${formatFloat(mins, 2)} min${mins == 1 ? '' : 's'}`;\n\t\t\t}\n\t\t\telse return `${formatFloat(value as number, 2)} hour${value == 1 ? '' : 's'}`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Heat)\n\t\t{\n\t\t\tif (value == null) return '\\u{0394}';\n\t\t\treturn `${formatFloat(value as number, 2)} \\u{00B0}C`;\n\t\t}\n\t\telse if (type == ExperimentMetaType.Light)\n\t\t{\n\t\t\tif (value == null) return 'h\\u{03BD}';\n\t\t\treturn `${formatFloat(value as number, 2)} nm`;\n\t\t}\n\t\treturn null;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ExperimentComponent, ExperimentComponentType, ExperimentEntry} from '../aspect/Experiment';\nimport {formatDouble} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {MolUtil} from '../mol/MolUtil';\n\n/*\n\tQuantity interconversions: for an Experiment entry, figure out all of the real-and-converted quantities, and\n\tmark them as such for convenient recall.\n*/\n\nexport const enum QuantityCalcRole\n{\n\tPrimary = 1, // a reactant upon which ratios depend\n\tSecondary, // a stoichiometric reactant, intermediate or waste product\n\tProduct, // a final product for which yield should be calculated\n\tIndependent, // a nonstoichiometric reagent or waste product\n}\n\nexport const enum QuantityCalcStat\n{\n\tUnknown = 0, // no data, i.e. not provided and cannot be calculated\n\tActual, // user-provided data\n\tVirtual, // calculated data\n\tConflict, // user-provided data that clashes\n}\n\nexport class QuantityCalcComp\n{\n\tpublic role = 0;\n\tpublic molw = 0;\n\tpublic valueEquiv = 0;\n\tpublic statEquiv = QuantityCalcStat.Unknown;\n\tpublic valueMass = QuantityCalc.UNSPECIFIED;\n\tpublic statMass = QuantityCalcStat.Unknown;\n\tpublic valueVolume = QuantityCalc.UNSPECIFIED;\n\tpublic statVolume = QuantityCalcStat.Unknown;\n\tpublic valueMoles = QuantityCalc.UNSPECIFIED;\n\tpublic statMoles = QuantityCalcStat.Unknown;\n\tpublic valueDensity = QuantityCalc.UNSPECIFIED;\n\tpublic statDensity = QuantityCalcStat.Unknown;\n\tpublic valueConc = QuantityCalc.UNSPECIFIED;\n\tpublic statConc = QuantityCalcStat.Unknown;\n\tpublic valueYield = QuantityCalc.UNSPECIFIED;\n\tpublic statYield = QuantityCalcStat.Unknown;\n\n\tconstructor(public comp:ExperimentComponent, public step:number, public type:ExperimentComponentType, public idx:number)\n\t{\n\t}\n}\n\nexport class GreenMetrics\n{\n\tpublic step = 0; // reaction step\n\tpublic idx = 0; // index into the overall quantity list\n\tpublic massReact:number[] = [];\n\tpublic massProd:number[] = [];\n\tpublic massWaste:number[] = [];\n\tpublic massProdWaste:number[] = [];\n\tpublic molwReact:number[] = [];\n\tpublic molwProd:number[] = [];\n\tpublic impliedWaste = 0;\n\tpublic isBlank = false; // set to true if there's no content (blank entries can still be useful as placeholders)\n}\n\nexport class QuantityCalc\n{\n\tpublic static UNSPECIFIED = -1;\n\n\tpublic quantities:QuantityCalcComp[] = [];\n\n\tpublic primaryMoles:number[] = [];\n\tpublic idxPrimary:number[] = [];\n\tpublic idxYield:number[] = [];\n\tpublic allMassReact:number[] = [];\n\tpublic allMassProd:number[] = [];\n\tpublic allMassWaste:number[] = [];\n\n\tpublic greenMetrics:GreenMetrics[] = [];\n\n\t// ---------------- static methods -----------------\n\n\t// returns true if the stoichiometry string is equivalent to zero, i.e. non-stoichiometric\n\tpublic static isStoichZero(stoich:string):boolean\n\t{\n\t\tif (this.isStoichUnity(stoich)) return false;\n\t\tif (parseFloat(stoich) == 0) return true;\n\t\treturn false;\n\t}\n\t// returns true if the stoichiometry string is equivalent to one, which is the default state\n\tpublic static isStoichUnity(stoich:string):boolean\n\t{\n\t\tif (!stoich || stoich == '1') return true;\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\treturn numer != 0 && numer == denom;\n\t}\n\t// extracts the numerator and denominator from the stoichiometry and expresses them as numerator/denominator; makes\n\t// up suitable values if it is not expressed as a fraction\n\tpublic static extractStoichFraction(stoich:string):[number, number]\n\t{\n\t\tif (!stoich) return [1, 1];\n\n\t\tlet numer = 1, denom = 1;\n\n\t\tlet i = stoich.indexOf('/');\n\t\tif (i < 0)\n\t\t{\n\t\t\tlet v = parseFloat(stoich);\n\t\t\tif (v >= 0) numer = v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet v1 = parseFloat(stoich.substring(0, i)), v2 = parseFloat(stoich.substring(i + 1));\n\t\t\tif (v1 >= 0) numer = v1;\n\t\t\tif (v2 >= 0) denom = v2;\n\t\t}\n\t\treturn [numer, denom];\n\t}\n\n\t// as above, but just returns the number, as a decimal ratio\n\tpublic static extractStoichValue(stoich:string):number\n\t{\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\treturn denom <= 1 ? numer : numer / denom;\n\t}\n\n\t// attempts to express the stoichiometry as a ratio; ideally this involves pulling out the numbers, but when they are provided\n\t// as a floating point number, has to have a go at finding the closest fraction; it will lock onto the closest match with a small-ish\n\t// denominator, so for obscure ratios, it may be an approximation\n\tprivate static MAX_DENOM = 16;\n\tprivate static RATIO_FRACT:number[] = null;\n\tpublic static stoichAsRatio(stoich:string):[number, number]\n\t{\n\t\tlet [numer, denom] = this.extractStoichFraction(stoich);\n\t\tif (numer == Math.floor(numer)) return [numer, denom];\n\t\treturn this.stoichFractAsRatio(numer);\n\t}\n\tpublic static stoichFractAsRatio(fract:number):[number, number]\n\t{\n\t\tif (fract == Math.floor(fract)) return [fract, 1];\n\n\t\tconst MAX_DENOM = QuantityCalc.MAX_DENOM;\n\t\tif (QuantityCalc.RATIO_FRACT == null)\n\t\t{\n\t\t\tQuantityCalc.RATIO_FRACT = [];\n\t\t\tfor (let p = 0, j = 2; j <= MAX_DENOM; j++) for (let i = 1; i < j && i < MAX_DENOM - 1; i++) QuantityCalc.RATIO_FRACT.push(i * 1.0 / j);\n\t\t}\n\n\t\tlet whole = Math.floor(fract);\n\t\tlet resid = fract - whole;\n\n\t\tlet bestDiff = Number.MAX_VALUE;\n\t\tlet bestOver = 1, bestUnder = 1;\n\t\tfor (let p = 0, j = 2; j <= MAX_DENOM; j++) for (let i = 1; i < j && i < MAX_DENOM - 1; i++)\n\t\t{\n\t\t\tlet diff = Math.abs(QuantityCalc.RATIO_FRACT[p++] - resid);\n\t\t\tif (diff < bestDiff) {bestDiff = diff; bestOver = i; bestUnder = j;}\n\t\t}\n\n\t\treturn [bestOver + (whole * bestUnder), bestUnder];\n\t}\n\n\t// if the given reagent has a molecule with mapping numbers, checks to see if they line up with product(s), and derives stoichiometry from\n\t// there; a value of 0 means that nothing could be determined\n\tpublic static impliedReagentStoich(reagent:ExperimentComponent, products:ExperimentComponent[]):number\n\t{\n\t\tif (MolUtil.isBlank(reagent.mol) || products.length == 0) return 0;\n\n\t\tlet pstoich = Vec.numberArray(-1, products.length);\n\t\tlet rmol = reagent.mol;\n\t\tlet highest = 0;\n\n\t\tfor (let n = 1; n <= rmol.numAtoms; n++)\n\t\t{\n\t\t\tlet m = rmol.atomMapNum(n);\n\t\t\tif (m == 0) continue;\n\t\t\tlet total = 0;\n\t\t\tfor (let i = 0; i < products.length; i++)\n\t\t\t{\n\t\t\t\tlet pmol = products[i].mol;\n\t\t\t\tif (MolUtil.isBlank(pmol)) continue;\n\n\t\t\t\tlet pcount = 0;\n\t\t\t\tfor (let j = 1; j <= pmol.numAtoms; j++) if (pmol.atomMapNum(j) == m) pcount++;\n\t\t\t\tif (pcount > 0)\n\t\t\t\t{\n\t\t\t\t\tlet rcount = 0;\n\t\t\t\t\tfor (let k = 1; k <= rmol.numAtoms; k++) if (rmol.atomMapNum(k) == m) rcount++;\n\t\t\t\t\tif (pstoich[i] < 0) pstoich[i] = QuantityCalc.extractStoichValue(products[i].stoich);\n\t\t\t\t\ttotal += pcount * pstoich[i] / rcount;\n\t\t\t\t}\n\t\t\t}\n\t\t\thighest = Math.max(highest, total);\n\t\t}\n\t\treturn highest;\n\t}\n\n\t/*\n\t// for a given step in a reaction, adds up all the structures on both the left and right hand sides; the structures on each side are combined\n\t// into a single molecule instance, and are expanded out based on the relative ratio of stoichiometry; zero stoichiometry is treated as 1\n\tpublic static Molecule[] combinedSides(Experiment.Entry entry, int step)\n\t{\n\t\tList<Molecule> left = new ArrayList<>(), right = new ArrayList<>();\n\t\tIntVector numer = new IntVector(), denom = new IntVector();\n\n\t\tComponent[] reactants = step == 0 ? entry.steps[0].reactants : entry.steps[step - 1].products;\n\t\tfor (Component comp : reactants) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tPairTwoInt ratio = stoichAsRatio(comp.stoich);\n\t\t\tleft.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\t\tfor (Component comp : entry.steps[step].reagents) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tfloat fract = impliedReagentStoich(comp, entry.steps[step].products);\n\t\t\tPairTwoInt ratio = fract == 0 ? new PairTwoInt(1, 1) : stoichAsRatio(fract);\n\t\t\tleft.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\n\t\tfor (Component comp : entry.steps[step].products) if (MolUtil.notBlank(comp.mol))\n\t\t{\n\t\t\tPairTwoInt ratio = stoichAsRatio(comp.stoich);\n\t\t\tright.add(comp.mol);\n\t\t\tnumer.add(ratio.val1 == 0 ? 1 : ratio.val1);\n\t\t\tdenom.add(ratio.val2);\n\t\t}\n\n\t\tint bigDenom = 1;\n\t\tfor (int n = 0; n < numer.size(); n++)\n\t\t{\n\t\t\tint d = denom.get(n);\n\t\t\tif (d == 1) continue;\n\t\t\tif (bigDenom % d != 0) bigDenom *= d;\n\t\t}\n\t\t// (any way to bring it back down?)\n\n\t\tMolecule mol1 = new Molecule(), mol2 = new Molecule();\n\t\tfor (int n = 0; n < left.size(); n++)\n\t\t{\n\t\t\tint num = numer.get(n) * bigDenom / denom.get(n);\n\t\t\tfor (int i = 0; i < num; i++) MolUtil.append(mol1, left.get(n));\n\t\t}\n\t\tfor (int n = 0; n < right.size(); n++)\n\t\t{\n\t\t\tint nn = left.size() + n, num = numer.get(nn) * bigDenom / denom.get(nn);\n\t\t\tfor (int i = 0; i < num; i++) MolUtil.append(mol2, right.get(n));\n\t\t}\n\n\t\treturn new Molecule[]{mol1, mol2};\n\t}*/\n\n\t// for a given step, works out the integral stoichiometry of {reactants, reagents, components}\n\tpublic static componentRatio(entry:ExperimentEntry, step:number):[number[], number[], number[]]\n\t{\n\t\tlet numer:number[] = [], denom:number[] = [];\n\n\t\tlet reactants = step == 0 ? entry.steps[0].reactants : entry.steps[step - 1].products;\n\t\tfor (let comp of reactants)\n\t\t{\n\t\t\tlet [num, den] = this.stoichAsRatio(comp.stoich);\n\t\t\tnumer.push(num);\n\t\t\tdenom.push(den);\n\t\t}\n\t\tfor (let comp of entry.steps[step].reagents)\n\t\t{\n\t\t\tlet fract = this.impliedReagentStoich(comp, entry.steps[step].products);\n\t\t\tlet [num, den] = fract == 0 ? [0, 1] : this.stoichFractAsRatio(fract);\n\t\t\tnumer.push(num == 0 ? 1 : num);\n\t\t\tdenom.push(den);\n\t\t}\n\t\tfor (let comp of entry.steps[step].products)\n\t\t{\n\t\t\tlet [num, den] = this.stoichAsRatio(comp.stoich);\n\t\t\tnumer.push(num == 0 ? 1 : num);\n\t\t\tdenom.push(den);\n\t\t}\n\n\t\tlet bigDenom = 1;\n\t\tfor (let n = 0; n < numer.length; n++) if (denom[n] > 1 && bigDenom % denom[n] != 0) bigDenom *= denom[n];\n\n\t\tlet ratioReactants:number[] = [], ratioReagents:number[] = [], ratioProducts:number[] = [];\n\t\tlet p = 0;\n\t\tfor (let n = 0; n < reactants.length; n++, p++) ratioReactants.push(numer[p] * bigDenom / denom[p]);\n\t\tfor (let n = 0; n < entry.steps[step].reagents.length; n++, p++) ratioReagents.push(numer[p] * bigDenom / denom[p]);\n\t\tfor (let n = 0; n < entry.steps[step].products.length; n++, p++) ratioProducts.push(numer[p] * bigDenom / denom[p]);\n\n\t\treturn [ratioReactants, ratioReagents, ratioProducts];\n\t}\n\n\t// ---------------- public methods -----------------\n\n\tconstructor(public entry:ExperimentEntry)\n\t{\n\t}\n\n\t// fill in all the details\n\tpublic calculate():void\n\t{\n\t\t// the basic quantities: iteratively ifer everything possible\n\t\tthis.classifyTypes();\n\t\twhile (this.calculateSomething()) {}\n\n\t\t// work out green metrics, where applicable\n\t\tthis.allMassReact = [];\n\t\tthis.allMassProd = [];\n\t\tthis.allMassWaste = [];\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet qc = this.quantities[n];\n\n\t\t\tif (qc.type == ExperimentComponentType.Reactant || qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.valueEquiv == 0 && qc.type == ExperimentComponentType.Reagent) continue;\n\t\t\t\tthis.allMassReact.push(qc.valueMass);\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Product)\n\t\t\t{\n\t\t\t\tif (!qc.comp.waste)\n\t\t\t\t{\n\t\t\t\t\tthis.allMassProd.push(qc.valueMass);\n\t\t\t\t\tthis.calculateGreenMetrics(n);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.allMassWaste.push(qc.valueMass);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// access to determined results\n\tpublic get numQuantities():number {return this.quantities.length;}\n\tpublic getQuantity(idx:number):QuantityCalcComp {return this.quantities[idx];}\n\tpublic getAllQuantities():QuantityCalcComp[] {return this.quantities.slice(0);}\n\tpublic get numGreenMetrics():number {return this.greenMetrics.length;}\n\tpublic getGreenMetrics(idx:number):GreenMetrics {return this.greenMetrics[idx];}\n\tpublic getAllGreenMetrics():GreenMetrics[] {return this.greenMetrics.slice(0);}\n\tpublic getAllMassReact():number[] {return this.allMassReact.slice(0);}\n\tpublic getAllMassProd():number[] {return this.allMassProd.slice(0);}\n\tpublic getAllMassWaste():number[] {return this.allMassWaste.slice(0);}\n\n\t// convenience: locate a component somewhere within the entry\n\tpublic findComponent(step:number, type:number, idx:number):QuantityCalcComp\n\t{\n\t\tfor (let qc of this.quantities) if (qc.step == step && qc.type == type && qc.idx == idx) return qc;\n\t\treturn null;\n\t}\n\n\t// convenience formatting tools, which pick appropriate units\n\tpublic static formatMolWeight(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + ' g/mol';\n\t}\n\tpublic static formatMass(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCg';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mg';\n\t\tif (value >= 1E3) return formatDouble(value * 1E-3, 6) + ' kg';\n\t\treturn formatDouble(value, 6) + ' g';\n\t}\n\tpublic static formatVolume(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' nL';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' \\u03BCL';\n\t\tif (value >= 1E3) return formatDouble(value * 1E-3, 6) + ' L';\n\t\treturn formatDouble(value, 6) + ' mL';\n\t}\n\tpublic static formatMoles(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-9) return formatDouble(value * 1E9, 6) + ' nmol';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCmol';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mmol';\n\t\treturn formatDouble(value, 6) + ' mol';\n\t}\n\tpublic static formatDensity(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + ' g/mL';\n\t}\n\tpublic static formatConc(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\tif (value <= 1E-9) return formatDouble(value * 1E9, 6) + ' nmol/L';\n\t\tif (value <= 1E-6) return formatDouble(value * 1E6, 6) + ' \\u03BCmol/L';\n\t\tif (value <= 1E-3) return formatDouble(value * 1E3, 6) + ' mmol/L';\n\t\treturn formatDouble(value, 6) + ' mol/L';\n\t}\n\tpublic static formatPercent(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 6) + '%';\n\t}\n\tpublic static formatEquiv(value:number):string\n\t{\n\t\tif (value == QuantityCalc.UNSPECIFIED) return '';\n\t\treturn formatDouble(value, 4) + ' equiv';\n\t}\n\n\t// ---------------- private methods -----------------\n\n\t// do a first pass of pulling out the raw data\n\tprivate classifyTypes():void\n\t{\n\t\tfor (let s = 0; s < this.entry.steps.length; s++)\n\t\t{\n\t\t\tlet step = this.entry.steps[s];\n\t\t\tfor (let n = 0; n < step.reactants.length; n++) this.quantities.push(new QuantityCalcComp(step.reactants[n], s, ExperimentComponentType.Reactant, n));\n\t\t\tfor (let n = 0; n < step.reagents.length; n++) this.quantities.push(new QuantityCalcComp(step.reagents[n], s, ExperimentComponentType.Reagent, n));\n\t\t\tfor (let n = 0; n < step.products.length; n++) this.quantities.push(new QuantityCalcComp(step.products[n], s, ExperimentComponentType.Product, n));\n\t\t}\n\n\t\t// classify each component into roles, and fill in some basic properties\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet qc = this.quantities[n];\n\n\t\t\tif (qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.comp.equiv != null) qc.valueEquiv = qc.comp.equiv;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet eq = QuantityCalc.impliedReagentStoich(qc.comp, this.entry.steps[qc.step].products);\n\t\t\t\t\tif (eq > 0) qc.valueEquiv = eq;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tqc.valueEquiv = QuantityCalc.extractStoichValue(qc.comp.stoich);\n\t\t\t}\n\n\t\t\tif (qc.comp.mol != null) qc.molw = MolUtil.molecularWeight(qc.comp.mol);\n\n\t\t\tqc.role = QuantityCalcRole.Independent;\n\t\t\tif (qc.step == 0 && qc.type == ExperimentComponentType.Reactant)\n\t\t\t{\n\t\t\t\tif (qc.comp.primary)\n\t\t\t\t{\n\t\t\t\t\tqc.role = QuantityCalcRole.Primary;\n\t\t\t\t\tthis.idxPrimary.push(n);\n\t\t\t\t}\n\t\t\t\telse qc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tif (qc.valueEquiv > 0) qc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\t\t\telse if (qc.type == ExperimentComponentType.Product && !qc.comp.waste)\n\t\t\t{\n\t\t\t\tqc.role = QuantityCalcRole.Product;\n\t\t\t\tthis.idxYield.push(n);\n\t\t\t}\n\t\t\telse if (qc.valueEquiv > 0)\n\t\t\t{\n\t\t\t\tqc.role = QuantityCalcRole.Secondary;\n\t\t\t}\n\n\t\t\t// fill in any user-specified values\n\t\t\tif (qc.comp.mass != null) qc.valueMass = qc.comp.mass;\n\t\t\tif (qc.comp.volume != null) qc.valueVolume = qc.comp.volume;\n\t\t\tif (qc.comp.moles != null) qc.valueMoles = qc.comp.moles;\n\t\t\tif (qc.comp.density != null) qc.valueDensity = qc.comp.density;\n\t\t\tif (qc.comp.conc != null) qc.valueConc = qc.comp.conc;\n\t\t\tif (qc.comp.yield != null) qc.valueYield = qc.comp.yield;\n\n\t\t\tqc.statEquiv = qc.valueEquiv == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statMass = qc.valueMass == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statVolume = qc.valueVolume == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statMoles = qc.valueMoles == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statDensity = qc.valueDensity == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statConc = qc.valueConc == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t\tqc.statYield = qc.valueYield == QuantityCalc.UNSPECIFIED ? QuantityCalcStat.Unknown : QuantityCalcStat.Actual;\n\t\t}\n\n\t\t// if no rate limiting reactants, pick everything from step 1\n\t\tif (this.idxPrimary.length == 0)\n\t\t{\n\t\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t\t{\n\t\t\t\tlet qc = this.quantities[n];\n\t\t\t\tif (qc.type == ExperimentComponentType.Reactant && qc.step == 0)\n\t\t\t\t{\n\t\t\t\t\tqc.role = QuantityCalcRole.Primary;\n\t\t\t\t\tthis.idxPrimary.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// attempt to replace at least one unknown value with an inferred value; returns true if anything happened, which\n\t// signals that another round should be repeated, in case more possibilities come online\n\tprivate calculateSomething():boolean\n\t{\n\t\tlet anything = false;\n\n\t\t// ---- part 1: look for any interconversions that are internal to a component\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\t// molar interconversion\n\t\t\tif (qc.molw > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tqc.valueMass = qc.valueMoles * qc.molw;\n\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.molw > 0 && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMoles = qc.valueMass / qc.molw;\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.molw > 0 && qc.statMass == QuantityCalcStat.Actual && qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tlet calcMoles = qc.valueMass / qc.molw;\n\t\t\t\tif (!this.closeEnough(qc.valueMoles, calcMoles))\n\t\t\t\t{\n\t\t\t\t\tqc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\tqc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet isSoln = qc.statConc == QuantityCalcStat.Actual ||\n\t\t\t\t(qc.statVolume == QuantityCalcStat.Actual && (qc.statMass == QuantityCalcStat.Actual || qc.statMoles == QuantityCalcStat.Actual));\n\n\t\t\t// non solutions, mass/density/volume\n\t\t\tif (!isSoln)\n\t\t\t{\n\t\t\t\tif (qc.valueDensity > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueMass = qc.valueVolume * qc.valueDensity;\n\t\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueDensity > 0 && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueVolume == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueVolume = qc.valueMass / qc.valueDensity;\n\t\t\t\t\tqc.statVolume = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueDensity == QuantityCalc.UNSPECIFIED && qc.valueMass != QuantityCalc.UNSPECIFIED &&\n\t\t\t\t\tqc.valueVolume != QuantityCalc.UNSPECIFIED && qc.valueConc == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual || qc.statMoles == QuantityCalcStat.Actual) // don't guess density from stoichoimetry\n\t\t\t\t\t{\n\t\t\t\t\t\tqc.valueDensity = qc.valueMass / qc.valueVolume;\n\t\t\t\t\t\tqc.statDensity = QuantityCalcStat.Virtual;\n\t\t\t\t\t\tanything = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// solutions, moles/conc/volume\n\t\t\tif (isSoln)\n\t\t\t{\n\t\t\t\tif (qc.valueConc > 0 && qc.valueMoles == QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueMoles = 0.001 * qc.valueVolume * qc.valueConc;\n\t\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueConc > 0 && qc.valueMoles != QuantityCalc.UNSPECIFIED && qc.valueVolume == QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueVolume = 1000 * qc.valueMoles / qc.valueConc;\n\t\t\t\t\tqc.statVolume = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.valueConc == QuantityCalc.UNSPECIFIED && qc.valueMass != QuantityCalc.UNSPECIFIED && qc.valueVolume != QuantityCalc.UNSPECIFIED)\n\t\t\t\t{\n\t\t\t\t\tqc.valueConc = 1000 * qc.valueMoles / qc.valueVolume;\n\t\t\t\t\tqc.statConc = QuantityCalcStat.Virtual;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t\tif (qc.statConc == QuantityCalcStat.Actual && qc.valueMoles > 0 && qc.statVolume == QuantityCalcStat.Actual)\n\t\t\t\t{\n\t\t\t\t\tlet calcVolume = 1000 * qc.valueMoles / qc.valueConc;\n\t\t\t\t\tif (!this.closeEnough(qc.valueVolume, calcVolume))\n\t\t\t\t\t{\n\t\t\t\t\t\tqc.statConc = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual) qc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Actual) qc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t\t\tqc.statVolume = QuantityCalcStat.Conflict;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// calculating mass from virtual molar mass\n\t\t\tif (qc.molw > 0 && qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueMoles != QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMass = qc.valueMoles * qc.molw;\n\t\t\t\tqc.statMass = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\n\t\t\t// providing a concentration and density is disallowed\n\t\t\tif (qc.statDensity == QuantityCalcStat.Actual && qc.statConc == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tqc.statDensity = QuantityCalcStat.Conflict;\n\t\t\t\tqc.statConc = QuantityCalcStat.Conflict;\n\t\t\t}\n\t\t}\n\n\t\tif (anything) return true; // want to make it cycle over all the reactants before moving on\n\n\t\t// ---- part 2: determine the molar quantity baseline, for each step, where applicable\n\n\t\tlet hasRef = false;\n\t\tlet numSteps = this.entry.steps.length;\n\t\tlet primaryCounts = Vec.numberArray(0, numSteps);\n\t\tlet primaryEquivs = Vec.numberArray(0, numSteps);\n\t\tlet primaryMoles = this.primaryMoles = Vec.numberArray(0, numSteps);\n\n\t\t// go over components: first step uses reactants; next steps use products from previous\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tlet ref = -1;\n\t\t\tif (qc.step == 0 && qc.type == ExperimentComponentType.Reactant && qc.comp.primary) ref = qc.step;\n\t\t\telse if (qc.step < numSteps - 1 && qc.type == ExperimentComponentType.Product && !qc.comp.waste) ref = qc.step + 1;\n\t\t\telse continue;\n\t\t\tif (primaryEquivs[ref] < 0) continue;\n\n\t\t\tif (qc.statMoles == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tprimaryEquivs[ref] = -1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprimaryCounts[ref]++;\n\t\t\tprimaryEquivs[ref] += qc.valueEquiv;\n\t\t\tprimaryMoles[ref] += qc.valueMoles;\n\t\t}\n\n\t\t// special deal: if no primary reactants, use all of the primaries\n\t\tif (primaryEquivs[0] <= 0)\n\t\t{\n\t\t\tprimaryCounts[0] = 0;\n\t\t\tprimaryEquivs[0] = 0;\n\t\t\tprimaryMoles[0] = 0;\n\t\t\tfor (let i of this.idxPrimary)\n\t\t\t{\n\t\t\t\tlet qc = this.quantities[i];\n\t\t\t\tif (qc.statMoles == QuantityCalcStat.Unknown)\n\t\t\t\t{\n\t\t\t\t\tprimaryCounts[0] = 0;\n\t\t\t\t\tprimaryEquivs[0] = -1;\n\t\t\t\t\tprimaryMoles[0] = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprimaryCounts[0]++;\n\t\t\t\tprimaryEquivs[0] += qc.valueEquiv;\n\t\t\t\tprimaryMoles[0] += qc.valueMoles;\n\t\t\t}\n\t\t}\n\t\tlet refMoles = Vec.numberArray(0, numSteps);\n\t\tfor (let n = 0; n < numSteps; n++)\n\t\t{\n\t\t\trefMoles[n] = primaryCounts[n] == 0 || primaryEquivs[n] <= 0 ? 0 : primaryMoles[n] / primaryEquivs[n];\n\t\t\tif (refMoles[n] > 0) hasRef = true;\n\t\t}\n\n\t\t// if no reference moles at all, try formulating some by making use of product quantities\n\t\tif (!hasRef)\n\t\t{\n\t\t\tfor (let n = 0; n < numSteps; n++)\n\t\t\t{\n\t\t\t\tlet prodMolar:number[] = [];\n\t\t\t\tfor (let qc of this.quantities)\n\t\t\t\t{\n\t\t\t\t\tif (qc.step != n || qc.role != QuantityCalcRole.Product) continue;\n\t\t\t\t\t//if (qc.statMoles == QuantityCalcStat.Actual || qc.valueMoles <= 0 || qc.valueEquiv <= 0) continue;\n\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Unknown || qc.valueMoles <= 0 || qc.valueEquiv <= 0) continue;\n\t\t\t\t\tlet yld = qc.valueYield > 0 ? qc.valueYield * 0.01 : 1;\n\t\t\t\t\tprodMolar.push(qc.valueMoles / (qc.valueEquiv * yld));\n\t\t\t\t}\n\t\t\t\tif (prodMolar.length > 0)\n\t\t\t\t{\n\t\t\t\t\trefMoles[n] = Vec.sum(prodMolar) / prodMolar.length;\n\t\t\t\t\thasRef = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasRef) return false; // can't do anything else\n\n\t\t// ---- part 3: look for ways to apply the yield\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tif (qc.type != ExperimentComponentType.Product) continue;\n\n\t\t\tif (refMoles[qc.step] == 0) continue;\n\n\t\t\tif (qc.valueYield == QuantityCalc.UNSPECIFIED && qc.valueMoles != QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueYield = 100 * qc.valueMoles / (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tqc.statYield = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueYield != QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueMoles = qc.valueYield * 0.01 * (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueMoles > 0 && qc.statYield == QuantityCalcStat.Actual)\n\t\t\t{\n\t\t\t\tlet calcYield = 100 * qc.valueMoles / (refMoles[qc.step] * qc.valueEquiv);\n\t\t\t\tif (!this.closeEnough(qc.valueYield, calcYield))\n\t\t\t\t{\n\t\t\t\t\tif (qc.statMass == QuantityCalcStat.Actual) qc.statMass = QuantityCalcStat.Conflict;\n\t\t\t\t\tif (qc.statMoles == QuantityCalcStat.Actual) qc.statMoles = QuantityCalcStat.Conflict;\n\t\t\t\t\tqc.statYield = QuantityCalcStat.Conflict;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (anything) return true;\n\n\t\t// ---- part 4: look for stoichiometric components where molarity can be filled in\n\n\t\tfor (let qc of this.quantities)\n\t\t{\n\t\t\tif (refMoles[qc.step] == 0) continue;\n\n\t\t\tif (qc.valueMass == QuantityCalc.UNSPECIFIED && qc.valueMoles == QuantityCalc.UNSPECIFIED && qc.valueEquiv > 0)\n\t\t\t{\n\t\t\t\tqc.valueMoles = refMoles[qc.step] * qc.valueEquiv;\n\t\t\t\tqc.statMoles = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (qc.valueMoles != QuantityCalc.UNSPECIFIED && qc.valueEquiv == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tqc.valueEquiv = qc.valueMoles / refMoles[qc.step];\n\t\t\t\tqc.statEquiv = QuantityCalcStat.Virtual;\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t}\n\n\t\treturn anything;\n\t}\n\n\t// work out all available green metrics for a particular product index\n\tprivate calculateGreenMetrics(idx:number):void\n\t{\n\t\tlet qc = this.quantities[idx];\n\t\tlet gm = new GreenMetrics();\n\n\t\tgm.step = qc.step;\n\t\tgm.idx = qc.idx;\n\t\tgm.isBlank = true;\n\n\t\tfor (let n = 0; n < this.quantities.length; n++)\n\t\t{\n\t\t\tlet sub = this.quantities[n];\n\t\t\tif (sub.step > gm.step) continue;\n\n\t\t\tlet eq = sub.valueEquiv;\n\t\t\tif (eq == 0 && sub.type == ExperimentComponentType.Reagent) continue;\n\n\t\t\tif (sub.valueMass != QuantityCalc.UNSPECIFIED) gm.isBlank = false;\n\n\t\t\tif (sub.type == ExperimentComponentType.Reactant || sub.type == ExperimentComponentType.Reagent)\n\t\t\t{\n\t\t\t\tgm.massReact.push(sub.valueMass);\n\t\t\t\tif (sub.step == gm.step && eq > 0 && sub.molw > 0) gm.molwReact.push(eq * sub.molw);\n\t\t\t}\n\t\t\telse if (sub.type == ExperimentComponentType.Product)\n\t\t\t{\n\t\t\t\tif (!sub.comp.waste)\n\t\t\t\t{\n\t\t\t\t\tif (sub.step == gm.step) gm.massProd.push(sub.valueMass);\n\t\t\t\t\tif (eq > 0 && sub.molw > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sub.step == gm.step) gm.molwProd.push(eq * sub.molw);\n\t\t\t\t\t\telse if (sub.step == gm.step - 1) gm.molwReact.push(eq * sub.molw);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgm.massWaste.push(sub.valueMass);\n\t\t\t\t}\n\t\t\t\tif (sub.step == gm.step) gm.massProdWaste.push(sub.valueMass);\n\t\t\t}\n\t\t}\n\n\t\tgm.impliedWaste = Vec.sum(gm.massReact) - Vec.sum(gm.massProdWaste);\n\t\tif (Math.abs(gm.impliedWaste) > 1E-3) gm.impliedWaste = 0;\n\n\t\tthis.greenMetrics.push(gm);\n\t}\n\n\t// figure out if two values are not in conflict\n\tprivate closeEnough(value1:number, value2:number):boolean\n\t{\n\t\tif (value1 <= 0 || value2 <= 0) return true;\n\t\tlet ratio = value1 / value2;\n\t\treturn ratio >= 0.99 && ratio <= 1.01;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n///<reference path='../ui/ButtonBank.ts'/>\n\nimport {Molecule} from '../mol/Molecule';\nimport {Geometry} from '../mol/SketchUtil';\nimport {ButtonBank, ButtonBankItem} from '../ui/ButtonBank';\nimport {KeyCode} from '../util/util';\nimport {ActivityType, MoleculeActivity} from './MoleculeActivity';\n\n/* eslint-disable no-multi-spaces, comma-spacing */\n\n/*\n\tCommandBank: the various bank styles that correspond to actions (select-then-do, as opposed to toolbank style which\n\tis pick-then-interact).\n*/\n\nconst ELEMENTS_NOBLE:string[] =\n[\n\t'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\n\nconst ELEMENTS_S_BLOCK:string[] =\n[\n\t'Li', 'Na', 'K',  'Rb', 'Cs', 'Fr', 'Sc',\n\t'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\n\nconst ELEMENTS_P_BLOCK:string[] =\n[\n\t'B',  'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n\t'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\n\nconst ELEMENTS_D_BLOCK:string[] =\n[\n\t'Ti', 'V' , 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n\t'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n\t'Hf', 'Ta', 'W',  'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\n\nconst ELEMENTS_F_BLOCK:string[] =\n[\n\t'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n\t'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\n\nconst ELEMENTS_ABBREV:string[] =\n[\n\t'*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n\t'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\n\nenum CommandType\n{\n\tMain = 0,\n\tAtom,\n\tBond,\n\tSelect,\n\tMove,\n\tAbbrev,\n\tSBlock,\n\tPBlock,\n\tDBlock,\n\tFBlock,\n\tNoble\n}\n\nimport svgMainUndo from '@reswmk/img/actions/MainUndo.svg';\nimport svgMainRedo from '@reswmk/img/actions/MainRedo.svg';\nimport svgMainZoomIn from '@reswmk/img/actions/MainZoomIn.svg';\nimport svgMainZoomOut from '@reswmk/img/actions/MainZoomOut.svg';\nimport svgMainZoomFit from '@reswmk/img/actions/MainZoomFit.svg';\nimport svgMainSelSide from '@reswmk/img/actions/MainSelSide.svg';\nimport svgMainSelAll from '@reswmk/img/actions/MainSelAll.svg';\nimport svgMainSelNone from '@reswmk/img/actions/MainSelNone.svg';\nimport svgMainDelete from '@reswmk/img/actions/MainDelete.svg';\nimport svgMainCut from '@reswmk/img/actions/MainCut.svg';\nimport svgMainCopy from '@reswmk/img/actions/MainCopy.svg';\nimport svgMainPaste from '@reswmk/img/actions/MainPaste.svg';\nimport svgMainAtom from '@reswmk/img/actions/MainAtom.svg';\nimport svgMainBond from '@reswmk/img/actions/MainBond.svg';\nimport svgMainSelect from '@reswmk/img/actions/MainSelect.svg';\nimport svgMainMove from '@reswmk/img/actions/MainMove.svg';\n\nconst COMMANDS_MAIN:ButtonBankItem[] =\n[\n\t{id: 'undo', svg: svgMainUndo, helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z'},\n\t{id: 'redo', svg: svgMainRedo, helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z'},\n\t{id: 'zoomin', svg: svgMainZoomIn, helpText: 'Zoom in.', mnemonic: '='},\n\t{id: 'zoomout', svg: svgMainZoomOut, helpText: 'Zoom out.', mnemonic: '-'},\n\t{id: 'zoomfit', svg: svgMainZoomFit, helpText: 'Show whole diagram onscreen.', mnemonic: ''},\n\t{id: 'selside', svg: svgMainSelSide, helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E'},\n\t{id: 'selall', svg: svgMainSelAll, helpText: 'Select all atoms.', mnemonic: 'Shift+A'},\n\t{id: 'selnone', svg: svgMainSelNone, helpText: 'Clear selection.', mnemonic: 'Shift+Q'},\n\t{id: 'delete', svg: svgMainDelete, helpText: 'Delete selected atoms and bonds.', mnemonic: 'D'},\n\t{id: 'cut', svg: svgMainCut, helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X'},\n\t{id: 'copy', svg: svgMainCopy, helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C'},\n\t{id: 'paste', svg: svgMainPaste, helpText: 'Paste clipboard contents.'/*, mnemonic: 'Ctrl+V'*/}, // TODO: web-specific behaviour\n\t{id: 'atom', svg: svgMainAtom, helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A'},\n\t{id: 'bond', svg: svgMainBond, helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B'},\n\t{id: 'select', svg: svgMainSelect, helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S'},\n\t{id: 'move', svg: svgMainMove, helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M'},\n];\n\nimport svgAtomPlus from '@reswmk/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '@reswmk/img/actions/AtomMinus.svg';\nimport svgAtomAbbrev from '@reswmk/img/actions/AtomAbbrev.svg';\nimport svgAtomSBlock from '@reswmk/img/actions/AtomSBlock.svg';\nimport svgAtomPBlock from '@reswmk/img/actions/AtomPBlock.svg';\nimport svgAtomDBlock from '@reswmk/img/actions/AtomDBlock.svg';\nimport svgAtomFBlock from '@reswmk/img/actions/AtomFBlock.svg';\nimport svgAtomNoble from '@reswmk/img/actions/AtomNoble.svg';\n\nconst COMMANDS_ATOM:ButtonBankItem[] =\n[\n\t{id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C'},\n\t{id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N'},\n\t{id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O'},\n\t{id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S'},\n\t{id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P'},\n\t{id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H'},\n\t{id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F'},\n\t{id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L'},\n\t{id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B'},\n\t{id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I'},\n\t{id: 'plus', svg: svgAtomPlus, helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+'},\n\t{id: 'minus', svg: svgAtomMinus, helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_'},\n\t{id: 'abbrev', svg: svgAtomAbbrev, helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: ''},\n\t{id: 'sblock', svg: svgAtomSBlock, helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'pblock', svg: svgAtomPBlock, helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'dblock', svg: svgAtomDBlock, helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'fblock', svg: svgAtomFBlock, helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'noble', svg: svgAtomNoble, helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: ''},\n];\n\nimport svgBondOne from '@reswmk/img/actions/BondOne.svg';\nimport svgBondTwo from '@reswmk/img/actions/BondTwo.svg';\nimport svgBondThree from '@reswmk/img/actions/BondThree.svg';\nimport svgBondFour from '@reswmk/img/actions/BondFour.svg';\nimport svgBondZero from '@reswmk/img/actions/BondZero.svg';\nimport svgBondUp from '@reswmk/img/actions/BondUp.svg';\nimport svgBondDown from '@reswmk/img/actions/BondDown.svg';\nimport svgBondSquig from '@reswmk/img/actions/BondSquig.svg';\nimport svgBondQAny from '@reswmk/img/actions/BondQAny.svg';\nimport svgBondAddTwo from '@reswmk/img/actions/BondAddTwo.svg';\nimport svgBondInsert from '@reswmk/img/actions/BondInsert.svg';\nimport svgBondSwitch from '@reswmk/img/actions/BondSwitch.svg';\nimport svgBondRotate from '@reswmk/img/actions/BondRotate.svg';\nimport svgBondLinear from '@reswmk/img/actions/BondLinear.svg';\nimport svgBondTrigonal from '@reswmk/img/actions/BondTrigonal.svg';\nimport svgBondTetra1 from '@reswmk/img/actions/BondTetra1.svg';\nimport svgBondTetra2 from '@reswmk/img/actions/BondTetra2.svg';\nimport svgBondSqPlan from '@reswmk/img/actions/BondSqPlan.svg';\nimport svgBondOcta1 from '@reswmk/img/actions/BondOcta1.svg';\nimport svgBondOcta2 from '@reswmk/img/actions/BondOcta2.svg';\nimport svgBondMetalLigate from '@reswmk/img/actions/BondMetalLigate.svg';\nimport svgBondArtifactPath from '@reswmk/img/actions/BondArtifactPath.svg';\nimport svgBondArtifactRing from '@reswmk/img/actions/BondArtifactRing.svg';\nimport svgBondArtifactArene from '@reswmk/img/actions/BondArtifactArene.svg';\nimport svgBondArtifactClear from '@reswmk/img/actions/BondArtifactClear.svg';\nimport svgBondPolymer from '@reswmk/img/actions/BondPolymer.svg';\n\nconst COMMANDS_BOND:ButtonBankItem[] =\n[\n\t{id: 'one', svg: svgBondOne, helpText: 'Create or set bonds to single.', mnemonic: '1'},\n\t{id: 'two', svg: svgBondTwo, helpText: 'Create or set bonds to double.', mnemonic: '2'},\n\t{id: 'three', svg: svgBondThree, helpText: 'Create or set bonds to triple.', mnemonic: '3'},\n\t{id: 'four', svg: svgBondFour, helpText: 'Create or set bonds to quadruple.', mnemonic: ''},\n\t{id: 'zero', svg: svgBondZero, helpText: 'Create or set bonds to zero-order.', mnemonic: '0'},\n\t{id: 'inclined', svg: svgBondUp, helpText: 'Create or set bonds to inclined.', mnemonic: '5'},\n\t{id: 'declined', svg: svgBondDown, helpText: 'Create or set bonds to declined.', mnemonic: '6'},\n\t{id: 'squig', svg: svgBondSquig, helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4'},\n\t{id: 'bondQAny', svg: svgBondQAny, helpText: 'Query bond that matches anything.'},\n\t{id: 'addtwo', svg: svgBondAddTwo, helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D'},\n\t{id: 'insert', svg: svgBondInsert, helpText: 'Insert a methylene into the subject bond.', mnemonic: ''},\n\t{id: 'switch', svg: svgBondSwitch, helpText: 'Cycle through likely bond geometries.', mnemonic: '\\''},\n\t{id: 'rotate', svg: svgBondRotate, helpText: 'Rotate bond to invert substituent orientation.', mnemonic: ''},\n\t{id: 'linear', svg: svgBondLinear, helpText: 'Apply linear geometry.', mnemonic: 'Shift+V'},\n\t{id: 'trigonal', svg: svgBondTrigonal, helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W'},\n\t{id: 'tetra1', svg: svgBondTetra1, helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E'},\n\t{id: 'tetra2', svg: svgBondTetra2, helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R'},\n\t{id: 'sqplan', svg: svgBondSqPlan, helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T'},\n\t{id: 'octa1', svg: svgBondOcta1, helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y'},\n\t{id: 'octa2', svg: svgBondOcta2, helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U'},\n\t{id: 'metalligate', svg: svgBondMetalLigate, helpText: 'Arrange ligands around metal centre.', mnemonic: ''},\n\t{id: 'artifactpath', svg: svgBondArtifactPath, helpText: 'Add a path bond artifact.', mnemonic: ''},\n\t{id: 'artifactring', svg: svgBondArtifactRing, helpText: 'Add a ring bond artifact.', mnemonic: ''},\n\t{id: 'artifactarene', svg: svgBondArtifactArene, helpText: 'Add an arene bond artifact.', mnemonic: ''},\n\t{id: 'artifactclear', svg: svgBondArtifactClear, helpText: 'Remove a bond artifact.', mnemonic: ''},\n\t{id: 'polymer', svg: svgBondPolymer, helpText: 'Create a polymer block.', mnemonic: ''},\n];\n\nimport svgSelectionGrow from '@reswmk/img/actions/SelectionGrow.svg';\nimport svgSelectionShrink from '@reswmk/img/actions/SelectionShrink.svg';\nimport svgSelectionChain from '@reswmk/img/actions/SelectionChain.svg';\nimport svgSelectionSmRing from '@reswmk/img/actions/SelectionSmRing.svg';\nimport svgSelectionRingBlk from '@reswmk/img/actions/SelectionRingBlk.svg';\nimport svgSelectionCurElement from '@reswmk/img/actions/SelectionCurElement.svg';\nimport svgMainSelPrev from '@reswmk/img/actions/MainSelPrev.svg';\nimport svgMainSelNext from '@reswmk/img/actions/MainSelNext.svg';\nimport svgSelectionToggle from '@reswmk/img/actions/SelectionToggle.svg';\nimport svgSelectionUncurrent from '@reswmk/img/actions/SelectionUncurrent.svg';\nimport svgMoveJoin from '@reswmk/img/actions/MoveJoin.svg';\nimport svgMainNew from '@reswmk/img/actions/MainNew.svg';\nimport svgAtomInline from '@reswmk/img/actions/AtomInline.svg';\nimport svgAtomFormula from '@reswmk/img/actions/AtomFormula.svg';\nimport svgAtomExpandAbbrev from '@reswmk/img/actions/AtomExpandAbbrev.svg';\nimport svgAtomClearAbbrev from '@reswmk/img/actions/AtomClearAbbrev.svg';\n\nconst COMMANDS_SELECT:ButtonBankItem[] =\n[\n\t{id: 'selgrow', svg: svgSelectionGrow, helpText: 'Add adjacent atoms to selection.', mnemonic: ''},\n\t{id: 'selshrink', svg: svgSelectionShrink, helpText: 'Unselect exterior atoms.', mnemonic: ''},\n\t{id: 'selchain', svg: svgSelectionChain, helpText: 'Extend selection to non-ring atoms.', mnemonic: ''},\n\t{id: 'smallring', svg: svgSelectionSmRing, helpText: 'Extend selection to small rings.', mnemonic: ''},\n\t{id: 'ringblock', svg: svgSelectionRingBlk, helpText: 'Extend selection to ring blocks.', mnemonic: ''},\n\t{id: 'curelement', svg: svgSelectionCurElement, helpText: 'Select all atoms of current element type.', mnemonic: ''},\n\t{id: 'selprev', svg: svgMainSelPrev, helpText: 'Select previous connected component.', mnemonic: '['},\n\t{id: 'selnext', svg: svgMainSelNext, helpText: 'Select next connected component.', mnemonic: ']'},\n\t{id: 'toggle', svg: svgSelectionToggle, helpText: 'Toggle selection of current.', mnemonic: ','},\n\t{id: 'uncurrent', svg: svgSelectionUncurrent, helpText: 'Undefine current object.', mnemonic: '.'},\n\t{id: 'join', svg: svgMoveJoin, helpText: 'Overlapping atoms will be joined as one.', mnemonic: ''},\n\t{id: 'new', svg: svgMainNew, helpText: 'Clear the molecular structure.', mnemonic: ''},\n\t{id: 'inline', svg: svgAtomInline, helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/'},\n\t{id: 'formula', svg: svgAtomFormula, helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\'},\n\t{id: 'expandabbrev', svg: svgAtomExpandAbbrev, helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?'},\n\t{id: 'clearabbrev', svg: svgAtomClearAbbrev, helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|'},\n];\n\nimport svgMoveUp from '@reswmk/img/actions/MoveUp.svg';\nimport svgMoveDown from '@reswmk/img/actions/MoveDown.svg';\nimport svgMoveLeft from '@reswmk/img/actions/MoveLeft.svg';\nimport svgMoveRight from '@reswmk/img/actions/MoveRight.svg';\nimport svgMoveUpLots from '@reswmk/img/actions/MoveUpLots.svg';\nimport svgMoveDownLots from '@reswmk/img/actions/MoveDownLots.svg';\nimport svgMoveLeftLots from '@reswmk/img/actions/MoveLeftLots.svg';\nimport svgMoveRightLots from '@reswmk/img/actions/MoveRightLots.svg';\nimport svgMoveUpFar from '@reswmk/img/actions/MoveUpFar.svg';\nimport svgMoveDownFar from '@reswmk/img/actions/MoveDownFar.svg';\nimport svgMoveLeftFar from '@reswmk/img/actions/MoveLeftFar.svg';\nimport svgMoveRightFar from '@reswmk/img/actions/MoveRightFar.svg';\nimport svgMoveRotP01 from '@reswmk/img/actions/MoveRotP01.svg';\nimport svgMoveRotM01 from '@reswmk/img/actions/MoveRotM01.svg';\nimport svgMoveRotP05 from '@reswmk/img/actions/MoveRotP05.svg';\nimport svgMoveRotM05 from '@reswmk/img/actions/MoveRotM05.svg';\nimport svgMoveRotP15 from '@reswmk/img/actions/MoveRotP15.svg';\nimport svgMoveRotM15 from '@reswmk/img/actions/MoveRotM15.svg';\nimport svgMoveRotP30 from '@reswmk/img/actions/MoveRotP30.svg';\nimport svgMoveRotM30 from '@reswmk/img/actions/MoveRotM30.svg';\nimport svgMoveHFlip from '@reswmk/img/actions/MoveHFlip.svg';\nimport svgMoveVFlip from '@reswmk/img/actions/MoveVFlip.svg';\nimport svgMoveShrink from '@reswmk/img/actions/MoveShrink.svg';\nimport svgMoveGrow from '@reswmk/img/actions/MoveGrow.svg';\n\nconst COMMANDS_MOVE:ButtonBankItem[] =\n[\n\t{id: 'up', svg: svgMoveUp, helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: KeyCode.Up},\n\t{id: 'down', svg: svgMoveDown, helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: KeyCode.Down},\n\t{id: 'left', svg: svgMoveLeft, helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: KeyCode.Left},\n\t{id: 'right', svg: svgMoveRight, helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: KeyCode.Right},\n\t{id: 'uplots', svg: svgMoveUpLots, helpText: 'Move subject atoms up somewhat.', mnemonic: ''},\n\t{id: 'downlots', svg: svgMoveDownLots, helpText: 'Move subject atoms down somewhat.', mnemonic: ''},\n\t{id: 'leftlots', svg: svgMoveLeftLots, helpText: 'Move subject atoms somewhat to the left.', mnemonic: ''},\n\t{id: 'rightlots', svg: svgMoveRightLots, helpText: 'Move subject atoms somewhat to the right.', mnemonic: ''},\n\t{id: 'upfar', svg: svgMoveUpFar, helpText: 'Move subject atoms far up.', mnemonic: ''},\n\t{id: 'downfar', svg: svgMoveDownFar, helpText: 'Move subject atoms far down.', mnemonic: ''},\n\t{id: 'leftfar', svg: svgMoveLeftFar, helpText: 'Move subject atoms far to the left.', mnemonic: ''},\n\t{id: 'rightfar', svg: svgMoveRightFar, helpText: 'Move subject atoms far to the right.', mnemonic: ''},\n\t{id: 'rotp01', svg: svgMoveRotP01, helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm01', svg: svgMoveRotM01, helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp05', svg: svgMoveRotP05, helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm05', svg: svgMoveRotM05, helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp15', svg: svgMoveRotP15, helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm15', svg: svgMoveRotM15, helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp30', svg: svgMoveRotP30, helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{'},\n\t{id: 'rotm30', svg: svgMoveRotM30, helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}'},\n\t{id: 'hflip', svg: svgMoveHFlip, helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<'},\n\t{id: 'vflip', svg: svgMoveVFlip, helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>'},\n\t{id: 'shrink', svg: svgMoveShrink, helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z'},\n\t{id: 'grow', svg: svgMoveGrow, helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X'},\n];\n\n/* ... the old style, where files are referred to explicitly: in case it needs to be rolled back\nconst COMMANDS_MAIN:ButtonBankItem[] =\n[\n\t{id: 'undo', imageFN: 'MainUndo', helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z'},\n\t{id: 'redo', imageFN: 'MainRedo', helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z'},\n\t{id: 'zoomin', imageFN: 'MainZoomIn', helpText: 'Zoom in.', mnemonic: '='},\n\t{id: 'zoomout', imageFN: 'MainZoomOut', helpText: 'Zoom out.', mnemonic: '-'},\n\t{id: 'zoomfit', imageFN: 'MainZoomFit', helpText: 'Show whole diagram onscreen.', mnemonic: ''},\n\t{id: 'selside', imageFN: 'MainSelSide', helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E'},\n\t{id: 'selall', imageFN: 'MainSelAll', helpText: 'Select all atoms.', mnemonic: 'Shift+A'},\n\t{id: 'selnone', imageFN: 'MainSelNone', helpText: 'Clear selection.', mnemonic: 'Shift+Q'},\n\t{id: 'delete', imageFN: 'MainDelete', helpText: 'Delete selected atoms and bonds.', mnemonic: 'D'},\n\t{id: 'cut', imageFN: 'MainCut', helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X'},\n\t{id: 'copy', imageFN: 'MainCopy', helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C'},\n\t{id: 'paste', imageFN: 'MainPaste', helpText: 'Paste clipboard contents.'}, // TODO: web-specific behaviour\n\t{id: 'atom', imageFN: 'MainAtom', helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A'},\n\t{id: 'bond', imageFN: 'MainBond', helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B'},\n\t{id: 'select', imageFN: 'MainSelect', helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S'},\n\t{id: 'move', imageFN: 'MainMove', helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M'},\n];\nconst COMMANDS_ATOM:ButtonBankItem[] =\n[\n\t{id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C'},\n\t{id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N'},\n\t{id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O'},\n\t{id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S'},\n\t{id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P'},\n\t{id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H'},\n\t{id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F'},\n\t{id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L'},\n\t{id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B'},\n\t{id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I'},\n\t{id: 'plus', imageFN: 'AtomPlus', helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+'},\n\t{id: 'minus', imageFN: 'AtomMinus', helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_'},\n\t{id: 'abbrev', imageFN: 'AtomAbbrev', helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: ''},\n\t{id: 'sblock', imageFN: 'AtomSBlock', helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'pblock', imageFN: 'AtomPBlock', helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'dblock', imageFN: 'AtomDBlock', helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'fblock', imageFN: 'AtomFBlock', helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: ''},\n\t{id: 'noble', imageFN: 'AtomNoble', helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: ''},\n];\nconst COMMANDS_BOND:ButtonBankItem[] =\n[\n\t{id: 'one', imageFN: 'BondOne', helpText: 'Create or set bonds to single.', mnemonic: '1'},\n\t{id: 'two', imageFN: 'BondTwo', helpText: 'Create or set bonds to double.', mnemonic: '2'},\n\t{id: 'three', imageFN: 'BondThree', helpText: 'Create or set bonds to triple.', mnemonic: '3'},\n\t{id: 'four', imageFN: 'BondFour', helpText: 'Create or set bonds to quadruple.', mnemonic: ''},\n\t{id: 'zero', imageFN: 'BondZero', helpText: 'Create or set bonds to zero-order.', mnemonic: '0'},\n\t{id: 'inclined', imageFN: 'BondUp', helpText: 'Create or set bonds to inclined.', mnemonic: '5'},\n\t{id: 'declined', imageFN: 'BondDown', helpText: 'Create or set bonds to declined.', mnemonic: '6'},\n\t{id: 'squig', imageFN: 'BondSquig', helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4'},\n\t{id: 'bondQAny', imageFN: 'BondQAny', helpText: 'Query bond that matches anything.'},\n\t{id: 'addtwo', imageFN: 'BondAddTwo', helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D'},\n\t{id: 'insert', imageFN: 'BondInsert', helpText: 'Insert a methylene into the subject bond.', mnemonic: ''},\n\t{id: 'switch', imageFN: 'BondSwitch', helpText: 'Cycle through likely bond geometries.', mnemonic: '\\''},\n\t{id: 'rotate', imageFN: 'BondRotate', helpText: 'Rotate bond to invert substituent orientation.', mnemonic: ''},\n\t{id: 'linear', imageFN: 'BondLinear', helpText: 'Apply linear geometry.', mnemonic: 'Shift+V'},\n\t{id: 'trigonal', imageFN: 'BondTrigonal', helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W'},\n\t{id: 'tetra1', imageFN: 'BondTetra1', helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E'},\n\t{id: 'tetra2', imageFN: 'BondTetra2', helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R'},\n\t{id: 'sqplan', imageFN: 'BondSqPlan', helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T'},\n\t{id: 'octa1', imageFN: 'BondOcta1', helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y'},\n\t{id: 'octa2', imageFN: 'BondOcta2', helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U'},\n\t{id: 'metalligate', imageFN: 'BondMetalLigate', helpText: 'Arrange ligands around metal centre.', mnemonic: ''},\n\t{id: 'artifactpath', imageFN: 'BondArtifactPath', helpText: 'Add a path bond artifact.', mnemonic: ''},\n\t{id: 'artifactring', imageFN: 'BondArtifactRing', helpText: 'Add a ring bond artifact.', mnemonic: ''},\n\t{id: 'artifactarene', imageFN: 'BondArtifactArene', helpText: 'Add an arene bond artifact.', mnemonic: ''},\n\t{id: 'artifactclear', imageFN: 'BondArtifactClear', helpText: 'Remove a bond artifact.', mnemonic: ''},\n\t{id: 'polymer', imageFN: 'BondPolymer', helpText: 'Create a polymer block.', mnemonic: ''},\n];\nconst COMMANDS_SELECT:ButtonBankItem[] =\n[\n\t{id: 'selgrow', imageFN: 'SelectionGrow', helpText: 'Add adjacent atoms to selection.', mnemonic: ''},\n\t{id: 'selshrink', imageFN: 'SelectionShrink', helpText: 'Unselect exterior atoms.', mnemonic: ''},\n\t{id: 'selchain', imageFN: 'SelectionChain', helpText: 'Extend selection to non-ring atoms.', mnemonic: ''},\n\t{id: 'smallring', imageFN: 'SelectionSmRing', helpText: 'Extend selection to small rings.', mnemonic: ''},\n\t{id: 'ringblock', imageFN: 'SelectionRingBlk', helpText: 'Extend selection to ring blocks.', mnemonic: ''},\n\t{id: 'curelement', imageFN: 'SelectionCurElement', helpText: 'Select all atoms of current element type.', mnemonic: ''},\n\t{id: 'selprev', imageFN: 'MainSelPrev', helpText: 'Select previous connected component.', mnemonic: '['},\n\t{id: 'selnext', imageFN: 'MainSelNext', helpText: 'Select next connected component.', mnemonic: ']'},\n\t{id: 'toggle', imageFN: 'SelectionToggle', helpText: 'Toggle selection of current.', mnemonic: ','},\n\t{id: 'uncurrent', imageFN: 'SelectionUncurrent', helpText: 'Undefine current object.', mnemonic: '.'},\n\t{id: 'join', imageFN: 'MoveJoin', helpText: 'Overlapping atoms will be joined as one.', mnemonic: ''},\n\t{id: 'new', imageFN: 'MainNew', helpText: 'Clear the molecular structure.', mnemonic: ''},\n\t{id: 'inline', imageFN: 'AtomInline', helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/'},\n\t{id: 'formula', imageFN: 'AtomFormula', helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\'},\n\t{id: 'expandabbrev', imageFN: 'AtomExpandAbbrev', helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?'},\n\t{id: 'clearabbrev', imageFN: 'AtomClearAbbrev', helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|'},\n];\nconst COMMANDS_MOVE:ButtonBankItem[] =\n[\n\t{id: 'up', imageFN: 'MoveUp', helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: KeyCode.Up},\n\t{id: 'down', imageFN: 'MoveDown', helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: KeyCode.Down},\n\t{id: 'left', imageFN: 'MoveLeft', helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: KeyCode.Left},\n\t{id: 'right', imageFN: 'MoveRight', helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: KeyCode.Right},\n\t{id: 'uplots', imageFN: 'MoveUpLots', helpText: 'Move subject atoms up somewhat.', mnemonic: ''},\n\t{id: 'downlots', imageFN: 'MoveDownLots', helpText: 'Move subject atoms down somewhat.', mnemonic: ''},\n\t{id: 'leftlots', imageFN: 'MoveLeftLots', helpText: 'Move subject atoms somewhat to the left.', mnemonic: ''},\n\t{id: 'rightlots', imageFN: 'MoveRightLots', helpText: 'Move subject atoms somewhat to the right.', mnemonic: ''},\n\t{id: 'upfar', imageFN: 'MoveUpFar', helpText: 'Move subject atoms far up.', mnemonic: ''},\n\t{id: 'downfar', imageFN: 'MoveDownFar', helpText: 'Move subject atoms far down.', mnemonic: ''},\n\t{id: 'leftfar', imageFN: 'MoveLeftFar', helpText: 'Move subject atoms far to the left.', mnemonic: ''},\n\t{id: 'rightfar', imageFN: 'MoveRightFar', helpText: 'Move subject atoms far to the right.', mnemonic: ''},\n\t{id: 'rotp01', imageFN: 'MoveRotP01', helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm01', imageFN: 'MoveRotM01', helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp05', imageFN: 'MoveRotP05', helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm05', imageFN: 'MoveRotM05', helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp15', imageFN: 'MoveRotP15', helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: ''},\n\t{id: 'rotm15', imageFN: 'MoveRotM15', helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: ''},\n\t{id: 'rotp30', imageFN: 'MoveRotP30', helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{'},\n\t{id: 'rotm30', imageFN: 'MoveRotM30', helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}'},\n\t{id: 'hflip', imageFN: 'MoveHFlip', helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<'},\n\t{id: 'vflip', imageFN: 'MoveVFlip', helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>'},\n\t{id: 'shrink', imageFN: 'MoveShrink', helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z'},\n\t{id: 'grow', imageFN: 'MoveGrow', helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X'},\n];*/\n\nexport class CommandBank extends ButtonBank\n{\n\tconstructor(protected owner:any, protected cmdType = CommandType.Main)\n\t{\n\t\tsuper();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tif (this.cmdType == CommandType.Main) for (let btn of COMMANDS_MAIN) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Atom) for (let btn of COMMANDS_ATOM) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Bond) for (let btn of COMMANDS_BOND) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Select) for (let btn of COMMANDS_SELECT) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Move) for (let btn of COMMANDS_MOVE) this.buttons.push(btn);\n\t\telse if (this.cmdType == CommandType.Abbrev) this.populateElements(ELEMENTS_ABBREV);\n\t\telse if (this.cmdType == CommandType.SBlock) this.populateElements(ELEMENTS_S_BLOCK);\n\t\telse if (this.cmdType == CommandType.PBlock) this.populateElements(ELEMENTS_P_BLOCK);\n\t\telse if (this.cmdType == CommandType.DBlock) this.populateElements(ELEMENTS_D_BLOCK);\n\t\telse if (this.cmdType == CommandType.FBlock) this.populateElements(ELEMENTS_F_BLOCK);\n\t\telse if (this.cmdType == CommandType.Noble) this.populateElements(ELEMENTS_NOBLE);\n\t}\n\n\tprivate populateElements(elements:string[]):void\n\t{\n\t\tfor (let el of elements)\n\t\t{\n\t\t\tthis.buttons.push({id: `element:${el}`, text: el, helpText: `Change elements to ${el}.`});\n\t\t}\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string):void\n\t{\n\t\tlet actv = 0, param:any = null;\n\n\t\tif (id.startsWith('element:'))\n\t\t{\n\t\t\tlet el = id.substring(8);\n\t\t\tactv = ActivityType.Element;\n\t\t\tparam = {element: el};\n\t\t}\n\t\telse if (id == 'delete') actv = ActivityType.Delete;\n\t\telse if (id == 'undo')\n\t\t{\n\t\t\tif (this.owner.canUndo()) this.owner.performUndo();\n\t\t\telse this.owner.showMessage('Nothing to undo.');\n\t\t}\n\t\telse if (id == 'redo')\n\t\t{\n\t\t\tif (this.owner.canRedo()) this.owner.performRedo();\n\t\t\telse this.owner.showMessage('Nothing to redo.');\n\t\t}\n\t\telse if (id == 'cut') actv = ActivityType.Cut;\n\t\telse if (id == 'copy') actv = ActivityType.Copy;\n\t\telse if (id == 'paste') this.owner.performPaste();\n\t\telse if (id == 'new') actv = ActivityType.Clear;\n\t\telse if (id == 'zoomfit') this.owner.autoScale();\n\t\telse if (id == 'zoomout') this.owner.zoom(0.8);\n\t\telse if (id == 'zoomin') this.owner.zoom(1.25);\n\t\telse if (id == 'selall') actv = ActivityType.SelectAll;\n\t\telse if (id == 'selnone') actv = ActivityType.SelectNone;\n\t\telse if (id == 'selprev') actv = ActivityType.SelectPrevComp;\n\t\telse if (id == 'selnext') actv = ActivityType.SelectNextComp;\n\t\telse if (id == 'selside') actv = ActivityType.SelectSide;\n\t\telse if (id == 'plus') {actv = ActivityType.Charge; param = {delta: 1};}\n\t\telse if (id == 'minus') {actv = ActivityType.Charge; param = {delta: -1};}\n\t\telse if (id == 'one') {actv = ActivityType.BondOrder; param = {order: 1};}\n\t\telse if (id == 'two') {actv = ActivityType.BondOrder; param = {order: 2};}\n\t\telse if (id == 'three') {actv = ActivityType.BondOrder; param = {order: 3};}\n\t\telse if (id == 'four') {actv = ActivityType.BondOrder; param = {order: 4};}\n\t\telse if (id == 'zero') {actv = ActivityType.BondOrder; param = {order: 0};}\n\t\telse if (id == 'inclined') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_INCLINED};}\n\t\telse if (id == 'declined') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_DECLINED};}\n\t\telse if (id == 'squig') {actv = ActivityType.BondType; param = {type: Molecule.BONDTYPE_UNKNOWN};}\n\t\telse if (id == 'linear') {actv = ActivityType.BondGeom; param = {geom: Geometry.Linear};}\n\t\telse if (id == 'trigonal') {actv = ActivityType.BondGeom; param = {geom: Geometry.Trigonal};}\n\t\telse if (id == 'tetra1') {actv = ActivityType.BondGeom; param = {geom: Geometry.Tetra1};}\n\t\telse if (id == 'tetra2') {actv = ActivityType.BondGeom; param = {geom: Geometry.Tetra2};}\n\t\telse if (id == 'sqplan') {actv = ActivityType.BondGeom; param = {geom: Geometry.SqPlan};}\n\t\telse if (id == 'octa1') {actv = ActivityType.BondGeom; param = {geom: Geometry.Octa1};}\n\t\telse if (id == 'octa2') {actv = ActivityType.BondGeom; param = {geom: Geometry.Octa2};}\n\t\telse if (id == 'switch') actv = ActivityType.BondSwitch;\n\t\telse if (id == 'rotate') actv = ActivityType.BondRotate;\n\t\telse if (id == 'connect') actv = ActivityType.Connect;\n\t\telse if (id == 'disconnect') actv = ActivityType.Disconnect;\n\t\telse if (id == 'metalligate') actv = ActivityType.MetalLigate;\n\t\telse if (id == 'artifactpath') actv = ActivityType.BondArtifactPath;\n\t\telse if (id == 'artifactring') actv = ActivityType.BondArtifactRing;\n\t\telse if (id == 'artifactarene') actv = ActivityType.BondArtifactArene;\n\t\telse if (id == 'artifactclear') actv = ActivityType.BondArtifactClear;\n\t\telse if (id == 'polymer') actv = ActivityType.PolymerBlock;\n\t\telse if (id == 'addtwo') actv = ActivityType.BondAddTwo;\n\t\telse if (id == 'insert') actv = ActivityType.BondInsert;\n\t\telse if (id == 'curelement') actv = ActivityType.SelectCurElement;\n\t\telse if (id == 'selgrow') actv = ActivityType.SelectGrow;\n\t\telse if (id == 'selshrink') actv = ActivityType.SelectShrink;\n\t\telse if (id == 'selprev') actv = ActivityType.SelectPrevComp;\n\t\telse if (id == 'selnext') actv = ActivityType.SelectNextComp;\n\t\telse if (id == 'selchain') actv = ActivityType.SelectChain;\n\t\telse if (id == 'smallring') actv = ActivityType.SelectSmRing;\n\t\telse if (id == 'ringblock') actv = ActivityType.SelectRingBlk;\n\t\telse if (id == 'toggle') actv = ActivityType.SelectToggle;\n\t\telse if (id == 'uncurrent') actv = ActivityType.SelectUnCurrent;\n\t\telse if (id == 'join') actv = ActivityType.Join;\n\t\telse if (id == 'inline') actv = ActivityType.AbbrevGroup;\n\t\telse if (id == 'formula') actv = ActivityType.AbbrevFormula;\n\t\telse if (id == 'clearabbrev') actv = ActivityType.AbbrevClear;\n\t\telse if (id == 'expandabbrev') actv = ActivityType.AbbrevExpand;\n\t\telse if (id == 'up') {actv = ActivityType.Nudge; param = {dir: 'up'};}\n\t\telse if (id == 'down') {actv = ActivityType.Nudge; param = {dir: 'down'};}\n\t\telse if (id == 'left') {actv = ActivityType.Nudge; param = {dir: 'left'};}\n\t\telse if (id == 'right') {actv = ActivityType.Nudge; param = {dir: 'right'};}\n\t\telse if (id == 'uplots') {actv = ActivityType.NudgeLots; param = {dir: 'up'};}\n\t\telse if (id == 'downlots') {actv = ActivityType.NudgeLots; param = {dir: 'down'};}\n\t\telse if (id == 'leftlots') {actv = ActivityType.NudgeLots; param = {dir: 'left'};}\n\t\telse if (id == 'rightlots') {actv = ActivityType.NudgeLots; param = {dir: 'right'};}\n\t\telse if (id == 'upfar') {actv = ActivityType.NudgeFar; param = {dir: 'up'};}\n\t\telse if (id == 'downfar') {actv = ActivityType.NudgeFar; param = {dir: 'down'};}\n\t\telse if (id == 'leftfar') {actv = ActivityType.NudgeFar; param = {dir: 'left'};}\n\t\telse if (id == 'rightfar') {actv = ActivityType.NudgeFar; param = {dir: 'right'};}\n\t\telse if (id == 'rotp01') {actv = ActivityType.Rotate; param = {theta: 1};}\n\t\telse if (id == 'rotm01') {actv = ActivityType.Rotate; param = {theta: -1};}\n\t\telse if (id == 'rotp05') {actv = ActivityType.Rotate; param = {theta: 5};}\n\t\telse if (id == 'rotm05') {actv = ActivityType.Rotate; param = {theta: -5};}\n\t\telse if (id == 'rotp15') {actv = ActivityType.Rotate; param = {theta: 15};}\n\t\telse if (id == 'rotm15') {actv = ActivityType.Rotate; param = {theta: -15};}\n\t\telse if (id == 'rotp30') {actv = ActivityType.Rotate; param = {theta: 30};}\n\t\telse if (id == 'rotm30') {actv = ActivityType.Rotate; param = {theta: -30};}\n\t\telse if (id == 'hflip') {actv = ActivityType.Flip; param = {axis: 'hor'};}\n\t\telse if (id == 'vflip') {actv = ActivityType.Flip; param = {axis: 'ver'};}\n\t\telse if (id == 'shrink') {actv = ActivityType.Scale; param = {mag: 1 / 1.1};}\n\t\telse if (id == 'grow') {actv = ActivityType.Scale; param = {mag: 1.1};}\n\t\telse if (id == 'bondQAny') actv = ActivityType.QueryBondAny;\n\t\telse if (id == 'atom') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n\t\telse if (id == 'bond') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n\t\telse if (id == 'select') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n\t\telse if (id == 'move') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n\t\telse if (id == 'abbrev') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n\t\telse if (id == 'sblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n\t\telse if (id == 'pblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n\t\telse if (id == 'dblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n\t\telse if (id == 'fblock') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n\t\telse if (id == 'noble') this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n\t\telse alert('Unhandled command: \"' + id + '\"');\n\n\t\tif (actv > 0)\n\t\t{\n\t\t\tnew MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n\t\t}\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('Claim/Command['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t\n\t\t// special deal: in case it's a mac, convert Cmd-Z/Cmd-Shift-Z into the Winux convention of using Ctrl\n\t\t/*if (event.metaKey && event.key == 'z')\n\t\t{\n\t\t\tevent.metaKey = false;\n\t\t\tevent.ctrlKey = true;\n\t\t}*/\n\n\t\tfor (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE]) for (let item of listItems)\n\t\t{\n\t\t\tif (ButtonBank.matchKey(event, item.mnemonic, item.key))\n\t\t\t{\n\t\t\t\tthis.hitButton(item.id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {ClipboardProxy} from '../ui/ClipboardProxy';\nimport {MenuProxyContext} from '../ui/MenuProxy';\nimport {Vec} from '../util/Vec';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {Sketcher} from './Sketcher';\n\n/*\n\tPopulation of a context menu for the sketcher, which depends on current state.\n*/\n\nexport class ContextSketch\n{\n\tconstructor(private state:SketchState, private sketcher:Sketcher, private proxyClip:ClipboardProxy)\n\t{\n\t}\n\n\tpublic populate():MenuProxyContext[]\n\t{\n\t\tconst {state, sketcher} = this;\n\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tif (sketcher.canUndo() || sketcher.canRedo())\n\t\t{\n\t\t\tif (sketcher.canUndo()) menu.push({label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo()});\n\t\t\tif (sketcher.canRedo()) menu.push({label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo()});\n\t\t\tmenu.push(null);\n\t\t}\n\n\t\tif (state.currentAtom > 0 || state.currentBond > 0) menu.push({label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent()});\n\n\t\tthis.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n\n\t\tthis.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n\t\tthis.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n\t\tif (this.proxyClip.canAlwaysGet()) menu.push({label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste()});\n\t\t//this.maybeAppend(state, ActivityType.Paste, title:\"Paste\");\n\n\t\tthis.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, {delta: 1});\n\t\tthis.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, {delta: -1});\n\n\t\tthis.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, {order: 0});\n\t\tthis.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, {order: 1});\n\t\tthis.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, {order: 2});\n\t\tthis.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, {order: 3});\n\t\tthis.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, {order: 4});\n\n\t\tthis.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, {type: Molecule.BONDTYPE_UNKNOWN});\n\t\tthis.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, {type: Molecule.BONDTYPE_INCLINED});\n\t\tthis.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, {type: Molecule.BONDTYPE_DECLINED});\n\n\t\tthis.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n\t\tthis.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n\t\tthis.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n\t\tthis.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n\t\t// !! this.maybeAppend(menu, ActivityType.BondFix, 'Fix Geometry');\n\n\t\tthis.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n\t\tthis.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n\t\tthis.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n\t\tthis.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n\t\t//if state.currentAtom > 0 || state.currentBond > 0 {append(cmdID:Command.Query, title:\"Query Properties\")};\n\n\t\tlet rotateSub = this.rotateSubMenu();\n\t\tif (Vec.notBlank(rotateSub)) menu.push({label: 'Rotate', subMenu: rotateSub});\n\n\t\tlet querySub = this.querySubMenu();\n\t\tif (Vec.notBlank(querySub)) menu.push({label: 'Query', subMenu: querySub});\n\n\t\tlet poly = new PolymerBlock(state.mol);\n\t\tfor (let units of poly.getUnits())\n\t\t{\n\t\t\tlet a1 = state.currentAtom, a2 = 0;\n\t\t\tif (state.currentBond > 0) [a1, a2] = state.mol.bondFromTo(state.currentBond);\n\t\t\tif (units.atoms.includes(a1) || units.atoms.includes(a2))\n\t\t\t{\n\t\t\t\tlet label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n\t\t\t\tmenu.push({label: label, click: () => sketcher.performPolymerBlock(units.atoms)});\n\t\t\t}\n\t\t}\n\n\t\tif (menu.length > 0) menu.push(null);\n\n\t\tmenu.push({label: 'Scale to Fit', click: () => sketcher.autoScale()});\n\t\tmenu.push({label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25)});\n\t\tmenu.push({label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8)});\n\n\t\treturn menu;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate maybeAppend(menu:MenuProxyContext[], title:string, accelerator:string, activ:ActivityType, param:Record<string, any> = null):void\n\t{\n\t\tlet molact = new MoleculeActivity(this.state, activ, param);\n\t\tmolact.execute();\n\t\tif (!molact.output.mol && !molact.toClipboard) return;\n\n\t\tmenu.push({label: title, 'accelerator': accelerator, click: () =>\n\t\t{\n\t\t\tthis.sketcher.setState(molact.output, true);\n\t\t\tif (molact.toClipboard) this.proxyClip.setString(molact.toClipboard);\n\t\t}});\n\t}\n\n\tprivate rotateSubMenu():MenuProxyContext[]\n\t{\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tthis.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n\t\tthis.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, {theta: 1});\n\t\tthis.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, {theta: -1});\n\t\tthis.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, {theta: 5});\n\t\tthis.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, {theta: -5});\n\t\tthis.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, {theta: 15});\n\t\tthis.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, {theta: -15});\n\t\tthis.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, {theta: 30});\n\t\tthis.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, {theta: -30});\n\t\tthis.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, {axis: 'hor'});\n\t\tthis.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, {axis: 'ver'});\n\t\tthis.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n\n\t\treturn menu;\n\t}\n\n\tprivate querySubMenu():MenuProxyContext[]\n\t{\n\t\tlet menu:MenuProxyContext[] = [];\n\n\t\tthis.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n\t\tthis.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n\n\t\t// TODO: add common use cases; implement in MoleculeActivity\n\n\t\treturn menu;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n///<reference path='../ui/Widget.ts'/>\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {MetaMolecule} from '../mol/MetaMolecule';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {QueryTypeBond, QueryUtil} from '../mol/QueryUtil';\nimport {GuidelineSprout, SketchUtil} from '../mol/SketchUtil';\nimport {Stereochemistry} from '../mol/Stereochemistry';\nimport {ArrangeMeasurement} from '../gfx/ArrangeMeasurement';\nimport {APoint, ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {FontData} from '../gfx/FontData';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {GeomUtil} from '../util/Geom';\nimport {Theme} from '../util/Theme';\nimport {colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {SketchState, TemplatePermutation} from './MoleculeActivity';\nimport {FusionBank} from './TemplateBank';\n\n/*\n\tDrawCanvas: base class for the sketcher, which handles all of the rendering functionality for the live object.\n*/\n\nexport enum DraggingTool\n{\n\tNone = 0,\n\tPress,\n\tLasso,\n\tPan,\n\tZoom,\n\tRotate,\n\tMove,\n\tErasor,\n\tAtom,\n\tBond,\n\tCharge,\n\tRing\n}\n\nexport enum DrawCanvasDecoration\n{\n\tNone = 0,\n\tStereochemistry,\n\tMappingNumber,\n\tAtomIndex,\n}\n\ninterface DrawCanvasViewOpt\n{\n\tdecoration:DrawCanvasDecoration;\n\tshowOxState:boolean;\n\tshowQuery:boolean;\n\tshowArtifacts:boolean;\n}\n\nexport class DrawCanvas extends Widget implements ArrangeMeasurement\n{\n\tprotected mol:Molecule = null;\n\tprotected policy:RenderPolicy = null;\n\tprotected abbrevPolicy:RenderPolicy;\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = 1;\n\n\tprotected viewOpt:DrawCanvasViewOpt =\n\t{\n\t\tdecoration: DrawCanvasDecoration.Stereochemistry,\n\t\tshowOxState: true,\n\t\tshowQuery: true,\n\t\tshowArtifacts: true,\n\t};\n\n\tprotected width = 0;\n\tprotected height = 0;\n\tprotected border = 0x808080;\n\tprotected borderRadius = 4;\n\tprotected background = 0xF8F8F8;\n\n\tprotected container:DOM;\n\tprotected divInfo:DOM;\n\tprotected canvasUnder:DOM = null;\n\tprotected canvasMolecule:DOM = null;\n\tprotected canvasOver:DOM = null;\n\tprotected divMessage:DOM = null;\n\n\tprotected layout:ArrangeMolecule = null;\n\tprotected metavec:MetaVector = null; // instantiated version of above\n\tprotected stereo:Stereochemistry = null;\n\tprotected guidelines:GuidelineSprout[] = null;\n\n\tprotected filthy = false;\n\tprotected dragType = DraggingTool.None;\n\tprotected currentAtom = 0;\n\tprotected currentBond = 0;\n\tprotected hoverAtom = 0;\n\tprotected hoverBond = 0;\n\tprotected selectedMask:boolean[] = null;\n\tprotected opAtom = 0;\n\tprotected opBond = 0;\n\tprotected opBudged = false; // flips to true when the user starts dragging\n\tprotected opShift = false;\n\tprotected opCtrl = false;\n\tprotected opAlt = false;\n\tprotected lassoX:number[] = null;\n\tprotected lassoY:number[] = null;\n\tprotected lassoMask:boolean[] = null;\n\tprotected clickX = 0; // position of initial mouse click\n\tprotected clickY = 0;\n\tprotected mouseX = 0; // last known position of mouse\n\tprotected mouseY = 0;\n\tprotected dragGuides:GuidelineSprout[] = null; // guidelines pertinent to the current dragging operation\n\tprotected templatePerms:TemplatePermutation[] = null; // if fusing templates, these are the options in play\n\tprotected currentPerm = 0; // currently viewed permutation (if applicable)\n\tprotected fusionBank:FusionBank = null;\n\tprotected cursorWatermark = 0;\n\tprotected cursorDX = 0;\n\tprotected cursorDY = 0;\n\tprotected toolAtomSymbol = '';\n\tprotected toolBondOrder = 0;\n\tprotected toolBondType = 0;\n\tprotected toolChargeDelta = 0;\n\tprotected toolRingArom = false;\n\tprotected toolRingFreeform = false;\n\tprotected toolRotateIncr = 0;\n\n\tprotected redrawCacheKey = '';\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n\t\tthis.abbrevPolicy.data.foreground = 0xD0D0D0;\n\t\tthis.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tif (!this.width || !this.height) throw 'Sketcher.render called without width and height';\n\n\t\tsuper.render(parent);\n\n\t\tthis.container = dom('<div/>').appendTo(this.contentDOM);\n\t\tthis.container.css({'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px'});\n\t\tthis.container.css({'background-color': colourCanvas(this.background)});\n\t\tif (this.border != MetaVector.NOCOLOUR)\n\t\t{\n\t\t\tthis.container.css({'border': '1px solid ' + colourCanvas(this.border)});\n\t\t\tthis.container.css({'border-radius': this.borderRadius + 'px'});\n\t\t}\n\t\tthis.container.css({'outline': 'none'});\n\n\t\tthis.container.attr({'tabindex': '0'});\n\n\t\tlet canvasStyle = {'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none'};\n\n\t\tthis.divInfo = dom('<div/>').appendTo(this.container).css({'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none'});\n\t\tthis.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n\n\t\tthis.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n\t\tthis.divMessage.css({'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%'});\n\t}\n\n\t// gets the current state, as an associative array\n\tpublic getState():SketchState\n\t{\n\t\tlet state:SketchState =\n\t\t{\n\t\t\tmol: this.mol.clone(),\n\t\t\tcurrentAtom: this.currentAtom,\n\t\t\tcurrentBond: this.currentBond,\n\t\t\tselectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n\t\t};\n\t\treturn state;\n\t}\n\n\t// returns true if atom is selected (1-based)\n\tpublic getSelected(atom:number):boolean\n\t{\n\t\tif (this.selectedMask == null || atom > this.selectedMask.length) return false;\n\t\treturn this.selectedMask[atom - 1];\n\t}\n\n\t// returns true if atom is grabbed by the lasso, if any (1-based)\n\tpublic getLassoed(atom:number):boolean\n\t{\n\t\tif (this.lassoMask == null || atom > this.lassoMask.length) return false;\n\t\treturn this.lassoMask[atom - 1];\n\t}\n\n\t// functions for converting between coordinates within the widget (pixels) & molecular position (Angstroms)\n\tpublic scale() {return this.pointScale;}\n\tpublic angToX(ax:number):number\n\t{\n\t\treturn ax * this.pointScale + this.offsetX;\n\t}\n\tpublic angToY(ay:number):number\n\t{\n\t\treturn ay * -this.pointScale + this.offsetY;\n\t}\n\tpublic xToAng(px:number):number\n\t{\n\t\treturn (px - this.offsetX) / this.pointScale;\n\t}\n\tpublic yToAng(py:number):number\n\t{\n\t\treturn (py - this.offsetY) / -this.pointScale;\n\t}\n\tpublic scaleToAng(scale:number):number {return scale / this.pointScale;}\n\tpublic angToScale(ang:number):number {return ang * this.pointScale;}\n\tpublic yIsUp():boolean {return false;}\n\tpublic measureText(str:string, fontSize:number):number[] {return FontData.main.measureText(str, fontSize);}\n\n\t// ------------ protected methods ------------\n\n\t// redraw the structure: this will update the main canvas, using the current metavector representation of the structure;\n\t// the need-to-redraw flag is set, which means that this can be called multiple times without forcing the underlying canvas\n\t// to be redrawn too many times\n\tprotected delayedRedraw():void\n\t{\n\t\tif (this.canvasMolecule == null) return;\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// regenerates the layout, which is slightly performance sensitive\n\tprotected layoutMolecule():void\n\t{\n\t\tlet mol = this.mol;\n\t\tif (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom))\n\t\t{\n\t\t\tmol = mol.clone();\n\t\t\tmol.setAtomElement(this.hoverAtom, '');\n\t\t\tmol.setAtomCharge(this.hoverAtom, 0);\n\t\t\tmol.setAtomUnpaired(this.hoverAtom, 0);\n\t\t\tMolUtil.clearAbbrev(mol, this.hoverAtom);\n\t\t}\n\n\t\tlet effects = this.sketchEffects(mol);\n\t\tthis.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n\t\tthis.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n\t\tthis.layout.arrange();\n\t}\n\n\t// rebuilds the metavector for the molecule, possibly with some retromods\n\tprotected redrawMetaVector():void\n\t{\n\t\tthis.metavec = new MetaVector();\n\t\tnew DrawMolecule(this.layout, this.metavec).draw();\n\n\t\tif (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom))\n\t\t{\n\t\t\tlet abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n\t\t\tthis.orientAbbreviation(this.hoverAtom, abbrevMol);\n\t\t\tthis.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n\t\t\tlet layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n\t\t\tlayout.arrange();\n\t\t\tnew DrawMolecule(layout, this.metavec).draw();\n\t\t}\n\t}\n\n\t// rebuilds the canvas content\n\tprotected redraw():void\n\t{\n\t\tthis.filthy = false;\n\t\tthis.redrawInfo();\n\t\tthis.redrawUnder();\n\t\tthis.redrawMolecule();\n\t\tthis.redrawOver();\n\t}\n\n\tprotected redrawInfo():void\n\t{\n\t\tlet cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n\t\tif (cacheKey == this.redrawCacheKey) return;\n\t\tthis.redrawCacheKey = cacheKey;\n\n\t\tthis.divInfo.empty();\n\t\tthis.divInfo.css({'visibility': 'hidden', 'left': '0', 'top': '0'});\n\t\tif (this.mol.numAtoms == 0) return;\n\n\t\tlet divText = dom('<div/>').appendTo(this.divInfo);\n\t\tdivText.css({'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0'});\n\t\tlet html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n\t\t\n\t\tlet chg = 0;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) chg += this.mol.atomCharge(n);\n\t\tif (chg == -1) html += '<sup>-</sup>';\n\t\telse if (chg < -1) html += `<sup>${chg}</sup>`;\n\t\telse if (chg == 1) html += '<sup>+</sup>';\n\t\telse if (chg > 1) html += `<sup>+${chg}</sup>`;\n\n\t\thtml += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n\n\t\tdivText.setHTML(html);\n\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tlet w = divText.width(), h = divText.height();\n\t\t\tsetBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n\t\t\tthis.divInfo.css({'visibility': 'visible'});\n\t\t}, 1);\n\t}\n\n\tprotected redrawUnder():void\n\t{\n\t\tlet HOVER_COL = 0xE0E0E0;\n\t\tlet CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n\t\tlet SELECT_COL = 0xC0C0C0;\n\t\tlet LASSO_COL = 0xD0D0D0;\n\n\t\tlet density = pixelDensity();\n\t\tthis.canvasUnder.elCanvas.width = this.width * density;\n\t\tthis.canvasUnder.elCanvas.height = this.height * density;\n\t\tthis.canvasUnder.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasUnder.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\t// draw hover effects\n\t\tif (this.hoverAtom > 0)\n\t\t{\n\t\t\tlet units = new PolymerBlock(this.mol).getUnits();\n\t\t\tfor (let unit of units) if (unit.atoms.includes(this.hoverAtom)) this.drawPolymerUnit(ctx, unit, units);\n\n\t\t\tlet sz = 0;\n\t\t\tif (this.hoverAtom == this.currentAtom) sz += 0.1;\n\t\t\tif (this.getSelected(this.hoverAtom)) sz += 0.1;\n\t\t\tif (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom)) sz += 0.1;\n\t\t\tthis.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n\t\t}\n\t\tif (this.hoverBond > 0)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n\t\t\tlet units = new PolymerBlock(this.mol).getUnits();\n\t\t\tfor (let unit of units) if (unit.atoms.includes(bfr) && unit.atoms.includes(bto)) this.drawPolymerUnit(ctx, unit, units);\n\n\t\t\tlet sz = 0;\n\t\t\tif (this.hoverBond == this.currentBond) sz += 0.1;\n\t\t\tif (this.getSelected(bfr) && this.getSelected(bto)) sz += 0.1;\n\t\t\tthis.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n\t\t}\n\n\t\t// draw selection and lasso preselection\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet sz = n == this.currentBond ? 0.1 : 0;\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n\t\t\tif (sfr && sto) this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n\t\t\telse if ((sfr || lfr) && (sto || lto)) this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet sz = this.currentAtom == n ? 0.1 : 0;\n\t\t\tif (this.getSelected(n)) this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n\t\t\telse if (this.getLassoed(n)) this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n\t\t}\n\n\t\t// draw current atom/bond\n\t\tif (this.currentAtom > 0)\n\t\t{\n\t\t\tthis.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n\t\t}\n\t\tif (this.currentBond > 0)\n\t\t{\n\t\t\tthis.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n\t\t}\n\n\t\t// if moving or dragging a new atom/bond, draw the guides\n\t\tif (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tif (this.dragGuides != null && this.dragGuides.length > 0)\n\t\t\t{\n\t\t\t\tfor (let g of this.dragGuides) for (let n = 0; n < g.x.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet lw = this.policy.data.lineSize * this.pointScale;\n\t\t\t\t\tctx.strokeStyle = '#C0C0C0';\n\t\t\t\t\tctx.lineWidth = lw;\n\t\t\t\t\tdrawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\t\tctx.fillStyle = '#C0C0C0';\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if creating a new ring, draw it\n\t\tif (this.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tlet [ringX, ringY] = this.determineFauxRing();\n\t\t\tlet rsz = ringX == null ? 0 : ringX.length;\n\t\t\tif (rsz > 0)\n\t\t\t{\n\t\t\t\tlet scale = this.pointScale;\n\t\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\t\tctx.strokeStyle = '#C0C0C0';\n\t\t\t\tctx.lineWidth = lw;\n\n\t\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t\t{\n\t\t\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\t\t\tlet x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n\t\t\t\t\tlet x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n\t\t\t\t\tdrawLine(ctx, x1, y1, x2, y2);\n\t\t\t\t}\n\n\t\t\t\tif (this.toolRingArom)\n\t\t\t\t{\n\t\t\t\t\tlet cx = 0, cy = 0;\n\t\t\t\t\tfor (let n = 0; n < rsz; n++) {cx += ringX[n]; cy += ringY[n];}\n\t\t\t\t\tcx /= rsz; cy /= rsz;\n\t\t\t\t\tlet rad = 0;\n\t\t\t\t\tfor (let n = 0; n < rsz; n++) rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n\t\t\t\t\trad = this.angToScale(rad * 0.5 / rsz);\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprotected redrawMolecule():void\n\t{\n\t\tlet density = pixelDensity();\n\t\tthis.canvasMolecule.elCanvas.width = this.width * density;\n\t\tthis.canvasMolecule.elCanvas.height = this.height * density;\n\t\tthis.canvasMolecule.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasMolecule.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\tif (this.metavec != null) this.metavec.renderContext(ctx);\n\n\t\t// debugging only\n\t\t/*for (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet x1 = this.angToX(this.mol.atomX(bfr)), y1 = this.angToY(this.mol.atomY(bfr));\n\t\t\tlet x2 = this.angToX(this.mol.atomX(bto)), y2 = this.angToY(this.mol.atomY(bto));\n\t\t\tctx.strokeStyle = 'red';\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.stroke();\n\t\t}*/\n\n\t\tif (this.templatePerms != null)\n\t\t{\n\t\t\tlet perm = this.templatePerms[this.currentPerm];\n\t\t\tif (perm.metavec != null) perm.metavec.renderContext(ctx);\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprotected redrawOver():void\n\t{\n\t\tlet density = pixelDensity();\n\t\tthis.canvasOver.elCanvas.width = this.width * density;\n\t\tthis.canvasOver.elCanvas.height = this.height * density;\n\t\tthis.canvasOver.css({'width': `${this.width}px`, 'height': `${this.height}px`});\n\n\t\tlet ctx = this.canvasOver.elCanvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\t// draw the lasso\n\t\tif ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1)\n\t\t{\n\t\t\tlet erasing = this.dragType == DraggingTool.Erasor;\n\n\t\t\tlet path = new Path2D();\n\t\t\tpath.moveTo(this.lassoX[0], this.lassoY[0]);\n\t\t\tfor (let n = 1; n < this.lassoX.length; n++) path.lineTo(this.lassoX[n], this.lassoY[n]);\n\t\t\tpath.closePath();\n\n\t\t\tctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n\t\t\tctx.fill(path);\n\n\t\t\tctx.strokeStyle = erasing ? '#804040' : '#808080';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.stroke(path);\n\t\t}\n\n\t\t// draw the rotation theta\n\t\tif (this.dragType == DraggingTool.Rotate)\n\t\t{\n\t\t\tlet [x0, y0, theta, magnitude] = this.determineDragTheta();\n\t\t\tlet scale = this.pointScale;\n\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\tctx.strokeStyle = '#E0E0E0';\n\t\t\tctx.lineWidth = 0.5 * lw;\n\t\t\tdrawLine(ctx, x0, y0, x0 + magnitude, y0);\n\t\t\tctx.strokeStyle = '#808080';\n\t\t\tctx.lineWidth = lw;\n\t\t\tdrawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\tctx.fillStyle = '#808080';\n\t\t\tctx.fill();\n\t\t\t// !! draw 0 degrees and a nice arc...\n\n\t\t\tfor (let atom of this.subjectAtoms(true, false))\n\t\t\t{\n\t\t\t\tlet ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n\t\t\t\t//let ax = this.arrmol.points[atom - 1].cx, ay = this.arrmol.points[atom - 1].cy;\n\t\t\t\tlet ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n\t\t\t\tlet nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t\t// draw the displacement of subject atoms\n\t\tif (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tlet [dx, dy] = this.determineMoveDelta();\n\t\t\tlet scale = this.pointScale;\n\t\t\tlet lw = this.policy.data.lineSize * scale;\n\t\t\tfor (let atom of this.subjectAtoms(false, true))\n\t\t\t{\n\t\t\t\tlet ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t\t// draw the dragging of a bond-and-atom to a new position\n\t\tif ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n\t\t\tlet order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n\t\t\tlet type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n\t\t\tthis.drawOriginatingBond(ctx, element, order, type);\n\t\t}\n\n\t\tif (this.viewOpt.showQuery) this.drawQueryFeatures(ctx);\n\n\t\tctx.restore();\n\t}\n\n\t// returns an array of atom indices that make up the selection/current, or empty if nothing; if the \"allIfNone\" flag\n\t// is set, all of the atoms will be returned if otherwise would have been none; if \"useOpAtom\" is true, an empty\n\t// selection will be beefed up by the current mouseunder atom\n\tprotected subjectAtoms(allIfNone = false, useOpAtom = false):number[]\n\t{\n\t\tlet atoms:number[] = [];\n\t\tif (this.selectedMask != null)\n\t\t{\n\t\t\tfor (let n = 0; n < this.selectedMask.length; n++) if (this.selectedMask[n]) atoms.push(n + 1);\n\t\t\tif (atoms.length > 0) return atoms;\n\t\t}\n\t\tif (this.currentAtom > 0) atoms.push(this.currentAtom);\n\t\telse if (this.currentBond > 0)\n\t\t{\n\t\t\tatoms.push(this.mol.bondFrom(this.currentBond));\n\t\t\tatoms.push(this.mol.bondTo(this.currentBond));\n\t\t}\n\t\tif (useOpAtom && atoms.length == 0 && this.opAtom > 0) atoms.push(this.opAtom);\n\t\tif (allIfNone && atoms.length == 0)\n\t\t{\n\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) atoms.push(n);\n\t\t}\n\t\treturn atoms;\n\t}\n\n\t// response to some mouse event: lasso may need to be extended, or cancelled\n\tprotected updateLasso(x:number, y:number):void\n\t{\n\t\tif (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor) return;\n\n\t\tif (x < 0 || y < 0 || x > this.width || y > this.height)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.None;\n\t\t\tthis.lassoX = null;\n\t\t\tthis.lassoY = null;\n\t\t\tthis.lassoMask = null;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tlet len = Vec.len(this.lassoX);\n\t\tif (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y) return; // identical\n\n\t\tthis.lassoX.push(x);\n\t\tthis.lassoY.push(y);\n\t\tthis.calculateLassoMask();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// sets up the lasso mask to include any atom that is within the lasso polygon\n\tprotected calculateLassoMask():void\n\t{\n\t\tthis.lassoMask = new Array(this.mol.numAtoms);\n\t\tfor (let n = 0; n < this.mol.numAtoms; n++) this.lassoMask[n] = false;\n\n\t\tfor (let n = 0; n < this.layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = this.layout.getPoint(n);\n\t\t\tif (p.anum == 0) continue;\n\t\t\tthis.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n\t\t}\n\t}\n\n\t// ------------ private methods -----------\n\n\t// draws an ellipse around an atom/bond, for highlighting purposes\n\tprivate drawAtomShade(ctx:CanvasRenderingContext2D, atom:number, fillCol:number, borderCol:number, anghalo:number):void\n\t{\n\t\tif (this.layout == null) return;\n\n\t\tlet p:APoint = null;\n\t\tfor (let n = 0; n < this.layout.numPoints(); n++) if (this.layout.getPoint(n).anum == atom)\n\t\t{\n\t\t\tp = this.layout.getPoint(n);\n\t\t\tbreak;\n\t\t}\n\t\tif (p == null) return;\n\n\t\tlet minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n\t\tlet cx = p.oval.cx, cy = p.oval.cy;\n\t\tlet rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n\n\t\tif (fillCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fill();\n\t\t}\n\t\tif (borderCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n\t\t\tctx.strokeStyle = colourCanvas(borderCol);\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\tprivate drawBondShade(ctx:CanvasRenderingContext2D, bond:number, fillCol:number, borderCol:number, anghalo:number):void\n\t{\n\t\tif (this.layout == null) return;\n\n\t\tlet x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n\t\tfor (let n = 0; n < this.layout.numLines(); n++)\n\t\t{\n\t\t\tlet l = this.layout.getLine(n);\n\t\t\tif (l.bnum != bond) continue;\n\t\t\tx1 += l.line.x1; y1 += l.line.y1; x2 += l.line.x2; y2 += l.line.y2;\n\t\t\tnb++;\n\t\t\tsz += l.size + (0.2 + anghalo) * this.pointScale;\n\t\t}\n\t\tif (nb == 0) return;\n\n\t\tlet invNB = 1 / nb;\n\t\tsz *= invNB;\n\t\tx1 *= invNB;\n\t\ty1 *= invNB;\n\t\tx2 *= invNB;\n\t\ty2 *= invNB;\n\n\t\tlet dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n\t\tdx *= invDist;\n\t\tdy *= invDist;\n\t\tlet ox = dy, oy = -dx;\n\n\t\tlet path = new Path2D(), mx:number, my:number, CIRC = 0.8;\n\t\tpath.moveTo(x1 + ox * sz, y1 + oy * sz);\n\n\t\tmx = x1 + (ox * sz - dx * sz) * CIRC;\n\t\tmy = y1 + (oy * sz - dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n\n\t\tmx = x1 + (-ox * sz - dx * sz) * CIRC;\n\t\tmy = y1 + (-oy * sz - dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n\t\tpath.lineTo(x2 - ox * sz, y2 - oy * sz);\n\n\t\tmx = x2 + (-ox * sz + dx * sz) * CIRC;\n\t\tmy = y2 + (-oy * sz + dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n\n\t\tmx = x2 + (ox * sz + dx * sz) * CIRC;\n\t\tmy = y2 + (oy * sz + dy * sz) * CIRC;\n\t\tpath.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n\n\t\tpath.closePath();\n\n\t\tif (fillCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = colourCanvas(fillCol);\n\t\t\tctx.fill(path);\n\t\t}\n\t\tif (borderCol != -1)\n\t\t{\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = colourCanvas(borderCol);\n\t\t\tctx.lineWidth = 1;\n\t\t\tctx.stroke(path);\n\t\t}\n\t}\n\n\t// draws an in-progress bond, originating either from the clicked-upon atom, or a point in space\n\tprivate drawOriginatingBond(ctx:CanvasRenderingContext2D, element:string, order:number, type:number)\n\t{\n\t\tlet x1 = this.clickX, y1 = this.clickY;\n\t\tif (this.opAtom > 0)\n\t\t{\n\t\t\tx1 = this.angToX(this.mol.atomX(this.opAtom));\n\t\t\ty1 = this.angToY(this.mol.atomY(this.opAtom));\n\t\t}\n\t\telse if (this.opBond > 0)\n\t\t{\n\t\t\tlet [bfr, bto] = this.mol.bondFromTo(this.opBond);\n\t\t\tx1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n\t\t\ty1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n\t\t}\n\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\n\t\tlet snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n\t\tif (snapTo) [x2, y2, snapAtom] = snapTo;\n\n\t\tlet scale = this.pointScale;\n\n\t\tctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n\t\tctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n\t\tdrawLine(ctx, x1, y1, x2, y2);\n\n\t\t// !! TODO: draw multiple bonds\n\n\t\tif (element != 'C')\n\t\t{\n\t\t\tlet fh = this.policy.data.fontSize * scale;\n\t\t\tctx.font = fontSansSerif(fh);\n\t\t\tlet metrics = ctx.measureText(element);\n\t\t\tctx.fillStyle = '#808080';\n\t\t\tctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n\t\t}\n\t}\n\n\t// render query metadata for any atoms/bonds\n\tprivate drawQueryFeatures(ctx:CanvasRenderingContext2D):void\n\t{\n\t\tconst {layout, mol} = this;\n\n\t\tinterface Annotation\n\t\t{\n\t\t\ttxt:string;\n\t\t\tx:number;\n\t\t\ty:number;\n\t\t}\n\t\tlet annots:Annotation[] = [];\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (QueryUtil.hasAnyQueryAtom(mol, n))\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tfor (let xtra of mol.atomExtra(n)) if (xtra.startsWith('q')) bits.push(xtra);\n\t\t\tlet ap = layout.getPoint(n - 1);\n\n\t\t\tannots.push({txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy});\n\t\t}\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (QueryUtil.hasAnyQueryBond(mol, n))\n\t\t{\n\t\t\tlet bits:string[] = [];\n\t\t\tfor (let xtra of mol.bondExtra(n)) if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders)) bits.push(xtra);\n\n\t\t\tlet num = 0, cx = 0, cy = 0;\n\t\t\tfor (let bl of layout.getLines()) if (bl.bnum == n)\n\t\t\t{\n\t\t\t\tnum += 2;\n\t\t\t\tcx += bl.line.x1 + bl.line.x2;\n\t\t\t\tcy += bl.line.y1 + bl.line.y2;\n\t\t\t}\n\n\t\t\tannots.push({txt: bits.join(','), x: cx / num, y: cy / num});\n\t\t}\n\n\t\t// NOTE: displaying the encoded syntax directly; this should ideally be replaced by a nicer rendering mnemonic\n\t\tlet fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n\t\tfor (let annot of annots)\n\t\t{\n\t\t\tctx.font = fontSansSerif(fh);\n\t\t\t//let metrics = ctx.measureText(annot.txt);\n\t\t\tctx.fillStyle = '#FF40C0';\n\t\t\tctx.fillText(annot.txt, annot.x, annot.y);\n\t\t}\n\t}\n\n\t// renders a polymer block unit by drawing the outline and some key connectivity information\n\tprivate drawPolymerUnit(ctx:CanvasRenderingContext2D, unit:PolymerBlockUnit, allUnits:PolymerBlockUnit[]):void\n\t{\n\t\tconst {mol, layout} = this;\n\n\t\t// part 1: draw outline around the polymer segment\n\n\t\tlet x:number[] = [], y:number[] = [];\n\t\tlet scale = this.pointScale;\n\n\t\tfor (let a of unit.atoms)\n\t\t{\n\t\t\tlet pt = layout.getPoint(a - 1);\n\t\t\tlet rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n\t\t\tconst NPT = 36, THPT = TWOPI / NPT;\n\t\t\tfor (let n = 0; n < NPT; n++)\n\t\t\t{\n\t\t\t\tlet th = n * THPT;\n\t\t\t\tx.push(pt.oval.cx + rad * Math.cos(th));\n\t\t\t\ty.push(pt.oval.cy + rad * Math.sin(th));\n\t\t\t}\n\t\t}\n\n\t\tlet extBonds:number[] = [], inAtoms:number[] = [], outAtoms:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\tlet flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n\t\t\tif (!flag1 && !flag2) continue;\n\t\t\tif (!flag2)\n\t\t\t{\n\t\t\t\textBonds.push(n);\n\t\t\t\tinAtoms.push(bfr);\n\t\t\t\toutAtoms.push(bto);\n\t\t\t}\n\t\t\telse if (!flag1)\n\t\t\t{\n\t\t\t\textBonds.push(n);\n\t\t\t\tinAtoms.push(bto);\n\t\t\t\toutAtoms.push(bfr);\n\t\t\t}\n\n\t\t\tlet pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n\t\t\tlet x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n\t\t\tif (!flag1) [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n\t\t\telse if (!flag2) [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n\t\t\tlet ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n\t\t\tlet npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n\t\t\tfor (let n = 0; n <= npWidth; n++)\n\t\t\t{\n\t\t\t\tx.push(x1 - ox + dx * n / npWidth);\n\t\t\t\ty.push(y1 - oy + dy * n / npWidth);\n\t\t\t\tx.push(x1 + ox + dx * n / npWidth);\n\t\t\t\ty.push(y1 + oy + dy * n / npWidth);\n\t\t\t}\n\t\t\tfor (let n = 1; n < npHeight; n++)\n\t\t\t{\n\t\t\t\tx.push(x1 - ox + 2 * ox * n / npHeight);\n\t\t\t\ty.push(y1 - oy + 2 * oy * n / npHeight);\n\t\t\t\tx.push(x2 - ox + 2 * ox * n / npHeight);\n\t\t\t\ty.push(y2 - oy + 2 * oy * n / npHeight);\n\t\t\t}\n\t\t}\n\n\t\tlet [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n\n\t\tlet path = new Path2D();\n\t\tpath.moveTo(px[0], py[0]);\n\t\tfor (let n = 1; n < px.length; n++) path.lineTo(px[n], py[n]);\n\t\tpath.closePath();\n\n\t\tctx.save();\n\t\tctx.fillStyle = '#F9EFFF';\n\t\tctx.fill(path);\n\t\tctx.strokeStyle = '#C0C0C0';\n\t\tctx.lineWidth = 1;\n\t\t//ctx.setLineDash([1, 1]);\n\t\tctx.stroke(path);\n\t\tctx.restore();\n\n\t\t// part 2: draw atom-to-atom connectivity options\n\n\t\tlet selfLinks:number[] = [];\n\t\tlet innerLinks:[number, number][] = [];\n\t\tlet outerLinks:[number, number][] = [];\n\n\t\tif (Vec.len(unit.bondConn) == 4)\n\t\t{\n\t\t\tinnerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n\t\t\tinnerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n\t\t}\n\t\telse if (Vec.len(extBonds) == 2 && unit.connect != null)\n\t\t{\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random)\n\t\t\t{\n\t\t\t\tinnerLinks.push([inAtoms[0], inAtoms[1]]);\n\t\t\t}\n\t\t\tif (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random)\n\t\t\t{\n\t\t\t\tselfLinks.push(inAtoms[0]);\n\t\t\t\tselfLinks.push(inAtoms[1]);\n\t\t\t}\n\t\t}\n\t\telse // anything goes\n\t\t{\n\t\t\tfor (let b of extBonds)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n\t\t\t\tif (unit.atoms.includes(a2)) [a1, a2] = [a2, a1];\n\t\t\t\tlet incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n\n\t\t\t\tlet isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n\n\t\t\t\tfor (let look of (isCapped ? [unit] : allUnits)) for (let a of look.atoms)\n\t\t\t\t{\n\t\t\t\t\tlet isExt = false;\n\t\t\t\t\tfor (let adj of mol.atomAdjList(a)) if (!look.atoms.includes(adj)) {isExt = true; break;}\n\t\t\t\t\tif (!isExt) continue;\n\n\t\t\t\t\tif (Vec.notBlank(incl))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet anames = look.atomName.get(a), any = false;\n\t\t\t\t\t\tif (anames) for (let an of anames) any = any || incl.includes(an);\n\t\t\t\t\t\tif (!any) continue;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.notBlank(excl))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet anames = look.atomName.get(a), any = false;\n\t\t\t\t\t\tif (anames) for (let an of anames) any = any || excl.includes(an);\n\t\t\t\t\t\tif (any) continue;\n\t\t\t\t\t}\n\t\t\t\t\tif (a == a1) selfLinks.push(a1);\n\t\t\t\t\telse if (unit === look) innerLinks.push([a1, a]);\n\t\t\t\t\telse outerLinks.push([a1, a]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tselfLinks = Vec.uniqueStable(selfLinks);\n\t\tinnerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n\t\touterLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n\n\t\tctx.save();\n\t\tctx.strokeStyle = '#6329C1';\n\t\tctx.lineWidth = 2;\n\t\tctx.setLineDash([1, 1]);\n\t\tctx.beginPath();\n\n\t\tfor (let a of selfLinks)\n\t\t{\n\t\t\tlet p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n\t\t\tlet x2 = 0, y2 = 0, num = 0;\n\t\t\tfor (let n = 0; n < extBonds.length; n++) if (inAtoms[n] == a)\n\t\t\t{\n\t\t\t\tlet p2 = layout.getPoint(outAtoms[n] - 1);\n\t\t\t\tx2 += p2.oval.cx;\n\t\t\t\ty2 += p2.oval.cy;\n\t\t\t\tnum++;\n\t\t\t}\n\t\t\tif (num > 1) {x2 /= num; y2 /= num;}\n\t\t\tx2 = x1 + 0.5 * (x2 - x1);\n\t\t\ty2 = y1 + 0.5 * (y2 - y1);\n\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n\t\t\tconst EXT = 2 * scale;\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n\t\t\tctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n\t\t}\n\t\tfor (let [a1, a2] of innerLinks)\n\t\t{\n\t\t\tlet x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n\t\t\tlet dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n\t\t\tconst EXT = 5;\n\t\t\tlet px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n\t\t\tlet [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n\t\t\tctx.moveTo(this.angToX(x1), this.angToY(y1));\n\t\t\tctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n\t\t}\n\t\tfor (let [a1, a2] of outerLinks)\n\t\t{\n\t\t\tlet p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n\t\t\tctx.moveTo(p1.oval.cx, p1.oval.cy);\n\t\t\tctx.lineTo(p2.oval.cx, p2.oval.cy);\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n\n\t// based on drag state, calculates a ring that's fused & locked to the origination\n\tprotected determineFauxRing():[number[], number[]]\n\t{\n\t\tlet atom = this.opAtom, bond = this.opBond, mol = this.mol;\n\t\tlet x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n\t\tlet y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n\t\tlet x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n\t\tlet rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n\n\t\tif (rsz < 3) {}\n\t\telse if (bond > 0) return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n\t\telse if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform) return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n\t\telse return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n\n\t\treturn [null, null];\n\t}\n\n\t// based on the mouse position, determine the implied rotation for the interactive operation\n\tprotected determineDragTheta():[number, number, number, number]\n\t{\n\t\tlet x0 = this.clickX, y0 = this.clickY;\n\t\tlet snap = this.snapToGuide(x0, y0);\n\t\tif (snap != null) {x0 = snap[0]; y0 = snap[1];}\n\t\tlet theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n\t\tif (this.toolRotateIncr > 0) theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n\t\treturn [x0, y0, theta, magnitude];\n\t}\n\n\t// determine the delta, in pixels, for a drag-move operation: the source and destination may be snapped\n\tprotected determineMoveDelta():[number, number]\n\t{\n\t\tlet x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n\t\tif (this.opAtom > 0)\n\t\t{\n\t\t\tx1 = this.angToX(this.mol.atomX(this.opAtom));\n\t\t\ty1 = this.angToY(this.mol.atomY(this.opAtom));\n\t\t\tlet snap = this.snapToGuide(x2, y2);\n\t\t\tif (snap != null) {x2 = snap[0]; y2 = snap[1];}\n\t\t}\n\t\treturn [x2 - x1, y2 - y1];\n\t}\n\n\t// if the mouse position is close to one of the snap-to points, or an existing atom, return that position\n\tprotected snapToGuide(x:number, y:number):[number, number, boolean]\n\t{\n\t\t// if coming from a bond, only snap to other bonds\n\t\tif (this.opBond > 0)\n\t\t{\n\t\t\tlet obj = this.pickObject(x, y);\n\t\t\tif (obj < 0)\n\t\t\t{\n\t\t\t\tlet [bfr, bto] = this.mol.bondFromTo(-obj);\n\t\t\t\tlet px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n\t\t\t\tlet py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n\t\t\t\treturn [px, py, false];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t// try guides & atoms for snapping\n\t\tlet bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n\t\tconst APPROACH = sqr(0.5 * this.pointScale);\n\t\tif (this.dragGuides != null) for (let i = 0; i < this.dragGuides.length; i++) for (let j = 0; j < this.dragGuides[i].x.length; j++)\n\t\t{\n\t\t\tlet px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n\t\t\tlet dsq = norm2_xy(px - x, py - y);\n\t\t\tif (dsq < APPROACH && dsq < bestDSQ) [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n\t\t}\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n\t\t\tlet dsq = norm2_xy(px - x, py - y);\n\t\t\tif (dsq < APPROACH && dsq < bestDSQ) [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n\t\t}\n\t\tif (isFinite(bestDSQ)) return [bestX, bestY, bestAtom];\n\n\t\treturn null;\n\t}\n\n\t// locates a molecular object at the given position: returns N for atom, -N for bond, 0 for nothing, or null for not-on-canvas (e.g. button banks)\n\tprotected pickObjectCanvas(x:number, y:number, opt:{noAtoms?:boolean; noBonds?:boolean} = {}):number\n\t{\n\t\t// proceed with atoms & bonds\n\n\t\tlet limitDist = 0.5 * this.pointScale;\n\t\tlet bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n\n\t\t// look for close atoms\n\t\tif (!opt.noAtoms) for (let n = 0; n < this.layout.numPoints(); n++)\n\t\t{\n\t\t\tlet p = this.layout.getPoint(n);\n\t\t\tif (p.anum == 0) continue;\n\n\t\t\tlet dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n\t\t\tlet dsq = norm2_xy(dx, dy);\n\t\t\tlet limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n\t\t\tif (dsq > limitDSQ) continue;\n\t\t\tif (dsq < bestScore)\n\t\t\t{\n\t\t\t\tbestItem = p.anum;\n\t\t\t\tbestScore = dsq;\n\t\t\t}\n\t\t}\n\t\tif (bestItem != 0) return bestItem;\n\n\t\t// look for close bonds\n\t\tif (!opt.noBonds) for (let n = 0; n < this.layout.numLines(); n++)\n\t\t{\n\t\t\tlet l = this.layout.getLine(n);\n\t\t\tif (l.bnum == 0) continue;\n\n\t\t\tlet x1 = l.line.x1, y1 = l.line.y1;\n\t\t\tlet x2 = l.line.x2, y2 = l.line.y2;\n\n\t\t\tif (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n\t\t\t\tx > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist) continue;\n\n\t\t\tlet dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n\t\t\tif (dist > limitDist) continue;\n\t\t\tif (dist < bestScore)\n\t\t\t{\n\t\t\t\tbestItem = -l.bnum;\n\t\t\t\tbestScore = dist;\n\t\t\t}\n\t\t}\n\n\t\treturn bestItem;\n\t}\n\tprotected pickObject(x:number, y:number, opt:{noAtoms?:boolean; noBonds?:boolean} = {}):number\n\t{\n\t\treturn this.pickObjectCanvas(x, y, opt) || 0;\n\t}\n\n\t// puts together an effects parameter for the main sketch\n\tprivate sketchEffects(mol:Molecule):RenderEffects\n\t{\n\t\tlet effects = new RenderEffects();\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom) effects.dottedRectOutline[n] = 0x808080;\n\n\t\teffects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n\n\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\teffects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\teffects.bondDecoText = Vec.stringArray('', mol.numBonds);\n\t\teffects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n\t\teffects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n\n\t\tif (this.viewOpt.showOxState)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet ox = MolUtil.atomOxidationState(mol, n);\n\t\t\t\tif (ox != null)\n\t\t\t\t{\n\t\t\t\t\teffects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n\t\t\t\t\teffects.atomDecoCol[n - 1] = 0xFF8080;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry)\n\t\t{\n\t\t\tif (!this.stereo) this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n\t\t\tskip: for (let n = 1; n <= mol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tlet chi = this.stereo.atomTetraChirality(n);\n\t\t\t\tif (chi == Stereochemistry.STEREO_NONE) continue;\n\t\t\t\tfor (let adjb of mol.atomAdjBonds(n)) if (mol.bondOrder(adjb) != 1) continue skip;\n\t\t\t\tif (chi == Stereochemistry.STEREO_UNKNOWN)\n\t\t\t\t{\n\t\t\t\t\tfor (let adj of mol.atomAdjList(n)) if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3) continue skip;\n\t\t\t\t}\n\t\t\t\teffects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n\t\t\t\t\t\t\t\t\t\t\t  chi == Stereochemistry.STEREO_NEG ? 'S' :\n\t\t\t\t\t\t\t\t\t\t\t  chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : /*STEREO_BROKEN*/ '?';\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x00A000;\n\t\t\t}\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet side = this.stereo.bondSideStereo(n);\n\t\t\t\tif (side == Stereochemistry.STEREO_NONE) continue;\n\t\t\t\teffects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n\t\t\t\t\t\t\t\t\t\t\t  side == Stereochemistry.STEREO_NEG ? 'E' :\n\t\t\t\t\t\t\t\t\t\t\t  side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : /*STEREO_BROKEN*/ '?';\n\t\t\t\teffects.bondDecoCol[n - 1] = 0x00A000;\n\t\t\t}\n\t\t}\n\t\telse if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber)\n\t\t{\n\t\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\t\teffects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomMapNum(n) > 0) effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n\t\t}\n\t\telse if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex)\n\t\t{\n\t\t\teffects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n\t\t\teffects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n\t\t\teffects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) effects.atomDecoText[n - 1] = n.toString();\n\t\t}\n\n\t\treturn effects;\n\t}\n\n\t// align an abbreviation for display purposes\n\tprivate orientAbbreviation(abbrevAtom:number, abbrevMol:Molecule):void\n\t{\n\t\tconst {mol} = this;\n\n\t\tif (MolUtil.isBlank(abbrevMol)) return;\n\t\tif (this.mol.atomAdjCount(abbrevAtom) != 1) return;\n\n\t\t// find the vectors, so they can be lined up\n\t\tlet nbr = mol.atomAdjList(abbrevAtom)[0];\n\t\tlet vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n\t\tlet adj = abbrevMol!.atomAdjList(1);\n\t\tlet vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tvx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n\t\t\tvy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n\t\t}\n\t\tvx2 *= inv;\n\t\tvy2 *= inv;\n\n\t\t// align the coordinates\n\t\tlet th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n\t\tCoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n\t\tif (adj.length == 1)\n\t\t{\n\t\t\tCoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n\t\t\tabbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n\t\t}\n\n\t\tfor (let b of abbrevMol.atomAdjBonds(1))\n\t\t{\n\t\t\tlet a = abbrevMol.bondOther(b, 1);\n\t\t\tif (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN) continue;\n\t\t\tabbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n\t\t}\n\t\tabbrevMol.deleteAtomAndBonds(1);\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer, AbbrevContainerFrag} from '../data/AbbrevContainer';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {Dialog} from '../dialog/Dialog';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {TabBar} from '../ui/TabBar';\nimport {dom, DOM} from '../util/dom';\nimport {Theme} from '../util/Theme';\nimport {angleDiffPos, colourCode, DEGRAD, KeyCode, norm_xy, RADDEG} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ExtraFieldsWidget} from './ExtraFieldsWidget';\nimport {GeomWidget, GeomWidgetSelection, GeomWidgetSelType, GeomWidgetType} from './GeomWidget';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {PeriodicTableWidget} from './PeriodicTableWidget';\nimport {QueryFieldsWidget} from './QueryFieldsWidget';\n\n/*\n\tOptions for editing a single atom within a molecule.\n*/\n\ninterface EditAtomAbbrev\n{\n\ttr:DOM;\n\tidx:number;\n\tbgcol:string;\n}\n\nexport class EditAtom extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\tpublic newX = 0;\n\tpublic newY = 0;\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate tabs:TabBar = null;\n\n\tprivate inputSymbol:DOM;\n\tprivate inputCharge:DOM;\n\tprivate inputUnpaired:DOM;\n\tprivate optionHydrogen:OptionList;\n\tprivate inputHydrogen:DOM;\n\tprivate optionIsotope:OptionList;\n\tprivate inputIsotope:DOM;\n\tprivate inputMapping:DOM;\n\tprivate inputIndex:DOM;\n\tprivate periodicWidget:PeriodicTableWidget;\n\n\tprivate abbrevList:AbbrevContainerFrag[] = null;\n\tprivate inputAbbrevSearch:DOM;\n\tprivate tableAbbrev:DOM;\n\tprivate svgAbbrev:string[] = null;\n\tprivate abbrevEntries:EditAtomAbbrev[];\n\tprivate abbrevIndices:number[] = [];\n\tprivate currentAbbrev = -1;\n\n\tprivate inputGeom1:DOM;\n\tprivate inputGeom2:DOM;\n\tprivate geomWidget:GeomWidget;\n\tprivate refGeom1:string;\n\tprivate refGeom2:string;\n\n\tprivate queryWidget:QueryFieldsWidget;\n\tprivate fieldsWidget:ExtraFieldsWidget;\n\n\tconstructor(mol:Molecule, public atom:number, private proxyClip:ClipboardProxy, private callbackApply:(source?:EditAtom) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Edit Atom';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tif (this.atom > 0)\n\t\t{\n\t\t\tthis.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n\t\t\tthis.tabs.render(body);\n\t\t\tthis.tabs.onSelect((idx) => this.selectedTab(idx));\n\n\t\t\tthis.populateAtom(this.tabs.getPanelDOM('Atom'));\n\t\t\tthis.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n\t\t\tif (this.atom > 0) this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n\t\t\tthis.populateQuery(this.tabs.getPanelDOM('Query'));\n\t\t\tthis.populateExtra(this.tabs.getPanelDOM('Extra'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.populateAtom(body);\n\t\t}\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tif (event.key == KeyCode.Enter) this.applyChanges();\n\t\t\t\telse if (event.key == KeyCode.Escape) this.close();\n\t\t\t\telse if (event.key == KeyCode.PageUp)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(-1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse if (event.key == KeyCode.PageDown)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tthis.mol.keepTransient = true;\n\n\t\tthis.updateMolecule();\n\t\tlet selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n\t\tif (selTab == 'Abbreviation') this.updateAbbrev();\n\t\tif (selTab == 'Geometry') this.updateGeometry();\n\t\tif (selTab == 'Query') this.updateQuery();\n\t\tif (selTab == 'Extra') this.updateExtra();\n\n\t\tthis.mol.keepTransient = false;\n\n\t\tif (this.callbackApply) this.callbackApply(this);\n\t}\n\n\tprivate populateAtom(panel:DOM):void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(panel);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n\t\tthis.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n\t\tthis.inputSymbol.css({'grid-area': '1 / col1 / auto / col4}'});\n\t\tthis.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n\t\tthis.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputCharge.css({'grid-area': '2 / col1'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n\t\tthis.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputUnpaired.css({'grid-area': '2 / col3'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n\t\tthis.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n\t\tthis.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n\t\tthis.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n\t\tthis.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n\t\tthis.inputHydrogen.css({'grid-area': '3 / col3'});\n\t\tthis.inputHydrogen.elInput.disabled = true;\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n\t\tthis.optionIsotope = new OptionList(['Natural', 'Enriched']);\n\t\tthis.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n\t\tthis.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n\t\tthis.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputIsotope.css({'grid-area': '4 / col3'});\n\t\tthis.inputIsotope.elInput.disabled = true;\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n\t\tthis.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n\t\tthis.inputMapping.css({'grid-area': '5 / col1'});\n\n\t\tgrid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n\t\tthis.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n\t\tthis.inputIndex.css({'grid-area': '5 / col3'});\n\n\t\tlet divPeriodic = dom('<div/>').appendTo(grid).css({'grid-area': '6 / start / 6 / end'});\n\t\tthis.periodicWidget = new PeriodicTableWidget();\n\t\tthis.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n\t\tthis.periodicWidget.onDoubleClick(() => this.applyChanges());\n\t\tthis.periodicWidget.render(divPeriodic);\n\n\t\tconst mol = this.mol, atom = this.atom;\n\t\tif (atom > 0)\n\t\t{\n\t\t\tthis.inputSymbol.setValue(mol.atomElement(atom));\n\t\t\tthis.inputCharge.setValue(mol.atomCharge(atom).toString());\n\t\t\tthis.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n\n\t\t\tlet hc = mol.atomHExplicit(atom);\n\t\t\tif (hc == Molecule.HEXPLICIT_UNKNOWN)\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(0);\n\t\t\t\tthis.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = true;\n\t\t\t}\n\t\t\telse if (hc <= 4)\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(hc + 1);\n\t\t\t\tthis.inputHydrogen.setValue(hc.toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.optionHydrogen.setSelectedIndex(6);\n\t\t\t\tthis.inputHydrogen.setValue(hc.toString());\n\t\t\t\tthis.inputHydrogen.elInput.disabled = false;\n\t\t\t}\n\t\t\t//this.optionHydrogen.setSelectedIndex(mol.atomHExplicit(atom) == Molecule.HEXPLICIT_UNKNOWN ? 0 : 1);\n\t\t\t//if (mol.atomHExplicit(atom) != Molecule.HEXPLICIT_UNKNOWN) this.inputHydrogen.val(mol.atomHExplicit(atom).toString());\n\n\t\t\tthis.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n\t\t\tif (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL) this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n\t\t\tthis.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n\n\t\t\tthis.inputMapping.setValue(mol.atomMapNum(atom).toString());\n\t\t\tthis.inputIndex.setValue(atom.toString());\n\n\t\t\tthis.periodicWidget.changeElement(mol.atomElement(atom));\n\t\t}\n\t}\n\n\tprivate populateAbbreviation(panel:DOM):void\n\t{\n\t\tlet divFlex = dom('<div/>').appendTo(panel).css({'display': 'flex', 'align-items': 'flex-start'});\n\t\tdivFlex.css({'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll'});\n\n\t\tlet spanSearch = dom('<div/>').appendTo(divFlex).css({'margin-right': '0.5em', 'flex': '0 0'});\n\t\tlet spanList = dom('<div/>').appendTo(divFlex).css({'flex': '1 1 100%'});\n\n\t\tthis.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n\t\tthis.inputAbbrevSearch.setAttr('placeholder', 'Search');\n\t\tlet lastSearch = '';\n\t\tthis.inputAbbrevSearch.onKeyDown((event) =>\n\t\t{\n\t\t\tif (event.key == KeyCode.Up) this.cycleAbbreviation(-1);\n\t\t\telse if (event.key == KeyCode.Down) this.cycleAbbreviation(1);\n\t\t});\n\t\tthis.inputAbbrevSearch.onInput(() =>\n\t\t{\n\t\t\tlet search = this.inputAbbrevSearch.getValue();\n\t\t\tif (search == lastSearch) return;\n\t\t\tlastSearch = search;\n\t\t\tthis.fillAbbreviations();\n\t\t});\n\n\t\tlet divButtons = dom('<div/>').appendTo(spanSearch).css({'margin-top': '0.5em'});\n\t\tlet btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n\t\tbtnClear.onClick(() =>\n\t\t{\n\t\t\tthis.selectAbbreviation(-1);\n\t\t\tif (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom)) this.applyChanges();\n\t\t});\n\n\t\tthis.tableAbbrev = dom('<table/>').appendTo(spanList).css({'border-collapse': 'collapse', 'width': '100%'});\n\t\tthis.fillAbbreviations();\n\t}\n\n\tprivate populateGeometry(panel:DOM):void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tlet divContainer1 = dom('<div/>').appendTo(panel).css({'text-align': 'center'});\n\t\tlet divContainer2 = dom('<div/>').appendTo(divContainer1).css({'display': 'inline-block'});\n\t\tlet grid = dom('<div/>').appendTo(divContainer2);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tthis.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n\t\tthis.geomWidget.render(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col0 / auto / col4', 'text-align': 'center'}));\n\n\t\tlet label1 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'});\n\t\tthis.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col1'});\n\t\tlet label2 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col2'});\n\t\tthis.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col3'});\n\n\t\tthis.geomWidget.callbackSelect = (sel:GeomWidgetSelection) =>\n\t\t{\n\t\t\tlet atoms = this.geomWidget.selectionAtoms(sel);\n\t\t\tif (sel.type == GeomWidgetSelType.Position)\n\t\t\t{\n\t\t\t\tlabel1.setText('Position X');\n\t\t\t\tlabel2.setText('Y');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n\t\t\t}\n\t\t\telse if (sel.type == GeomWidgetSelType.Link)\n\t\t\t{\n\t\t\t\tlet dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n\t\t\t\tlabel1.setText('Distance');\n\t\t\t\tlabel2.setText('Angle');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n\t\t\t}\n\t\t\telse if (sel.type == GeomWidgetSelType.Torsion)\n\t\t\t{\n\t\t\t\tlet cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n\t\t\t\tlet th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n\t\t\t\tlet th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n\t\t\t\tlabel1.setText('Angle');\n\t\t\t\tlabel2.setText('');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n\t\t\t\tthis.inputGeom2.setValue(this.refGeom2 = '');\n\t\t\t}\n\t\t\tlabel2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n\t\t\tthis.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n\t\t};\n\t\tthis.geomWidget.callbackSelect(this.geomWidget.selected); // trigger initial definition\n\t}\n\n\tprivate populateQuery(panel:DOM):void\n\t{\n\t\tthis.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n\t\tthis.queryWidget.render(panel);\n\t}\n\n\tprivate populateExtra(panel:DOM):void\n\t{\n\t\tlet fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n\t\tthis.fieldsWidget = new ExtraFieldsWidget(fields);\n\t\tthis.fieldsWidget.render(panel);\n\t}\n\n\t// read everything back in from the dialog objects\n\tprivate updateMolecule():void\n\t{\n\t\tlet {mol, atom} = this;\n\n\t\tif (atom == 0) atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n\n\t\tlet sym = this.inputSymbol.getValue();\n\t\tif (sym != '') mol.setAtomElement(atom, sym);\n\n\t\tlet chg = parseInt(this.inputCharge.getValue());\n\t\tif (chg > -20 && chg < 20) mol.setAtomCharge(atom, chg);\n\n\t\tlet unp = parseInt(this.inputUnpaired.getValue());\n\t\tif (unp >= 0 && unp < 20) mol.setAtomUnpaired(atom, unp);\n\n\t\tlet hcidx = this.optionHydrogen.getSelectedIndex();\n\t\tif (hcidx == 0) mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n\t\telse if (hcidx <= 5) mol.setAtomHExplicit(atom, hcidx - 1);\n\t\telse\n\t\t{\n\t\t\tlet hyd = parseInt(this.inputHydrogen.getValue());\n\t\t\tif (hyd >= 0 && hyd < 20) mol.setAtomHExplicit(atom, hyd);\n\t\t}\n\n\t\tif (this.optionIsotope.getSelectedIndex() == 1)\n\t\t{\n\t\t\tlet iso = parseInt(this.inputIsotope.getValue());\n\t\t\tif (iso >= 0 && iso < 300) mol.setAtomIsotope(atom, iso);\n\t\t}\n\t\telse mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n\n\t\tlet map = parseInt(this.inputMapping.getValue());\n\t\tif (!isNaN(map)) mol.setAtomMapNum(atom, map);\n\t}\n\n\tprivate updateAbbrev():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tif (this.currentAbbrev < 0)\n\t\t{\n\t\t\tlet el = mol.atomElement(atom);\n\t\t\tMolUtil.clearAbbrev(mol, atom); // (resets the element)\n\t\t\tmol.setAtomElement(atom, el);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet abbrev = this.abbrevList[this.currentAbbrev];\n\t\t\tmol.setAtomElement(atom, abbrev.name);\n\t\t\tMolUtil.setAbbrev(mol, atom, abbrev.frag);\n\t\t}\n\t}\n\n\tprivate updateGeometry():void\n\t{\n\t\tlet strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n\t\tif (this.refGeom1 == strval1 && this.refGeom2 == strval2) return;\n\n\t\tconst {mol} = this;\n\t\tlet sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n\n\t\tif (sel.type == GeomWidgetSelType.Position)\n\t\t{\n\t\t\tlet x = parseFloat(strval1), y = parseFloat(strval2);\n\t\t\tif (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6) return; // non-sane\n\t\t\tmol.setAtomPos(atoms[0], x, y);\n\t\t}\n\t\telse if (sel.type == GeomWidgetSelType.Link)\n\t\t{\n\t\t\tif (this.refGeom1 != strval1)\n\t\t\t{\n\t\t\t\tlet dist = parseFloat(strval1);\n\t\t\t\tif (isNaN(dist) || Math.abs(dist) > 100) return; // non-sane\n\t\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tmask[atoms[1] - 1] = true;\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.BondDist, {dist});\n\t\t\t\tmolact.execute();\n\t\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (this.refGeom2 != strval2)\n\t\t\t{\n\t\t\t\tlet angle = parseFloat(strval2);\n\t\t\t\tif (isNaN(angle)) return; // non-sane\n\t\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tmask[atoms[1] - 1] = true;\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.AlignAngle, {angle: angle * DEGRAD});\n\t\t\t\tmolact.execute();\n\t\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (sel.type == GeomWidgetSelType.Torsion)\n\t\t{\n\t\t\tlet angle = parseFloat(strval1);\n\t\t\tif (isNaN(angle)) return; // non-sane\n\t\t\tlet mask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\tfor (let a of atoms) mask[a - 1] = true;\n\t\t\tlet instate:SketchState = {mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask};\n\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, {angle: angle * DEGRAD});\n\t\t\tmolact.execute();\n\t\t\tif (molact.output.mol) this.mol = molact.output.mol;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate updateQuery():void\n\t{\n\t\tthis.queryWidget.updateAtom();\n\t}\n\n\tprivate updateExtra():void\n\t{\n\t\tthis.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n\t\tthis.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n\t}\n\n\t// enumerate all abbreviations compatible with the search; it will go into self-callback mode if the abbreviations need to be loaded\n\tprivate fillAbbreviations():void\n\t{\n\t\tif (AbbrevContainer.needsSetup())\n\t\t{\n\t\t\tsetTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tableAbbrev.empty();\n\n\t\tAbbrevContainer.main.submitMolecule(this.mol, true);\n\t\tthis.abbrevList = AbbrevContainer.main.getAbbrevs();\n\t\tif (!this.svgAbbrev)\n\t\t{\n\t\t\tthis.svgAbbrev = [];\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(10);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\t\tfor (let abbrev of this.abbrevList)\n\t\t\t{\n\t\t\t\tlet effects = new RenderEffects();\n\t\t\t\tlet mol = abbrev.frag.clone();\n\t\t\t\teffects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n\t\t\t\teffects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomElement(n, 'C');\n\t\t\t\t\teffects.atomCircleSz[n - 1] = 0.2;\n\t\t\t\t\teffects.atomCircleCol[n - 1] = 0x00C000;\n\t\t\t\t}\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\t\t\t\t// !! max size\n\t\t\t\tlet gfx = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\t\tgfx.normalise();\n\t\t\t\tthis.svgAbbrev.push(gfx.createSVG());\n\t\t\t}\n\n\t\t\t// see if the current abbreviation matches anything\n\t\t\tconst {mol, atom} = this;\n\t\t\tif (atom > 0 && MolUtil.hasAbbrev(mol, atom))\n\t\t\t{\n\t\t\t\tlet name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n\t\t\t\tfor (let n = 0; n < this.abbrevList.length; n++) if (name == this.abbrevList[n].name)\n\t\t\t\t{\n\t\t\t\t\t// NOTE: just going by name & basic molecule formula; using sketchMappable fails because layout can vary\n\t\t\t\t\t//if (CoordUtil.sketchMappable(abbrevs[n].frag, MolUtil.getAbbrev(mol, atom))) this.currentAbbrev = n;\n\t\t\t\t\tif (mf == MolUtil.molecularFormula(this.abbrevList[n].frag)) this.currentAbbrev = n;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet tr = dom('<tr/>').appendTo(this.tableAbbrev);\n\t\ttr.appendHTML('<td><u>Label</u></td>');\n\t\ttr.appendHTML('<td><u>Structure</u></td>');\n\n\t\tthis.abbrevEntries = [];\n\t\tthis.abbrevIndices = [];\n\t\tlet search = this.inputAbbrevSearch.getValue().toLowerCase();\n\n\t\tfor (let n = 0; n < this.abbrevList.length; n++)\n\t\t{\n\t\t\tif (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search)) continue;\n\n\t\t\tlet entry:EditAtomAbbrev =\n\t\t\t{\n\t\t\t\ttr: dom('<tr/>').appendTo(this.tableAbbrev),\n\t\t\t\tidx: n,\n\t\t\t\tbgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n\t\t\t};\n\t\t\tentry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n\t\t\tlet tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n\t\t\ttdLabel.setHTML(this.abbrevList[n].nameHTML);\n\n\t\t\tdom(this.svgAbbrev[n]).appendTo(tdStruct).css({'display': 'block', 'pointer-events': 'none'});\n\n\t\t\tentry.tr.css({'cursor': 'pointer'});\n\t\t\tentry.tr.onClick(() => this.selectAbbreviation(n));\n\t\t\tentry.tr.onDblClick((event) => this.applyChanges());\n\n\t\t\tthis.abbrevEntries.push(entry);\n\t\t\tthis.abbrevIndices.push(n);\n\t\t}\n\t}\n\n\t// change currently selected abbreviation\n\tprivate selectAbbreviation(idx:number):void\n\t{\n\t\tif (this.currentAbbrev == idx) return;\n\t\tthis.currentAbbrev = idx;\n\n\t\tfor (let entry of this.abbrevEntries)\n\t\t{\n\t\t\tentry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n\t\t\tif (this.currentAbbrev == entry.idx) entry.tr.el.scrollIntoView({'block': 'nearest'});\n\t\t}\n\t}\n\n\t// move abbreviation selection up or down\n\tprivate cycleAbbreviation(dir:number):void\n\t{\n\t\tlet sz = this.abbrevIndices.length;\n\t\tif (sz == 0) return;\n\n\t\tlet idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n\t\tif (idx < 0)\n\t\t{\n\t\t\tif (dir < 0) idx = sz - 1; else idx = 0;\n\t\t}\n\t\telse idx = (idx + sz + dir) % sz;\n\n\t\tthis.selectAbbreviation(this.abbrevIndices[idx]);\n\t}\n\n\tprivate selectedTab(idx:number):void\n\t{\n\t\tif (idx == 0) this.inputSymbol.grabFocus();\n\t\telse if (idx == 1) this.inputAbbrevSearch.grabFocus();\n\t\telse if (idx == 2) this.inputGeom1.grabFocus();\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Dialog} from '../dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {TabBar} from '../ui/TabBar';\nimport {dom, DOM} from '../util/dom';\nimport {KeyCode, norm_xy} from '../util/util';\nimport {ExtraFieldsWidget} from './ExtraFieldsWidget';\nimport {GeomWidget, GeomWidgetSelection, GeomWidgetSelType, GeomWidgetType} from './GeomWidget';\nimport {ActivityType, MoleculeActivity, SketchState} from './MoleculeActivity';\nimport {QueryFieldsWidget} from './QueryFieldsWidget';\n\n/*\n\tOptions for editing a single bond within a molecule.\n*/\n\nexport class EditBond extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate tabs:TabBar;\n\n\tprivate optionOrder:OptionList;\n\tprivate optionStereo:OptionList;\n\tprivate inputFrom:DOM;\n\tprivate inputTo:DOM;\n\tprivate inputIndex:DOM;\n\n\tprivate inputGeom1:DOM;\n\tprivate geomWidget:GeomWidget;\n\tprivate refGeom1:string;\n\n\tprivate queryWidget:QueryFieldsWidget;\n\tprivate fieldsWidget:ExtraFieldsWidget;\n\n\tconstructor(mol:Molecule, public bond:number, private proxyClip:ClipboardProxy, private callbackApply:(source?:EditBond) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Edit Bond';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tthis.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n\t\tthis.tabs.render(body);\n\t\tthis.tabs.onSelect((idx) => this.selectedTab(idx));\n\n\t\tthis.populateBond(this.tabs.getPanelDOM('Bond'));\n\t\tthis.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n\t\tthis.populateQuery(this.tabs.getPanelDOM('Query'));\n\t\tthis.populateExtra(this.tabs.getPanelDOM('Extra'));\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tif (event.key == KeyCode.Enter) this.applyChanges();\n\t\t\t\telse if (event.key == KeyCode.Escape) this.close();\n\t\t\t\telse if (event.key == KeyCode.PageUp)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(-1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse if (event.key == KeyCode.PageDown)\n\t\t\t\t{\n\t\t\t\t\tthis.tabs.rotateSelected(1);\n\t\t\t\t\tthis.selectedTab(this.tabs.getSelectedIndex());\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tthis.mol.keepTransient = true;\n\n\t\tthis.updateMolecule();\n\t\tif (this.tabs.getSelectedValue() == 'Geometry') this.updateGeometry();\n\t\tif (this.tabs.getSelectedValue() == 'Query') this.updateQuery();\n\t\tif (this.tabs.getSelectedValue() == 'Extra') this.updateExtra();\n\n\t\tthis.mol.keepTransient = false;\n\n\t\tif (this.callbackApply) this.callbackApply(this);\n\t}\n\n\tprivate populateBond(panel:DOM):void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet grid = dom('<div/>').appendTo(panel);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]'});\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col0'}).setText('Order');\n\t\tlet ordersHTML:string[] = [];\n\t\tfor (let o = 0; o <= 4; o++) ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n\t\tthis.optionOrder = new OptionList(ordersHTML);\n\t\tthis.optionOrder.htmlLabels = true;\n\t\tthis.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n\t\tthis.optionOrder.render(dom('<div/>').appendTo(grid).css({'grid-column': 'col1 / col4', 'grid-row': '1'}));\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'}).setText('Stereo');\n\t\tthis.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n\t\tthis.optionStereo.setSelectedIndex(mol.bondType(bond));\n\t\tthis.optionStereo.render(dom('<div/>').appendTo(grid).css({'grid-column': 'col1 / col4', 'grid-row': '2'}));\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '3 / col0'}).setText('From');\n\t\tthis.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '3 / col1', 'font': 'inherit'});\n\t\tthis.inputFrom.elInput.readOnly = true;\n\t\tthis.inputFrom.setValue(mol.bondFrom(bond).toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '3 / col2'}).setText('To');\n\t\tthis.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '3 / col3', 'font': 'inherit'});\n\t\tthis.inputTo.elInput.readOnly = true;\n\t\tthis.inputTo.setValue(mol.bondTo(bond).toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '4 / col2'}).setText('Index');\n\t\tthis.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({'grid-area': '4 / col3', 'font': 'inherit'});\n\t\tthis.inputIndex.elInput.readOnly = true;\n\t\tthis.inputIndex.setValue(bond.toString());\n\t}\n\n\tprivate populateGeometry(panel:DOM):void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet divContainer1 = dom('<div/>').appendTo(panel).css({'text-align': 'center'});\n\t\tlet divContainer2 = dom('<div/>').appendTo(divContainer1).css({'display': 'inline-block'});\n\t\tlet grid = dom('<div/>').appendTo(divContainer2);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2]'});\n\n\t\tthis.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n\t\tthis.geomWidget.render(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col0 / auto / col2', 'text-align': 'center'}));\n\n\t\tlet label1 = dom('<div/>').appendTo(grid).css({'grid-area': '2 / col0'});\n\t\tthis.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({'grid-area': '2 / col1'});\n\n\t\tthis.geomWidget.callbackSelect = (sel:GeomWidgetSelection) =>\n\t\t{\n\t\t\tif (sel.type == GeomWidgetSelType.Link)\n\t\t\t{\n\t\t\t\tlet a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n\t\t\t\tlet dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n\t\t\t\tlabel1.setText('Distance');\n\t\t\t\tthis.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n\t\t\t}\n\t\t};\n\t\tthis.geomWidget.callbackSelect(this.geomWidget.selected); // trigger initial definition\n\t}\n\n\tprivate populateQuery(panel:DOM):void\n\t{\n\t\tthis.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n\t\tthis.queryWidget.render(panel);\n\t}\n\n\tprivate populateExtra(panel:DOM):void\n\t{\n\t\tlet fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n\t\tthis.fieldsWidget = new ExtraFieldsWidget(fields);\n\t\tthis.fieldsWidget.render(panel);\n\t}\n\n\t// read everything back in from the dialog objects\n\tprivate updateMolecule():void\n\t{\n\t\tlet {mol, bond} = this;\n\n\t\tmol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n\t\tmol.setBondType(bond, this.optionStereo.getSelectedIndex());\n\t}\n\n\tprivate updateGeometry():void\n\t{\n\t\tlet strval1 = this.inputGeom1.getValue();\n\t\tif (this.refGeom1 == strval1) return;\n\n\t\tconst {mol} = this;\n\t\tlet sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n\n\t\tif (sel.type == GeomWidgetSelType.Link)\n\t\t{\n\t\t\tif (this.refGeom1 != strval1)\n\t\t\t{\n\t\t\t\tlet dist = parseFloat(strval1);\n\t\t\t\tif (isNaN(dist) || Math.abs(dist) > 100) return; // non-sane\n\t\t\t\tlet instate:SketchState = {mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null};\n\t\t\t\tlet molact = new MoleculeActivity(instate, ActivityType.BondDist, {dist});\n\t\t\t\tmolact.execute();\n\t\t\t\tthis.mol = molact.output.mol;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateQuery():void\n\t{\n\t\tthis.queryWidget.updateBond();\n\t}\n\n\tprivate updateExtra():void\n\t{\n\t\tthis.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n\t\tthis.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n\t}\n\n\tprivate selectedTab(idx:number):void\n\t{\n\t\tif (idx == 0) this.inputFrom.grabFocus();\n\t\telse if (idx == 1) this.inputGeom1.grabFocus();\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2020 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {Dialog} from '../dialog/Dialog';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ClipboardProxy, ClipboardProxyHandler} from '../ui/ClipboardProxy';\nimport {OptionList} from '../ui/OptionList';\nimport {dom, DOM} from '../util/dom';\nimport {Vec} from '../util/Vec';\n\n/*\n\tEditing a new or existing polymer block.\n*/\n\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx:number):string {return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1);}\nfunction indexToBondLabel(idx:number):string {return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1);}\n\nexport class EditPolymer extends Dialog\n{\n\tpublic mol:Molecule; // copy of original: may or may not be different\n\n\tprivate initMol:Molecule;\n\tprivate btnApply:DOM;\n\tprivate btnRemove:DOM;\n\tprivate optionConnect:OptionList = null;\n\tprivate optionBondConn:OptionList = null;\n\tprivate divPreview:DOM;\n\n\tprivate polymer:PolymerBlock;\n\tprivate currentID = 0;\n\tprivate unit:PolymerBlockUnit = null;\n\n\tprivate borderAtoms:number[] = []; // subset of atoms that have a bond going to the outside\n\tprivate outBonds:number[] = []; // list of bonds going to the outside\n\tprivate outAtoms:number[] = []; // sorted in same order as bonds\n\n\tprivate umap:number[];\n\tprivate umol:Molecule;\n\n\tconstructor(mol:Molecule, public atoms:number[], private proxyClip:ClipboardProxy, private callbackApply:(source?:EditPolymer) => void)\n\t{\n\t\tsuper();\n\n\t\tthis.initMol = mol;\n\t\tthis.mol = mol.clone();\n\n\t\tthis.title = 'Polymer Block';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\n\t\tthis.polymer = new PolymerBlock(this.mol);\n\t\tatoms = Vec.sorted(atoms);\n\n\t\tfor (let id of this.polymer.getIDList())\n\t\t{\n\t\t\tlet look = this.polymer.getUnit(id);\n\t\t\tif (Vec.equals(atoms, look.atoms))\n\t\t\t{\n\t\t\t\tthis.currentID = id;\n\t\t\t\tthis.unit = look;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.unit) this.unit = new PolymerBlockUnit(atoms);\n\n\t\tlet umol = this.umol = this.mol.clone();\n\t\tlet mask = Vec.booleanArray(false, this.umol.numAtoms);\n\t\tfor (let n = 1; n <= this.mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n\t\t\tlet in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n\t\t\tif (in1 || in2) mask[bfr - 1] = mask[bto - 1] = true;\n\t\t\tif (in1 && !in2)\n\t\t\t{\n\t\t\t\tthis.borderAtoms.push(bfr);\n\t\t\t\tthis.outBonds.push(n);\n\t\t\t\tthis.outAtoms.push(bto);\n\t\t\t}\n\t\t\tif (in2 && !in1)\n\t\t\t{\n\t\t\t\tthis.borderAtoms.push(bto);\n\t\t\t\tthis.outBonds.push(n);\n\t\t\t\tthis.outAtoms.push(bfr);\n\t\t\t}\n\t\t}\n\t\tthis.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n\n\t\tthis.umap = Vec.maskMap(mask);\n\t\tthis.umol = MolUtil.subgraphMask(this.umol, mask);\n\t\tnew PolymerBlock(this.umol).removeAll();\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tthis.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\tif (this.currentID == 0) this.btnApply.setText('Create');\n\t\tthis.btnApply.onClick(() => this.applyChanges());\n\n\t\tif (this.currentID > 0)\n\t\t{\n\t\t\tthis.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({'margin-left': '0.5em'});\n\t\t\tthis.btnRemove.onClick(() => this.applyRemove());\n\t\t}\n\n\t\tlet grid = dom('<div/>').appendTo(body);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]'});\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col0'}).setText('# Atoms');\n\t\tlet inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col1'}));\n\t\tinputNAtoms.elInput.readOnly = true;\n\t\tinputNAtoms.setValue(this.unit.atoms.length.toString());\n\n\t\tdom('<div/>').appendTo(grid).css({'grid-area': '1 / col2'}).setText('Out-bonds');\n\t\tlet inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': '1 / col3'}));\n\t\tinputNBond.elInput.readOnly = true;\n\t\tinputNBond.setValue(this.outBonds.length.toString());\n\n\t\tlet row = 1;\n\t\tif (this.outBonds.length == 2)\n\t\t{\n\t\t\trow++;\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`}).setText('Connectivity');\n\t\t\tthis.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n\t\t\tthis.optionConnect.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / col4`}));\n\t\t\tif (this.unit.connect == PolymerBlockConnectivity.HeadToTail) this.optionConnect.setSelectedIndex(1);\n\t\t\telse if (this.unit.connect == PolymerBlockConnectivity.HeadToHead) this.optionConnect.setSelectedIndex(2);\n\t\t\telse if (this.unit.connect == PolymerBlockConnectivity.Random) this.optionConnect.setSelectedIndex(3);\n\t\t}\n\t\tif (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4)\n\t\t{\n\t\t\trow++;\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`}).setText('2x2 Connectivity');\n\t\t\tthis.populate2x2Conn(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / end`}));\n\t\t}\n\n\t\tlet getList = (str:string):number[] =>\n\t\t{\n\t\t\tif (!str) return null;\n\t\t\tlet list:number[] = [];\n\t\t\tfor (let bit of str.split(','))\n\t\t\t{\n\t\t\t\tlet v = parseInt(bit);\n\t\t\t\tif (v > 0) list.push(v); else return undefined;\n\t\t\t}\n\t\t\treturn list;\n\t\t};\n\n\t\tfor (let n = 0; n < this.borderAtoms.length; n++)\n\t\t{\n\t\t\trow++;\n\t\t\tlet domLabel = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em'});\n\t\t\tif (n == 0) domLabel.setText('Name ');\n\t\t\tdom('<span/>').appendTo(domLabel).css({'color': '#008000'}).setText(indexToAtomLabel(n + 1));\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1 / auto / end`, 'width': '100%'}));\n\n\t\t\tlet atom = this.borderAtoms[n];\n\t\t\tlet nvals = this.unit.atomName.get(atom);\n\t\t\tif (nvals) input.setValue(nvals.join(','));\n\t\t\tinput.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(input.getValue());\n\t\t\t\tif (list !== undefined) this.unit.atomName.set(atom, list);\n\t\t\t});\n\t\t}\n\t\tfor (let n = 0; n < this.outAtoms.length; n++)\n\t\t{\n\t\t\trow++;\n\t\t\tlet domLabel = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em'});\n\t\t\tif (n == 0) domLabel.setText('Link ');\n\t\t\tdom('<span/>').appendTo(domLabel).css({'color': '#800080'}).setText(indexToBondLabel(n + 1));\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col1`}).setText('Include');\n\t\t\tlet inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col2`, 'width': '100%'}));\n\t\t\tdom('<div/>').appendTo(grid).css({'grid-area': `${row} / col3`}).setText('Exclude');\n\t\t\tlet inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col4`, 'width': '100%'}));\n\n\t\t\tlet bond = this.outBonds[n];\n\t\t\tlet ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n\t\t\tif (ivals) inputIncl.setValue(ivals.join(','));\n\t\t\tif (evals) inputExcl.setValue(evals.join(','));\n\t\t\tinputIncl.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(inputIncl.getValue());\n\t\t\t\tif (list !== undefined) this.unit.bondIncl.set(bond, list);\n\t\t\t});\n\t\t\tinputExcl.onInput(() =>\n\t\t\t{\n\t\t\t\tlet list = getList(inputExcl.getValue());\n\t\t\t\tif (list !== undefined) this.unit.bondExcl.set(bond, list);\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tthis.populateUncap(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center'}));\n\n\t\trow++;\n\t\tthis.divPreview = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center'});\n\t\tthis.renderUnit();\n\n\t\tlet focusable = body.findAll('input,textarea');\n\t\tif (focusable.length > 0) focusable[0].grabFocus(true);\n\t\tfor (let dom of focusable)\n\t\t{\n\t\t\tdom.css({'font': 'inherit'});\n\t\t\tdom.onKeyDown((event:KeyboardEvent) =>\n\t\t\t{\n\t\t\t\tlet keyCode = event.keyCode || event.which;\n\t\t\t\tif (keyCode == 13) this.applyChanges();\n\t\t\t\tif (keyCode == 27) this.close();\n\t\t\t});\n\t\t}\n\n\t\t//setTimeout(() => inputNAtoms.focus(), 1);\n\t}\n\n\tpublic close():void\n\t{\n\t\tthis.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populate2x2Conn(div:DOM):void\n\t{\n\t\tconst perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n\n\t\tlet bondConnOptions:number[][] = [null];\n\t\tlet optionList = ['None'];\n\t\tlet selidx = 0;\n\t\tfor (let perm of perms)\n\t\t{\n\t\t\tlet bonds = Vec.idxGet(this.outBonds, perm);\n\t\t\tif (Vec.equals(bonds, this.unit.bondConn)) selidx = optionList.length;\n\t\t\tbondConnOptions.push(bonds);\n\t\t\t//optionList.push(`${this.outAtoms[perm[0]]},${this.outAtoms[perm[1]]}:${this.outAtoms[perm[2]]},${this.outAtoms[perm[3]]}`);\n\t\t\toptionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n\t\t}\n\n\t\tthis.optionBondConn = new OptionList(optionList);\n\t\tthis.optionBondConn.setSelectedIndex(selidx);\n\t\tthis.optionBondConn.render(div);\n\t\tthis.optionBondConn.onSelect((idx) =>\n\t\t{\n\t\t\tthis.unit.bondConn = bondConnOptions[idx];\n\t\t\tthis.renderUnit();\n\t\t});\n\t}\n\n\t// list out each outgoing atom that's terminal and could be converted into '*': if any, make a button for that\n\tprivate populateUncap(div:DOM):void\n\t{\n\t\tlet uncapAtoms:number[] = [];\n\t\tskip: for (let a of this.outAtoms) if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*')\n\t\t{\n\t\t\tfor (let unit of this.polymer.getUnits()) if (unit.atoms.includes(a)) continue skip;\n\t\t\tuncapAtoms.push(a);\n\t\t}\n\t\tif (uncapAtoms.length == 0) return;\n\n\t\tlet btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n\t\tbtnUncap.onClick(() =>\n\t\t{\n\t\t\tbtnUncap.elInput.disabled = true;\n\t\t\tfor (let a of uncapAtoms) this.mol.setAtomElement(a, '*');\n\t\t});\n\t}\n\n\t// trigger the apply/save sequence\n\tprivate applyChanges():void\n\t{\n\t\tif (this.optionConnect)\n\t\t{\n\t\t\tlet sel = this.optionConnect.getSelectedIndex();\n\t\t\tif (sel == 0) this.unit.connect = null;\n\t\t\telse if (sel == 1) this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n\t\t\telse if (sel == 2) this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n\t\t\telse if (sel == 3) this.unit.connect = PolymerBlockConnectivity.Random;\n\t\t}\n\n\t\tif (this.currentID) this.polymer.removeUnit(this.currentID);\n\n\t\tthis.currentID = this.polymer.createUnit(this.unit.clone());\n\n\t\tthis.polymer.rewriteMolecule(); // housekeeping\n\t\tthis.callbackApply(this);\n\t}\n\n\tprivate applyRemove():void\n\t{\n\t\tif (this.currentID) this.polymer.removeUnit(this.currentID);\n\t\tthis.callbackApply(this);\n\t}\n\n\tprivate renderUnit():void\n\t{\n\t\tlet umol = this.umol.clone();\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tlet effects = new RenderEffects();\n\t\teffects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n\t\teffects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n\t\teffects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n\t\teffects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n\t\teffects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n\n\t\tlet borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n\t\tlet outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n\n\t\tfor (let n = 1; n <= umol.numAtoms; n++)\n\t\t{\n\t\t\tlet bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n\t\t\tif (bidx >= 0)\n\t\t\t{\n\t\t\t\teffects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1); //(bidx + 1).toString();\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x008000;\n\t\t\t\teffects.atomDecoSize[n - 1] = 0.5;\n\t\t\t}\n\t\t\tif (oidx >= 0)\n\t\t\t{\n\t\t\t\tumol.setAtomCharge(n, 0);\n\t\t\t\tumol.setAtomUnpaired(n, 0);\n\t\t\t\tumol.setAtomIsotope(n, 0);\n\t\t\t\teffects.atomCircleSz[n - 1] = 0.1;\n\t\t\t\teffects.atomCircleCol[n - 1] = 0xFF00FF;\n\t\t\t\teffects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1); //(oidx + 1).toString();\n\t\t\t\teffects.atomDecoCol[n - 1] = 0x800080;\n\t\t\t\teffects.atomDecoSize[n - 1] = 0.5;\n\t\t\t\tumol.setAtomElement(n, 'C');\n\t\t\t}\n\t\t}\n\t\tlet layout = new ArrangeMolecule(umol, measure, policy, effects);\n\t\tlayout.arrange();\n\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\tlet gfx = new MetaVector();\n\n\t\tif (this.unit.bondConn)\n\t\t{\n\t\t\tconst LINES:[number, number, number, number, boolean][] =\n\t\t\t[\n\t\t\t\t[0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n\t\t\t\t[0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n\t\t\t];\n\t\t\tfor (let [i1, i2, col, sz, circle] of LINES)\n\t\t\t{\n\t\t\t\tlet a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n\t\t\t\tlet a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n\t\t\t\tlet p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n\t\t\t\tgfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n\t\t\t\tif (circle)\n\t\t\t\t{\n\t\t\t\t\tfor (let f of [0.2, 0.4, 0.6, 0.8])\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n\t\t\t\t\t\tgfx.drawOval(mx, my, 2, 2, col, sz, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnew DrawMolecule(layout, gfx).draw();\n\n\t\tgfx.normalise();\n\n\t\tthis.divPreview.empty();\n\t\tdom(gfx.createSVG()).appendTo(this.divPreview).css({'pointer-events': 'none'});\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\n\n/*\n\tSupporting widget for editing extra/transient fields, from either atoms or bonds.\n*/\n\nexport class ExtraFieldsWidget extends Widget\n{\n\tprivate divFields:DOM;\n\n\tconstructor(private fields:string[])\n\t{\n\t\tsuper();\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divFields = dom('<div/>').appendTo(this.contentDOM);\n\t\tthis.fillTable();\n\n\t\tlet divButtons = dom('<div/>').appendTo(this.contentDOM).css({'text-align': 'center'});\n\t\tlet btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n\t\tbtnExtra.onClick(() =>\n\t\t{\n\t\t\tthis.fields.push(Molecule.PREFIX_EXTRA);\n\t\t\tthis.fillTable();\n\t\t});\n\t\t//divButtons.append(' ');\n\t\tlet btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({'margin-left': '0.5em'});\n\t\tbtnTransient.onClick(() =>\n\t\t{\n\t\t\tthis.fields.push(Molecule.PREFIX_TRANSIENT);\n\t\t\tthis.fillTable();\n\t\t});\n\t}\n\n\tpublic getExtraFields():string[]\n\t{\n\t\tlet extra:string[] = [];\n\t\tfor (let field of this.fields) if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1) extra.push(field);\n\t\treturn extra;\n\t}\n\n\tpublic getTransientFields():string[]\n\t{\n\t\tlet transient:string[] = [];\n\t\tfor (let field of this.fields) if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1) transient.push(field);\n\t\treturn transient;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate fillTable():void\n\t{\n\t\tthis.divFields.empty();\n\t\tif (this.fields.length == 0) return;\n\n\t\tlet table = dom('<table/>').appendTo(this.divFields).css({'width': '100%'});\n\t\tlet tr = dom('<tr/>').appendTo(table);\n\t\tdom('<td/>').appendTo(tr).css({'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline'}).setText('Type');\n\t\tdom('<td/>').appendTo(tr).css({'font-weight': 'bold', 'text-decoration': 'underline'}).setText('Value');\n\n\t\tfor (let n = 0; n < this.fields.length; n++)\n\t\t{\n\t\t\tlet strType = '?', strValue = '';\n\t\t\tif (this.fields[n].length > 0)\n\t\t\t{\n\t\t\t\tstrType = this.fields[n].charAt(0);\n\t\t\t\tstrValue = this.fields[n].substring(1);\n\t\t\t}\n\n\t\t\ttr = dom('<tr/>').appendTo(table);\n\t\t\tlet tdType = dom('<td/>').appendTo(tr).css({'text-align': 'right'}), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n\n\t\t\tdom('<span/>').appendTo(tdType).css({'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0'}).setText(strType);\n\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(tdValue).css({'width': '100%', 'font': 'inherit'});\n\t\t\tinput.setValue(strValue);\n\t\t\tinput.onInput(() => {this.fields[n] = strType + input.getValue();});\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({'margin-left': '0.5em'});\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.fields.splice(n, 1);\n\t\t\t\tthis.fillTable();\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {GeomUtil} from '../util/Geom';\nimport {Theme} from '../util/Theme';\nimport {angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tGeometry editing widget to support atom/bond editing dialogs.\n*/\n\nexport enum GeomWidgetType\n{\n\tAtom,\n\tBond,\n}\n\nexport enum GeomWidgetSelType\n{\n\tPosition,\n\tLink,\n\tTorsion,\n}\n\nexport interface GeomWidgetSelection\n{\n\ttype:GeomWidgetSelType;\n\tidx:number;\n}\n\nexport class GeomWidget extends Widget\n{\n\tpublic callbackSelect:(sel:GeomWidgetSelection) => void;\n\tpublic selected:GeomWidgetSelection;\n\n\tprivate atomSubset:number[];\n\tprivate scale:number;\n\tprivate posX:number[] = [];\n\tprivate posY:number[] = [];\n\tprivate posRad:number;\n\tprivate linkA:number[] = [];\n\tprivate linkB:number[] = [];\n\tprivate torsA:number[] = [];\n\tprivate torsB:number[] = [];\n\tprivate hovered:GeomWidgetSelection = null;\n\n\tprivate divDiagram:DOM;\n\n\tconstructor(private type:GeomWidgetType, private mol:Molecule, private idx:number)\n\t{\n\t\tsuper();\n\n\t\tif (type == GeomWidgetType.Atom)\n\t\t{\n\t\t\tconst atom = idx;\n\t\t\tlet adj = mol.atomAdjList(atom);\n\t\t\tthis.atomSubset = [atom, ...adj];\n\t\t\tfor (let b of mol.atomAdjBonds(atom))\n\t\t\t{\n\t\t\t\tthis.linkA.push(0);\n\t\t\t\tthis.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n\t\t\t}\n\t\t\tlet theta:number[] = [];\n\t\t\tfor (let a of adj) theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n\t\t\tlet order = Vec.idxSort(theta);\n\t\t\tfor (let n = 0; n < order.length; n++)\n\t\t\t{\n\t\t\t\tthis.torsA.push(order[n] + 1);\n\t\t\t\tthis.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n\t\t\t}\n\t\t\tthis.selected = {type: GeomWidgetSelType.Position, idx: 0};\n\t\t}\n\t\telse // Bond\n\t\t{\n\t\t\tconst bond = idx;\n\t\t\tlet a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n\t\t\tthis.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n\t\t\tlet link = (a1:number, a2:number) =>\n\t\t\t{\n\t\t\t\tthis.linkA.push(this.atomSubset.indexOf(a1));\n\t\t\t\tthis.linkB.push(this.atomSubset.indexOf(a2));\n\t\t\t};\n\t\t\tlink(a1, a2);\n\t\t\tfor (let a of mol.atomAdjList(a1)) if (a != a2) link(a1, a);\n\t\t\tfor (let a of mol.atomAdjList(a2)) if (a != a1) link(a2, a);\n\t\t\tthis.selected = {type: GeomWidgetSelType.Link, idx: 0};\n\t\t}\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet divOuter = dom('<div/>').appendTo(this.contentDOM).css({'text-align': 'center'});\n\t\tthis.divDiagram = dom('<div/>').appendTo(divOuter).css({'display': 'inline-block'});\n\t\tthis.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n\t\tthis.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n\n\t\tthis.redraw();\n\t}\n\n\t// return the atom(s) that correspond to certain types\n\tpublic selectionAtoms(sel:GeomWidgetSelection):number[]\n\t{\n\t\tconst atoms = this.atomSubset;\n\t\tif (sel.type == GeomWidgetSelType.Position) return [atoms[sel.idx]];\n\t\tif (sel.type == GeomWidgetSelType.Link) return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n\t\tif (sel.type == GeomWidgetSelType.Torsion) return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate redraw():void\n\t{\n\t\tthis.divDiagram.empty();\n\n\t\tlet w = 250, h = 250; // customise?\n\t\tthis.posX = [];\n\t\tthis.posY = [];\n\t\tconst ANG_RAD = 0.25;\n\t\tfor (let a of this.atomSubset)\n\t\t{\n\t\t\tthis.posX.push(this.mol.atomX(a));\n\t\t\tthis.posY.push(this.mol.atomY(a));\n\t\t}\n\t\tlet loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n\t\tlet loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n\t\tthis.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n\t\tlet dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n\t\tfor (let n = 0; n < this.atomSubset.length; n++)\n\t\t{\n\t\t\tthis.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n\t\t\tthis.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n\t\t}\n\t\tthis.posRad = ANG_RAD * this.scale;\n\n\t\tlet gfx = new MetaVector();\n\t\tgfx.setSize(w, h);\n\n\t\tlet fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n\t\tfor (let n = 0; n < this.atomSubset.length; n++)\n\t\t{\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n\t\t\telse\n\t\t\t\tgfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n\t\t}\n\n\t\tfor (let showsel of [1, 2, 3]) for (let n = 0; n < this.linkA.length; n++)\n\t\t{\n\t\t\tlet x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n\t\t\tlet x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n)\n\t\t\t{\n\t\t\t\tif (showsel == 3)\n\t\t\t\t{\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n)\n\t\t\t{\n\t\t\t\tif (showsel == 2)\n\t\t\t\t{\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n\t\t\t\t\tgfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (showsel == 1) gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < this.torsA.length; n++)\n\t\t{\n\t\t\tlet cx = this.posX[0], cy = this.posY[0];\n\t\t\tlet dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n\t\t\tlet dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n\n\t\t\tlet rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n\t\t\tlet theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n\t\t\tlet ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n\n\t\t\tlet px:number[], py:number[], pf:boolean[];\n\t\t\tif (dtheta > 0) // short angle\n\t\t\t{\n\t\t\t\tlet [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n\t\t\t\tpx = Vec.add([ox1, ax1, ax2, ox2], cx);\n\t\t\t\tpy = Vec.add([oy1, ay1, ay2, oy2], cy);\n\t\t\t\tpf = [false, true, true, false];\n\t\t\t}\n\t\t\telse // long angle, need to do in two parts\n\t\t\t{\n\t\t\t\tlet thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n\t\t\t\tlet oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n\n\t\t\t\tlet [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n\t\t\t\tlet [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n\t\t\t\tpx = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n\t\t\t\tpy = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n\t\t\t\tpf = [false, true, true, false, true, true, false];\n\t\t\t}\n\n\t\t\tif (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n)\n\t\t\t{\n\t\t\t\tgfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n\t\t\t\tgfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t\t}\n\t\t\telse if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n)\n\t\t\t{\n\t\t\t\tgfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n\t\t\t\tgfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t\t}\n\t\t\telse gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n\t\t}\n\n\t\tthis.divDiagram.empty();\n\t\tlet svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({'pointer-events': 'none'});\n\t}\n\n\tprivate mouseClick(xy:number[]):void\n\t{\n\t\tevent.stopPropagation();\n\t\tif (this.type == GeomWidgetType.Bond) return; // no selection for bonds (for now)\n\n\t\tlet which = this.whichSelection(xy[0], xy[1]);\n\t\tif (!which) return; // don't want clearing of selection (for now)\n\t\tif (!this.sameSelection(this.selected, which))\n\t\t{\n\t\t\tthis.selected = which;\n\t\t\tthis.hovered = null;\n\t\t\tthis.redraw();\n\t\t\tthis.callbackSelect(which);\n\t\t}\n\t}\n\tprivate mouseMove(xy:number[]):void\n\t{\n\t\tif (this.type == GeomWidgetType.Bond) return; // no selection for bonds (for now)\n\n\t\tlet which = this.whichSelection(xy[0], xy[1]);\n\t\tif (which && this.sameSelection(which, this.selected)) which = null;\n\t\tif (!this.sameSelection(this.hovered, which))\n\t\t{\n\t\t\tthis.hovered = which;\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\tprivate whichSelection(x:number, y:number):GeomWidgetSelection\n\t{\n\t\tlet cx = this.posX[0], cy = this.posY[0];\n\t\tif (norm_xy(x - cx, y - cy) <= this.posRad) return {type: GeomWidgetSelType.Position, idx: 0};\n\t\tlet maxRad = 0;\n\t\tfor (let n = 1; n < this.atomSubset.length; n++) maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n\t\tif (norm_xy(x - cx, y - cy) > maxRad) return null;\n\n\t\tlet theta = Math.atan2(y - cy, x - cx);\n\t\tlet closeSel:GeomWidgetSelection = null, closeDelta = Number.POSITIVE_INFINITY;\n\n\t\tfor (let n = 0; n < this.linkB.length; n++)\n\t\t{\n\t\t\tlet delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n\t\t\tif (delta < 10 * DEGRAD && delta < closeDelta)\n\t\t\t{\n\t\t\t\tcloseSel = {type: GeomWidgetSelType.Link, idx: n};\n\t\t\t\tcloseDelta = delta;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < this.torsA.length; n++)\n\t\t{\n\t\t\tlet theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n\t\t\tlet theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n\t\t\tlet midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n\t\t\tlet delta = Math.abs(angleDiff(midtheta, theta));\n\t\t\tif (delta < closeDelta)\n\t\t\t{\n\t\t\t\tcloseSel = {type: GeomWidgetSelType.Torsion, idx: n};\n\t\t\t\tcloseDelta = delta;\n\t\t\t}\n\t\t}\n\n\t\treturn closeSel;\n\t}\n\n\t// returns true if selections are the same\n\tprivate sameSelection(sel1:GeomWidgetSelection, sel2:GeomWidgetSelection):boolean\n\t{\n\t\tif (sel1 == null && sel2 == null) return true;\n\t\tif (sel1 == null || sel2 == null) return false;\n\t\treturn sel1.type == sel2.type && sel1.idx == sel2.idx;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {GeomUtil} from '../util/Geom';\nimport {angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n\tGiven a metal centre, and some number of atoms that are (or should be) connected to the metal, finds an aesthetically acceptable arrangement. It\n\tassumes that the ligands themselves are arranged and only need to be oriented. If there are metal-bonded atoms that are not listed in the parameter,\n\tthese will be treated as fixed obstacles.\n*/\n\ninterface Ligand\n{\n\tatoms:number[]; // all atoms of the ligand\n\tattach:number[]; // attachment points to the metal\n\tavgTheta?:number; // average extension of the ligand attachment point(s)\n}\n\nexport class MetalLigate\n{\n\tprivate mol:Molecule;\n\tprivate ligands:Ligand[] = [];\n\n\t// ----------------- public methods -----------------\n\n\tconstructor(mol:Molecule, private metalAtom:number, private ligandAttach:number[])\n\t{\n\t\tthis.mol = mol.clone();\n\t}\n\n\t// creates enough fragments to cover all of the incoming atoms; throws a DepictorFaultException if anything goes wrong\n\tpublic generate():Molecule\n\t{\n\t\tconst {mol, metalAtom, ligandAttach, ligands} = this;\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.isolateNode(metalAtom - 1);\n\t\tfor (let cc of g.calculateComponentGroups())\n\t\t{\n\t\t\tVec.addTo(cc, 1);\n\t\t\tlet anything = false;\n\t\t\tfor (let a of ligandAttach) if (cc.indexOf(a) >= 0) {anything = true; break;}\n\t\t\tif (!anything) continue;\n\n\t\t\tlet lig:Ligand = {atoms: cc, attach: []};\n\t\t\tlig.atoms = cc;\n\t\t\tlet anyAttached = false;\n\t\t\tfor (let a of lig.atoms) if (mol.findBond(a, metalAtom) > 0) {anyAttached = true; break;}\n\t\t\tfor (let a of lig.atoms)\n\t\t\t{\n\t\t\t\tlet bonded = mol.findBond(a, metalAtom) > 0;\n\t\t\t\tif (bonded || (!anyAttached && ligandAttach.includes(a))) lig.attach.push(a);\n\t\t\t}\n\t\t\tligands.push(lig);\n\n\t\t\tfor (let a of lig.attach) if (mol.findBond(a, metalAtom) == 0) this.makeLigandBond(a);\n\t\t}\n\n\t\tif (ligands.length == 0) throw new Error('No ligand atoms');\n\n\t\t// figure out angular projections for ligands (both fixed and motile)\n\n\t\tlet otherLigands = mol.atomAdjList(metalAtom);\n\t\tfor (let lig of ligands) otherLigands = Vec.exclude(otherLigands, lig.attach);\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet otherTheta:number[] = new Array(otherLigands.length);\n\t\tfor (let n = 0; n < otherLigands.length; n++) otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n\n\t\tfor (let lig of ligands)\n\t\t{\n\t\t\tif (lig.attach.length == 1)\n\t\t\t{\n\t\t\t\tlet a = lig.attach[0];\n\t\t\t\tlig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n\t\t\t\tthis.orientLigand(lig);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// figure out the average, without recursion errors\n\t\t\t\tlet theta:number[] = new Array(lig.attach.length);\n\t\t\t\tfor (let n = 0; n < lig.attach.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet a = lig.attach[n];\n\t\t\t\t\ttheta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n\t\t\t\t}\n\t\t\t\ttheta = GeomUtil.sortAngles(theta);\n\t\t\t\tlet base = theta[0];\n\t\t\t\tfor (let n = 0; n < theta.length; n++) theta[n] = angleDiffPos(theta[n], base);\n\t\t\t\tlig.avgTheta = base + Vec.sum(theta) / theta.length;\n\n\t\t\t\tthis.orientLigand(lig);\n\t\t\t}\n\t\t}\n\n\t\t// overall cases: arrange around as many fixed references as necessary\n\n\t\tif (otherLigands.length == 0)\n\t\t{\n\t\t\tligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n\t\t\tthis.arrangeLigandsFree(ligands);\n\t\t}\n\t\telse if (otherLigands.length == 1)\n\t\t{\n\t\t\tligands.sort((l1, l2) =>\n\t\t\t{\n\t\t\t\tlet diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n\t\t\t\tlet diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n\t\t\t\treturn signum(diff1 - diff2);\n\t\t\t});\n\t\t\tthis.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet otherOrder = Vec.idxSort(otherTheta);\n\t\t\tfor (let n = 0; n < otherOrder.length; n++)\n\t\t\t{\n\t\t\t\tlet nn = (n + 1) % otherOrder.length;\n\t\t\t\tlet theta = otherTheta[otherOrder[n]];\n\t\t\t\tlet extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n\n\t\t\t\tlet batch:Ligand[] = [];\n\t\t\t\tfor (let lig of ligands)\n\t\t\t\t{\n\t\t\t\t\tlet diff = angleDiffPos(lig.avgTheta, theta);\n\t\t\t\t\tif (diff < extent) batch.push(lig);\n\t\t\t\t}\n\t\t\t\tif (batch.length == 0) continue;\n\t\t\t\tbatch.sort((l1, l2) =>\n\t\t\t\t{\n\t\t\t\t\tlet diff1 = angleDiffPos(l1.avgTheta, theta);\n\t\t\t\t\tlet diff2 = angleDiffPos(l2.avgTheta, theta);\n\t\t\t\t\treturn signum(diff1 - diff2);\n\t\t\t\t});\n\t\t\t\tthis.arrangeLigandsRange(batch, theta, extent, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.resolveClashes();\n\n\t\treturn mol;\n\t}\n\n\t// ----------------- private methods -----------------\n\n\t// make ligand atom bonded to metal; pick a reasonable bond order\n\tprivate makeLigandBond(ligAtom:number):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n\t\tif (mchg > 0 && lchg < 0)\n\t\t{\n\t\t\tmol.setAtomCharge(metalAtom, mchg - 1);\n\t\t\tmol.setAtomCharge(ligAtom, lchg + 1);\n\t\t\tmol.addBond(metalAtom, ligAtom, 1);\n\t\t\treturn;\n\t\t}\n\t\tif (mchg < 0 && lchg > 0)\n\t\t{\n\t\t\tmol.setAtomCharge(metalAtom, mchg + 1);\n\t\t\tmol.setAtomCharge(ligAtom, lchg - 1);\n\t\t\tmol.addBond(metalAtom, ligAtom, 1);\n\t\t\treturn;\n\t\t}\n\n\t\tlet order = 0;\n\t\tif (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0) order = 1;\n\t\tmol.addBond(metalAtom, ligAtom, order);\n\t}\n\n\t// assuming multiple attachment points, orient the ligand so that each of its attachment points are equidistant from the metal, using the average\n\t// theta value as the guideline\n\tprivate orientLigand(lig:Ligand):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet lsz = lig.atoms.length, asz = lig.attach.length;\n\t\tlet idxAttach:number[] = new Array(asz);\n\t\tfor (let n = 0; n < asz; n++) idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n\n\t\t// step 1: extend the ligand out along its axis, so the bonds are long\n\t\tlet lx:number[] = new Array(lsz), ly:number[] = new Array(lsz);\n\t\tlet ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n\t\tlet molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n\t\tlet dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlx[n] = mol.atomX(lig.atoms[n]) + dx;\n\t\t\tly[n] = mol.atomY(lig.atoms[n]) + dy;\n\t\t}\n\n\t\t// step 2: rotate in increments to get approximately the best orientation, in order to find the preferred ordering\n\t\tlet cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n\t\tlet weight:number[] = [];\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlet closest = Number.POSITIVE_INFINITY;\n\t\t\tfor (let idx of idxAttach) closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n\t\t\tweight.push(1.0 / (1 + Math.sqrt(closest)));\n\t\t}\n\t\tlet bestScore = Number.POSITIVE_INFINITY;\n\t\tlet bestLX:number[] = null, bestLY:number[] = null;\n\t\tfor (let theta = 0; theta < 360; theta += 15)\n\t\t{\n\t\t\tlet cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n\t\t\tlet rx:number[] = new Array(lsz), ry:number[] = new Array(lsz);\n\t\t\tlet score = 0;\n\t\t\tfor (let n = 0; n < lsz; n++)\n\t\t\t{\n\t\t\t\tlet x = lx[n] - cx, y = ly[n] - cy;\n\t\t\t\trx[n] = cx + x * cosTheta - y * sinTheta;\n\t\t\t\try[n] = cy + x * sinTheta + y * cosTheta;\n\t\t\t\tlet dist = norm_xy(rx[n] - mx, ry[n] - my);\n\t\t\t\tif (lig.attach.indexOf(lig.atoms[n]) >= 0) score += dist; else score -= dist * weight[n];\n\t\t\t}\n\t\t\tif (score < bestScore)\n\t\t\t{\n\t\t\t\tbestScore = score;\n\t\t\t\tbestLX = rx;\n\t\t\t\tbestLY = ry;\n\t\t\t}\n\t\t}\n\t\tlx = bestLX;\n\t\tly = bestLY;\n\n\t\tif (asz == 1)\n\t\t{\n\t\t\t// shrink the bond length back down to normal\n\t\t\tdx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n\t\t\tdy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n\t\t\tVec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n\t\t\tVec.addTo(ly, my + dy - ly[idxAttach[0]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// step 3: get an ordering of the attachment angles\n\t\t\tlet attTheta:number[] = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n\t\t\tfor (let n = 0; n < asz; n++)\n\t\t\t{\n\t\t\t\tlet ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n\t\t\t\tattTheta[n] = Math.atan2(oy, ox);\n\t\t\t\tif (asz > 2)\n\t\t\t\t{\n\t\t\t\t\tattDist[n] = norm_xy(ox, oy);\n\t\t\t\t\tattDX[n] = ox / attDist[n];\n\t\t\t\t\tattDY[n] = oy / attDist[n];\n\t\t\t\t}\n\t\t\t}\n\t\t\tVec.addTo(attDist, -Vec.min(attDist));\n\t\t\tlet orderAttach = GeomUtil.idxSortAngles(attTheta);\n\n\t\t\t// step 4: get a mapping onto desired coords, and run with it\n\t\t\tlet srcX:number[] = new Array(asz), srcY:number[] = new Array(asz);\n\t\t\tlet dstX:number[] = new Array(asz), dstY:number[] = new Array(asz);\n\t\t\tlet dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n\t\t\tfor (let n = 0; n < asz; n++)\n\t\t\t{\n\t\t\t\tsrcX[n] = lx[idxAttach[orderAttach[n]]];\n\t\t\t\tsrcY[n] = ly[idxAttach[orderAttach[n]]];\n\t\t\t\tdstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n\t\t\t\tdstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n\n\t\t\t\ttheta += dtheta / (asz - 1);\n\t\t\t}\n\t\t\tlet tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n\t\t\tfor (let n = 0; n < lsz; n++)\n\t\t\t{\n\t\t\t\tlet [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n\t\t\t\tlx[n] = x;\n\t\t\t\tly[n] = y;\n\t\t\t}\n\t\t}\n\n\t\tfor (let n = 0; n < lsz; n++) mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n\t}\n\n\t// arrange the given ligands in order, given that there are no reference constraints, so use the initial vectors\n\tprivate arrangeLigandsFree(batch:Ligand[]):void\n\t{\n\t\tif (batch.length == 1) return; // leave it be\n\n\t\tlet refTheta = Vec.last(batch).avgTheta;\n\t\trefTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n\t\tthis.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n\t}\n\n\t// arrange the given ligands in order, between the indicated range\n\tprivate arrangeLigandsRange(batch:Ligand[], refTheta:number, refSpan:number, bounded:boolean):void\n\t{\n\t\tconst {mol, metalAtom} = this;\n\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\n\t\tlet bsz = batch.length;\n\t\tlet thetaMin:number[] = new Array(bsz), thetaSpan:number[] = new Array(bsz);\n\n\t\tlet ligandSpan = 0;\n\n\t\tfor (let n = 0; n < bsz; n++)\n\t\t{\n\t\t\tlet [theta1, theta2] = this.determineThetaBounds(batch[n]);\n\t\t\tthetaMin[n] = theta1;\n\t\t\tthetaSpan[n] = angleDiffPos(theta2, theta1);\n\t\t\tligandSpan += thetaSpan[n];\n\t\t}\n\n\t\tlet residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n\t\tlet theta = refTheta + (bounded ? residual : 0.5 * residual);\n\t\tfor (let n = 0; n < bsz; n++)\n\t\t{\n\t\t\tlet rotTheta = theta - thetaMin[n];\n\t\t\tlet cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n\n\t\t\tfor (let a of batch[n].atoms)\n\t\t\t{\n\t\t\t\tlet x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n\t\t\t\tmol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n\t\t\t}\n\n\t\t\ttheta += thetaSpan[n] + residual;\n\t\t}\n\t}\n\n\t// returns {lowTheta,highTheta} for the ligand based on its attachment points\n\tprivate determineThetaBounds(lig:Ligand):[number, number]\n\t{\n\t\tconst {mol, metalAtom} = this;\n\t\tlet theta:number[] = [];\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\t\tfor (let n = 0; n < lig.attach.length; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(lig.attach[n]) - mx;\n\t\t\tlet y = mol.atomY(lig.attach[n]) - my;\n\t\t\ttheta.push(Math.atan2(y, x));\n\t\t}\n\t\tVec.sort(theta);\n\n\t\tlet bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n\n\t\tfor (let n = 0; n < theta.length; n++)\n\t\t{\n\t\t\tlet score = 0;\n\t\t\tfor (let i = 0; i < theta.length - 1; i++) score += angleDiffPos(theta[i + 1], theta[i]);\n\t\t\tif (score < bestScore)\n\t\t\t{\n\t\t\t\tbestScore = score;\n\t\t\t\tbestMin = Vec.first(theta);\n\t\t\t\tbestMax = Vec.last(theta);\n\t\t\t}\n\t\t\ttheta.push(theta.shift());\n\t\t}\n\n\t\treturn [bestMin, bestMax];\n\t}\n\n\t// if any of the ligand blocks clash, keep pushing them outward until resolution\n\tprivate resolveClashes():void\n\t{\n\t\tconst {mol, metalAtom, ligands} = this;\n\n\t\tconst na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n\n\t\tlet ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb); // -1=other component, 0=metal, >0=ligand\n\t\tfor (let n = 1; n <= na; n++) if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom)) ablk[n - 1] = 0;\n\t\tfor (let n = 0; n < lsz; n++) for (let a of ligands[n].atoms) ablk[a - 1] = n + 1;\n\t\tfor (let n = 1; n <= nb; n++)\n\t\t{\n\t\t\tlet blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n\t\t\tif (blk1 < 0 || blk2 < 0) {}\n\t\t\telse if (blk1 == blk2) bblk[n - 1] = blk1;\n\t\t}\n\n\t\tlet bumpDX:number[] = new Array(lsz), bumpDY:number[] = new Array(lsz);\n\t\tlet mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n\t\tfor (let n = 0; n < lsz; n++)\n\t\t{\n\t\t\tlet lig = ligands[n];\n\t\t\tlet dx = 0, dy = 0;\n\t\t\tfor (let a of lig.attach)\n\t\t\t{\n\t\t\t\tdx += mol.atomX(a) - mx;\n\t\t\t\tdy += mol.atomY(a) - my;\n\t\t\t}\n\t\t\tdx /= lig.attach.length;\n\t\t\tdy /= lig.attach.length;\n\t\t\tlet invDist = 1.0 / norm_xy(dx, dy);\n\t\t\tbumpDX[n] = dx * 0.5 * invDist;\n\t\t\tbumpDY[n] = dy * 0.5 * invDist;\n\t\t}\n\n\t\tconst CLOSE_SQ = sqr(0.5);\n\n\t\tfor (let count = 0; count < 12; count++)\n\t\t{\n\t\t\tlet tainted = Vec.booleanArray(false, lsz);\n\t\t\touter: for (let i = 0; i < na - 1; i++)\n\t\t\t{\n\t\t\t\tif (ablk[i] < 0) continue;\n\t\t\t\tfor (let j = i + 1; j < na; j++) if (ablk[j] >= 0 && ablk[j] != ablk[i])\n\t\t\t\t{\n\t\t\t\t\tif (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (ablk[i] > 0) tainted[ablk[i] - 1] = true;\n\t\t\t\t\t\tif (ablk[j] > 0) tainted[ablk[j] - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.allTrue(tainted)) break outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Vec.anyFalse(tainted)) outer: for (let i = 0; i < nb - 1; i++)\n\t\t\t{\n\t\t\t\tif (bblk[i] < 0) continue;\n\t\t\t\tlet x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n\t\t\t\tlet x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n\n\t\t\t\tfor (let j = i + 1; j < nb; j++) if (bblk[j] >= 0 && bblk[j] != bblk[i])\n\t\t\t\t{\n\t\t\t\t\tlet x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n\t\t\t\t\tlet x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n\t\t\t\t\tif (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (bblk[i] > 0) tainted[bblk[i] - 1] = true;\n\t\t\t\t\t\tif (bblk[j] > 0) tainted[bblk[j] - 1] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (Vec.allTrue(tainted)) break outer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Vec.allFalse(tainted)) break;\n\n\t\t\tfor (let n = 0; n < lsz; n++) if (tainted[n])\n\t\t\t{\n\t\t\t\tfor (let a of ligands[n].atoms)\n\t\t\t\t{\n\t\t\t\t\tmol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer} from '../data/AbbrevContainer';\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {Chemistry} from '../mol/Chemistry';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {QueryTypeAtom, QueryUtil} from '../mol/QueryUtil';\nimport {SketchUtil} from '../mol/SketchUtil';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {MetalLigate} from './MetalLigate';\nimport {Sketcher} from './Sketcher';\nimport {FusionPermutation, TemplateFusion} from './TemplateFusion';\n\n/*\n\tMoleculeActivity: command-oriented modifications of the current molecular state.\n\n\tThe invocation differs from the iOS/BlackBerry equivalents: rather than dividing each task into 2 parts, for testing\n\twhether an action is possible and actually carrying it out, there are two different functions: evaluate and execute.\n\tEvaluation is a very shallow analysis of whether a command has any chance of being relevant for the current state. If\n\tthe amount of effort involved in figuring it out is non-trivial (e.g. requires an RPC), it will just return yes. The\n\texecution mode is charged with the duty of updating the EditMolecule state, or reporting any errors that might occur.\n*/\n\nexport enum ActivityType\n{\n\tDelete = 1,\n\tClear,\n\tCopy,\n\tCut,\n\tSelectAll,\n\tSelectNone,\n\tSelectPrevComp,\n\tSelectNextComp,\n\tSelectSide,\n\tSelectGrow,\n\tSelectShrink,\n\tSelectChain,\n\tSelectSmRing,\n\tSelectRingBlk,\n\tSelectCurElement,\n\tSelectToggle,\n\tSelectUnCurrent,\n\tElement,\n\tAtomPos,\n\tCharge,\n\tConnect,\n\tDisconnect,\n\tMetalLigate,\n\tBondOrder,\n\tBondType,\n\tBondGeom,\n\tBondAtom,\n\tBondSwitch,\n\tBondRotate,\n\tBondAddTwo,\n\tBondInsert,\n\tJoin,\n\tNudge,\n\tNudgeLots,\n\tNudgeFar,\n\tFlip,\n\tScale,\n\tRotate,\n\tBondDist,\n\tAlignAngle,\n\tAlignRegular,\n\tAdjustTorsion,\n\tMove,\n\tRing,\n\t/*BondDist,\n\tCycleBond,*/\n\tTemplateFusion,\n\tAbbrevTempl,\n\tAbbrevGroup,\n\tAbbrevFormula,\n\tAbbrevClear,\n\tAbbrevExpand,\n\tBondArtifactPath,\n\tBondArtifactRing,\n\tBondArtifactArene,\n\tBondArtifactClear,\n\tPolymerBlock,\n\tAddHydrogens,\n\tRemoveHydrogens,\n\tQueryClear,\n\tQueryCopy,\n\tQueryPaste,\n\tQuerySetAtom,\n\tQuerySetBond,\n\tQueryBondAny,\n\tSproutDirection,\n}\n\nexport interface SketchState\n{\n\tmol:Molecule;\n\tcurrentAtom:number;\n\tcurrentBond:number;\n\tselectedMask:boolean[];\n\n\t// only used in specific circumstances\n\tpermutations?:FusionPermutation[];\n\n\t// alternate outcome provided occasionally\n\taltmol?:Molecule;\n}\n\nexport interface TemplatePermutation\n{\n\tmol:string;\n\tdisplay:string;\n\tmolidx:number[];\n\ttemidx:number[];\n\tsrcidx:number[];\n\tmetavec?:MetaVector;\n}\n\nexport class MoleculeActivity\n{\n\tprivate subjectMask:boolean[];\n\tprivate subjectIndex:number[];\n\tprivate subjectLength:number;\n\tprivate hasSelected:boolean;\n\n\tpublic output:SketchState;\n\tpublic errmsg:string;\n\tpublic toClipboard:string = null;\n\n\tconstructor(public input:SketchState, public activity:ActivityType, private param:Record<string, any>, private owner?:Sketcher)\n\t{\n\t\tthis.output =\n\t\t{\n\t\t\tmol: null,\n\t\t\tcurrentAtom: -1,\n\t\t\tcurrentBond: -1,\n\t\t\tselectedMask: null\n\t\t};\n\n\t\tlet na = this.input.mol.numAtoms;\n\t\tif (this.input.selectedMask == null) this.input.selectedMask = Vec.booleanArray(false, na);\n\t\twhile (this.input.selectedMask.length < na) this.input.selectedMask.push(false);\n\t\tthis.subjectMask = this.input.selectedMask.slice(0);\n\t\tthis.subjectLength = Vec.maskCount(this.subjectMask);\n\t\tthis.subjectIndex = [];\n\t\tthis.hasSelected = this.subjectLength > 0;\n\n\t\tif (this.subjectLength == 0)\n\t\t{\n\t\t\tif (this.input.currentAtom > 0)\n\t\t\t{\n\t\t\t\tthis.subjectLength = 1;\n\t\t\t\tthis.subjectMask[this.input.currentAtom - 1] = true;\n\t\t\t\tthis.subjectIndex = [this.input.currentAtom];\n\t\t\t}\n\t\t\telse if (this.input.currentBond > 0)\n\t\t\t{\n\t\t\t\tlet bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n\t\t\t\tlet b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n\t\t\t\tthis.subjectLength = 2;\n\t\t\t\tthis.subjectMask[b1 - 1] = true;\n\t\t\t\tthis.subjectMask[b2 - 1] = true;\n\t\t\t\tthis.subjectIndex = [b1, b2];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.subjectIndex = Vec.maskIdx(this.subjectMask);\n\t\t\tVec.addTo(this.subjectIndex, 1);\n\t\t}\n\t}\n\n\t// provide the optional owner parameter: if defined, then it will be called after the operation is complete\n\t// (note: this is anachronistic, and should be refactored out)\n\tpublic setOwner(owner:Sketcher):void\n\t{\n\t\tthis.owner = owner;\n\t}\n\n\t// --------------------------------------- public methods ---------------------------------------\n\n\t// returns false if the activity cannot be executed; errs on the side of generosity, i.e. false positives are to be expected\n\tpublic evaluate():boolean\n\t{\n\t\t// ... actually do it...\n\t\treturn true;\n\t}\n\n\t// carries out the activity; some activities are performed immediately, while others require an RPC request; when it is finished,\n\t// the molecule state will be updated if successful, or an error will be displayed if not\n\tpublic execute():void\n\t{\n\t\tlet param = this.param;\n\n\t\tif (this.activity == ActivityType.Delete) this.execDelete();\n\t\telse if (this.activity == ActivityType.Clear) this.execClear();\n\t\telse if (this.activity == ActivityType.Copy) this.execCopy(false);\n\t\telse if (this.activity == ActivityType.Cut) this.execCopy(true);\n\t\telse if (this.activity == ActivityType.SelectAll) this.execSelectAll(true);\n\t\telse if (this.activity == ActivityType.SelectNone) this.execSelectAll(false);\n\t\telse if (this.activity == ActivityType.SelectPrevComp) this.execSelectComp(-1);\n\t\telse if (this.activity == ActivityType.SelectNextComp) this.execSelectComp(1);\n\t\telse if (this.activity == ActivityType.SelectSide) this.execSelectSide();\n\t\telse if (this.activity == ActivityType.SelectGrow) this.execSelectGrow();\n\t\telse if (this.activity == ActivityType.SelectShrink) this.execSelectShrink();\n\t\telse if (this.activity == ActivityType.SelectChain) this.execSelectChain();\n\t\telse if (this.activity == ActivityType.SelectSmRing) this.execSelectSmRing();\n\t\telse if (this.activity == ActivityType.SelectRingBlk) this.execSelectRingBlk();\n\t\telse if (this.activity == ActivityType.SelectCurElement) this.execSelectCurElement();\n\t\telse if (this.activity == ActivityType.SelectToggle) this.execSelectToggle();\n\t\telse if (this.activity == ActivityType.SelectUnCurrent) this.execSelectUnCurrent();\n\t\telse if (this.activity == ActivityType.Element) this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n\t\telse if (this.activity == ActivityType.Charge) this.execCharge(param.delta);\n\t\telse if (this.activity == ActivityType.Connect) this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n\t\telse if (this.activity == ActivityType.Disconnect) this.execDisconnect();\n\t\telse if (this.activity == ActivityType.MetalLigate) this.execMetalLigate();\n\t\telse if (this.activity == ActivityType.BondOrder) this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n\t\telse if (this.activity == ActivityType.BondType) this.execBond(1, param.type);\n\t\telse if (this.activity == ActivityType.BondGeom) this.execBondGeom(param.geom);\n\t\telse if (this.activity == ActivityType.BondAtom) this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n\t\telse if (this.activity == ActivityType.BondSwitch) this.execBondSwitch();\n\t\telse if (this.activity == ActivityType.BondRotate) this.execBondRotate();\n\t\telse if (this.activity == ActivityType.BondAddTwo) this.execBondAddTwo();\n\t\telse if (this.activity == ActivityType.BondInsert) this.execBondInsert();\n\t\telse if (this.activity == ActivityType.Join) this.execJoin();\n\t\telse if (this.activity == ActivityType.Nudge) this.execNudge(param.dir, 0.1);\n\t\telse if (this.activity == ActivityType.NudgeLots) this.execNudge(param.dir, 1);\n\t\telse if (this.activity == ActivityType.NudgeFar) this.execNudgeFar(param.dir);\n\t\telse if (this.activity == ActivityType.Flip) this.execFlip(param.axis);\n\t\telse if (this.activity == ActivityType.Scale) this.execScale(param.mag);\n\t\telse if (this.activity == ActivityType.Rotate) this.execRotate(param.theta, param.centreX, param.centreY);\n\t\telse if (this.activity == ActivityType.BondDist) this.execBondDist(param.dist);\n\t\telse if (this.activity == ActivityType.AlignAngle) this.execAlignAngle(param.angle);\n\t\telse if (this.activity == ActivityType.AlignRegular) this.execAlignRegular();\n\t\telse if (this.activity == ActivityType.AdjustTorsion) this.execAdjustTorsion(param.angle);\n\t\telse if (this.activity == ActivityType.Move) this.execMove(param.refAtom, param.deltaX, param.deltaY);\n\t\telse if (this.activity == ActivityType.Ring) this.execRing(param.ringX, param.ringY, param.aromatic);\n\t\t/*else if (this.activity == ActivityType.BondDist)\n\t\t{\n\t\t\t// !!\n\t\t}\n\t\telse if (this.activity == ActivityType.CycleBond)\n\t\t{\n\t\t\t// !!\n\t\t}*/\n\t\telse if (this.activity == ActivityType.TemplateFusion)\n\t\t{\n\t\t\tthis.execTemplateFusion(param.frag ?? Molecule.fromString(param.fragNative));\n\t\t\tif (this.owner) this.owner.setPermutations(this.output.permutations as any as TemplatePermutation[]);\n\t\t\treturn;\n\t\t}\n\t\telse if (this.activity == ActivityType.AbbrevTempl) this.execAbbrevTempl();\n\t\telse if (this.activity == ActivityType.AbbrevGroup) this.execAbbrevGroup();\n\t\telse if (this.activity == ActivityType.AbbrevFormula) this.execAbbrevFormula();\n\t\telse if (this.activity == ActivityType.AbbrevClear) this.execAbbrevClear();\n\t\telse if (this.activity == ActivityType.AbbrevExpand) this.execAbbrevExpand();\n\t\telse if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n\t\t\t\tthis.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear) this.execBondArtifact(this.activity);\n\t\telse if (this.activity == ActivityType.PolymerBlock) this.execPolymerBlock();\n\t\telse if (this.activity == ActivityType.AddHydrogens) this.execAddHydrogens();\n\t\telse if (this.activity == ActivityType.RemoveHydrogens) this.execRemoveHydrogens();\n\t\telse if (this.activity == ActivityType.QueryClear) this.execQueryClear();\n\t\telse if (this.activity == ActivityType.QueryCopy) this.execQueryCopy();\n\t\telse if (this.activity == ActivityType.QueryPaste) this.execQueryPaste();\n\t\telse if (this.activity == ActivityType.QuerySetAtom) this.execQuerySetAtom();\n\t\telse if (this.activity == ActivityType.QuerySetBond) this.execQuerySetBond();\n\t\telse if (this.activity == ActivityType.QueryBondAny) this.execQueryBondAny();\n\t\telse if (this.activity == ActivityType.SproutDirection) this.execSproutDirection(param.deltaX, param.deltaY);\n\n\t\tthis.finish();\n\t}\n\n\t// --------------------------------------- private methods ---------------------------------------\n\n\t// call this when execution has finished\n\tprivate finish():void\n\t{\n\t\tif (!this.owner) return;\n\n\t\tif (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null)\n\t\t{\n\t\t\tthis.owner.setState(this.output, true);\n\n\t\t\tif (this.errmsg != null) this.owner.showMessage(this.errmsg, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.errmsg != null) this.owner.showMessage(this.errmsg, true);\n\t\t}\n\t}\n\n\tpublic execDelete():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tthis.output.mol = mol.clone();\n\t\tthis.zapSubject();\n\n\t\t// if just a current bond, zap it\n\t\tif (this.input.currentBond > 0 && !this.hasSelected)\n\t\t{\n\t\t\tthis.output.mol.deleteBond(this.input.currentBond);\n\t\t\tthis.output.currentBond = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// if a terminal atom, bump over the selection\n\t\tif (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom)\n\t\t{\n\t\t\tlet adj = mol.atomAdjList(this.input.currentAtom);\n\t\t\tif (adj.length == 1)\n\t\t\t{\n\t\t\t\tthis.output.currentAtom = adj[0];\n\t\t\t\tif (this.output.currentAtom > this.input.currentAtom) this.output.currentAtom--;\n\t\t\t}\n\t\t}\n\n\t\t// do the deletion\n\t\tfor (let n = this.subjectLength - 1; n >= 0; n--) this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n\t}\n\n\tpublic execCopy(withCut:boolean):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tif (this.subjectLength > 0) mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n\n\t\tif (this.owner) this.owner.performCopy(mol);\n\t\telse this.toClipboard = mol.toString();\n\n\t\tif (withCut)\n\t\t{\n\t\t\tthis.zapSubject();\n\t\t\tthis.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n\t\t}\n\t}\n\n\tpublic execClear():void\n\t{\n\t\tthis.output.mol = new Molecule();\n\t\tthis.zapSubject();\n\t}\n\n\tpublic execSelectAll(all:boolean):void\n\t{\n\t\tlet same = true;\n\t\tfor (let n = 0; n < this.input.mol.numAtoms; n++) if (this.subjectMask[n] != all)\n\t\t{\n\t\t\tsame = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (same)\n\t\t{\n\t\t\tthis.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n\t\t\treturn;\n\t\t}\n\t\tthis.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n\t}\n\n\tpublic execSelectComp(dir:number):void\n\t{\n\t\tlet cclist = MolUtil.componentList(this.input.mol);\n\t\tif (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'All atoms already selected.';\n\t\t\treturn;\n\t\t}\n\t\tlet sel = this.pickSelectedGroup(cclist, dir);\n\t\tthis.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n\t\tfor (let n = 0; n < cclist[sel].length; n++) this.output.selectedMask[cclist[sel][n] - 1] = true;\n\t}\n\n\tpublic execSelectSide():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tlet mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n\n\t\tif (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Current atom has no neighbours.';\n\t\t\treturn;\n\t\t}\n\t\tif (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1)\n\t\t{\n\t\t\tthis.errmsg = 'Current bond has no neighbours.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n\t\tlet sel = this.pickSelectedGroup(sides, 1);\n\t\tthis.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let n = 0; n < sides[sel].length; n++) this.output.selectedMask[sides[sel][n] - 1] = true;\n\t}\n\n\tpublic execSelectGrow():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (!this.hasSelected)\n\t\t{\n\t\t\tif (currentAtom > 0)\n\t\t\t{\n\t\t\t\tthis.output.selectedMask[currentAtom - 1] = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n\t\t\t\tthis.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\t\tif (this.input.selectedMask[bfr] && !this.input.selectedMask[bto]) this.output.selectedMask[bto] = true;\n\t\t\t\telse if (this.input.selectedMask && !this.input.selectedMask[bfr]) this.output.selectedMask[bfr] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execSelectShrink():void\n\t{\n\t\tif (!this.requireSelected()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tlet count = Vec.numberArray(0, mol.numAtoms);\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto]) continue;\n\t\t\tcount[bfr]++;\n\t\t\tcount[bto]++;\n\t\t}\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\t\tfor (let n = 0; n < mol.numAtoms; n++) this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n\t}\n\n\tpublic execSelectChain():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n\t\t\tif (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0) this.output.selectedMask[bto] = true;\n\t\t\telse if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0) this.output.selectedMask[bfr] = true;\n\t\t}\n\t}\n\n\tpublic execSelectSmRing():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tfor (let r = 3; r <= 8; r++)\n\t\t{\n\t\t\tlet rings = this.input.mol.findRingsOfSize(r);\n\t\t\tfor (let i = 0; i < rings.length; i++)\n\t\t\t{\n\t\t\t\tlet any = false;\n\t\t\t\tfor (let j = 0; j < rings[i].length; j++) if (this.subjectMask[rings[i][j] - 1])\n\t\t\t\t{\n\t\t\t\t\tany = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (any) for (let j = 0; j < rings[i].length; j++) this.output.selectedMask[rings[i][j] - 1] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execSelectRingBlk():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tlet maxRB = 0;\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n\t\tif (maxRB == 0) return;\n\n\t\tlet gotRB = Vec.booleanArray(false, maxRB);\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet rb = mol.atomRingBlock(n);\n\t\t\tif (rb > 0 && this.subjectMask[n - 1]) gotRB[rb - 1] = true;\n\t\t}\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t{\n\t\t\tlet rb = mol.atomRingBlock(n);\n\t\t\tif (rb > 0 && gotRB[rb - 1]) this.output.selectedMask[n - 1] = true;\n\t\t}\n\t}\n\n\tpublic execSelectCurElement():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tlet mol = this.input.mol;\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tlet el1 = '', el2 = '';\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tel1 = mol.atomElement(this.input.currentAtom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tel1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n\t\t\tel2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n\t\t}\n\t\tfor (let n = 1; n <= mol.numAtoms; n++)\n\t\t\tif (mol.atomElement(n) == el1 || mol.atomElement(n) == el2) this.output.selectedMask[n - 1] = true;\n\t}\n\n\tpublic execSelectToggle():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n\t\t\tlet sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n\t\t\tthis.output.selectedMask[bfr - 1] = sel;\n\t\t\tthis.output.selectedMask[bto - 1] = sel;\n\t\t}\n\t}\n\n\tpublic execSelectUnCurrent():void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\n\t\tthis.output.selectedMask = this.input.selectedMask.slice(0);\n\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.currentAtom - 1] = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n\t\t\tthis.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n\t\t}\n\t}\n\n\tpublic execElement(element:string, positionX?:number, positionY?:number, keepAbbrev?:boolean):void\n\t{\n\t\tconst QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n\n\t\tif (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element))\n\t\t{\n\t\t\tlet anyChange = false;\n\t\t\tfor (let n = 0; n < this.subjectLength; n++) if (this.input.mol.atomElement(this.subjectIndex[n]) != element)\n\t\t\t{\n\t\t\t\tanyChange = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!anyChange)\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Elements not changed.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet mol = this.output.mol = this.input.mol.clone();\n\n\t\tlet applyQuery = (atom:number) =>\n\t\t{\n\t\t\tif (element == 'A')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'X')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Y')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Z')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'Q')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'M')\n\t\t\t{\n\t\t\t\tconst NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n\t\t\t}\n\t\t\telse if (element == 'T')\n\t\t\t{\n\t\t\t\tconst TRANSITION_METALS =\n\t\t\t\t[\n\t\t\t\t\t'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n\t\t\t\t\t'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n\t\t\t\t\t'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n\t\t\t\t\t'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n\t\t\t\t\t'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n\t\t\t\t];\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'E')\n\t\t\t{\n\t\t\t\tconst MAIN_GROUPS =\n\t\t\t\t[\n\t\t\t\t\t'B', 'N', 'O', 'F',\n\t\t\t\t\t'Al', 'Si', 'P', 'S', 'Cl',\n\t\t\t\t\t'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n\t\t\t\t\t'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n\t\t\t\t\t'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n\t\t\t\t];\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t\telse if (element == 'R')\n\t\t\t{\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n\t\t\t\tQueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n\t\t\t}\n\t\t};\n\n\t\tif (mol.numAtoms == 0)\n\t\t{\n\t\t\tmol.addAtom(element, 0, 0);\n\t\t\tapplyQuery(mol.numAtoms);\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\t// when there's no subject, this is an add-atom operation\n\t\t\tif (positionX != null && positionY != null)\n\t\t\t\tmol.addAtom(element, positionX, positionY);\n\t\t\telse\n\t\t\t\tSketchUtil.placeNewAtom(mol, element);\n\t\t\tapplyQuery(mol.numAtoms);\n\t\t}\n\t\telse // there is a subject, so it's a change-atom operation\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tif (keepAbbrev)\n\t\t\t\t\tmol.setAtomElement(this.subjectIndex[n], element);\n\t\t\t\telse\n\t\t\t\t\tMolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n\t\t\t\tapplyQuery(this.subjectIndex[n]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic execCharge(delta:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n\t\t\tthis.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n\t\t}\n\t}\n\n\tpublic execConnect(order:number, type:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n\t\tif (conn == null)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < conn.length; n += 2) MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n\t}\n\n\tpublic execDisconnect():void\n\t{\n\t\tlet zap:number[] = [];\n\n\t\tlet mol = this.input.mol;\n\n\t\tif (this.hasSelected)\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) zap.push(n);\n\t\t}\n\t\telse if (this.input.currentAtom > 0)\n\t\t{\n\t\t\tfor (let a of mol.atomAdjBonds(this.input.currentAtom)) zap.push(a);\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tzap.push(this.input.currentBond);\n\t\t}\n\t\tif (zap.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet killmask = Vec.booleanArray(false, mol.numBonds);\n\t\tfor (let b of zap) killmask[b - 1] = true;\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = mol.numBonds; n >= 1; n--) if (killmask[n - 1]) this.output.mol.deleteBond(n);\n\t}\n\n\tpublic execMetalLigate():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tlet ligAtoms = this.subjectIndex.slice(0);\n\n\t\t// ideally the user specified the metal by way of the current atom, but otherwise make a guess\n\t\tlet metalAtom = this.input.currentAtom;\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tif (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {metalAtom = a; break;}\n\t\t\t}\n\t\t}\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet atno = mol.atomicNumber(a);\n\t\t\t\tif (Chemistry.ELEMENT_ROWS[atno] >= 3) {metalAtom = a; break;}\n\t\t\t}\n\t\t}\n\n\t\tif (metalAtom == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet i = ligAtoms.indexOf(metalAtom);\n\t\tif (i >= 0) ligAtoms.splice(i, 1);\n\n\t\tif (ligAtoms.length == 0) ligAtoms = mol.atomAdjList(metalAtom);\n\t\tif (ligAtoms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n\t\t\treturn;\n\t\t}\n\n\t\tmol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n\n\t\tthis.output.mol = mol;\n\t\tthis.output.currentAtom = metalAtom;\n\t\tthis.output.currentBond = -1;\n\t\tthis.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let a of ligAtoms) this.output.selectedMask[a - 1] = true;\n\t}\n\n\tpublic execBond(order:number, type:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\t// one atom subject: this is a request for a new bond\n\t\tif (this.subjectLength == 1)\n\t\t{\n\t\t\tthis.performBondNew(this.subjectIndex[0], order, type);\n\t\t\treturn;\n\t\t}\n\n\t\t// see whether the selected atoms are from 2 disconnected groups, which determines whether it's a change-order operation\n\t\t// or a connect operation\n\t\tlet ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n\t\tlet oneComp = true;\n\t\tfor (let n = ccmol.numAtoms; n >= 1; n--) if (ccmol.atomConnComp(n) != 1) {oneComp = false; break;}\n\t\tif (oneComp)\n\t\t\tthis.performBondChange(order, type);\n\t\telse\n\t\t\tthis.execConnect(order, type);\n\t}\n\n\tpublic execBondGeom(geom:number):void\n\t{\n\t\tlet bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n\t\tif (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0))\n\t\t{\n\t\t\tthis.errmsg = 'The subject must be a single atom or bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.subjectLength == 1)\n\t\t\tthis.performBondGeomAtom(geom, this.subjectIndex[0]);\n\t\telse\n\t\t\tthis.performBondGeomBond(geom, bond);\n\t}\n\n\tpublic execBondAtom(order:number, type:number, element:string, x1:number, y1:number, x2:number, y2:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tlet a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n\t\tif (a1 > 0 && a1 == a2) return; // bond to self\n\t\tif (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0) return;\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tif (a1 == 0) a1 = this.output.mol.addAtom('C', x1, y1);\n\t\tif (a2 == 0) a2 = this.output.mol.addAtom(element, x2, y2);\n\t\tthis.output.mol.addBond(a1, a2, order, type);\n\t}\n\n\tpublic execBondSwitch():void\n\t{\n\t\tif (this.input.altmol)\n\t\t{\n\t\t\tthis.output.mol = this.input.altmol;\n\t\t\tthis.output.altmol = this.input.mol;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\t// decide which bonds are applicable\n\t\tlet src = 0, dst:number[] = [];\n\t\tif (this.subjectLength == 1)\n\t\t{\n\t\t\tsrc = this.subjectIndex[0];\n\t\t\tlet adj = mol.atomAdjList(src);\n\t\t\tfor (let n = 0; n < adj.length; n++) if (mol.atomAdjCount(adj[n]) == 1) dst.push(adj[n]);\n\t\t}\n\t\telse if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n\t\t{\n\t\t\tlet ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n\t\t\tif (ac1 > 1 && ac2 == 1)\n\t\t\t{\n\t\t\t\tsrc = this.subjectIndex[0];\n\t\t\t\tdst.push(this.subjectIndex[1]);\n\t\t\t}\n\t\t\telse if (ac1 == 1 && ac2 > 1)\n\t\t\t{\n\t\t\t\tsrc = this.subjectIndex[1];\n\t\t\t\tdst.push(this.subjectIndex[0]);\n\t\t\t}\n\t\t}\n\n\t\tif (src == 0 || dst.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Subject must include a terminal bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n\t\tif (geoms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t}\n\t}\n\n\tpublic execBondRotate():void\n\t{\n\t\tlet bond = this.input.currentBond;\n\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol;\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot rotate a ring-bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1)\n\t\t{\n\t\t\tthis.errmsg = 'Two-atom components do not rotate.';\n\t\t\treturn;\n\t\t}\n\n\t\tmol = mol.clone();\n\n\t\tlet [atom1, atom2, side] = this.mobileSide(bond, true);\n\t\tlet cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n\t\tlet theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n\t\tfor (let a of side) if (a != atom1)\n\t\t{\n\t\t\tlet dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n\t\t\tlet dtheta = Math.atan2(dy, dx);\n\t\t\tdtheta = theta - angleDiff(dtheta, theta);\n\t\t\tmol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n\t\t}\n\t\tlet mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n\t\tfor (let b = 1; b <= mol.numBonds; b++) if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1])\n\t\t{\n\t\t\tlet bt = mol.bondType(b);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\tif (CoordUtil.sketchEquivalent(this.input.mol, mol))\n\t\t{\n\t\t\tthis.errmsg = 'Rotation has no effect.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execBondAddTwo():void\n\t{\n\t\tif (this.subjectLength != 1)\n\t\t{\n\t\t\tthis.errmsg = 'Subject must be a single atom.';\n\t\t\treturn;\n\t\t}\n\t\tlet atom = this.subjectIndex[0];\n\t\tif (this.input.mol.atomAdjCount(atom) < 2)\n\t\t{\n\t\t\tthis.errmsg = 'Subject atom must already have at least 2 bonds.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n\t\tif (ang.length == 0) ang = SketchUtil.exitVectors(this.input.mol, atom);\n\t\tif (ang.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Could not find a suitable geometry for new substituents.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet baseAng = ang[0];\n\t\tlet cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n\t\tif (ang.length > 1)\n\t\t{\n\t\t\tlet best = 0;\n\t\t\tfor (let n = 0; n < ang.length; n++)\n\t\t\t{\n\t\t\t\tlet x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n\t\t\t\tlet y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n\t\t\t\tlet score = CoordUtil.congestionPoint(this.input.mol, x, y);\n\t\t\t\tif (n == 0 || score < best) {best = score; baseAng = ang[n];}\n\t\t\t}\n\t\t}\n\n\t\tlet ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n\n\t\t// NOTE: maybe try out variations? ... may be better to just leave it as the entirely predictable 60 degrees...\n\n\t\tlet mol = this.input.mol.clone();\n\t\tlet a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n\t\tlet a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n\t\tmol.addBond(atom, a1, 1);\n\t\tmol.addBond(atom, a2, 1);\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execBondInsert():void\n\t{\n\t\tlet mol = this.input.mol, bond = this.input.currentBond;\n\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot insert into a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet [alink, _, side] = this.mobileSide(bond);\n\n\t\tmol = mol.clone();\n\t\tmol.setBondOrder(bond, 1);\n\n\t\tlet fragmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (let a of side) fragmask[a - 1] = true;\n\t\tlet frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (fragmask[n - 1] && n != alink)\n\t\t{\n\t\t\tmol.deleteAtomAndBonds(n);\n\t\t\tif (n < alink) alink -= 1;\n\t\t}\n\n\t\tmol.setAtomElement(alink, 'C');\n\t\tmol.setAtomCharge(alink, 0);\n\t\tmol.setAtomUnpaired(alink, 0);\n\t\tmol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n\t\tmol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n\t\tmol.setAtomMapNum(alink, 0);\n\t\tmol.setAtomExtra(alink, []);\n\t\tmol.setAtomTransient(alink, []);\n\n\t\tlet fusion = new TemplateFusion(mol, frag, '');\n\t\tfusion.withGuideOnly = true;\n\t\tfusion.permuteAtom(alink);\n\t\tif (fusion.perms.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Unable to insert.'; // should be rare (?)\n\t\t\treturn;\n\t\t}\n\t\tthis.output.mol = fusion.perms[0].mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = alink;\n\t}\n\n\tpublic execJoin():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tthis.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.errmsg = 'Subject contains no overlapping atoms.';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.zapSubject();\n\t\t}\n\t}\n\n\tpublic execNudge(dir:string, extent:number):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n\t\tlet dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n\t\t\tthis.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n\t\t}\n\t}\n\n\tpublic execNudgeFar(dir:string):void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (this.subjectLength == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'Cannot apply to entire molecule.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n\t\tlet dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n\n\t\tthis.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n\t\tif (this.output.mol == null)\n\t\t{\n\t\t\tthis.execNudge(dir, 1); // convert it to a nudge-lots operation\n\t\t}\n\t}\n\n\tpublic execFlip(axis:string):void\n\t{\n\t\tif (this.input.mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\t\tlet isVertical = axis == 'ver'; // else 'hor'\n\n\t\t// decide where the centre of gravity is, and which atoms are to be affected\n\t\tlet cx = 0, cy = 0;\n\t\tlet mask = this.subjectMask, mol = this.input.mol;\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(this.input.currentAtom);\n\t\t\tcy = mol.atomY(this.input.currentAtom);\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(this.input.currentAtom);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = 0.5 * (box.minX() + box.maxX());\n\t\t\tcy = 0.5 * (box.minY() + box.maxY());\n\t\t\tmask = Vec.booleanArray(true, mol.numAtoms);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\t// perform the flip\n\t\tthis.output.mol = mol.clone();\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tif (!isVertical)\n\t\t\t\tthis.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n\t\t\telse\n\t\t\t\tthis.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n\t\t}\n\t}\n\n\tpublic execScale(mag:number):void\n\t{\n\t\tconst {mol, currentAtom, currentBond} = this.input;\n\n\t\tif (mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\n\t\t// special case: a current atom is surrounded by one or more selected atoms - shift them based on what residual component they\n\t\t// belong to; useful also for multidentate ligands\n\t\tif (currentAtom > 0)\n\t\t{\n\t\t\tlet connAtoms:number[] = [];\n\t\t\tfor (let a of this.subjectIndex) if (a != currentAtom && mol.findBond(currentAtom, a) > 0) connAtoms.push(a);\n\t\t\tlet g = Graph.fromMolecule(mol);\n\t\t\tg.isolateNode(currentAtom - 1);\n\n\t\t\tlet anything = false;\n\t\t\tfor (let cc of g.calculateComponentGroups())\n\t\t\t{\n\t\t\t\tVec.addTo(cc, 1);\n\t\t\t\tlet sz = 0, dx = 0, dy = 0;\n\t\t\t\tfor (let a of cc) if (connAtoms.includes(a))\n\t\t\t\t{\n\t\t\t\t\tdx += mol.atomX(a) - mol.atomX(currentAtom);\n\t\t\t\t\tdy += mol.atomY(a) - mol.atomY(currentAtom);\n\t\t\t\t\tsz++;\n\t\t\t\t}\n\t\t\t\tif (sz == 0) continue;\n\n\t\t\t\t[dx, dy] = [dx / sz, dy / sz];\n\t\t\t\tif (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1) continue;\n\t\t\t\t[dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n\n\t\t\t\tif (!this.output.mol) this.output.mol = mol.clone();\n\t\t\t\tfor (let a of cc) this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (anything) return;\n\t\t}\n\n\t\t// special case: subject indicates a non-ring bond, so magnify the bond distance, and shift the component of one/both sides\n\t\tlet b:number;\n\t\tif (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b))\n\t\t{\n\t\t\tlet a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n\t\t\tlet ccmol = mol.clone();\n\t\t\tccmol.deleteBond(b);\n\t\t\tlet idx1:number[] = [], idx2:number[] = [];\n\t\t\tfor (let n = 1; n <= ccmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1)) idx1.push(n);\n\t\t\t\telse if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2)) idx2.push(n);\n\t\t\t}\n\t\t\tlet dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n\t\t\tlet dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n\t\t\tif (idx1.length == idx2.length) {dx *= 0.5; dy *= 0.5;}\n\n\t\t\tthis.output.mol = mol.clone();\n\n\t\t\tif (idx1.length <= idx2.length) for (let n = 0; n < idx1.length; n++)\n\t\t\t{\n\t\t\t\tlet a = idx1[n];\n\t\t\t\tthis.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n\t\t\t}\n\t\t\tif (idx2.length <= idx1.length) for (let n = 0; n < idx2.length; n++)\n\t\t\t{\n\t\t\t\tlet a = idx2[n];\n\t\t\t\tthis.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// scale about centre of gravity\n\t\tlet cx = 0, cy = 0;\n\t\tif (currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(currentAtom);\n\t\t\tcy = mol.atomY(currentAtom);\n\t\t}\n\t\telse if (currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t{\n\t\t\tlet x = this.output.mol.atomX(this.subjectIndex[n]);\n\t\t\tlet y = this.output.mol.atomY(this.subjectIndex[n]);\n\t\t\tthis.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n\t\t}\n\t}\n\n\tpublic execRotate(theta:number, centreX:number, centreY:number):void\n\t{\n\t\ttheta *= DEGRAD; // (parameter is in degrees)\n\n\t\tlet mol = this.input.mol;\n\n\t\t// if a centre position is indicated, use that\n\t\tif (centreX != null && centreY != null)\n\t\t{\n\t\t\tthis.output.mol = mol.clone();\n\t\t\tlet mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n\t\t\tCoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n\t\t\treturn;\n\t\t}\n\n\t\tif (mol.numAtoms < 2)\n\t\t{\n\t\t\tthis.errmsg = 'At least 2 atoms are required.';\n\t\t\treturn;\n\t\t}\n\n\t\t// decide where the centre of gravity is, and which atoms are to be affected\n\t\tlet cx = 0, cy = 0;\n\t\tlet mask = this.subjectMask;\n\t\tif (this.input.currentAtom > 0)\n\t\t{\n\t\t\tcx = mol.atomX(this.input.currentAtom);\n\t\t\tcy = mol.atomY(this.input.currentAtom);\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(this.input.currentAtom);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\n\t\t\tif (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1])\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Component is isolated.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (this.input.currentBond > 0)\n\t\t{\n\t\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\t\tcx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n\t\t\tcy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\t\tif (!this.hasSelected)\n\t\t\t{\n\t\t\t\tmask = Vec.booleanArray(false, mol.numAtoms);\n\t\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = mol.atomConnComp(n) == cc;\n\t\t\t}\n\t\t}\n\t\telse if (this.subjectLength == 0)\n\t\t{\n\t\t\tlet box = mol.boundary();\n\t\t\tcx = 0.5 * (box.minX() + box.maxX());\n\t\t\tcy = 0.5 * (box.minY() + box.maxY());\n\t\t\tmask = Vec.booleanArray(true, mol.numAtoms);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.subjectLength == 1)\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Component is isolated.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let n = 0; n < this.subjectLength; n++)\n\t\t\t{\n\t\t\t\tcx += mol.atomX(this.subjectIndex[n]);\n\t\t\t\tcy += mol.atomY(this.subjectIndex[n]);\n\t\t\t}\n\t\t\tlet invSz = 1.0 / this.subjectLength;\n\t\t\tcx *= invSz;\n\t\t\tcy *= invSz;\n\t\t}\n\n\t\t// perform the rotation\n\t\tthis.output.mol = mol.clone();\n\t\tCoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n\t}\n\n\tpublic execBondDist(dist:number):void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tlet atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n\t\t\tlet dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n\t\t\tlet sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n\t\t\tlet ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n\t\t\tif (sel1 && !sel2)\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n\t\t\t}\n\t\t\telse if (sel2 && !sel1)\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n\t\t\t\tmol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [atom1, atom2, side] = this.mobileSide(bond);\n\t\t\tlet dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n\t\t\tlet curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n\t\t\tlet ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n\t\t\tfor (let a of side) mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAlignAngle(angle:number):void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (mol.bondInRing(bond))\n\t\t{\n\t\t\tthis.errmsg = 'Cannot align a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet [atom1, atom2, side] = this.mobileSide(bond);\n\t\tlet cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n\t\tlet delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n\t\tlet cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n\n\t\tfor (let a of side)\n\t\t{\n\t\t\tlet x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n\t\t\tmol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAlignRegular():void\n\t{\n\t\tlet bond = this.input.currentBond;\n\t\tif (bond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tlet bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n\t\tlet theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n\t\tif (theta < 0) theta += 360;\n\n\t\tlet snap = Math.round(theta / 30) * 30;\n\t\tif (Math.abs(theta - snap) < 0.001) return; // no change\n\t\tlet delta = (snap - theta) * DEGRAD;\n\n\t\tlet mask = this.input.selectedMask;\n\t\tif (Vec.allFalse(mask))\n\t\t{\n\t\t\tlet cc = mol.atomConnComp(bfr);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) mask[n - 1] = cc == mol.atomConnComp(n);\n\t\t}\n\n\t\tlet cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mask[n - 1])\n\t\t{\n\t\t\tlet dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n\t\t\tlet th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n\t\t\tmol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAdjustTorsion(angle:number):void\n\t{\n\t\t// NOTE: input definition is a awkward; selected = 3 atoms that make up the torsion (A1-A2-A3); current be set to A1, and defines\n\t\t// (A1,A2) such that the angle is A3-A1; these is necessary because the user could be referring to either the acute or obtuse angle;\n\t\t// note that the special case where the 3 atoms are all in the same ring uses the order of selected atoms as a hint, which breaks the\n\t\t// input convention\n\n\t\tif (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3)\n\t\t{\n\t\t\tthis.errmsg = 'Must be 3 selected atoms and a current atom.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tlet a1 = this.input.currentAtom;\n\t\tlet atoms:number[] = [];\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (n != a1 && this.input.selectedMask[n - 1]) atoms.push(n);\n\t\tlet a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n\t\t\t\t mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n\t\tif (a2 == 0 || mol.findBond(a2, atoms[0]) == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Selected atoms must be consecutive.';\n\t\t\treturn;\n\t\t}\n\t\tlet a3 = atoms[0];\n\n\t\tlet cx = mol.atomX(a2), cy = mol.atomY(a2);\n\t\tlet theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n\t\tlet theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n\t\tlet delta = angle - angleDiff(theta3, theta1);\n\n\t\tlet group1:number[] = [], group3:number[] = [];\n\t\tif (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3))\n\t\t{\n\t\t\tlet g = Graph.fromMolecule(mol);\n\t\t\tg.removeEdge(a2 - 1, a1 - 1);\n\t\t\tg.removeEdge(a2 - 1, a3 - 1);\n\t\t\tlet cc = g.calculateComponents();\n\t\t\tfor (let n = 0; n < g.numNodes; n++)\n\t\t\t{\n\t\t\t\tif (cc[n] == cc[a1 - 1]) group1.push(n + 1);\n\t\t\t\telse if (cc[n] == cc[a3 - 1]) group3.push(n + 1);\n\t\t\t}\n\t\t}\n\t\tif (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2)) group1 = [a1];\n\t\tif (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2)) group3 = [a3];\n\n\t\tCoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n\t\tCoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execMove(refAtom:number, deltaX:number, deltaY:number):void\n\t{\n\t\tlet subj = this.subjectIndex;\n\t\tif (Vec.len(subj) == 0)\n\t\t{\n\t\t\tif (refAtom == 0) return;\n\t\t\tsubj = [refAtom];\n\t\t}\n\n\t\tthis.output.mol = this.input.mol.clone();\n\t\tfor (let a of subj) this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n\t}\n\n\tpublic execRing(ringX:number[], ringY:number[], aromatic:boolean):void\n\t{\n\t\tlet rsz = ringX.length;\n\t\tlet atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n\n\t\tlet outmol = this.input.mol.clone();\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tatoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n\t\t\tif (atoms[n] == 0) atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n\t\t}\n\t\tfor (let n = 0; n < rsz; n++)\n\t\t{\n\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\tbonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n\t\t\tif (bonds[n] == 0) bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n\t\t}\n\n\t\t// if aromaticity is desired, do an extremely crude Kekulisation\n\t\tif (aromatic)\n\t\t{\n\t\t\tlet valence = Vec.numberArray(0, rsz);\n\t\t\tlet pi = Vec.booleanArray(false, rsz);\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tvalence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n\t\t\t\tif (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN) valence[n] -= outmol.atomHExplicit(atoms[n]);\n\t\t\t\tfor (let b of outmol.atomAdjBonds(atoms[n])) valence[n] -= outmol.bondOrder(b);\n\t\t\t\tif (outmol.bondOrder(bonds[n]) >= 2)\n\t\t\t\t{\n\t\t\t\t\tpi[n] = true;\n\t\t\t\t\tif (n < rsz - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tpi[n] = true;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t\telse pi[0] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let n = 0; n < rsz; n++)\n\t\t\t{\n\t\t\t\tlet nn = n < rsz - 1 ? n + 1 : 0;\n\t\t\t\tif (pi[n] || pi[nn]) continue;\n\n\t\t\t\tif (valence[n] > 0 && valence[nn] > 0)\n\t\t\t\t{\n\t\t\t\t\toutmol.setBondOrder(bonds[n], 2);\n\t\t\t\t\tpi[n] = true;\n\t\t\t\t\tpi[nn] = true;\n\t\t\t\t\tvalence[n]--;\n\t\t\t\t\tvalence[nn]--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.output.mol = outmol;\n\t}\n\n\tpublic execTemplateFusion(frag:Molecule):void\n\t{\n\t\tlet mol = this.input.mol;\n\t\tlet fusion = new TemplateFusion(mol, frag, '');\n\t\tif (this.subjectLength == 0) fusion.permuteNone();\n\t\telse if (this.subjectLength == 1) fusion.permuteAtom(this.subjectIndex[0]);\n\t\telse if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n\t\t\tfusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n\t\telse fusion.permuteMulti(this.subjectIndex);\n\n\t\t// package up the results\n\t\tlet permutations:any[] = [];\n\t\tfor (let perm of fusion.perms)\n\t\t{\n\t\t\tlet obj:Record<string, any> = {};\n\t\t\tobj['mol'] = perm.mol.toString();\n\t\t\tobj['display'] = perm.display.toString();\n\t\t\tobj['molidx'] = perm.molidx;\n\t\t\tobj['temidx'] = perm.temidx;\n\t\t\tobj['srcidx'] = perm.srcidx;\n\t\t\tpermutations.push(obj);\n\t\t}\n\t\tthis.output.permutations = permutations;\n\t}\n\n\tpublic execAbbrevTempl():void\n\t{\n\t\t/*\n\t\t// note: 'fusion' needs to ensure that permutation 0 is the one to use\n\t\tlet perm = fusion.getPerm(0)\n\t\tlet fused = perm.mol\n\t\tvar srcidx = perm.srcidx\n\n\t\t// consider the possibility that we might be wanting to convert a terminal atom directly into an abbreviation\n\t\tlet midx = perm.midx\n\t\tlet markback = (!perm.bridged && !perm.guided && midx.count == 1 && instate.mol.atomAdjCount(midx[0]) == 1)\n\t\t\t\t\t|| (perm.guided && midx.count == 1 && fusion.numAttach == 2)\n\t\tif markback\n\t\t{\n\t\t\tlet i = indexOf(midx[0], srcidx)\n\t\t\tif i >= 0 {srcidx[i] = 0} // mark it part of the graft-on, not the original\n\t\t}\n\n\t\t// see if it really can be done\n\t\tvar srcmask = boolArray(false, srcidx.count)\n\t\tfor n in 0 ..< srcidx.count {srcmask[n] = srcidx[n] > 0}\n\t\tlet mol = MolUtil.convertToAbbrev(fused, srcmask:srcmask, abbrevName:fusion.abbrev)\n\t\tif mol == nil\n\t\t{\n\t\t\tmessage = \"Inline abbreviations must be terminal with exactly one attachment point.\";\n\t\t\treturn false\n\t\t}\n\n\t\tif !doCommit {return true}\n\n\t\tzapSubject()\n\t\toutstate.mol = mol!\n\t\toutstate.currentAtom = mol!.numAtoms\n\n\t\treturn true\n*/\n\t}\n\n\tpublic execAbbrevGroup():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (!this.checkAbbreviationReady()) return;\n\n\t\tlet mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n\t\tif (mol == null)\n\t\t{\n\t\t\t// (probably already filtered out from above)\n\t\t\tthis.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n\t\t\treturn;\n\t\t}\n\t\tif (AbbrevContainer.main)\n\t\t{\n\t\t\tAbbrevContainer.main.submitMolecule(mol, true);\n\t\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n)) AbbrevContainer.main.substituteAbbrevName(mol, n);\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = mol.numAtoms;\n\t}\n\n\tpublic execAbbrevFormula():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\t\tif (!this.checkAbbreviationReady()) return;\n\n\t\tlet fixed = this.input.mol.clone();\n\t\tfor (let n = 1; n <= fixed.numAtoms; n++) fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n\t\tlet abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n\t\tlet formula = MolUtil.molecularFormula(abv, true);\n\n\t\tlet mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n\t\tif (mol == null)\n\t\t{\n\t\t\t// (probably already filtered out from above)\n\t\t\tthis.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t\tthis.output.currentAtom = mol.numAtoms;\n\t}\n\n\tpublic execAbbrevClear():void\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n of this.subjectIndex) if (MolUtil.hasAbbrev(this.input.mol, n)) idx.push(n);\n\n\t\tif (idx.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No abbreviations to clear.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tfor (let n of idx) MolUtil.clearAbbrev(mol, n);\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execAbbrevExpand():void\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n of this.subjectIndex) if (MolUtil.hasAbbrev(this.input.mol, n)) idx.push(n);\n\n\t\tif (idx.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'No abbreviations to expand.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet mol = this.input.mol.clone();\n\t\tfor (let n of idx) MolUtil.expandOneAbbrev(mol, n, true);\n\t\tthis.output.mol = mol;\n\t\tthis.zapSubject();\n\t}\n\n\tpublic execBondArtifact(activity:ActivityType):void\n\t{\n\t\tif (!this.requireAtoms() || !this.requireSubject()) return;\n\n\t\tlet artif = new BondArtifact(this.input.mol.clone());\n\t\tlet subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n\t\tif (curAtom > 0 && subject.indexOf(curAtom) < 0) subject.push(curAtom);\n\n\t\tif (activity == ActivityType.BondArtifactPath)\n\t\t{\n\t\t\tif (!artif.createPath(subject)) {this.errmsg = 'Path artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactRing)\n\t\t{\n\t\t\tif (!artif.createRing(subject)) {this.errmsg = 'Ring artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactArene)\n\t\t{\n\t\t\tif (!artif.createArene(subject)) {this.errmsg = 'Arene artifact not suitable.'; return;}\n\t\t}\n\t\telse if (activity == ActivityType.BondArtifactClear)\n\t\t{\n\t\t\tif (!artif.removeArtifact(subject))\n\t\t\t{\n\t\t\t\tif (this.removePolymerBlock(subject)) return;\n\n\t\t\t\tthis.errmsg = 'No artifact removed.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tartif.rewriteMolecule();\n\t\tthis.output.mol = artif.mol;\n\t}\n\n\tpublic execPolymerBlock():void\n\t{\n\t\tif (!this.requireAtoms() || !this.requireSubject()) return;\n\t\tif (this.owner) this.owner.performPolymerBlock(this.subjectIndex);\n\t}\n\n\tpublic execAddHydrogens():void\n\t{\n\t\tlet mol = this.input.mol.clone();\n\n\t\tif (!this.requireAtoms()) return;\n\t\tlet atoms = this.subjectIndex;\n\t\tif (atoms.length == 0) atoms = Vec.identity1(mol.numAtoms);\n\n\t\tfor (let a of atoms)\n\t\t{\n\t\t\tlet hc = mol.atomHydrogens(a);\n\t\t\tif (hc > 0) SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n\t\t}\n\n\t\tif (mol.numAtoms == this.input.mol.numAtoms)\n\t\t{\n\t\t\tthis.errmsg = 'Nothing needs to be added.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol;\n\t}\n\n\tpublic execRemoveHydrogens():void\n\t{\n\t\tif (!this.requireAtoms()) return;\n\n\t\tlet mol = this.input.mol;\n\n\t\tlet selmask = this.subjectMask;\n\t\tif (Vec.allFalse(selmask)) selmask = Vec.booleanArray(true, mol.numAtoms);\n\t\tlet keepmask = Vec.booleanArray(true, mol.numAtoms);\n\n\t\tfor (let n = 1; n <= mol.numAtoms; n++) if (MolUtil.boringHydrogen(mol, n))\n\t\t{\n\t\t\tlet nbr = mol.atomAdjList(n)[0];\n\t\t\tif (selmask[n - 1] || selmask[nbr - 1]) keepmask[n - 1] = false;\n\t\t}\n\n\t\tif (Vec.allTrue(keepmask))\n\t\t{\n\t\t\tthis.errmsg = 'Nothing to be deleted.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = MolUtil.subgraphMask(mol, keepmask);\n\t}\n\n\tpublic execQueryClear():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet mol = this.input.mol.clone();\n\n\t\tconst {currentBond} = this.input;\n\t\tif (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond))\n\t\t{\n\t\t\tQueryUtil.deleteQueryBondAll(mol, currentBond);\n\t\t\tthis.output.mol = mol;\n\t\t\treturn;\n\t\t}\n\n\t\tlet anything = false;\n\t\tfor (let a of this.subjectIndex) if (QueryUtil.hasAnyQueryAtom(mol, a))\n\t\t{\n\t\t\tQueryUtil.deleteQueryAtomAll(mol, a);\n\t\t\tanything = true;\n\t\t}\n\t\tfor (let b = 1; b <= mol.numBonds; b++) if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b))\n\t\t{\n\t\t\tQueryUtil.deleteQueryBondAll(mol, b);\n\t\t\tanything = true;\n\t\t}\n\n\t\tif (anything)\n\t\t\tthis.output.mol = mol;\n\t\telse\n\t\t\tthis.errmsg = 'No query terms to clear.';\n\t}\n\n\tpublic execQueryCopy():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tconst {mol, currentBond} = this.input;\n\n\t\tif (currentBond > 0)\n\t\t{\n\t\t\tif (!QueryUtil.hasAnyQueryBond(mol, currentBond))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Bond has no query terms.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet qmol = new Molecule();\n\t\t\tqmol.addAtom('*', 0, 0);\n\t\t\tqmol.addAtom('*', Molecule.IDEALBOND, 0);\n\t\t\tqmol.addBond(1, 2, 1);\n\t\t\tqmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n\t\t\tthis.toClipboard = qmol.toString();\n\t\t}\n\t\telse if (this.subjectLength == 1)\n\t\t{\n\t\t\tlet atom = this.subjectIndex[0];\n\t\t\tif (!QueryUtil.hasAnyQueryAtom(mol, atom))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Atom has no query terms.';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet qmol = new Molecule();\n\t\t\tqmol.addAtom('*', 0, 0);\n\t\t\tqmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n\t\t\tthis.toClipboard = qmol.toString();\n\t\t}\n\t\telse this.errmsg = 'Subject has to be a single atom or bond.';\n\t}\n\n\tpublic execQueryPaste():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tlet qmol:Molecule = this.param.qmol;\n\t\tif (!qmol) {}\n\t\telse if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1))\n\t\t{\n\t\t\tlet mol = this.output.mol = this.input.mol.clone();\n\t\t\tlet qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n\t\t\tfor (let a of this.subjectIndex)\n\t\t\t{\n\t\t\t\tlet aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n\t\t\t\tmol.setAtomExtra(a, [...aterms, ...qterms]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\telse if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n\t\t\t\t qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1))\n\t\t{\n\t\t\tlet mol = this.output.mol = this.input.mol.clone();\n\t\t\tlet qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n\t\t\tfor (let b = 1; b <= mol.numBonds; b++) if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1])\n\t\t\t{\n\t\t\t\tlet bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n\t\t\t\tmol.setBondExtra(b, [...bterms, ...qterms]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.errmsg = 'Unable to paste query terms.';\n\t}\n\n\tpublic execQuerySetAtom():void\n\t{\n\t\t// TODO\n\t}\n\n\tpublic execQuerySetBond():void\n\t{\n\t\t// TODO\n\t}\n\n\tpublic execQueryBondAny():void\n\t{\n\t\tif (!this.requireSubject()) return;\n\n\t\tconst {mol, currentBond} = this.input;\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) bonds.push(n);\n\t\tif (bonds.length == 0)\n\t\t{\n\t\t\tthis.errmsg = 'Must select at least one bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tfor (let b of bonds)\n\t\t{\n\t\t\tthis.output.mol.setBondOrder(b, 0);\n\t\t\tQueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n\t\t}\n\t}\n\n\tpublic execSproutDirection(deltaX:number, deltaY:number):void\n\t{\n\t\tif (!this.requireCurrent()) return;\n\t\tif (deltaX == 0 && deltaY == 0) return;\n\n\t\tconst {mol, currentAtom} = this.input;\n\n\t\tlet angleOptions:number[];\n\t\tif (mol.atomAdjCount(currentAtom) == 0)\n\t\t\tangleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n\t\telse\n\t\t\tangleOptions = SketchUtil.primeDirections(mol, currentAtom) ?? SketchUtil.exitVectors(mol, currentAtom);\n\t\tif (angleOptions.length == 0) return;\n\n\t\tlet theta = Math.atan2(deltaY, deltaX);\n\t\tlet idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n\t\tlet px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n\t\tlet py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n\n\t\tthis.output.mol = mol.clone();\n\t\tlet newAtom = this.output.mol.addAtom('C', px, py);\n\t\tthis.output.mol.addBond(currentAtom, newAtom, 1);\n\t\tthis.output.mol = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms)) ?? this.output.mol;\n\n\t\tfor (let n = 1; n <= this.output.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n\t\t\tif (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ)\n\t\t\t{\n\t\t\t\tthis.output.currentAtom = n;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t// input: (standard)\n\t// output: (standard)\n\tpublic void execBondInsert() throws Exception\n\t{\n\t\tif (!requireSubject()) return;\n\n\t\tif (currentBond == 0)\n\t\t{\n\t\t\terrmsg = 'There must be a current bond.';\n\t\t\treturn;\n\t\t}\n\t\tif (mol.bondInRing(currentBond))\n\t\t{\n\t\t\terrmsg = 'Cannot insert into a ring-bond.';\n\t\t\treturn;\n\t\t}\n\n\t\tint[][] sides = MolUtil.getBondSides(mol, currentBond);\n\t\tint[] side1 = sides[0], side2 = sides[1];\n\t\tint[] atoms = null;\n\t\tint a1 = mol.bondFrom(currentBond), a2 = mol.bondTo(currentBond);\n\t\tboolean sel1 = selectedMask[a1 - 1], sel2 = selectedMask[a2 - 1];\n\t\tif (sel1 && !sel2) atoms = side1;\n\t\telse if (!sel1 && sel2) atoms = side2;\n\t\telse if (side1.length < side2.length) atoms = side1;\n\t\telse atoms = side2;\n\n\t\tint alink = Vec.indexOf(a1, atoms) >= 0 ? a1 : a2;\n\t\toutmol = mol.clone();\n\t\toutmol.setBondOrder(currentBond, 1);\n\n\t\tboolean[] fragmask = Vec.booleanArray(false, mol.numAtoms);\n\t\tfor (int n = 0; n < atoms.length; n++) fragmask[atoms[n] - 1] = true;\n\t\tMolecule frag = MolUtil.subgraphWithAttachments(outmol, fragmask);\n\n\t\tfor (int n = outmol.numAtoms; n >= 1; n--) if (fragmask[n - 1] && n != alink)\n\t\t{\n\t\t\toutmol.deleteAtomAndBonds(n);\n\t\t\tif (n < alink) alink--;\n\t\t}\n\n\t\tmol.setAtomElement(alink, \"C\");\n\t\tmol.setAtomCharge(alink, 0);\n\t\tmol.setAtomUnpaired(alink, 0);\n\t\tmol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n\t\tmol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n\t\tmol.setAtomMapNum(alink, 0);\n\t\tmol.setAtomExtra(alink, null);\n\t\tmol.setAtomTransient(alink, null);\n\n\t\tTemplateFusion fusion = new TemplateFusion(outmol, frag, \"\");\n\t\tfusion.setWithGuideOnly(true);\n\t\tfusion.permuteAtom(alink);\n\t\tif (fusion.numPerms() == 0)\n\t\t{\n\t\t\t// (should be rare or impossible)\n\t\t\terrmsg = 'Unable to insert an atom.';\n\t\t\treturn;\n\t\t}\n\n\t\toutmol = fusion.getPerm(0).mol;\n\t\tzapSubject();\n\t\toutCurrentAtom = alink;\n\t}*/\n\n\t// ----------------- private methods -----------------\n\n\t// if there is no subject, sets the error message and returns false\n\tprivate requireSubject():boolean\n\t{\n\t\tif (this.subjectLength == 0) this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n\t\treturn this.subjectLength > 0;\n\t}\n\n\t// complains if there aren't any atoms\n\tprivate requireAtoms():boolean\n\t{\n\t\tif (this.input.mol.numAtoms == 0) this.errmsg = 'There are no atoms.';\n\t\treturn this.input.mol.numAtoms > 0;\n\t}\n\n\t// complains if there's no current atom/bond\n\tprivate requireCurrent():boolean\n\t{\n\t\tif (this.input.currentAtom == 0 && this.input.currentBond == 0)\n\t\t{\n\t\t\tthis.errmsg = 'There must be a current atom or bond.';\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// complains if there are no selected atoms\n\tprivate requireSelected():boolean\n\t{\n\t\tif (!this.hasSelected) this.errmsg = 'No atoms are selected.';\n\t\treturn this.hasSelected;\n\t}\n\n\t// for a set of groups of atoms, select one that is represented by the current subject; optionally advanced\n\t// to the next group\n\tprivate pickSelectedGroup(groups:number[][], dir:number):number\n\t{\n\t\tif (this.subjectLength == 0) return 0;\n\n\t\t// if any is all-selected, that's the starting point (+ dir)\n\t\tfor (let i = 0; i < groups.length; i++)\n\t\t{\n\t\t\tlet g = groups[i];\n\t\t\tlet all = true;\n\t\t\tfor (let j = 0; j < g.length; j++) if (!this.subjectMask[g[j] - 1])\n\t\t\t{\n\t\t\t\tall = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (all)\n\t\t\t{\n\t\t\t\ti += dir;\n\t\t\t\treturn i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n\t\t\t}\n\t\t}\n\n\t\t// anything partly selected will do\n\t\tfor (let i = 0; i < groups.length; i++)\n\t\t{\n\t\t\tlet g = groups[i];\n\t\t\tfor (let j = 0; j < g.length; j++) if (this.subjectMask[g[j] - 1]) return i;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// makes sure output has no subject of any kind\n\tprivate zapSubject():void\n\t{\n\t\tthis.output.currentAtom = 0;\n\t\tthis.output.currentBond = 0;\n\t\tthis.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n\t}\n\n\t// support for bond addition\n\tprivate performBondNew(atom:number, order:number, type:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n\t\tif (ang.length == 0) ang = SketchUtil.exitVectors(mol, atom);\n\t\tif (ang.length == 0)\n\t\t{\n\t\t\t// (probably impossible...)\n\t\t\tthis.errmsg = 'Could not find a suitable geometry for a new substituent.';\n\t\t\treturn;\n\t\t}\n\n\t\tlet bx:number[] = [], by:number[] = [], bscore:number[] = [];\n\t\tfor (let n = 0; n < ang.length; n++)\n\t\t{\n\t\t\tlet x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n\t\t\tlet y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n\t\t\tlet score = CoordUtil.congestionPoint(mol, x, y);\n\t\t\tif (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n\t\t\t\tscore += Math.abs(angleNorm(ang[n])) * 1E-8; // rounding error bias for pointing right\n\t\t\telse\n\t\t\t\tscore += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8; // bias for pointing up\n\n\t\t\tbx.push(x);\n\t\t\tby.push(y);\n\t\t\tbscore.push(score);\n\t\t}\n\t\tlet idx = Vec.idxSort(bscore);\n\n\t\tthis.output.mol = mol.clone();\n\t\tlet anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n\t\tif (anum == 0) anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n\t\tMolUtil.addBond(this.output.mol, atom, anum, order, type);\n\n\t\tif (idx.length >= 2)\n\t\t{\n\t\t\tthis.output.altmol = mol.clone();\n\t\t\tanum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n\t\t\tif (anum == 0) anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n\t\t\tMolUtil.addBond(this.output.altmol, atom, anum, order, type);\n\t\t}\n\t}\n\n\t// support for bond order\n\tprivate performBondChange(order:number, type:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\tif (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1]) bonds.push(n);\n\n\t\tlet switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n\t\tlet stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n\t\tlet anyChange = switchType;\n\n\t\tfor (let n = 0; n < bonds.length && !anyChange; n++)\n\t\t{\n\t\t\tlet b = bonds[n];\n\t\t\tif (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL) anyChange = true;\n\t\t\telse if (mol.bondType(b) != type) anyChange = true;\n\t\t}\n\n\t\tif (!anyChange)\n\t\t{\n\t\t\tthis.errmsg = 'No bond changes made.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\n\t\tfor (let n = 0; n < bonds.length; n++)\n\t\t{\n\t\t\tlet b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n\n\t\t\tif (switchType && this.output.mol.bondType(b) == type)\n\t\t\t{\n\t\t\t\tthis.output.mol.setBondFromTo(b, bto, bfr);\n\t\t\t}\n\t\t\telse if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type)\n\t\t\t{\n\t\t\t\tif (!stereoType && order != this.output.mol.bondOrder(b)) this.output.mol.setBondOrder(b, order);\n\t\t\t\telse this.output.mol.setBondType(b, type);\n\t\t\t}\n\t\t\telse if (switchType)\n\t\t\t{\n\t\t\t\tthis.output.mol.setBondFromTo(b, bto, bfr);\n\t\t\t}\n\t\t}\n\t}\n\n\t// support for atom-geometry\n\tprivate performBondGeomAtom(geom:number, atom:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\tlet adj = mol.atomAdjList(atom);\n\t\tlet asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n\n\t\tif (asz > gsz)\n\t\t{\n\t\t\tthis.errmsg = 'The current atom has more bonds than does the selected geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// isolated atom: defer to the regular add-bond feature\n\t\tif (asz == 0)\n\t\t{\n\t\t\tthis.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n\t\t\treturn;\n\t\t}\n\n\t\t// already at limit: only refit applies\n\t\tif (asz == gsz)\n\t\t{\n\t\t\tthis.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n\t\t\tif (this.output.mol == null) this.errmsg = 'Could not re-fit the atom geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// decide whether to refit, or add a new bond onto a vacant slot\n\t\tlet ang = CoordUtil.atomBondAngles(mol, atom);\n\t\tlet newang = SketchUtil.mapAngleSubstituent(geom, ang);\n\n\t\t// doesn't match, so refit\n\t\tif (newang == null)\n\t\t{\n\t\t\tthis.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n\t\t\tif (this.output.mol == null) this.errmsg = 'Could not re-fit the atom geometry.';\n\t\t\treturn;\n\t\t}\n\n\t\t// add new bond\n\t\tthis.output.mol = mol.clone();\n\t\tlet theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n\t\tlet x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n\t\tlet y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n\t\tlet anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n\t\tif (anum == 0) anum = this.output.mol.addAtom('C', x, y);\n\t\tMolUtil.addBond(this.output.mol, atom, anum, 1);\n\t}\n\n\t// support for bond-geometry\n\tprivate performBondGeomBond(geom:number, bond:number):void\n\t{\n\t\tlet mol = this.input.mol;\n\n\t\t// examine both sides (bfr,bto): make sure that 'bto' is terminal, else error\n\t\tlet bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n\t\tlet ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n\t\tif (ac1 > 1 && ac2 == 1) {}\n\t\telse if (ac1 == 1 && ac2 > 1) {let t = ac1; ac1 = ac2; ac2 = t;}\n\t\telse\n\t\t{\n\t\t\tthis.errmsg = 'One end of the bond must be terminal.';\n\t\t\treturn;\n\t\t}\n\n\t\t// consider possible angles that the bond can be migrated to\n\t\tlet adj = mol.atomAdjList(bfr);\n\t\tlet x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n\t\tlet x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n\t\tlet ang:number[] = [];\n\t\tfor (let n = 0, p = 0; n < adj.length; n++) if (adj[n] != bto)\n\t\t{\n\t\t\tang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n\t\t}\n\t\tlet newang = SketchUtil.mapAngleSubstituent(geom, ang);\n\t\tif (newang == null)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\t// pick the one that has the lowest angular increment from the current angle, i.e. around the clock\n\t\tlet bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n\t\tlet curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n\n\t\tfor (let n = 0; n < newang.length; n++)\n\t\t{\n\t\t\tlet th = angleDiff(newang[n], curth);\n\t\t\tif (th < 0) th += TWOPI;\n\t\t\tif (n > 0 && th > bestAng) continue;\n\n\t\t\tlet x = x1 + r * Math.cos(th + curth);\n\t\t\tlet y = y1 + r * Math.sin(th + curth);\n\t\t\tif (CoordUtil.atomAtPoint(mol, x, y) > 0) continue;\n\n\t\t\tbestAng = th;\n\t\t\tbestX = x;\n\t\t\tbestY = y;\n\t\t}\n\t\tif (bestAng > TWOPI)\n\t\t{\n\t\t\tthis.errmsg = 'No alternative geometries identified.';\n\t\t\treturn;\n\t\t}\n\n\t\tthis.output.mol = mol.clone();\n\t\tthis.output.mol.setAtomPos(bto, bestX, bestY);\n\t}\n\n\t// returns true only if the subject matter is ready to be turned into a terminal inline abbreviation\n\tprivate checkAbbreviationReady():boolean\n\t{\n\t\tlet junction = 0;\n\n\t\tlet mol = this.input.mol, subjmask = this.subjectMask;\n\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t{\n\t\t\tlet b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n\t\t\tlet atom = 0;\n\n\t\t\tif ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n\t\t\t\t(subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2)))\n\t\t\t{\n\t\t\t\tthis.errmsg = 'Already an abbreviation.';\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (subjmask[b1 - 1] && !subjmask[b2 - 1]) atom = b1;\n\t\t\telse if (subjmask[b2 - 1] && !subjmask[b1 - 1]) atom = b2;\n\n\t\t\tif (atom == 0 || atom == junction) {}\n\t\t\telse if (junction == 0) junction = atom;\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.errmsg = 'The selected group must be terminal.';\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// assuming the bond is not in a ring, figures out which side is \"lighter\", and returns the opposite; note that if one of the two\n\t// bond atoms is selected, then that one is picked preferentially; if requested, it will not consider a \"terminal\" end\n\tprivate mobileSide(bond:number, disqualTerminal = false):[number, number, number[]]\n\t{\n\t\tlet {mol} = this.input;\n\t\tlet atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n\n\t\tlet g = Graph.fromMolecule(mol);\n\t\tg.removeEdge(atom1 - 1, atom2 - 1);\n\t\tlet side1:number[] = [], side2:number[] = [];\n\t\tfor (let grp of g.calculateComponentGroups())\n\t\t{\n\t\t\tif (grp.includes(atom1 - 1)) side1 = Vec.add(grp, 1);\n\t\t\tif (grp.includes(atom2 - 1)) side2 = Vec.add(grp, 1);\n\t\t}\n\t\tlet weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n\t\tlet weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n\t\tlet sel1 = false, sel2 = false;\n\t\tfor (let a of side1) if (this.isSelected(a)) {sel1 = true; break;}\n\t\tfor (let a of side2) if (this.isSelected(a)) {sel2 = true; break;}\n\n\t\tif (disqualTerminal && mol.atomAdjCount(atom1) == 1) return [atom2, atom1, side2];\n\t\telse if (disqualTerminal && mol.atomAdjCount(atom2) == 1) return [atom1, atom2, side1];\n\t\telse if (sel1 && !sel2) {}\n\t\telse if ((sel2 && !sel1) || weight2 < weight1) return [atom2, atom1, side2];\n\t\treturn [atom1, atom2, side1];\n\t}\n\n\t// returns true if the atom is indicated in the selection mask of the input, if there is one\n\tprivate isSelected(atom:number):boolean\n\t{\n\t\tlet mask = this.input.selectedMask;\n\t\treturn mask ? mask[atom - 1] : false;\n\t}\n\n\t// if the atoms overlap with a polymer block, zap it, apply the results, and return true\n\tprivate removePolymerBlock(atoms:number[]):boolean\n\t{\n\t\tlet polymer = new PolymerBlock(this.input.mol.clone());\n\n\t\tfor (let id of polymer.getIDList())\n\t\t{\n\t\t\tlet unit = polymer.getUnit(id);\n\t\t\tfor (let atom of atoms) if (unit.atoms.includes(atom))\n\t\t\t{\n\t\t\t\tpolymer.removeUnit(id);\n\t\t\t\tpolymer.rewriteMolecule();\n\t\t\t\tthis.output.mol = polymer.mol;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Chemistry} from '../mol/Chemistry';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tInteractive periodic table for picking elements.\n*/\n\n/* eslint-disable no-multi-spaces, comma-spacing */\nconst POSITION_TABLE_Y =\n[\n\t1,                                1,\n\t2,2,                    2,2,2,2,2,2,\n\t3,3,                    3,3,3,3,3,3,\n\t4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n\t5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\t6,6,\n\t\t\t\t\t\t\t\t8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,\n\t\t6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n\t7,7,\n\t\t\t\t\t\t\t\t9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,9.5,\n\t\t7,7,7,7,7,7,7,7,7,7\n];\nconst POSITION_TABLE_X =\n[\n\t1,                                        18,\n\t1,2,                       13,14,15,16,17,18,\n\t1,2,                       13,14,15,16,17,18,\n\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,\n\t\t\t\t\t\t\t\t3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,\n\t\t3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\n\t1,2,\n\t\t\t\t\t\t\t\t3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,\n\t\t3,4,5,6,7,8,9,10,11,12\n];\n\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\n\nexport class PeriodicTableWidget extends Widget\n{\n\tprivate callbackSelect:(element:string) => void;\n\tprivate callbackDoubleClick:() => void;\n\n\tprivate divList:DOM[] = [];\n\tprivate selectedAtno:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tinstallInlineCSS('periodictable', CSS_PERIODICTABLE);\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'gap': '1px'});\n\t\t//grid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\t//grid.css({'grid-template-columns': '[title] auto [value] auto [end]'});\n\n\t\tlet row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n\t\tlet col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n\t\tlet num = row.length;\n\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(grid);\n\t\t\tdiv.css({'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2`});\n\t\t\tdiv.addClass('wmk-periodictable-element');\n\n\t\t\tlet blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n\t\t\tif (blk == 1) div.addClass('wmk-periodictable-block1');\n\t\t\telse if (blk == 2) div.addClass('wmk-periodictable-block2');\n\t\t\telse if (blk == 3) div.addClass('wmk-periodictable-block3');\n\t\t\telse if (blk == 4) div.addClass('wmk-periodictable-block4');\n\n\t\t\tlet el = Chemistry.ELEMENTS[n + 1];\n\t\t\tdiv.setText(el);\n\t\t\tthis.divList.push(div);\n\n\t\t\tdiv.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.changeElement(el);\n\t\t\t\tthis.callbackSelect(el);\n\t\t\t});\n\t\t\tdiv.onDblClick((event) =>\n\t\t\t{\n\t\t\t\tthis.callbackDoubleClick();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onSelect(callback:(element:string) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\tpublic onDoubleClick(callback:() => void):void\n\t{\n\t\tthis.callbackDoubleClick = callback;\n\t}\n\n\t// set visible selection to the given element, or nothing if it's not in the list\n\tpublic changeElement(element:string):void\n\t{\n\t\tlet atno = Chemistry.ELEMENTS.indexOf(element);\n\t\tthis.selectedAtno = [atno];\n\t\tthis.updateSelected();\n\t\t/*if (atno == this.selectedAtno) return;\n\t\tif (this.selectedAtno > 0) this.divList[this.selectedAtno - 1].removeClass('wmk-periodictable-selected');\n\t\tthis.selectedAtno = atno;\n\t\tif (this.selectedAtno > 0) this.divList[this.selectedAtno - 1].addClass('wmk-periodictable-selected');*/\n\t}\n\n\tpublic setSelectedElements(elementList:string[]):void\n\t{\n\t\tthis.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n\t\tthis.updateSelected();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate updateSelected():void\n\t{\n\t\tfor (let n = 1; n <= this.divList.length; n++)\n\t\t{\n\t\t\tif (this.selectedAtno.includes(n))\n\t\t\t\tthis.divList[n - 1].addClass('wmk-periodictable-selected');\n\t\t\telse\n\t\t\t\tthis.divList[n - 1].removeClass('wmk-periodictable-selected');\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '../mol/Molecule';\nimport {QueryUtil} from '../mol/QueryUtil';\nimport {OptionList} from '../ui/OptionList';\nimport {Widget} from '../ui/Widget';\nimport {dom, DOM} from '../util/dom';\nimport {Vec} from '../util/Vec';\n\n/*\n\tSupporting widget for editing query fields, for an atom or a bond.\n*/\n\nexport class QueryFieldsWidget extends Widget\n{\n\tprivate inputCharges:DOM;\n\tprivate optAromatic:OptionList;\n\tprivate optUnsaturated:OptionList;\n\tprivate chkNotElements:DOM;\n\tprivate inputElements:DOM;\n\tprivate chkNotRingSizes:DOM;\n\tprivate inputRingSizes:DOM;\n\tprivate optRingBlock:OptionList;\n\tprivate inputNumRings:DOM;\n\tprivate inputRingBonds:DOM;\n\tprivate inputAdjacency:DOM;\n\tprivate inputBondSums:DOM;\n\tprivate inputValences:DOM;\n\tprivate inputHydrogens:DOM;\n\tprivate inputIsotopes:DOM;\n\t//private chkSubFrags:DOM; !! ... include & exclude mutually compatible? because they can be queries...\n\t//private divQSubFrags:!!\n\tprivate inputOrders:DOM;\n\n\tconstructor(private mol:Molecule, private atom:number, private bond:number)\n\t{\n\t\tsuper();\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any)\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM);\n\t\tgrid.css({'display': 'grid', 'align-items': 'center', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[title] auto [value] auto [end]'});\n\n\t\tlet row = 0;\n\n\t\tlet makeInput = ():DOM =>\n\t\t{\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(grid).css({'grid-area': `${row} / value`});\n\t\t\treturn input;\n\t\t};\n\t\tlet makeToggleInput = ():[DOM, DOM] =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`, 'dispkay': 'flex'});\n\t\t\tlet lbl = dom('<label/>').appendTo(div).css({'margin-right': '0.5em'});\n\t\t\tlet chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n\t\t\tlbl.appendText('Not');\n\t\t\tlet input = dom('<input size=\"20\"/>').appendTo(div).css({'flex-grow': '1'});\n\t\t\treturn [chk, input];\n\t\t};\n\n\t\tif (this.atom > 0)\n\t\t{\n\t\t\tdom('<div>Charges</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputCharges = makeInput();\n\n\t\t\tdom('<div>Aromatic</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optAromatic.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div>Unsaturated</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optUnsaturated.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div>Elements</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotElements, this.inputElements] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Sizes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Block</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optRingBlock.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div># Small Rings</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputNumRings = makeInput();\n\n\t\t\tdom('<div># Ring Bonds</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputRingBonds = makeInput();\n\n\t\t\tdom('<div>Adjacency</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputAdjacency = makeInput();\n\n\t\t\tdom('<div>Bond Sums</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputBondSums = makeInput();\n\n\t\t\tdom('<div>Valences</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputValences = makeInput();\n\n\t\t\tdom('<div>Hydrogens</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputHydrogens = makeInput();\n\n\t\t\tdom('<div>Isotopes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputIsotopes = makeInput();\n\n\t\t\t// !!! FRAGMENTS...\n\n\t\t\tthis.setupAtom();\n\t\t}\n\t\telse // this.bond > 0\n\t\t{\n\t\t\tdom('<div>Ring Sizes</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\t[this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n\n\t\t\tdom('<div>Ring Block</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n\t\t\tthis.optRingBlock.render(dom('<div/>').appendTo(grid).css({'grid-area': `${row} / value`}));\n\n\t\t\tdom('<div># Small Rings</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputNumRings = makeInput();\n\n\t\t\tdom('<div>Num Rings</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputNumRings = makeInput();\n\n\t\t\tdom('<div>Bond Orders</div>').appendTo(grid).css({'grid-area': `${++row} / title`});\n\t\t\tthis.inputOrders = makeInput();\n\n\t\t\tthis.setupBond();\n\t\t}\n\t}\n\n\tpublic updateAtom():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tQueryUtil.deleteQueryAtomAll(mol, atom);\n\n\t\tlet chg = this.splitNumbers(this.inputCharges.getValue());\n\t\tif (chg) QueryUtil.setQueryAtomCharges(mol, atom, chg);\n\n\t\tlet arom = this.optAromatic.getSelectedIndex();\n\t\tif (arom > 0) QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n\n\t\tlet unsat = this.optUnsaturated.getSelectedIndex();\n\t\tif (unsat > 0) QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n\n\t\tlet elem = this.splitStrings(this.inputElements.getValue());\n\t\tif (elem)\n\t\t{\n\t\t\tif (!this.chkNotElements.elInput.checked)\n\t\t\t\tQueryUtil.setQueryAtomElements(mol, atom, elem);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n\t\t}\n\n\t\tlet ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n\t\tif (ringsz)\n\t\t{\n\t\t\tif (!this.chkNotRingSizes.elInput.checked)\n\t\t\t\tQueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n\t\t}\n\n\t\tlet ringblk = this.optRingBlock.getSelectedIndex();\n\t\tif (ringblk > 0) QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n\n\t\tlet nring = this.splitNumbers(this.inputNumRings.getValue());\n\t\tif (nring) QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n\n\t\tlet rbc = this.splitNumbers(this.inputRingBonds.getValue());\n\t\tif (rbc) QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n\n\t\tlet adj = this.splitNumbers(this.inputAdjacency.getValue());\n\t\tif (adj) QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n\n\t\tlet bond = this.splitNumbers(this.inputBondSums.getValue());\n\t\tif (bond) QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n\n\t\tlet val = this.splitNumbers(this.inputValences.getValue());\n\t\tif (val) QueryUtil.setQueryAtomValences(mol, atom, val);\n\n\t\tlet hyd = this.splitNumbers(this.inputHydrogens.getValue());\n\t\tif (hyd) QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n\n\t\tlet iso = this.splitNumbers(this.inputIsotopes.getValue());\n\t\tif (iso) QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n\n\t\t// !! FRAGMENTS\n\t}\n\n\tpublic updateBond():void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tQueryUtil.deleteQueryBondAll(mol, bond);\n\n\t\tlet ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n\t\tif (ringsz)\n\t\t{\n\t\t\tif (!this.chkNotRingSizes.elInput.checked)\n\t\t\t\tQueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n\t\t\telse\n\t\t\t\tQueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n\t\t}\n\n\t\tlet ringblk = this.optRingBlock.getSelectedIndex();\n\t\tif (ringblk > 0) QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n\n\t\tlet nring = this.splitNumbers(this.inputNumRings.getValue());\n\t\tif (nring) QueryUtil.setQueryBondNumRings(mol, bond, nring);\n\n\t\tlet order = this.splitNumbers(this.inputOrders.getValue());\n\t\tif (order) QueryUtil.setQueryBondOrders(mol, bond, order);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate setupAtom():void\n\t{\n\t\tconst {mol, atom} = this;\n\n\t\tlet chg = QueryUtil.queryAtomCharges(mol, atom);\n\t\tlet arom = QueryUtil.queryAtomAromatic(mol, atom);\n\t\tlet unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n\t\tlet elem = QueryUtil.queryAtomElements(mol, atom);\n\t\tlet elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n\t\tlet ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n\t\tlet ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n\t\tlet ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n\t\tlet nring = QueryUtil.queryAtomNumRings(mol, atom);\n\t\tlet rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n\t\tlet adj = QueryUtil.queryAtomAdjacency(mol, atom);\n\t\tlet bond = QueryUtil.queryAtomBondSums(mol, atom);\n\t\tlet val = QueryUtil.queryAtomValences(mol, atom);\n\t\tlet hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n\t\tlet iso = QueryUtil.queryAtomIsotope(mol, atom);\n\t\tlet frag = QueryUtil.queryAtomSubFrags(mol, atom);\n\t\tlet fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n\n\t\tthis.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n\t\tthis.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n\t\tthis.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n\t\tthis.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n\t\tthis.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n\t\tthis.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n\t\tthis.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n\t\tthis.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n\t\tthis.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n\t\tthis.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n\t\tthis.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n\t\tthis.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n\t\tthis.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n\t\tthis.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n\t\tthis.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n\n\t\t// TODO: frag/fragNot\n\t}\n\n\tprivate setupBond():void\n\t{\n\t\tconst {mol, bond} = this;\n\n\t\tlet ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n\t\tlet ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n\t\tlet ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n\t\tlet nring = QueryUtil.queryBondNumRings(mol, bond);\n\t\tlet order = QueryUtil.queryBondOrders(mol, bond);\n\n\t\tthis.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n\t\tthis.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n\t\tthis.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n\t\tthis.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n\t\tthis.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n\t}\n\n\tprivate splitStrings(str:string):string[]\n\t{\n\t\tlet list:string[] = [];\n\t\tif (str) for (let bit of str.split(/[\\s\\,\\;]+/)) if (bit) list.push(bit);\n\t\treturn list.length ? list : null;\n\t}\n\tprivate splitNumbers(str:string):number[]\n\t{\n\t\tlet list:number[] = [];\n\t\tif (str) for (let bit of str.split(/[\\s\\,\\;]+/))\n\t\t{\n\t\t\tif (bit.startsWith('+')) bit = bit.substring(1);\n\t\t\tlet num = parseInt(bit);\n\t\t\tif (!isNaN(num)) list.push(num);\n\t\t}\n\t\treturn list.length ? list : null;\n\t}\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {Molecule} from '../mol/Molecule';\nimport {MoleculeStream} from '../io/MoleculeStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock, PolymerBlockUnit} from '../mol/PolymerBlock';\nimport {GuidelineSprout, SketchUtil} from '../mol/SketchUtil';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ButtonView, ButtonViewPosition} from '../ui/ButtonView';\nimport {ClipboardProxy} from '../ui/ClipboardProxy';\nimport {MenuProxy} from '../ui/MenuProxy';\nimport {angleDiff, clone, DEGRAD, eventCoords, KeyCode, norm2_xy, norm_xy, RADDEG, TWOPI} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {CommandBank} from './CommandBank';\nimport {ContextSketch} from './ContextSketch';\nimport {DraggingTool, DrawCanvas, DrawCanvasDecoration} from './DrawCanvas';\nimport {EditAtom} from './EditAtom';\nimport {EditBond} from './EditBond';\nimport {EditPolymer} from './EditPolymer';\nimport {ActivityType, MoleculeActivity, SketchState, TemplatePermutation} from './MoleculeActivity';\nimport {FusionBank, TemplateBank} from './TemplateBank';\nimport {ToolBank, ToolBankItem} from './ToolBank';\n\n/*\n\tSketcher: a very heavyweight widget that provides 2D structure editing for a molecule.\n*/\n\nexport interface SketcherPlugins\n{\n\tcallbackSpecialPaste?:(str:string) => Promise<Molecule>; // define this to add special layer for clipboard interpretation\n\tcallbackComposeFragment?:(sketcher:Sketcher) => void; // define this to activate when \"composition\" is requested\n}\n\nexport class Sketcher extends DrawCanvas\n{\n\t// callbacks\n\tpublic callbackChangeMolecule:(mol:Molecule) => void;\n\tpublic plugins:SketcherPlugins = {};\n\n\tpublic inDialog = false; // set to true while a modal dialog is open\n\tpublic initialFocus = true; // normally want to bogart the focus upon creation, but not always\n\n\t// tweakable properties\n\tpublic useToolBank = true;\n\tpublic lowerToolBank = false;\n\tpublic useCommandBank = true;\n\tpublic lowerCommandBank = false;\n\tpublic useTemplateBank = true;\n\tpublic lowerTemplateBank = false;\n\tpublic debugOutput:any = undefined;\n\n\tprivate beenSetup = false;\n\tprivate undoStack:SketchState[] = [];\n\tprivate redoStack:SketchState[] = [];\n\tprivate fadeWatermark = 0;\n\tprivate toolView:ButtonView = null;\n\tprivate commandView:ButtonView = null;\n\tprivate templateView:ButtonView = null;\n\n\tprivate proxyClip:ClipboardProxy = null;\n\tprivate proxyMenu:MenuProxy = null;\n\tprivate static UNDO_SIZE = 20;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t// the sketcher needs to know what size to be, prior to rendering\n\tpublic setSize(width:number, height:number):void\n\t{\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\t// takes an instance of molsync.data.Molecule as the content; note that it is not cloned - the caller must do this if\n\t// it could be modified elsewhere; note that the 'withStashUndo' parameter is a flag, which defaults to _false_, because\n\t// this function is usually used for things like initial state; during-edit modifications are more typically done via\n\t// the setState(..) function\n\tpublic defineMolecule(mol:Molecule, withAutoScale = true, withStashUndo = false, keepSelect = false):void\n\t{\n\t\tif (mol.compareTo(this.mol) == 0) return;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.stopTemplateFusion();\n\n\t\tthis.mol = mol.clone();\n\t\tif (this.callbackChangeMolecule) this.callbackChangeMolecule(this.mol);\n\n\t\t// note: inefficient; make it compute on demand\n\t\tthis.guidelines = [];\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tfor (let sprout of SketchUtil.guidelineSprouts(this.mol, n)) this.guidelines.push(sprout);\n\t\t}\n\n\t\tif (!this.beenSetup) return;\n\n\t\tif (!keepSelect)\n\t\t{\n\t\t\tthis.currentAtom = this.currentBond = 0;\n\t\t\tthis.selectedMask = null;\n\t\t}\n\t\tthis.stereo = null;\n\t\tthis.hoverAtom = 0;\n\t\tthis.hoverBond = 0;\n\n\t\tif (!withAutoScale)\n\t\t\tthis.renderMolecule();\n\t\telse\n\t\t\tthis.autoScale();\n\t}\n\n\t// provides the mechanism for interacting with the clipboard (which is quite different for web vs. app mode)\n\tpublic defineClipboard(proxy:ClipboardProxy):void\n\t{\n\t\tthis.proxyClip = proxy;\n\t}\n\tpublic defineContext(proxy:MenuProxy):void\n\t{\n\t\tthis.proxyMenu = proxy;\n\t}\n\n\t// define the molecule as a SketchEl-formatted string\n\tpublic defineMoleculeString(molsk:string, withAutoScale:boolean, withStashUndo:boolean):void\n\t{\n\t\tthis.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n\t}\n\n\t// provides a rendering policy; the parameter should be a RenderPolicy object; note that it is not cloned\n\tpublic defineRenderPolicy(policy:RenderPolicy):void\n\t{\n\t\tthis.policy = policy;\n\t\tthis.pointScale = policy.data.pointScale;\n\t}\n\n\t// defines the colours used for border & background; note that a border of MetaVector.NOCOLOUR is an instruction to not have one\n\tpublic defineBackground(borderCol?:number, borderRad?:number, bgCol?:number):void\n\t{\n\t\tif (borderCol != null) this.border = borderCol;\n\t\tif (borderRad != null) this.borderRadius = borderRad;\n\t\tif (bgCol != null) this.background = bgCol;\n\t}\n\n\t// zappy zap\n\tpublic clearMolecule():void {this.defineMolecule(new Molecule(), true, true);}\n\n\t// retrieves a copy of the molecule\n\tpublic getMolecule():Molecule {return this.mol.clone();}\n\n\t// instantiates the widget: any of the immutable setup properties are now cast in stone\n\tpublic setup(callback:() => void):void\n\t{\n\t\tthis.beenSetup = true;\n\t\tif (this.mol == null) this.mol = new Molecule();\n\t\tif (this.policy == null)\n\t\t{\n\t\t\tthis.policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tthis.pointScale = this.policy.data.pointScale;\n\t\t}\n\n\t\tthis.layoutMolecule();\n\t\tthis.centreAndShrink();\n\t\tthis.redrawMetaVector();\n\n\t\tif (callback) callback();\n\t}\n\tpublic async setupAsync():Promise<void>\n\t{\n\t\treturn new Promise<void>((resolve) => this.setup(() => resolve()));\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.centreAndShrink();\n\t\tthis.redraw();\n\n\t\t// create the buttonviews\n\t\tlet reserveHeight = 0;\n\t\tif (this.useCommandBank)\n\t\t{\n\t\t\tthis.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n\t\t\tif (this.lowerCommandBank) this.commandView.lowerBank();\n\t\t\t// (put this back) this.commandView.lowerBank();\n\t\t\tthis.commandView.setHasBigButtons(false);\n\t\t\tthis.commandView.pushBank(new CommandBank(this));\n\t\t\tthis.commandView.render(this.container);\n\t\t\treserveHeight = this.commandView.height;\n\t\t}\n\t\tif (this.useToolBank)\n\t\t{\n\t\t\tthis.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n\t\t\tif (this.lowerToolBank) this.toolView.lowerBank();\n\t\t\tthis.toolView.setHasBigButtons(false);\n\t\t\tthis.toolView.pushBank(new ToolBank(this));\n\t\t\tthis.toolView.render(this.container);\n\t\t}\n\t\tif (this.useTemplateBank)\n\t\t{\n\t\t\tthis.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n\t\t\tif (this.lowerTemplateBank) this.templateView.lowerBank();\n\t\t\tthis.templateView.setHasBigButtons(true); // big buttons for templates is a good thing\n\t\t\tthis.templateView.pushBank(new TemplateBank(this, null));\n\t\t\tthis.templateView.render(this.container);\n\t\t}\n\n\t\t// setup all the interactive events\n\t\tthis.container.onClick((event) => this.mouseClick(event));\n\t\tthis.container.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tthis.container.onMouseDown((event) => this.mouseDown(event));\n\t\tthis.container.onMouseUp((event) => this.mouseUp(event));\n\t\tthis.container.onMouseOver((event) => this.mouseOver(event));\n\t\tthis.container.onMouseLeave((event) => this.mouseOut(event));\n\t\tthis.container.onMouseMove((event) => this.mouseMove(event));\n\t\tthis.container.onKeyPress((event) => this.keyPressed(event));\n\t\tthis.container.onKeyDown((event) => this.keyDown(event));\n\t\tthis.container.onKeyUp((event) => this.keyUp(event));\n\t\tthis.container.onTouchStart((event) => this.touchStart(event));\n\t\tthis.container.onTouchMove((event) => this.touchMove(event));\n\t\tthis.container.onTouchCancel((event) => this.touchCancel(event));\n\t\tthis.container.onTouchEnd((event) => this.touchEnd(event));\n\t\tthis.contentDOM.onContextMenu((event:MouseEvent) => this.contextMenu(event));\n\n\t\t// setup the wheel handler\n\t\t/* ...\n\t\tlet mwh = new goog.events.MouseWheelHandler(this.container);\n\t\tgoog.events.listen(mwh, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, this.mouseWheel, false, this);\n\t\t*/\n\n\t\t// setup drop events\n\t\tthis.container.el.addEventListener('dragover', (event:DragEvent) =>\n\t\t{\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tevent.dataTransfer.dropEffect = 'copy';\n\t\t});\n\t\tthis.container.el.addEventListener('drop', (event:DragEvent) =>\n\t\t{\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tthis.dropInto(event.dataTransfer);\n\t\t});\n\n\t\tif (this.initialFocus) this.grabFocus();\n\t}\n\n\t// viewing options: changing any of them triggers a redraw\n\tpublic get decoration():DrawCanvasDecoration {return this.viewOpt.decoration;}\n\tpublic set decoration(decoration:DrawCanvasDecoration) {if (this.viewOpt.decoration != decoration) {this.viewOpt.decoration = decoration; this.renderMolecule();}}\n\tpublic get showOxState():boolean {return this.viewOpt.showOxState;}\n\tpublic set showOxState(showOxState:boolean) {if (this.viewOpt.showOxState != showOxState) {this.viewOpt.showOxState = showOxState; this.renderMolecule();}}\n\tpublic get showQuery():boolean {return this.viewOpt.showQuery;}\n\tpublic set showQuery(showQuery:boolean) {if (this.viewOpt.showQuery != showQuery) {this.viewOpt.showQuery = showQuery; this.renderMolecule();}}\n\tpublic get showArtifacts():boolean {return this.viewOpt.showArtifacts;}\n\tpublic set showArtifacts(showArtifacts:boolean) {if (this.viewOpt.showArtifacts != showArtifacts) {this.viewOpt.showArtifacts = showArtifacts; this.renderMolecule();}}\n\n\t// change the size of the sketcher after instantiation\n\tpublic changeSize(width:number, height:number):void\n\t{\n\t\tif (width == this.width && height == this.height) return;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tfor (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver])\n\t\t{\n\t\t\twidget.css({'width': `${width}px`, 'height': `${height}px`});\n\t\t}\n\n\t\tfor (let btnv of [this.commandView, this.toolView, this.templateView]) if (btnv)\n\t\t{\n\t\t\tbtnv.setParentSize(width, height);\n\t\t\tbtnv.refreshBank();\n\t\t}\n\n\t\tthis.autoScale();\n\t}\n\n\t// displays a message, which may be an error or just something helpful\n\tpublic showMessage(msg:string, isError:boolean = false):void\n\t{\n\t\tlet watermark = ++this.fadeWatermark;\n\n\t\tthis.divMessage.css({'color': isError ? '#FF0000' : '#008000'});\n\t\tthis.divMessage.setText(msg);\n\t\tlet szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n\t\tlet szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n\t\tlet szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n\t\tthis.divMessage.css({'left': szLeft + 'px'});\n\t\tthis.divMessage.css({'width': (this.width - szLeft - szRight) + 'px'});\n\t\tthis.divMessage.css({'height': (this.height - szBottom) + 'px'});\n\n\t\twindow.setTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.fadeWatermark) this.divMessage.setText('');\n\t\t}, 5000);\n\t}\n\n\t// boots the message immediately\n\tpublic clearMessage()\n\t{\n\t\tif (this.divMessage.getText() == '') return;\n\t\tthis.fadeWatermark++;\n\t\tthis.divMessage.setText('');\n\t}\n\n\t// rescales and aligns to the middle of the screen\n\tpublic autoScale()\n\t{\n\t\t// note: this is inefficient; can just scale the primitives...\n\n\t\tthis.pointScale = this.policy.data.pointScale;\n\n\t\tthis.layoutMolecule();\n\t\tthis.centreAndShrink();\n\t\tthis.redrawMetaVector();\n\t\tthis.layoutTemplatePerm();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// returns true if there are any selected atoms\n\tpublic anySelected():boolean\n\t{\n\t\tif (this.selectedMask == null) return false;\n\t\tfor (let n = 0; n < this.selectedMask.length; n++) if (this.selectedMask[n]) return true;\n\t\treturn false;\n\t}\n\n\t// changes selection state for atom\n\tpublic setSelected(atom:number, sel:boolean):void\n\t{\n\t\tif (this.selectedMask == null)\n\t\t{\n\t\t\tthis.selectedMask = new Array(this.mol.numAtoms);\n\t\t\tfor (let n = this.selectedMask.length - 1; n >= 0; n--) this.selectedMask[n] = false;\n\t\t}\n\t\twhile (this.selectedMask.length < this.mol.numAtoms) {this.selectedMask.push(false);}\n\t\tthis.selectedMask[atom - 1] = sel;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenience: sets current and redraws\n\tprivate changeCurrentAtom(atom:number):void\n\t{\n\t\tif (this.currentAtom == atom) return;\n\t\tthis.currentAtom = atom;\n\t\tthis.currentBond = 0;\n\t\tthis.delayedRedraw();\n\t}\n\tprivate changeCurrentBond(bond:number):void\n\t{\n\t\tif (this.currentBond == bond) return;\n\t\tthis.currentBond = bond;\n\t\tthis.currentAtom = 0;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// select & current are zapped\n\tpublic clearSubject():void\n\t{\n\t\tif (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask)) return;\n\t\tthis.currentAtom = 0;\n\t\tthis.currentBond = 0;\n\t\tthis.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n\t\tthis.delayedRedraw();\n\t}\n\n\t// sets the current state; see getState() function above for the format of the object; the 'withStashUndo' parameter is a\n\t// flag, which defaults to true: determines whether the current state will be pushed onto the undo-stack before making the change\n\tpublic setState(state:SketchState, withStashUndo:boolean = true):void\n\t{\n\t\tthis.stopTemplateFusion();\n\n\t\tif (state.mol != null) this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n\t\tif (state.currentAtom >= 0) this.currentAtom = state.currentAtom;\n\t\tif (state.currentBond >= 0) this.currentBond = state.currentBond;\n\t\tif (state.selectedMask != null) this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n\n\t\tthis.delayedRedraw();\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mol.numAtoms == 0) return; // don't put empty stuff at the beginning\n\t\tlet state = this.getState();\n\n\t\tthis.undoStack.push(state);\n\t\twhile (this.undoStack.length > Sketcher.UNDO_SIZE)\n\t\t{\n\t\t\tthis.undoStack.splice(0, 1);\n\t\t}\n\t\tthis.redoStack = [];\n\t}\n\n\t// a bunch of template fusion permutations has arrived: display the first one, and allow them to be traversed\n\tpublic setPermutations(perms:TemplatePermutation[]):void\n\t{\n\t\tthis.templatePerms = perms;\n\t\tthis.pickTemplatePermutation(0);\n\t\tthis.fusionBank = new FusionBank(this);\n\t\tthis.templateView.pushBank(this.fusionBank);\n\n\t\tif (this.mol.numAtoms == 0) this.centreAndShrink();\n\t}\n\n\t// stop fusing templates, and clear out the fusion bank as well\n\tpublic stopTemplateFusion():void\n\t{\n\t\tif (this.fusionBank != null) this.templateView.popBank();\n\t}\n\n\t// get rid of the template overlay\n\tpublic clearPermutations()\n\t{\n\t\tif (this.templatePerms == null) return;\n\t\tthis.templatePerms = null;\n\t\tthis.delayedRedraw();\n\t\tthis.fusionBank = null;\n\t}\n\n\t// accept the current template permutation: make it the new molecule\n\tpublic templateAccept():void\n\t{\n\t\tlet mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n\t\tthis.templateView.popBank();\n\t\tthis.defineMolecule(mol, false, true, false);\n\t}\n\n\t// rotate the template display up or down\n\tpublic templateRotate(dir:number)\n\t{\n\t\tlet idx = (this.currentPerm + dir) % this.templatePerms.length;\n\t\tif (idx < 0) idx += this.templatePerms.length;\n\t\tthis.pickTemplatePermutation(idx);\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tlet state = this.getState();\n\t\tthis.redoStack.push(state);\n\t\tthis.setState(this.undoStack.pop(), false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tlet state = this.getState();\n\t\tthis.undoStack.push(state);\n\t\tthis.setState(this.redoStack.pop(), false);\n\t}\n\n\t// copying to clipboard: sticks the content in several different places, for subsequent recall\n\tpublic performCopy(mol?:Molecule):void\n\t{\n\t\tif (!mol) mol = this.getMolecule();\n\n\t\tif (this.proxyClip) this.proxyClip.setString(mol.toString());\n\t}\n\n\t// perform a more surgical copy/cut operation\n\tpublic performCopySelection(andCut:boolean):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n\t}\n\n\t// pasting from clipboard, initiated by the user via non-system commands: this can't necessarily grab the system\n\t// clipboard, so have to get a bit more creative\n\tpublic performPaste():void\n\t{\n\t\t// see if we have access to the system clipboard\n\t\tif (this.proxyClip && this.proxyClip.canAlwaysGet())\n\t\t{\n\t\t\tlet txt = this.proxyClip.getString();\n\t\t\tthis.pasteText(txt);\n\t\t}\n\t}\n\n\t// executes an arbitrary activity on the current molecule/selection state\n\tpublic performActivity(activity:ActivityType, param:Record<string, any> = {}):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), activity, param, this).execute();\n\t}\n\n\t// zooms in or out, depending on the magnifier\n\tpublic zoom(mag:number)\n\t{\n\t\tlet cx = 0.5 * this.width, cy = 0.5 * this.height;\n\t\tlet newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n\t\tif (newScale == this.pointScale) return;\n\n\t\tthis.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n\t\tthis.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n\t\tthis.pointScale = newScale;\n\n\t\t// --- begin inefficient: rewrite this to just transform the constituents...\n\t\tthis.layoutMolecule();\n\t\tthis.redrawMetaVector();\n\t\tthis.layoutTemplatePerm();\n\t\t// --- end inefficient\n\n\t\tthis.delayedRedraw();\n\t}\n\n\t// bring up the interactive editing mode for current object, if any\n\tpublic editCurrent():void\n\t{\n\t\tif (this.currentBond > 0)\n\t\t\tthis.editBond(this.currentBond);\n\t\telse\n\t\t\tthis.editAtom(this.currentAtom);\n\t}\n\n\t// pasted text from clipboard (can be activated from outside the widget, so is public)\n\tpublic pasteText(str:string):void\n\t{\n\t\tconst pasteLocal = () =>\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\tlet ds = DataSheetStream.readXML(str);\n\t\t\t\tif (ds)\n\t\t\t\t{\n\t\t\t\t\touter: for (let r = 0; r < ds.numRows; r++) for (let c = 0; c < ds.numCols; c++) if (ds.colType(c) == DataSheetColumn.Molecule && ds.notNull(r, c))\n\t\t\t\t\t{\n\t\t\t\t\t\tmol = ds.getMolecule(r, c);\n\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mol != null) this.pasteMolecule(mol);\n\t\t\telse alert('Text from clipboard is not a valid molecule.');\n\t\t};\n\n\t\tif (this.plugins.callbackSpecialPaste)\n\t\t{\n\t\t\t(async () =>\n\t\t\t{\n\t\t\t\tlet mol = await this.plugins.callbackSpecialPaste(str);\n\t\t\t\tif (mol)\n\t\t\t\t\tthis.pasteMolecule(mol);\n\t\t\t\telse\n\t\t\t\t\tpasteLocal();\n\t\t\t})();\n\t\t}\n\t\telse pasteLocal();\n\t}\n\tpublic pasteMolecule(mol:Molecule):void\n\t{\n\t\tif (this.mol.numAtoms == 0)\n\t\t{\n\t\t\tthis.defineMolecule(mol, true, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal for pasting query-only features\n\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, {qmol: mol});\n\t\tmolact.execute();\n\t\tif (molact.output.mol)\n\t\t{\n\t\t\tthis.defineMolecule(molact.output.mol, false, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\tlet param = {fragNative: mol.toString()};\n\t\tnew MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n\t}\n\n\t// changes the template permutation: if necessary requests the layout, and redraws the screen\n\tpublic pickTemplatePermutation(idx:number)\n\t{\n\t\tlet perm = this.templatePerms[idx];\n\t\tthis.currentPerm = idx;\n\n\t\tthis.layoutTemplatePerm();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// bring up the dialog for converting the subject atoms into a polymer block repeating unit\n\tpublic performPolymerBlock(atoms:number[]):void\n\t{\n\t\tlet dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\n\t// ensure that focus is happening\n\tpublic grabFocus():void\n\t{\n\t\tthis.container.grabFocus();\n\t}\n\n\t// returns true if the sketcher is focused; the display of focus is not visible, but it is still recorded\n\tpublic hasFocus():boolean\n\t{\n\t\treturn this.container.hasFocus();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// redetermines the offset and scale so that the molecular structure fits cleanly\n\tprivate centreAndShrink():void\n\t{\n\t\tif (this.mol.numAtoms == 0 || this.layout == null)\n\t\t{\n\t\t\tthis.offsetX = 0.5 * this.width;\n\t\t\tthis.offsetY = 0.5 * this.height;\n\t\t\tthis.pointScale = this.policy.data.pointScale;\n\t\t\treturn;\n\t\t}\n\n\t\tlet bounds = this.layout.determineBoundary(0);\n\n\t\tlet limW = this.width - 6, limH = this.height - 6;\n\t\tlet natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n\n\t\tlet scale = 1;\n\t\tif (natW > limW)\n\t\t{\n\t\t\tlet down = limW / natW;\n\t\t\tscale *= down;\n\t\t\tnatW *= down;\n\t\t\tnatH *= down;\n\t\t}\n\t\tif (natH > limH)\n\t\t{\n\t\t\tlet down = limH / natH;\n\t\t\tscale *= down;\n\t\t\tnatW *= down;\n\t\t\tnatH *= down;\n\t\t}\n\n\t\tif (scale < 1)\n\t\t{\n\t\t\tthis.pointScale *= scale;\n\t\t\tthis.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n\t\t\tthis.layout.scaleEverything(scale);\n\t\t\tbounds = this.layout.determineBoundary(0);\n\t\t}\n\n\t\tlet dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n\t\tthis.offsetX += dx;\n\t\tthis.offsetY += dy;\n\t\tthis.layout.offsetEverything(dx, dy);\n\t}\n\n\t// creates the template permutation rendering object using the same transform as the main molecule\n\tprivate layoutTemplatePerm():void\n\t{\n\t\tif (this.currentPerm < 0 || this.templatePerms == null) return;\n\t\tlet perm = this.templatePerms[this.currentPerm];\n\n\t\tlet tpolicy = new RenderPolicy(this.policy.data);\n\t\ttpolicy.data.foreground = 0x808080;\n\t\ttpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n\t\tfor (let n in tpolicy.data.atomCols) tpolicy.data.atomCols[n] = 0x808080;\n\n\t\tlet effects = new RenderEffects();\n\t\tlet layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n\t\tlayout.arrange();\n\t\tperm.metavec = new MetaVector();\n\t\tnew DrawMolecule(layout, perm.metavec).draw();\n\t}\n\n\t// re-render the molecule into its graphical state buffers, then trigger a delayed re-splat onto the canvas; this is useful when the molecule\n\t// is to be displayed differently even though the molecule itself has not actually changed\n\tprivate renderMolecule():void\n\t{\n\t\tthis.layoutMolecule();\n\t\tthis.redrawMetaVector();\n\t\tthis.delayedRedraw();\n\t}\n\n\t// locates a molecular object at the given position: returns N for atom, -N for bond, 0 for nothing, or null for not-on-canvas (e.g. button banks)\n\tprotected pickObjectCanvas(x:number, y:number):number\n\t{\n\t\tif (this.layout == null) return 0;\n\n\t\t// if the position is over a buttonview, return zero (yes, this does happen)\n\t\tif (this.toolView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n\t\t\tif (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\t\tif (this.commandView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n\t\t\tif (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\t\tif (this.templateView != null)\n\t\t{\n\t\t\tlet pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n\t\t\tif (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y)) return null;\n\t\t}\n\n\t\treturn super.pickObjectCanvas(x, y);\n\t}\n\n\t// response to some mouse event: hovering cursor restated\n\tprivate updateHoverCursor(x:number, y:number):void\n\t{\n\t\tlet tool = this.toolView ? this.toolView.selectedButton : '';\n\t\tlet toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n\n\t\tlet mouseObj = 0;\n\n\t\tif (this.dragType == DraggingTool.None && toolApplies)\n\t\t{\n\t\t\tmouseObj = this.pickObject(x, y);\n\t\t}\n\t\tlet mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n\n\t\tlet abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n\t\tlet abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n\n\t\tif (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond)\n\t\t{\n\t\t\tthis.hoverAtom = mouseAtom;\n\t\t\tthis.hoverBond = mouseBond;\n\t\t\tif (abbrevThen != abbrevNow)\n\t\t\t{\n\t\t\t\tthis.layoutMolecule();\n\t\t\t\tthis.redrawMetaVector();\n\t\t\t}\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// looks through the current list of available guidelines, and picks out the sprouting(s) that relate to the clicked atom, if any\n\tprivate determineDragGuide(order:number):GuidelineSprout[]\n\t{\n\t\t// special deal: if no atom clicked, create a fake one with 30 degree angles from the click position\n\t\tif (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0)\n\t\t{\n\t\t\tlet g:GuidelineSprout =\n\t\t\t{\n\t\t\t\tatom: this.opAtom,\n\t\t\t\torders: [order],\n\t\t\t\tx: [],\n\t\t\t\ty: [],\n\t\t\t\tsourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n\t\t\t\tsourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n\t\t\t\tdestX: [],\n\t\t\t\tdestY: []\n\t\t\t};\n\n\t\t\tlet mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n\t\t\tlet my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n\t\t\tfor (let n = 0; n < 12; n++)\n\t\t\t{\n\t\t\t\tlet theta = TWOPI * n / 12;\n\t\t\t\tlet dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n\t\t\t\tg.x.push(mx + dx);\n\t\t\t\tg.y.push(my + dy);\n\t\t\t\tg.destX.push(g.sourceX + dx * this.pointScale);\n\t\t\t\tg.destY.push(g.sourceY - dy * this.pointScale);\n\t\t\t}\n\n\t\t\treturn [g];\n\t\t}\n\n\t\tif (this.guidelines == null) return null;\n\n\t\tlet best:GuidelineSprout = null, single:GuidelineSprout = null;\n\t\tfor (let n = 0; n < this.guidelines.length; n++)\n\t\t{\n\t\t\tlet g = this.guidelines[n];\n\t\t\tif (g.atom != this.opAtom) continue;\n\t\t\tif (g.orders.indexOf(order) >= 0) {best = g; break;}\n\t\t\tif (g.orders.indexOf(1) >= 0) single = g;\n\t\t}\n\t\tif (best == null) best = single;\n\t\tif (best == null) return [];\n\n\t\tlet g = clone(best) as GuidelineSprout;\n\t\tg.sourceX = this.angToX(this.mol.atomX(g.atom));\n\t\tg.sourceY = this.angToY(this.mol.atomY(g.atom));\n\t\tg.destX = [];\n\t\tg.destY = [];\n\t\tfor (let n = 0; n < g.x.length; n++)\n\t\t{\n\t\t\tg.destX.push(this.angToX(g.x[n]));\n\t\t\tg.destY.push(this.angToY(g.y[n]));\n\t\t}\n\t\treturn [g];\n\t}\n\n\t// activates drag guidelines for moving atoms - this is anything besides the atoms that are being moved\n\tprivate determineMoveGuide():GuidelineSprout[]\n\t{\n\t\tlet subj = this.subjectAtoms(false, true);\n\t\tif (subj.length == 0 || subj.length == this.mol.numAtoms) return null;\n\n\t\tlet guides:GuidelineSprout[] = [];\n\t\tfor (let n = 0; n < this.guidelines.length; n++)\n\t\t{\n\t\t\tlet g = this.guidelines[n];\n\t\t\tif (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0) continue;\n\n\t\t\tg = clone(g) as GuidelineSprout;\n\t\t\tg.sourceX = this.angToX(this.mol.atomX(g.atom));\n\t\t\tg.sourceY = this.angToY(this.mol.atomY(g.atom));\n\t\t\tg.destX = [];\n\t\t\tg.destY = [];\n\t\t\tfor (let i = 0; i < g.x.length; i++)\n\t\t\t{\n\t\t\t\tg.destX.push(this.angToX(g.x[i]));\n\t\t\t\tg.destY.push(this.angToY(g.y[i]));\n\t\t\t}\n\t\t\tguides.push(g);\n\t\t}\n\t\treturn guides;\n\t}\n\n\t// interactively edit the given atom/bond\n\tprivate editAtom(atom:number):void\n\t{\n\t\tlet dlg = new EditAtom(this.mol, atom, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tif (atom == 0 && this.mol.numAtoms > 0)\n\t\t{\n\t\t\tlet box = this.mol.boundary();\n\t\t\tdlg.newX = box.maxX() + Molecule.IDEALBOND;\n\t\t\tdlg.newY = box.midY();\n\t\t}\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\tprivate editBond(bond:number):void\n\t{\n\t\tif (bond == 0) return;\n\n\t\tlet dlg = new EditBond(this.mol, bond, this.proxyClip, () =>\n\t\t{\n\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, false, true, true);\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.callbackClose = () =>\n\t\t{\n\t\t\tthis.inDialog = false;\n\t\t\tthis.grabFocus();\n\t\t};\n\t\tthis.inDialog = true;\n\t\tdlg.open();\n\t}\n\n\t// move the current selection in one of the cardinal directions\n\tprivate hitArrowKey(dx:number, dy:number):void\n\t{\n\t\tlet watermark = ++this.cursorWatermark;\n\t\tthis.cursorDX += dx;\n\t\tthis.cursorDY += dy;\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.cursorWatermark) this.cursorJumpDirection();\n\t\t}, 100);\n\t}\n\n\t// given the direction of the cursor offset, try to move the current position in that direction\n\tprivate cursorJumpDirection():void\n\t{\n\t\tlet theta = Math.atan2(this.cursorDY, this.cursorDX);\n\t\tif (this.currentAtom > 0) this.jumpFromCurrentAtom(theta);\n\t\telse if (this.currentBond > 0) this.jumpFromCurrentBond(theta);\n\t\telse this.jumpFromNowhere(theta);\n\n\t\tthis.cursorDX = 0;\n\t\tthis.cursorDY = 0;\n\t\tthis.cursorWatermark = 0;\n\t}\n\tprivate jumpFromCurrentAtom(theta:number):void\n\t{\n\t\t// see if we can follow a bond\n\t\tlet adj = this.mol.atomAdjList(this.currentAtom);\n\t\tlet closest = 0, closestDelta = Number.MAX_VALUE;\n\t\tfor (let a of adj)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n\t\t\tlet adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n\t\t\tif (delta < 35.0 * DEGRAD && delta < closestDelta) [closest, closestDelta] = [a, delta];\n\t\t}\n\t\tif (closest > 0)\n\t\t{\n\t\t\tthis.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n\t\t\treturn;\n\t\t}\n\n\t\t// no bond to hop onto, so try jumping across a chasm\n\t\tlet best = 0, bestScore = Number.MIN_VALUE;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (n != this.currentAtom && adj.indexOf(n) < 0)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n\t\t\tlet adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n\t\t\tif (delta > 45.0 * DEGRAD) continue; // must be in the cone\n\t\t\tlet cosdelta = Math.cos(delta);\n\t\t\tlet score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n\t\t\tif (score > bestScore) [best, bestScore] = [n, score];\n\t\t}\n\t\tif (best > 0) this.changeCurrentAtom(best);\n\t}\n\tprivate jumpFromCurrentBond(theta:number):void\n\t{\n\t\tlet [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n\t\tlet bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n\t\tif (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD) this.changeCurrentAtom(bto);\n\t\tif (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD) this.changeCurrentAtom(bfr);\n\t\t//  (otherwise do nothing)\n\t}\n\tprivate jumpFromNowhere(theta:number):void\n\t{\n\t\tif (this.mol.numAtoms == 0) return;\n\t\tif (this.mol.numAtoms == 1) {this.changeCurrentAtom(1); return;}\n\n\t\tlet cx = 0, cy = 0;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) {cx += this.mol.atomX(n); cy += this.mol.atomY(n);}\n\t\tlet inv = 1.0 / this.mol.numAtoms;\n\t\tcx *= inv; cy *= inv;\n\n\t\tlet best = 0, bestScore = Number.MIN_VALUE;\n\t\tfor (let n = 1; n <= this.mol.numAtoms; n++)\n\t\t{\n\t\t\tlet dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n\t\t\tlet cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n\t\t\tlet score = cosdelta * norm_xy(dx, dy);\n\t\t\tif (score > bestScore) [best, bestScore] = [n, score];\n\t\t}\n\t\tif (best > 0) this.changeCurrentAtom(best);\n\t}\n\n\t// manufactures a ring of given size based on context\n\tprivate createRing(rsz:number, aromatic:boolean):void\n\t{\n\t\tconst {mol} = this;\n\t\tlet rx:number[] = null, ry:number[] = null;\n\t\tif (this.currentAtom > 0)\n\t\t{\n\t\t\tlet dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n\t\t\tlet x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n\t\t\tfor (let a of adj)\n\t\t\t{\n\t\t\t\tdx -= mol.atomX(a) - x0;\n\t\t\t\tdy -= mol.atomY(a) - y0;\n\t\t\t}\n\t\t\tif (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001)\n\t\t\t{\n\t\t\t\tif (adj.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n\t\t\t\t\tVec.sort(theta);\n\t\t\t\t\tlet best = Number.POSITIVE_INFINITY;\n\t\t\t\t\tfor (let n = 0; n < theta.length; n++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n\t\t\t\t\t\tlet lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n\t\t\t\t\t\tif (score < best) [best, dx, dy] = [score, lx, ly];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse [dx, dy] = [1, 0];\n\t\t\t}\n\t\t\t[rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n\t\t}\n\t\telse if (this.currentBond > 0)\n\t\t{\n\t\t\tlet a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n\t\t\tlet x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n\t\t\tlet cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n\t\t\tlet [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n\t\t\t[rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet x = 0, y = 0;\n\t\t\tif (mol.numAtoms > 0)\n\t\t\t{\n\t\t\t\tlet bound = mol.boundary();\n\t\t\t\t[x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n\t\t\t}\n\t\t\t[rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n\t\t}\n\n\t\tif (!rx) return;\n\n\t\tlet param:any =\n\t\t{\n\t\t\tringX: rx,\n\t\t\tringY: ry,\n\t\t\taromatic: aromatic\n\t\t};\n\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n\t\tmolact.execute();\n\t}\n\n\t// get sprout direction ready\n\tprivate ctrlArrowKey(dx:number, dy:number):void\n\t{\n\t\tlet watermark = ++this.cursorWatermark;\n\t\tthis.cursorDX += dx;\n\t\tthis.cursorDY += dy;\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tif (watermark == this.cursorWatermark)\n\t\t\t{\n\t\t\t\tthis.sproutDirection(this.cursorDX, this.cursorDY);\n\t\t\t\tthis.cursorDX = this.cursorDY = 0;\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\t// starting with the current atom, creates a new bond jumping outward\n\tprivate sproutDirection(deltaX:number, deltaY:number):void\n\t{\n\t\tnew MoleculeActivity(this.getState(), ActivityType.SproutDirection, {deltaX, deltaY}, this).execute();\n\t}\n\n\tprivate launchComposeFragment():void\n\t{\n\t\tconst {callbackComposeFragment} = this.plugins;\n\t\tif (!callbackComposeFragment || this.inDialog) return;\n\t\tcallbackComposeFragment(this);\n\t}\n\n\t// --------------------------------------- toolkit events ---------------------------------------\n\n\t// event responses\n\tprivate mouseClick(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tthis.grabFocus(); // just in case it wasn't already\n\t\treturn false;\n\t}\n\tprivate mouseDoubleClick(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tif (this.toolView.selectedButton != ToolBankItem.Arrow) return;\n\n\t\tlet xy = eventCoords(event, this.container);\n\t\tlet clickObj = this.pickObject(xy[0], xy[1]);\n\t\tif (clickObj > 0)\n\t\t{\n\t\t\tlet atom = clickObj;\n\t\t\tthis.editAtom(atom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet bond = -clickObj;\n\t\t\tthis.editBond(bond);\n\t\t}\n\t\treturn false;\n\t}\n\tprivate mouseDown(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tthis.clearMessage();\n\n\t\tif (event.ctrlKey && !event.shiftKey && !event.altKey)\n\t\t{\n\t\t\tthis.contextMenu(event);\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n\n\t\treturn false;\n\t}\n\tprivate mouseUp(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.interactEnd(x, y);\n\n\t\treturn false;\n\t}\n\tprivate mouseOver(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\t\tthis.updateLasso(x, y);\n\t\treturn false;\n\t}\n\tprivate mouseOut(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\t\tthis.updateLasso(x, y);\n\t\treturn false;\n\t}\n\tprivate mouseMove(event:MouseEvent):boolean\n\t{\n\t\tevent.stopPropagation();\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tthis.updateHoverCursor(x, y);\n\n\t\tif (this.dragType == DraggingTool.None) return; // mouse button isn't pressed\n\n\t\tthis.interactDrag(x, y);\n\n\t\treturn false;\n\t}\n\n\tprivate keyPressed(event:KeyboardEvent):void\n\t{\n\t\t// placeholder\n\t}\n\tprivate keyDown(event:KeyboardEvent):void\n\t{\n\t\tlet key = event.key;\n\n\t\t// special deal for the escape key: if any bank needs to be popped, consume it\n\t\tif (key == KeyCode.Escape)\n\t\t{\n\t\t\tfor (let view of [this.templateView, this.commandView, this.toolView]) if (view != null && view.stackSize > 1)\n\t\t\t{\n\t\t\t\tview.popBank();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : ''); // (meta==cmd on mac; alt=opt on mac)\n\t\tlet nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n\n\t\t// console.log(`Sketcher/Key:${key} Mod:${mod} Date:${new Date()}`);\n\n\t\tif (this.toolView != null && this.toolView.topBank.claimKey(event)) {}\n\t\telse if (this.commandView != null && this.commandView.topBank.claimKey(event)) {}\n\t\telse if (this.templateView != null && this.templateView.topBank.claimKey(event)) {}\n\t\telse if (key == KeyCode.Enter) this.editCurrent();\n\t\telse if (key == KeyCode.Left && nomod) this.hitArrowKey(-1, 0);\n\t\telse if (key == KeyCode.Right && nomod) this.hitArrowKey(1, 0);\n\t\telse if (key == KeyCode.Up && nomod) this.hitArrowKey(0, 1);\n\t\telse if (key == KeyCode.Down && nomod) this.hitArrowKey(0, -1);\n\t\telse if (key == 'z' && mod == 'C') this.performUndo();\n\t\telse if (key == 'Z' && mod == 'SC') this.performRedo();\n\t\telse if (key == 'z' && nomod) this.toolView.cycleSelected(-1);\n\t\telse if (key == 'x' && nomod) this.toolView.cycleSelected(1);\n\t\telse if (key == '#' && mod == 'SC') this.createRing(3, false);\n\t\telse if (key == '$' && mod == 'SC') this.createRing(4, false);\n\t\telse if (key == '%' && mod == 'SC') this.createRing(5, false);\n\t\telse if (key == '^' && mod == 'SC') this.createRing(6, false);\n\t\telse if (key == '&' && mod == 'SC') this.createRing(7, false);\n\t\telse if (key == '3' && mod == 'CA') this.createRing(3, true);\n\t\telse if (key == '4' && mod == 'CA') this.createRing(4, true);\n\t\telse if (key == '5' && mod == 'CA') this.createRing(5, true);\n\t\telse if (key == '6' && mod == 'CA') this.createRing(6, true);\n\t\telse if (key == '7' && mod == 'CA') this.createRing(7, true);\n\t\telse if (key == 'c' && mod == 'C' && this.proxyClip) this.proxyClip.triggerCopy(false);\n\t\telse if (key == 'x' && mod == 'C' && this.proxyClip) this.proxyClip.triggerCopy(true);\n\t\telse if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet()) this.proxyClip.triggerPaste();\n\t\telse if (key == KeyCode.Left && mod == 'C') this.ctrlArrowKey(-1, 0);\n\t\telse if (key == KeyCode.Right && mod == 'C') this.ctrlArrowKey(1, 0);\n\t\telse if (key == KeyCode.Up && mod == 'C') this.ctrlArrowKey(0, 1);\n\t\telse if (key == KeyCode.Down && mod == 'C') this.ctrlArrowKey(0, -1);\n\t\telse if (key == '1' && mod == 'C') this.sproutDirection(-1, -1);\n\t\telse if (key == '2' && mod == 'C') this.sproutDirection(0, -1);\n\t\telse if (key == '3' && mod == 'C') this.sproutDirection(1, -1);\n\t\telse if (key == '4' && mod == 'C') this.sproutDirection(-1, 0);\n\t\telse if (key == '6' && mod == 'C') this.sproutDirection(1, 0);\n\t\telse if (key == '7' && mod == 'C') this.sproutDirection(-1, 1);\n\t\telse if (key == '8' && mod == 'C') this.sproutDirection(0, 1);\n\t\telse if (key == '9' && mod == 'C') this.sproutDirection(1, 1);\n\t\telse if (key == '`' && nomod) this.launchComposeFragment();\n\t\telse return; // allow the key to percolate upward\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\tprivate keyUp(event:KeyboardEvent):void\n\t{\n\t\t// ..\n\t}\n\tprivate touchStart(event:TouchEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event.touches[0], this.container);\n\t\tif (this.pickObjectCanvas(x, y) == null) return; // defer to an overlaying widget\n\n\t\tthis.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n\t\tevent.preventDefault();\n\t}\n\tprivate touchMove(event:TouchEvent):void\n\t{\n\t\tif (this.dragType != DraggingTool.None)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event.touches[0], this.container);\n\t\t\tthis.interactDrag(x, y);\n\t\t}\n\n\t\tevent.preventDefault(); // prevents panning around the place\n\t}\n\tprivate touchCancel(event:TouchEvent):void\n\t{\n\t\t//event.preventDefault();\n\t}\n\tprivate touchEnd(event:TouchEvent):void\n\t{\n\t\tif (this.dragType != DraggingTool.None)\n\t\t{\n\t\t\tlet [x, y] = [this.mouseX, this.mouseY]; // end events have 0 touches, so use last known\n\t\t\tthis.interactEnd(x, y);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\tprivate mouseWheel(event:MouseEvent):void\n\t{\n\t\t/* maybe reinstate? not sure...\n\t\tlet xy = eventCoords(event, this.container);\n\t\tlet newScale = this.scale * (1 - event.deltaY * 0.1);\n\t\tnewScale = Math.min(10, Math.max(0.1, newScale));\n\t\tlet newOX = xy[0] - (newScale / this.scale) * (xy[0] - this.offsetX);\n\t\tlet newOY = xy[1] - (newScale / this.scale) * (xy[1] - this.offsetY);\n\n\t\tthis.scale = newScale;\n\t\tthis.offsetX = newOX;\n\t\tthis.offsetY = newOY;\n\n\t\tthis.delayedRedraw();\n\n\t\tevent.stopPropagation = true;\n\t\t*/\n\t}\n\tprivate contextMenu(event:MouseEvent):void\n\t{\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.dragType = DraggingTool.None;\n\n\t\tif (!this.proxyMenu) return;\n\n\t\tlet [x, y] = eventCoords(event, this.container);\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tif (clickObj > 0) this.changeCurrentAtom(clickObj);\n\t\telse if (clickObj < 0) this.changeCurrentBond(-clickObj);\n\t\tlet state = this.getState();\n\n\t\tlet ctx = new ContextSketch(state, this, this.proxyClip);\n\t\tlet menu = ctx.populate();\n\t\tthis.proxyMenu.openContextMenu(menu, event);\n\t}\n\n\t// the mouse/touch sequence began\n\tprivate interactStart(x:number, y:number, shiftKey:boolean, ctrlKey:boolean, altKey:boolean):void\n\t{\n\t\tthis.dragType = DraggingTool.Press;\n\t\tthis.opBudged = false;\n\t\tthis.dragGuides = null;\n\n\t\tthis.mouseX = x;\n\t\tthis.mouseY = y;\n\t\tthis.clickX = x;\n\t\tthis.clickY = y;\n\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tthis.opAtom = clickObj > 0 ? clickObj : 0;\n\t\tthis.opBond = clickObj < 0 ? -clickObj : 0;\n\t\tthis.opShift = shiftKey;\n\t\tthis.opCtrl = ctrlKey;\n\t\tthis.opAlt = altKey;\n\n\t\tlet tool = '';\n\t\tif (this.toolView != null) tool = this.toolView.selectedButton;\n\n\t\tif (tool == ToolBankItem.Arrow)\n\t\t{\n\t\t\t// special key modifiers for the arrow tool:\n\t\t\t//\t\tCTRL: open context menu\n\t\t\t//\t\tSHIFT: toggle selection of object [see mouseClick]\n\t\t\t//\t\tALT: enter pan-mode\n\t\t\t//\t\tALT+CTRL: enter zoom mode\n\t\t\tif (!this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Press;\n\t\t\t}\n\t\t\t//else if (!this.opShift && this.opCtrl && !this.opAlt) (done already)\n\t\t\telse if (!this.opShift && !this.opCtrl && this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Pan;\n\t\t\t}\n\t\t\telse if (!this.opShift && this.opCtrl && this.opAlt)\n\t\t\t{\n\t\t\t\tthis.dragType = DraggingTool.Zoom;\n\t\t\t}\n\t\t}\n\t\telse if (tool == ToolBankItem.Rotate)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Rotate;\n\t\t\tthis.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n\t\t}\n\t\telse if (tool == ToolBankItem.Pan)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Pan;\n\t\t}\n\t\telse if (tool == ToolBankItem.Drag)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Move;\n\t\t\tif (this.opAtom > 0) this.dragGuides = this.determineMoveGuide();\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse if (tool == ToolBankItem.Erasor)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Erasor;\n\t\t\tthis.lassoX = [x];\n\t\t\tthis.lassoY = [y];\n\t\t\tthis.lassoMask = [];\n\t\t}\n\t\telse if (tool == ToolBankItem.RingAliph)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Ring;\n\t\t\tthis.toolRingArom = false;\n\t\t\tthis.toolRingFreeform = this.opShift;\n\t\t}\n\t\telse if (tool == ToolBankItem.RingArom)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Ring;\n\t\t\tthis.toolRingArom = true;\n\t\t\tthis.toolRingFreeform = this.opShift;\n\t\t}\n\t\telse if (tool == ToolBankItem.AtomPlus)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Charge;\n\t\t\tthis.toolChargeDelta = 1;\n\t\t}\n\t\telse if (tool == ToolBankItem.AtomMinus)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Charge;\n\t\t\tthis.toolChargeDelta = -1;\n\t\t}\n\t\telse if (tool.startsWith(ToolBankItem.BondPfx))\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Bond;\n\t\t\tthis.toolBondOrder = 1;\n\t\t\tthis.toolBondType = Molecule.BONDTYPE_NORMAL;\n\n\t\t\tif (tool == ToolBankItem.BondOrder0) this.toolBondOrder = 0;\n\t\t\telse if (tool == ToolBankItem.BondOrder2) this.toolBondOrder = 2;\n\t\t\telse if (tool == ToolBankItem.BondOrder3) this.toolBondOrder = 3;\n\t\t\telse if (tool == ToolBankItem.BondUnknown) this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n\t\t\telse if (tool == ToolBankItem.BondInclined) this.toolBondType = Molecule.BONDTYPE_INCLINED;\n\t\t\telse if (tool == ToolBankItem.BondDeclined) this.toolBondType = Molecule.BONDTYPE_DECLINED;\n\n\t\t\t// drag-from-bond is only a thing when polymers are involved\n\t\t\tif (this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n\t\t\t\tfor (let poly of new PolymerBlock(this.mol).getUnits())\n\t\t\t\t{\n\t\t\t\t\tlet in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n\t\t\t\t\tif ((in1 && !in2) || (in2 && !in1)) {inPoly = true; break;}\n\t\t\t\t}\n\t\t\t\tif (inPoly)\n\t\t\t\t{\n\t\t\t\t\tthis.toolBondOrder = 0;\n\t\t\t\t\tthis.toolBondType = Molecule.BONDTYPE_NORMAL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.opBond == 0) this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n\t\t}\n\t\telse if (tool.startsWith(ToolBankItem.ElementPfx))\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Atom;\n\t\t\tthis.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n\t\t\tthis.dragGuides = this.determineDragGuide(1);\n\t\t}\n\t}\n\n\t// the mouse/touch was moved to a new position, respond accordingly\n\tprotected interactDrag(x:number, y:number)\n\t{\n\t\t// once the mouse has moved more than a few pixels, it fips into \"drag mode\" rather than \"click mode\"\n\t\tif (!this.opBudged)\n\t\t{\n\t\t\tlet dx = x - this.clickX, dy = y - this.clickY;\n\t\t\tif (dx * dx + dy * dy > 2 * 2) this.opBudged = true;\n\t\t}\n\n\t\t// switch lasso mode on if it becomes an open drag\n\t\tif (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged)\n\t\t{\n\t\t\tthis.dragType = DraggingTool.Lasso;\n\t\t\tthis.lassoX = [x];\n\t\t\tthis.lassoY = [y];\n\t\t\tthis.lassoMask = [];\n\t\t}\n\n\t\t// update the various dragging-already tools\n\t\tif (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tthis.updateLasso(x, y);\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Pan)\n\t\t{\n\t\t\tlet dx = x - this.mouseX, dy = y - this.mouseY;\n\n\t\t\tif (dx != 0 || dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.layout.offsetEverything(dx, dy);\n\t\t\t\tthis.metavec.transformPrimitives(dx, dy, 1, 1);\n\n\t\t\t\tif (this.currentPerm >= 0 && this.templatePerms != null)\n\t\t\t\t{\n\t\t\t\t\tlet perm = this.templatePerms[this.currentPerm];\n\t\t\t\t\t//perm.layout.offsetEverything(dx, dy);\n\t\t\t\t\tperm.metavec.transformPrimitives(dx, dy, 1, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Zoom)\n\t\t{\n\t\t\tlet dy = y - this.mouseY;\n\n\t\t\tif (dy != 0)\n\t\t\t{\n\t\t\t\tdy = Math.min(50, Math.max(-50, dy));\n\t\t\t\tlet newScale = this.pointScale * (1 - dy * 0.01);\n\t\t\t\tnewScale = Math.min(10, Math.max(0.1, newScale));\n\t\t\t\tlet newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n\t\t\t\tlet newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n\n\t\t\t\tthis.pointScale = newScale;\n\t\t\t\tthis.offsetX = newOX;\n\t\t\t\tthis.offsetY = newOY;\n\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Rotate ||\n\t\t\t\tthis.dragType == DraggingTool.Move ||\n\t\t\t\tthis.dragType == DraggingTool.Atom ||\n\t\t\t\tthis.dragType == DraggingTool.Bond ||\n\t\t\t\tthis.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tthis.mouseX = x;\n\t\t\tthis.mouseY = y;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// the mouse/touch interaction completed, respond accordingly\n\tprivate interactEnd(x:number, y:number):void\n\t{\n\t\tif (this.opBudged)\n\t\t\tthis.interactEndDrag(x, y);\n\t\telse\n\t\t\tthis.interactEndClick(x, y);\n\n\t\tthis.dragType = DraggingTool.None;\n\t\tthis.lassoX = null;\n\t\tthis.lassoY = null;\n\t\tthis.lassoMask = null;\n\t\tthis.dragGuides = null;\n\t\tthis.delayedRedraw();\n\t}\n\tprivate interactEndClick(x:number, y:number):void\n\t{\n\t\tlet clickObj = this.pickObject(x, y);\n\t\tlet clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n\n\t\tif (this.dragType == DraggingTool.Press)\n\t\t{\n\t\t\t// special key modifiers for the arrow tool:\n\t\t\t//\t\tCTRL: open context menu [see mouseDown]\n\t\t\t//\t\tSHIFT: toggle selection of object\n\t\t\t//\t\tALT: enter pan-mode [see mouseDown]\n\t\t\t//\t\tALT+CTRL: enter zoom mode [see mouseDown]\n\n\t\t\tif (!this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tif (clickAtom == 0 && clickBond == 0)\n\t\t\t\t{\n\t\t\t\t\tif (Vec.anyTrue(this.selectedMask)) this.selectedMask = null;\n\t\t\t\t\telse if (this.currentAtom > 0) this.currentAtom = 0;\n\t\t\t\t\telse if (this.currentBond > 0) this.currentBond = 0;\n\t\t\t\t}\n\t\t\t\telse if (clickAtom != this.currentAtom || clickBond != this.currentBond)\n\t\t\t\t{\n\t\t\t\t\tthis.currentAtom = clickAtom;\n\t\t\t\t\tthis.currentBond = clickBond;\n\t\t\t\t}\n\t\t\t\telse if (clickAtom == 0 && clickBond == 0 && this.anySelected())\n\t\t\t\t{\n\t\t\t\t\tthis.selectedMask = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.opShift && !this.opCtrl && !this.opAlt)\n\t\t\t{\n\t\t\t\tif (clickAtom > 0) this.setSelected(clickAtom, !this.getSelected(clickAtom));\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tif (clickObj == 0)\n\t\t\t{\n\t\t\t\tif (Vec.anyTrue(this.selectedMask)) this.selectedMask = null;\n\t\t\t\telse if (this.currentAtom > 0) this.currentAtom = 0;\n\t\t\t\telse if (this.currentBond > 0) this.currentBond = 0;\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tif (this.opAtom > 0 || this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\t'currentAtom': this.opAtom,\n\t\t\t\t\t'currentBond': this.opBond,\n\t\t\t\t\t'selectedMask': [] as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Atom)\n\t\t{\n\t\t\tlet element = this.toolAtomSymbol;\n\t\t\tif (element == 'A')\n\t\t\t{\n\t\t\t\tlet dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () =>\n\t\t\t\t{\n\t\t\t\t\tlet autoscale = this.mol.numAtoms == 0;\n\t\t\t\t\tif (this.mol.compareTo(dlg.mol) != 0) this.defineMolecule(dlg.mol, autoscale, true);\n\t\t\t\t\tdlg.close();\n\t\t\t\t});\n\t\t\t\tif (this.opAtom == 0)\n\t\t\t\t{\n\t\t\t\t\tdlg.newX = this.xToAng(this.clickX);\n\t\t\t\t\tdlg.newY = this.yToAng(this.clickY);\n\t\t\t\t}\n\t\t\t\tdlg.callbackClose = () =>\n\t\t\t\t{\n\t\t\t\t\tthis.inDialog = false;\n\t\t\t\t\tthis.grabFocus();\n\t\t\t\t};\n\t\t\t\tthis.inDialog = true;\n\t\t\t\tdlg.open();\n\t\t\t}\n\t\t\telse if (element)\n\t\t\t{\n\t\t\t\tlet param:any = {element, keepAbbrev: true};\n\t\t\t\tif (this.opAtom == 0)\n\t\t\t\t{\n\t\t\t\t\tlet x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n\t\t\t\t\tif (this.mol.numAtoms == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.offsetX = this.clickX;\n\t\t\t\t\t\tthis.offsetY = this.clickY;\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t\tparam.positionX = x;\n\t\t\t\t\tparam.positionY = y;\n\t\t\t\t}\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\t\tcurrentBond: 0,\n\t\t\t\t\tselectedMask: null as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Charge)\n\t\t{\n\t\t\tif (this.opAtom > 0 || this.opBond > 0)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\t\tcurrentBond: this.opBond,\n\t\t\t\t\tselectedMask: null as boolean[]\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Charge, {delta: this.toolChargeDelta}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet state =\n\t\t\t{\n\t\t\t\t...this.getState(),\n\t\t\t\tcurrentAtom: this.opAtom,\n\t\t\t\tcurrentBond: this.opBond,\n\t\t\t\tselectedMask: null as boolean[]\n\t\t\t};\n\t\t\tlet molact:MoleculeActivity;\n\t\t\tif (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n\t\t\t\tmolact = new MoleculeActivity(state, ActivityType.BondOrder, {order: this.toolBondOrder}, this);\n\t\t\telse\n\t\t\t\tmolact = new MoleculeActivity(state, ActivityType.BondType, {type: this.toolBondType}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t}\n\tprivate interactEndDrag(x:number, y:number):void\n\t{\n\t\tif (this.dragType == DraggingTool.Lasso)\n\t\t{\n\t\t\tif (this.lassoX.length >= 2)\n\t\t\t{\n\t\t\t\tthis.calculateLassoMask();\n\t\t\t\tfor (let n = 1; n <= this.mol.numAtoms; n++) if (this.getLassoed(n) && !this.getSelected(n)) this.setSelected(n, true);\n\t\t\t}\n\n\t\t\tthis.lassoX = null;\n\t\t\tthis.lassoY = null;\n\t\t\tthis.lassoMask = null;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Erasor)\n\t\t{\n\t\t\tlet any = false;\n\t\t\tfor (let n = 0; n < this.lassoMask.length; n++) if (this.lassoMask[n]) {any = true; break;}\n\t\t\tif (any)\n\t\t\t{\n\t\t\t\tlet state =\n\t\t\t\t{\n\t\t\t\t\t...this.getState(),\n\t\t\t\t\tcurrentAtom: 0,\n\t\t\t\t\tcurrentBond: 0,\n\t\t\t\t\tselectedMask: this.lassoMask\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Rotate)\n\t\t{\n\t\t\tlet [x0, y0, theta, magnitude] = this.determineDragTheta();\n\t\t\tlet degrees = -theta * RADDEG;\n\t\t\tlet mx = this.xToAng(x0), my = this.yToAng(y0);\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, {theta: degrees, centreX: mx, centreY: my}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Move)\n\t\t{\n\t\t\tlet [dx, dy] = this.determineMoveDelta();\n\t\t\tlet scale = this.pointScale;\n\t\t\t// note: in a future iteration, make the 'Move' action do rotate-snap-rebond, and call it during the mousemove, to give dynamic feedback\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Move, {refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale}, this);\n\t\t\tmolact.execute();\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Ring)\n\t\t{\n\t\t\tlet [ringX, ringY] = this.determineFauxRing();\n\t\t\tif (ringX != null)\n\t\t\t{\n\t\t\t\tlet param:any =\n\t\t\t\t{\n\t\t\t\t\tringX: ringX,\n\t\t\t\t\tringY: ringY,\n\t\t\t\t\taromatic: this.toolRingArom\n\t\t\t\t};\n\t\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Atom && this.opAtom > 0)\n\t\t{\n\t\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\t\t\tlet snapTo = this.snapToGuide(x2, y2);\n\t\t\tif (snapTo != null) [x2, y2] = snapTo;\n\n\t\t\tlet param:any =\n\t\t\t{\n\t\t\t\torder: 1,\n\t\t\t\ttype: Molecule.BONDTYPE_NORMAL,\n\t\t\t\telement: this.toolAtomSymbol,\n\t\t\t\tx1: this.mol.atomX(this.opAtom),\n\t\t\t\ty1: this.mol.atomY(this.opAtom),\n\t\t\t\tx2: this.xToAng(x2),\n\t\t\t\ty2: this.yToAng(y2)\n\t\t\t};\n\n\t\t\tif (this.toolAtomSymbol == 'A') param.element = window.prompt('Enter element symbol:', '');\n\t\t\tif (param.element != '')\n\t\t\t{\n\t\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n\t\t\t\tmolact.execute();\n\t\t\t}\n\t\t}\n\t\telse if (this.dragType == DraggingTool.Bond)\n\t\t{\n\t\t\tlet x2 = this.mouseX, y2 = this.mouseY;\n\t\t\tlet snapTo = this.snapToGuide(x2, y2);\n\t\t\tif (snapTo != null)\n\t\t\t{\n\t\t\t\t[x2, y2] = snapTo;\n\t\t\t\tif (this.opBond > 0)\n\t\t\t\t{\n\t\t\t\t\tlet toObj = this.pickObject(x2, y2, {noAtoms: true});\n\t\t\t\t\tif (toObj < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.connectPolymerBlock(this.opBond, -toObj);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet param:any =\n\t\t\t{\n\t\t\t\torder: this.toolBondOrder,\n\t\t\t\ttype: this.toolBondType,\n\t\t\t\telement: 'C',\n\t\t\t\tx1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n\t\t\t\ty1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n\t\t\t\tx2: this.xToAng(x2),\n\t\t\t\ty2: this.yToAng(y2)\n\t\t\t};\n\t\t\tlet molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n\t\t\tmolact.execute();\n\t\t}\n\t}\n\n\t// something was dragged into the sketcher area\n\tprivate dropInto(transfer:DataTransfer):void\n\t{\n\t\tlet items = transfer.items, files = transfer.files;\n\n\t\tconst SUFFIXES = ['.el', '.mol'];\n\t\tconst MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n\n\t\t//console.log('DROP-INTO: items=' +  items.length + ', files=' + files.length);\n\n\t\tfor (let n = 0; n < items.length; n++)\n\t\t{\n\t\t\tif (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0)\n\t\t\t{\n\t\t\t\titems[n].getAsString((str:string) =>\n\t\t\t\t{\n\t\t\t\t\tlet mol = Molecule.fromString(str);\n\t\t\t\t\tif (mol != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// (maybe do an intelligent append/paste, using the coordinates, rather than blowing it away?)\n\t\t\t\t\t\tthis.defineMolecule(mol, true, true, true);\n\t\t\t\t\t}\n\t\t\t\t\telse console.log('Dragged data is not a SketchEl molecule: ' + str);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//console.log('ITEMS['+n+']: ' + items[n].kind+',type='+items[n].type);\n\t\t}\n\t\tfor (let n = 0; n < files.length; n++)\n\t\t{\n\t\t\tfor (let sfx of SUFFIXES) if (files[n].name.endsWith(sfx))\n\t\t\t{\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.onload = (event) =>\n\t\t\t\t{\n\t\t\t\t\tlet str = reader.result;\n\t\t\t\t\tlet mol = MoleculeStream.readUnknown(str.toString());\n\t\t\t\t\tif (mol != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// (maybe do an intelligent append/paste, using the coordinates, rather than blowing it away?)\n\t\t\t\t\t\tthis.defineMolecule(mol, true, true);\n\t\t\t\t\t}\n\t\t\t\t\telse console.log('Dragged file is not a recognised molecule: ' + str);\n\t\t\t\t};\n\t\t\t\treader.readAsText(files[n]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//console.log('DRAGFILE['+n+']: ' + files[n].name+',sz='+files[n].size+',type='+files[n].type);\n\t\t}\n\t}\n\n\t// special case when dragging a 0-order bond between two atoms in a polymer block: add to the opt-in naming list rather than making a bond\n\tprivate connectPolymerBlock(bond1:number, bond2:number):boolean\n\t{\n\t\tlet [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n\n\t\tlet state = this.getState();\n\t\tlet polymer = new PolymerBlock(state.mol);\n\n\t\tlet poly1:PolymerBlockUnit = null, poly2:PolymerBlockUnit = null;\n\t\tlet highName = 0;\n\t\tfor (let poly of polymer.getUnits())\n\t\t{\n\t\t\tif (!poly1 || poly.atoms.length < poly1.atoms.length)\n\t\t\t{\n\t\t\t\tlet ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n\t\t\t\tif (ina && !inb) poly1 = poly;\n\t\t\t\telse if (inb && !ina) [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n\t\t\t}\n\t\t\tif (!poly2 || poly.atoms.length < poly2.atoms.length)\n\t\t\t{\n\t\t\t\tlet ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n\t\t\t\tif (ina && !inb) poly2 = poly;\n\t\t\t\telse if (inb && !ina) [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n\t\t\t}\n\n\t\t\tfor (let nameList of poly.atomName.values()) highName = Math.max(highName, Vec.max(nameList));\n\t\t}\n\t\tif (!poly1 || !poly2) return false;\n\n\t\t//console.log('BONDS:'+[bond1,bond2]+' ATOMS:'+[atomIn1,atomOut1]+' '+[atomIn2,atomOut2]);\n\n\t\tlet name1 = Vec.first(poly1.atomName.get(atomIn1));\n\t\tif (!name1)\n\t\t{\n\t\t\tname1 = ++highName;\n\t\t\tpoly1.atomName.set(atomIn1, [name1]);\n\t\t}\n\t\tlet name2 = Vec.first(poly2.atomName.get(atomIn2));\n\t\tif (!name2)\n\t\t{\n\t\t\tname2 = ++highName;\n\t\t\tpoly2.atomName.set(atomIn2, [name2]);\n\t\t}\n\n\t\tpoly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n\t\tpoly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n\n\t\tpolymer.rewriteMolecule();\n\t\tthis.setState(state);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {AbbrevContainer} from '../data/AbbrevContainer';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {ButtonBank} from '../ui/ButtonBank';\nimport {ActivityType, MoleculeActivity} from './MoleculeActivity';\n\n/*\n\tTemplateBank: template list... either the top-level list of template groups, or a single folder full of templates.\n*/\n\ninterface GroupTemplates\n{\n\tgroups:string[];\n\ttitles:string[];\n\tpreview:any[];\n}\n\ninterface TemplateStructs\n{\n\tmolecules:string[];\n\tnames:string[];\n\tabbrev:string[];\n\tmnemonic:string[];\n\tpreview:MetaVector[];\n}\n\nexport class TemplateBank extends ButtonBank\n{\n\tprivate static resourceList:string[] = [];\n\tprivate static resourceData:DataSheet[] = []; // templates are derived from these\n\tprivate subgroups:GroupTemplates = null;\n\tprivate templates:TemplateStructs = null;\n\n\tconstructor(protected owner:any, protected group?:string)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic init()\n\t{\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 10;\n\t\tpolicy.data.lineSize *= 1.5;\n\t\tpolicy.data.bondSep *= 1.5;\n\n\t\tif (TemplateBank.resourceData.length == 0) this.loadResourceData();\n\n\t\tif (this.group == null)\n\t\t\tthis.prepareSubGroups();\n\t\telse\n\t\t\tthis.prepareTemplates();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tif (this.subgroups == null && this.templates == null) return;\n\n\t\tthis.buttons = [];\n\n\t\tif (this.group == null)\n\t\t\tthis.populateGroups();\n\t\telse\n\t\t\tthis.populateTemplates();\n\t}\n\n\t// build a list of template groups, based on the webservice results\n\tprivate populateGroups():void\n\t{\n\t\tlet groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n\n\t\tfor (let n = 0; n < groups.length; n++)\n\t\t{\n\t\t\tthis.buttons.push({id: groups[n], metavec: preview[n], helpText: titles[n]});\n\t\t}\n\t}\n\n\t// build a list of template structures, based on the webservice results\n\tprivate populateTemplates():void\n\t{\n\t\tlet names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n\n\t\tfor (let n = 0 ; n < names.length; n++)\n\t\t{\n\t\t\tthis.buttons.push({id: n.toString(), metavec: preview[n], helpText: names[n]});\n\t\t\t// !! do something with abbrev & mnemonic\n\t\t}\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string)\n\t{\n\t\tif (this.group == null)\n\t\t{\n\t\t\tthis.buttonView.pushBank(new TemplateBank(this.owner, id));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet idx = parseInt(id);\n\t\t\tlet param = {fragNative: this.templates.molecules[idx]};\n\t\t\tnew MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n\t\t}\n\t}\n\n\t// loads up the resource datasheets one at a time, and stashes them in the static container\n\tprivate loadResourceData():void\n\t{\n\t\tfor (let key of AbbrevContainer.getTemplateKeys())\n\t\t{\n\t\t\tlet dsstr =  AbbrevContainer.getTemplateData(key);\n\t\t\tTemplateBank.resourceList.push(key);\n\t\t\tTemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n\t\t}\n\t}\n\n\t// use the resource data to prepare button icons for the template groups\n\tprivate prepareSubGroups():void\n\t{\n\t\tthis.subgroups = {groups: TemplateBank.resourceList, titles: [], preview: []};\n\t\tlet sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 10;\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let ds of TemplateBank.resourceData)\n\t\t{\n\t\t\tthis.subgroups.titles.push(ds.title);\n\n\t\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\t\tlet metavec = new MetaVector();\n\n\t\t\tfor (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++)\n\t\t\t{\n\t\t\t\tlet mol = ds.getMolecule(n, colMol);\n\t\t\t\tif (MolUtil.isBlank(mol)) continue;\n\n\t\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\t\tlayout.arrange();\n\t\t\t\tlet col = (idx % 2), row = Math.floor(idx / 2);\n\t\t\t\tlayout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\tmetavec.width = sz;\n\t\t\tmetavec.height = sz;\n\n\t\t\tthis.subgroups.preview.push(metavec);\n\t\t}\n\t\tthis.buttonView.refreshBank();\n\t}\n\n\t// use the resource data to prepare pictures for each of the templates\n\tprivate prepareTemplates():void\n\t{\n\t\tlet idx = TemplateBank.resourceList.indexOf(this.group);\n\t\tlet ds = TemplateBank.resourceData[idx];\n\n\t\tthis.templates = {molecules: [], names: [], abbrev: [], mnemonic: [], preview: []};\n\n\t\tlet sz = this.buttonView.idealSize;\n\n\t\tlet policy = RenderPolicy.defaultBlackOnWhite();\n\t\tpolicy.data.pointScale = 12;\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tlet colMol = ds.findColByName('Molecule');\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colAbbrev = ds.findColByName('Abbrev');\n\t\tlet colMnemonic = ds.findColByName('Mnemonic');\n\n\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(n, colMol);\n\t\t\tthis.templates.molecules.push(mol.toString());\n\t\t\tthis.templates.names.push(ds.getString(n, colName));\n\t\t\tthis.templates.abbrev.push(ds.getString(n, colAbbrev));\n\t\t\tthis.templates.mnemonic.push(ds.getString(n, colMnemonic));\n\n\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, sz, sz, 2);\n\t\t\tlet metavec = new MetaVector();\n\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\tmetavec.width = sz;\n\t\t\tmetavec.height = sz;\n\t\t\tthis.templates.preview.push(metavec);\n\t\t}\n\n\t\tthis.buttonView.refreshBank();\n\t}\n}\n\nimport svgGenericAccept from '@reswmk/img/actions/GenericAccept.svg';\nimport svgTemplatePrev from '@reswmk/img/actions/TemplatePrev.svg';\nimport svgTemplateNext from '@reswmk/img/actions/TemplateNext.svg';\nimport {KeyCode} from '../util/util';\n\nexport class FusionBank extends ButtonBank\n{\n\tconstructor(protected owner:any)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic update():void\n\t{\n\t\tthis.buttons = [];\n\n\t\t/*this.buttons.push({id: 'accept', imageFN: 'GenericAccept', helpText: 'Apply this template.'});\n\t\tthis.buttons.push({id: 'prev', imageFN: 'TemplatePrev', helpText: 'Show previous fusion option.'});\n\t\tthis.buttons.push({id: 'next', imageFN: 'TemplateNext', helpText: 'Show next fusion option.'});*/\n\t\tthis.buttons.push({id: 'accept', svg: svgGenericAccept, helpText: 'Apply this template.'});\n\t\tthis.buttons.push({id: 'prev', svg: svgTemplatePrev, helpText: 'Show previous fusion option.'});\n\t\tthis.buttons.push({id: 'next', svg: svgTemplateNext, helpText: 'Show next fusion option.'});\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string)\n\t{\n\t\tif (id == 'accept') this.owner.templateAccept();\n\t\telse if (id == 'prev') this.owner.templateRotate(-1);\n\t\telse if (id == 'next') this.owner.templateRotate(1);\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\tif (event.key == KeyCode.Enter)\n\t\t{\n\t\t\tthis.owner.templateAccept();\n\t\t\treturn true;\n\t\t}\n\t\telse if (event.key == KeyCode.Left || event.key == KeyCode.Up)\n\t\t{\n\t\t\tthis.owner.templateRotate(-1);\n\t\t\treturn true;\n\t\t}\n\t\telse if (event.key == KeyCode.Right || event.key == KeyCode.Down)\n\t\t{\n\t\t\tthis.owner.templateRotate(1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic bankClosed()\n\t{\n\t\tthis.owner.clearPermutations();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {BondArtifact} from '../mol/BondArtifact';\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {Graph} from '../mol/Graph';\nimport {Molecule} from '../mol/Molecule';\nimport {MolUtil} from '../mol/MolUtil';\nimport {PolymerBlock} from '../mol/PolymerBlock';\nimport {SketchUtil} from '../mol/SketchUtil';\nimport {angleDiff, DEGRAD, norm_xy, RADDEG} from '../util/util';\nimport {Vec} from '../util/Vec';\n\n/*\n    Algorithm class that exists for the purpose of generating some number of template-fusion permutations,\n\tstarting with an edit state (molecule,subject) and a template.\n*/\n\nexport class FusionPermutation\n{\n\tpublic mol:Molecule; // contains the fused result\n\tpublic display:Molecule; // the appended fragment, modified for display\n\tpublic molidx:number[]; // atom correspondence between starting molecule (parent.mol) and template (display)\n\tpublic temidx:number[];\n\tpublic srcidx:number[]; // for each atom in mol, >0=present in original molecule, 0=not so\n\n\tpublic attdist = 0;\n\tpublic guided = false;\n\tpublic bridged = false;\n\tpublic scoreModifier = 0;\n\tpublic chainSelect = 0;\n}\n\nexport class TemplateFusion\n{\n\tpublic perms:FusionPermutation[] = [];\n\tpublic numAttach = 0;\n\tpublic withGuideOnly = false;\n\n\tprivate guidetempl:Molecule = null;\n\tprivate guideidx:number[] = [];\n\tprivate guideadj:number[] = [];\n\n\tpublic timeLimit = 5.0; // number of seconds after which template fusion should quit with what it has\n\tpublic static RESERVED_GUIDESYMBOL = 'XXX';\n\n\t// ------------------ public methods --------------------\n\n\tconstructor(public mol:Molecule, public templ:Molecule, public abbrev:string)\n\t{\n\t\t// renumber any incoming bond artifacts\n\t\tlet artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n\t\tartif2.harmoniseNumbering(artif1);\n\t\tartif2.rewriteMolecule();\n\n\t\t// and polymers\n\t\tlet poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n\t\tpoly2.harmoniseNumbering(poly1);\n\t\tpoly2.rewriteMolecule();\n\n\t\tthis.huntForGuides();\n\t}\n\n\t// place the template with no reference anchor\n\tpublic permuteNone():void\n\t{\n\t\tlet numAttach = 0;\n\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\n\t\tif (oldmol.numAtoms > 0)\n\t\t{\n\t\t\tlet oldbox = oldmol.boundary(), newbox = newmol.boundary();\n\t\t\tlet dx = oldbox.maxX() + 1 - newbox.minX();\n\t\t\tlet dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n\t\t\tCoordUtil.translateMolecule(newmol, dx, dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet newbox = newmol.boundary();\n\t\t\tCoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n\t\t}\n\n\t\tlet oldbox = oldmol.boundary(), newbox = newmol.boundary();\n\t\tlet cx = newbox.midX(), cy = newbox.midY();\n\t\tlet ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n\t\tduplicate: for (let n = 0; n < ROTN.length; n++)\n\t\t{\n\t\t\tlet rotmol = newmol.clone();\n\t\t\tCoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n\n\t\t\tfor (let i = 0; i < this.perms.length; i++)\n\t\t\t\tif (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display)) continue duplicate;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = oldmol.clone();\n\t\t\tp.mol.append(rotmol);\n\t\t\tp.display = rotmol;\n\t\t\tp.srcidx = this.sourceIndex(p.mol, oldmol);\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = false;\n\t\t\tthis.perms.push(p);\n\t\t}\n\t}\n\n\t// generate permutations with one atom reference point\n\tpublic permuteAtom(atom:number):void\n\t{\n\t\tthis.numAttach = 1;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tfor (let n = 0; n < this.guideidx.length; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n\t\t\t\tthis.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeDirectOne(newperms, oldmol, newmol, atom, n);\n\t\t\t\tthis.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n\n\t\t\t\tthis.composeBridge(newperms, oldmol, newmol, atom, n);\n\t\t\t\tthis.composeBridge(newperms, oldmol, flipmol, atom, n);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// generate permutations with a bond reference point\n\tpublic permuteBond(a1:number, a2:number):void\n\t{\n\t\tthis.numAttach = 2;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tfor (let i = 0; i < this.guideidx.length; i++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tlet g1 = this.guideidx[i];\n\t\t\t\tlet adj = this.guidetempl.atomAdjList(g1);\n\t\t\t\tfor (let j = 0; j < adj.length; j++)\n\t\t\t\t{\n\t\t\t\t\tlet g2 = adj[j];\n\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n\t\t\t\t\tthis.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numBonds; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tlet nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n\t\t\t\tthis.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// generate permutations with many reference points\n\tpublic permuteMulti(atoms:number[]):void\n\t{\n\t\tthis.numAttach = atoms.length;\n\n\t\tlet timeStart = new Date().getTime();\n\t\tlet oldmol = this.mol.clone(), newmol = this.templ.clone();\n\t\tlet newperms:FusionPermutation[] = [];\n\n\t\tif (this.guidetempl != null)\n\t\t{\n\t\t\tlet fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n\n\t\t\tif (this.guideidx.length == atoms.length)\n\t\t\t{\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n\t\t\t}\n\t\t\tif (this.guideadj.length == atoms.length)\n\t\t\t{\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n\t\t\t\tthis.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.withGuideOnly)\n\t\t{\n\t\t\tlet flipmol = newmol.clone();\n\t\t\tCoordUtil.mirrorImage(flipmol);\n\n\t\t\tfor (let n = 1; n <= newmol.numAtoms; n++)\n\t\t\t{\n\t\t\t\tif (new Date().getTime() - timeStart > this.timeLimit * 1000) break;\n\n\t\t\t\tthis.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n\t\t\t\tthis.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n\t\t\t}\n\t\t}\n\n\t\tthis.affixRawPermutations(newperms);\n\t}\n\n\t// ------------------ private methods --------------------\n\n\tprivate huntForGuides():void\n\t{\n\t\tthis.guideidx = [];\n\t\tthis.guideadj = [];\n\t\tfor (let n = 1; n <= this.templ.numAtoms; n++) if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0)\n\t\t{\n\t\t\tthis.guideidx.push(n);\n\t\t\tlet adj = this.templ.atomAdjList(n);\n\t\t\tfor (let i = 0; i < adj.length; i++) if (this.guideadj.indexOf(adj[i]) < 0) this.guideadj.push(adj[i]);\n\t\t}\n\t\tif (this.guideidx.length > 0)\n\t\t{\n\t\t\tthis.guidetempl = this.templ.clone();\n\t\t\tfor (let n = this.guideidx.length - 1; n >= 0; n--) this.templ.deleteAtomAndBonds(this.guideidx[n]);\n\t\t}\n\t}\n\tprivate composeDirectOne(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, n1:number)\n\t{\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, o1);\n\t\tlet ntheta = SketchUtil.primeDirections(newmol, n1);\n\t\tlet ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n\t\tlet ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n\n\t\t// create the list of angle matches to try out\n\t\tlet theta1:number[] = [], theta2:number[] = [], scoreMod:number[] = [];\n\n\t\tfor (let i = 0; i < ocurrent.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\ttheta1.push(ocurrent[i]);\n\t\t\ttheta2.push(ntheta[j]);\n\t\t\tscoreMod.push(-51);\n\t\t}\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ncurrent.length; j++)\n\t\t{\n\t\t\ttheta1.push(otheta[i]);\n\t\t\ttheta2.push(ncurrent[j]);\n\t\t\tscoreMod.push(0);\n\t\t}\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\ttheta1.push(otheta[i]);\n\t\t\ttheta2.push(ntheta[j]);\n\t\t\tscoreMod.push(0);\n\t\t}\n\n\t\t// now combine them\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n\t\tfor (let n = 0; n < theta1.length; n++)\n\t\t{\n\t\t\tlet dth = angleDiff(theta1[n], theta2[n]);\n\t\t\tlet frag = newmol.clone();\n\t\t\tCoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n\t\t\tCoordUtil.rotateMolecule(frag, dth, ox, oy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [o1];\n\t\t\tp.temidx = [n1];\n\t\t\tp.attdist = bfs[n1 - 1];\n\t\t\tp.guided = false;\n\t\t\tp.scoreModifier = scoreMod[n];\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeDirectTwo(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, o2:number, n1:number, n2:number):void\n\t{\n\t\tlet oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n\t\tlet nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n\t\tlet cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n\n\t\tlet frag = newmol.clone();\n\t\tCoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n\t\tCoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n\t\tfrag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n\t\tfrag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n\n\t\tlet pmol = oldmol.clone();\n\t\tlet osz = pmol.numAtoms;\n\t\tpmol.append(frag);\n\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\n\t\tif (pmol.numAtoms == osz) return;\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\n\t\tlet p = new FusionPermutation();\n\t\tp.mol = pmol;\n\t\tp.display = frag;\n\t\tp.srcidx = srcidx;\n\t\tp.molidx = [o1, o2];\n\t\tp.temidx = [n1, n2];\n\t\tp.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n\t\tp.guided = false;\n\t\tthis.removeExtraGuides(p, oldmol);\n\t\tlist.push(p);\n\t}\n\tprivate composeDirectMulti(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number[], n1:number):void\n\t{\n\t\tlet frag = newmol.clone();\n\n\t\tlet x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n\t\tCoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n\t\tlet ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n\t\tlet otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n\t\tlet nidx:number[] = [];\n\n\t\tfor (let n2 = 1; n2 <= frag.numAtoms; n2++) if (n1 != n2)\n\t\t{\n\t\t\tlet nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n\t\t\tif (Math.abs(nrad - orad) > 0.1) continue; // no point in trying to map {o1,o2} to {n1,n2}\n\t\t\tlet ntheta = Math.atan2(ny, nx);\n\t\t\tCoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n\n\t\t\tnidx = [n1, n2];\n\n\t\t\tfor (let i = 2; i < oidx.length; i++)\n\t\t\t{\n\t\t\t\tlet hit = false;\n\t\t\t\tfor (let j = 1; j <= frag.numAtoms; j++) if (nidx.indexOf(j) < 0)\n\t\t\t\t\tif (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1)\n\t\t\t\t{\n\t\t\t\t\thit = true;\n\t\t\t\t\tnidx.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!hit) break;\n\t\t\t}\n\n\t\t\tif (nidx.length < oidx.length) continue;\n\n\t\t\tlet lowbfs = bfs.length;\n\t\t\tfor (let n = 0; n < nidx.length; n++) lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n\n\t\t\tlet dx = 0, dy = 0;\n\t\t\tfor (let n = 0; n < oidx.length; n++)\n\t\t\t{\n\t\t\t\tdx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n\t\t\t\tdy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n\t\t\t}\n\t\t\tlet invsz = 1.0 / oidx.length;\n\t\t\tdx *= invsz;\n\t\t\tdy *= invsz;\n\t\t\tCoordUtil.translateMolecule(frag, dx, dy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\n\t\t\tfor (let n = 0; n < nidx.length; n++)\n\t\t\t{\n\t\t\t\tlet x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n\t\t\t\tpmol.setAtomPos(osz + nidx[n], x, y);\n\t\t\t}\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag.clone();\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = oidx.slice(0);\n\t\t\tp.temidx = nidx.slice(0);\n\t\t\tp.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n\t\t\tp.guided = false;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeBridge(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, o1:number, n1:number):void\n\t{\n\t\tlet busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n\t\tlet busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n\t\tif (!busy1 || !busy2) return;\n\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, o1);\n\t\tlet ntheta = SketchUtil.primeDirections(newmol, n1);\n\n\t\tlet bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n\n\t\tfor (let i = 0; i < otheta.length; i++) for (let j = 0; j < ntheta.length; j++)\n\t\t{\n\t\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n\t\t\tlet dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n\t\t\tlet dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n\t\t\tlet frag = newmol.clone();\n\n\t\t\tCoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n\t\t\tCoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n\t\t\tlet pmol = oldmol.clone();\n\n\t\t\tlet att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tpmol.addBond(o1, att, 1);\n\n\t\t\tatt = frag.addAtom('C', ox, oy);\n\t\t\tfrag.addBond(n1, att, 1);\n\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [o1];\n\t\t\tp.temidx = [att];\n\t\t\tp.attdist = bfs[n1 - 1];\n\t\t\tp.bridged = true;\n\t\t\tp.guided = false;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeGuidedOne(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number, gidx:number):void\n\t{\n\t\tif (newmol.atomAdjCount(gidx) == 0) return;\n\n\t\tlet otheta = SketchUtil.primeDirections(oldmol, oidx);\n\n\t\t// special deal: if the attachment is multidentate, make sure there is an out-jutting angle that is the simple average of the other\n\t\t// constituents' opposites, since regular bond angles are less definitively useful\n\t\tif (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0)\n\t\t{\n\t\t\tlet ox = 0, oy = 0;\n\t\t\tlet adj = oldmol.atomAdjList(oidx);\n\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t{\n\t\t\t\tox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n\t\t\t\toy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n\t\t\t}\n\t\t\tlet ang = Math.atan2(oy, ox);\n\t\t\tlet unique = true;\n\t\t\tfor (let n = 0; n < otheta.length; n++) if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG)\n\t\t\t{\n\t\t\t\tunique = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (unique) otheta.push(ang);\n\t\t}\n\n\t\tlet gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n\t\tlet dx = 0, dy = 0;\n\t\tlet adj = newmol.atomAdjList(gidx);\n\t\tfor (let n = 0; n < adj.length; n++)\n\t\t{\n\t\t\tdx += newmol.atomX(adj[n]) - gx;\n\t\t\tdy += newmol.atomY(adj[n]) - gy;\n\t\t}\n\t\tdx /= adj.length;\n\t\tdy /= adj.length;\n\t\tlet ntheta = Math.atan2(dy, dx);\n\n\t\tlet homoPenalty = 0;\n\t\tif (adj.length == 1)\n\t\t{\n\t\t\tlet oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n\t\t\tif (oel != 'C' && oel == nel) homoPenalty = 1; // penalty points for het-het joining\n\t\t}\n\n\t\tfor (let n = 0; n < otheta.length; n++)\n\t\t{\n\t\t\tlet frag = newmol.clone();\n\n\t\t\t// special deal: if two guide indexes, would like to post-select the second one\n\t\t\tif (this.guideidx.length == 2)\n\t\t\t{\n\t\t\t\tfor (let i = 1; i <= frag.numAtoms; i++) if (i != gidx && frag.atomElement(i) == 'X')\n\t\t\t\t{\n\t\t\t\t\tfrag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n\t\t\tCoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n\n\t\t\tlet pmol = oldmol.clone();\n\t\t\tlet osz = pmol.numAtoms;\n\t\t\tpmol.append(frag);\n\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\t\tif (pmol.numAtoms == osz) continue;\n\n\t\t\t// look for a next-current option\n\t\t\tlet sel = 0;\n\t\t\tfor (let i = 1; i <= pmol.numAtoms; i++) if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL)\n\t\t\t{\n\t\t\t\tlet padj = pmol.atomAdjList(i);\n\t\t\t\tif (padj.length == 1)\n\t\t\t\t{\n\t\t\t\t\tsel = padj[0];\n\t\t\t\t\tif (sel > i) sel--;\n\t\t\t\t}\n\t\t\t\tpmol.deleteAtomAndBonds(i);\n\t\t\t\tsrcidx.splice(i - 1, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = [oidx];\n\t\t\tp.temidx = [gidx];\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = true;\n\t\t\tp.scoreModifier = homoPenalty;\n\t\t\tp.chainSelect = sel;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\tprivate composeGuidedTwo(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule,\n\t\t\t\t\t\t\to1:number, o2:number, gidx:number, nidx:number, snapToGuide:boolean):void\n\t{\n\t\tlet ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n\t\tlet gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n\t\tlet nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n\t\tlet otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n\t\tlet gtheta = Math.atan2(ny - gy, nx - gx);\n\n\t\tlet isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1; // prefer to stick the guide atom on a non-terminal atom\n\n\t\tlet pmol = oldmol.clone(), frag = newmol.clone();\n\t\tCoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n\n\t\tif (snapToGuide)\n\t\t{\n\t\t\tCoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n\t\t\tpmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n\t\t\tfrag.setAtomPos(gidx, ox, oy);\n\t\t}\n\n\t\tlet osz = pmol.numAtoms;\n\t\tpmol.append(frag);\n\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\tSketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n\t\tif (pmol.numAtoms == osz) return;\n\n\t\tlet p = new FusionPermutation();\n\t\tp.mol = pmol;\n\t\tp.display = frag;\n\t\tp.srcidx = srcidx;\n\t\tp.molidx = [o1, o2];\n\t\tp.temidx = [gidx, nidx];\n\t\tp.attdist = isGuideOnTerminal ? 1 : 0;\n\t\tp.guided = true;\n\t\tthis.removeExtraGuides(p, oldmol);\n\t\tlist.push(p);\n\t}\n\tprivate composeGuidedMulti(list:FusionPermutation[], oldmol:Molecule, newmol:Molecule, oidx:number[], gidx:number[], nudgenew:boolean):void\n\t{\n\t\tlet cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n\t\tfor (let n = 0; n < oidx.length; n++)\n\t\t{\n\t\t\tcx1 += oldmol.atomX(oidx[n]);\n\t\t\tcy1 += oldmol.atomY(oidx[n]);\n\t\t}\n\t\tfor (let n = 0; n < gidx.length; n++)\n\t\t{\n\t\t\tcx2 += newmol.atomX(gidx[n]);\n\t\t\tcy2 += newmol.atomY(gidx[n]);\n\t\t}\n\t\tcx1 /= oidx.length;\n\t\tcy1 /= oidx.length;\n\t\tcx2 /= gidx.length;\n\t\tcy2 /= gidx.length;\n\n\t\tlet osz = oldmol.numAtoms;\n\n\t\tfor (let i = 0; i < oidx.length; i++) for (let j = 0; j < gidx.length; j++)\n\t\t{\n\t\t\tlet pmol = oldmol.clone(), frag = newmol.clone();\n\t\t\tlet th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n\t\t\tlet th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n\t\t\tCoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n\t\t\tCoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n\t\t\tpmol.append(frag);\n\n\t\t\tlet srcidx = this.sourceIndex(pmol, oldmol);\n\t\t\tlet midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n\t\t\tVec.sort(tidx);\n\t\t\tlet mask = Vec.booleanArray(false, osz);\n\n\t\t\tfor (let g = tidx.length - 1; g >= 0; g--)\n\t\t\t{\n\t\t\t\tlet gatom = tidx[g] + osz;\n\t\t\t\tlet closest = 0, closeDSQ = 0;\n\t\t\t\tfor (let n = 0; n < oidx.length; n++) if (!mask[oidx[n] - 1])\n\t\t\t\t{\n\t\t\t\t\tlet dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n\t\t\t\t\tlet dsq = norm_xy(dx, dy);\n\t\t\t\t\tif (closest == 0 || dsq < closeDSQ)\n\t\t\t\t\t{\n\t\t\t\t\t\tclosest = oidx[n];\n\t\t\t\t\t\tcloseDSQ = dsq;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!nudgenew)\n\t\t\t\t{\n\t\t\t\t\tlet dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n\t\t\t\t\tif (dsq > 0.1 * 0.1)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n\t\t\t\t\t\tfrag.addBond(num, tidx[g], 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tpmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n\t\t\t\t}\n\n\t\t\t\tmidx[g] = closest;\n\t\t\t\tmask[closest - 1] = true;\n\t\t\t\tlet adj = pmol.atomAdjList(gatom);\n\t\t\t\tfor (let n = 0; n < adj.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet b = pmol.findBond(gatom, adj[n]);\n\t\t\t\t\tpmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n\t\t\t\t}\n\t\t\t\tpmol.deleteAtomAndBonds(gatom);\n\t\t\t\tsrcidx.splice(gatom - 1, 1);\n\n\t\t\t\tfrag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n\t\t\t}\n\n\t\t\tfor (let n = pmol.numAtoms; n > osz; n--) if (pmol.atomElement(n) == 'X')\n\t\t\t{\n\t\t\t\tpmol.deleteAtomAndBonds(n);\n\t\t\t\tsrcidx.splice(n - 1, 1);\n\t\t\t\tfor (let k = 0; k < tidx.length; k++) if (n < tidx[k]) tidx[k]--;\n\t\t\t}\n\t\t\tfor (let n = frag.numAtoms; n >= 1; n--) if (frag.atomElement(n) == 'X')\n\t\t\t{\n\t\t\t\t//[frag deleteAtomAndBonds:n];\n\t\t\t\tfrag.setAtomElement(n, 'C');\n\t\t\t}\n\n\t\t\tlet p = new FusionPermutation();\n\t\t\tp.mol = pmol;\n\t\t\tp.display = frag;\n\t\t\tp.srcidx = srcidx;\n\t\t\tp.molidx = midx;\n\t\t\tp.temidx = tidx;\n\t\t\tp.attdist = 0;\n\t\t\tp.guided = true;\n\t\t\tthis.removeExtraGuides(p, oldmol);\n\t\t\tlist.push(p);\n\t\t}\n\t}\n\n\t// add specified permutations to the main list, after filtering and sorting\n\tprivate affixRawPermutations(list:FusionPermutation[]):void\n\t{\n\t\tlet npsz = list.length;\n\t\tif (npsz == 0) return;\n\n\t\tlet umask = Vec.booleanArray(true, npsz);\n\t\tfor (let i = 0; i < npsz - 1; i++) if (umask[i])\n\t\t{\n\t\t\tlet p1 = list[i];\n\t\t\tfor (let j = i + 1; j < npsz; j++) if (umask[j])\n\t\t\t{\n\t\t\t\tlet p2 = list[j];\n\t\t\t\tif (CoordUtil.sketchEquivalent(p1.mol, p2.mol))\n\t\t\t\t{\n\t\t\t\t\tif (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist)\n\t\t\t\t\t{\n\t\t\t\t\t\tlist[i] = p2;\n\t\t\t\t\t\tlist[j] = p1;\n\t\t\t\t\t}\n\t\t\t\t\tumask[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet score = Vec.numberArray(0, npsz);\n\t\tlet numKeep = 0;\n\t\tfor (let n = 0; n < npsz; n++)\n\t\t{\n\t\t\tif (umask[n])\n\t\t\t{\n\t\t\t\tscore[n] = this.scorePermutation(list[n]);\n\t\t\t\tif (score[n] < 1000) numKeep++;\n\t\t\t}\n\t\t\telse score[n] = 0;\n\t\t}\n\n\t\tif (numKeep > 0) for (let n = 0; n < npsz; n++) if (umask[n] && score[n] >= 1000) umask[n] = false;\n\n\t\tlet uscore:number[] = [], uidx:number[] = [];\n\t\tfor (let n = 0; n < npsz; n++) if (umask[n])\n\t\t{\n\t\t\tuscore.push(score[n]);\n\t\t\tuidx.push(n);\n\t\t}\n\t\tlet sidx = Vec.idxSort(uscore);\n\n\t\tfor (let n = 0; n < sidx.length; n++)\n\t\t{\n\t\t\tlet p = list[uidx[sidx[n]]];\n\t\t\tif (p.guided)\n\t\t\t{\n\t\t\t\tthis.perms.push(p);\n\t\t\t\t//if (DEBUG) Util.writeln(\"PERM#\" + perms.size() + \" score=\" + score[uidx.get(sidx[n])] + \" scoremod=\" + p.scoreModifier + \" attdist:\" + p.attdist);\n\t\t\t}\n\t\t}\n\t\tfor (let n = 0; n < sidx.length; n++)\n\t\t{\n\t\t\tlet p = list[uidx[sidx[n]]];\n\t\t\tif (!p.guided)\n\t\t\t{\n\t\t\t\tthis.perms.push(p);\n\t\t\t\t//if (DEBUG) Util.writeln(\"PERM#\" + perms.size() + \" score=\" + score[uidx.get(sidx[n])] + \" scoremod=\" + p.scoreModifier + \" attdist:\" + p.attdist);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeExtraGuides(perm:FusionPermutation, oldmol:Molecule):void\n\t{\n\t\tMolUtil.removeDuplicateBonds(perm.mol);\n\t\tfor (let n = perm.temidx.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tlet el = perm.display.atomElement(perm.temidx[n]);\n\t\t\tif (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL) continue;\n\t\t\tperm.molidx.splice(n, 1);\n\t\t\tperm.temidx.splice(n, 1);\n\t\t}\n\n\t\t// residual guide atoms either get axed or turned into carbons, so they just display as projected lines\n\t\tfor (let n = perm.display.numAtoms; n >= 1; n--)\n\t\t{\n\t\t\tlet el = perm.display.atomElement(n);\n\t\t\tif (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL) continue;\n\n\t\t\tlet a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n\t\t\tif (a > 0) perm.display.setAtomElement(n, 'C');\n\t\t\telse\n\t\t\t{\n\t\t\t\tperm.display.deleteAtomAndBonds(n);\n\t\t\t\tfor (let i = 0; i < perm.temidx.length; i++) if (perm.temidx[i] > n) perm.temidx[i]--;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate scorePermutation(perm:FusionPermutation):number\n\t{\n\t\t// note: lower is better\n\n\t\tlet mol = this.mol, tmol = perm.display, tunion = perm.mol; // (clarity)\n\n\t\tlet score = 0.2 * perm.attdist + perm.scoreModifier;\n\n\t\tscore += CoordUtil.congestionMolecule(tunion, 1e-3);\n\t\tscore -= tunion.numAtoms;\n\n\t\tlet sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n\t\tlet mx1:number[] = [], my1:number[] = [], mx2:number[] = [], my2:number[] = [];\n\t\tfor (let n = 0; n < sz1; n++)\n\t\t{\n\t\t\tmx1.push(mol.atomX(n + 1));\n\t\t\tmy1.push(mol.atomY(n + 1));\n\t\t}\n\t\tfor (let n = 0; n < sz2; n++)\n\t\t{\n\t\t\tmx2.push(tmol.atomX(n + 1));\n\t\t\tmy2.push(tmol.atomY(n + 1));\n\t\t}\n\n\t\tfor (let i = 0; i < sz1; i++) for (let j = 0; j < sz2; j++)\n\t\t{\n\t\t\tif (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ) continue;\n\t\t\tlet contained = false;\n\t\t\tfor (let k = 0; k < perm.molidx.length; k++) if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1)\n\t\t\t{\n\t\t\t\tcontained = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (contained) continue;\n\n\t\t\tscore += 100;\n\t\t}\n\n\t\t// look for new geometries which would be a bit too funky; do not apply to guided atom fusions\n\t\tif (!perm.guided) for (let n = 0; n < perm.molidx.length; n++)\n\t\t{\n\t\t\tlet el = mol.atomElement(perm.molidx[n]);\n\t\t\tif (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P') continue;\n\n\t\t\tlet adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n\t\t\tif (adj1.length + adj2.length >= 4) continue;\n\n\t\t\tfor (let i = 0; i < adj1.length; i++) for (let j = 0; j < adj2.length; j++)\n\t\t\t{\n\t\t\t\tlet ai = adj1[i], aj = adj2[j];\n\t\t\t\tlet bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n\t\t\t\tlet bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n\n\t\t\t\tlet wantTheta = 0;\n\t\t\t\tif ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1)) wantTheta = 120;\n\t\t\t\telse if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1)) wantTheta = 180;\n\t\t\t\telse continue;\n\n\t\t\t\tlet dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n\t\t\t\tlet dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n\t\t\t\tlet dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n\t\t\t\tlet dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n\t\t\t\tlet theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n\t\t\t\tif (Math.abs(theta - wantTheta) > 5) score += 50; // penalty\n\t\t\t}\n\t\t}\n\n\t\t// look for creation of hypervalent lighter atoms, which is considered a big faux pas\n\t\tfor (let n = 1; n <= tunion.numAtoms; n++) if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N')\n\t\t{\n\t\t\tlet adjb = tunion.atomAdjBonds(n);\n\t\t\tlet totalBO = 0;\n\t\t\tfor (let i = 0; i < adjb.length; i++)\n\t\t\t{\n\t\t\t\tlet bo = tunion.bondOrder(adjb[i]);\n\t\t\t\ttotalBO += bo;\n\t\t\t\tif (bo == 0)\n\t\t\t\t{\n\t\t\t\t\ttotalBO = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t} // any of these, nothing matters anymore\n\t\t\t}\n\t\t\tif (totalBO > 4) score += 1000;\n\t\t}\n\n\t\t// match bond orders, whenever possible\n\t\tif (perm.molidx.length >= 2)\n\t\t{\n\t\t\tlet mmask = Vec.booleanArray(false, sz1);\n\t\t\tfor (let n = 0; n < perm.molidx.length; n++) mmask[perm.molidx[n] - 1] = true;\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++)\n\t\t\t{\n\t\t\t\tlet bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n\t\t\t\tif (!mmask[bfr - 1] || !mmask[bto - 1]) continue;\n\t\t\t\tlet tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n\t\t\t\tlet tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n\t\t\t\tif (tn == 0) continue;\n\t\t\t\tif (mol.bondOrder(n) != tmol.bondOrder(tn)) score += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn score;\n\t}\n\n\tprivate sourceIndex(xmol:Molecule, wmol:Molecule):number[]\n\t{\n\t\tlet idx = Vec.numberArray(0, xmol.numAtoms);\n\t\tfor (let n = wmol.numAtoms; n >= 1; n--) idx[n - 1] = n;\n\t\treturn idx;\n\t}\n\tprivate asMask(imask:number[]):boolean[]\n\t{\n\t\tlet ret = Vec.booleanArray(false, imask.length);\n\t\tfor (let n = 0; n < imask.length; n++) ret[n] = imask[n] != 0;\n\t\treturn ret;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ButtonBank, ButtonBankItem} from '../ui/ButtonBank';\n\n/*\n\tToolBank: buttons for the Sketcher main command bank.\n*/\n\nexport enum ToolBankItem\n{\n\tArrow = 'arrow',\n\tRotate = 'rotate',\n\tPan = 'pan',\n\tDrag = 'drag',\n\tErasor = 'erasor',\n\tBondOrder0 = 'bond:Order0',\n\tBondOrder1 = 'bond:Order1',\n\tBondOrder2 = 'bond:Order2',\n\tBondOrder3 = 'bond:Order3',\n\tBondUnknown = 'bond:Unknown',\n\tBondInclined = 'bond:Inclined',\n\tBondDeclined = 'bond:Declined',\n\tRingAliph = 'ringAliph',\n\tRingArom = 'ringArom',\n\tAtomPlus = 'atomPlus',\n\tAtomMinus = 'atomMinus',\n\n\tBondPfx = 'bond:',\n\tElementPfx = 'element:',\n}\n\nimport svgToolSelect from '@reswmk/img/actions/ToolSelect.svg';\nimport svgToolRotate from '@reswmk/img/actions/ToolRotate.svg';\nimport svgToolPan from '@reswmk/img/actions/ToolPan.svg';\nimport svgToolDrag from '@reswmk/img/actions/ToolDrag.svg';\nimport svgToolErasor from '@reswmk/img/actions/ToolErasor.svg';\nimport svgBondZero from '@reswmk/img/actions/BondZero.svg';\nimport svgBondOne from '@reswmk/img/actions/BondOne.svg';\nimport svgBondTwo from '@reswmk/img/actions/BondTwo.svg';\nimport svgBondThree from '@reswmk/img/actions/BondThree.svg';\nimport svgBondSquig from '@reswmk/img/actions/BondSquig.svg';\nimport svgBondUp from '@reswmk/img/actions/BondUp.svg';\nimport svgBondDown from '@reswmk/img/actions/BondDown.svg';\nimport svgToolRing from '@reswmk/img/actions/ToolRing.svg';\nimport svgToolArom from '@reswmk/img/actions/ToolArom.svg';\nimport svgAtomPlus from '@reswmk/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '@reswmk/img/actions/AtomMinus.svg';\n\nconst TOOLS_MAIN:ButtonBankItem[] =\n[\n\t{id: ToolBankItem.Arrow, svg: svgToolSelect, helpText: 'Selection tool.', mnemonic: 'Escape'},\n\t{id: ToolBankItem.Rotate, svg: svgToolRotate, helpText: 'Rotate subject atoms.', mnemonic: ''},\n\t{id: ToolBankItem.Pan, svg: svgToolPan, helpText: 'Pan the viewport around the screen.', mnemonic: ''},\n\t{id: ToolBankItem.Drag, svg: svgToolDrag, helpText: 'Drag selected atoms to new positions.', mnemonic: ''},\n\t{id: ToolBankItem.Erasor, svg: svgToolErasor, helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete'},\n\t{id: ToolBankItem.BondOrder0, svg: svgBondZero, helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')'},\n\t{id: ToolBankItem.BondOrder1, svg: svgBondOne, helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!'},\n\t{id: ToolBankItem.BondOrder2, svg: svgBondTwo, helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@'},\n\t{id: ToolBankItem.BondOrder3, svg: svgBondThree, helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#'},\n\t{id: ToolBankItem.BondUnknown, svg: svgBondSquig, helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$'},\n\t{id: ToolBankItem.BondInclined, svg: svgBondUp, helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%'},\n\t{id: ToolBankItem.BondDeclined, svg: svgBondDown, helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^'},\n\t{id: ToolBankItem.RingAliph, svg: svgToolRing, helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&'},\n\t{id: ToolBankItem.RingArom, svg: svgToolArom, helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*'},\n\t{id: ToolBankItem.AtomPlus, svg: svgAtomPlus, helpText: 'Increase charge on atom.', mnemonic: ''},\n\t{id: ToolBankItem.AtomMinus, svg: svgAtomMinus, helpText: 'Decrease charge on atom.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: ''},\n\t{id: ToolBankItem.ElementPfx + 'A', text: 'A', helpText: 'Pick other element.', mnemonic: ''}\n];\n\nexport class ToolBank extends ButtonBank\n{\n\tconstructor(protected owner:any)\n\t{\n\t\tsuper();\n\t}\n\n\t// populate the buttons\n\tpublic update():void\n\t{\n\t\tfor (let btn of TOOLS_MAIN) this.buttons.push(btn);\n\n\t\tthis.buttonView.setSelectedButton('arrow');\n\t}\n\n\t// react to a button click\n\tpublic hitButton(id:string):void\n\t{\n\t\tthis.buttonView.setSelectedButton(id);\n\t}\n\n\tpublic claimKey(event:KeyboardEvent):boolean\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('Claim/Command['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\n\t\tfor (let item of TOOLS_MAIN)\n\t\t{\n\t\t\tif (ButtonBank.matchKey(event, item.mnemonic, item.key))\n\t\t\t{\n\t\t\t\tthis.hitButton(item.id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {ButtonView} from './ButtonView';\n\n/*\n\tButtonBank: abstract base class for providing a \"bank of buttons\". The instance is expected to server up a list\n\tof renderable buttons, and to respond when buttons are pressed. A ButtonBank is always owned by a ButtonView instance,\n\twhich calls the shots.\n\n\tContent:\n\t\t.buttons: an array of buttons, each of them an object with the following properties:\n\t\t\t.id: identification code supplied when a button is activated\n\t\t\t.imageFN: root prefix for a static image to display\n\t\t\t.metavec: metavector data to display instead of an image (raw data, not object)\n\t\t\t.helpText: explanatory text\n\t\t\t.isSubMenu: true if the button should be annotated with a submenu glyph\n\t\t\t.mnemonic: optional keyboard shortcut & annotation\n\t\t.ownerView: the molsync.ui.ButtonView object that owns this buttonbank; gets set after the constructor is called\n*/\n\nexport interface ButtonBankItem\n{\n\tid:string;\n\timageFN?:string; // provide a URL for the SVG...\n\tsvg?:string; // ... or provide the SVG text directly\n\tmetavec?:any; // either an instance of MetaVector or a dictionary that can be used to make one (server-generated: semi-deprecated)\n\thelpText:string;\n\tisSubMenu?:boolean;\n\tmnemonic?:string; // key combination for display with modifiers, e.g. Shift+X, which gets interpreted for action purposes\n\tkey?:string; // from KeyCode; overrides the key part of the mnemonic\n\ttext?:string;\n}\n\nexport abstract class ButtonBank\n{\n\tpublic buttonView:ButtonView; // the widget parent\n\tpublic isSubLevel = false; // true if it's not the first-on-stack\n\tpublic buttons:ButtonBankItem[] = [];\n\n\tconstructor() {}\n\n\t// called when the bank is added to a view; the .ownerView property will be set at this point\n\tpublic init():void {}\n\n\t// update the list of buttons; this may be called more than once, e.g. when resizing, or being popped back off the stack; this\n\t// method must be overridden\n\tpublic abstract update():void;\n\n\t// this gets called when a button is activated, i.e. clicked\n\tpublic abstract hitButton(id:string):void;\n\n\t// a key has been pressed: the button bank may choose to react to it\n\tpublic claimKey(event:KeyboardEvent):boolean {return false;}\n\n\t// override to capture the closing of the bank (a cleanup opportunity)\n\tpublic bankClosed() {}\n\n\t// utility function: returns true if the system-generated keyboard event for a \"keypress\" action matches the mnemonic string (which is\n\t// used as a shorthand in the button definitions); the mnemonic format is basically:\n\t//\n\t//     {modifier1}-{modifier2}-...-{keychar}\n\t//\n\t// where the modifiers consist of Shift-, Ctrl-, Alt-; and the keychar is usually a plain keyboard character which is case insensitive - with\n\t// special word codes for unprintables\n\tpublic static matchKey(event:KeyboardEvent, mnemonic:string, key:string):boolean\n\t{\n\t\tif (mnemonic == null || mnemonic == '') return false;\n\n\t\tlet mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n\t\twhile (true)\n\t\t{\n\t\t\tif (mkey.startsWith('Shift+')) {mshift = true; mkey = mkey.substring(6);}\n\t\t\telse if (mkey.startsWith('Ctrl+')) {mctrl = true; mkey = mkey.substring(5);}\n\t\t\telse if (mkey.startsWith('Alt+')) {malt = true; mkey = mkey.substring(4);}\n\t\t\telse if (mkey.startsWith('Cmd+')) {mmeta = true; mkey = mkey.substring(4);}\n\t\t\telse break;\n\t\t}\n\n\t\t//console.log('MatchKey:',{mkey,mshift,mctrl,malt,mmeta});\n\n\t\tif (mshift != event.shiftKey) return false;\n\t\tif (mctrl != event.ctrlKey) return false;\n\t\tif (malt != event.altKey) return false;\n\t\tif (mmeta != event.metaKey) return false;\n\n\t\tif (key) mkey = key; // override\n\n\t\treturn mkey.toLowerCase() == event.key.toLowerCase();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {FontData} from '../gfx/FontData';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {dom, DOM} from '../util/dom';\nimport {Theme} from '../util/Theme';\nimport {colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {ButtonBank, ButtonBankItem} from './ButtonBank';\nimport {addTooltip} from './Tooltip';\nimport {Widget} from './Widget';\n\n/*\n\tButtonView: a container for a stack of ButtonBanks. The ButtonView handles all the display/user interaction parts\n\tof a button bank. A ButtonView should be owned by a container object that defines a region of space within which this\n\tobject can position itself.\n*/\n\nexport enum ButtonViewPosition\n{\n\tLeft,\n\tRight,\n\tTop,\n\tBottom,\n\tCentre,\n}\n\nexport interface ButtonViewDisplay\n{\n\tid:string;\n\tx?:number;\n\ty?:number;\n\twidth?:number;\n\theight?:number;\n\thelpSpan?:DOM;\n\timgDOM?:DOM;\n}\n\nexport class ButtonView extends Widget\n{\n\tpublic idealSize = 50;\n\tpublic width = 0;\n\tpublic height = 0;\n\tpublic selectedButton:string = null;\n\tpublic highlightButton:string = null;\n\tpublic maxButtonColumns = 0; // optional\n\tpublic maxButtonRows = 0; // optional\n\n\tprivate border = 0x808080;\n\tprivate background = 0xFFFFFF;\n\tprivate buttonColNorm1 = 0x47D5D2;\n\tprivate buttonColNorm2 = 0x008FD1;\n\tprivate buttonColActv1 = 0x30FF69;\n\tprivate buttonColActv2 = 0x008650;\n\tprivate buttonColSel1 = 0xFFFFFF;\n\tprivate buttonColSel2 = 0xE0E0E0;\n\n\tprivate canvas:HTMLCanvasElement = null;\n\tprivate stack:ButtonBank[] = [];\n\tprivate display:ButtonViewDisplay[] = [];\n\tprivate hasBigButtons = true;\n\tprivate prefabImgSize = 44;\n\tprivate gripHeight = 30;\n\tprivate gripWidth = 50;\n\tprivate isRaised = true;\n\tprivate outPadding = 2;\n\tprivate inPadding = 2;\n\tprivate x = 0;\n\tprivate y = 0;\n\n\t// static cache: needs to be filled out just once; will contain the {icon:svg} pairs that can be used in the buttons\n\t//private static ACTION_ICONS:Record<string, string> = {};\n\n\tprivate isMacLike = false;\n\n\tconstructor(private position:ButtonViewPosition, private parentX:number, private parentY:number, private parentWidth:number, private parentHeight:number)\n\t{\n\t\tsuper();\n\n\t\t// NOTE: this is going to be a problem soon, but there's no replacement\n\t\tthis.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n\t}\n\n\t// for future reference, parent boundary size is different\n\tpublic setParentSize(width:number, height:number):void\n\t{\n\t\tthis.parentWidth = width;\n\t\tthis.parentHeight = height;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// --------------------------------------- public methods ---------------------------------------\n\n\t// returns the current bank, or null if none\n\tpublic get topBank():ButtonBank\n\t{\n\t\treturn this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n\t}\n\n\t// returns how many banks are piled up\n\tpublic get stackSize():number {return this.stack.length;}\n\n\t// create the canvas\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.contentDOM.css({'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px`});\n\t\tthis.contentDOM.addClass('no_selection');\n\n\t\tthis.layoutButtons();\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0;';\n\t\tcanvasStyle += 'pointer-events: none;';\n\t\tthis.canvas = newElement(this.contentDOM.el, 'canvas', {'width': this.width, 'height': this.height, 'style': canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\tthis.applyOffset();\n\t\tthis.redraw();\n\n\t\tthis.contentDOM.onClick((event) => this.mouseClick(event));\n\t\tthis.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tthis.contentDOM.onMouseDown((event) => {event.preventDefault(); this.mouseDown(event);});\n\t\tthis.contentDOM.onMouseUp((event) => this.mouseUp(event));\n\t\tthis.contentDOM.onMouseOver((event) => this.mouseOver(event));\n\t\tthis.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n\t\tthis.contentDOM.onMouseMove((event) => this.mouseMove(event));\n\t}\n\n\t// adds a new molsync.ui.ButtonBank instance to the stack, making it the current one\n\tpublic pushBank(bank:ButtonBank):void\n\t{\n\t\tbank.buttonView = this;\n\t\tbank.isSubLevel = this.stack.length > 0;\n\t\tbank.init();\n\t\tthis.stack.push(bank);\n\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// removes the top buttonbank from the stack\n\tpublic popBank():void\n\t{\n\t\tif (this.stack.length == 0) return;\n\t\tVec.last(this.stack).bankClosed();\n\t\tthis.stack.length--;\n\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// updates the current bank, given that the buttons have probably changed\n\tpublic refreshBank():void\n\t{\n\t\tif (this.canvas != null)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// get/set the selected button index, by ID\n\tpublic getSelectedButton():string\n\t{\n\t\treturn this.selectedButton;\n\t}\n\tpublic setSelectedButton(id:string):void\n\t{\n\t\tif (id != this.selectedButton)\n\t\t{\n\t\t\tthis.selectedButton = id;\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// pick next/previous button\n\tpublic cycleSelected(dir:number):void\n\t{\n\t\tlet sorted = this.display.filter((s) => s.id != '*');\n\t\tsorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n\n\t\tlet idx = 0, sz = sorted.length;\n\t\tfor (let n = 0; n < sz; n++) if (sorted[n].id == this.selectedButton) {idx = n; break;}\n\t\tthis.selectedButton = sorted[(idx + dir + sz) % sz].id;\n\t\tthis.redraw();\n\t}\n\n\t// raises or lowers the buttonbank\n\tpublic raiseBank():void\n\t{\n\t\tif (this.isRaised) return;\n\t\tthis.isRaised = true;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\tpublic lowerBank():void\n\t{\n\t\tif (!this.isRaised) return;\n\t\tthis.isRaised = false;\n\t\tif (this.contentDOM)\n\t\t{\n\t\t\tthis.layoutButtons();\n\t\t\tthis.replaceCanvas();\n\t\t\tthis.applyOffset();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\t// determines whether or not the \"big buttons\" are used; big buttons are typically better for mobile devices, which\n\t// tend to have high screen DPI, while on PC monitors they tend to look a bit goofy\n\tpublic getHasBigButtons():boolean\n\t{\n\t\treturn this.hasBigButtons;\n\t}\n\tpublic setHasBigButtons(flag:boolean)\n\t{\n\t\tthis.hasBigButtons = flag;\n\t\tthis.prefabImgSize = flag ? 44 : 36;\n\t\tthis.idealSize = flag ? 50 : 40;\n\t}\n\n\t// returns true if the coordinate is (more or less) within the button outline, which is necessary for propagating mouse events;\n\t// it's also sometimes handy for exterior code to check if the position is covered\n\tpublic withinOutline(x:number, y:number)\n\t{\n\t\tlet w = this.width, h = this.height;\n\t\tif (x < 0 || x > w || y < 0 || y > h) return false;\n\n\t\tif (this.position == ButtonViewPosition.Centre || this.stack.length == 0) return true;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn x < w - gw || (y > my - hg && y < my + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn x > gw || (y > my - hg && y < my + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn y < h - gh || (x > mx - hg && x < mx + hg);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\treturn y > gh || (x > mx - hg && x < mx + hg);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// returns the space taken up by the \"grip\"; this is the value of the \"height\", which will have been rotated for left/right banks\n\tpublic gripSize():number\n\t{\n\t\treturn this.gripHeight;\n\t}\n\n\t// returns the minimum size (either width or height depending on orientation) given a particular number of buttons in the aligning direction, not\n\t// including grip widgets\n\tpublic sizeForButtons(nbtn:number):number\n\t{\n\t\treturn this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n\t}\n\n\t// --------------------------------------- private methods ---------------------------------------\n\n\t// figures out the size that this buttonview needs to be\n\tprivate layoutButtons():void\n\t{\n\t\tif (this.contentDOM == null) return; // too soon\n\n\t\tlet outPadding = this.outPadding, inPadding = this.inPadding;\n\n\t\t// clean up previous buttons\n\t\tthis.removeDisplayButtons();\n\n\t\t// special case: no content\n\t\tif (this.stack.length == 0)\n\t\t{\n\t\t\tthis.width = 10;\n\t\t\tthis.height = 10;\n\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) this.height = this.parentHeight;\n\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) this.width = this.parentWidth;\n\t\t\treturn;\n\t\t}\n\n\t\t// it not raised, it shall be small, and have only a grip\n\t\tif (!this.isRaised)\n\t\t{\n\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t\t{\n\t\t\t\tthis.width = this.gripHeight;\n\t\t\t\tthis.height = this.gripWidth + 2 * outPadding;\n\t\t\t}\n\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t\t{\n\t\t\t\tthis.width = this.gripWidth + 2 * outPadding;\n\t\t\t\tthis.height = this.gripHeight;\n\t\t\t}\n\t\t\tthis.addGripButton();\n\t\t\treturn;\n\t\t}\n\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tbank.buttons = [];\n\t\tbank.update();\n\n\t\t// decide how much room the 'pop button' takes up\n\t\tlet popWidth = 0, popHeight = 0;\n\t\tif (this.stack.length == 1) {}\n\t\telse if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) popHeight = this.gripHeight + inPadding;\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) popWidth = this.gripHeight + inPadding;\n\n\t\t// burn through layout possibilities, and keep the best one\n\t\tlet bestLayout:string[][] = null, bestScore:number = null;\n\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding /*- popHeight*/) / (this.idealSize + inPadding));\n\t\t\tlet minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n\t\t\tfor (let i = maxSlotHeight; i >= minSlotHeight; i--)\n\t\t\t{\n\t\t\t\tlet slotWidth = Math.ceil(bank.buttons.length / i);\n\t\t\t\tfor (let j = slotWidth; j <= slotWidth + 1; j++)\n\t\t\t\t{\n\t\t\t\t\tlet layout = this.layoutMaxHeight(bank, i, j);\n\t\t\t\t\tlet score = this.scoreLayout(layout) + 1 * layout[0].length;\n\t\t\t\t\tif (bestLayout == null || score < bestScore)\n\t\t\t\t\t{\n\t\t\t\t\t\tbestLayout = layout;\n\t\t\t\t\t\tbestScore = score;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n\t\t\tlet minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n\t\t\tfor (let n = maxSlotWidth; n >= minSlotWidth; n--)\n\t\t\t{\n\t\t\t\tlet layout = this.layoutMaxWidth(bank, n);\n\t\t\t\tlet score = this.scoreLayout(layout) + 1 * layout.length;\n\t\t\t\tif (bestLayout == null || score < bestScore)\n\t\t\t\t{\n\t\t\t\t\tbestLayout = layout;\n\t\t\t\t\tbestScore = score;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// !! implement \"middle of window\" type (?)\n\t\t}\n\n\t\t// determine total size, and position everything\n\t\tlet ncols = bestLayout[0].length, nrows = bestLayout.length;\n\t\tthis.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n\t\tthis.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n\n\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) this.width += this.gripHeight;\n\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) this.height += this.gripHeight;\n\t\tthis.addGripButton();\n\n\t\tif (popWidth > 0 || popHeight > 0)\n\t\t{\n\t\t\tlet d:ButtonViewDisplay =\n\t\t\t{\n\t\t\t\tid: '!',\n\t\t\t\tx: outPadding + inPadding,\n\t\t\t\ty: outPadding + inPadding,\n\t\t\t\twidth: popWidth - inPadding,\n\t\t\t\theight: popHeight - inPadding\n\t\t\t};\n\t\t\tif (this.position == ButtonViewPosition.Right) d.x += this.gripHeight;\n\t\t\telse if (this.position == ButtonViewPosition.Bottom) d.y += this.gripHeight;\n\t\t\tif (popWidth == 0) d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n\t\t\tif (popHeight == 0) d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n\t\t\tthis.display.push(d);\n\t\t}\n\n\t\t// add in all the actual buttons\n\t\tfor (let y = 0; y < nrows; y++) for (let x = 0; x < ncols; x++)\n\t\t{\n\t\t\tfor (let n = 0; n < bank.buttons.length; n++) if (bestLayout[y][x] == bank.buttons[n].id)\n\t\t\t{\n\t\t\t\tlet b = bank.buttons[n], d:ButtonViewDisplay = {id: b.id};\n\t\t\t\td.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n\t\t\t\td.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n\t\t\t\tif (this.position == ButtonViewPosition.Right) d.x += this.gripHeight;\n\t\t\t\telse if (this.position == ButtonViewPosition.Bottom) d.y += this.gripHeight;\n\t\t\t\td.width = this.idealSize;\n\t\t\t\td.height = this.idealSize;\n\t\t\t\tthis.display.push(d);\n\t\t\t}\n\t\t}\n\t}\n\n\t// if appropriate, adds a grip button, with a suitable position\n\tprivate addGripButton():void\n\t{\n\t\tif (this.position == ButtonViewPosition.Centre) return;\n\n\t\tlet d:ButtonViewDisplay = {id: '*'}, spc = 3;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\td.width = this.gripHeight - spc;\n\t\t\td.height = this.gripWidth - 2 * spc;\n\t\t\td.x = this.width - d.width - spc - 1;\n\t\t\td.y = 0.5 * (this.height - d.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\td.width = this.gripHeight - spc;\n\t\t\td.height = this.gripWidth - 2 * spc;\n\t\t\td.x = spc + 1;\n\t\t\td.y = 0.5 * (this.height - d.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\td.width = this.gripWidth - 2 * spc;\n\t\t\td.height = this.gripHeight - spc;\n\t\t\td.x = 0.5 * (this.width - d.width);\n\t\t\td.y = this.height - d.height - spc - 1;\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\td.width = this.gripWidth - 2 * spc;\n\t\t\td.height = this.gripHeight - spc;\n\t\t\td.x = 0.5 * (this.width - d.width);\n\t\t\td.y = spc + 1;\n\t\t}\n\t\tthis.display.push(d);\n\t}\n\n\t// recreates the canvas, on account of it having a different size; note the \"setSize\" method is marked to-be-done in the closures\n\t// library, so this may not always be necessary\n\tprivate replaceCanvas():void\n\t{\n\t\tthis.contentDOM.empty();\n\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tthis.display[n].imgDOM = null;\n\t\t\tthis.display[n].helpSpan = null;\n\t\t}\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0;';\n\t\tcanvasStyle += 'pointer-events: none;';\n\t\tthis.canvas = newElement(this.contentDOM.el, 'canvas', {'width': this.width, 'height': this.height, 'style': canvasStyle}) as HTMLCanvasElement;\n\t}\n\n\t// removes all the display buttons, making sure to delete the HTML objects as necessary\n\tprivate removeDisplayButtons():void\n\t{\n\t\tthis.contentDOM.empty();\n\t\tthis.display = [];\n\t}\n\n\t// positions the canvas within its parent\n\tprivate applyOffset():void\n\t{\n\t\tlet x:number, y:number;\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tx = 0;\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tx = this.parentWidth - this.width;\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = 0;\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = this.parentHeight - this.height;\n\t\t}\n\t\telse // == 'centre'\n\t\t{\n\t\t\tx = 0.5 * (this.parentWidth - this.width);\n\t\t\ty = 0.5 * (this.parentHeight - this.height);\n\t\t}\n\n\t\tthis.x = this.parentX + x;\n\t\tthis.y = this.parentY + y;\n\n\t\tthis.contentDOM.css({'position': 'absolute'});\n\t\tsetBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n\t}\n\n\t// redraws the buttons, in response to some kind of state change\n\tprivate redraw():void\n\t{\n\t\tif (!this.contentDOM || !this.canvas) return;\n\n\t\t// background\n\n\t\tlet density = pixelDensity();\n\t\tthis.canvas.width = this.width * density;\n\t\tthis.canvas.height = this.height * density;\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\tlet ctx = this.canvas.getContext('2d');\n\t\tctx.save();\n\t\tctx.scale(density, density);\n\t\tctx.clearRect(0, 0, this.width, this.height);\n\n\t\tlet path = this.traceOutline();\n\t\tctx.fillStyle = colourCanvas(this.background);\n\t\tctx.fill(path);\n\t\tctx.strokeStyle = colourCanvas(this.border);\n\t\tctx.lineWidth = 1;\n\t\tctx.stroke(path);\n\n\t\tlet bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n\n\t\tthis.contentDOM.css({'width': this.width + 'px', 'height': this.height + 'px'});\n\n\t\t// button outlines\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tconst d = this.display[n], b = this.buttonFromID(d.id);\n\n\t\t\tlet col1:number, col2:number;\n\t\t\tif (this.highlightButton != null && d.id == this.highlightButton)\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColActv1;\n\t\t\t\tcol2 = this.buttonColActv2;\n\t\t\t}\n\t\t\telse if (this.selectedButton != null && d.id == this.selectedButton)\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColSel1;\n\t\t\t\tcol2 = this.buttonColSel2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcol1 = this.buttonColNorm1;\n\t\t\t\tcol2 = this.buttonColNorm2;\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tpath = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n\t\t\tif (col2 != null)\n\t\t\t{\n\t\t\t\tlet grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n\t\t\t\tgrad.addColorStop(0, colourCanvas(col1));\n\t\t\t\tgrad.addColorStop(1, colourCanvas(col2));\n\t\t\t\tctx.fillStyle = grad;\n\t\t\t}\n\t\t\telse ctx.fillStyle = colourCanvas(col1);\n\t\t\tctx.fill(path);\n\t\t\tctx.strokeStyle = colourCanvas(this.border);\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.stroke(path);\n\t\t\tctx.restore();\n\n\t\t\tif (d.imgDOM != null)\n\t\t\t{\n\t\t\t\td.imgDOM.remove();\n\t\t\t\td.imgDOM = null;\n\t\t\t}\n\n\t\t\tif (b != null)\n\t\t\t{\n\t\t\t\tif (d.helpSpan == null)\n\t\t\t\t{\n\t\t\t\t\td.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n\t\t\t\t\tlet txt = b.helpText;\n\t\t\t\t\tif (b.mnemonic)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (txt.endsWith('.')) txt = txt.substring(0, txt.length - 1);\n\n\t\t\t\t\t\tlet keyText = b.mnemonic;\n\t\t\t\t\t\tlet match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n\t\t\t\t\t\tif (match) keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n\t\t\t\t\t\ttxt += ' [' + keyText + ']';\n\t\t\t\t\t}\n\t\t\t\t\taddTooltip(d.helpSpan, txt);\n\t\t\t\t}\n\t\t\t\tsetBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n\t\t\t}\n\n\t\t\tif (b == null) {}\n\t\t\telse if (b.imageFN != null && d.imgDOM == null)\n\t\t\t{\n\t\t\t\td.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({'position': 'absolute', 'pointer-events': 'none'});\n\t\t\t\td.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n\t\t\t\tconst sz = this.prefabImgSize;\n\t\t\t\tconst bx = d.x + Math.floor(0.5 * (d.width - sz));\n\t\t\t\tconst by = d.y + Math.floor(0.5 * (d.height - sz));\n\t\t\t\tsetBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n\t\t\t}\n\t\t\telse if (b.svg != null)\n\t\t\t{\n\t\t\t\td.imgDOM = dom('<div/>').appendTo(this.contentDOM).css({'display': 'block', 'position': 'absolute', 'pointer-events': 'none'});\n\t\t\t\tconst sz = this.prefabImgSize;\n\t\t\t\tconst bx = d.x + Math.floor(0.5 * (d.width - sz));\n\t\t\t\tconst by = d.y + Math.floor(0.5 * (d.height - sz));\n\t\t\t\tsetBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n\t\t\t\tlet svg = dom(b.svg.substring(b.svg.indexOf('<svg'))).appendTo(d.imgDOM);\n\t\t\t\tlet oldWidth = svg.getAttr('width'), oldHeight = svg.getAttr('height');\n\t\t\t\tsvg.attr({'viewBox': `0 0 ${oldWidth} ${oldHeight}`, 'width': `${sz}`, 'height': `${sz}`});\n\t\t\t\tsvg.css({'width': `${sz}px`, 'height': `${sz}px`, 'pointer-events': 'none'});\n\t\t\t\tdom(svg).appendTo(d.imgDOM);\n\t\t\t}\n\t\t\telse if (b.metavec != null)\n\t\t\t{\n\t\t\t\tlet draw = b.metavec instanceof MetaVector ? b.metavec as MetaVector : new MetaVector(b.metavec);\n\t\t\t\tdraw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n\t\t\t\tdraw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n\t\t\t\tdraw.renderContext(ctx);\n\t\t\t}\n\t\t\telse if (b.text != null)\n\t\t\t{\n\t\t\t\tlet sz = this.idealSize;\n\t\t\t\tlet draw = new MetaVector({'size': [sz, sz]});\n\t\t\t\tlet fsz = sz * 0.6;\n\t\t\t\tlet wad = FontData.main.measureText(b.text, fsz);\n\n\t\t\t\tif (wad[1] + wad[2] > sz)\n\t\t\t\t{\n\t\t\t\t\tfsz *= sz / (wad[1] + wad[2]);\n\t\t\t\t\twad = FontData.main.measureText(b.text, fsz);\n\t\t\t\t}\n\t\t\t\tif (wad[0] > sz)\n\t\t\t\t{\n\t\t\t\t\tfsz *= sz / wad[0];\n\t\t\t\t\twad = FontData.main.measureText(b.text, fsz);\n\t\t\t\t}\n\t\t\t\tlet x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n\t\t\t\tdraw.drawText(x - 1, y, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x + 1, y, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y - 1, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y + 1, b.text, fsz, 0x000000);\n\t\t\t\tdraw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n\t\t\t\tdraw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n\t\t\t\tdraw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n\t\t\t\tdraw.renderContext(ctx);\n\t\t\t}\n\n\t\t\t// optionally draw the submenus indicator\n\t\t\tif (b != null && b.isSubMenu)\n\t\t\t{\n\t\t\t\tctx.save();\n\t\t\t\tlet sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(sx, sy);\n\t\t\t\tctx.lineTo(sx - 6, sy);\n\t\t\t\tctx.lineTo(sx, sy - 6);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fillStyle = 'black';\n\t\t\t\tctx.fill();\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// if it's the grip-button, draw the caret\n\t\t\tif (d.id == '*')\n\t\t\t{\n\t\t\t\tctx.save();\n\n\t\t\t\tpath = new Path2D();\n\t\t\t\tlet px:number[], py:number[], flip = this.isRaised;\n\t\t\t\tif (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n\t\t\t\t{\n\t\t\t\t\tpx = [0.2, 0.7, 0.7]; py = [0.5, 0.3, 0.7];\n\t\t\t\t\tif (this.position == ButtonViewPosition.Left) flip = !flip;\n\t\t\t\t}\n\t\t\t\telse if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n\t\t\t\t{\n\t\t\t\t\tpx = [0.5, 0.3, 0.7]; py = [0.2, 0.7, 0.7];\n\t\t\t\t\tif (this.position == ButtonViewPosition.Top) flip = !flip;\n\t\t\t\t}\n\t\t\t\tif (flip) {px = [1 - px[0], 1 - px[1], 1 - px[2]]; py = [1 - py[0], 1 - py[1], 1 - py[2]];}\n\t\t\t\tpath.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n\t\t\t\tpath.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n\t\t\t\tpath.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n\t\t\t\tpath.closePath();\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.strokeStyle = 'black';\n\t\t\t\tctx.lineWidth = 0;\n\t\t\t\tctx.fill(path);\n\t\t\t\tctx.stroke(path);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\telse if (d.id == '!')\n\t\t\t{\n\t\t\t\tctx.save();\n\n\t\t\t\tlet path1 = new Path2D(), path2 = new Path2D();\n\n\t\t\t\tlet inset = 5;\n\t\t\t\tlet w = d.width - inset * 2, h = d.height - inset * 2;\n\n\t\t\t\tfor (let z = 5; z < w + h - 1; z += 12)\n\t\t\t\t{\n\t\t\t\t\tlet x1 = 0, y1 = z, x2 = z, y2 = 0;\n\t\t\t\t\tif (y1 > h)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet delta = y1 - h;\n\t\t\t\t\t\tx1 += delta;\n\t\t\t\t\t\ty1 -= delta;\n\t\t\t\t\t}\n\t\t\t\t\tif (x2 > w)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet delta = x2 - w;\n\t\t\t\t\t\tx2 -= delta;\n\t\t\t\t\t\ty2 += delta;\n\t\t\t\t\t}\n\t\t\t\t\tpath1.moveTo(d.x + inset + x1, d.y + inset + y1);\n\t\t\t\t\tpath1.lineTo(d.x + inset + x2, d.y + inset + y2);\n\t\t\t\t\tpath2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n\t\t\t\t\tpath2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n\t\t\t\t}\n\n\t\t\t\tctx.lineWidth = 1;\n\t\t\t\tctx.strokeStyle = '#404040';\n\t\t\t\tctx.stroke(path1);\n\t\t\t\tctx.strokeStyle = 'white';\n\t\t\t\tctx.stroke(path2);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\n\t\tctx.restore();\n\t}\n\tprivate delayedRedraw():void\n\t{\n\t\twindow.setTimeout(() => this.redraw(), 100);\n\t}\n\n\t// mapping ID tags into raw/display button objects\n\tprivate buttonFromID(id:string):ButtonBankItem\n\t{\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tfor (let n = 0; n < bank.buttons.length; n++) if (bank.buttons[n].id == id) return bank.buttons[n];\n\t\treturn null;\n\t}\n\tprivate displayFromID(id:string):ButtonViewDisplay\n\t{\n\t\tfor (let n = 0; n < this.display.length; n++) if (this.display[n].id == id) return this.display[n];\n\t\treturn null;\n\t}\n\n\t// produces a path that runs around the outside edge of the buttonbank; the shape depends on the orientation\n\tprivate traceOutline():Path2D\n\t{\n\t\tlet w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n\t\tif (this.position == ButtonViewPosition.Centre || this.stack.length == 0) return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n\n\t\tlet path = new Path2D();\n\n\t\tif (this.position == ButtonViewPosition.Left)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, 0.5);\n\t\t\tpath.lineTo(0.5 + uw - gw - r, 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n\t\t\tpath.lineTo(0.5 + uw - r, 0.5 + my - hg);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n\t\t\tpath.lineTo(0.5 + uw, 0.5 + my + hg - r);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n\t\t\tpath.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n\t\t\tpath.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n\t\t\tpath.lineTo(0.5, 0.5 + uh);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Right)\n\t\t{\n\t\t\tlet my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(w - 0.5, 0.5);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw - r), 0.5);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n\t\t\tpath.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n\t\t\tpath.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n\t\t\tpath.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n\t\t\tpath.lineTo(w - 0.5, 0.5 + uh);\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Top)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, h - (0.5 + uh));\n\t\t\tpath.lineTo(0.5, h - (0.5 + gh + r));\n\t\t\tpath.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + mx - hg, h - (0.5 + r));\n\t\t\tpath.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n\t\t\tpath.lineTo(0.5 + mx + hg - r, h - 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n\t\t\tpath.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n\t\t\tpath.lineTo(0.5 + uw - r, h - (0.5 + gh));\n\t\t\tpath.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n\t\t\tpath.lineTo(0.5 + uw, h - (0.5 + uh));\n\t\t}\n\t\telse if (this.position == ButtonViewPosition.Bottom)\n\t\t{\n\t\t\tlet mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n\t\t\tpath.moveTo(0.5, 0.5 + uh);\n\t\t\tpath.lineTo(0.5, 0.5 + gh + r);\n\t\t\tpath.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + mx - hg, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + mx - hg, 0.5 + r);\n\t\t\tpath.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n\t\t\tpath.lineTo(0.5 + mx + hg - r, 0.5);\n\t\t\tpath.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n\t\t\tpath.lineTo(0.5 + mx + hg, 0.5 + gh);\n\t\t\tpath.lineTo(0.5 + uw - r, 0.5 + gh);\n\t\t\tpath.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n\t\t\tpath.lineTo(0.5 + uw, 0.5 + uh);\n\t\t}\n\t\treturn path;\n\t}\n\n\t// used for horizontal buttonbanks: provide a maximum width, and try to fill it evenly; returns slot[y][x]='id'/undef\n\tprivate layoutMaxWidth(bank:ButtonBank, slotWidth:number):string[][]\n\t{\n\t\tif (bank.buttons.length == 0) return [[null]];\n\n\t\t// !! consider the buddy system when feeding things in...\n\t\tlet bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n\t\tlet x = 0, y = 0, w = 0, h = 0;\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tw = Math.max(x + 1, w);\n\t\t\th = Math.max(y + 1, h);\n\t\t\tbx[n] = x;\n\t\t\tby[n] = y;\n\t\t\tx++;\n\t\t\tif (x >= slotWidth) {x = 0; y++;}\n\t\t}\n\t\tlet slot = new Array(h);\n\t\tfor (let n = 0; n < h; n++) slot[n] = new Array(w);\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tslot[by[n]][bx[n]] = bank.buttons[n].id;\n\t\t}\n\t\treturn slot;\n\t}\n\n\t// used for vertical buttonbanks: provide a maximum height, and a row width, and try to fill it evenly; note that the buttons\n\t// are still fed in left-to-right, just like the layoutMaxWidth method; returns slot[y][x]='id'/undef\n\tprivate layoutMaxHeight(bank:ButtonBank, slotHeight:number, slotWidth:number):string[][]\n\t{\n\t\tif (bank.buttons.length == 0) return [[null]];\n\n\t\t// !! consider the buddy system when feeding things in...\n\t\tlet bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n\t\tlet x = 0, y = 0, w = 0, h = 0;\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tw = Math.max(x + 1, w);\n\t\t\th = Math.max(y + 1, h);\n\t\t\tbx[n] = x;\n\t\t\tby[n] = y;\n\t\t\tx++;\n\t\t\tif (x >= slotWidth) {x = 0; y++;}\n\t\t}\n\t\tlet slot = new Array(h);\n\t\tfor (let n = 0; n < h; n++) slot[n] = new Array(w);\n\t\tfor (let n = 0; n < bank.buttons.length; n++)\n\t\t{\n\t\t\tslot[by[n]][bx[n]] = bank.buttons[n].id;\n\t\t}\n\t\treturn slot;\n\t}\n\n\t// takes an array of slot[y][x], and calculates a base score; higher is bad, i.e. penalty based\n\tprivate scoreLayout(slots:string[][])\n\t{\n\t\tlet score = 0;\n\t\tlet nrows = slots.length, ncols = slots[0].length;\n\t\tfor (let y = 0; y < nrows; y++) for (let x = 0; x < ncols; x++)\n\t\t{\n\t\t\tif (slots[y][x] == null) score++;\n\t\t}\n\t\tif (this.maxButtonRows > 0 && nrows > this.maxButtonRows) score += (nrows - this.maxButtonRows) * 100;\n\t\tif (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns) score += (ncols - this.maxButtonColumns) * 100;\n\t\treturn score;\n\t}\n\n\t// returns the index of the button underneath the position, or -1 if none\n\tprivate pickButtonIndex(x:number, y:number)\n\t{\n\t\tfor (let n = 0; n < this.display.length; n++)\n\t\t{\n\t\t\tlet d = this.display[n];\n\t\t\tif (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height) return n;\n\t\t}\n\t\treturn -1;\n\t}\n\tprivate pickButtonID(x:number, y:number):string\n\t{\n\t\tlet idx = this.pickButtonIndex(x, y);\n\t\tif (idx < 0) return undefined;\n\t\treturn this.display[idx].id;\n\t}\n\n\t// the button index has been clicked, so activate the corresponding action\n\tprivate triggerButton(id:string):void\n\t{\n\t\tif (id == '*')\n\t\t{\n\t\t\tif (this.isRaised)\n\t\t\t\tthis.lowerBank();\n\t\t\telse\n\t\t\t\tthis.raiseBank();\n\t\t\treturn;\n\t\t}\n\t\telse if (id == '!')\n\t\t{\n\t\t\tthis.popBank();\n\t\t\treturn;\n\t\t}\n\t\tlet bank = this.stack[this.stack.length - 1];\n\t\tbank.hitButton(id);\n\t}\n\n\t// --------------------------------------- toolkit events ---------------------------------------\n\n\t// event responses\n\tprivate mouseClick(event:MouseEvent):void\n\t{\n\t}\n\tprivate mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\t// (do something?)\n\t\tevent.stopImmediatePropagation();\n\t}\n\tprivate mouseDown(event:MouseEvent):void\n\t{\n\t\tthis.contentDOM.parent().grabFocus();\n\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// !! ?? let shift = event.shiftKey, ctrl = event.ctrlKey, alt = event.altKey, meta = event.metaKey, plat = event.platformModifierKey;\n\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\n\t\tif (id != this.highlightButton)\n\t\t{\n\t\t\tthis.highlightButton = id;\n\t\t\tthis.redraw();\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseUp(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// !! ?? let shift = event.shiftKey, ctrl = event.ctrlKey, alt = event.altKey, meta = event.metaKey, plat = event.platformModifierKey;\n\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\n\t\tif (id != null && this.highlightButton == id)\n\t\t{\n\t\t\tthis.highlightButton = undefined;\n\t\t\tthis.triggerButton(id);\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.highlightButton = undefined;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseOver(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// (do something?)\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseOut(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1]))\n\t\t{\n\t\t\tif (this.highlightButton != null)\n\t\t\t{\n\t\t\t\tthis.highlightButton = null;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.highlightButton != null)\n\t\t{\n\t\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\t\tlet id = this.pickButtonID(xy[0], xy[1]);\n\t\t\tif (id != this.highlightButton)\n\t\t\t{\n\t\t\t\tthis.highlightButton = null;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t}\n\t\t}\n\n\t\tevent.stopPropagation();\n\t}\n\tprivate mouseMove(event:MouseEvent):void\n\t{\n\t\tlet xy = eventCoords(event, this.contentDOM);\n\t\tif (!this.withinOutline(xy[0], xy[1])) return; // propagate\n\n\t\t// (do something?)\n\n\t\t//event.stopPropagation();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '../util/Vec';\n\n/*\n\tClipboardProxy: abstract base class for two different methods for clipboard access. One is the usual web page method,\n\twhich has serious limitations due to security concerns (i.e. a web page can't just grab the clipboard any time it wants).\n\tThe other is the NodeJS/Electron implementation which has full access any time it wants.\n\n*/\n\n// default clipboard behaviour: override these methods to intercept incoming copy/cut/paste requests; this default implementation\n// hands over the reins to the system, which is normal behaviour\nexport class ClipboardProxyHandler\n{\n\t// note: return values = true if the event got consumed by privately implemented functionality; false = fall back to the default\n\tpublic copyEvent(andCut:boolean, proxy:ClipboardProxy):boolean {return false;}\n\tpublic pasteEvent(proxy:ClipboardProxy):boolean {return false;}\n}\n\nexport class ClipboardProxy\n{\n\tprotected handlers = [new ClipboardProxyHandler()]; // baseline fallback is the default pass-through implementation\n\n\t// ------------ public methods ------------\n\n\t// use these two functions whenever a new focus-stealing object pops up on top of everything else, e.g. dialogs or dialog-like specialised\n\t// editing tools with complex clipboard behaviour\n\tpublic pushHandler(handler:ClipboardProxyHandler)\n\t{\n\t\tthis.handlers.push(handler);\n\t}\n\tpublic popHandler()\n\t{\n\t\tthis.handlers.pop();\n\t}\n\tpublic currentHandler():ClipboardProxyHandler\n\t{\n\t\treturn Vec.last(this.handlers);\n\t}\n\n\t// call these methods when an external event (e.g. menu/button) triggers a cut/copy/paste event\n\tpublic triggerCopy(andCut:boolean):void\n\t{\n\t\tif (this.currentHandler().copyEvent(andCut, this)) return;\n\t\tdocument.execCommand(andCut ? 'cut' : 'copy');\n\t}\n\tpublic triggerPaste():void\n\t{\n\t\tif (this.currentHandler().pasteEvent(this)) return;\n\t\tdocument.execCommand('paste');\n\t}\n\n\t// fetches the content currently on the clipboard; note that for the web implementation, this is disallowed for\n\t// security reasons, but in desktop mode it is allowed (see canAlwaysGet below)\n\tpublic getString():string {return null;}\n\n\t// places the clipboard content with the indicated string; this is allowed at any time\n\tpublic setString(str:string):void {}\n\tpublic setImage(blob:Blob):void {}\n\n\t// places HTML content onto the clipboard, if available\n\tpublic canSetHTML():boolean {return false;}\n\tpublic setHTML(html:string):void {}\n\n\t// returns true if it is possible to fetch from the clipboard anytime (false when running in a web browser)\n\tpublic canAlwaysGet():boolean {return false;}\n\n\t// instantiate the downloading of a string, with a given default filename\n\tpublic downloadString(str:string, fn:string):void {}\n}\n\n/*\n\tClipboard handler that should be used when the browser is the runtime target, which presents a much more restricted clipboard\n\tuse pattern (for security reasons). The action-trapping actions are installed once for the whole documented, and from that point\n\tthey can either be trapped or allowed to fall back to the default action.\n*/\n\nexport class ClipboardProxyWeb extends ClipboardProxy\n{\n\tprivate lastContent:string = null;\n\tprivate fakeTextArea:HTMLTextAreaElement = null; // for temporarily bogarting the clipboard\n\tprivate busy = false; // need to block trapping during the copy workaround\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tdocument.addEventListener('copy', (event:ClipboardEvent) =>\n\t\t{\n\t\t\tif (this.busy) return null;\n\t\t\tif (this.currentHandler()?.copyEvent(false, this))\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('cut', (event:ClipboardEvent) =>\n\t\t{\n\t\t\tif (this.busy) return null;\n\t\t\tif (this.currentHandler()?.copyEvent(true, this))\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('paste', (event:ClipboardEvent) =>\n\t\t{\n\t\t\t// this is the only time when the clipboard is allowed to be interrogated, so stash the content so the handler can access it\n\t\t\tlet wnd = window as any;\n\t\t\tthis.lastContent = null;\n\t\t\tif (wnd.clipboardData && wnd.clipboardData.getData) this.lastContent = wnd.clipboardData.getData('Text');\n\t\t\telse if (event.clipboardData && event.clipboardData.getData) this.lastContent = event.clipboardData.getData('text/plain');\n\n\t\t\tlet consumed = this.currentHandler()?.pasteEvent(this);\n\n\t\t\tthis.lastContent = null;\n\n\t\t\tif (consumed)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic getString():string\n\t{\n\t\treturn this.lastContent;\n\t}\n\tpublic setString(str:string):void\n\t{\n\t\t// the default method for putting text on the clipboard involves making a fake hidden control, which is real\n\t\t// nasty: if the cleaner approach works, defer to that in preference\n\t\tlet fallbackWorkaround = () =>\n\t\t{\n\t\t\tif (this.fakeTextArea == null)\n\t\t\t{\n\t\t\t\tthis.fakeTextArea = document.createElement('textarea');\n\t\t\t\tthis.fakeTextArea.style.fontSize = '12pt';\n\t\t\t\tthis.fakeTextArea.style.border = '0';\n\t\t\t\tthis.fakeTextArea.style.padding = '0';\n\t\t\t\tthis.fakeTextArea.style.margin = '0';\n\t\t\t\tthis.fakeTextArea.style.position = 'fixed';\n\t\t\t\tthis.fakeTextArea.style['left'] = '-9999px';\n\t\t\t\tthis.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n\t\t\t\tthis.fakeTextArea.setAttribute('readonly', '');\n\t\t\t\tdocument.body.appendChild(this.fakeTextArea);\n\t\t\t}\n\t\t\tthis.fakeTextArea.value = str;\n\t\t\tthis.fakeTextArea.select();\n\n\t\t\t// disable event trapping, then issue the standard copy\n\t\t\tthis.busy = true;\n\t\t\tdocument.execCommand('copy');\n\t\t\tthis.busy = false;\n\t\t};\n\n\t\t// favour the explicit clipboard API, if allowed\n\t\tif (navigator.clipboard)\n\t\t{\n\t\t\tnavigator.clipboard.writeText(str).then(() => {}, fallbackWorkaround);\n\t\t}\n\t\telse fallbackWorkaround();\n\t}\n\tpublic setImage(blob:Blob):void\n\t{\n\t\tlet item = new ClipboardItem({'image/png': blob});\n\t\tthis.busy = true;\n\t\t(async () =>\n\t\t{\n\t\t\tawait navigator.clipboard.write([item]);\n\t\t\tthis.busy = false;\n\t\t})();\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {RenderPolicy} from '../gfx/Rendering';\nimport {colourCanvas} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tBase class for various kinds of \"embedded\" chemistry display objects, such as molecules/reactions/collections. These are intended to be largely\n\tstatic displays that are dynamically manufactured from embedded content, e.g. upgrading a WordPress \"shortcode\" with a molecular structure to\n\ta picture of the molecule.\n*/\n\nexport class EmbedChemistry extends Widget\n{\n\tpublic padding = 4;\n\tpublic borderCol = 0xD0D0D0;\n\tpublic borderRadius = 8; // for rounded rects\n\tpublic backgroundCol1 = 0xFFFFFF;\n\tpublic backgroundCol2 = 0xF0F0F0;\n\tpublic policy:RenderPolicy = RenderPolicy.defaultColourOnWhite();\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t// convenience for setting up backdrop\n\tpublic clearBackground() {this.backgroundCol1 = null; this.backgroundCol2 = null;}\n\tpublic setBackground(bg:number) {this.backgroundCol1 = bg; this.backgroundCol2 = null;}\n\tpublic setBackgroundGradient(bg1:number, bg2:number) {this.backgroundCol1 = bg1; this.backgroundCol2 = bg2;}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tif (this.borderCol != null) content.setCSS('border', '1px solid ' + colourCanvas(this.borderCol));\n\t\tif (this.borderRadius > 0) content.setCSS('border-radius', this.borderRadius + 'px');\n\n\t\tlet bg1 = this.backgroundCol1, bg2 = this.backgroundCol2;\n\t\tif (bg1 != null && bg2 != null)\n\t\t{\n\t\t\tlet cols = colourCanvas(bg1) + ',' + colourCanvas(bg2);\n\t\t\tcontent.setCSS('background-image', 'linear-gradient(to bottom right, ' + cols + ')');\n\t\t}\n\t\telse if (bg1 != null)\n\t\t{\n\t\t\tcontent.setCSS('background-color', colourCanvas(bg1));\n\t\t}\n\n\t\tcontent.css({'padding': this.padding + 'px', 'margin': '0'});\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Aspect} from '../aspect/Aspect';\nimport {AspectList} from '../aspect/AspectList';\nimport {DataSheet, DataSheetColumn} from '../ds/DataSheet';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MDLSDFReader} from '../io/MDLReader';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {DOM, dom} from '../util/dom';\nimport {fromUTF8, htmlToRGB} from '../util/util';\nimport {Vec} from '../util/Vec';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded collection: obtains a datasheet representation and displays it as a group of molecules, primitive datatypes, and/or higher\n\torder datastructures controlled by aspects.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n        format: MIME, or shortcuts for \"datasheet\" or \"sdfile\"\n\t\tencoding: raw by default, but can be set to \"base64\"\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n        padding: number of pixels to space around the content\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n\t\ttight: if true, reduces the padding underneath\n\n    ... these ones TBD\n        source: URL of some kind - grab the data from there (wherever user directory is)\n\n        (parameters to control interactivity?)\n*/\n\ninterface EmbedCollectionColumn\n{\n\tname:string;\n\taspect:Aspect; // null for primitive\n\ttype:string; // if aspect, either 'text' or 'graphic'\n\tidx:number; // primitive: column#; aspect: text/graphic rendering #\n}\n\nexport class EmbedCollection extends EmbedChemistry\n{\n\tprivate ds:DataSheet = null;\n\tprivate failmsg = '';\n\tprivate tight = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private datastr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tif (options.encoding == 'base64') datastr = fromUTF8(atob(datastr.trim()));\n\n\t\tlet ds:DataSheet = null, name:string = options.name;\n\t\tif (options.format == 'datasheet' || options.format == 'chemical/x-datasheet')\n\t\t{\n\t\t\tds = DataSheetStream.readXML(datastr);\n\t\t}\n\t\telse if (options.format == 'sdfile' || options.format == 'chemical/x-mdl-sdfile')\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet mdl = new MDLSDFReader(datastr);\n\t\t\t\tds = mdl.parse();\n\t\t\t}\n\t\t\tcatch (ex) {this.failmsg = ex;}\n\t\t}\n\t\telse // free for all\n\t\t{\n\t\t\ttry {ds = DataSheetStream.readXML(datastr);}\n\t\t\tcatch (ex) {}\n\t\t\tif (ds == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLSDFReader(datastr);\n\t\t\t\t\tds = mdl.parse();\n\t\t\t\t}\n\t\t\t\tcatch (ex) {} // (silent when not forcing a type)\n\t\t\t}\n\t\t}\n\n\t\tif (ds == null) return;\n\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\n\t\tthis.ds = ds;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM, ds = this.ds, policy = this.policy;\n\t\t\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (ds != null)\n\t\t{\n\t\t\tlet aspects = new AspectList(ds).enumerate();\n\t\t\tlet columns:EmbedCollectionColumn[] = this.determineColumns(aspects);\n\n\t\t\tlet table = dom('<table/>').appendTo(span);\n\t\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\t\t\tfor (let n = 0; n < columns.length; n++)\n\t\t\t{\n\t\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\t\tth.css({'white-space': 'nowrap', 'font-weight': '600', 'text-decoration': 'underline', 'text-align': 'center'});\n\t\t\t\tth.css({'padding': '0.2em 0.5em 0.2em 0.5em', 'color': 'black', 'border': '0'});\n\t\t\t\tth.setText(columns[n].name);\n\t\t\t}\n\n\t\t\tfor (let row = 0; row < ds.numRows;)\n\t\t\t{\n\t\t\t\tlet blksz = 1;\n\t\t\t\tfor (let aspect of aspects) blksz = Math.max(blksz, aspect.rowBlockCount(row));\n\n\t\t\t\ttr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\t\t\t\tfor (let col = 0; col < columns.length; col++)\n\t\t\t\t{\n\t\t\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'vertical-align': 'middle'});\n\t\t\t\t\tlet spec = columns[col];\n\t\t\t\t\tif (spec.aspect == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (ds.isNull(row, spec.idx)) td.setText(' ');\n\t\t\t\t\t\telse if (ds.colType(spec.idx) == DataSheetColumn.Molecule) this.renderMolecule(td, row, spec.idx);\n\t\t\t\t\t\telse this.renderPrimitive(td, row, spec.idx);\n\t\t\t\t\t}\n\t\t\t\t\telse if (spec.type == 'text') this.renderTextAspect(td, row, spec.aspect, spec.idx);\n\t\t\t\t\telse if (spec.type == 'graphic') this.renderGraphicAspect(td, row, spec.aspect, spec.idx);\n\t\t\t\t}\n\n\t\t\t\trow += blksz;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Unable to parse datasheet: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span);\n\t\t\tpre.css({'line-height': '1.1'});\n\t\t\tpre.setText(this.datastr);\n\t\t\tconsole.log('Unparseable datasheet source string:\\n[' + this.datastr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assemble list of columns to use for the actual table: for a plain datasheet this is basically the sheet's own structure;\n\t// when aspects are involved, these can be switched out for dynamically produced text & graphics\n\tprivate determineColumns(aspects:Aspect[]):EmbedCollectionColumn[]\n\t{\n\t\tlet ds = this.ds;\n\t\tlet columns:EmbedCollectionColumn[] = [];\n\n\t\tlet reserved = Vec.booleanArray(false, ds.numCols);\n\t\tlet names:string[] = [];\n\t\tfor (let n = 0; n < ds.numCols; n++) names.push(ds.colName(n));\n\n\t\tfor (let aspect of aspects)\n\t\t{\n\t\t\t// NOTE: fetching of titles is very inefficient; redesign aspect, or cache row 0 for later use\n\t\t\tif (ds.numRows > 0) for (let n = 0, num = aspect.numTextRenderings(0); n < num; n++)\n\t\t\t{\n\t\t\t\tlet title = aspect.produceTextRendering(0, n).name;\n\t\t\t\tcolumns.push({'name': title, 'aspect': aspect, 'type': 'text', 'idx': n});\n\t\t\t}\n\t\t\tif (ds.numRows > 0) for (let n = 0, num = aspect.numGraphicRenderings(0); n < num; n++)\n\t\t\t{\n\t\t\t\tlet title = aspect.produceGraphicRendering(0, n, this.policy).name;\n\t\t\t\tcolumns.push({'name': title, 'aspect': aspect, 'type': 'graphic', 'idx': n});\n\t\t\t}\n\n\t\t\tlet claimed = aspect.areColumnsReserved(names);\n\t\t\tfor (let n = 0; n < names.length; n++) reserved[n] = reserved[n] || claimed[n];\n\t\t}\n\n\t\tfor (let n = 0; n < ds.numCols; n++) if (!reserved[n] && ds.colType(n) != DataSheetColumn.Extend)\n\t\t{\n\t\t\tcolumns.push({'name': ds.colName(n), 'aspect': null, 'type': null, 'idx': n});\n\t\t}\n\n\t\t// TODO: reordering based on occurrence in natural order? right now aspects all go first; collect up a parallel\n\t\t// 'pri' array which is col# for primitives, and first occurrence in column name list for aspects; use to sort\n\n\t\treturn columns;\n\t}\n\n\t// rendering specifics for individual cells\n\tprivate renderPrimitive(td:DOM, row:number, col:number):void\n\t{\n\t\tlet txt = '', ct = this.ds.colType(col), align = 'center';\n\t\tif (ct == DataSheetColumn.String) {txt = this.ds.getString(row, col); align = 'left';}\n\t\telse if (ct == DataSheetColumn.Integer) txt = this.ds.getInteger(row, col).toString();\n\t\telse if (ct == DataSheetColumn.Real) txt = this.ds.getReal(row, col).toString();\n\t\telse if (ct == DataSheetColumn.Boolean) txt = this.ds.getBoolean(row, col) ? 'true' : 'false';\n\t\ttd.setText(txt);\n\t\ttd.css({'text-align': align});\n\t}\n\tprivate renderMolecule(td:DOM, row:number, col:number):void\n\t{\n\t\ttd.css({'text-align': 'center'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeMolecule(this.ds.getMolecule(row, col), measure, this.policy, effects);\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawMolecule(layout, metavec).draw();\n\t\tmetavec.normalise();\n\t\tdom(metavec.createSVG()).appendTo(td);\n\t}\n\tprivate renderTextAspect(td:DOM, row:number, aspect:Aspect, idx:number):void\n\t{\n\t\tlet rend = aspect.produceTextRendering(row, idx);\n\t\tif (!rend.text) td.setText(' ');\n\t\telse if (rend.type == Aspect.TEXT_PLAIN) td.setText(rend.text);\n\t\telse if (rend.type == Aspect.TEXT_LINK)\n\t\t{\n\t\t\tlet ahref = dom('<a target=\"_blank\"/>').appendTo(td);\n\t\t\tahref.setAttr('href', rend.text);\n\t\t\tahref.setText(rend.text);\n\t\t}\n\t\telse if (rend.type == Aspect.TEXT_HTML) td.setHTML(rend.text);\n\t}\n\tprivate renderGraphicAspect(td:DOM, row:number, aspect:Aspect, idx:number):void\n\t{\n\t\tlet metavec = aspect.produceGraphicRendering(row, idx, this.policy).metavec;\n\t\tif (metavec == null) {td.setText(' '); return;}\n\n\t\ttd.css({'text-align': 'center'});\n\t\tmetavec.normalise();\n\t\tdom(metavec.createSVG()).appendTo(td);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {CoordUtil} from '../mol/CoordUtil';\nimport {MDLMOLReader} from '../io/MDLReader';\nimport {Molecule} from '../mol/Molecule';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {dom} from '../util/dom';\nimport {Size} from '../util/Geom';\nimport {DEGRAD, htmlToRGB} from '../util/util';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded molecule: displays a single molecular structure, with a variety of available rendering options. The structure display is static\n\tand read-only, but it can be extracted in data format. It is rendered as SVG, so that it looks good when rendered for print quality.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n        format: MIME, or shortcuts for \"molfile\" or \"sketchel\"\n        name: null/default = if molfile pull it out and display; blank = show nothing; text = show that\n        invert: boolean; inverts the coordinates (applied before rotation)\n        rotate: degrees to rotate molecule\n        padding: number of pixels to space around the molecule\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n        width, height: optional, either one (used as a maximum)\n        box: specific size to stick with (comma-separated)\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n\t\ttight: if true, reduces the padding underneath\n\n    ... these ones TBD\n        source: URL of some kind - grab the data from there (wherever user directory is)\n\n        (parameters to control interactivity?)\n*/\n\nexport class EmbedMolecule extends EmbedChemistry\n{\n\tprivate mol:Molecule = null;\n\tprivate name = '';\n\tprivate failmsg = '';\n\tprivate maxWidth = 0;\n\tprivate maxHeight = 0;\n\tprivate boxSize:Size = null;\n\tprivate tight = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private molstr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tlet mol:Molecule = null, name:string = options.name;\n\t\tif (options.format == 'sketchel' || options.format == 'chemical/x-sketchel')\n\t\t{\n\t\t\tmol = Molecule.fromString(molstr);\n\t\t}\n\t\telse if (options.format == 'molfile' || options.format == 'chemical/x-mdl-molfile')\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\tmol = mdl.parse();\n\t\t\t\tif (mol != null && name == null) name = mdl.molName;\n\t\t\t}\n\t\t\tcatch (ex) {this.failmsg = ex;}\n\t\t}\n\t\telse // free for all\n\t\t{\n\t\t\tmol = Molecule.fromString(molstr);\n\t\t\tif (mol == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet mdl = new MDLMOLReader(molstr);\n\t\t\t\t\tmol = mdl.parse();\n\t\t\t\t\tif (mol != null && name == null) name = mdl.molName;\n\t\t\t\t}\n\t\t\t\tcatch (ex) {} // (silent when not forcing a type)\n\t\t\t}\n\t\t}\n\n\t\tif (mol == null) return;\n\n\t\tif (options.invert) mol = CoordUtil.mirrorImage(mol);\n\t\tif (options.rotate) CoordUtil.rotateMolecule(mol, options.rotate * DEGRAD);\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.width) this.maxWidth = options.width;\n\t\tif (options.height) this.maxHeight = options.height;\n\t\tif (options.box)\n\t\t{\n\t\t\tlet box:string = options.box, comma = box.indexOf(',');\n\t\t\tthis.boxSize = new Size(parseInt(box.substring(0, comma)), parseInt(box.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\n\t\tthis.mol = mol;\n\t\tthis.name = name;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM, mol = this.mol, policy = this.policy;\n\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (mol != null && mol.numAtoms > 0)\n\t\t{\n\t\t\tspan.setCSS('text-align', 'center');\n\n\t\t\tlet effects = new RenderEffects();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(mol, measure, policy, effects);\n\t\t\tlayout.arrange();\n\n\t\t\tif (this.boxSize) layout.squeezeInto(0, 0, this.boxSize.w, this.boxSize.h);\n\t\t\telse if (this.maxWidth > 0 || this.maxHeight > 0)\n\t\t\t{\n\t\t\t\tlet bounds = layout.determineBoundary();\n\t\t\t\tlet w = bounds[2] - bounds[0], h = bounds[3] - bounds[1];\n\t\t\t\tlet limW = this.maxWidth == 0 ? w : Math.min(w, this.maxWidth);\n\t\t\t\tlet limH = this.maxHeight == 0 ? h : Math.min(h, this.maxHeight);\n\t\t\t\tif (limW != w || limH != h) layout.squeezeInto(0, 0, limW, limH);\n\t\t\t}\n\n\t\t\tlet metavec = new MetaVector();\n\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\tif (this.boxSize == null)\n\t\t\t\tmetavec.normalise();\n\t\t\telse\n\t\t\t\tmetavec.setSize(this.boxSize.w, this.boxSize.h);\n\n\t\t\tlet svg = dom(metavec.createSVG()).appendTo(span);\n\n\t\t\tif (this.name)\n\t\t\t{\n\t\t\t\tlet p = dom('<p/>').appendTo(span);\n\t\t\t\tp.css({'padding': '0.2em 0 0 0', 'margin': '0', 'width': '100%', 'color': '#606060', 'line-height': '1'});\n\t\t\t\tp.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\t\t\tp.setText(this.name);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Unable to parse molecule: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span);\n\t\t\tpre.css({'line-height': '1.1'});\n\t\t\tpre.setText(this.molstr);\n\t\t\tconsole.log('Unparseable molecule source string:\\n[' + this.molstr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Experiment, ExperimentEntry} from '../aspect/Experiment';\nimport {DataSheetStream} from '../io/DataSheetStream';\nimport {MolUtil} from '../mol/MolUtil';\nimport {QuantityCalc, QuantityCalcComp, QuantityCalcStat} from '../rxn/QuantityCalc';\nimport {ArrangeExperiment} from '../gfx/ArrangeExperiment';\nimport {OutlineMeasurement} from '../gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from '../gfx/ArrangeMolecule';\nimport {DrawExperiment} from '../gfx/DrawExperiment';\nimport {DrawMolecule} from '../gfx/DrawMolecule';\nimport {MetaVector, TextAlign} from '../gfx/MetaVector';\nimport {RenderEffects, RenderPolicy} from '../gfx/Rendering';\nimport {DOM, dom} from '../util/dom';\nimport {escapeHTML, formatDouble, fromUTF8, htmlToRGB} from '../util/util';\nimport {EmbedChemistry} from './EmbedChemistry';\n\n/*\n\tEmbedded reaction: renders a single reaction Experiment entry (can be multistep). Various formats are acceptable, but only one\n\treaction is applicable; a datasheet with many reactions will only show the first one.\n\n\tThe rendering parameters are quite raw, and presumed to be passed from an un-typed source, directly from the user:\n\n\t\tformat: MIME, or shortcuts for \"datasheet\" (... and others?)\n\t\tencoding: raw by default, but can be set to \"base64\"\n\t\tfacet: one of 'header', 'scheme', 'quantity' or 'metrics' (default is 'scheme')\n        scheme: molecule colouring schema (wob/cob/bow/cow)\n        scale: points per angstrom\n        padding: number of pixels to space around the content\n\t\tborder: border colour, HTML-style colour code or 'transparent' for none\n\t\tradius: zero for square, higher for rounder corners\n        background: 'transparent' for none; HTML-style for solid; for a gradient, specify as 'col1,col2'\n\t\ttight: if true, reduces the padding underneath\n\t\tstoichiometry: if false, doesn't display non-unit stoichiometry\n\t\tannotations: if true, adds annotations for component types\n\t\tmaximumwidth: optionally constrain the width in pixels (guideline only)\n\t\trow: row of first step (default 0)\n\n    ... these ones TBD\n\t\t(option to limitW/H?)\n\n        (parameters to control interactivity?)\n*/\n\nexport enum EmbedReactionFacet\n{\n\tHEADER = 'header',\n\tSCHEME = 'scheme',\n\tQUANTITY = 'quantity',\n\tMETRICS = 'metrics'\n}\n\nexport class EmbedReaction extends EmbedChemistry\n{\n\tprivate row = 0;\n\tprivate entry:ExperimentEntry = null;\n\tprivate failmsg = '';\n\tprivate tight = false;\n\tprivate facet = 'scheme';\n\tprivate limitTotalW = 800;\n\tprivate includeStoich = true;\n\tprivate includeAnnot = false;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private datastr:string, options?:any)\n\t{\n\t\tsuper();\n\n\t\tif (!options) options = {};\n\n\t\tif (options.encoding == 'base64') datastr = fromUTF8(atob(datastr.trim()));\n\n\t\tlet xs:Experiment = null;\n\t\tif (options.format == 'datasheet' || options.format == 'chemical/x-datasheet')\n\t\t{\n\t\t\tlet ds = DataSheetStream.readXML(datastr);\n\t\t\tif (ds == null) {this.failmsg = 'Unable to parse raw XML datasheet.'; return;}\n\t\t\tif (Experiment.isExperiment(ds)) xs = new Experiment(ds);\n\t\t}\n\t\t// (... else MDL formats ...)\n\t\telse // free for all\n\t\t{\n\t\t\t// (same as explicit DS for now: but later add MDL formats)\n\t\t\tlet ds = DataSheetStream.readXML(datastr);\n\t\t\tif (ds == null) {this.failmsg = 'Unable to parse raw XML datasheet.'; return;}\n\t\t\tif (Experiment.isExperiment(ds)) xs = new Experiment(ds);\n\t\t}\n\n\t\tif (xs == null) {this.failmsg = 'Unable to instantiate Experiment aspect.'; return;}\n\t\tif (xs.ds.numRows == 0) {this.failmsg = 'Experiment datasheet has no rows.'; return;}\n\n\t\tif (options.row) this.row = options.row;\n\t\tif (this.row < 0 || this.row >= xs.ds.numRows) {this.failmsg = 'Requested row ' + this.row + ' out of bounds.'; return;}\n\t\tthis.entry = xs.getEntry(this.row);\n\n\t\tif (options.facet) this.facet = options.facet;\n\n\t\tif (options.padding) this.padding = options.padding;\n\n\t\tif (options.background == 'transparent') this.clearBackground();\n\t\telse if (options.background)\n\t\t{\n\t\t\tlet bg:string = options.background, comma = bg.indexOf(',');\n\t\t\tif (comma < 0)\n\t\t\t\tthis.setBackground(htmlToRGB(bg));\n\t\t\telse\n\t\t\t\tthis.setBackgroundGradient(htmlToRGB(bg.substring(0, comma)), htmlToRGB(bg.substring(comma + 1)));\n\t\t}\n\n\t\tif (options.border == 'transparent') this.borderCol = MetaVector.NOCOLOUR;\n\t\telse if (options.border) this.borderCol = htmlToRGB(options.border);\n\n\t\tif (options.radius != null) this.borderRadius = parseInt(options.radius);\n\n\t\tif (options.scheme == 'wob') this.policy = RenderPolicy.defaultWhiteOnBlack();\n\t\telse if (options.scheme == 'cob') this.policy = RenderPolicy.defaultColourOnBlack();\n\t\telse if (options.scheme == 'bow') this.policy = RenderPolicy.defaultBlackOnWhite();\n\t\telse if (options.scheme == 'cow') this.policy = RenderPolicy.defaultColourOnWhite();\n\n\t\tif (options.scale) this.policy.data.pointScale = options.scale;\n\n\t\tif (options.tight == true || options.tight == 'true') this.tight = true;\n\t\tif (options.maximumwidth > 0) this.limitTotalW = options.maximumwidth;\n\t\tif (options.stoichiometry == false || options.stoichiometry == 'false') this.includeStoich = true;\n\t\tif (options.annotations == true || options.annotations == 'true') this.includeAnnot = true;\n\t}\n\n\t// create the objects necessary to render the widget; this function should be called after basic pre-initialisation settings, e.g.\n\t// specifying the starting molecule, initial size, etc.\n\tpublic render(parent:any):void\n\t{\n\t\tthis.tagType = 'span';\n\t\tsuper.render(parent);\n\n\t\tlet span = this.contentDOM;\n\t\tspan.css({'display': 'inline-block', 'line-height': '0'});\n\t\tif (!this.tight) span.setCSS('margin-bottom', '1.5em');\n\n\t\tif (this.entry != null)\n\t\t{\n\t\t\tif (this.facet == EmbedReactionFacet.HEADER) this.renderHeader(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.SCHEME) this.renderScheme(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.QUANTITY) this.renderQuantity(span);\n\t\t\telse if (this.facet == EmbedReactionFacet.METRICS) this.renderMetrics(span);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tspan.css({'color': 'red'});\n\t\t\tspan.setText('Failure to acquire data: ' + this.failmsg);\n\t\t\tlet pre = dom('<pre/>').appendTo(span).css({'line-height': '1.1'});\n\t\t\tpre.setText(this.datastr);\n\t\t\tconsole.log('Unparseable datasheet source string:\\n[' + this.datastr + ']');\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\t// display summary information from the header\n\tprivate renderHeader(span:DOM):void\n\t{\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet titles = ['Title', 'Created', 'Modified', 'DOI'];\n\t\tfor (let n = 0; n < 4; n++)\n\t\t{\n\t\t\tif (n == 3 && !this.entry.doi) continue;\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\tth.css({'white-space': 'nowrap', 'font-weight': '600', 'color': 'black', 'text-align': 'left', 'vertical-align': 'middle'});\n\t\t\tth.css({'padding': '0.2em 0.5em 0.2em 0.5em', 'border': '1px solid #D0D0D0'});\n\t\t\tth.setText(titles[n]);\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'vertical-align': 'middle'});\n\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\tif (!this.entry.title) td.setCSS('font-style', 'italic');\n\t\t\t\ttd.setText(this.entry.title ? this.entry.title : '(none)');\n\t\t\t}\n\t\t\telse if (n == 1 || n == 2)\n\t\t\t{\n\t\t\t\tlet date = n == 1 ? this.entry.createDate : this.entry.modifyDate;\n\t\t\t\tif (date == null) td.setCSS('font-style', 'italic');\n\t\t\t\ttd.setText(date == null ? '(none)' : date.toLocaleString());\n\t\t\t}\n\t\t\telse if (n == 3)\n\t\t\t{\n\t\t\t\tlet url = this.doiToLink(this.entry.doi);\n\n\t\t\t\tif (url != null && (url.startsWith('http://') || url.startsWith('https://')))\n\t\t\t\t{\n\t\t\t\t\tlet ahref = dom('<a target=\"_blank\"/>').appendTo(td);\n\t\t\t\t\tahref.setAttr('href', url);\n\t\t\t\t\tahref.setText(this.entry.doi);\n\t\t\t\t}\n\t\t\t\telse td.setText(this.entry.doi);\n\t\t\t}\n\t\t}\n\t}\n\n\t// render the schema, using preferred chemist-style diagram\n\tprivate renderScheme(span:DOM):void\n\t{\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeExperiment(this.entry, measure, this.policy);\n\t\tlayout.limitTotalW = this.limitTotalW;\n\t\tlayout.includeStoich = this.includeStoich;\n\t\tlayout.includeAnnot = this.includeAnnot;\n\n\t\tlayout.arrange();\n\n\t\tlet metavec = new MetaVector();\n\t\tnew DrawExperiment(layout, metavec).draw();\n\t\tmetavec.normalise();\n\t\tlet svg = dom(metavec.createSVG()).appendTo(span);\n\t}\n\n\t// render all the quantities by listing out each component in a table\n\tprivate renderQuantity(span:DOM):void\n\t{\n\t\tlet quant = new QuantityCalc(this.entry);\n\t\tquant.calculate();\n\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\tfor (let n = 0; n < quant.numQuantities; n++)\n\t\t{\n\t\t\tlet qc = quant.getQuantity(n);\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'center', 'vertical-align': 'middle'});\n\t\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t\t{\n\t\t\t\tlet layout = new ArrangeMolecule(qc.comp.mol, measure, this.policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tlet metavec = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t\tmetavec.normalise();\n\t\t\t\tlet svg = dom(metavec.createSVG()).appendTo(td);\n\t\t\t}\n\n\t\t\ttd = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'left', 'vertical-align': 'top'});\n\n\t\t\tthis.renderComponentText(td, qc);\n\t\t}\n\t}\n\n\t// renders lines representing the component's text-like properties\n\tprivate renderComponentText(parent:DOM, qc:QuantityCalcComp)\n\t{\n\t\tlet title:string[] = [], content:string[] = [];\n\n\t\tif (qc.comp.name)\n\t\t{\n\t\t\ttitle.push('Name');\n\t\t\tcontent.push('<i>' + escapeHTML(qc.comp.name) + '</i>');\n\t\t}\n\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t{\n\t\t\tlet mw = MolUtil.molecularWeight(qc.comp.mol);\n\t\t\ttitle.push('Weight');\n\t\t\tcontent.push(mw.toFixed(4));\n\n\t\t\tlet mf = MolUtil.molecularFormula(qc.comp.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n\t\t\ttitle.push('Formula');\n\t\t\tcontent.push(mf);\n\t\t}\n\t\tif (qc.valueEquiv > 0)\n\t\t{\n\t\t\tlet text = qc.valueEquiv.toString(), stat = qc.statEquiv;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Stoichiometry');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueMass > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatMass(qc.valueMass), stat = qc.statMass;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Mass');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueVolume > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatVolume(qc.valueVolume), stat = qc.statVolume;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Volume');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueMoles > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatMoles(qc.valueMoles), stat = qc.statMoles;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Moles');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueDensity > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatDensity(qc.valueDensity), stat = qc.statDensity;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Density');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueConc > 0)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatConc(qc.valueConc), stat = qc.statConc;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Concentration');\n\t\t\tcontent.push(text);\n\t\t}\n\t\tif (qc.valueYield > 0 && !qc.comp.waste)\n\t\t{\n\t\t\tlet text = QuantityCalc.formatPercent(qc.valueYield), stat = qc.statYield;\n\t\t\tif (stat == QuantityCalcStat.Virtual) text = '<i>(' + text + ')</i>';\n\t\t\telse if (stat == QuantityCalcStat.Conflict) text += ' (conflicting)';\n\t\t\ttitle.push('Yield');\n\t\t\tcontent.push(text);\n\t\t}\n\n\t\tfor (let n = 0; n < title.length; n++)\n\t\t{\n\t\t\tlet p = dom('<p/>').appendTo(parent);\n\t\t\tp.setCSS('margin', '0.1em');\n\t\t\tp.append(dom('<b>' + title[n] + '</b>'));\n\t\t\tp.appendText(': ');\n\t\t\tp.appendHTML(content[n]);\n\t\t}\n\t}\n\n\t// display calculated green chemistry metrics\n\tprivate renderMetrics(span:DOM):void\n\t{\n\t\tlet quant = new QuantityCalc(this.entry);\n\t\tquant.calculate();\n\n\t\tlet table = dom('<table/>').appendTo(span);\n\t\ttable.css({'font-family': '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif'});\n\t\ttable.css({'border-collapse': 'collapse', 'line-height': '1', 'margin': '2px', 'border': '0'});\n\n\t\tlet effects = new RenderEffects();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\t// display overall summary totals\n\t\tif (quant.numGreenMetrics > 0) for (let n = 0; n < 3; n++)\n\t\t{\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet th = dom('<th/>').appendTo(tr);\n\t\t\tth.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'font-weight': 'bold'});\n\t\t\tth.css({'text-align': 'right', 'vertical-align': 'middle', 'white-space': 'nowrap'});\n\t\t\tth.setText(n == 0 ? 'All Reactants' : n == 1 ? 'All Products' : /* n == 2 */ 'All Waste');\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'white-space': 'nowrap'});\n\t\t\ttd.css({'text-align': 'left', 'vertical-align': 'middle'});\n\t\t\tif (n == 0)\n\t\t\t{\n\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassReact(), 'g') + ' = ' + this.sumQuant(quant.getAllMassReact(), 'g', true));\n\t\t\t}\n\t\t\telse if (n == 1)\n\t\t\t{\n\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassProd(), 'g') + ' = ' + this.sumQuant(quant.getAllMassProd(), 'g', true));\n\t\t\t}\n\t\t\telse if (n == 2)\n\t\t\t{\n\t\t\t\tif (quant.getAllMassWaste().length > 0)\n\t\t\t\t\ttd.setText(this.combineQuant(quant.getAllMassWaste(), 'g') + ' = ' + this.sumQuant(quant.getAllMassWaste(), 'g', false));\n\t\t\t\telse\n\t\t\t\t\ttd.setText('none');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tr = dom('<tr/>').appendTo(table);\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.setText('No metrics to show.');\n\t\t}\n\n\t\t// show each relevant entity (i.e. products)\n\t\tfor (let n = 0; n < quant.numGreenMetrics; n++)\n\t\t{\n\t\t\tlet gm = quant.getGreenMetrics(n);\n\t\t\tlet qc = quant.getQuantity(gm.idx);\n\n\t\t\tlet tr = dom('<tr/>').appendTo(table).css({'line-height': '1'});\n\n\t\t\tlet td = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.2em', 'text-align': 'center', 'vertical-align': 'middle'});\n\t\t\tif (MolUtil.notBlank(qc.comp.mol))\n\t\t\t{\n\t\t\t\tlet layout = new ArrangeMolecule(qc.comp.mol, measure, this.policy, effects);\n\t\t\t\tlayout.arrange();\n\n\t\t\t\tlet metavec = new MetaVector();\n\t\t\t\tnew DrawMolecule(layout, metavec).draw();\n\t\t\t\tmetavec.normalise();\n\t\t\t\tdom(metavec.createSVG()).appendTo(td);\n\t\t\t}\n\n\t\t\ttd = dom('<td/>').appendTo(tr);\n\t\t\ttd.css({'border': '1px solid #D0D0D0', 'padding': '0.5em', 'text-align': 'left', 'vertical-align': 'top'});\n\n\t\t\tlet pmi1 = this.combineQuant(gm.massReact, 'g'), pmi2 = this.combineQuant(gm.massProd, 'g');\n\t\t\tlet pmi3 = this.sumQuantExt(gm.massReact, gm.massProd, 1, Number.NaN, null);\n\t\t\tlet vg = this.drawTotals('PMI', pmi1, pmi2, pmi3);\n\t\t\tvg.normalise();\n\t\t\tlet para = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\n\t\t\tlet ef1 = this.combineQuant(gm.massWaste, 'g'), ef2 = this.combineQuant(gm.massProd, 'g');\n\t\t\tlet ef3 = this.sumQuantExt(gm.massWaste, gm.massProd, 1, Number.NaN, null);\n\t\t\tvg = this.drawTotals('E-factor', ef1, ef2, ef3);\n\t\t\tvg.normalise();\n\t\t\tpara = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\n\t\t\tlet ae1 = this.combineQuant(gm.molwProd, null), ae2 = this.combineQuant(gm.molwReact, null);\n\t\t\tlet ae3 = this.sumQuantExt(gm.molwProd, gm.molwReact, 100, 100, '%');\n\t\t\tvg = this.drawTotals('Atom-E', ae1, ae2, ae3);\n\t\t\tvg.normalise();\n\t\t\tpara = dom('<p/>').appendTo(td);\n\t\t\tdom(vg.createSVG()).appendTo(para);\n\t\t}\n\t}\n\n\t// strings together a bunch of values with a separator & units\n\tprivate combineQuant(values:number[], units:string):string\n\t{\n\t\tif (values.length == 0) return '?';\n\n\t\tlet str = '';\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tif (n > 0) str += ' + ';\n\t\t\tif (values[n] == QuantityCalc.UNSPECIFIED)\n\t\t\t{\n\t\t\t\tstr += '?';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr += formatDouble(values[n], 4);\n\t\t\t\tif (units) str += ' ' + units;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\t// sums a bunch of values, with optional units\n\tprivate sumQuant(values:number[], units:string, requireSomething:boolean):string\n\t{\n\t\tif (values.length == 0) return requireSomething ? '?' : '0';\n\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tif (values[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum += values[n];\n\t\t}\n\t\tlet ret = formatDouble(sum, 4);\n\t\tif (units) ret += ' ' + units;\n\t\treturn ret;\n\t}\n\tprivate sumQuantExt(numer:number[], denom:number[], mul:number, max:number, units:string):string\n\t{\n\t\tif (numer.length == 0 || denom.length == 0) return '?';\n\t\tlet sum1 = 0, sum2 = 0;\n\t\tfor (let n = 0; n < numer.length; n++)\n\t\t{\n\t\t\tif (numer[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum1 += numer[n];\n\t\t}\n\t\tfor (let n = 0; n < denom.length; n++)\n\t\t{\n\t\t\tif (denom[n] == QuantityCalc.UNSPECIFIED) return '?';\n\t\t\tsum2 += denom[n];\n\t\t}\n\t\tif (sum2 <= 0) return '?';\n\t\tlet val = mul * sum1 / sum2;\n\t\tif (!Number.isNaN(max)) val = Math.min(val, max);\n\n\t\tlet ret = formatDouble(val, 4);\n\t\tif (units) ret += ' ' + units;\n\t\treturn ret;\n\t}\n\n\t// renders green metrics as a formula\n\tprivate drawTotals(heading:string, over:string, under:string, answer:string):MetaVector\n\t{\n\t\tlet vg = new MetaVector();\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\n\t\tlet sep = ' = ';\n\t\tlet fsz = this.policy.data.pointScale * 0.8;\n\t\tlet wadHeading = measure.measureText(heading, fsz);\n\t\tlet wadOver = measure.measureText(over, fsz), wadUnder = measure.measureText(under, fsz);\n\t\tlet wadAnswer = measure.measureText(answer, fsz);\n\t\tlet wadSep = measure.measureText(sep, fsz);\n\n\t\tlet x = 0;\n\t\tvg.drawText(x, 0, heading, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadHeading[0];\n\t\tvg.drawText(x, 0, sep, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadSep[0];\n\n\t\tvg.drawText(x, 0, answer, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadAnswer[0];\n\t\tvg.drawText(x, 0, sep, fsz, 0x000000, TextAlign.Left | TextAlign.Middle);\n\t\tx += wadSep[0];\n\n\t\tlet lw = Math.max(wadOver[0], wadUnder[0]);\n\t\tvg.drawLine(x, 0, x + lw, 0, 0x000000, 1);\n\t\tvg.drawText(x + 0.5 * lw, -2, over, fsz, 0x000000, TextAlign.Centre | TextAlign.Bottom);\n\t\tvg.drawText(x + 0.5 * lw, 2, under, fsz, 0x000000, TextAlign.Centre | TextAlign.Top);\n\t\t//x += lw;\n\n\t\treturn vg;\n\t}\n\n\t// turns a DOI (or whatever got stuffed into the placeholder) into a clickable link, if possible\n\tprivate static PTN_DOI1 = /^doi:(\\d+\\.\\d+\\/.*)$/;\n\tprivate static PTN_DOI2 = /^(\\d+\\.\\d+\\/.*)$/;\n\tprivate static PTN_ISBN = /^(\\d+-\\d+-\\d+-\\d+-\\d+)$/;\n\tprivate doiToLink(doi:string):string\n\t{\n\t\tif (doi.startsWith('http://') || doi.startsWith('https://')) return doi;\n\n\t\tlet m = EmbedReaction.PTN_DOI1.exec(doi);\n\t\tif (m) return 'http://dx.doi.org/' + m[1];\n\t\tm = EmbedReaction.PTN_DOI2.exec(doi);\n\t\tif (m) return 'http://dx.doi.org/' + m[1];\n\n\t\t// note: there doesn't seem to be a way to turn an ISBN into a URL, which is rather unfortunate\n\t\tm = EmbedReaction.PTN_ISBN.exec(doi);\n\t\tif (m) return 'ISBN: ' + m[1];\n\n\t\treturn null; // fail\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom} from '../util/dom';\nimport {eventCoords, setBoundaryPixels} from '../util/util';\nimport {Popup} from './Popup';\n\n/*\n\tProxy functionality for menus, particularly the context menu.\n*/\n\nexport interface MenuProxyContext\n{\n\tlabel:string;\n\tclick?:() => void;\n\tsubMenu?:MenuProxyContext[];\n\taccelerator?:string;\n}\n\nexport interface MenuProxyOptions\n{\n\tcallbackClose?:() => void;\n\toverrideObscureOpacity?:number;\n}\n\nexport class MenuProxy\n{\n\t// override this with true when the context menu is available\n\tpublic hasContextMenu():boolean {return false;}\n\tpublic openContextMenu(menuItems:MenuProxyContext[], event:MouseEvent, opt?:MenuProxyOptions):void {}\n}\n\n/*\n\tContext menu handler that is compatible with a vanilla web page. It is similar but not identical to the system context\n\tmenu, which is the preferred option for Electron-based apps.\n*/\n\nexport class MenuProxyWeb extends MenuProxy\n{\n\tpublic hasContextMenu():boolean {return true;}\n\tpublic openContextMenu(menuItems:MenuProxyContext[], event:MouseEvent, opt?:MenuProxyOptions):void\n\t{\n\t\tlet [x, y] = eventCoords(event, document.body);\n\t\t//let x = event.screenX, y = event.screenY;\n\t\tlet divCursor = dom('<div/>').appendTo(document.body).css({'position': 'absolute', 'user-select': 'none'});\n\t\tsetBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n\t\tlet currentFocus = dom(document.activeElement);\n\t\tlet popup = new Popup(divCursor);\n\t\tif (opt?.overrideObscureOpacity != null) popup.obscureOpacity = opt?.overrideObscureOpacity;\n \t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tpopup.bodyDOM().css({'user-select': 'none', 'font-size': '16px'});\n\t\t\tfor (let menuItem of menuItems)\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(popup.bodyDOM());\n\t\t\t\tif (menuItem == null)\n\t\t\t\t{\n\t\t\t\t\tdiv.appendHTML('<hr/>');\n\t\t\t\t}\n\t\t\t\telse if (menuItem.subMenu)\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(menuItem.label + ' \\u{25B8}');\n\t\t\t\t\tdiv.css({'cursor': 'pointer'});\n\t\t\t\t\tlet fcn = (event:MouseEvent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tpopup.close();\n\t\t\t\t\t\tthis.openContextMenu(menuItem.subMenu, event);\n\t\t\t\t\t};\n\t\t\t\t\tdiv.onClick(fcn);\n\t\t\t\t\tdiv.onContextMenu(fcn);\n\t\t\t\t}\n\t\t\t\telse if (menuItem.click)\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(menuItem.label);\n\t\t\t\t\tdiv.onMouseEnter(() => {div.css({'background-color': '#D0D0D0'});});\n\t\t\t\t\tdiv.onMouseLeave(() => {div.css({'background-color': 'transparent'});});\n\t\t\t\t\tdiv.css({'cursor': 'pointer'});\n\t\t\t\t\tdiv.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tpopup.close();\n\t\t\t\t\t\tmenuItem.click();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.css({'color': '#808080'});\n\t\t\t\t\tdiv.setText(menuItem.label);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tpopup.callbackClose = () =>\n\t\t{\n\t\t\tdivCursor.remove();\n\t\t\tcurrentFocus.grabFocus();\n\t\t\tif (opt?.callbackClose) opt?.callbackClose();\n\t\t};\n\t\tpopup.open();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {hasInlineCSS, installInlineCSS, Theme} from '../util/Theme';\nimport {colourCode} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tOptionList: a replacement for the ghetto native HTML radio buttons. Can be used in either horizontal or vertical mode. Rendering\n\tstyle looks like several custom buttons that are joined together, and the current one is highlighted and unclickable. For\n\tvertical mode, slots are reserved so that text can be added to the right each option.\n\n\tNote that there is always one index selected. It is\n\n\tContent:\n\t\t.options: array of strings for use as labels\n\t\t.isVertical: boolean (default: false)\n\t\t.selidx: selected option (0 .. options.length-1)\n\t\t.buttonDiv1, .buttonDiv2: arrays of DOM elements, one for each option\n\t\t.auxCell: vertical only; a list of <td> DOM elements for optional associated content\n*/\n\nexport class OptionList extends Widget\n{\n\tpublic padding = 6; // pixels\n\tpublic htmlLabels = false; // switch this on if the labels are HTML rather than text\n\tpublic numCols = 0; // optional: if 0, everything is on one line\n\n\tprivate selidx = 0;\n\tprivate buttonDiv:DOM[] = [];\n\tprivate auxCell:DOM[] = [];\n\n\tpublic callbackSelect:(idx:number, source?:OptionList) => void = null;\n\n\tconstructor(public options:string[], private isVertical:boolean = false)\n\t{\n\t\tsuper();\n\t\tif (options.length == 0) throw 'molsync.ui.OptionList: must provide a list of option labels.';\n\n\t\tif (!hasInlineCSS('option')) installInlineCSS('option', this.composeCSS());\n\t}\n\n\t// control over selected index\n\tpublic getSelectedIndex():number\n\t{\n\t\treturn this.selidx;\n\t}\n\tpublic getSelectedValue():string\n\t{\n\t\treturn this.options[this.selidx];\n\t}\n\n\t// requests an \"auxiliary cell\" for a vertical control, into which additional information may be placed\n\tpublic getAuxiliaryCell(idx:number):Element\n\t{\n\t\treturn this.auxCell[idx].el;\n\t}\n\n\t// provide the change of state handler\n\tpublic onSelect(callback:(idx:number, source?:OptionList) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.contentDOM.css({'display': 'block', 'baseline-shift': '1.5em'});\n\n\t\tthis.buttonDiv = [];\n\t\tthis.auxCell = [];\n\n\t\tlet table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n\t\tlet tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n\n\t\tfor (let n = 0; n < this.options.length; n++)\n\t\t{\n\t\t\tif (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0)) tr = dom('<tr/>').appendTo(table);\n\t\t\tlet td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n\t\t\tlet div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n\t\t\tdiv.css({'padding': `${this.padding}px`});\n\t\t\tdiv.onClick(() => this.clickButton(n));\n\n\t\t\tthis.buttonDiv.push(div);\n\n\t\t\tif (this.isVertical)\n\t\t\t{\n\t\t\t\ttd = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n\t\t\t\tthis.auxCell.push(td);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateButtons();\n\t}\n\n\t// perform some checks before rendering\n\tpublic clickButton(idx:number):void\n\t{\n\t\tif (idx == this.selidx) return;\n\n\t\tthis.setSelectedIndex(idx);\n\n\t\tif (this.callbackSelect) this.callbackSelect(idx, this);\n\t}\n\n\t// change selected index, update widgets\n\tpublic setSelectedIndex(idx:number):void\n\t{\n\t\tif (this.selidx == idx) return;\n\t\tthis.selidx = idx;\n\t\tthis.updateButtons();\n\t}\n\tpublic setSelectedValue(val:string):void\n\t{\n\t\tlet idx = this.options.indexOf(val);\n\t\tif (idx >= 0) this.setSelectedIndex(idx);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// updates selection state of buttons, either first time or after change\n\tprivate updateButtons():void\n\t{\n\t\tfor (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++)\n\t\t{\n\t\t\tlet div = this.buttonDiv[n];\n\n\t\t\tlet txt = this.options[n];\n\t\t\tif (txt.length == 0 && n == this.selidx) div.setText('\\u00A0\\u2716\\u00A0');\n\t\t\telse if (txt.length == 0) div.setText('\\u00A0\\u00A0\\u00A0');\n\t\t\telse if (this.htmlLabels) div.setHTML(txt);\n\t\t\telse div.setText(txt);\n\n\t\t\tdiv.removeClass('wmk-option-unselected wmk-option-selected');\n\n\t\t\tif (n != this.selidx)\n\t\t\t\tdiv.addClass('wmk-option-unselected');\n\t\t\telse\n\t\t\t\tdiv.addClass('wmk-option-selected');\n\t\t}\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\t\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t\treturn `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM, domLegacy} from '../util/dom';\nimport {installInlineCSS} from '../util/Theme';\nimport {empiricalScrollerSize, setBoundaryPixels} from '../util/util';\nimport {clearTooltip} from './Tooltip';\n\n/*\n\tPopup: a semi-transient widget that appears onscreen above all of the rest of the content. Clicking outside of the popup's\n\tarea dismisses it, but moving the mouse around does not. Functionally it's like a cross between a dialog and a tooltip.\n\n\tTo provide content, either subclass and override the populate() method, or provide a callback.\n*/\n\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\n\nexport class Popup\n{\n\tprivate parent:DOM;\n\n\t// content information that can be accessed after opening\n\tprotected domObscureBackground:DOM; // grey covering banner\t\n\tprotected domObscureForeground:DOM;\n\tprotected domPanelBoundary:DOM; // the dialog outline itself\n\tprotected domBody:DOM; // the main area, for content\n\n\tpublic popupBackground = 'white';\n\tpublic obscureOpacity = 0.2;\n\tpublic zindex:number = null; // optionally the use of zindex, to ensure it goes on top (usually not necessary)\n\tpublic callbackClose:(source?:Popup) => void = null;\n\tpublic callbackPopulate:(source?:Popup) => void = null;\n\n\tconstructor(parent:any)\n\t{\n\t\tthis.parent = domLegacy(parent);\n\n\t\tinstallInlineCSS('popup', CSS_POPUP);\n\t}\n\n\tpublic onClose(callback:(source?:Popup) => void)\n\t{\n\t\tthis.callbackClose = callback;\n\t}\n\n\t// creates all the DOM objects and shows the dialog; details such as title should be setup before calling this\n\tpublic open():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet body = dom(document.body);\n\n\t\t//let zindex = 21000;\n\n\t\tlet bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n\t\tbg.css({'position': 'fixed'/*, 'z-index': zindex*/});\n\t\tbg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tbg.css({'background-color': 'black', 'opacity': this.obscureOpacity});\n\n\t\tlet fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n\t\tfg.css({'position': 'fixed'/*, 'z-index': zindex + 1*/});\n\t\tfg.css({'left': '0', 'right': '0', 'top': '0', 'bottom': '0'});\n\t\tfg.onClick(() => this.close());\n\n\t\tif (this.zindex > 0)\n\t\t{\n\t\t\tbg.setCSS('z-index', this.zindex);\n\t\t\tfg.setCSS('z-index', this.zindex + 1);\n\t\t}\n\n\t\tlet pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({'visibility': 'hidden'});\n\t\tpb.onClick((event:MouseEvent) => event.stopPropagation()); // don't let the click percolate upward to the close event\n\t\tpb.css({'background-color': this.popupBackground, 'border': '1px solid black'});\n\t\tpb.css({'position': 'absolute', 'overflow': 'auto'});\n\n\t\tthis.domBody = dom('<div/>').appendTo(pb).css({'padding': '5px'});\n\n\t\t//bg.show();\n\n\t\tthis.populate();\n\t\tthis.positionAndShow();\n\t}\n\n\t// closes and hides the dialog\n\tpublic close():void\n\t{\n\t\tclearTooltip();\n\n\t\tthis.domPanelBoundary.remove();\n\t\tthis.domObscureBackground.remove();\n\t\tthis.domObscureForeground.remove();\n\n\t\tif (this.callbackClose) this.callbackClose(this);\n\n\t\tclearTooltip();\n\t}\n\n\t// sizes may have changed, so adjust if necessary\n\tpublic bump():void\n\t{\n\t\tthis.positionAndShow();\n\t}\n\n\t// use this to obtain the parts of the dialog box intended for modification\n\tpublic bodyDOM():DOM {return this.domBody;}\n\n\t// either subclass and override this, or provide the callback\n\tprotected populate():void\n\t{\n\t\tif (this.callbackPopulate)\n\t\t\tthis.callbackPopulate(this);\n\t\telse\n\t\t\tthis.bodyDOM().setText('Empty popup.');\n\t}\n\n\t// have this called when the size may have changed, and need to update position\n\tprivate positionAndShow():void\n\t{\n\t\tclearTooltip();\n\n\t\tlet winW = window.innerWidth, winH = window.innerHeight;\n\t\tconst GAP = 2;\n\t\tlet client = this.parent.el.getBoundingClientRect();\n\t\tlet wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n\n\t\tlet pb = this.domPanelBoundary;\n\n\t\tlet maxW = Math.max(wx1, winW - wx2) - 4;\n\t\tpb.css({'max-width': maxW + 'px'});\n\n\t\tlet scrollSize = empiricalScrollerSize();\n\n\t\tlet setPosition = ():void =>\n\t\t{\n\t\t\t//let popW = pb.width(), popH = pb.height();\n\t\t\tlet popW = this.domBody.width(), popH = this.domBody.height();\n\t\t\tlet posX = 0, posY = 0;\n\n\t\t\tif (wy2 + GAP + popH < winH) posY = wy2 + GAP;\n\t\t\telse if (wy1 - GAP - popH > 0) posY = wy1 - GAP - popH;\n\t\t\telse if (winH - wy2 > wy1)\n\t\t\t{\n\t\t\t\tposY = wy2 + GAP;\n\t\t\t\tpopH = winH - posY - GAP;\n\t\t\t}\n\t\t\telse // wy1 >= winH - wy2\n\t\t\t{\n\t\t\t\tposY = GAP;\n\t\t\t\tpopH = wy1 - posY - GAP;\n\t\t\t}\n\n\t\t\tif (pb.height() > popH) popW += scrollSize.w + 10;\n\n\t\t\tif (wx1 + popW < winW) posX = wx1;\n\t\t\telse if (popW < wx2) posX = wx2 - popW;\n\n\t\t\tsetBoundaryPixels(pb, posX, posY, popW, popH);\n\t\t\tpb.css({'visibility': 'visible'});\n\t\t};\n\n\t\tsetTimeout(() => setPosition());\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {hasInlineCSS, installInlineCSS, Theme} from '../util/Theme';\nimport {colourCode} from '../util/util';\nimport {Widget} from './Widget';\n\n/*\n\tTabBar: a series of option buttons with a common area underneath it, of which just one can be selected & visible.\n*/\n\nexport class TabBar extends Widget\n{\n\tpublic unionHeight = false; // if true, height of tab bar will be set to the maximum of all components\n\n\tprivate selidx = 0;\n\tprivate buttonDiv:DOM[] = [];\n\tprivate panelDiv:DOM[] = [];\n\tprivate padding = 6; // pixels\n\n\tpublic callbackSelect:(idx:number, source?:TabBar) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(public options:string[])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('tabbar')) installInlineCSS('tabbar', this.composeCSS());\n\t}\n\n\tpublic onSelect(callback:(idx:number, source?:TabBar) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// control over selected index\n\tpublic getSelectedIndex():number\n\t{\n\t\treturn this.selidx;\n\t}\n\tpublic getSelectedValue():string\n\t{\n\t\treturn this.options[this.selidx];\n\t}\n\n\t// return the panel: each of these needs to be individually filled\n\tpublic getPanelDOM(idxOrName:number | string):DOM\n\t{\n\t\tlet idx = typeof idxOrName == 'number' ? idxOrName as number : this.options.indexOf(idxOrName);\n\t\tif (idx < 0) return null;\n\t\treturn this.panelDiv[idx];\n\t}\n\n\t// create the underlying structure; the parent parameter must be jQuery-compatible\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet grid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tlet columns = '[start] 1fr ';\n\t\tfor (let n = 0; n < this.options.length; n++) columns += '[btn' + n + '] auto ';\n\t\tcolumns += '[btnX] 1fr [end]';\n\t\tgrid.css({'grid-template-columns': columns});\n\n\t\tlet underline = dom('<div/>').appendTo(grid);\n\t\tunderline.css({'grid-column': 'start / end', 'grid-row': '1', 'height': '100%'});\n\t\tunderline.css({'border-bottom': '1px solid #C0C0C0'});\n\n\t\tfor (let n = 0; n < this.options.length; n++)\n\t\t{\n\t\t\tlet outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n\t\t\toutline.css({'grid-column': 'btn' + n, 'grid-row': '1'});\n\t\t\tlet btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n\t\t\tbtn.css({'padding': `${this.padding}px`});\n\t\t\tbtn.onClick(() => this.clickButton(n));\n\t\t\tthis.buttonDiv.push(btn);\n\n\t\t\tlet panel = dom('<div/>').appendTo(grid);\n\t\t\tpanel.css({'grid-column': 'start / end', 'grid-row': '2'});\n\t\t\tpanel.css({'align-self': 'start', 'justify-self': 'center', 'width': '100%'});\n\t\t\tthis.panelDiv.push(panel);\n\t\t}\n\n\t\tthis.updateButtons();\n\t}\n\n\t// tab-button clicked, so change content\n\tpublic clickButton(idx:number):void\n\t{\n\t\tif (idx == this.selidx) return;\n\n\t\tthis.setSelectedIndex(idx);\n\n\t\tif (this.callbackSelect) this.callbackSelect(idx, this);\n\t}\n\n\t// change selected index, update widgets\n\tpublic setSelectedIndex(idx:number):void\n\t{\n\t\tif (this.selidx == idx) return;\n\t\tthis.selidx = idx;\n\n\t\tlet dom = this.contentDOM;\n\t\tdom.setCSS('min-width', `${dom.width()}px`);\n\t\t\n\t\tthis.updateButtons();\n\t}\n\tpublic setSelectedValue(val:string):void\n\t{\n\t\tlet idx = this.options.indexOf(val);\n\t\tif (idx >= 0) this.setSelectedIndex(idx);\n\t}\n\tpublic rotateSelected(dir:number):void\n\t{\n\t\tthis.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n\t}\n\n\t// ------------ private methods ------------\n\n\t// updates selection state of buttons, either first time or after change\n\tprivate updateButtons():void\n\t{\n\t\tfor (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++)\n\t\t{\n\t\t\tlet div = this.buttonDiv[n];\n\n\t\t\tlet txt = this.options[n];\n\t\t\tif (txt.length == 0 && n == this.selidx) div.setText('\\u00A0\\u2716\\u00A0');\n\t\t\telse if (txt.length == 0) div.setText('\\u00A0\\u00A0\\u00A0');\n\t\t\telse div.setText(txt);\n\n\t\t\tdiv.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n\n\t\t\tif (n != this.selidx)\n\t\t\t\tdiv.addClass('wmk-tabbar-unselected');\n\t\t\telse\n\t\t\t\tdiv.addClass('wmk-tabbar-selected');\n\n\t\t\tif (this.unionHeight)\n\t\t\t\tthis.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n\t\t\telse\n\t\t\t\tthis.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n\t\t}\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\t\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t\treturn `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DOM, dom} from '../util/dom';\nimport {Box} from '../util/Geom';\nimport {installInlineCSS} from '../util/Theme';\n\n/*\n\tTooltips: adding popovers to widgets.\n*/\n\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\n\nlet globalTooltip:Tooltip = null;\nlet globalPopWatermark = 0;\n\n// adds a well behaved tooltip to the given node (element or JQuery object)\nexport function addTooltip(parent:any, bodyHTML:string, titleHTML?:string, delay?:number):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tlet widget = dom(parent);\n\tlet tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n\n\twidget.onMouseEnter(() => tooltip.start());\n\twidget.onMouseLeave(() => tooltip.stop());\n}\n\n// variation of above where the body content is created by a callback function: use when content is expensive\nexport function addTooltipPromise(parent:any, bodyCallback:() => Promise<string>, titleHTML?:string, delay?:number):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tlet widget = dom(parent);\n\tlet tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n\ttooltip.bodyCallback = bodyCallback;\n\n\twidget.onMouseEnter(() => tooltip.start());\n\twidget.onMouseLeave(() => tooltip.stop());\n}\n\n// immediately raise a tooltip, with a position relative to a given widget\nexport function raiseToolTip(parent:any, avoid:Box, bodyHTML:string, titleHTML?:string):void\n{\n\tinstallInlineCSS('tooltip', CSS_TOOLTIP);\n\n\tclearTooltip();\n\tnew Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\n\n// rudely shutdown the tooltip\nexport function clearTooltip():void\n{\n\tif (globalTooltip == null) return;\n\tglobalPopWatermark++;\n\tglobalTooltip.stop();\n}\n\nexport class Tooltip\n{\n\tpublic bodyCallback:() => Promise<string>;\n\n\tprivate watermark:number;\n\tprivate domTooltip:DOM = null;\n\n\tconstructor(private widget:DOM, private bodyHTML:string, private titleHTML:string, private delay:number)\n\t{\n\t}\n\n\t// raise the tooltip after a delay, assuming someone else hasn't bogarted it in the meanwhile\n\tpublic start()\n\t{\n\t\tthis.watermark = ++globalPopWatermark;\n\n\t\t(async () =>\n\t\t{\n\t\t\tif (this.bodyHTML == null && this.bodyCallback) this.bodyHTML = await this.bodyCallback();\n\n\t\t\twindow.setTimeout(() =>\n\t\t\t{\n\t\t\t\tif (this.watermark == globalPopWatermark) this.raise();\n\t\t\t}, this.delay);\n\t\t})();\n\t}\n\n\t// lower the tooltip, if it is still owned by this widget\n\tpublic stop()\n\t{\n\t\tif (this.domTooltip)\n\t\t{\n\t\t\tthis.domTooltip.remove();\n\t\t\tthis.domTooltip = null;\n\t\t}\n\t\t//globalPopWatermark++;\n\t\tthis.watermark = -1; // stop any raise in progress\n\t}\n\n\tpublic raise(avoid?:Box)\n\t{\n\t\tif (!this.widget.exists()) return; // 'tis gone\n\n\t\tglobalTooltip = this;\n\t\tif (this.domTooltip) return;\n\n\t\tlet pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({'visibility': 'hidden'}).appendTo(document.body);\n\n\t\t// special deal: if the parent widget has an ancestor with z-index set, then perpetuate that kludge\n\t\tlet sanity = 50;\n\t\tfor (let ancestor = this.widget; ancestor; ancestor = ancestor.parent())\n\t\t{\n\t\t\tif (--sanity == 0) break;\n\t\t\tlet zindex = parseInt(ancestor.elHTML.style.zIndex);\n\t\t\tif (zindex > 0)\n\t\t\t{\n\t\t\t\tpop.setCSS('z-index', (zindex + 1000).toString());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n\n\t\tlet hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n\n\t\tif (hasTitle) dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n\t\tif (hasTitle && hasBody) div.appendHTML('<hr/>');\n\t\tif (hasBody) dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n\n\t\t// to-do: title, if any\n\n\t\tlet winW = window.innerWidth, winH = window.innerHeight;\n\t\tconst GAP = 2;\n\t\tlet boundDiv = this.widget.el.getBoundingClientRect();\n\t\tlet wx1 = boundDiv.left, wy1 = boundDiv.top;\n\t\tlet wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n\n\t\t// if more specific positioning is requested within the widget, adjust accordingly\n\t\tif (avoid)\n\t\t{\n\t\t\twx1 += avoid.x;\n\t\t\twy1 += avoid.y;\n\t\t\twx2 = wx1 + avoid.w;\n\t\t\twy2 = wy1 + avoid.h;\n\t\t}\n\n\t\tlet setPosition = () =>\n\t\t{\n\t\t\tlet popW = pop.width(), popH = pop.height();\n\t\t\tlet posX = 0, posY = 0;\n\t\t\tif (wx1 + popW < winW) posX = wx1;\n\t\t\telse if (popW < wx2) posX = wx2 - popW;\n\t\t\tif (wy2 + GAP + popH < winH) posY = wy2 + GAP;\n\t\t\telse if (wy1 - GAP - popH > 0) posY = wy1 - GAP - popH;\n\t\t\telse posY = wy2 + GAP;\n\n\t\t\tposX += window.pageXOffset;\n\t\t\tposY += window.pageYOffset;\n\n\t\t\tpop.css({'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible'});\n\t\t};\n\n\t\tpop.css({'left': '0px', 'top': '0px'});\n\t\tsetTimeout(() => setPosition(), 1);\n\n\t\tlet checkParent = () =>\n\t\t{\n\t\t\tif (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n\t\t\t\tthis.stop();\n\t\t\telse\n\t\t\t\tsetTimeout(checkParent, 100);\n\t\t};\n\t\tsetTimeout(checkParent, 100);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {dom, DOM} from '../util/dom';\nimport {addTooltip} from './Tooltip';\n\n/*\n\tBase class for widgets. Maintains the wrapping <div> element into which everything is rendered.\n*/\n\nexport class Widget\n{\n\tprotected tagType = 'div';\n\n\t//public content:JQuery = null;\n\n\tprivate domContent:DOM = null;\n\tpublic get contentDOM():DOM {return this.domContent;}\n\n\tconstructor() {}\n\n\t// create the underlying structure; the parent parameter must be jQuery- or DOM-compatible\n\tpublic render(parent:DOM | Element):void\n\t{\n\t\tlet tag = this.tagType;\n\t\tthis.domContent = dom(`<${tag}/>`).appendTo(parent as (DOM | Element));\n\t}\n\n\t// deconstructs the widget; this is not a hook, rather it is for the benefit of calling code that wants the widget gone\n\tpublic remove():void\n\t{\n\t\tif (this.domContent) this.domContent.remove();\n\t\tthis.domContent = null;\n\t}\n\n\t// convenience function: attaches a tooltip to the main content element, after rendering\n\tpublic addTooltip(bodyHTML:string, titleHTML?:string):void\n\t{\n\t\taddTooltip(this.contentDOM, bodyHTML, titleHTML);\n\t}\n\n\t// convenience wrapper\n\tpublic grabFocus():void\n\t{\n\t\tthis.domContent.grabFocus();\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2024 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {GeomUtil, Spline} from './Geom';\nimport {DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tGiven a collection of points that is shaped somewhat like an oval-esque outline (i.e. a molecule ring that might be squished and rotated\n\tsomewhat) finds a rotated ellipse that fills it out, up to a certain margin distance.\n\n\tThere is no straightforward mathematical formula for this, and so the algorithm is done by way of a crude optimisation. It is intended\n\tto be more fast than correct, since it needs to run on an interactive timescale. Edge cases may fail in ugly ways.\n\n\tThe bezier is parametrised as (cx,cy,rw,rh,theta).\n\n\tNote that the algorithm is reasonably fast, but it can add up when being used in real time. There's a caching system to help with this.\n*/\n\nconst CACHE_SIZE = 1000;\n\nexport class FitRotatedEllipse\n{\n\tprivate static cacheVal:FitRotatedEllipse[] = [];\n\tprivate static cacheMap = new Map<string, FitRotatedEllipse>();\n\n\t// these are the results\n\tpublic cx:number;\n\tpublic cy:number;\n\tpublic rw:number;\n\tpublic rh:number;\n\tpublic theta = 0;\n\n\t// working variables\n\tprivate psz:number;\n\tprivate invpsz:number;\n\tprivate stop = false;\n\tprivate currentScore:number;\n\tprivate hashKey:string;\n\n\t// ------------ public methods ------------\n\n\tconstructor(public px:number[], public py:number[], public margin:number)\n\t{\n\t\tthis.hashKey = JSON.stringify([this.px, this.py]);\n\t}\n\n\tpublic calculate():void\n\t{\n\t\tif (this.lookupCache()) return;\n\n\t\tthis.setupParameters();\n\t\tif (this.stop) return;\n\n\t\tthis.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n\n\t\tthis.coarseDiscovery();\n\t\tthis.fineImprovement();\n\n\t\tthis.theta = -this.theta;\n\n\t\tthis.saveCache();\n\t}\n\n\t// converts the calculated result into a Bezier spline for convenient rendering\n\tpublic getSpline():Spline\n\t{\n\t\treturn GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate lookupCache():boolean\n\t{\n\t\tlet hashKey = this.hashKey;\n\t\tlet look = FitRotatedEllipse.cacheMap.get(hashKey);\n\t\tif (look)\n\t\t{\n\t\t\tthis.cx = look.cx;\n\t\t\tthis.cy = look.cy;\n\t\t\tthis.rw = look.rw;\n\t\t\tthis.rh = look.rh;\n\t\t\tthis.theta = look.theta;\n\n\t\t\t// rotate the hit to the tip of the cache\n\t\t\tconst {cacheVal} = FitRotatedEllipse;\n\t\t\tfor (let n = cacheVal.length - 1; n >= 0; n--) if (cacheVal[n].hashKey == hashKey)\n\t\t\t{\n\t\t\t\tif (n < cacheVal.length - 1)\n\t\t\t\t{\n\t\t\t\t\tcacheVal.push(cacheVal[n]);\n\t\t\t\t\tcacheVal.splice(n, 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate saveCache():void\n\t{\n\t\tlet hashKey = this.hashKey;\n\t\tconst {cacheVal, cacheMap} = FitRotatedEllipse;\n\n\t\tcacheVal.push(this);\n\t\tcacheMap.set(hashKey, this);\n\n\t\twhile (cacheVal.length > CACHE_SIZE)\n\t\t{\n\t\t\tcacheMap.delete(cacheVal[0].hashKey);\n\t\t\tcacheVal.splice(0);\n\t\t}\n\t}\n\n\tprivate setupParameters():void\n\t{\n\t\tconst psz = this.psz = this.px.length;\n\t\tconst invpsz = this.invpsz = 1.0 / psz;\n\t\tthis.cx = Vec.sum(this.px) * invpsz;\n\t\tthis.cy = Vec.sum(this.py) * invpsz;\n\t\tlet ptheta:number[] = new Array(psz), pdist:number[] = new Array(psz);\n\t\tfor (let n = 0; n < psz; n++)\n\t\t{\n\t\t\tptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n\t\t\tpdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n\t\t}\n\t\tlet order = Vec.idxSort(ptheta);\n\t\tthis.px = Vec.idxGet(this.px, order);\n\t\tthis.py = Vec.idxGet(this.py, order);\n\t\tptheta = Vec.idxGet(ptheta, order);\n\t\tpdist = Vec.idxGet(pdist, order);\n\n\t\tlet buffX:number[] = new Array(psz), buffY:number[] = new Array(psz);\n\t\tconst rotatedScore = (ptheta:number[], pdist:number[], rtheta:number):number =>\n\t\t{\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tbuffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n\t\t\t\tbuffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n\t\t\t}\n\t\t\tlet scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n\t\t\tlet devx = 0, devy = 0;\n\t\t\tfor (let n = 0; n < psz; n++)\n\t\t\t{\n\t\t\t\tdevx += sqr(buffX[n] - scx);\n\t\t\t\tdevy += Math.abs(buffY[n] - scy);\n\t\t\t}\n\t\t\treturn devy / (1 + devx);\n\t\t};\n\n\t\tlet bestScore = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < 360; n++)\n\t\t{\n\t\t\tlet th = n * DEGRAD;\n\t\t\tlet score = rotatedScore(ptheta, pdist, th);\n\t\t\tif (score < bestScore) {this.theta = th; bestScore = score;}\n\t\t}\n\t\tfor (let dth = -1; dth <= 1; dth += 0.05)\n\t\t{\n\t\t\tlet th = this.theta + dth * DEGRAD;\n\t\t\tlet score = rotatedScore(ptheta, pdist, th);\n\t\t\tif (score < bestScore) {this.theta = th; bestScore = score;}\n\t\t}\n\t\tfor (let n = 0; n < psz; n++)\n\t\t{\n\t\t\tthis.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n\t\t\tthis.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n\t\t}\n\t\tthis.cx = Vec.sum(this.px) * invpsz;\n\t\tthis.cy = Vec.sum(this.py) * invpsz;\n\n\t\tthis.rw = this.rh = 1;\n\t}\n\n\tprivate coarseDiscovery():void\n\t{\n\t\tconst {margin} = this;\n\n\t\tlet deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n\t\tconst DELTA_OPTIONS:{dx:number, dy:number, dw:number, dh:number}[] =\n\t\t[\n\t\t\t{dx: -1, dy: 0, dw: 0, dh: 0},\n\t\t\t{dx: 1, dy: 0, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: -1, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: 1, dw: 0, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: -1, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: 1, dh: 0},\n\t\t\t{dx: 0, dy: 0, dw: 0, dh: -1},\n\t\t\t{dx: 0, dy: 0, dw: 0, dh: 1},\n\t\t];\n\n\t\tfor (let sanity = 0; sanity < 1000; sanity++)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tlet bestScore = this.currentScore;\n\t\t\tlet bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n\n\t\t\tfor (let delta of DELTA_OPTIONS)\n\t\t\t{\n\t\t\t\tlet newCX = this.cx + delta.dx * deltaD;\n\t\t\t\tlet newCY = this.cy + delta.dy * deltaD;\n\t\t\t\tlet newRW = this.rw + delta.dw * deltaR;\n\t\t\t\tlet newRH = this.rh + delta.dh * deltaR;\n\n\t\t\t\tlet newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n\t\t\t\tif (newScore > bestScore && !fltEqual(newScore, bestScore))\n\t\t\t\t{\n\t\t\t\t\tanything = true;\n\t\t\t\t\tbestScore = newScore;\n\t\t\t\t\tbestCX = newCX;\n\t\t\t\t\tbestCY = newCY;\n\t\t\t\t\tbestRW = newRW;\n\t\t\t\t\tbestRH = newRH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\n\t\t\tthis.currentScore = bestScore;\n\t\t\tthis.cx = bestCX;\n\t\t\tthis.cy = bestCY;\n\t\t\tthis.rw = bestRW;\n\t\t\tthis.rh = bestRH;\n\t\t}\n\t}\n\n\tprivate fineImprovement():void\n\t{\n\t\tconst {margin} = this;\n\n\t\tlet deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n\t\tconst REDUCTION = 2.0 / 3;\n\t\tconst MAX_REDUCTIONS = 20;\n\t\tfor (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tlet bestScore = this.currentScore;\n\t\t\tlet bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n\n\t\t\tfor (let dCX = -1; dCX <= 1; dCX++)\n\t\t\t{\n\t\t\t\tlet newCX = this.cx + dCX * deltaD;\n\t\t\t\tfor (let dCY = -1; dCY <= 1; dCY++)\n\t\t\t\t{\n\t\t\t\t\tlet newCY = this.cy + dCY * deltaD;\n\t\t\t\t\tfor (let dRW = -1; dRW <= 1; dRW++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet newRW = this.rw + dRW * deltaR;\n\t\t\t\t\t\tfor (let dRH = -1; dRH <= 1; dRH++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet newRH = this.rh + dRH * deltaR;\n\t\t\t\t\t\t\tif (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0) continue;\n\t\t\t\t\t\t\tlet newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n\t\t\t\t\t\t\tif (newScore > bestScore && !fltEqual(newScore, bestScore))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tanything = true;\n\t\t\t\t\t\t\t\tbestScore = newScore;\n\t\t\t\t\t\t\t\tbestCX = newCX;\n\t\t\t\t\t\t\t\tbestCY = newCY;\n\t\t\t\t\t\t\t\tbestRW = newRW;\n\t\t\t\t\t\t\t\tbestRH = newRH;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (anything)\n\t\t\t{\n\t\t\t\tthis.currentScore = bestScore;\n\t\t\t\tthis.cx = bestCX;\n\t\t\t\tthis.cy = bestCY;\n\t\t\t\tthis.rw = bestRW;\n\t\t\t\tthis.rh = bestRH;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treduc++;\n\t\t\t\tdeltaD *= REDUCTION;\n\t\t\t\tdeltaR *= REDUCTION;\n\t\t\t}\n\t\t}\n\t}\n\n\t// calculate a score for a given state; higher is better, zero is unacceptable\n\tprivate calculateScore(cx:number, cy:number, rw:number, rh:number,):number\n\t{\n\t\tconst {px, py, margin} = this, psz = px.length;\n\n\t\t// radiate out a series of \"spokes\" that make up points of the rotated ellipse; if any of these crosses an outline segment\n\t\tconst nseg = 24;\n\t\tlet cosTheta = 1, sinTheta = 0;\n\t\tlet incrAlpha = TWOPI / nseg;\n\n\t\tlet closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet alpha = n * incrAlpha;\n\t\t\tlet cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n\t\t\tlet dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n\t\t\tlet dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n\n\t\t\tlet d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n\t\t\tlet x = cx + d * Math.cos(eth);\n\t\t\tlet y = cy + d * Math.sin(eth);\n\n\t\t\tfor (let i = 0; i < psz; i++)\n\t\t\t{\n\t\t\t\tlet ii = i == psz - 1 ? 0 : i + 1;\n\t\t\t\tif (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii])) return 0;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < psz; i++) closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n\t\t}\n\n\t\tlet proxSum = 0;\n\t\tfor (let dsq of closestDSQ) proxSum += 1.0 / (1 + Math.sqrt(dsq));\n\n\t\t// it isn't violated, so bigger is better\n\t\treturn rw * rh + proxSum;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Matrix, SingularValueDecomposition} from './Matrix';\nimport {Triangulation2D} from './Triangulation2D';\nimport {angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tGeometry utilities, which are typically graphics related.\n*/\n\nexport interface Spline\n{\n\tpx:number[];\n\tpy:number[];\n\tctrl:boolean[];\n}\n\nexport class GeomUtil\n{\n\t// static: returns true if the point (x,y) is inside the given polygon (px,py)\n\tpublic static pointInPolygon(x:number, y:number, px:number[], py:number[]):boolean\n\t{\n\t\tif (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py)) return false;\n\t\tlet sz = px.length;\n\t\tfor (let n = 0; n < sz; n++) if (px[n] == x && py[n] == y) return true; // point is on a vertex\n\n\t\tlet phase = false;\n\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tlet x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n\t\t\tif (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2)\n\t\t\t{\n\t\t\t\tlet intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n\t\t\t\tif (x1 == x2 || x <= intr) phase = !phase;\n\t\t\t}\n\t\t}\n\n\t\treturn phase;\n\t}\n\n\t// returns true if the lines L1-->L2 and L3-->L4 are parallel or anti-parallel, i.e. they can never intersect; note that\n\t// this still returns true if the lines are actually on top of each other; note that this is for lines, not line segments\n\tpublic static areLinesParallel(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):boolean\n\t{\n\t\tlet dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n\t\tlet xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n\t\tif (xmajorA != xmajorB) return false;\n\t\tconst EPS = 1E-6;\n\t\tif (xmajorA)\n\t\t\treturn Math.abs(dya / dxa - dyb / dxb) < EPS;\n\t\telse\n\t\t\treturn Math.abs(dxa / dya - dxb / dyb) < EPS;\n\t}\n\n\t// for the lines L1-->L2 and L3-->L4, calculate and return the intersection; note that this for lines, not line segments;\n\t// the return value is an array of {x,y}; note that the answer will be garbage if the lines are parallel\n\tpublic static lineIntersect(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):number[]\n\t{\n\t\tlet u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\t\treturn [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n\t}\n\n\t// returns true if the point is on the line segment, within numerical precision\n\tpublic static isPointOnLineSeg(px:number, py:number, x1:number, y1:number, x2:number, y2:number):boolean\n\t{\n\t\tif (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2)) return false;\n\t\tif ((px == x1 && py == y1) || (px == x2 && py == y2)) return true;\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tif (Math.abs(dx) > Math.abs(dy)) return realEqual(py, (dy / dx) * (px - x1) + y1);\n\t\telse return realEqual(px, (dx / dy) * (py - y1) + x1);\n\t}\n\n\t// returns the distance from the point to the closest location on the indicated line\n\tpublic static pointLineDistance(px:number, py:number, x1:number, y1:number, x2:number, y2:number):number\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\treturn Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n\t}\n\n\t// returns the shortest distance from the point to the line segment\n\tpublic static pointLineSegDistance(px:number, py:number, x1:number, y1:number, x2:number, y2:number):number\n\t{\n\t\tlet dx = x2 - x1, dy = y2 - y1;\n\t\tlet t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy); // t=position along the line to which the point is orthogonal\n\t\tt = Math.max(0, Math.min(1, t));\n\t\tlet tx = x1 + t * dx, ty = y1 + t * dy;\n\t\treturn norm_xy(px - tx, py - ty);\n\t}\n\n\t// tests the two line segments L1-->L2 and L3-->L4 for intersection, and returns true if they do\n\t// !! methinks this is almost correct, but there might be a boundary flaw\n\tpublic static doLineSegsIntersect(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number, x4:number, y4:number):boolean\n\t{\n\t\tif (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4)) return false;\n\t\tif (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4)) return false;\n\t\tif ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4)) return true;\n\t\tif ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4)) return true;\n\t\tif ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4)) return true;\n\n\t\tlet x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n\n\t\tlet nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n\t\tlet ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n\t\tlet dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n\n\t\tif (dn == 0) return false;\n\t\tif (dn < 0)\n\t\t{\n\t\t\tdn = -dn;\n\t\t\tnx = -nx;\n\t\t\tny = -ny;\n\t\t}\n\t\treturn nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n\t}\n\n\t// true if the two rectangles share any intersection\n\tpublic static rectsIntersect(x1:number, y1:number, w1:number, h1:number, x2:number, y2:number, w2:number, h2:number):boolean\n\t{\n\t\tif (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2) return true;\n\t\tif (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1) return true;\n\t\tif (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1) return false;\n\t\treturn true;\n\t}\n\n\t// for an array of angles (in radians), sorts them in order; then, rotates the array around as many times as is necessary\n\t// so that the difference between the first & last angles is >= than the difference between the first & second\n\tpublic static sortAngles(theta:number[]):number[]\n\t{\n\t\tif (theta == null || theta.length < 2) return theta;\n\t\ttheta = theta.slice(0);\n\t\tfor (let n = 0; n < theta.length; n++) theta[n] = angleNorm(theta[n]);\n\n\t\tif (theta.length == 2)\n\t\t{\n\t\t\tif (angleDiffPos(theta[1], theta[0]) > Math.PI) return [theta[1], theta[0]];\n\t\t\treturn theta;\n\t\t}\n\n\t\tVec.sort(theta);\n\t\twhile (true)\n\t\t{\n\t\t\tlet a = theta[theta.length - 1], b = theta[0], c = theta[1];\n\t\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\t\tfor (let n = theta.length - 1; n > 0; n--) theta[n] = theta[n - 1];\n\t\t\ttheta[0] = a;\n\t\t}\n\t\treturn theta;\n\t}\n\n\t// sorts angles as above, except returns indices rather than values\n\tpublic static idxSortAngles(theta:number[]):number[]\n\t{\n\t\tconst sz = Vec.len(theta);\n\t\tif (theta == null || sz < 2) return Vec.identity0(sz);\n\n\t\tif (sz == 2)\n\t\t{\n\t\t\tif (angleDiffPos(theta[1], theta[0]) > Math.PI) return [1, 0]; else return [0, 1];\n\t\t}\n\n\t\ttheta = Vec.duplicate(theta);\n\t\tfor (let n = 0; n < sz; n++) theta[n] = angleNorm(theta[n]);\n\t\tlet idx = Vec.idxSort(theta);\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n\t\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\t\tlet last = idx.pop();\n\t\t\tidx.unshift(last);\n\t\t}\n\t\treturn idx;\n\t}\n\n\t// calculates a list of unique angles (based on the threshold parameter, in radians), and returns it; the returned list of\n\t// angles will be sorted in order, as described by sortAngles(..); note that there is no fancy clustering, so a sequence of\n\t// angles which are a bit below the threshold is not guaranteed to be stable; there is also a boundary case which bumps the\n\t// sort rotation status slightly out of whack\n\tpublic static uniqueAngles(theta:number[], threshold:number):number[]\n\t{\n\t\tlet ang = GeomUtil.sortAngles(theta), ret:number[] = [];\n\t\tret.push(ang[0]);\n\t\tfor (let n = 1; n < ang.length; n++)\n\t\t{\n\t\t\tif (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold) ret.push(ang[n]);\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// returns the angle maximally equidistant from Th1 and Th2\n\tpublic static thetaObtuse(th1:number, th2:number):number\n\t{\n\t\tlet dth = th2 - th1;\n\t\twhile (dth < -Math.PI) dth += 2 * Math.PI;\n\t\twhile (dth > Math.PI) dth -= 2 * Math.PI;\n\t\treturn dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n\t}\n\n\t// for a group of angles, returns a single dominant angle that represents the \"average\" of all of them; this takes into account boundary\n\t// issues for multiple cases, e.g. +/- 180; note that the array may be modified\n\tpublic static emergentAngle(theta:number[]):number\n\t{\n\t\tlet len = theta.length;\n\t\tif (len == 1) return theta[0];\n\t\tif (len == 2) return 0.5 * (theta[0] + theta[1]);\n\n\t\tVec.sort(theta);\n\n\t\tlet bottom = 0;\n\t\tlet behind = angleDiffPos(theta[0], theta[len - 1]);\n\t\tfor (let n = 1; n < len; n++)\n\t\t{\n\t\t\tlet delta = angleDiffPos(theta[n], theta[n - 1]);\n\t\t\tif (delta > behind)\n\t\t\t{\n\t\t\t\tbottom = n;\n\t\t\t\tbehind = delta;\n\t\t\t}\n\t\t}\n\n\t\tlet sum = 0;\n\t\tfor (let n = 0; n < len; n++)\n\t\t{\n\t\t\tlet delta = theta[n] - theta[bottom];\n\t\t\tif (delta < 0) delta += TWOPI;\n\t\t\tsum += delta;\n\t\t}\n\n\t\treturn sum / len + theta[bottom];\n\t}\n\n\t// core 3D vector calculations; observe that even though the parameters are vectors, these functions do assume that they are of size 3\n\n\tpublic static dotProduct(v1:number[], v2:number[]):number\n\t{\n\t\treturn v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n\t}\n\n\tpublic static crossProduct(v1:number[], v2:number[]):number[]\n\t{\n\t\tconst x = v1[1] * v2[2] - v1[2] * v2[1];\n\t\tconst y = v1[2] * v2[0] - v1[0] * v2[2];\n\t\tconst z = v1[0] * v2[1] - v1[1] * v2[0];\n\t\treturn [x, y, z];\n\t}\n\n\t// generate 2D affine transforms\n\tpublic static affineTranslate(dx:number, dy:number):number[][]\n\t{\n\t\treturn [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n\t}\n\tpublic static affineMirror(xaxis:boolean, yaxis:boolean):number[][]\n\t{\n\t\treturn [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n\t}\n\tpublic static affineScale(sx:number, sy:number):number[][]\n\t{\n\t\treturn [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n\t}\n\tpublic static affineRotate(theta:number):number[][]\n\t{\n\t\tlet cos = Math.cos(theta), sin = Math.sin(theta);\n\t\treturn [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n\t}\n\n\t// compose two affine transforms and returns a new one that is equivalent to doing both of them in order (A then B)\n\tpublic static affineCompose(A:number[][], B:number[][]):number[][]\n\t{\n\t\tlet tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\t\tlet Acol = [0, 0, 0];\n\t\tfor (let j = 0; j < 3; j++)\n\t\t{\n\t\t\tfor (let k = 0; k < 3; k++) Acol[k] = A[k][j];\n\t\t\tfor (let i = 0; i < 3; i++)\n\t\t\t{\n\t\t\t\tlet Brow = B[i];\n\t\t\t\tlet s = 0;\n\t\t\t\tfor (let k = 0; k < 3; k++) s += Acol[k] * Brow[k];\n\t\t\t\ttfm[i][j] = s;\n\t\t\t}\n\t\t}\n\t\treturn tfm;\n\t}\n\n\t// applies a 3x3 affine transform to two coordinates; returns [x,y] position\n\tpublic static applyAffine(x:number, y:number, tfm:number[][]):[number, number]\n\t{\n\t\treturn [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n\t}\n\n\t// applies the affine transform to a vector, modifying the parameter array\n\tpublic static applyAffineArray(x:number[], y:number[], tfm:number[][]):void\n\t{\n\t\tfor (let n = 0; n < x.length; n++) [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n\t}\n\n\t// returns true if the 2D affine transform contains a mirror reflection\n\tpublic static isAffineMirror(tfm:number[][]):boolean\n\t{\n\t\tlet a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n\t\tlet d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n\t\tlet g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n\t\treturn a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n\t}\n\n\tpublic static magnitude2(v:number[]):number\n\t{\n\t\treturn v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\t}\n\n\tpublic static magnitude(v:number[]):number\n\t{\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n\t}\n\n\tpublic static dist2(v1:number[], v2:number[]):number\n\t{\n\t\tlet dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n\t\treturn dx * dx + dy * dy + dz * dz;\n\t}\n\n\tpublic static dist(v1:number[], v2:number[]):number\n\t{\n\t\tlet dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n\n\tpublic static normalise(v:number[]):void\n\t{\n\t\tconst dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\t\tif (dsq == 0) return;\n\t\tconst inv = 1.0 / Math.sqrt(dsq);\n\t\tv[0] *= inv;\n\t\tv[1] *= inv;\n\t\tv[2] *= inv;\n\t}\n\n\tpublic static normalised(v:number[]):number[]\n\t{\n\t\tlet ret = v.slice(0);\n\t\tthis.normalise(ret);\n\t\treturn ret;\n\t}\n\n\t// returns the unsigned angle between two vectors\n\tpublic static acuteAngle(v1:number[], v2:number[]):number\n\t{\n\t\tlet mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n\t\tif (mag1 == 0 || mag2 == 0) return 0;\n\t\tlet dot = this.dotProduct(v1, v2);\n\t\tlet cosTheta = dot / (mag1 * mag2);\n\t\tcosTheta = Math.max(-1, Math.min(1, cosTheta)); // numeric error can bump it slightly out of -1 .. +1\n\t\treturn Math.acos(cosTheta);\n\t}\n\n\t// given a circle (at origin) of a given radius, and two points at the perimeter, calculates two control points that can be used to draw a\n\t// bezier spline of the curved part of the arc; the given points are presumed to be in angular order; if the angle is more than 180 degrees\n\t// this won't work (i.e. the caller must split into more than one curve)\n\tpublic static arcControlPoints(rad:number, x1:number, y1:number, x2:number, y2:number):[number, number, number, number]\n\t{\n\t\tlet t1x = -y1, t1y = x1;\n\t\tlet t2x = y2, t2y = -x2;\n\t\tlet dx = 0.5 * (x1 + x2);\n\t\tlet dy = 0.5 * (y1 + y2);\n\t\tlet tx = 3 / 8 * (t1x + t2x);\n\t\tlet ty = 3 / 8 * (t1y + t2y);\n\t\tlet a = tx * tx + ty * ty;\n\t\tlet b = dx * tx + dy * ty;\n\t\tlet c = dx * dx + dy * dy - rad * rad;\n\t\tlet D = b * b - a * c;\n\t\tlet k = (Math.sqrt(D) - b) / a;\n\n\t\treturn [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n\t}\n\n\t// creates a bezier-type curve that renders a whole ellipse; the parameters (w,h) are the dimensions of the ellipse, where w is parallel to theta and\n\t// h is perpendicular to it (i.e. if theta is 0, it's an ordinary ellipse that is aligned with the axes); the result is imprecise: it emits a series of\n\t// points corresponding to angular increments and throws in some quadratic smoothing - it should be visually indistinguishable from the real thing\n\tpublic static createBezierEllipse(cx:number, cy:number, rw:number, rh:number, theta:number):Spline\n\t{\n\t\t/*\n\t\t\tFrom https://math.stackexchange.com/questions/2645689/what-is-the-parametric-equation-of-a-rotated-ellipse-given-the-angle-of-rotatio\n\t\t\tx(α)=Rx.cos(α).cos(θ) − Ry.sin(α).sin(θ) + Cx\n\t\t\ty(α)=Rx.cos(α).sin(θ) + Ry.sin(α).cos(θ) + Cy\n\t\t*/\n\n\t\tlet nseg = 24, npt = 2 * nseg + 1;\n\t\tlet cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n\t\tlet incrAlpha = TWOPI / nseg;\n\n\t\tlet px:number[] = new Array(npt), py:number[] = new Array(npt);\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet alpha = n * incrAlpha;\n\t\t\tlet cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n\n\t\t\tpx[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n\t\t\tpy[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n\t\t}\n\n\t\tpx[npt - 1] = px[0];\n\t\tpy[npt - 1] = py[0];\n\n\t\tlet smooth = 0.3;\n\t\tfor (let n = 0; n < nseg; n++)\n\t\t{\n\t\t\tlet n1 = (n - 1 + nseg) % nseg;\n\t\t\tlet n2 = n;\n\t\t\tlet n3 = (n + 1) % nseg;\n\t\t\tlet n4 = (n + 2) % nseg;\n\t\t\tlet x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n\t\t\tlet y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n\t\t\tpx[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n\t\t\tpy[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n\t\t}\n\n\t\tlet ctrl:boolean[] = new Array(npt);\n\t\tfor (let n = 0; n < npt; n++) ctrl[n] = (n & 1) == 1;\n\n\t\treturn {px, py, ctrl};\n\t}\n\n\t// for a set of points that are presumed to be normalised about the origin, determines the radius of the closest approach\n\tpublic static fitCircle(x:number[], y:number[]):number\n\t{\n\t\tlet dsq = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < x.length; n++) dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n\t\treturn Math.sqrt(dsq);\n\t}\n\n\t// for a set of points that are presumed to be normalised about the origin, comes up with an ellipse [w,h] that is optimised to be as large as possible\n\t// without expanding beyond any of the closing points; note that the solution is an approximation, but it is at least one that can be carried out in a\n\t// small number of iterations\n\t// NOTE: the min/max X/Y parameters are treated as blockers for the axes; this is because the algorithm uses intersection of ellipse-with-points to determine\n\t// boundaries, which unfortunately means that sometimes the ellipse can do on a runaway distortion by going *through* one of the axes; these parameters will\n\t// prevent this, but they must be precalculated; ideally the algorithm would calculate an \"internal convex hull\" to derive these points automatically\n\tpublic static fitEllipse(px:number[], py:number[], minX:number, minY:number, maxX:number, maxY:number):number[]\n\t{\n\t\t// start with a circle-of-fit, which is the worst case scenario\n\t\tlet bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n\n\t\tlet x = Vec.concat(px, [minX, maxX, 0, 0]);\n\t\tlet y = Vec.concat(py, [0, 0, minY, maxY]);\n\t\tconst sz = x.length;\n\n\t\tlet shrinkToFit = (whs:number[]):void =>\n\t\t{\n\t\t\tlet dmin = Number.POSITIVE_INFINITY;\n\t\t\tlet invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n\t\t\tfor (let n = 0; n < sz; n++) dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n\t\t\tif (dmin < 1)\n\t\t\t{\n\t\t\t\twhs[0] *= dmin;\n\t\t\t\twhs[1] *= dmin;\n\t\t\t}\n\t\t\twhs[2] = whs[0] * whs[1];\n\t\t};\n\n\t\t// keep trying to expand on one axis/shrink on both, until subsequent efforts are futile\n\t\tlet mul = 1;\n\t\tlet whsX = [0, 0, 0], whsY = [0, 0, 0];\n\t\twhile (mul > 0.001)\n\t\t{\n\t\t\twhsX[0] = bestW * (1 + mul);\n\t\t\twhsX[1] = bestH;\n\t\t\tshrinkToFit(whsX);\n\n\t\t\twhsY[0] = bestW;\n\t\t\twhsY[1] = bestH * (1 + mul);\n\t\t\tshrinkToFit(whsY);\n\n\t\t\tlet anything = false;\n\t\t\tif (whsX[2] > bestScore) {bestW = whsX[0]; bestH = whsX[1]; bestScore = whsX[2]; anything = true;}\n\t\t\tif (whsY[2] > bestScore) {bestW = whsY[0]; bestH = whsY[1]; bestScore = whsY[2]; anything = true;}\n\t\t\tif (!anything) mul *= 0.6;\n\t\t}\n\n\t\treturn [bestW, bestH];\n\t}\n\n\t// given two collections of 2D points (A and B), returns the rotate+transform matrix that best maps A onto B\n\tpublic static superimpose(ax:number[], ay:number[], bx:number[], by:number[]):number[][]\n\t{\n\t\t// special deal for size 1: just a translation; the caller must find some other way to discover the preferred rotation\n\t\tlet sz = ax.length;\n\t\tif (sz == 1)\n\t\t{\n\t\t\tlet dx = bx[0] - ax[0], dy = by[0] - ay[0];\n\t\t\treturn [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n\t\t}\n\n\t\t// special deal for size 2: rotation matrix can be derived from a single angle, rather than doing an optimisation\n\t\tif (sz == 2)\n\t\t{\n\t\t\tlet thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n\t\t\tlet delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n\t\t\tlet rot00 = cos, rot01 = -sin;\n\t\t\tlet rot10 = sin, rot11 = cos;\n\n\t\t\tlet acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n\t\t\tlet bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n\t\t\tlet rax = rot00 * acx + rot01 * acy;\n\t\t\tlet ray = rot10 * acx + rot11 * acy;\n\n\t\t\treturn [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n\t\t}\n\n\t\t// proceed with a relatively heavy-handed eigenvalue optimisation\n\t\t// adapted from: https://github.com/oleg-alexandrov/projects/blob/master/eigen/Kabsch.cpp\n\n\t\tlet invsz = 1.0 / sz;\n\t\tlet acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n\t\tlet bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n\n\t\tlet mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tmtxA.set(0, n, ax[n] - acx);\n\t\t\tmtxA.set(1, n, ay[n] - acy);\n\t\t\tmtxA.set(2, n, 0);\n\t\t\tmtxB.set(0, n, bx[n] - bcx);\n\t\t\tmtxB.set(1, n, by[n] - bcy);\n\t\t\tmtxB.set(2, n, 0);\n\t\t}\n\n\t\tlet cov = mtxA.times(mtxB.transpose());\n\t\tlet svd = new SingularValueDecomposition(cov);\n\n\t\t/* ... this doesn't seem to be necessary for 2D\n\t\tdouble d = svd.getV().times(svd.getU().transpose()).det();\n\t\tif (d > 0) d = 1; else d = -1;\n\t\tlet ident = Matrix.identity(3, 3);\n\t\tident.set(2, 2, d); // NOTE: not sure if this is necessary for 2D\n\t\tlet rotate = (svd.getV().times(ident)).times(svd.getU().transpose());*/\n\n\t\tlet rotate = svd.getV().times(svd.getU().transpose());\n\n\t\tlet rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n\t\tlet rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n\t\tlet rax = rot00 * acx + rot01 * acy;\n\t\tlet ray = rot10 * acx + rot11 * acy;\n\n\t\t// return the subset of the matrix that performs the 2D rotation & translation\n\t\treturn [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n\t}\n\n\t// takes a set of points and calculates the convex hull, in the form of an enclosing polygon\n\tpublic static convexHull(x:number[], y:number[], flatness:number):[number[], number[]]\n\t{\n\t\tlet algo = new QuickHull(x, y, sqr(flatness * 0.1));\n\t\treturn [algo.hullX, algo.hullY];\n\t}\n\n\t// takes a set of points and calculates the outline, in the form of an enclosing polygon, using the \"rolling ball\" algorithm\n\tpublic static outlinePolygon(x:number[], y:number[], diameter:number):[number[], number[]]\n\t{\n\t\t/* ... rolling ball algorithm isn't that great; the Delaunay-based method is much better\n\t\tlet algo = new RollingBall(x, y, diameter);\n\t\treturn algo.sequenceXY();*/\n\t\tlet del = new Triangulation2D(x, y);\n\t\tlet concave = del.trimConcave(diameter);\n\t\tlet idx = del.traceOutline(concave);\n\t\treturn [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n\t}\n}\n\n// implementation of the \"Quick Hull\" algorithm which calculates the convex hull that surrounds a cluster of points\nexport class QuickHull\n{\n\tprivate hsz = 0;\n\n\t// read these out for the answer\n\tpublic hullX:number[] = [];\n\tpublic hullY:number[] = [];\n\n\tconstructor(private x:number[], private y:number[], private threshSq:number)\n\t{\n\t\tconst sz = x.length;\n\n\t\tlet l = 0, r = 0;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n])) r = n;\n\t\t\tif (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n])) l = n;\n\t\t}\n\n\t\tlet al1:number[] = [], al2:number[] = [];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n != l && n != r)\n\t\t\t{\n\t\t\t\tif (this.right(r, l, n) > 0) al1.push(n);\n\t\t\t\telse al2.push(n);\n\t\t\t}\n\t\t}\n\n\t\t// recursively build part 1\n\t\tthis.hullX.push(x[r]);\n\t\tthis.hullY.push(y[r]);\n\t\tthis.quickHull(r, l, al1);\n\n\t\t// recursively build part 2\n\t\tthis.hullX.push(x[l]);\n\t\tthis.hullY.push(y[l]);\n\t\tthis.quickHull(l, r, al2);\n\n\t\t// build a polygon\n\t\tfor (let n = 0; n < this.hullX.length - 1;)\n\t\t{\n\t\t\tif (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq)\n\t\t\t{\n\t\t\t\tthis.hullX.splice(n + 1, 1);\n\t\t\t\tthis.hullY.splice(n + 1, 1);\n\t\t\t}\n\t\t\telse n++;\n\t\t}\n\t}\n\n\t// processes a segment, in a given direction\n\tprivate quickHull(a:number, b:number, al:number[]):void\n\t{\n\t\tif (al.length == 0) return;\n\n\t\tlet c = this.furthestPoint(a, b, al);\n\t\tlet al1:number[] = [], al2:number[] = [];\n\t\tfor (let n = 0; n < al.length; n++)\n\t\t{\n\t\t\tlet p = al[n];\n\t\t\tif (p == a || p == b) continue;\n\t\t\tif (this.right(a, c, p) > 0) al1.push(p);\n\t\t\telse if (this.right(c, b, p) > 0) al2.push(p);\n\t\t}\n\n\t\tthis.quickHull(a, c, al1);\n\n\t\tthis.hullX.push(this.x[c]);\n\t\tthis.hullY.push(this.y[c]);\n\n\t\tthis.quickHull(c, b, al2);\n\t}\n\n\t// returns >0 if p is to the right of a-b, or <0 if to the left\n\tprivate right(a:number, b:number, p:number):number\n\t{\n\t\tconst x = this.x, y = this.y;\n\t\treturn (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n\t}\n\n\t// square distance point p to line a-b\n\tprivate distance(a:number, b:number, p:number):number\n\t{\n\t\tconst x = this.x, y = this.y;\n\t\tlet u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n\t\tlet ux = x[a] + u * (x[b] - x[a]);\n\t\tlet uy = y[a] + u * (y[b] - y[a]);\n\t\treturn ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n\t}\n\n\t// finds the furthest-away point from within the sub-list\n\tprivate furthestPoint(a:number, b:number, al:number[]):number\n\t{\n\t\tlet maxDist = -1;\n\t\tlet maxPos = -1;\n\t\tfor (let n = 0; n < al.length; n++)\n\t\t{\n\t\t\tlet p = al[n];\n\t\t\tif (p == a || p == b) continue;\n\t\t\tlet dist = this.distance(a, b, p);\n\t\t\tif (dist > maxDist)\n\t\t\t{\n\t\t\t\tmaxDist = dist;\n\t\t\t\tmaxPos = p;\n\t\t\t}\n\t\t}\n\t\treturn maxPos;\n\t}\n}\n\n// implementation of the \"Rolling Ball\" algorithm which traces the outline of a group of points using a granularity threshold (the \"ball diameter\"); note that the points must\n// be dense enough so that the \"ball\" can be rolled around the outside without \"falling in\", in which case the result will be null\nexport class RollingBall\n{\n\tpublic sequence:number[] = []; // the indices tracing the outline; set to null if it failed\n\n\tconstructor(public x:number[], public y:number[], diameter:number)\n\t{\n\t\tconst sz = x.length;\n\t\tconst threshSq = diameter * diameter;\n\n\t\tlet first = Vec.idxMax(x), latest = first;\n\t\tlet direction = 0.0; // radians (pointing to the right)\n\t\tlet visited = Vec.booleanArray(false, sz);\n\t\tthis.sequence.push(first);\n\n\t\tlet roll = ():number =>\n\t\t{\n\t\t\tlet bestIdx = -1;\n\t\t\tlet bestDelta = 0, bestTheta = 0;\n\t\t\tfor (let n = 0; n < sz; n++) if (n != latest && !visited[n])\n\t\t\t{\n\t\t\t\tlet dx = x[n] - x[latest], dy = y[n] - y[latest];\n\t\t\t\tlet dsq = norm2_xy(dx, dy);\n\t\t\t\tif (dsq == 0 || dsq > threshSq) continue;\n\t\t\t\tlet theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n\t\t\t\tif (bestIdx < 0 || delta < bestDelta)\n\t\t\t\t{\n\t\t\t\t\tbestIdx = n;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestTheta = theta;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bestIdx < 0) return -1;\n\n\t\t\tdirection = angleNorm(bestTheta - 0.5 * Math.PI);\n\t\t\tvisited[bestIdx] = true;\n\t\t\treturn bestIdx;\n\t\t};\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet next = roll();\n\t\t\tif (next < 0) {this.sequence = null; return;} // failure\n\t\t\tif (next == first) break;\n\t\t\tthis.sequence.push(next);\n\t\t\tlatest = next;\n\t\t}\n\t}\n\n\t// formulate the results in terms of coordinates, as an alternative to just looking at the sequence indices\n\tpublic sequencePos():Pos[]\n\t{\n\t\tif (!this.sequence) return null;\n\t\tlet posList:Pos[] = [];\n\t\tfor (let n of this.sequence) posList.push(new Pos(this.x[n], this.y[n]));\n\t\treturn posList;\n\t}\n\tpublic sequenceXY():[number[], number[]]\n\t{\n\t\tif (!this.sequence) return [null, null];\n\t\tlet px:number[] = [], py:number[] = [];\n\t\tfor (let n of this.sequence) {px.push(this.x[n]); py.push(this.y[n]);}\n\t\treturn [px, py];\n\t}\n}\n\n/*\n\tPos, Size, Box, Oval, Line: convenient trivial classes which save repetition\n*/\n\nexport class Pos\n{\n\tpublic x:number;\n\tpublic y:number;\n\n\tpublic static zero():Pos {return new Pos();}\n\tpublic static fromArray(src:number[]):Pos {return new Pos(src[0], src[1]);}\n\tconstructor(x?:number, y?:number)\n\t{\n\t\tthis.x = x == null ? 0 : x;\n\t\tthis.y = y == null ? 0 : y;\n\t}\n\n\tpublic clone():Pos {return new Pos(this.x, this.y);}\n\tpublic equals(other:Pos):boolean {return this.x == other.x && this.y == other.y;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\tpublic withScaleBy(mag:number):Pos\n\t{\n\t\treturn new Pos(this.x * mag, this.y * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Pos\n\t{\n\t\treturn new Pos(this.x + dx, this.y + dy);\n\t}\n\n\tpublic toString():string {return '[' + this.x + ',' + this.y + ']';}\n}\n\nexport class Size\n{\n\tpublic w:number;\n\tpublic h:number;\n\n\tpublic static zero():Size {return new Size();}\n\tpublic static fromArray(src:number[]):Size {return new Size(src[0], src[1]);}\n\tconstructor(w?:number, h?:number)\n\t{\n\t\tthis.w = w == null ? 0 : w;\n\t\tthis.h = h == null ? 0 : h;\n\t}\n\n\tpublic clone():Size {return new Size(this.w, this.h);}\n\tpublic equals(other:Size):boolean {return this.w == other.w && this.h == other.h;}\n\n\tpublic isZero():boolean {return this.w == 0 && this.h == 0;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.w *= mag;\n\t\tthis.h *= mag;\n\t}\n\tpublic fitInto(maxW:number, maxH:number):void\n\t{\n\t\tlet scale = 1;\n\t\tif (this.w > maxW) scale = maxW / this.w;\n\t\tif (this.h > maxH) scale = Math.min(scale, maxH / this.h);\n\t\tif (scale < 1) this.scaleBy(scale);\n\t}\n\n\tpublic withScaleBy(mag:number):Size\n\t{\n\t\treturn new Size(this.w * mag, this.h * mag);\n\t}\n\n\tpublic toString():string {return '[' + this.w + ',' + this.h + ']';}\n}\n\nexport class Box\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic w:number;\n\tpublic h:number;\n\n\tpublic static zero():Box {return new Box();}\n\tpublic static fromBounds(x1:number, y1:number, x2:number, y2:number) {return new Box(x1, y1, x2 - x1, y2 - y1);}\n\tpublic static fromSize(sz:Size):Box {return new Box(0, 0, sz.w, sz.h);}\n\tpublic static fromOval(oval:Oval):Box {return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh);}\n\tpublic static fromArray(src:number[]):Box {return new Box(src[0], src[1], src[2], src[3]);}\n\tconstructor(x?:number, y?:number, w?:number, h?:number)\n\t{\n\t\tthis.x = x == null ? 0 : x;\n\t\tthis.y = y == null ? 0 : y;\n\t\tthis.w = w == null ? 0 : w;\n\t\tthis.h = h == null ? 0 : h;\n\t}\n\n\tpublic clone():Box {return new Box(this.x, this.y, this.w, this.h);}\n\tpublic equals(other:Box):boolean {return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h;}\n\n\tpublic getPos():Pos {return new Pos(this.x, this.y);}\n\tpublic setPos(pos:Pos):void\n\t{\n\t\tthis.x = pos.x;\n\t\tthis.y = pos.y;\n\t}\n\tpublic getSize():Size {return new Size(this.w, this.h);}\n\tpublic setSize(sz:Size):void\n\t{\n\t\tthis.w = sz.w;\n\t\tthis.h = sz.h;\n\t}\n\n\tpublic minX():number {return this.x;}\n\tpublic minY():number {return this.y;}\n\tpublic midX():number {return this.x + 0.5 * this.w;}\n\tpublic midY():number {return this.y + 0.5 * this.h;}\n\tpublic maxX():number {return this.x + this.w;}\n\tpublic maxY():number {return this.y + this.h;}\n\tpublic area():number {return this.w * this.h;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x *= mag;\n\t\tthis.y *= mag;\n\t\tthis.w *= mag;\n\t\tthis.h *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\tpublic grow(bx:number, by:number):void\n\t{\n\t\tthis.x -= bx;\n\t\tthis.y -= by;\n\t\tthis.w += 2 * bx;\n\t\tthis.h += 2 * by;\n\t}\n\n\tpublic withScaleBy(mag:number):Box\n\t{\n\t\treturn new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Box\n\t{\n\t\treturn new Box(this.x + dx, this.y + dy, this.w, this.h);\n\t}\n\tpublic withGrow(bx:number, by:number):Box\n\t{\n\t\treturn new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n\t}\n\n\tpublic intersects(other:Box):boolean\n\t{\n\t\treturn GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n\t}\n\n\t// returns the actual intersection box; note that if they don't intersect at all, things get weird\n\tpublic intersection(other:Box):Box\n\t{\n\t\tlet x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n\t\tlet x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n\t\tlet x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n\t\treturn new Box(x5, y5, x6 - x5, y6 - y5);\n\t}\n\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\treturn x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n\t}\n\n\tpublic union(other:Box):Box\n\t{\n\t\tlet x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n\t\tlet y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n\t\treturn new Box(x1, y1, x2 - x1, y2 - y1);\n\t}\n\n\tpublic isZero():boolean {return this.w == 0 && this.h == 0;} // deprecated\n\tpublic isEmpty():boolean {return this.w == 0 && this.h == 0;}\n\tpublic notEmpty():boolean {return this.w > 0 || this.h > 0;}\n\n\tpublic toString():string {return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']';}\n}\n\nexport class Oval\n{\n\tpublic cx:number;\n\tpublic cy:number;\n\tpublic rw:number;\n\tpublic rh:number;\n\n\tpublic static zero():Oval {return new Oval();}\n\tpublic static fromBox(box:Box):Oval {return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h);}\n\tpublic static fromArray(src:number[]):Oval {return new Oval(src[0], src[1], src[2], src[3]);}\n\tconstructor(cx?:number, cy?:number, rw?:number, rh?:number)\n\t{\n\t\tthis.cx = cx == null ? 0 : cx;\n\t\tthis.cy = cy == null ? 0 : cy;\n\t\tthis.rw = rw == null ? 0 : rw;\n\t\tthis.rh = rh == null ? 0 : rh;\n\t}\n\n\tpublic clone():Oval {return new Oval(this.cx, this.cy, this.rw, this.rh);}\n\n\tpublic setCentre(pos:Pos):void\n\t{\n\t\tthis.cx = pos.x;\n\t\tthis.cy = pos.y;\n\t}\n\tpublic setRadius(sz:Size):void\n\t{\n\t\tthis.rw = sz.w;\n\t\tthis.rh = sz.h;\n\t}\n\n\tpublic minX():number {return this.cx - this.rw;}\n\tpublic minY():number {return this.cy - this.rh;}\n\tpublic maxX():number {return this.cx + this.rw;}\n\tpublic maxY():number {return this.cy + this.rh;}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.cx *= mag;\n\t\tthis.cy *= mag;\n\t\tthis.rw *= mag;\n\t\tthis.rh *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.cx += dx;\n\t\tthis.cy += dy;\n\t}\n\n\tpublic withScaleBy(mag:number):Oval\n\t{\n\t\treturn new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n\t}\n\tpublic withOffsetBy(dx:number, dy:number):Oval\n\t{\n\t\treturn new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n\t}\n\n\tpublic contains(x:number, y:number):boolean\n\t{\n\t\tlet dx = x - this.cx, dy = y - this.cy;\n\t\tlet a = dx / this.rw, b = dy / this.rh;\n\t\treturn a * a + b * b <= 1;\n\t}\n\n\tpublic toString():string {return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']';}\n}\n\nexport class Line\n{\n\tpublic x1:number;\n\tpublic y1:number;\n\tpublic x2:number;\n\tpublic y2:number;\n\n\tpublic static zero():Line {return new Line();}\n\tpublic static fromPos(pos1:Pos, pos2:Pos):Line {return new Line(pos1.x, pos1.y, pos2.x, pos2.y);}\n\tconstructor(x1?:number, y1?:number, x2?:number, y2?:number)\n\t{\n\t\tthis.x1 = x1 == null ? 0 : x1;\n\t\tthis.y1 = y1 == null ? 0 : y1;\n\t\tthis.x2 = x2 == null ? 0 : x2;\n\t\tthis.y2 = y2 == null ? 0 : y2;\n\t}\n\n\tpublic clone():Line {return new Line(this.x1, this.y1, this.x2, this.y2);}\n\n\tpublic setPos1(pos:Pos):void\n\t{\n\t\tthis.x1 = pos.x;\n\t\tthis.y1 = pos.y;\n\t}\n\tpublic setPos2(pos:Pos):void\n\t{\n\t\tthis.x2 = pos.x;\n\t\tthis.y2 = pos.y;\n\t}\n\n\tpublic minX():number {return Math.min(this.x1, this.x2);}\n\tpublic minY():number {return Math.min(this.y1, this.y2);}\n\tpublic maxX():number {return Math.max(this.x1, this.x2);}\n\tpublic maxY():number {return Math.max(this.y1, this.y2);}\n\n\tpublic scaleBy(mag:number):void\n\t{\n\t\tif (mag == 1) return;\n\t\tthis.x1 *= mag;\n\t\tthis.y1 *= mag;\n\t\tthis.x2 *= mag;\n\t\tthis.y2 *= mag;\n\t}\n\tpublic offsetBy(dx:number, dy:number):void\n\t{\n\t\tthis.x1 += dx;\n\t\tthis.y1 += dy;\n\t\tthis.x2 += dx;\n\t\tthis.y2 += dy;\n\t}\n\n\tpublic toString():string {return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']';}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from './Vec';\n\n/*\n\tUseful matrix functionality.\n*/\n\nexport class Matrix\n{\n\tpublic A:number[][];\n\n\t// create a blank matrix with given dimensions; m = height, n = width\n\tconstructor(public m:number, public n:number, s:number = 0)\n\t{\n\t\tif (m == 0) return;\n\t\tthis.A = new Array(m);\n\t\tfor (let i = 0; i < m; i++) this.A[i] = Vec.numberArray(s, n);\n\t}\n\n\tpublic static fromArray(A:number[][]):Matrix\n\t{\n\t\tlet mtx = new Matrix(0, 0);\n\t\tmtx.A = A;\n\t\tmtx.m = A.length;\n\t\tmtx.n = A[0].length;\n\t\treturn mtx;\n\t}\n\n\tpublic clone():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet mtx = new Matrix(m, n);\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) mtx.A[i][j] = A[i][j];\n\t\treturn mtx;\n\t}\n\n\tpublic get numRows():number {return this.m;}\n\tpublic get numCols():number {return this.n;}\n\tpublic get(i:number, j:number):number {return this.A[i][j];}\n\tpublic set(i:number, j:number, v:number):void {this.A[i][j] = v;}\n\n\tpublic transpose():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(n, m);\n\t\tconst C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[j][i] = A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic norm1():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet f = 0;\n\t\tfor (let j = 0; j < n; j++)\n\t\t{\n\t\t\tlet s = 0;\n\t\t\tfor (let i = 0; i < m; i++) s += Math.abs(A[i][j]);\n\t\t\tf = Math.max(f, s);\n\t\t}\n\t\treturn f;\n\t}\n\n/*\n\tpublic double norm2()\n\t{\n\t\treturn (new SingularValueDecomposition(this).norm2());\n\t}\n*/\n\n\tpublic normInf():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet f = 0;\n\t\tfor (let i = 0; i < m; i++)\n\t\t{\n\t\t\tlet s = 0;\n\t\t\tfor (let j = 0; j < n; j++) s += Math.abs(A[i][j]);\n\t\t\tf = Math.max(f, s);\n\t\t}\n\t\treturn f;\n\t}\n\n/*\n\tpublic double normF()\n\t{\n\t\tdouble f = 0;\n\t\tfor (let i = 0; i < m; i++)\n\t\t{\n\t\t\tfor (let j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tf = Maths.hypot(f, A[i][j]);\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n*/\n\n\tpublic uminus():Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = -A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic plus(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] + B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic plusEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] + B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic minus(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] - B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic minusEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] - B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayTimes(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] * B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayTimesEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] * B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayRightDivide(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = A[i][j] / B.A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayRightDivideEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = A[i][j] / B.A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic arrayLeftDivide(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = B.A[i][j] / A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic arrayLeftDivideEquals(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = B.A[i][j] / A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic scalarTimes(s:number):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, n), C = X.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) C[i][j] = s * A[i][j];\n\t\treturn X;\n\t}\n\n\tpublic scalarTimesEquals(s:number):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = s * A[i][j];\n\t\treturn this;\n\t}\n\n\tpublic times(B:Matrix):Matrix\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet X = new Matrix(m, B.n);\n\t\tlet C = X.A, Bcolj:number[] = new Array(n);\n\t\tfor (let j = 0; j < B.n; j++)\n\t\t{\n\t\t\tfor (let k = 0; k < n; k++) Bcolj[k] = B.A[k][j];\n\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t{\n\t\t\t\tlet Arowi = A[i];\n\t\t\t\tlet s = 0;\n\t\t\t\tfor (let k = 0; k < n; k++) s += Arowi[k] * Bcolj[k];\n\t\t\t\tC[i][j] = s;\n\t\t\t}\n\t\t}\n\t\treturn X;\n\t}\n\n\t/*public LUDecomposition lu()\n\t{\n\t\treturn new LUDecomposition(this);\n\t}\n\n\tpublic QRDecomposition qr()\n\t{\n\t\treturn new QRDecomposition(this);\n\t}\n\n\tpublic CholeskyDecomposition chol()\n\t{\n\t\treturn new CholeskyDecomposition(this);\n\t}\n\n\tpublic SingularValueDecomposition svd()\n\t{\n\t\treturn new SingularValueDecomposition(this);\n\t}\n\n\tpublic EigenvalueDecomposition eig()\n\t{\n\t\treturn new EigenvalueDecomposition(this);\n\t}\n\n\tpublic Matrix solve(Matrix B)\n\t{\n\t\treturn (m == n ? (new LUDecomposition(this)).solve(B) : (new QRDecomposition(this)).solve(B));\n\t}\n\n\tpublic Matrix solveTranspose(Matrix B)\n\t{\n\t\treturn transpose().solve(B.transpose());\n\t}\n\n\tpublic Matrix inverse()\n\t{\n\t\treturn solve(identity(m, m));\n\t}\n\n\tpublic double det()\n\t{\n\t\treturn new LUDecomposition(this).det();\n\t}*/\n\n\tpublic rank():number\n\t{\n\t\treturn new SingularValueDecomposition(this).rank();\n\t}\n\n\tpublic cond():number\n\t{\n\t\treturn new SingularValueDecomposition(this).cond();\n\t}\n\n\tpublic trace():number\n\t{\n\t\tconst {A, m, n} = this;\n\t\tlet t = 0;\n\t\tfor (let i = 0; i < Math.min(m, n); i++)\n\t\t{\n\t\t\tt += A[i][i];\n\t\t}\n\t\treturn t;\n\t}\n\n\tpublic static identity(m:number, n:number):Matrix\n\t{\n\t\tlet mtx = new Matrix(m, n);\n\t\tlet A = mtx.A;\n\t\tfor (let i = 0; i < m; i++) for (let j = 0; j < n; j++) A[i][j] = (i == j ? 1.0 : 0.0);\n\t\treturn mtx;\n\t}\n\n\tpublic toString():string\n\t{\n\t\tlet lines:string[] = ['['];\n\t\tfor (let row of this.A) lines.push(JSON.stringify(row));\n\t\tlines.push(']');\n\t\treturn lines.join('\\n');\n\t}\n}\n\nexport class SingularValueDecomposition\n{\n\tprivate U:number[][];\n\tprivate V:number[][];\n\tprivate s:number[];\n\tprivate m:number;\n\tprivate n:number;\n\n\tconstructor(mtx:Matrix)\n\t{\n\t\tlet A = mtx.A;\n\t\tlet m = this.m = mtx.m;\n\t\tlet n = this.n = mtx.n;\n\n\t\tlet nu = Math.min(m, n);\n\t\tlet s = this.s = new Array(Math.min(m + 1, n));\n\t\tlet U = this.U = new Array(m);\n\t\tlet V = this.V = new Array(n);\n\t\tfor (let i = 0; i < m; i++) U[i] = Vec.numberArray(0, nu);\n\t\tfor (let j = 0; j < n; j++) V[j] = Vec.numberArray(0, n);\n\t\tlet e:number[] = new Array(n);\n\t\tlet work:number[] = new Array(m);\n\t\tlet wantu = true, wantv = true;\n\n\t\tlet nct = Math.min(m - 1, n);\n\t\tlet nrt = Math.max(0, Math.min(n - 2, m));\n\t\tfor (let k = 0; k < Math.max(nct, nrt); k++)\n\t\t{\n\t\t\tif (k < nct)\n\t\t\t{\n\t\t\t\ts[k] = 0;\n\t\t\t\tfor (let i = k; i < m; i++) s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n\t\t\t\tif (s[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tif (A[k][k] < 0.0) s[k] = -s[k];\n\t\t\t\t\tfor (let i = k; i < m; i++) A[i][k] /= s[k];\n\t\t\t\t\tA[k][k] += 1.0;\n\t\t\t\t}\n\t\t\t\ts[k] = -s[k];\n\t\t\t}\n\t\t\tfor (let j = k + 1; j < n; j++)\n\t\t\t{\n\t\t\t\tif ((k < nct) && (s[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tlet t = 0;\n\t\t\t\t\tfor (let i = k; i < m; i++) t += A[i][k] * A[i][j];\n\t\t\t\t\tt = -t / A[k][k];\n\t\t\t\t\tfor (let i = k; i < m; i++) A[i][j] += t * A[i][k];\n\t\t\t\t}\n\t\t\t\te[j] = A[k][j];\n\t\t\t}\n\t\t\tif (wantu && (k < nct))\n\t\t\t{\n\t\t\t\tfor (let i = k; i < m; i++) U[i][k] = A[i][k];\n\t\t\t}\n\t\t\tif (k < nrt)\n\t\t\t{\n\t\t\t\te[k] = 0;\n\t\t\t\tfor (let i = k + 1; i < n; i++) e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n\t\t\t\tif (e[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tif (e[k + 1] < 0.0) e[k] = -e[k];\n\t\t\t\t\tfor (let i = k + 1; i < n; i++) e[i] /= e[k];\n\t\t\t\t\te[k + 1] += 1.0;\n\t\t\t\t}\n\t\t\t\te[k] = -e[k];\n\t\t\t\tif ((k + 1 < m) && (e[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = k + 1; i < m; i++) work[i] = 0.0;\n\t\t\t\t\tfor (let j = k + 1; j < n; j++) for (let i = k + 1; i < m; i++) work[i] += e[j] * A[i][j];\n\t\t\t\t\tfor (let j = k + 1; j < n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = -e[j] / e[k + 1];\n\t\t\t\t\t\tfor (let i = k + 1; i < m; i++) A[i][j] += t * work[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (wantv)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = k + 1; i < n; i++) V[i][k] = e[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet p = Math.min(n, m + 1);\n\t\tif (nct < n) s[nct] = A[nct][nct];\n\t\tif (m < p) s[p - 1] = 0.0;\n\t\tif (nrt + 1 < p) e[nrt] = A[nrt][p - 1];\n\t\te[p - 1] = 0.0;\n\n\t\tif (wantu)\n\t\t{\n\t\t\tfor (let j = nct; j < nu; j++)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < m; i++) U[i][j] = 0.0;\n\t\t\t\tU[j][j] = 1.0;\n\t\t\t}\n\t\t\tfor (let k = nct - 1; k >= 0; k--)\n\t\t\t{\n\t\t\t\tif (s[k] != 0.0)\n\t\t\t\t{\n\t\t\t\t\tfor (let j = k + 1; j < nu; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = 0;\n\t\t\t\t\t\tfor (let i = k; i < m; i++) t += U[i][k] * U[i][j];\n\t\t\t\t\t\tt = -t / U[k][k];\n\t\t\t\t\t\tfor (let i = k; i < m; i++) U[i][j] += t * U[i][k];\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = k; i < m; i++) U[i][k] = -U[i][k];\n\t\t\t\t\tU[k][k] = 1.0 + U[k][k];\n\t\t\t\t\tfor (let i = 0; i < k - 1; i++) U[i][k] = 0.0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < m; i++) U[i][k] = 0.0;\n\t\t\t\t\tU[k][k] = 1.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wantv)\n\t\t{\n\t\t\tfor (let k = n - 1; k >= 0; k--)\n\t\t\t{\n\t\t\t\tif ((k < nrt) && (e[k] != 0.0))\n\t\t\t\t{\n\t\t\t\t\tfor (let j = k + 1; j < nu; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet t = 0;\n\t\t\t\t\t\tfor (let i = k + 1; i < n; i++) t += V[i][k] * V[i][j];\n\t\t\t\t\t\tt = -t / V[k + 1][k];\n\t\t\t\t\t\tfor (let i = k + 1; i < n; i++) V[i][j] += t * V[i][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < n; i++) V[i][k] = 0.0;\n\t\t\t\tV[k][k] = 1.0;\n\t\t\t}\n\t\t}\n\n\t\tlet pp = p - 1;\n\t\tlet iter = 0;\n\t\tlet eps = Math.pow(2.0, -52.0);\n\t\tlet tiny = Math.pow(2.0, -966.0);\n\t\twhile (p > 0)\n\t\t{\n\t\t\tlet k:number, kase:number;\n\t\t\tfor (k = p - 2; k >= -1; k--)\n\t\t\t{\n\t\t\t\tif (k == -1) break;\n\t\t\t\tif (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1])))\n\t\t\t\t{\n\t\t\t\t\te[k] = 0.0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (k == p - 2)\n\t\t\t{\n\t\t\t\tkase = 4;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet ks:number;\n\t\t\t\tfor (ks = p - 1; ks >= k; ks--)\n\t\t\t\t{\n\t\t\t\t\tif (ks == k) break;\n\t\t\t\t\tlet t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n\t\t\t\t\tif (Math.abs(s[ks]) <= tiny + eps * t)\n\t\t\t\t\t{\n\t\t\t\t\t\ts[ks] = 0.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ks == k) kase = 3;\n\t\t\t\telse if (ks == p - 1) kase = 1;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tkase = 2;\n\t\t\t\t\tk = ks;\n\t\t\t\t}\n\t\t\t}\n\t\t\tk++;\n\n\t\t\tif (kase == 1)\n\t\t\t{\n\t\t\t\tlet f = e[p - 2];\n\t\t\t\te[p - 2] = 0.0;\n\t\t\t\tfor (let j = p - 2; j >= k; j--)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(s[j], f);\n\t\t\t\t\tlet cs = s[j] / t;\n\t\t\t\t\tlet sn = f / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tif (j != k)\n\t\t\t\t\t{\n\t\t\t\t\t\tf = -sn * e[j - 1];\n\t\t\t\t\t\te[j - 1] = cs * e[j - 1];\n\t\t\t\t\t}\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * V[i][j] + sn * V[i][p - 1];\n\t\t\t\t\t\t\tV[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n\t\t\t\t\t\t\tV[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (kase == 2)\n\t\t\t{\n\t\t\t\tlet f = e[k - 1];\n\t\t\t\te[k - 1] = 0.0;\n\t\t\t\tfor (let j = k; j < p; j++)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(s[j], f);\n\t\t\t\t\tlet cs = s[j] / t;\n\t\t\t\t\tlet sn = f / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tf = -sn * e[j];\n\t\t\t\t\te[j] = cs * e[j];\n\t\t\t\t\tif (wantu)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * U[i][j] + sn * U[i][k - 1];\n\t\t\t\t\t\t\tU[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n\t\t\t\t\t\t\tU[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (kase == 3)\n\t\t\t{\n\t\t\t\tlet scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n\t\t\t\tlet sp = s[p - 1] / scale;\n\t\t\t\tlet spm1 = s[p - 2] / scale;\n\t\t\t\tlet epm1 = e[p - 2] / scale;\n\t\t\t\tlet sk = s[k] / scale;\n\t\t\t\tlet ek = e[k] / scale;\n\t\t\t\tlet b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n\t\t\t\tlet c = (sp * epm1) * (sp * epm1);\n\t\t\t\tlet shift = 0.0;\n\t\t\t\tif ((b != 0.0) || (c != 0.0))\n\t\t\t\t{\n\t\t\t\t\tshift = Math.sqrt(b * b + c);\n\t\t\t\t\tif (b < 0.0) shift = -shift;\n\t\t\t\t\tshift = c / (b + shift);\n\t\t\t\t}\n\t\t\t\tlet f = (sk + sp) * (sk - sp) + shift;\n\t\t\t\tlet g = sk * ek;\n\n\t\t\t\tfor (let j = k; j < p - 1; j++)\n\t\t\t\t{\n\t\t\t\t\tlet t = SingularValueDecomposition.hypot(f, g);\n\t\t\t\t\tlet cs = f / t;\n\t\t\t\t\tlet sn = g / t;\n\t\t\t\t\tif (j != k) e[j - 1] = t;\n\t\t\t\t\tf = cs * s[j] + sn * e[j];\n\t\t\t\t\te[j] = cs * e[j] - sn * s[j];\n\t\t\t\t\tg = sn * s[j + 1];\n\t\t\t\t\ts[j + 1] = cs * s[j + 1];\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * V[i][j] + sn * V[i][j + 1];\n\t\t\t\t\t\t\tV[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n\t\t\t\t\t\t\tV[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tt = SingularValueDecomposition.hypot(f, g);\n\t\t\t\t\tcs = f / t;\n\t\t\t\t\tsn = g / t;\n\t\t\t\t\ts[j] = t;\n\t\t\t\t\tf = cs * e[j] + sn * s[j + 1];\n\t\t\t\t\ts[j + 1] = -sn * e[j] + cs * s[j + 1];\n\t\t\t\t\tg = sn * e[j + 1];\n\t\t\t\t\te[j + 1] = cs * e[j + 1];\n\t\t\t\t\tif (wantu && (j < m - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = cs * U[i][j] + sn * U[i][j + 1];\n\t\t\t\t\t\t\tU[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n\t\t\t\t\t\t\tU[i][j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te[p - 2] = f;\n\t\t\t\titer = iter + 1;\n\t\t\t}\n\t\t\telse if (kase == 4)\n\t\t\t{\n\t\t\t\tif (s[k] <= 0.0)\n\t\t\t\t{\n\t\t\t\t\ts[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n\t\t\t\t\tif (wantv)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i <= pp; i++) V[i][k] = -V[i][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (k < pp)\n\t\t\t\t{\n\t\t\t\t\tif (s[k] >= s[k + 1]) break;\n\t\t\t\t\tlet t = s[k];\n\t\t\t\t\ts[k] = s[k + 1];\n\t\t\t\t\ts[k + 1] = t;\n\t\t\t\t\tif (wantv && (k < n - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < n; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = V[i][k + 1];\n\t\t\t\t\t\t\tV[i][k + 1] = V[i][k];\n\t\t\t\t\t\t\tV[i][k] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wantu && (k < m - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < m; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt = U[i][k + 1];\n\t\t\t\t\t\t\tU[i][k + 1] = U[i][k];\n\t\t\t\t\t\t\tU[i][k] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\titer = 0;\n\t\t\t\tp--;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getU():Matrix\n\t{\n\t\treturn Matrix.fromArray(this.U);\n\t}\n\tpublic getV():Matrix\n\t{\n\t\treturn Matrix.fromArray(this.V);\n\t}\n\tpublic getSingularValues():number[]\n\t{\n\t\treturn this.s;\n\t}\n\n\tpublic getS():Matrix\n\t{\n\t\tconst {n} = this;\n\t\tlet X = new Matrix(n, n, 0);\n\t\tlet S = X.A;\n\t\tfor (let i = 0; i < n; i++) S[i][i] = this.s[i];\n\t\treturn X;\n\t}\n\n\tpublic norm2():number\n\t{\n\t\treturn this.s[0];\n\t}\n\n\tpublic cond():number\n\t{\n\t\tconst {m, n, s} = this;\n\t\treturn s[0] / s[Math.min(m, n) - 1];\n\t}\n\n\tpublic rank():number\n\t{\n\t\tconst {m, n, s} = this;\n\t\tlet eps = Math.pow(2.0, -52.0);\n\t\tlet tol = Math.max(m, n) * s[0] * eps;\n\t\tlet r = 0;\n\t\tfor (let i = 0; i < s.length; i++) if (s[i] > tol) r++;\n\t\treturn r;\n\t}\n\n\tpublic static hypot(a:number, b:number):number\n\t{\n\t\tlet r;\n\t\tif (Math.abs(a) > Math.abs(b))\n\t\t{\n\t\t\tr = b / a;\n\t\t\tr = Math.abs(a) * Math.sqrt(1 + r * r);\n\t\t}\n\t\telse if (b != 0)\n\t\t{\n\t\t\tr = a / b;\n\t\t\tr = Math.abs(b) * Math.sqrt(1 + r * r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = 0.0;\n\t\t}\n\t\treturn r;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from './Vec';\n\n/*\n\tPseudorandom number generator. Uses an implementation of linear congruential generator.\n*/\n\nexport class Random\n{\n\tprivate m = 0x8000000;\n\tprivate invMN = 1.0 / (this.m - 1);\n\tprivate a = 1103515245;\n\tprivate c = 5425153011;\n\tprivate state:number;\n\n\tconstructor(private seed:number = null)\n\t{\n\t\tif (seed == null)\n\t\t\tthis.state = Math.floor(Math.random() * (this.m - 1));\n\t\telse\n\t\t\tthis.state = seed;\n  \t}\n\n\t// returns a positive 31-bit integer\n\tpublic next():number\n\t{\n\t\tthis.state = (this.a * this.state + this.c) % this.m;\n\t\treturn this.state;\n\t}\n\n\t// returns an integer between 0 and max-1\n\tpublic int(max:number):number\n\t{\n\t\treturn max <= 0 ? 0 : this.next() % max;\n\t}\n\n\t// returns a floating point integer between 0 and 1\n\tpublic float():number\n\t{\n\t\treturn this.next() * this.invMN;\n\t}\n\n\t// returns a number between 0 and length-1 of the given array\n\tpublic index(arr:any[]):number\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\treturn this.int(arr.length);\n\t}\n\n\t// returns a randomly selected element from an array\n\tpublic peek<T>(arr:T[]):T\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\treturn arr[this.int(arr.length)];\n\t}\n\n\t// returns a randomly selected element from an array, and also removes it\n\tpublic pull<T>(arr:T[]):T\n\t{\n\t\tif (Vec.isBlank(arr)) return null;\n\t\tlet idx = this.int(arr.length), val = arr[idx];\n\t\tarr.splice(idx, 1);\n\t\treturn val;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2018 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {colourCode} from './util';\n\n// public theme definition: the values for these colours can be customised; they will be converted into CSS as soon as the initialisation\n// function is called (see below); the general idea is a tetrachrome: most content is monochrome (black text on white background by default),\n// with interesting content marked in the \"lowlight\" colour (turquoise), and active content in \"highlight\" (green)\nexport class Theme\n{\n\t// e.g. 'http://servername/MolSync'; the REST services hang off of this url: ${BASE_URL}/REST/...\n\tpublic static BASE_URL:string = null;\n\n\t// base for static resources that can be fetched without going through the RPC mechanism\n\tpublic static RESOURCE_URL:string = null;\n\n\t// these are open to modification\n\tpublic static foreground = 0x000000;\n\tpublic static background = 0xFFFFFF;\n\tpublic static lowlight = 0x24D0D0;\n\tpublic static lowlightEdge1 = 0x47D5D2;\n\tpublic static lowlightEdge2 = 0x008FD1;\n\tpublic static highlight = 0x00FF00;\n\tpublic static highlightEdge1 = 0x00CA59;\n\tpublic static highlightEdge2 = 0x008650;\n\tpublic static error = 0xFF0000;\n\n\t/* brought over from MMDS app; consider reinstating them\n\tpublic static dialogBackground = 0x20194C66;\n\tpublic static dialogActiveArea1 = 0x20194C26;\n\tpublic static dialogActiveArea2 = 0x20000026;\n\tpublic static buttonShade1 = 0x40236866;;\n\tpublic static buttonShade2 = 0x40004866;;\n\tpublic static buttonSelected1 = 0x3346D4D2;\n\tpublic static buttonSelected2 = 0x33008FD2;\n\tpublic static buttonHighlighted1 = 0x4C00C958;\n\tpublic static buttonHighlighted2 = 0x4C008550;\n\tpublic static current = 0x00A43C;\n\tpublic static currentBorder = 0x40FFC0;\n\tpublic static selected = 0x009488;\n\tpublic static bankTranslucent = 0xC0309070;*/\n}\n\n// to be called as soon as possible from within any environment that uses WebMolKit functionality\nexport function initWebMolKit(resourcePath:string):void\n{\n\tTheme.RESOURCE_URL = resourcePath;\n\n\t// code below here assumes that DOM is defined (which isn't the case for web workers)\n\ttry {let _ = document;}\n\tcatch (e) {return;}\n\n\tif (document) installInlineCSS('main', composeMainCSS());\n}\n\n/*\n\tInline CSS: each major section of WebMolKit that needs its own CSS tags should call installCSS(..) before doing anything interesting.\n\tThe custom CSS should include some number of definitions with the prefix 'wmk-{tag}-{whatever}', where {tag} is a concise definition\n\tthat can be used to make sure that each of these CSS blocks are installed just once.\n*/\n\nlet cssTagsInstalled = new Set<string>();\nexport function hasInlineCSS(tag:string):boolean {return cssTagsInstalled.has(tag);}\n\n// makes sure a block of CSS is installed, returning true if it was added, false if it was already there\nexport function installInlineCSS(tag:string, css:string):boolean\n{\n\tif (cssTagsInstalled.has(tag)) return false;\n\n\tlet el = document.createElement('style');\n\tel.innerHTML = css;\n\tdocument.head.appendChild(el);\n\tcssTagsInstalled.add(tag);\n\treturn true;\n}\n\n// assembles top-level CSS that's available for theming that doesn't have an encapsulating class\nfunction composeMainCSS():string\n{\n\tlet lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n\tlet highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n\n\t// NOTE: theme is only partially honoured here; need to tighten it up\n\treturn `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n\n","/*\n\tWebMolKit\n\n\t(c) 2010-2019 Molecular Materials Informatics, Inc.\n\n\tAll rights reserved\n\n\thttp://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {norm2_xy, norm_xy, sqr} from './util';\nimport {Vec} from './Vec';\n\n/*\n\tDelaunay triangulator: takes a jumble of 2D points and converts them into a collection of triangles. This initially generates a collection of\n\ttriangles that adds up to the convex hull, but it is fairly straightforward to delete triangles in order to get to some kind of concave subset\n\tbased on a given threshold. From there, tracing the outline is routine.\n\n\tOriginal algorithm adapted from JavaScript implementation of \"Delaunator\" (https://github.com/mapbox/delaunator), which bears the following license:\n\n\t\tISC License\n\n\t\tCopyright (c) 2017, Mapbox\n\n\t\tPermission to use, copy, modify, and/or distribute this software for any purpose\n\t\twith or without fee is hereby granted, provided that the above copyright notice\n\t\tand this permission notice appear in all copies.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\t\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n\t\tFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\t\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n\t\tOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n\t\tTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n\t\tTHIS SOFTWARE.\n*/\n\nconst EPSILON = Math.pow(2, -52);\n\nexport class Triangulation2D\n{\n\tpublic sz:number;\n\tpublic numTriangles = 0;\n\tpublic triangles:number[];\n\tpublic halfedges:number[];\n\n\tprivate edgeStack = Vec.numberArray(0, 512);\n\tprivate hashSize:number;\n\tprivate hullPrev:number[];\n\tprivate hullNext:number[];\n\tprivate hullTri:number[];\n\tprivate hullHash:number[];\n\tprivate ids:number[];\n\tprivate dists:number[];\n\tprivate centreX:number;\n\tprivate centreY:number;\n\tprivate hullStart:number;\n\tprivate hull:number[] = null;\n\n\t// ------------ public methods ------------\n\n\t// starts up with an empty container\n\tconstructor(public px:number[], public py:number[])\n\t{\n\t\tthis.px = px;\n\t\tthis.py = py;\n\n\t\t// arrays that will store the triangulation graph\n\t\tthis.sz = px.length;\n\t\tlet maxTriangles = Math.max(2 * this.sz - 5, 0);\n\t\tthis.triangles = new Array(maxTriangles * 3);\n\t\tthis.halfedges = new Array(maxTriangles * 3);\n\n\t\t// temporary arrays for tracking the edges of the advancing convex hull\n\t\tthis.hashSize = Math.ceil(Math.sqrt(this.sz));\n\t\tthis.hullPrev = new Array(this.sz);\n\t\tthis.hullNext = new Array(this.sz);\n\t\tthis.hullTri = new Array(this.sz);\n\t\tthis.hullHash = Vec.numberArray(-1, this.hashSize);\n\n\t\t// temporary arrays for sorting points\n\t\tthis.ids = new Array(this.sz);\n\t\tthis.dists = new Array(this.sz);\n\n\t\tthis.update();\n\t}\n\n\t// iteratively goes through triangles and removes outer edges that are longer than the given threshold, which is a way of making it concave\n\tpublic trimConcave(threshold:number):number[]\n\t{\n\t\tconst threshSq = sqr(threshold);\n\n\t\tconst {sz, px, py} = this;\n\t\tlet tri = this.triangles.slice(0);\n\t\t\n\t\t// setup an edgelist, which we need for rapid tabulation\n\t\tlet edge:number[] = [];\n\t\tfor (let n = 0, i = 0; i < tri.length; n++, i += 3)\n\t\t{\n\t\t\tedge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n\t\t\tedge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n\t\t\tedge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n\t\t}\n\t\tlet uniqueEdges = Vec.uniqueUnstable(edge);\n\t\tfor (let n = 0; n < edge.length; n++) edge[n] = uniqueEdges.indexOf(edge[n]);\n\t\t\n\t\tlet edgeCount:number[] = new Array(edge.length);\n\n\t\twhile (true)\n\t\t{\n\t\t\tconst ntri = tri.length / 3;\n\n\t\t\t// count the # of instances per edge\n\t\t\tedgeCount.fill(0);\n\t\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t\t{\n\t\t\t\tedgeCount[edge[i + 0]]++;\n\t\t\t\tedgeCount[edge[i + 1]]++;\n\t\t\t\tedgeCount[edge[i + 2]]++;\n\t\t\t}\n\n\t\t\t// any triangle that has one long unique (outer) edge gets the chop\n\t\t\tlet mask = Vec.booleanArray(true, ntri);\n\t\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t\t{\n\t\t\t\tconst c1 = edgeCount[edge[i + 0]];\n\t\t\t\tconst c2 = edgeCount[edge[i + 1]];\n\t\t\t\tconst c3 = edgeCount[edge[i + 2]];\n\t\t\t\tconst i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n\n\t\t\t\tif (c1 == 1 && c2 != 1 && c3 != 1) mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n\t\t\t\telse if (c1 != 1 && c2 == 1 && c3 != 1) mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n\t\t\t\telse if (c1 != 1 && c2 != 1 && c3 == 1) mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n\t\t\t}\n\n\t\t\tif (Vec.allTrue(mask)) break;\n\n\t\t\t// create a smaller version\n\t\t\tlet repTri:number[] = new Array(Vec.maskCount(mask) * 3);\n\t\t\tlet repEdge:number[] = new Array(Vec.maskCount(mask) * 3);\n\t\t\tfor (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3) if (mask[n])\n\t\t\t{\n\t\t\t\trepTri[j++] = tri[i];\n\t\t\t\trepTri[j++] = tri[i + 1];\n\t\t\t\trepTri[j++] = tri[i + 2];\n\t\t\t\trepEdge[k++] = edge[i];\n\t\t\t\trepEdge[k++] = edge[i + 1];\n\t\t\t\trepEdge[k++] = edge[i + 2];\n\t\t\t}\n\t\t\ttri = repTri;\n\t\t\tedge = repEdge;\n\t\t}\n\n\t\treturn tri;\n\t}\n\n\t// finds the set of points that traces the outline; the triangles can either be the original set (convex) or the trimmed set (concave)\n\tpublic traceOutline(tri:number[]):number[]\n\t{\n\t\tconst npt = tri.length, ntri = npt / 3;\n\t\tconst {sz, px, py} = this;\n\n\t\tlet edgeCount = new Map<number, number>();\n\n\t\t// count the # of instances per edge\n\t\tfor (let n = 0, i = 0; n < ntri; n++, i += 3)\n\t\t{\n\t\t\tconst e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n\t\t\tconst e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n\t\t\tconst e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n\t\t\tedgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n\t\t\tedgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n\t\t\tedgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n\t\t}\n\n\t\t// collect the unique (outer) edges\n\t\tlet edgePairs:number[] = [];\n\t\tfor (let entry of edgeCount.entries()) if (entry[1] == 1)\n\t\t{\n\t\t\tconst e = entry[0];\n\t\t\tconst i1 = Math.floor(e / sz), i2 = e % sz;\n\t\t\tedgePairs.push(i1);\n\t\t\tedgePairs.push(i2);\n\t\t}\n\n\t\t// list the constituent indices, and make a divalent graph\n\t\tconst idx = Vec.uniqueUnstable(edgePairs);\n\t\tconst isz = idx.length;\n\t\tconst idxMap = new Map<number, number>();\n\t\tfor (let n = 0; n < isz; n++) idxMap.set(idx[n], n);\n\t\tlet g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n\t\tfor (let n = 0; n < edgePairs.length; n += 2)\n\t\t{\n\t\t\t//int i1 = Arrays.binarySearch(idx, edges.get(n)), i2 = Arrays.binarySearch(idx, edges.get(n + 1));\n\t\t\tconst i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n\t\t\tif (g1[i1] < 0) g1[i1] = i2; else g2[i1] = i2;\n\t\t\tif (g1[i2] < 0) g1[i2] = i1; else g2[i2] = i1;\n\t\t}\n\n\t\t// pick a starting point and walk around the divalent graph\n\t\tlet mask = Vec.booleanArray(false, isz);\n\t\tlet sequence = new Array(isz);\n\t\tsequence[0] = 0;\n\t\tmask[0] = true;\n\t\tfor (let n = 1; n < isz; n++)\n\t\t{\n\t\t\tconst i = sequence[n - 1];\n\t\t\tif (!mask[g1[i]]) sequence[n] = g1[i]; else sequence[n] = g2[i];\n\t\t\tmask[sequence[n]] = true;\n\t\t}\n\t\treturn Vec.idxGet(idx, sequence);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate update():void\n\t{\n\t\tconst sz = this.sz;\n\t\tlet {px, py, ids, dists, triangles, halfedges} = this;\n\n\t\tconst minX = Vec.min(px), minY = Vec.min(py);\n\t\tconst maxX = Vec.max(px), maxY = Vec.max(py);\n\t\tfor (let n = 0; n < sz; n++) ids[n] = n;\n\n\t\tthis.centreX = 0.5 * (minX + maxX);\n\t\tthis.centreY = 0.5 * (minY + maxY);\n\t\tlet i0 = 0, i1 = 0, i2 = 0;\n\n\t\t// pick a seed point close to the center\n\t\tlet minDist = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tconst d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n\t\t\tif (d < minDist)\n\t\t\t{\n\t\t\t\ti0 = n;\n\t\t\t\tminDist = d;\n\t\t\t}\n\t\t}\n\t\tconst i0x = px[i0], i0y = py[i0];\n\n\t\tminDist = Number.POSITIVE_INFINITY;\n\n\t\t// find the point closest to the seed\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == i0) continue;\n\t\t\tconst d = norm_xy(i0x - px[n], i0y - py[n]);\n\t\t\tif (d < minDist && d > 0)\n\t\t\t{\n\t\t\t\ti1 = n;\n\t\t\t\tminDist = d;\n\t\t\t}\n\t\t}\n\t\tlet i1x = px[i1], i1y = py[i1];\n\n\t\t// find the third point which forms the smallest circumcircle with the first two\n\t\tlet minRadius = Number.POSITIVE_INFINITY;\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (n == i0 || n == i1) continue;\n\t\t\tlet r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n\t\t\tif (r < minRadius)\n\t\t\t{\n\t\t\t\ti2 = n;\n\t\t\t\tminRadius = r;\n\t\t\t}\n\t\t}\n\t\tlet i2x = px[i2], i2y = py[i2];\n\n\t\tif (!Number.isFinite(minRadius))\n\t\t{\n\t\t\t// order co-linear points by dx (or dy if all x are identical) and return the list as a hull\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tdists[n] = px[n] - px[0];\n\t\t\t\tif (dists[n] == 0) dists[n] = py[n] - py[0];\n\t\t\t}\n\t\t\tthis.quicksort(0, sz - 1);\n\t\t\tlet hull = new Array(sz);\n\t\t\tlet j = 0;\n\t\t\tlet d0 = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < sz; n++)\n\t\t\t{\n\t\t\t\tlet id = ids[n];\n\t\t\t\tif (dists[id] > d0)\n\t\t\t\t{\n\t\t\t\t\thull[j++] = id;\n\t\t\t\t\td0 = dists[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.hull = hull.slice(0, j);\n\t\t\ttriangles = [];\n\t\t\thalfedges = [];\n\t\t\treturn;\n\t\t}\n\n\t\t// swap the order of the seed points for counter-clockwise orientation\n\t\tif (this.orient(i0x, i0y, i1x, i1y, i2x, i2y))\n\t\t{\n\t\t\tlet i = i1;\n\t\t\tlet x = i1x, y = i1y;\n\t\t\ti1 = i2;\n\t\t\ti1x = i2x;\n\t\t\ti1y = i2y;\n\t\t\ti2 = i;\n\t\t\ti2x = x;\n\t\t\ti2y = y;\n\t\t}\n\n\t\tthis.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n\n\t\tfor (let n = 0; n < sz; n++) dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n\n\t\t// sort the points by distance from the seed triangle circumcenter\n\t\tthis.quicksort(0, sz - 1);\n\n\t\t// set up the seed triangle as the starting hull\n\t\tthis.hullStart = i0;\n\t\tlet hullSize = 3;\n\n\t\tconst {hullNext, hullPrev, hullTri, hullHash, hashSize} = this;\n\n\t\thullNext[i0] = hullPrev[i2] = i1;\n\t\thullNext[i1] = hullPrev[i0] = i2;\n\t\thullNext[i2] = hullPrev[i1] = i0;\n\n\t\thullTri[i0] = 0;\n\t\thullTri[i1] = 1;\n\t\thullTri[i2] = 2;\n\n\t\thullHash.fill(-1);\n\t\thullHash[this.hashKey(i0x, i0y)] = i0;\n\t\thullHash[this.hashKey(i1x, i1y)] = i1;\n\t\thullHash[this.hashKey(i2x, i2y)] = i2;\n\n\t\tthis.numTriangles = 0;\n\t\tthis.addTriangle(i0, i1, i2, -1, -1, -1);\n\n\t\tlet xp = 0, yp = 0;\n\t\tfor (let k = 0; k < ids.length; k++)\n\t\t{\n\t\t\tlet i = ids[k];\n\t\t\tlet x = px[i], y = py[i];\n\n\t\t\t// skip near-duplicate points\n\t\t\tif (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n\t\t\txp = x;\n\t\t\typ = y;\n\n\t\t\t// skip seed triangle points\n\t\t\tif (i == i0 || i == i1 || i == i2) continue;\n\n\t\t\t// find a visible edge on the convex hull using edge hash\n\t\t\tlet start = 0;\n\t\t\tfor (let j = 0, key = this.hashKey(x, y); j < hashSize; j++)\n\t\t\t{\n\t\t\t\tstart = hullHash[(key + j) % hashSize];\n\t\t\t\tif (start >= 0 && start != hullNext[start]) break;\n\t\t\t}\n\n\t\t\tstart = hullPrev[start];\n\t\t\tlet e = start, q = hullNext[e];\n\t\t\twhile (!this.orient(x, y, px[e], py[e], px[q], py[q]))\n\t\t\t{\n\t\t\t\te = q;\n\t\t\t\tif (e == start)\n\t\t\t\t{\n\t\t\t\t\te = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tq = hullNext[e];\n\t\t\t}\n\t\t\tif (e < 0) continue; // likely a near-duplicate point; skip it\n\n\t\t\t// add the first triangle from the point\n\t\t\tlet t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n\t\t\t// recursively flip triangles from the point until they satisfy the Delaunay condition\n\t\t\thullTri[i] = this.legalise(t + 2);\n\t\t\thullTri[e] = t; // keep track of boundary triangles on the hull\n\t\t\thullSize++;\n\n\t\t\t// walk forward through the hull, adding more triangles and flipping recursively\n\t\t\tlet n = hullNext[e];\n\t\t\tq = hullNext[n];\n\t\t\twhile (this.orient(x, y, px[n], py[n], px[q], py[q]))\n\t\t\t{\n\t\t\t\tt = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n\t\t\t\thullTri[i] = this.legalise(t + 2);\n\t\t\t\thullNext[n] = n; // mark as removed\n\t\t\t\thullSize--;\n\t\t\t\tn = q;\n\t\t\t\tq = hullNext[n];\n\t\t\t}\n\n\t\t\t// walk backward from the other side, adding more triangles and flipping\n\t\t\tif (e == start)\n\t\t\t{\n\t\t\t\tq = hullPrev[e];\n\t\t\t\twhile (this.orient(x, y, px[q], py[q], px[e], py[e]))\n\t\t\t\t{\n\t\t\t\t\tt = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n\t\t\t\t\tthis.legalise(t + 2);\n\t\t\t\t\thullTri[q] = t;\n\t\t\t\t\thullNext[e] = e; // mark as removed\n\t\t\t\t\thullSize--;\n\t\t\t\t\te = q;\n\t\t\t\t\tq = hullPrev[e];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update the hull indices\n\t\t\tthis.hullStart = hullPrev[i] = e;\n\t\t\thullNext[e] = hullPrev[n] = i;\n\t\t\thullNext[i] = n;\n\n\t\t\t// save the two new edges in the hash table\n\t\t\thullHash[this.hashKey(x, y)] = i;\n\t\t\thullHash[this.hashKey(px[e], py[e])] = e;\n\t\t}\n\n\t\tthis.hull = new Array(hullSize);\n\t\tfor (let n = 0, e = this.hullStart; n < hullSize; n++)\n\t\t{\n\t\t\tthis.hull[n] = e;\n\t\t\te = hullNext[e];\n\t\t}\n\n\t\t// trim typed triangle mesh arrays\n\t\tthis.triangles = triangles.slice(0, this.numTriangles);\n\t\tthis.halfedges = halfedges.slice(0, this.numTriangles);\n\t}\n\n\tprivate hashKey(x:number, y:number):number\n\t{\n\t\treturn Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n\t}\n\n\tprivate legalise(a:number):number\n\t{\n\t\tlet i = 0;\n\t\tlet ar = 0;\n\n\t\t// recursion eliminated with a fixed-size stack\n\t\twhile (true)\n\t\t{\n\t\t\tlet b = this.halfedges[a];\n\n\t\t\t/* if the pair of triangles doesn't satisfy the Delaunay condition\n\t\t\t * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n\t\t\t * then do the same check/flip recursively for the new pair of triangles\n\t\t\t *\n\t\t\t *           pl                    pl\n\t\t\t *          /||\\                  /  \\\n\t\t\t *       al/ || \\bl            al/    \\a\n\t\t\t *        /  ||  \\              /      \\\n\t\t\t *       /  a||b  \\    flip    /___ar___\\\n\t\t\t *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n\t\t\t *        \\  ||  /              \\      /\n\t\t\t *       ar\\ || /br             b\\    /br\n\t\t\t *          \\||/                  \\  /\n\t\t\t *           pr                    pr\n\t\t\t */\n\t\t\tlet a0 = a - a % 3;\n\t\t\tar = a0 + (a + 2) % 3;\n\n\t\t\tif (b < 0) // convex hull edge\n\t\t\t{\n\t\t\t\tif (i == 0) break;\n\t\t\t\ta = this.edgeStack[--i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst b0 = b - b % 3;\n\t\t\tconst al = a0 + (a + 1) % 3;\n\t\t\tconst bl = b0 + (b + 2) % 3;\n\n\t\t\tconst {px, py, triangles, halfedges} = this;\n\t\t\tconst p0 = triangles[ar];\n\t\t\tconst pr = triangles[a];\n\t\t\tconst pl = triangles[al];\n\t\t\tconst p1 = triangles[bl];\n\n\t\t\tlet illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n\n\t\t\tif (illegal)\n\t\t\t{\n\t\t\t\tthis.triangles[a] = p1;\n\t\t\t\tthis.triangles[b] = p0;\n\n\t\t\t\tconst hbl = halfedges[bl];\n\n\t\t\t\t// edge swapped on the other side of the hull (rare); fix the halfedge reference\n\t\t\t\tif (hbl < 0)\n\t\t\t\t{\n\t\t\t\t\tlet e = this.hullStart;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.hullTri[e] == bl)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.hullTri[e] = a;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te = this.hullPrev[e];\n\t\t\t\t\t}\n\t\t\t\t\twhile (e != this.hullStart);\n\t\t\t\t}\n\t\t\t\tthis.link(a, hbl);\n\t\t\t\tthis.link(b, halfedges[ar]);\n\t\t\t\tthis.link(ar, bl);\n\n\t\t\t\tconst br = b0 + (b + 1) % 3;\n\n\t\t\t\t// don't worry about hitting the cap: it can only happen on extremely degenerate input\n\t\t\t\tif (i < this.edgeStack.length) this.edgeStack[i++] = br;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (i == 0) break;\n\t\t\t\ta = this.edgeStack[--i];\n\t\t\t}\n\t\t}\n\n\t\treturn ar;\n\t}\n\n\tprivate link(a:number, b:number):void\n\t{\n\t\tthis.halfedges[a] = b;\n\t\tif (b >= 0) this.halfedges[b] = a;\n\t}\n\n\t // add a new triangle given vertex indices and adjacent half-edge ids\n\tprivate addTriangle(i0:number, i1:number, i2:number, a:number, b:number, c:number):number\n\t{\n\t\tconst t = this.numTriangles;\n\t\tthis.triangles[t] = i0;\n\t\tthis.triangles[t + 1] = i1;\n\t\tthis.triangles[t + 2] = i2;\n\t\tthis.link(t, a);\n\t\tthis.link(t + 1, b);\n\t\tthis.link(t + 2, c);\n\t\tthis.numTriangles += 3;\n\t\treturn t;\n\t}\n\n\t// monotonically increases with real angle, but doesn't need expensive trigonometry\n\tprivate pseudoAngle(dx:number, dy:number):number\n\t{\n\t\tconst p = dx / (Math.abs(dx) + Math.abs(dy));\n\t\treturn (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n\t}\n\n\t// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\n\tprivate orientIfSure(px:number, py:number, rx:number, ry:number, qx:number, qy:number):number\n\t{\n\t\tconst l = (ry - py) * (qx - px);\n\t\tconst r = (rx - px) * (qy - py);\n\t\treturn Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n\t}\n\n\t// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\n\tprivate orient(rx:number, ry:number, qx:number, qy:number, px:number, py:number):boolean\n\t{\n\t\tlet o = this.orientIfSure(px, py, rx, ry, qx, qy);\n\t\tif (o != 0) return o < 0;\n\t\to = this.orientIfSure(rx, ry, qx, qy, px, py);\n\t\tif (o != 0) return o < 0;\n\t\to = this.orientIfSure(qx, qy, px, py, rx, ry);\n\t\treturn o < 0;\n\t}\n\n\tprivate inCircle(ax:number, ay:number, bx:number, by:number, cx:number, cy:number, px:number, py:number):boolean\n\t{\n\t\tconst dx = ax - px;\n\t\tconst dy = ay - py;\n\t\tconst ex = bx - px;\n\t\tconst ey = by - py;\n\t\tconst fx = cx - px;\n\t\tconst fy = cy - py;\n\n\t\tconst ap = dx * dx + dy * dy;\n\t\tconst bp = ex * ex + ey * ey;\n\t\tconst cp = fx * fx + fy * fy;\n\n\t\treturn dx * (ey * cp - bp * fy) -\n\t\t\t   dy * (ex * cp - bp * fx) +\n\t\t\t   ap * (ex * fy - ey * fx) < 0;\n\t}\n\n\tprivate circumRadius(ax:number, ay:number, bx:number, by:number, cx:number, cy:number):number\n\t{\n\t\tconst dx = bx - ax;\n\t\tconst dy = by - ay;\n\t\tconst ex = cx - ax;\n\t\tconst ey = cy - ay;\n\n\t\tconst bl = dx * dx + dy * dy;\n\t\tconst cl = ex * ex + ey * ey;\n\t\tconst d = 0.5 / (dx * ey - dy * ex);\n\n\t\tconst x = (ey * bl - dy * cl) * d;\n\t\tconst y = (dx * cl - ex * bl) * d;\n\n\t\treturn x * x + y * y;\n\t}\n\n\tprivate pickCircumCentre(ax:number, ay:number, bx:number, by:number, cx:number, cy:number):void\n\t{\n\t\tconst dx = bx - ax;\n\t\tconst dy = by - ay;\n\t\tconst ex = cx - ax;\n\t\tconst ey = cy - ay;\n\n\t\tconst bl = dx * dx + dy * dy;\n\t\tconst cl = ex * ex + ey * ey;\n\t\tconst d = 0.5 / (dx * ey - dy * ex);\n\n\t\tthis.centreX = ax + (ey * bl - dy * cl) * d;\n\t\tthis.centreY = ay + (dx * cl - ex * bl) * d;\n\t}\n\n\tprivate quicksort(left:number, right:number):void\n\t{\n\t\tconst {ids, dists} = this;\n\t\tif (right - left <= 20)\n\t\t{\n\t\t\tfor (let i = left + 1; i <= right; i++)\n\t\t\t{\n\t\t\t\tconst temp = ids[i];\n\t\t\t\tconst tempDist = dists[temp];\n\t\t\t\tlet j = i - 1;\n\t\t\t\twhile (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n\t\t\t\tids[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet median = (left + right) >> 1;\n\t\t\tlet i = left + 1;\n\t\t\tlet j = right;\n\t\t\tVec.swap(ids, median, i);\n\t\t\tif (dists[ids[left]] > dists[ids[right]]) Vec.swap(ids, left, right);\n\t\t\tif (dists[ids[i]] > dists[ids[right]]) Vec.swap(ids, i, right);\n\t\t\tif (dists[ids[left]] > dists[ids[i]]) Vec.swap(ids, left, i);\n\n\t\t\tlet temp = ids[i];\n\t\t\tconst tempDist = dists[temp];\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tdo i++; while (dists[ids[i]] < tempDist);\n\t\t\t\tdo j--; while (dists[ids[j]] > tempDist);\n\t\t\t\tif (j < i) break;\n\t\t\t\tVec.swap(ids, i, j);\n\t\t\t}\n\t\t\tids[left + 1] = ids[j];\n\t\t\tids[j] = temp;\n\n\t\t\tif (right - i + 1 >= j - left)\n\t\t\t{\n\t\t\t\tthis.quicksort(i, right);\n\t\t\t\tthis.quicksort(left, j - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.quicksort(left, j - 1);\n\t\t\t\tthis.quicksort(i, right);\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2017 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/* eslint-disable comma-spacing */\n\n/*\n\tFunctions that operate on arrays, for performing routine tasks.\n*/\n\nexport class Vec\n{\n\tpublic static isBlank(arr:any[]):boolean {return arr == null || arr.length == 0;}\n\tpublic static notBlank(arr:any[]):boolean {return arr != null && arr.length > 0;}\n\tpublic static safeArray<T>(arr:T[]):T[] {return arr == null ? [] : arr;}\n\tpublic static len(arr:any[]):number {return arr == null ? 0 : arr.length;} // (can't use \"length\" because it's reserved)\n\tpublic static arrayLength(arr:any[]):number {return arr == null ? 0 : arr.length;} // (unwieldy)\n\n\tpublic static anyTrue(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return false;\n\t\tfor (let v of arr) if (v) return true;\n\t\treturn false;\n\t}\n\tpublic static allTrue(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return true;\n\t\tfor (let v of arr) if (!v) return false;\n\t\treturn true;\n\t}\n\n\tpublic static anyFalse(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return false;\n\t\tfor (let v of arr) if (!v) return true;\n\t\treturn false;\n\t}\n\tpublic static allFalse(arr:boolean[]):boolean\n\t{\n\t\tif (arr == null) return true;\n\t\tfor (let v of arr) if (v) return false;\n\t\treturn true;\n\t}\n\n\t// lambda versions of array scanning\n\tpublic static iterAnyTrue<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (callback(v)) return true;\n\t\treturn false;\n\t}\n\tpublic static iterAllTrue<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (!callback(v)) return false;\n\t\treturn true;\n\t}\n\tpublic static iterAnyFalse<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (!callback(v)) return true;\n\t\treturn false;\n\t}\n\tpublic static iterAllFalse<T>(arr:T[], callback:(value:T) => boolean)\n\t{\n\t\tfor (let v of arr) if (callback(v)) return false;\n\t\treturn true;\n\t}\n\n\t// convenience index swapping\n\tpublic static swap(arr:any[], idx1:number, idx2:number):void\n\t{\n\t\tlet v = arr[idx1];\n\t\tarr[idx1] = arr[idx2];\n\t\tarr[idx2] = v;\n\t}\n\n\t// make a shallow copy of the array, or turn it into a blank array if null\n\tpublic static duplicate<T>(arr:T[]):T[]\n\t{\n\t\treturn arr == null ? [] : arr.slice(0);\n\t}\n\n\t// null-tolerant array concatenation; always returns an array, always at least a shallow copy\n\tpublic static append<T>(arr:T[], item:T):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [item];\n\t\tarr = arr.slice(0);\n\t\tarr.push(item);\n\t\treturn arr;\n\t}\n\tpublic static prepend<T>(arr:T[], item:T):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [item];\n\t\tarr = arr.slice(0);\n\t\tarr.unshift(item);\n\t\treturn arr;\n\t}\n\tpublic static concat<T>(arr1:T[], arr2:T[]):T[]\n\t{\n\t\tif (arr1 == null && arr2 == null) return [];\n\t\tif (arr1 == null) return arr2.slice(0);\n\t\tif (arr2 == null) return arr1.slice(0);\n\t\treturn arr1.concat(arr2);\n\t}\n\n\t// array removal, with shallow-copy duplication\n\tpublic static remove<T>(arr:T[], idx:number):T[]\n\t{\n\t\tarr = arr.slice(0);\n\t\tarr.splice(idx, 1);\n\t\treturn arr;\n\t}\n\n\t// squishes a 2D array down to a single consecutive flattened vector\n\tpublic static flatten<T>(mtx:T[][]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let vec of mtx) ret.push(...vec);\n\t\treturn ret;\n\t}\n\n\t// assuming the input is matrix-like, swaps the first two axes, i.e. {m,n} => {n,m}\n\tpublic static transpose<T>(mtx:T[][]):T[][]\n\t{\n\t\tlet sz1 = mtx.length, sz2 = mtx[0].length;\n\t\tlet ret:T[][] = Vec.anyArray(null, sz2);\n\t\tfor (let j = 0; j < sz2; j++)\n\t\t{\n\t\t\tret[j] = Vec.anyArray(null, sz1);\n\t\t\tfor (let i = 0; i < sz1; i++) ret[j][i] = mtx[i][j];\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// null-tolerant comparison\n\tpublic static equals(arr1:any[], arr2:any[]):boolean\n\t{\n\t\tif (arr1 == null && arr2 == null) return true;\n\t\tif (arr1 == null || arr2 == null) return false;\n\t\tif (arr1.length != arr2.length) return false;\n\t\tfor (let n = 0; n < arr1.length; n++) if (arr1[n] != arr2[n]) return false;\n\t\treturn true;\n\t}\n\tpublic static equivalent(arr1:any[], arr2:any[]):boolean\n\t{\n\t\tconst len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n\t\tif (len1 != len2) return false;\n\t\tfor (let n = 0; n < len1; n++) if (arr1[n] != arr2[n]) return false;\n\t\treturn true;\n\t}\n\n\t// comparison that can be used for sorting; -1 if arr1<arr2, +1 if arr1>arr2, 0 if equal\n\tpublic static compareTo<T>(arr1:T[], arr2:T[]):number\n\t{\n\t\tconst sz = Math.max(arr1.length, arr2.length);\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (arr1[n] < arr2[n]) return -1;\n\t\t\tif (arr1[n] > arr2[n]) return 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic static booleanArray(val:boolean, sz:number):boolean[]\n\t{\n\t\tlet arr:boolean[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static numberArray(val:number, sz:number):number[]\n\t{\n\t\tlet arr:number[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static stringArray(val:string, sz:number):string[]\n\t{\n\t\tlet arr:string[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static anyArray(val:any, sz:number):any[]\n\t{\n\t\tlet arr:any[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\tpublic static genericArray<T>(val:T, sz:number):T[]\n\t{\n\t\tlet arr:T[] = new Array(sz);\n\t\tarr.fill(val);\n\t\treturn arr;\n\t}\n\n\t// returns an array of blank arrays\n\tpublic static genericBlankArrays<T>(sz:number):T[][]\n\t{\n\t\tlet arr:T[][] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) arr[n] = [];\n\t\treturn arr;\n\t}\n\n\t// creates an array of given size, using a lambda\n\tpublic static funcArray<T>(sz:number, func:(idx?:number) => T):T[]\n\t{\n\t\tlet arr:T[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) arr[n] = func(n);\n\t\treturn arr;\n\t}\n\n\tpublic static first<T>(arr:T[]) {return arr == null || arr.length == 0 ? null : arr[0];}\n\tpublic static last<T>(arr:T[]) {return arr == null || arr.length == 0 ? null : arr[arr.length - 1];}\n\n\tpublic static min(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return Number.MAX_VALUE;\n\t\tlet v = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) v = Math.min(v, arr[n]);\n\t\treturn v;\n\t}\n\tpublic static max(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return Number.MIN_VALUE;\n\t\tlet v = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) v = Math.max(v, arr[n]);\n\t\treturn v;\n\t}\n\tpublic static idxMin(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return -1;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < arr.length; n++) if (arr[n] < arr[idx]) idx = n;\n\t\treturn idx;\n\t}\n\tpublic static idxMax(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return -1;\n\t\tlet idx = 0;\n\t\tfor (let n = 1; n < arr.length; n++) if (arr[n] > arr[idx]) idx = n;\n\t\treturn idx;\n\t}\n\n\tpublic static range(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return 0;\n\t\tlet lo = arr[0], hi = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++)\n\t\t{\n\t\t\tif (arr[n] < lo) lo = arr[n];\n\t\t\tif (arr[n] > hi) hi = arr[n];\n\t\t}\n\t\treturn hi - lo;\n\t}\n\n\tpublic static reverse<T>(arr:T[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = arr.length - 1; n >= 0; n--) ret.push(arr[n]);\n\t\treturn ret;\n\t}\n\n\tpublic static identity0(sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n;\n\t\treturn ret;\n\t}\n\n\tpublic static identity1(sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n + 1;\n\t\treturn ret;\n\t}\n\n\tpublic static identityN(start:number, sz:number):number[]\n\t{\n\t\tlet ret:number[] = new Array(sz);\n\t\tfor (let n = 0; n < sz; n++) ret[n] = n + start;\n\t\treturn ret;\n\t}\n\n\tpublic static notMask(mask:boolean[]):boolean[]\n\t{\n\t\tlet ret:boolean[] = new Array(mask.length);\n\t\tfor (let n = mask.length - 1; n >= 0; n--) ret[n] = !mask[n];\n\t\treturn ret;\n\t}\n\n\tpublic static idxGet<T>(arr:T[], idx:number[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = 0; n < idx.length; n++) ret.push(arr[idx[n]]);\n\t\treturn ret;\n\t}\n\n\tpublic static maskCount(mask:boolean[]):number\n\t{\n\t\tif (!mask) return 0;\n\t\tlet c = 0;\n\t\tfor (let n = mask.length - 1; n >= 0; n--) if (mask[n]) c++;\n\t\treturn c;\n\t}\n\n\t// converts the mask into indices (0-based)\n\tpublic static maskIdx(mask:boolean[]):number[]\n\t{\n\t\tlet idx:number[] = [];\n\t\tfor (let n = 0; n < mask.length; n++) if (mask[n]) idx.push(n);\n\t\treturn idx;\n\t}\n\n\t// converts the index into a mask (0-based index)\n\tpublic static idxMask(idx:number[], sz:number):boolean[]\n\t{\n\t\tlet mask = Vec.booleanArray(false, sz);\n\t\tfor (let n of idx) mask[n] = true;\n\t\treturn mask;\n\t}\n\n\t// converts a mask into an index map: if mask[n] is true, then idx[n] is a 0-based index into an equivalent array composed only\n\t// of entries for which mask is true; for the rest, the value is -1\n\tpublic static maskMap(mask:boolean[]):number[]\n\t{\n\t\tlet ret:number[] = [];\n\t\tfor (let n = 0, pos = 0; n < mask.length; n++) ret.push(mask[n] ? pos++ : -1);\n\t\treturn ret;\n\t}\n\n\t// returns members of an array for which the value of mask is true\n\tpublic static maskGet<T>(arr:T[], mask:boolean[]):T[]\n\t{\n\t\tlet ret:T[] = [];\n\t\tfor (let n = 0, p = 0; n < arr.length; n++) if (mask[n]) ret.push(arr[n]);\n\t\treturn ret;\n\t}\n\n\t// return a mask of elements which are equal on both sides (with unit extension on the right)\n\tpublic static maskEqual(arr1:any[], val:any):boolean[]\n\t{\n\t\tlet ret:boolean[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] == arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] == val);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static sum(arr:number[]):number\n\t{\n\t\tif (arr == null || arr.length == 0) return 0;\n\t\tlet t = arr[0];\n\t\tfor (let n = 1; n < arr.length; n++) t += arr[n];\n\t\treturn t;\n\t}\n\n\tpublic static add(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] + arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] + (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static sub(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] - arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] - (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static mul(arr1:number[], val:number | number[]):number[]\n\t{\n\t\tlet ret:any[] = [];\n\t\tif (val.constructor === Array)\n\t\t{\n\t\t\tlet arr2 = val as number[];\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] * arr2[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let n = 0; n < arr1.length; n++) ret.push(arr1[n] * (val as number));\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static neg(arr:number[]):number[]\n\t{\n\t\tlet ret = arr.slice(0);\n\t\tfor (let n = ret.length - 1; n >= 0; n--) ret[n] *= -1;\n\t\treturn ret;\n\t}\n\n\t// bulk direct operations\n\tpublic static setTo(arr:any[], val:any):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] = val;}\n\tpublic static addTo(arr:number[], val:number):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] += val;}\n\tpublic static mulBy(arr:number[], val:number):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] *= val;}\n\n\tpublic static addToArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] += val[n];}\n\tpublic static subFromArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] -= val[n];}\n\tpublic static mulByArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] *= val[n];}\n\tpublic static divByArray(arr:number[], val:number[]):void {for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--) arr[n] /= val[n];}\n\n\tpublic static idxSort(arr:any[]):number[]\n\t{\n\t\tlet idx:number[] = new Array(arr.length);\n\t\tfor (let n = 0; n < arr.length; n++) idx[n] = n;\n\t\tidx.sort((a:number, b:number):number => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n\t\treturn idx;\n\t}\n\n\t// for some reason the default sorter has a dubious habit of doing a string comparison; this function is numeric\n\tpublic static sort(arr:number[]):void\n\t{\n\t\tarr.sort((v1:number, v2:number):number => v1 - v2);\n\t}\n\tpublic static sorted(arr:number[]):number[]\n\t{\n\t\tarr = arr.slice(0);\n\t\tthis.sort(arr);\n\t\treturn arr;\n\t}\n\n\t// returns only the unique entries, sorted\n\tpublic static sortedUnique<T>(arr:T[]):T[]\n\t{\n\t\tif (arr == null || arr.length == 0) return [];\n\t\tlet unique = Vec.uniqueUnstable(arr);\n\t\tif (typeof arr[0] == 'number') this.sort((unique as any) as number[]); else unique.sort();\n\t\treturn unique;\n\t}\n\n\t// uniqueness, in its various permutations\n\tpublic static uniqueUnstable<T>(arr:T[]):T[]\n\t{\n\t\treturn Array.from(new Set(arr)); // order is basically random\n\t}\n\tpublic static uniqueStable<T>(arr:T[]):T[]\n\t{\n\t\tlet set = new Set<T>(arr), ret:T[] = [];\n\t\tfor (let v of arr) if (set.has(v)) {ret.push(v); set.delete(v);}\n\t\treturn ret; // original order is preserved, with non-first entries removed*/\n\t}\n\tpublic static maskUnique(arr:any[]):boolean[]\n\t{\n\t\tlet set = new Set<any>(arr), ret = this.booleanArray(false, arr.length);\n\t\tfor (let n = 0; n < arr.length; n++) if (set.has(arr[n])) {ret[n] = true; set.delete(arr[n]);}\n\t\treturn ret;\n\t}\n\tpublic static idxUnique(arr:any[]):number[]\n\t{\n\t\tlet set = new Set<any>(arr), ret:number[] = [];\n\t\tfor (let n = 0; n < arr.length; n++) if (set.has(arr[n])) {ret.push(n); set.delete(arr[n]);}\n\t\treturn ret; // index of first occurence in original array\n\t}\n\n\t// for a given array, ensures that certain value are not present, and will eliminate them when discovered; original order preserved;\n\t// null-tolerant, and may return the original array if unchanged\n\t// note: O(N^2); may improve this at a later date\n\tpublic static exclude<T>(arr:T[], excl:T[]):T[]\n\t{\n\t\tconst sz = Vec.len(arr);\n\t\tif (sz == 0) return [];\n\t\tlet mask:boolean[] = new Array(sz);\n\t\tlet count = 0;\n\t\tfor (let n = 0; n < arr.length; n++)\n\t\t{\n\t\t\tmask[n] = excl.indexOf(arr[n]) < 0;\n\t\t\tif (mask[n]) count++;\n\t\t}\n\t\tif (count == sz) return arr;\n\t\treturn Vec.maskGet(arr, mask);\n\t}\n}\n\n/*\n\tPermutation functions, operating explicitly on arrays of consecutive integers.\n*/\n\nexport class Permutation\n{\n\t// for a set of indices that are assumed to be unique and in the range {0 .. N-1}, returns their parity, i.e.\n\t// the number of swaps used to permute it from the identity; if the list is sorted, the result is 0\n\t// NOTE: parityPerms(..) returns the total number of swaps, whereas parityIdentity(..) returns either 0 or 1\n\tpublic static parityPerms(idx:number[]):number\n\t{\n\t\tlet v = Vec.booleanArray(false, idx.length);\n\t\tlet p = 0;\n\t\tfor (let i = idx.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (v[i]) p++;\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet j = i;\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tj = idx[j];\n\t\t\t\t\tv[j] = true;\n\t\t\t\t}\n\t\t\t\twhile (j != i);\n\t\t\t}\n\t\t}\n\t\treturn p;\n\t}\n\tpublic static parityIdentity(idx:number[]):number\n\t{\n\t\treturn this.parityPerms(idx) & 1;\n\t}\n\n\t// parity methods that operate on arbitrary integers; returns 0 for an even number of swaps, 1 for odd\n\t// NOTE: this is rather inefficient for non-tiny arrays; could at least code up some more special cases\n\tpublic static parityOrder(src:number[]):number\n\t{\n\t\tif (src.length <= 1) return 0;\n\t\telse if (src.length == 2) return src[0] < src[1] ? 0 : 1;\n\t\telse if (src.length == 3)\n\t\t{\n\t\t\tlet p = 1;\n\t\t\tif (src[0] < src[1]) p++;\n\t\t\tif (src[0] < src[2]) p++;\n\t\t\tif (src[1] < src[2]) p++;\n\t\t\treturn p & 1;\n\t\t}\n\t\telse if (src.length == 4)\n\t\t{\n\t\t\tlet p = 0;\n\t\t\tif (src[0] < src[1]) p++;\n\t\t\tif (src[0] < src[2]) p++;\n\t\t\tif (src[0] < src[3]) p++;\n\t\t\tif (src[1] < src[2]) p++;\n\t\t\tif (src[1] < src[3]) p++;\n\t\t\tif (src[2] < src[3]) p++;\n\t\t\treturn p & 1;\n\t\t}\n\n\t\tlet idx:number[] = [], sorted = src.slice(0);\n\t\tsorted.sort();\n\t\tfor (let n = 0; n < src.length; n++) idx.push(sorted.indexOf(src[n]));\n\t\treturn this.parityIdentity(idx);\n\t}\n\n\t/*\n\t\tSmall permutations: up to a certain size, it makes sense to just hardcode them.\n\n\t\tNote that in each case, the identity permutation is guaranteed to be first. The remaining permutations\n\t\tare not guaranteed to be in any particular order.\n\t*/\n\n\tprivate static PERM1 = [[0]];\n\tprivate static PERM2 = [[0, 1], [1, 0]];\n\tprivate static PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\n\tprivate static PERM4 =\n\t[\n\t\t[0,1,2,3], [0,1,3,2], [0,2,1,3], [0,2,3,1], [0,3,1,2], [0,3,2,1],\n\t\t[1,0,2,3], [1,0,3,2], [1,2,0,3], [1,2,3,0], [1,3,0,2], [1,3,2,0],\n\t\t[2,0,1,3], [2,0,3,1], [2,1,0,3], [2,1,3,0], [2,3,0,1], [2,3,1,0],\n\t\t[3,0,1,2], [3,0,2,1], [3,1,0,2], [3,1,2,0], [3,2,0,1], [3,2,1,0]\n\t];\n\n\tpublic static SMALL_PERMS = 4;\n\n\tpublic static smallPermutation(sz:number):number[][]\n\t{\n\t\tif (sz == 1) return this.PERM1;\n\t\telse if (sz == 2) return this.PERM2;\n\t\telse if (sz == 3) return this.PERM3;\n\t\telse if (sz == 4) return this.PERM4;\n\t\telse return null;\n\t}\n\n\t// cache: intermediate permutation sizes are cached; note that anything significantly big really should not be used\n\tprivate static MAX_CACHE = 8;\n\tprivate static PERM_CACHE:number[][][] = [];\n\n\t// returns all of the permutations up to a certain size; note that this is slow and scales exponentially: use sparingly\n\tpublic static allPermutations(sz:number):number[][]\n\t{\n\t\tif (sz <= this.SMALL_PERMS) return this.smallPermutation(sz);\n\t\twhile (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS) this.PERM_CACHE.push(null);\n\t\tif (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null) return this.PERM_CACHE[sz - this.SMALL_PERMS];\n\n\t\tlet nperms = 1;\n\t\tfor (let n = 2; n <= sz; n++) nperms *= n;\n\t\tlet perms:number[][] = [];\n\n\t\t// NOTE: for sure not the fastest way to do it, but it gets the job done; the total number of iterations is actually\n\t\t// exponential, rather than factorial\n\n\t\tlet idx = Vec.identity0(sz);\n\t\tperms.push(idx.slice(0));\n\t\tlet mask = Vec.booleanArray(false, sz);\n\n\t\tfor (let n = 1; n < nperms; n++)\n\t\t{\n\t\t\tnonunique: while (idx[0] < sz)\n\t\t\t{\n\t\t\t\t// increment the \"digits\"\n\t\t\t\tidx[sz - 1]++;\n\t\t\t\tfor (let i = sz - 1; i > 0; i --)\n\t\t\t\t{\n\t\t\t\t\tif (idx[i] < sz) break;\n\t\t\t\t\tidx[i] = 0;\n\t\t\t\t\tidx[i - 1]++;\n\t\t\t\t}\n\n\t\t\t\t// skip the loop if digits have any degeneracy\n\t\t\t\tVec.setTo(mask, false);\n\t\t\t\tfor (let i of idx)\n\t\t\t\t{\n\t\t\t\t\tif (mask[i]) continue nonunique;\n\t\t\t\t\tmask[i] = true;\n\t\t\t\t}\n\n\t\t\t\t// this is a new unique combo, so poke it in\n\t\t\t\tperms[n] = idx.slice(0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (sz < this.MAX_CACHE) this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n\t\treturn perms;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2017 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\n/*\n\tUtilities to supplement the rather rudimentary DOM.\n*/\n\n// these are defined locally, in case DOM has to be used as a plugin (in NodeJS mode)\n\nconst ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\n\nexport class XML\n{\n\t// these need to be defined when running under a raw NodeJS or worker thread environment, which has the XML parsing functionality stripped out of\n\t// the API; not necessary when running in regular web browser mode or Electron main task\n\tpublic static customParser:any = null;\n\tpublic static customSerial:any = null;\n\n\t// DOM <--> String\n\tpublic static parseXML(strXML:string):Document\n\t{\n\t\tlet xmlDoc:Document;\n\t\tif (this.customParser)\n\t\t\txmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n\t\telse\n\t\t\txmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n\t\tif (xmlDoc == null) return null;\n\t\treturn xmlDoc;\n\t}\n\tpublic static toString(doc:Document):string\n\t{\n\t\tif (this.customSerial)\n\t\t\treturn new this.customSerial().serializeToString(doc.documentElement);\n\t\telse\n\t\t\treturn new XMLSerializer().serializeToString(doc.documentElement);\n\t}\n\tpublic static toPrettyString(doc:Document):string\n\t{\n\t\tlet xslt =\n\t\t[\n\t\t\t'<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n\t\t\t'  <xsl:strip-space elements=\"*\"/>',\n\t\t\t'  <xsl:template match=\"para[content-style][not(text())]\">',\n\t\t\t'    <xsl:value-of select=\"normalize-space(.)\"/>',\n\t\t\t'  </xsl:template>',\n\t\t\t'  <xsl:template match=\"node()|@*\">',\n\t\t\t'    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n\t\t\t'  </xsl:template>',\n\t\t\t'  <xsl:output indent=\"yes\"/>',\n\t\t\t'</xsl:stylesheet>',\n\t\t].join('\\n');\n\t\tlet xsltDoc = this.parseXML(xslt);\n\t\tlet xsltProc = new XSLTProcessor();\n\t\txsltProc.importStylesheet(xsltDoc);\n\t\tlet resultDoc = xsltProc.transformToDocument(doc);\n\t\treturn new XMLSerializer().serializeToString(resultDoc);\n\t}\n\n\t// composes all of the text nodes and returns them\n\tpublic static nodeText(el:Node):string\n\t{\n\t\tlet text = '';\n\t\tfor (let child of Array.from(el.childNodes))\n\t\t{\n\t\t\tif (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE) text += child.nodeValue;\n\t\t}\n\t\treturn text;\n\t}\n\n\t// convenient method for finding a child element and returning its text content; note that if the parent is null or the child cannot be found,\n\t// returns null, but if the child exists and has no text, returns a blank string\n\tpublic static childText(parent:Element, tagName:string):string\n\t{\n\t\tif (parent == null) return null;\n\t\tlet el = this.findElement(parent, tagName);\n\t\tif (el == null) return null;\n\t\treturn this.nodeText(el);\n\t}\n\n\t// creates and appends an element\n\tpublic static appendElement(parent:Node, name:string):Element\n\t{\n\t\tlet el = parent.ownerDocument.createElement(name);\n\t\tparent.appendChild(el);\n\t\treturn el;\n\t}\n\n\t// creates and appends an element and makes sure that it occurs immediately after the 'presib' node\n\tpublic static appendElementAfter(presib:Node, name:string):Element\n\t{\n\t\tlet el = presib.ownerDocument.createElement(name);\n\t\tlet postsib = presib.nextSibling;\n\t\tif (postsib == null)\n\t\t\tpresib.parentNode.appendChild(el);\n\t\telse\n\t\t\tpresib.parentNode.insertBefore(el, postsib);\n\t\treturn el;\n\t}\n\n\t// creates and appends text, maybe in a CDATA section\n\t//public static appendText(Node parent, String text):void {appendText(parent, text, false);}\n\tpublic static appendText(parent:Node, text:string, isCDATA:boolean = false):void\n\t{\n\t\tif (text == null || text.length == 0) return;\n\t\tif (!isCDATA)\n\t\t\tparent.appendChild(parent.ownerDocument.createTextNode(text));\n\t\telse\n\t\t\tparent.appendChild(parent.ownerDocument.createCDATASection(text));\n\t}\n\n\t// appends an XML entity (e.g. \"&nbsp;\")\n\t/*public static appendEntity(parent:Node, entity:string):void\n\t{\n\t\tif (entity.startsWith('&')) entity = entity.substring(1);\n\t\tif (entity.endsWith(';')) entity = entity.substring(0, entity.length - 1);\n\t\tparent.appendChild(parent.ownerDocument.createEntityReference(entity));\n\t}*/\n\n\t// creates an element child with a particular name and populates it with text\n\tpublic static createTextChild(parent:Node, name:string, text:string, isCDATA:boolean = false):void\n\t{\n\t\tlet el = parent.ownerDocument.createElement(name) as Element;\n\t\tparent.appendChild(el);\n\t\tif (!isCDATA) el.textContent = text; else el.appendChild(parent.ownerDocument.createCDATASection(text));\n\t}\n\n\t// defines the current notes contents as being only the provided text\n\tpublic static setText(parent:Node, text:string, isCDATA:boolean = false):void\n\t{\n\t\twhile (parent.firstChild != null) parent.removeChild(parent.firstChild);\n\t\tthis.appendText(parent, text, isCDATA);\n\t}\n\n\t// returns the first element with the given tag name, or null if none\n\tpublic static findElement(parent:Element, tagName:string):Element\n\t{\n\t\tif (parent == null) return null;\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE && node.nodeName == tagName) return node as Element;\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// find child elements with the given tag name, or an empty array if invalid\n\tpublic static findChildElements(parent:Element, tagName:string):Element[]\n\t{\n\t\tif (parent == null) return [];\n\t\tlet list:Element[] = [];\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE && node.nodeName === tagName) list.push(node as Element);\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns a list of all child elements, or an empty array if none\n\tpublic static childElements(parent:Element):Element[]\n\t{\n\t\tif (parent == null) return [];\n\t\tlet list:Element[] = [];\n\t\tlet node = parent.firstChild;\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (node.nodeType == ELEMENT_NODE) list.push(node as Element);\n\t\t\tnode = node.nextSibling as any;\n\t\t}\n\t\treturn list;\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2021 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Box, Pos, Size} from './Geom';\nimport {XML} from './XML';\n\n/*\n\tDOM: lightweight domain object wrapper that's intended to provide a subset of the functionality of JQuery. Most\n\tof what it does is for convenience rather than the historical need to workaround compatibility issues.\n*/\n\n// generic creator: converts a compatible object into a DOM\nexport function dom(obj:Element | DOM | string):DOM\n{\n\tif (typeof obj == 'string') return DOM.parse(obj);\n\tif (obj instanceof DOM) return obj;\n\treturn new DOM(obj);\n}\n\n// a more permissive version of the above, which also looks for JQuery inputs, for compatibility purposes; type checking is\n// limited, so buyer-beware\nexport function domLegacy(obj:any):DOM\n{\n\tif (obj == null) return null;\n\tif (obj.jquery) return dom(obj[0]);\n\treturn dom(obj);\n}\n\nexport type CSSDictionary = Record<string, string | number | boolean> |\n{\n\t'display': 'none' | 'block' | 'inline-block' | 'flex' | 'inline-flex' | 'grid' | 'inline-grid';\n};\n\nexport class DOM\n{\n\tconstructor(public el:Element)\n\t{\n\t}\n\n\tpublic get elHTML():HTMLElement {return this.el as HTMLElement;}\n\tpublic get elInput():HTMLInputElement {return this.el as HTMLInputElement;}\n\tpublic get elCanvas():HTMLCanvasElement {return this.el as HTMLCanvasElement;}\n\n\tpublic static parse(xhtml:string):DOM\n\t{\n\t\tlet xml = XML.parseXML(xhtml);\n\t\tif (xml == null) throw 'Invalid XHTML string: ' + xhtml;\n\t\tlet html = xml.documentElement.outerHTML;\n\n\t\tlet template = document.createElement('template');\n\t\ttemplate.innerHTML = html;\n\t\treturn new DOM(template.content.firstChild as Element);\n\t}\n\n\t// ------------ discovery ------------\n\n\t// finds just one qualifying element based on the selector string; returns null if nothing\n\tpublic static find(selector:string):DOM\n\t{\n\t\tlet el = document.querySelector(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// finds all instances matching the selector string, or empty array if nothing\n\tpublic static findAll(selector:string):DOM[]\n\t{\n\t\tlet nodeList = document.querySelectorAll(selector);\n\t\tlet domList:DOM[] = [];\n\t\tfor (let n = 0; n < nodeList.length; n++) domList.push(new DOM(nodeList.item(n)));\n\t\treturn domList;\n\t}\n\n\t// returns object for parent, or null if this is the root\n\tpublic parent():DOM\n\t{\n\t\tlet parent = this.el.parentElement;\n\t\treturn parent ? new DOM(parent) : null;\n\t}\n\n\t// returns the first object in the parent's ancestry that matches the selector\n\tpublic ancestor(selector:string):DOM\n\t{\n\t\tlet el = this.el.closest(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// return all the node's element children\n\tpublic children(tag?:string):DOM[]\n\t{\n\t\tlet domList:DOM[] = [];\n\t\tfor (let child = this.el.firstElementChild; child; child = child.nextElementSibling)\n\t\t{\n\t\t\tif (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase()) continue;\n\t\t\tdomList.push(new DOM(child));\n\t\t}\n\t\treturn domList;\n\t}\n\n\t// finds just one qualifying in the child herarchy based on the selector string; returns null if nothing\n\tpublic find(selector:string):DOM\n\t{\n\t\tlet el = this.el.querySelector(selector);\n\t\treturn el ? new DOM(el) : null;\n\t}\n\n\t// finds all instances matching the selector string in the child hierarchy, or empty array if nothing\n\tpublic findAll(selector:string):DOM[]\n\t{\n\t\tlet nodeList = this.el.querySelectorAll(selector);\n\t\tlet domList:DOM[] = [];\n\t\tfor (let n = 0; n < nodeList.length; n++) domList.push(new DOM(nodeList.item(n)));\n\t\treturn domList;\n\t}\n\n\t// returns true if this element still exists in the overall HTML DOM, i.e. hasn't been removed and left dangling\n\tpublic exists():boolean\n\t{\n\t\treturn document.documentElement.contains(this.el);\n\t}\n\n\t// returns true if the element is currently being shown onscreen\n\tpublic isVisible():boolean\n\t{\n\t\treturn this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n\t}\n\n\t// ------------ hierarchy ------------\n\n\t// append the given node to this one's child list\n\tpublic append(child:DOM):void\n\t{\n\t\tthis.el.append(child.el);\n\t}\n\n\t// append this element to the given parent, and then return itself (for convenient chaining)\n\tpublic appendTo(parent:DOM | Element):DOM\n\t{\n\t\tif (parent instanceof DOM)\n\t\t\t(parent as DOM).el.append(this.el);\n\t\telse\n\t\t\t(parent as Element).appendChild(this.el);\n\t\treturn this;\n\t}\n\n\t// insert the given node at the beginning of this one's child list\n\tpublic prepend(child:DOM):void\n\t{\n\t\tthis.el.prepend(child.el);\n\t}\n\n\t// prepend this element to the given parent, and then return itself (for convenient chaining)\n\tpublic prependTo(parent:DOM | Element):DOM\n\t{\n\t\tif (parent instanceof DOM)\n\t\t\t(parent as DOM).el.prepend(this.el);\n\t\telse\n\t\t\t(parent as Element).append(this.el);\n\t\treturn this;\n\t}\n\n\t// inserts this object right before the reference DOM, in the reference DOM's parent list\n\tpublic insertBefore(ref:DOM):DOM\n\t{\n\t\tref.el.parentElement.insertBefore(this.el, ref.el);\n\t\treturn this;\n\t}\n\n\t// inserts this object right after the reference DOM, in the reference DOM's parent list\n\tpublic insertAfter(ref:DOM):DOM\n\t{\n\t\tlet before = ref.el.nextElementSibling;\n\t\tif (before)\n\t\t\tref.el.parentElement.insertBefore(this.el, before);\n\t\telse\n\t\t\tref.el.parentElement.append(this.el);\n\t\treturn this;\n\t}\n\n\t// take this node out of the DOM\n\tpublic remove():void\n\t{\n\t\tthis.el.remove();\n\t}\n\n\t// ------------ properties ------------\n\n\tpublic empty():void\n\t{\n\t\tthis.el.innerHTML = '';\n\t}\n\n\t// getting & setting HTML content\n\tpublic getHTML():string\n\t{\n\t\treturn this.el.innerHTML;\n\t}\n\tpublic setHTML(html:string):void\n\t{\n\t\tthis.el.innerHTML = html;\n\t}\n\tpublic appendHTML(xhtml:string):void\n\t{\n\t\tlet xml = XML.parseXML('<z>' + xhtml + '</z>');\n\t\tif (xml == null) throw 'Invalid XHTML string: ' + xhtml;\n\t\tlet html = xml.documentElement.innerHTML;\n\t\tthis.el.insertAdjacentHTML('beforeend', html);\n\t}\n\n\t// getting & setting unmarkedup text\n\tpublic getText():string\n\t{\n\t\treturn this.el.textContent;\n\t}\n\tpublic setText(text:string):void\n\t{\n\t\tthis.el.textContent = text;\n\t}\n\tpublic appendText(text:string):void\n\t{\n\t\t//this.el.innerHTML += escapeHTML(text);\n\t\tlet content = document.createTextNode(text);\n\t\tthis.el.appendChild(content);\n\t}\n\n\t// getting & setting values of interactive widgets, like <input>\n\tpublic getValue():string\n\t{\n\t\treturn (this.el as HTMLInputElement).value;\n\t}\n\tpublic setValue(str:string):void\n\t{\n\t\t(this.el as HTMLInputElement).value = str || '';\n\t}\n\n\t// getting & setting CSS values\n\tpublic getCSS(key:string):string\n\t{\n\t\treturn this.elHTML.style.getPropertyValue(key);\n\t}\n\tpublic setCSS(key:string, value:string | number):void\n\t{\n\t\tthis.elHTML.style.setProperty(key, value?.toString());\n\t}\n\tpublic css(dict:CSSDictionary):DOM\n\t{\n\t\tfor (let key in dict) this.setCSS(key, (dict as Record<string, any>)[key].toString());\n\t\treturn this;\n\t}\n\n\t// getting & setting attributes\n\tpublic getAttr(key:string):string\n\t{\n\t\tif (!this.el.hasAttribute(key)) return null;\n\t\treturn this.el.getAttribute(key);\n\t}\n\tpublic setAttr(key:string, value:string):void\n\t{\n\t\tthis.el.setAttribute(key, value);\n\t}\n\tpublic attr(dict:Record<string, string | number | boolean>):DOM\n\t{\n\t\tfor (let key in dict) this.setAttr(key, dict[key].toString());\n\t\treturn this;\n\t}\n\n\t// getting & setting CSS classes\n\tpublic addClass(clsnames:string):void\n\t{\n\t\tfor (let cls of clsnames.split(' ')) if (cls) this.elHTML.classList.add(cls);\n\t}\n\tpublic removeClass(clsnames:string):void\n\t{\n\t\tfor (let cls of clsnames.split(' ')) if (cls) this.elHTML.classList.remove(cls);\n\t}\n\tpublic hasClass(clsname:string):boolean\n\t{\n\t\treturn this.elHTML.classList.contains(clsname);\n\t}\n\tpublic setClass(clsname:string, flag:boolean):void\n\t{\n\t\tif (flag) this.addClass(clsname); else this.removeClass(clsname);\n\t}\n\tpublic class(clsname:string):DOM\n\t{\n\t\tthis.addClass(clsname);\n\t\treturn this;\n\t}\n\tpublic toggleClass(dict:Record<string, boolean>):void\n\t{\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tif (dict[key]) this.elHTML.classList.add(key); else this.elHTML.classList.remove(key);\n\t\t}\n\t}\n\n\t// position & size\n\tpublic width():number\n\t{\n\t\treturn this.elHTML.offsetWidth;\n\t}\n\tpublic height():number\n\t{\n\t\treturn this.elHTML.offsetHeight;\n\t}\n\tpublic offset():Pos\n\t{\n\t\tlet rect = this.el.getBoundingClientRect();\n\t\tlet win = this.el.ownerDocument.defaultView;\n\t\treturn new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n\t}\n\tpublic size():Size\n\t{\n\t\treturn new Size(this.width(), this.height());\n\t}\n\tpublic area():Box\n\t{\n\t\tlet pos = this.offset();\n\t\treturn new Box(pos.x, pos.y, this.width(), this.height());\n\t}\n\n\t// shorthand for defining the precise rectangle in pixels\n\tpublic setBoundaryPixels(x:number, y:number, w:number, h:number):void\n\t{\n\t\tthis.css({'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px`});\n\t}\n\n\t// similar convenience for size in hard pixels\n\tpublic setSizePixels(w:number, h:number):void\n\t{\n\t\tthis.css({'width': `${w}px`, 'height': `${h}px`});\n\t}\n\n\t// focus: testing and taking focus; note that focus grabbing often works better with a short delay, hence the convenient option\n\tpublic hasFocus():boolean\n\t{\n\t\treturn this.el === document.activeElement;\n\t}\n\tpublic grabFocus(delay = false):void\n\t{\n\t\tif (delay)\n\t\t\tsetTimeout(() => this.grabFocus(), 10);\n\t\telse\n\t\t\tthis.elHTML.focus();\n\t}\n\n\t// ------------ events ------------\n\n\tpublic removeEvent(id:string, callback:any):void\n\t{\n\t\tthis.el.removeEventListener(id, callback);\n\t}\n\tpublic onKeyDown(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keydown', callback);\n\t}\n\tpublic onKeyUp(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keyup', callback);\n\t}\n\tpublic onKeyPress(callback:(event?:KeyboardEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('keypress', callback);\n\t}\n\tpublic onScroll(callback:(event?:Event) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('scroll', callback);\n\t}\n\tpublic onWheel(callback:(event?:WheelEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('wheel', callback);\n\t}\n\tpublic onClick(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('click', callback);\n\t}\n\tpublic onContextMenu(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('contextmenu', callback);\n\t}\n\tpublic onDblClick(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('dblclick', callback);\n\t}\n\tpublic onMouseDown(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mousedown', callback);\n\t}\n\tpublic onMouseUp(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseup', callback);\n\t}\n\tpublic onMouseEnter(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseenter', callback);\n\t}\n\tpublic onMouseLeave(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseleave', callback);\n\t}\n\tpublic onMouseMove(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mousemove', callback);\n\t}\n\tpublic onMouseOver(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('mouseover', callback);\n\t}\n\tpublic onChange(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('change', callback);\n\t}\n\tpublic onInput(callback:(event?:MouseEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('input', callback);\n\t}\n\tpublic onTouchStart(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchstart', callback);\n\t}\n\tpublic onTouchMove(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchmove', callback);\n\t}\n\tpublic onTouchCancel(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchcancel', callback);\n\t}\n\tpublic onTouchEnd(callback:(event?:TouchEvent) => boolean | void):void\n\t{\n\t\tthis.el.addEventListener('touchend', callback);\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2020 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n\n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DOM, dom, domLegacy} from './dom';\nimport {Size} from './Geom';\nimport {Vec} from './Vec';\n\n/*\n\tGeneral purpose functions. Note that these are not in the WebMolKit namespace.\n*/\n\n//export declare var $:JQueryStatic;\n\n// string-to-number: control the behaviour when invalid\nexport function safeInt(str:string, def:number = 0):number\n{\n\tif (str == null || str.length == 0) return def;\n\tlet val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n\t\t\tstr.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n\treturn isNaN(val) ? def : val;\n}\nexport function safeFloat(str:string, def:number = 0):number\n{\n\tif (str == null || str.length == 0) return def;\n\tlet val = parseFloat(str);\n\treturn isNaN(val) ? def : val;\n}\n\n// creates a new element, with a specific parent (raw or jQuery); returns the child node - the raw DOM element, not the\n// jQuery wrapper\nexport function newElement(parent:any, tag:string, attr?:Record<string, any>):Element\n{\n\t/*let el = $(`<${tag}>`);\n\tif (attr) el.attr(attr);\n\t$(parent).append(el);\n\treturn el[0];*/\n\n\tlet domNew = dom(`<${tag}/>`);\n\tif (attr) domNew.attr(attr);\n\tdomLegacy(parent).append(domNew);\n\treturn domNew.el;\n}\n\n// appends child text to the node\nexport function addText(parent:any, text:string)\n{\n\tlet el = dom(parent).el;\n\tel.appendChild(document.createTextNode(text));\n}\n\n// convenience function for adding the plural modifier, i.e. \"1 thing\" vs \"N things\"\nexport function plural(count:number):string\n{\n\treturn count == 1 ? '' : 's';\n}\n\n// turns a number into a floating point representation with a maximum number of significant figures\nexport function formatDouble(value:number, sigfig:number):string\n{\n\tif (value == null) return '';\n\tlet str = value.toPrecision(sigfig);\n\tif (str.indexOf('.') > 0)\n\t{\n\t\twhile (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\tif (str.endsWith('.')) str = str.substring(0, str.length - 1);\n\t}\n\treturn str;\n}\n\n// turns an HTML-style colour (#RRGGBB) into its numeric equivalent (0xRRGGBB), or null if invalid\nexport function htmlToRGB(col:string):number\n{\n\tif (col == null || col.charAt(0) != '#' || col.length != 7) return null;\n\treturn parseInt(col.substring(1), 16);\n}\n\n// converts an integer colour (0xTTRRGGBB) to the HTML style; transparency info is stripped out\nexport function colourCode(col:number):string\n{\n\tlet hex = (col & 0xFFFFFF).toString(16);\n\twhile (hex.length < 6) hex = '0' + hex;\n\treturn '#' + hex;\n}\n// returns the alpha value for a colour, assuming that it is an integer of the 0xTTRRGGBB format\nexport function colourAlpha(col:number):number\n{\n\tlet transp = (col >>> 24) & 0xFF;\n\treturn transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\n// turns a TRGB integer into the style used by the canvas node\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col:number):string\n{\n\t// simple cases first\n\tif (col == 0xFFFFFF) return 'white';\n\tif (col == 0x000000) return 'black';\n\tif (col == -1) return null; //return 'rgba(0,0,0,0)';\n\tif (col >= 0 && col <= 0xFFFFFF) return colourCode(col);\n\n\t// if there's transparency, use the long-winded syntax\n\tconst t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n\tconst r = ((col >> 16) & 0xFF);// * ONE_OVER_255;\n\tconst g = ((col >> 8) & 0xFF);// * ONE_OVER_255;\n\tconst b = (col & 0xFF);// * ONE_OVER_255;\n\treturn 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\n\n// RGB manipulation: very convenient functions for \"smearing\" between fractional values\nexport function blendRGB(fract:number, rgb1:number, rgb2:number, rgb3?:number):number\n{\n\tfract = Math.max(0, Math.min(1, fract));\n\n\tlet r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n\tlet r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n\tlet R:number, G:number, B:number;\n\n\tif (rgb3 == null)\n\t{\n\t\tlet f1 = 1 - fract, f2 = fract;\n\t\tR = Math.round(0xFF * (f1 * r1 + f2 * r2));\n\t\tG = Math.round(0xFF * (f1 * g1 + f2 * g2));\n\t\tB = Math.round(0xFF * (f1 * b1 + f2 * b2));\n\t}\n\telse\n\t{\n\t\tlet r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n\n\t\tif (fract < 0.5)\n\t\t{\n\t\t\tlet f2 = fract * 2, f1 = 1 - f2;\n\t\t\tR = Math.round(0xFF * (f1 * r1 + f2 * r2));\n\t\t\tG = Math.round(0xFF * (f1 * g1 + f2 * g2));\n\t\t\tB = Math.round(0xFF * (f1 * b1 + f2 * b2));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n\t\t\tR = Math.round(0xFF * (f1 * r2 + f2 * r3));\n\t\t\tG = Math.round(0xFF * (f1 * g2 + f2 * g3));\n\t\t\tB = Math.round(0xFF * (f1 * b2 + f2 * b3));\n\t\t}\n\t}\n\n\treturn (R << 16) | (G << 8) | B;\n}\n\n// formats date nicely, as dd-mon-yyyy\nexport function formatDate(date:Date):string\n{\n\tconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tlet day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n\treturn day + '-' + MONTHS[mon] + '-' + year;\n}\n\n// goes through all text-node children and splices them together\nexport function nodeText(node:Node):string\n{\n\tlet ret = '';\n\tif (!node) return '';\n\tnode = node.firstChild;\n\twhile (node)\n\t{\n\t\tif (node.nodeType == 3 || node.nodeType == 4) ret += node.nodeValue;\n\t\tnode = node.nextSibling;\n\t}\n\treturn ret;\n}\n\n// convenience functions to abstract the unreasonably longwinded closures function\nexport function isDef(v:any):boolean\n{\n\treturn !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v:any):boolean\n{\n\treturn v === null || typeof v === 'undefined';\n}\n\n// given a particular event, picks out the (x,y) coordinates, and offsets them until they are in the space of the given\n// node container, which must be a parent\nexport function eventCoords(event:MouseEvent | Touch, container:any):number[]\n{\n\tlet pos = domLegacy(container).offset();\n\tlet relX = event.pageX - pos.x;\n\tlet relY = event.pageY - pos.y;\n\treturn [relX, relY];\n}\n\n// sets an object's position by pixel: convenience function otherwise rather ugly code; assumes that the positioning style already configured as needed\nexport function setBoundaryPixels(dom:DOM, x:number, y:number, w:number, h:number):void\n{\n\tdom.css({'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px'});\n}\n\n// return the object's screen position as [x, y, w, h]\nexport function getBoundaryPixelsDOM(dom:DOM):[number, number, number, number]\n{\n\tlet offset = dom.offset();\n\treturn [offset.x, offset.y, dom.width(), dom.height()];\n}\n\n// return the object's position and size relative to its parent\nexport function getOffsetPixelsDOM(dom:DOM):[number, number, number, number]\n{\n\treturn [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\n\n// geometry functions\nexport function norm_xy(dx:number, dy:number):number\n{\n\t//return Math.sqrt(dx * dx + dy * dy);\n\treturn Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx:number, dy:number, dz:number):number\n{\n\t//return Math.sqrt(dx * dx + dy * dy + dz * dz);\n\treturn Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx:number, dy:number):number\n{\n\treturn dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx:number, dy:number, dz:number):number\n{\n\treturn dx * dx + dy * dy + dz * dz;\n}\n\n// converts a floating point number fo -1,0,1 depending on sign or lack thereof\nexport function signum(v:number):number\n{\n\treturn v < 0 ? -1 : v > 0 ? 1 : 0;\n}\n\n// miscellaneous math\nexport function sqr(v:number):number\n{\n\treturn v * v;\n}\nexport function invZ(v:number):number {return v == 0 ? 0 : 1.0 / v;}\n\n// returns true if the numbers are effectively equal, assuming float/double precision\nexport function fltEqual(v1:number, v2:number) {return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2);}\nexport function realEqual(v1:number, v2:number) {return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2);}\n\n// returns a random integer between 0 and size-1\nexport function randomInt(size:number):number\n{\n\tif (size <= 1) return 0;\n\treturn Math.floor(Math.random() * size);\n}\n\n// angle helpers\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\n\n// normalised angle, guaranteed to be -PI <= th < PI\nexport function angleNorm(th:number):number\n{\n\tif (th == -Math.PI) return Math.PI;\n\tif (th < -Math.PI) {let mod = Math.ceil((-th - Math.PI) * INV_TWOPI); return th + mod * TWOPI;}\n\tif (th > Math.PI) {let mod = Math.ceil((th - Math.PI) * INV_TWOPI); return th - mod * TWOPI;}\n\treturn th;\n}\n\n// angular difference, guaranteed to be normalised (-PI <= th < PI); think of it as {th1 - th2}\nexport function angleDiff(th1:number, th2:number):number\n{\n\tlet theta = angleNorm(th1) - angleNorm(th2);\n\treturn theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\n\n// angular difference, which is normalised from 0 <= th < 2 * PI\nexport function angleDiffPos(th1:number, th2:number):number\n{\n\tlet theta = angleNorm(th1) - angleNorm(th2);\n\treturn theta + (theta < 0 ? TWOPI : 0);\n}\n\n// for an array of angles (in radians), sorts them in order; then, rotates the array around as many times as is necessary\n// so that the difference between the first & last angles is >= than the difference between the first & second\nexport function sortAngles(theta:number[]):number[]\n{\n\tif (theta == null || theta.length < 2) return theta;\n\ttheta = theta.slice(0);\n\tfor (let n = 0; n < theta.length; n++) theta[n] = angleNorm(theta[n]);\n\tVec.sort(theta);\n\twhile (true)\n\t{\n\t\tlet a = theta[theta.length - 1], b = theta[0], c = theta[1];\n\t\tif (angleDiff(b, a) <= angleDiff(c, b)) break;\n\t\tfor (let n = theta.length - 1; n > 0; n--) theta[n] = theta[n - 1];\n\t\ttheta[0] = a;\n\t}\n\treturn theta;\n}\n\n// calculates a list of unique angles (based on the threshold parameter, in radians), and returns it; the returned list of\n// angles will be sorted in order, as described by sortAngles(..); note that there is no fancy clustering, so a sequence of\n// angles which are a bit below the threshold is not guaranteed to be stable; there is also a boundary case which bumps the\n// sort rotation status slightly out of whack\nexport function uniqueAngles(theta:number[], threshold:number):number[]\n{\n\ttheta = sortAngles(theta);\n\tfor (let n = 1; n < theta.length; n++)\n\t{\n\t\tif (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {theta.splice(n, 1); n--;}\n\t}\n\treturn theta;\n}\n\n// array bounds\nexport function minArray(a:number[]):number\n{\n\tif (a == null || a.length == 0) return 0;\n\tlet v = a[0];\n\tfor (let n = 1; n < a.length; n++) v = Math.min(v, a[n]);\n\treturn v;\n}\nexport function maxArray(a:number[]):number\n{\n\tif (a == null || a.length == 0) return 0;\n\tlet v = a[0];\n\tfor (let n = 1; n < a.length; n++) v = Math.max(v, a[n]);\n\treturn v;\n}\n\n// convenience function: finds a child node by name\nexport function findNode(parent:Node, name:string):Element\n{\n\tif (parent == null) return null;\n\tlet node = parent.firstChild;\n\twhile (node)\n\t{\n\t\tif (/*node.nodeType == Node.ELEMENT_NODE &&*/ node.nodeName == name) return node as Element;\n\t\tnode = node.nextSibling as any;\n\t}\n\treturn null;\n}\n\n// as above, but returns a list; may be empty\nexport function findNodes(parent:Node, name:string):Element[]\n{\n\tif (parent == null) return null;\n\tlet node = parent.firstChild;\n\tlet list:Element[] = [];\n\twhile (node)\n\t{\n\t\tif (/*node.nodeType == Node.ELEMENT_NODE &&*/ node.nodeName == name) list.push(node as Element);\n\t\tnode = node.nextSibling as any;\n\t}\n\treturn list;\n}\n\n// creates a rounded rectangle path using splines\nexport function pathRoundedRect(x1:number, y1:number, x2:number, y2:number, rad:number):Path2D\n{\n\tlet path = new Path2D();\n\tpath.moveTo(x2 - rad, y1);\n\tpath.quadraticCurveTo(x2, y1, x2, y1 + rad);\n\tpath.lineTo(x2, y2 - rad);\n\tpath.quadraticCurveTo(x2, y2, x2 - rad, y2);\n\tpath.lineTo(x1 + rad, y2);\n\tpath.quadraticCurveTo(x1, y2, x1, y2 - rad);\n\tpath.lineTo(x1, y1 + rad);\n\tpath.quadraticCurveTo(x1, y1, x1 + rad, y1);\n\tpath.closePath();\n\treturn path;\n}\n\n// returns a rounded rect definition w. control points\nexport function coordsRoundedRect(x1:number, y1:number, x2:number, y2:number, rad:number):[number[], number[], boolean[]]\n{\n\tlet px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n\tlet py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n\tlet ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n\treturn [px, py, ctrl];\n}\n\n// convenience functions\nexport function drawLine(ctx:CanvasRenderingContext2D, x1:number, y1:number, x2:number, y2:number)\n{\n\tctx.beginPath();\n\tctx.moveTo(x1, y1);\n\tctx.lineTo(x2, y2);\n\tctx.stroke();\n}\n\n// for HTML canvas, approximates the conversion of height to ascent ratio (i.e. pass in ascent * ASCENT_FUDGE to the font height)\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent:number) {return `${ascent * ASCENT_FUDGE}px sans-serif`;}\n\n// returns the density of pixels, i.e. 1 for a regular screen, 2 for retina, etc.\nexport function pixelDensity():number\n{\n\tif ('devicePixelRatio' in window && window.devicePixelRatio > 1) return window.devicePixelRatio;\n\treturn 1;\n}\n\n// performs a shallow copy of the object: the top level guarantees new objects, while anything below that may contain\n// duplicate references with potential mutability issues\nexport function clone<T>(data:T):T\n{\n\tif (data == null) return null;\n\tif (Array.isArray(data)) return (data as any).slice(0) as T;\n\tif (typeof data != 'object') return data;\n\tlet result:any = {};\n\tfor (let key in data) result[key] = data[key];\n\treturn result as T;\n}\n\n// performs a deep clone of any kind of object: goes as deep as it has to to make sure everything is immutable; the parameter\n// should not contain functions or host objects\nexport function deepClone<T>(data:T):T\n{\n\tif (data == null) return null;\n\tif (typeof data == 'function') return null;\n\tif (typeof data != 'object') return data;\n\n\tlet result:any = Array.isArray(data) ? [] : {};\n\tfor (let key in data)\n\t{\n\t\tlet val = data[key];\n\t\tresult[key] = typeof val === 'object' ? deepClone(val) : val;\n\t}\n\treturn result as T;\n}\n\n// HTML-to-escape; gets most of the basics\nexport function escapeHTML(text:string):string\n{\n\tif (!text) return '';\n\tconst map:Record<string, string> = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n\treturn text.replace(/[&<>\"']/g, (m) => map[m]);\n}\n\n// convenience: make sure a string isn't null\nexport function orBlank(str:string):string {return str == null ? '' : str;}\n\n// abstracts values into an array; this will be obsolete once Object.values() makes it into the typescript mappings\nexport function dictValues<T>(dict:{[id:string] : T}):T[]\n{\n\tlet list:T[] = [];\n\tfor (let key in dict) list.push(dict[key]);\n\treturn list;\n}\n\n// iterate over two arrays at the same time\nexport function zip<U, V>(u:U[], v:V[]):[U, V][]\n{\n\treturn u.map((a, i) => [a, v[i]]);\n}\n\n// converts a string (which is stored by JavaScript as UCS2) to UTF8, where each character is guaranteed to be 1 byte\nexport function toUTF8(str:string):string\n{\n\tlet data:string[] = [], stripe = '';\n\tconst sz = str.length;\n\tfor (let n = 0; n < sz; n++)\n\t{\n\t\tlet charcode = str.charCodeAt(n);\n\t\tif (charcode < 0x80) stripe += str.charAt(n);\n\t\telse if (charcode < 0x800)\n\t\t{\n\t\t\tstripe += String.fromCharCode(0xc0 | (charcode >> 6));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000)\n\t\t{\n\t\t\tstripe += String.fromCharCode(0xe0 | (charcode >> 12));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\telse // surrogate pair\n\t\t{\n\t\t\tn++;\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n\t\t\tstripe += String.fromCharCode(0xf0 | (charcode >> 18));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n\t\t\tstripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n\t\t}\n\t\tif (stripe.length > 100)\n\t\t{\n\t\t\tdata.push(stripe);\n\t\t\tstripe = '';\n\t\t}\n\t}\n\tdata.push(stripe);\n\treturn data.join('');\n}\n\n// converts a UTF8 string to a regular JavaScript string (which is UCS2-encoded)\nexport function fromUTF8(str:string):string\n{\n\tlet data:string[] = [], stripe = '';\n\tconst sz = str.length;\n\tfor (let n = 0; n < sz; n++)\n\t{\n\t\tlet value = str.charCodeAt(n);\n\t\tif (value < 0x80) stripe += str.charAt(n);\n\t\telse if (value > 0xBF && value < 0xE0)\n\t\t{\n\t\t\tstripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n\t\t\tn++;\n\t\t}\n\t\telse if (value > 0xDF && value < 0xF0)\n\t\t{\n\t\t\tstr += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n\t\t\tn += 2;\n\t\t}\n\t\telse // surrogate pair\n\t\t{\n\t\t\tlet charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n\t\t\tstripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n\t\t\tn += 3;\n\t\t}\n\t\tif (stripe.length > 100)\n\t\t{\n\t\t\tdata.push(stripe);\n\t\t\tstripe = '';\n\t\t}\n\t}\n\tdata.push(stripe);\n\treturn data.join('');\n}\n\n// returns a pretty-printed JSON representation with tabs and aligned braces (Allman/ANSI-style) rather than the kack-braced default\nexport function jsonPrettyPrint(json:any):string\n{\n\tlet lines = JSON.stringify(json, null, 1).split(/\\n/);\n\tfor (let n = 0; n < lines.length; n++)\n\t{\n\t\tlines[n] = lines[n].trim();\n\t\tif (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('[')))\n\t\t{\n\t\t\tlet ch = lines[n].charAt(lines[n].length - 1);\n\t\t\tlines[n] = lines[n].substring(0, lines[n].length - 1);\n\t\t\tlines.splice(n + 1, 0, ch);\n\t\t\tn--;\n\t\t}\n\t}\n\tlet indent = 0;\n\tfor (let n = 0; n < lines.length; n++)\n\t{\n\t\tlet orig = lines[n];\n\t\tif (orig == ']' || orig == '}' || orig == '],' || orig == '},') indent--;\n\t\tlines[n] = '\\t'.repeat(indent) + orig;\n\t\tif (orig == '[' || orig == '{') indent++;\n\t}\n\treturn lines.join('\\n');\n}\n\n// special keycodes, which correspond to KeyboardEvent.key: for the most part anything that is written on the keyboard as a single character can\n// be used literally (e.g. things like 1 , < [ {); these named constants are not all self-explanatory\nexport const enum KeyCode\n{\n\tBackspace = 'Backspace',\n\tTab = 'Tab',\n\tEnter = 'Enter',\n\tEscape = 'Escape',\n\tSpace = ' ',\n\tPageUp = 'PageUp',\n\tPageDown = 'PageDown',\n\tEnd = 'End',\n\tHome = 'Home',\n\tLeft = 'ArrowLeft',\n\tRight = 'ArrowRight',\n\tUp = 'ArrowUp',\n\tDown = 'ArrowDown',\n\tDelete = 'Delete',\n\tInsert = 'Insert',\n}\n\n// fetches the contents of a file, referenced via URL, and presumed to be text formatted; conveniently wrapped in an async promise; note that a failure\n// of any kind returns null\nexport async function readTextURL(url:string | URL):Promise<string>\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tlet request = new XMLHttpRequest();\n\t\trequest.open('GET', url.toString(), true);\n\t\trequest.responseType = 'text';\n\t\trequest.onload = () => resolve(request.response.toString());\n\t\trequest.onerror = () => /*reject('Failed to request URL: ' + url)*/ resolve(null);\n\t\trequest.send();\n\t});\n}\n\n// calls a service with the POST method, sending a JSON object, and expects a JSON object in return; will throw an exception on failure\nexport async function postJSONURL(url:string | URL, params:Record<string, any>):Promise<Record<string, any>>\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tlet request = new XMLHttpRequest();\n\t\trequest.open('POST', url.toString(), true);\n\t\trequest.responseType = 'text';\n\t\trequest.onload = () =>\n\t\t{\n\t\t\tlet txt = request.response.toString();\n\t\t\ttry {resolve(JSON.parse(txt));}\n\t\t\tcatch (ex)\n\t\t\t{\n\t\t\t\tlet snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n\t\t\t\treject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n\t\t\t}\n\t\t};\n\t\trequest.onerror = () => reject('Failed to request URL: ' + url);\n\t\trequest.send(JSON.stringify(params));\n\t});\n}\n\n// convenience function that yields the execution state, providing the DOM with a chance to update the screen; this is\n// not necessarily sufficient to provide a responsive UI for grinding calculation, but it can at least be useful to\n// refresh status\nexport async function yieldDOM():Promise<void>\n{\n\treturn new Promise<void>((resolve) => setTimeout(() => resolve()));\n}\n\n// pauses for some number of seconds, within an async block\nexport async function pause(seconds:number):Promise<void>\n{\n\treturn new Promise<void>((resolve) => setTimeout(() => resolve(), seconds * 1000));\n}\n\n// practical workaround for figuring out how much space the scrollers will used when realised; on Mac-like or mobile platforms this will generally be zero,\n// whereas for Windows/Linux-like platforms it's usually around 20 pixels or so; it will finagle the DOM invisibly the first time it is called\nlet staticScrollerSize:Size = null;\nexport function empiricalScrollerSize():Size\n{\n\tif (staticScrollerSize) return staticScrollerSize;\n\n\tlet outer = dom('<div/>').css({'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll'}).appendTo(dom(document.body));\n\tlet inner = dom('<div/>').css({'width': '100%', 'height': '100%'}).appendTo(outer);\n\tstaticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n\touter.remove();\n\treturn staticScrollerSize;\n}\n\n// returns # of permutations between the two strings, where 0 means that the two strings are identical; strings are case sensitive;\n// performance isn't linear, so be careful with rate limiting steps\nexport function stringSimilarityPermutations(str1:string, str2:string):number\n{\n\tif (!str1 || !str2) return 0;\n\tconst ch1 = Array.from(str1), len1 = ch1.length;\n\tconst ch2 = Array.from(str2), len2 = ch2.length;\n\n\tlet levenshteinDistance = (sz1:number, sz2:number):number =>\n\t{\n\t\tlet dist:number[][] = [];\n\t\tfor (let i = 0; i <= sz1; i++)\n\t\t{\n\t\t\tdist.push(Vec.numberArray(0, sz2 + 1));\n\t\t\tdist[i][0] = i;\n\t\t}\n\t\tfor (let j = 1; j <= sz2; j++) dist[0][j] = j;\n\n\t\tfor (let j = 1; j <= sz2; j++) for (let i = 1; i <= sz1; i++)\n\t\t{\n\t\t\tlet cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n\t\t\tdist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n\t\t}\n\t\treturn dist[sz1][sz2];\n\t};\n\n\tlet cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n\tlet lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n\tlet lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n\tlet lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n\treturn Math.min(Math.min(lev1, lev2), lev3);\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2016 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n    \n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {yieldDOM} from '@wmk/util/util';\n\n/*\n\tStorage class for a sequence of tests. Use pattern: inherit the class, and add each of the tests (callback functions) in the constructor; hand over the \n\tinstance to an execution environment that calls each of them in turn.\n*/\n\nexport interface ValidationTest\n{\n\ttitle:string;\n\tfunc:() => void;\n}\n\nexport class Validation\n{\n\n\t// the tests themselves \n\tprivate tests:ValidationTest[] = []; \n\n\t// failure during setup process\n\tpublic setupError:any = null;\n\n\t// results from the most recently run test\n\tprivate recentSuccess:boolean; // true if test succeeded\n\tprivate recentError:string; // what went wrong, or null if no information\n\tprivate recentTimeTaken:number; // in seconds\n\n\t// validation tests can use this to store situational data, especially when subsequent tests re-use data from previous tests\n\tpublic rec:Record<string, any> = {};\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// override these to perform initialisation/de-initialisation tasks; these can include asynchronous calls, such as loading files\n\tpublic async init():Promise<void>\n\t{\n\t}\n\tpublic async deinit():Promise<void>\n\t{\n\t}\n\n\t// adds a test to the list; note that when it gets called, 'this' will be set to the object instance\n\tpublic add(title:string, func:() => void):void\n\t{\n\t\tthis.tests.push({title, func});\n\t}\n\n\t// external access to tests, with the intention of running them and obtaining results\n\tpublic get count():number {return this.tests.length;}\n\tpublic getTitle(idx:number):string {return this.tests[idx].title;}\n\n\t// executes a test: the return value indicates whether it succeeded, the error message (if any), and the time taken to execute\n\tpublic async runTest(idx:number):Promise<[boolean, string, number]>\n\t{\n\t\tthis.recentSuccess = true;\n\t\tthis.recentError = null;\n\t\t\n\t\tlet timeStarted = new Date().getTime();\n\n\t\ttry {await this.tests[idx].func.call(this);}\n\t\tcatch (e)\n\t\t{\n\t\t\t// two scenarios: rogue exceptions that happened during the validation are caught and converted into error messages with debug\n\t\t\t// information; and failed assertions, which percolate up, after having already detailed the cause\n\t\t\tthis.recentSuccess = false;\n\t\t\tif (this.recentError == null)\n\t\t\t{\n\t\t\t\tthis.recentError = 'Exception: ' + (e.message || e);\n\t\t\t\tif (e.fileName) this.recentError += ', file: ' + e.fileName;\n\t\t\t\tif (e.lineNumber) this.recentError += ', line: ' + e.lineNumber;\n\t\t\t\t//console.log('Unhandled exception in validation:\\n' + (e.stack || e));\n\t\t\t\tconsole.log('Unhandled exception in validation:');\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\tlet timeFinished = new Date().getTime();\n\n\t\tthis.recentTimeTaken = (timeFinished - timeStarted) / 1000;\n\n\t\tawait this.gasp();\n\n\t\treturn [this.recentSuccess, this.recentError, this.recentTimeTaken];\n\t}\n\n\t// call this to give the DOM a chance to update itself\n\tpublic async gasp()\n\t{\n\t\t//await (() => new Promise((resolve) => setTimeout(() => resolve(), 0)))();\n\t\tawait yieldDOM();\n\t}\n\n\t// fail conditions: these methods should be called to make sure some condition is met\n\tpublic assert(condition:boolean, message?:string):void\n\t{\n\t\tif (condition) return;\n\t\tthis.recentError = message;\n\t\tthrow '!';\n\t}\n\tpublic assertEqual(thing1:any, thing2:any, message?:string):void\n\t{\n\t\tif (thing1 == thing2) return;\n\t\tthis.recentError = message;\n\t\tthrow '!';\n\t}\n\tpublic assertNull(thing:any, message?:string)\n\t{\n\t\tif (thing == null) return;\n\t\tthis.recentError = message;\n\t\tthrow '!';\n\t}\n\tpublic assertNotNull(thing:any, message?:string)\n\t{\n\t\tif (thing != null) return;\n\t\tthis.recentError = message;\n\t\tthrow '!';\n\t}\n\tpublic fail(message?:string):void\n\t{\n\t\tthis.recentError = message;\n\t\tthrow '!';\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2016 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n    \n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Vec} from '@wmk/util/Vec';\nimport {Validation} from './Validation';\nimport {AxisLabeller} from '@wmk/gfx/AxisLabeller';\n\n\n/*\n    Headless validation: basic tests - simple things like vector operators and common utilities.\n*/\n\nexport class ValidationHeadlessBasic extends Validation\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.add('Vector index sort', this.vectorIndexSort);\n\t\tthis.add('Axis labeller', this.axisLabeller);\n\t\t//this.add('fubar', this.fubar);\n\t}\n\n\tpublic async vectorIndexSort():Promise<void>\n\t{\n\t\tlet array = ['b', 'c', 'a'];\n\t\tlet idx = Vec.idxSort(array);\n\t\tthis.assert(Vec.equals(idx, [2, 0, 1]));\n\t}\n\n\tpublic async axisLabeller():Promise<void>\n\t{\n\t\tlet textWidth = (str:string):number => str.length * 4; // placeholder for text measurement: good enough to test the algorithm\n\t\tlet tfUnity = (val:number):number => val, tfNegLog = (val:number):number => -Math.log10(val), tfBackLog = (val:number):number => Math.pow(10, -val);\n\n\t\tconst TESTCASES:any[][] =\n\t\t[\n\t\t\t// pixel width, min value, max value, transform\n\t\t\t[1, 100, false, ['10', '100']],\n\t\t\t[0, 1, false, ['0', '1']],\n\t\t\t[0.01, 0.02, false, ['0.01', '0.02']],\n\t\t\t[0.008, 0.022, false, ['0.008', '0.022']],\n\t\t\t[0.00798, 0.0221, false, ['0.008', '0.022']],\n\t\t\t[1E-5, 1E4, true, ['1e+4', '0.00001']],\n\t\t\t[0.03162277660168379, 100, true, ['100', '0.03162']]\n\t\t];\n\t\tfor (let test of TESTCASES)\n\t\t{\n\t\t\tlet low:number = test[0], high:number = test[1];\n\t\t\tlet asLog:boolean = test[2];\n\t\t\tif (asLog) [low, high] = [tfNegLog(high), tfNegLog(low)];\n\t\t\tlet axis = new AxisLabeller(100, low, high, textWidth, asLog ? tfBackLog : tfUnity);\n\t\t\taxis.calculate();\n\n\t\t\tlet wanted:string[] = test[3];\n\t\t\tlet got:string[] = [];\n\t\t\tfor (let notch of axis.notches) got.push(notch.label);\n\t\t\tif (wanted.length == 0 || !Vec.equals(wanted, got))\n\t\t\t{\n\t\t\t\tconsole.log('Test:' + JSON.stringify(test));\n\t\t\t\tconsole.log('Notches:' + JSON.stringify(axis.notches));\n\t\t\t\tconsole.log('Wanted:' + JSON.stringify(wanted));\n\t\t\t\tconsole.log('Got:' + JSON.stringify(got));\n\t\t\t\tthis.fail('Did not get the expected axis labels.');\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2016 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n    \n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {Molecule} from '@wmk/mol/Molecule';\nimport {Validation} from './Validation';\nimport {DataSheet, DataSheetColumn} from '@wmk/ds/DataSheet';\nimport {orBlank, readTextURL} from '@wmk/util/util';\nimport {DataSheetStream} from '@wmk/io/DataSheetStream';\nimport {MoleculeStream} from '@wmk/io/MoleculeStream';\nimport {MDLMOLReader, MDLSDFReader} from '@wmk/io/MDLReader';\nimport {MetaMolecule} from '@wmk/mol/MetaMolecule';\nimport {Stereochemistry} from '@wmk/mol/Stereochemistry';\nimport {Vec} from '@wmk/util/Vec';\nimport {CircularFingerprints} from '@wmk/calc/CircularFingerprints';\nimport {MDLMOLWriter} from '@wmk/io/MDLWriter';\n\n/*\n\tHeadless validation: molecule tests - algorithms that apply to molecular connection tables.\n*/\n\nexport class ValidationHeadlessMolecule extends Validation\n{\n\tprivate strSketchEl:string;\n\tprivate strMolfile:string;\n\tprivate strDataXML:string;\n\tprivate strSDfile:string;\n\tprivate molStereo:Molecule;\n\tprivate dsCircular:DataSheet;\n\tprivate dsRoundtrip:DataSheet;\n\n\tconstructor(private urlBase:string)\n\t{\n\t\tsuper();\n\t\tthis.add('Parse SketchEl molecule (native format)', this.parseSketchEl);\n\t\tthis.add('Parse MDL Molfile', this.parseMolfile);\n\t\tthis.add('Parse DataSheet XML', this.parseDataXML);\n\t\tthis.add('Parse MDL SDfile', this.parseSDfile);\n\t\tthis.add('Calculate strict aromaticity', this.calcStrictArom);\n\t\tthis.add('Calculate stereochemistry', this.calcStereoChem);\n\t\tthis.add('Circular ECFP6 fingerprints', this.calcFingerprints);\n\t\tthis.add('Molfile Round-trip', this.molfileRoundTrip);\n\t}\n\n\tpublic async init():Promise<void>\n\t{\n\t\tconst BUMP = '?ver=' + new Date().getTime(); // bust the cache\n\t\tthis.strSketchEl = await readTextURL(this.urlBase + 'molecule.el' + BUMP);\n\t\tthis.strMolfile = await readTextURL(this.urlBase + 'molecule.mol' + BUMP);\n\t\tthis.strDataXML = await readTextURL(this.urlBase + 'datasheet.ds' + BUMP);\n\t\tthis.strSDfile = await readTextURL(this.urlBase + 'datasheet.sdf' + BUMP);\n\t\tthis.molStereo = Molecule.fromString(await readTextURL(this.urlBase + 'stereo.el' + BUMP));\n\t\tthis.dsCircular = DataSheetStream.readXML(await readTextURL(this.urlBase + 'circular.ds' + BUMP));\n\t\tthis.dsRoundtrip = DataSheetStream.readXML(await readTextURL(this.urlBase + 'roundtrip.ds' + BUMP));\n\t}\n\n\tpublic async parseSketchEl():Promise<void>\n\t{\n\t\tthis.assert(!!this.strSketchEl, 'molecule not loaded');\n\t\tlet mol = MoleculeStream.readNative(this.strSketchEl);\n\t\tthis.assert(mol != null, 'parsing failed');\n\t\tthis.assert(mol.numAtoms == 10 && mol.numBonds == 10, 'wrong atom/bond count');\n\t\t//console.log(this.strSketchEl);\n\t}\n\n\tpublic async parseMolfile():Promise<void>\n\t{\n\t\tthis.assert(!!this.strMolfile, 'molecule not loaded');\n\t\tlet mol = MoleculeStream.readMDLMOL(this.strMolfile);\n\t\tthis.assert(mol != null, 'parsing failed');\n\t\tthis.assert(mol.numAtoms == 10 && mol.numBonds == 10, 'wrong atom/bond count');\n\t\t//console.log(this.strMolfile);\n\t}\n\n\tpublic async parseDataXML():Promise<void>\n\t{\n\t\tthis.assert(!!this.strDataXML, 'datasheet not loaded');\n\t\tlet ds = DataSheetStream.readXML(this.strDataXML);\n\t\tthis.assert(ds != null, 'parsing failed');\n\t\tthis.assert(ds.numRows == 2 && ds.numCols == 5, 'wrong row/column count');\n\t\tlet colTypes = [DataSheetColumn.Molecule, DataSheetColumn.String, DataSheetColumn.Integer, DataSheetColumn.Real, DataSheetColumn.Boolean];\n\t\tfor (let n = 0; n < colTypes.length; n++) this.assert(ds.colType(n) == colTypes[n], 'column#' + (n + 1) + ' wrong type');\n\t\t\n\t\tthis.assert(ds.getMolecule(0, 0).numAtoms == 1, 'row 1: invalid molecule');\n\t\tthis.assert(ds.getString(0, 1) == 'string', 'row 1: invalid string');\n\t\tthis.assert(ds.getInteger(0, 2) == 1, 'row 1: invalid integer');\n\t\tthis.assert(ds.getReal(0, 3) == 1.5, 'row 1: invalid real');\n\t\tthis.assert(ds.getBoolean(0, 4) == true, 'row 1: invalid boolean');\n\n\t\tthis.assert(ds.getMolecule(1, 0).numAtoms == 1, 'row 2: invalid molecule');\n\t\tfor (let n = 1; n < ds.numCols; n++) this.assert(ds.isNull(1, n), 'row 2, column#' + (n + 1) + ' supposed to be null');\t\t\n\t}\n\n\tpublic async parseSDfile():Promise<void>\n\t{\n\t\tthis.assert(!!this.strSDfile, 'datasheet not loaded');\n\t\tlet rdr = new MDLSDFReader(this.strSDfile);\n\t\trdr.parse();\n\t\tlet ds = rdr.ds;\n\t\tthis.assert(ds != null, 'parsing failed');\n\t\tthis.assert(ds.numRows == 2 && ds.numCols == 5, 'wrong row/column count');\n\t\tlet colTypes = [DataSheetColumn.Molecule, DataSheetColumn.String, DataSheetColumn.Integer, DataSheetColumn.Real, DataSheetColumn.Boolean];\n\n\t\tfor (let n = 0; n < colTypes.length; n++) this.assert(ds.colType(n) == colTypes[n], 'column#' + (n + 1) + ' wrong type');\n\t\t\n\t\tthis.assert(ds.getMolecule(0, 0).numAtoms == 1, 'row 1: invalid molecule');\n\t\tthis.assert(ds.getString(0, 1) == 'string', 'row 1: invalid string');\n\t\tthis.assert(ds.getInteger(0, 2) == 1, 'row 1: invalid integer');\n\t\tthis.assert(ds.getReal(0, 3) == 1.5, 'row 1: invalid real');\n\t\tthis.assert(ds.getBoolean(0, 4) == true, 'row 1: invalid boolean');\n\n\t\tthis.assert(ds.getMolecule(1, 0).numAtoms == 1, 'row 2: invalid molecule');\n\t\tfor (let n = 1; n < ds.numCols; n++) this.assert(ds.isNull(1, n), 'row 2, column#' + (n + 1) + ' supposed to be null');\t\t\n\t}\n\n\tpublic async calcStrictArom():Promise<void>\n\t{\n\t\tthis.assert(this.molStereo != null, 'molecule not loaded');\n\t\tlet meta = MetaMolecule.createStrict(this.molStereo);\n\t\tthis.assert(meta.atomArom != null, 'no aromaticity obtained');\n\t\tfor (let n = 1; n <= 10; n++) this.assert(meta.isAtomAromatic(n), 'atom #' + n + ' supposed to be aromatic');\n\t\tfor (let n = 1; n <= 10; n++) this.assert(meta.isBondAromatic(n), 'bond #' + n + ' supposed to be aromatic');\n\t}\n\n\tpublic async calcStereoChem():Promise<void>\n\t{\n\t\tthis.assert(this.molStereo != null, 'molecule not loaded');\n\t\tlet meta = MetaMolecule.createStrictRubric(this.molStereo);\n\t\tthis.assert(meta.rubricTetra != null, 'no tetrahedral rubric obtained');\n\t\tthis.assert(meta.rubricSides != null, 'no cis/trans rubric obtained');\n\t\tlet stereo = Stereochemistry.create(meta);\n\t\t\n\t\tlet tet11 = stereo.atomTetraChirality(11); \n\t\tthis.assert(tet11 == Stereochemistry.STEREO_NEG, 'atom 11: incorrect stereochemistry, got ' + tet11);\n\t\tlet tet19 = stereo.atomTetraChirality(19);\n\t\tthis.assert(tet19 == Stereochemistry.STEREO_POS, 'atom 19: incorrect stereochemistry, got ' + tet19);\n\t\tlet tet20 = stereo.atomTetraChirality(20);\n\t\tthis.assert(tet20 == Stereochemistry.STEREO_POS, 'atom 20: incorrect stereochemistry, got ' + tet20);\n\t\tlet side26 = stereo.bondSideStereo(26);\n\t\tthis.assert(side26 == Stereochemistry.STEREO_NEG, 'bond 26: incorrect stereochemistry, got ' + side26);\n\t}\n\n\tpublic async calcFingerprints():Promise<void>\n\t{\n\t\tthis.assert(this.dsCircular != null, 'datasheet not loaded');\n\t\t\n\t\tconst ds = this.dsCircular;\n\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t{\n\t\t\tlet mol = ds.getMolecule(n, 'Molecule');\n\t\t\tlet ecfp0:number[] = [], ecfp2:number[] = [], ecfp4:number[] = [], ecfp6:number[] = [];\n\t\t\tfor (let fp of ds.getString(n, 'ECFP0').split(',')) if (fp.length > 0) ecfp0.push(parseInt(fp));\n\t\t\tfor (let fp of ds.getString(n, 'ECFP2').split(',')) if (fp.length > 0) ecfp2.push(parseInt(fp));\n\t\t\tfor (let fp of ds.getString(n, 'ECFP4').split(',')) if (fp.length > 0) ecfp4.push(parseInt(fp));\n\t\t\tfor (let fp of ds.getString(n, 'ECFP6').split(',')) if (fp.length > 0) ecfp6.push(parseInt(fp));\n\t\t\tVec.sort(ecfp0);\n\t\t\tVec.sort(ecfp2);\n\t\t\tVec.sort(ecfp4);\n\t\t\tVec.sort(ecfp6);\n\n\t\t\tlet circ = CircularFingerprints.create(mol, CircularFingerprints.CLASS_ECFP6);\n\t\t\tlet got:number[][] = [[], [], [], []];\n\t\t\tfor (let fp of circ.getFingerprints()) if (got[fp.iteration].indexOf(fp.hashCode) < 0) got[fp.iteration].push(fp.hashCode);\n\t\t\tfor (let ecfp of got) Vec.sort(ecfp);\n\n\t\t\tthis.assert(Vec.equals(ecfp0, got[0]), 'row#' + (n + 1) + ', iter#0: wanted ' + ecfp0 + ', got ' + got[0]);\n\t\t\tthis.assert(Vec.equals(ecfp2, got[1]), 'row#' + (n + 1) + ', iter#1: wanted ' + ecfp2 + ', got ' + got[1]);\n\t\t\tthis.assert(Vec.equals(ecfp4, got[2]), 'row#' + (n + 1) + ', iter#2: wanted ' + ecfp4 + ', got ' + got[2]);\n\t\t\tthis.assert(Vec.equals(ecfp6, got[3]), 'row#' + (n + 1) + ', iter#3: wanted ' + ecfp6 + ', got ' + got[3]);\n\t\t}\n\t}\n\n\tpublic async molfileRoundTrip():Promise<void>\n\t{\n\t\tconst ds = this.dsRoundtrip;\n\t\tfor (let n = 0; n < ds.numRows; n++)\n\t\t{\n\t\t\tlet strRow = 'row#' + (n + 1);\n\n\t\t\tlet mol = ds.getMolecule(n, 'Molecule');\n\t\t\tlet mdl = new MDLMOLWriter(mol).write();\n\n\t\t\tlet alt = new MDLMOLReader(mdl).parse();\n\t\t\tthis.assert(mol.numAtoms == alt.numAtoms && mol.numBonds == alt.numBonds, strRow + ', atom/bond count differs');\n\n\t\t\tlet problems:string[] = [];\n\n\t\t\tfor (let i = 1; i <= mol.numAtoms; i++)\n\t\t\t{\n\t\t\t\tif (mol.atomElement(i) != alt.atomElement(i)) problems.push(strRow + '/atom #' + i + ': elements different');\n\t\t\t\tif (mol.atomCharge(i) != alt.atomCharge(i)) problems.push(strRow + '/atom #' + i + ': charges different');\n\t\t\t\tif (mol.atomUnpaired(i) != alt.atomUnpaired(i)) problems.push(strRow + '/atom #' + i + ': unpaired different');\n\t\t\t\tif (mol.atomIsotope(i) != alt.atomIsotope(i)) problems.push(strRow + '/atom #' + i + ': isotope different');\n\t\t\t\tif (mol.atomMapNum(i) != alt.atomMapNum(i)) problems.push(strRow + '/atom #' + i + ': mapnum different');\n\t\t\t\tif (mol.atomHydrogens(i) != alt.atomHydrogens(i)) problems.push(strRow + '/atom #' + i + ': hydrogens different');\n\t\t\t\tif (mol.atomHExplicit(i) != alt.atomHExplicit(i)) problems.push(strRow + '/atom #' + i + ': explicitH different');\n\t\t\t}\n\t\t\tfor (let i = 1; i <= mol.numBonds; i++)\n\t\t\t{\n\t\t\t\tif (mol.bondOrder(i) != alt.bondOrder(i)) problems.push(strRow + '/bond #' + i + ': bond orders different');\n\t\t\t\tif (mol.bondType(i) != alt.bondType(i)) problems.push(strRow + '/bond #' + i + ': bond types different');\n\t\t\t}\n\n\t\t\tif (problems.length > 0)\n\t\t\t{\n\t\t\t\tconsole.log('Round trip problems:');\n\t\t\t\tfor (let p of problems) console.log(p);\n\t\t\t\tconsole.log('Original molecule:\\n' + mol);\n\t\t\t\tconsole.log('MDL Molfile CTAB:\\n' + mdl);\n\t\t\t\tconsole.log('Parsed back molecule:\\n' + alt);\n\t\t\t}\n\t\t\tthis.assert(problems.length == 0, problems.join('; '));\n\n\t\t\tlet wantMDL = ds.getString(n, 'Molfile');\n\t\t\tif (mdl.trim() != orBlank(wantMDL).trim())\n\t\t\t{\n\t\t\t\tconsole.log(strRow);\n\n\t\t\t\tif (!wantMDL) console.log('Molfile missing from validation data.'); else console.log('Desired Molfile:\\n' + wantMDL);\n\t\t\t\tconsole.log('Got Molfile:\\n' + mdl);\n\n\t\t\t\tlet linesWant = wantMDL.split('\\n'), linesGot = mdl.split('\\n');\n\t\t\t\tfor (let i = 0; i < Math.max(linesWant.length, linesGot.length); i++) if (linesWant[i] != linesGot[i])\n\t\t\t\t{\n\t\t\t\t\tconsole.log(`Line #${i + 1}: want [${linesWant[i]}], got [${linesGot[i]}]`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.assert(false, strRow + ': initial Molfile invalid');\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2016 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n    \n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {readTextURL} from '@wmk/util/util';\nimport {Validation} from './Validation';\nimport {DataSheetStream} from '@wmk/io/DataSheetStream';\nimport {Experiment} from '@wmk/aspect/Experiment';\n\n/*\n\tHeadless validation: reaction tests - validating the Experiment aspect and related functionality\n*/\n\nexport class ValidationHeadlessReaction extends Validation\n{\n\tprivate strExperiment:string;\n\n\tconstructor(private urlBase:string)\n\t{\n\t\tsuper();\n\t\tthis.add('Experiment aspect', this.confirmAspect);\n\t}\n\n\tpublic async init():Promise<void>\n\t{\n\t\tthis.strExperiment = await readTextURL(this.urlBase + 'experiment.ds');\n\t}\n\n\tpublic async confirmAspect():Promise<void>\n\t{\n\t\tthis.assert(!!this.strExperiment, 'datasheet not loaded');\n\t\tlet ds = DataSheetStream.readXML(this.strExperiment);\n\t\tthis.assert(ds != null, 'parsing failed');\n\t\tthis.assert(Experiment.isExperiment(ds), 'aspect claimed not an Experiment');\n\n\t\tlet xs = new Experiment(ds);\n\t\tlet entry = xs.getEntry(0);\n\t\tthis.assert(entry != null, 'null entry returned');\n\t\tthis.assert(entry.steps.length == 2, 'reaction supposed to be 2 steps, got ' + entry.steps.length);\n\t\tthis.assert(entry.steps[0].reactants.length == 1, 'require step 1: #reactants = 1'); \n\t\tthis.assert(entry.steps[0].reagents.length == 3, 'require step 1: #reagents = 3'); \n\t\tthis.assert(entry.steps[0].products.length == 2, 'require step 1: #products = 2'); \n\t\tthis.assert(entry.steps[1].reactants.length == 0, 'require step 2: #reactants = 0'); \n\t\tthis.assert(entry.steps[1].reagents.length == 1, 'require step 2: #reagents = 1'); \n\t\tthis.assert(entry.steps[1].products.length == 2, 'require step 2: #products = 2'); \n\t}\n}\n\n","/*\n    WebMolKit\n\n    (c) 2010-2016 Molecular Materials Informatics, Inc.\n\n    All rights reserved\n    \n    http://molmatinf.com\n\n\t[PKG=webmolkit]\n*/\n\nimport {DOM, dom} from '../../src/util/dom';\nimport {Validation} from './Validation';\n\n/*\n    Validation test execution: runs through all the tests defined in a Validation object, and renders the results into an HTML DOM. \n*/\n\nexport class WebValExec\n{\n\tconstructor(private validation:Validation)\n\t{\n\t}\n\n\tpublic async runTests(parent:any)\n\t{\n\t\tlet domParent = dom(parent);\n\n\t\tdomParent.empty();\n\n\t\tif (this.validation.setupError)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(domParent).css({'color': 'red'});\n\t\t\tdiv.setText('Setup failed: ' + this.validation.setupError);\n\t\t\treturn;\n\t\t}\n\n\t\tlet table = dom('<table/>').appendTo(domParent);\n\n\t\tlet tdStatus:DOM[] = [], tdInfo:DOM[] = [];\n\n\t\tfor (let n = 0; n < this.validation.count; n++)\n\t\t{\n\t\t\tlet tr = dom('<tr/>').appendTo(table);\n\n\t\t\tlet td = dom('<td valign=\"top\"/>').appendTo(tr);\n\t\t\ttdStatus.push(td);\n\n\t\t\ttd = dom('<td valign=\"top\"></td>').appendTo(tr);\n\t\t\ttd.setText(this.validation.getTitle(n));\n\t\t\ttdInfo.push(td);\n\t\t}\n\n\t\tfor (let n = 0; n < this.validation.count; n++)\n\t\t{\n\t\t\ttdStatus[n].setHTML('&#9744;');\n\n\t\t\tlet [success, message, time] = await this.validation.runTest(n);\n\t\t\tif (success)\n\t\t\t{\n\t\t\t\ttdStatus[n].setHTML('&#9745;');\n\t\t\t\tif (time >= 0.001)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span style=\"color: #909090;\"/>').appendTo(tdInfo[n]);\n\t\t\t\t\tspan.setText(' (' + time.toFixed(3) + ' sec)');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttdStatus[n].setHTML('<span style=\"color: red;\">&#9746;</span>');\n\t\t\t\tlet para = dom('<p style=\"color: purple; margin-top: 0;\"/>').appendTo(tdInfo[n]);\n\t\t\t\tpara.setText(message ? message : 'failed');\n\t\t\t\ttdStatus[n].setCSS('background-color', '#FFF0F0');\n\t\t\t\ttdInfo[n].setCSS('background-color', '#FFF0F0');\n\t\t\t} \n\t\t}\n\t}\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './index-src';\n\nexport * from '../val/src/Validation';\nexport * from '../val/src/ValidationHeadlessBasic';\nexport * from '../val/src/ValidationHeadlessMolecule';\nexport * from '../val/src/ValidationHeadlessReaction';\nexport * from '../val/src/WebValExec';"],"names":[],"sourceRoot":""}